{
  "CompileTimeLQP" : {
    "LQP" : {
      "operators" : {
        "45" : {
          "sign" : -328680832,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 2292368272,
          "rowCount" : 143273017,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [cs_item_sk#112, cs_sold_date_sk#131] "
        },
        "98" : {
          "sign" : 668390983,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
          "sizeInBytes" : 10408960,
          "rowCount" : 136960,
          "isRuntime" : false,
          "predicate" : " (unknown) Aggregate Arguments: [i_brand_id#566, i_class_id#568, i_category_id#570], [store AS channel#6, i_brand_id#566, i_class_id#568, i_category_id#570, sum((cast(ss_quantity#545 as decimal(10,0)) * ss_list_price#547)) AS sales#7, count(1) AS number_sales#8L] "
        },
        "113" : {
          "sign" : 7146484,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 2430492,
          "rowCount" : 202541,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [i_item_sk#25 AS ss_item_sk#15] "
        },
        "34" : {
          "sign" : -117080718,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 17256,
          "rowCount" : 1438,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [d_date_sk#70] "
        },
        "67" : {
          "sign" : -204502346,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 4860984,
          "rowCount" : 202541,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: LeftSemi, (i_item_sk#486 = ss_item_sk#15) "
        },
        "120" : {
          "sign" : 85311598,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 5310811700,
          "rowCount" : 265540585,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#69 = d_date_sk#70) "
        },
        "93" : {
          "sign" : 291266688,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 14972593792,
          "rowCount" : 71983624,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ws_sold_time_sk#401, ws_ship_date_sk#402, ws_item_sk#403, ws_bill_customer_sk#404, ws_bill_cdemo_sk#405, ws_bill_hdemo_sk#406, ws_bill_addr_sk#407, ws_ship_customer_sk#408, ws_ship_cdemo_sk#409, ws_ship_hdemo_sk#410, ws_ship_addr_sk#411, ws_web_page_sk#412, ws_web_site_sk#413, ws_ship_mode_sk#414, ws_warehouse_sk#415, ws_promo_sk#416, ws_order_number#417L, ws_quantity#418, ws_wholesale_cost#419, ws_list_price#420, ws_sales_price#421, ws_ext_discount_amt#422, ws_ext_sales_price#423, ws_ext_wholesale_cost#424, ... 10 more fields], `spark_catalog`.`tpcds_100`.`web_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "12" : {
          "sign" : -1361526028,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 41806893656,
          "rowCount" : 275045353,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: ((isnotnull(ss_item_sk#464) AND isnotnull(ss_sold_date_sk#485)) AND dynamicpruning#719 [ss_sold_date_sk#485]) "
        },
        "66" : {
          "sign" : 1329597839,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 86904000,
          "rowCount" : 204000,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [i_item_sk#238, i_item_id#239, i_rec_start_date#240, i_rec_end_date#241, i_item_desc#242, i_current_price#243, i_wholesale_cost#244, i_brand_id#245, i_brand#246, i_class_id#247, i_class#248, i_category_id#249, i_category#250, i_manufact_id#251, i_manufact#252, i_size#253, i_formulation#254, i_color#255, i_units#256, i_container#257, i_manager_id#258, i_product_name#259], `spark_catalog`.`tpcds_100`.`item`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "89" : {
          "sign" : 107287451,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 1389912100,
          "rowCount" : 69495605,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [ws_quantity#418 AS quantity#20, ws_list_price#420 AS list_price#21] "
        },
        "51" : {
          "sign" : 1925877902,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 4896000,
          "rowCount" : 204000,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [i_item_sk#188, i_brand_id#195, i_class_id#197, i_category_id#199] "
        },
        "124" : {
          "sign" : 1228236899,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 2877489060,
          "rowCount" : 143874453,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [i_brand_id#195, i_class_id#197, i_category_id#199] "
        },
        "84" : {
          "sign" : 1407799931,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 29800787536,
          "rowCount" : 143273017,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: (isnotnull(cs_sold_date_sk#372) AND dynamicpruning#705 [cs_sold_date_sk#372]) "
        },
        "8" : {
          "sign" : -1656198612,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 6372974040,
          "rowCount" : 265540585,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [ss_item_sk#464, ss_quantity#472, ss_list_price#474] "
        },
        "73" : {
          "sign" : -1223996509,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 5310811700,
          "rowCount" : 265540585,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [ss_quantity#297 AS quantity#16, ss_list_price#299 AS list_price#17] "
        },
        "78" : {
          "sign" : 832884870,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 17256,
          "rowCount" : 1438,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [d_date_sk#311] "
        },
        "19" : {
          "sign" : 1929459056,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 17970054,
          "rowCount" : 73049,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#625, d_date_id#626, d_date#627, d_month_seq#628, d_week_seq#629, d_quarter_seq#630, d_year#631, d_dow#632, d_moy#633, d_dom#634, d_qoy#635, d_fy_year#636, d_fy_quarter_seq#637, d_fy_week_seq#638, d_day_name#639, d_quarter_name#640, d_holiday#641, d_weekend#642, d_following_holiday#643, d_first_dom#644, d_last_dom#645, d_same_day_ly#646, d_same_day_lq#647, d_current_day#648, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "100" : {
          "sign" : 1633861596,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 11490316840,
          "rowCount" : 287257921,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: Inner, (ss_item_sk#537 = i_item_sk#559) "
        },
        "23" : {
          "sign" : -1756391561,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 86282466,
          "rowCount" : 202541,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: ((isnotnull(i_brand_id#32) AND isnotnull(i_class_id#34)) AND isnotnull(i_category_id#36)) "
        },
        "62" : {
          "sign" : -170884259,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 353748,
          "rowCount" : 1438,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: ((isnotnull(d_year#266) AND ((d_year#266 >= 1998) AND (d_year#266 <= 2000))) AND isnotnull(d_date_sk#260)) "
        },
        "135" : {
          "sign" : 648573375,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 14972593792,
          "rowCount" : 71983624,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: ((isnotnull(ws_item_sk#134) AND isnotnull(ws_sold_date_sk#165)) AND dynamicpruning#715 [ws_sold_date_sk#165]) "
        },
        "128" : {
          "sign" : 403671131,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 2292368272,
          "rowCount" : 143273017,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [cs_item_sk#112, cs_sold_date_sk#131] "
        },
        "4" : {
          "sign" : -803445730,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 10408960,
          "rowCount" : 136960,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: (isnotnull(sales#1) AND (cast(sales#1 as decimal(32,6)) > cast(scalar-subquery#5 [] as decimal(32,6)))) "
        },
        "121" : {
          "sign" : -1437122576,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 4400725648,
          "rowCount" : 275045353,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [ss_item_sk#48, ss_sold_date_sk#69] "
        },
        "88" : {
          "sign" : 832562854,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 17970054,
          "rowCount" : 73049,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#373, d_date_id#374, d_date#375, d_month_seq#376, d_week_seq#377, d_quarter_seq#378, d_year#379, d_dow#380, d_moy#381, d_dom#382, d_qoy#383, d_fy_year#384, d_fy_quarter_seq#385, d_fy_week_seq#386, d_day_name#387, d_quarter_name#388, d_holiday#389, d_weekend#390, d_following_holiday#391, d_first_dom#392, d_last_dom#393, d_same_day_ly#394, d_same_day_lq#395, d_current_day#396, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "77" : {
          "sign" : -425535709,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 41806893656,
          "rowCount" : 275045353,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#288, ss_item_sk#289, ss_customer_sk#290, ss_cdemo_sk#291, ss_hdemo_sk#292, ss_addr_sk#293, ss_store_sk#294, ss_promo_sk#295, ss_ticket_number#296L, ss_quantity#297, ss_wholesale_cost#298, ss_list_price#299, ss_sales_price#300, ss_ext_discount_amt#301, ss_ext_sales_price#302, ss_ext_wholesale_cost#303, ss_ext_list_price#304, ss_ext_tax#305, ss_coupon_amt#306, ss_net_paid#307, ss_net_paid_inc_tax#308, ss_net_profit#309, ss_sold_date_sk#310], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "40" : {
          "sign" : -1549188011,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 86904000,
          "rowCount" : 204000,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [i_item_sk#166, i_item_id#167, i_rec_start_date#168, i_rec_end_date#169, i_item_desc#170, i_current_price#171, i_wholesale_cost#172, i_brand_id#173, i_brand#174, i_class_id#175, i_class#176, i_category_id#177, i_category#178, i_manufact_id#179, i_manufact#180, i_size#181, i_formulation#182, i_color#183, i_units#184, i_container#185, i_manager_id#186, i_product_name#187], `spark_catalog`.`tpcds_100`.`item`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "110" : {
          "sign" : 60063917,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 24,
          "rowCount" : 2,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [d_week_seq#657] "
        },
        "15" : {
          "sign" : -1454392761,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 17970054,
          "rowCount" : 73049,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: ((isnotnull(d_week_seq#512) AND (d_week_seq#512 = scalar-subquery#4 [])) AND isnotnull(d_date_sk#508)) "
        },
        "11" : {
          "sign" : 545304583,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 7701269884,
          "rowCount" : 275045353,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [ss_item_sk#464, ss_quantity#472, ss_list_price#474, ss_sold_date_sk#485] "
        },
        "104" : {
          "sign" : 109421619,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 7701269884,
          "rowCount" : 275045353,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [ss_item_sk#537, ss_quantity#545, ss_list_price#547, ss_sold_date_sk#558] "
        },
        "90" : {
          "sign" : -1458997564,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 1945876940,
          "rowCount" : 69495605,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: Inner, (ws_sold_date_sk#434 = d_date_sk#435) "
        },
        "9" : {
          "sign" : -147393218,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 8497298720,
          "rowCount" : 265540585,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#485 = d_date_sk#508) "
        },
        "139" : {
          "sign" : 1289520916,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 86904000,
          "rowCount" : 204000,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [i_item_sk#559, i_item_id#560, i_rec_start_date#561, i_rec_end_date#562, i_item_desc#563, i_current_price#564, i_wholesale_cost#565, i_brand_id#566, i_brand#567, i_class_id#568, i_class#569, i_category_id#570, i_category#571, i_manufact_id#572, i_manufact#573, i_size#574, i_formulation#575, i_color#576, i_units#577, i_container#578, i_manager_id#579, i_product_name#580], `spark_catalog`.`tpcds_100`.`item`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "132" : {
          "sign" : -1118464168,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 833947260,
          "rowCount" : 69495605,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [ws_item_sk#134] "
        },
        "44" : {
          "sign" : -961960786,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 2770325240,
          "rowCount" : 138516262,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: Inner, (cs_sold_date_sk#131 = d_date_sk#210) "
        },
        "33" : {
          "sign" : 1104597854,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 41806893656,
          "rowCount" : 275045353,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#47, ss_item_sk#48, ss_customer_sk#49, ss_cdemo_sk#50, ss_hdemo_sk#51, ss_addr_sk#52, ss_store_sk#53, ss_promo_sk#54, ss_ticket_number#55L, ss_quantity#56, ss_wholesale_cost#57, ss_list_price#58, ss_sales_price#59, ss_ext_discount_amt#60, ss_ext_sales_price#61, ss_ext_wholesale_cost#62, ss_ext_list_price#63, ss_ext_tax#64, ss_coupon_amt#65, ss_net_paid#66, ss_net_paid_inc_tax#67, ss_net_profit#68, ss_sold_date_sk#69], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "117" : {
          "sign" : 690757065,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 5745158420,
          "rowCount" : 287257921,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [i_brand_id#173 AS brand_id#12, i_class_id#175 AS class_id#13, i_category_id#177 AS category_id#14] "
        },
        "22" : {
          "sign" : 2089743597,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 4860984,
          "rowCount" : 202541,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [i_item_sk#25, i_brand_id#32, i_class_id#34, i_category_id#36] "
        },
        "56" : {
          "sign" : -1206750467,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 833947260,
          "rowCount" : 69495605,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [ws_item_sk#134] "
        },
        "55" : {
          "sign" : -1207128660,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 2013673340,
          "rowCount" : 71916905,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: Inner, (ws_item_sk#134 = i_item_sk#238) "
        },
        "26" : {
          "sign" : -2124722644,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
          "sizeInBytes" : 2739200,
          "rowCount" : 136960,
          "isRuntime" : false,
          "predicate" : " (unknown) Aggregate Arguments: [brand_id#12, class_id#13, category_id#14], [brand_id#12, class_id#13, category_id#14] "
        },
        "134" : {
          "sign" : 341532090,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 1151737984,
          "rowCount" : 71983624,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [ws_item_sk#134, ws_sold_date_sk#165] "
        },
        "50" : {
          "sign" : 2095933194,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 17970054,
          "rowCount" : 73049,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#210, d_date_id#211, d_date#212, d_month_seq#213, d_week_seq#214, d_quarter_seq#215, d_year#216, d_dow#217, d_moy#218, d_dom#219, d_qoy#220, d_fy_year#221, d_fy_quarter_seq#222, d_fy_week_seq#223, d_day_name#224, d_quarter_name#225, d_holiday#226, d_weekend#227, d_following_holiday#228, d_first_dom#229, d_last_dom#230, d_same_day_ly#231, d_same_day_lq#232, d_current_day#233, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "123" : {
          "sign" : -818914061,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 4860984,
          "rowCount" : 202541,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: LeftSemi, (((i_brand_id#173 <=> i_brand_id#195) AND (i_class_id#175 <=> i_class_id#197)) AND (i_category_id#177 <=> i_category_id#199)) "
        },
        "37" : {
          "sign" : -1125244392,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 4860984,
          "rowCount" : 202541,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: LeftSemi, (((i_brand_id#173 <=> i_brand_id#195) AND (i_class_id#175 <=> i_class_id#197)) AND (i_category_id#177 <=> i_category_id#199)) "
        },
        "68" : {
          "sign" : -534963260,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 4860984,
          "rowCount" : 202541,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [i_item_sk#486, i_brand_id#493, i_class_id#495, i_category_id#497] "
        },
        "61" : {
          "sign" : 451021869,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 17256,
          "rowCount" : 1438,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [d_date_sk#260] "
        },
        "107" : {
          "sign" : 829060304,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 876588,
          "rowCount" : 73049,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [d_date_sk#581] "
        },
        "13" : {
          "sign" : -249723244,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 41806893656,
          "rowCount" : 275045353,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#463, ss_item_sk#464, ss_customer_sk#465, ss_cdemo_sk#466, ss_hdemo_sk#467, ss_addr_sk#468, ss_store_sk#469, ss_promo_sk#470, ss_ticket_number#471L, ss_quantity#472, ss_wholesale_cost#473, ss_list_price#474, ss_sales_price#475, ss_ext_discount_amt#476, ss_ext_sales_price#477, ss_ext_wholesale_cost#478, ss_ext_list_price#479, ss_ext_tax#480, ss_coupon_amt#481, ss_net_paid#482, ss_net_paid_inc_tax#483, ss_net_profit#484, ss_sold_date_sk#485], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "46" : {
          "sign" : 2043501306,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 29800787536,
          "rowCount" : 143273017,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: ((isnotnull(cs_item_sk#112) AND isnotnull(cs_sold_date_sk#131)) AND dynamicpruning#708 [cs_sold_date_sk#131]) "
        },
        "99" : {
          "sign" : 128483020,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 9192253472,
          "rowCount" : 287257921,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [ss_quantity#545, ss_list_price#547, i_brand_id#566, i_class_id#568, i_category_id#570] "
        },
        "24" : {
          "sign" : 2096275601,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 86904000,
          "rowCount" : 204000,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [i_item_sk#25, i_item_id#26, i_rec_start_date#27, i_rec_end_date#28, i_item_desc#29, i_current_price#30, i_wholesale_cost#31, i_brand_id#32, i_brand#33, i_class_id#34, i_class#35, i_category_id#36, i_category#37, i_manufact_id#38, i_manufact#39, i_size#40, i_formulation#41, i_color#42, i_units#43, i_container#44, i_manager_id#45, i_product_name#46], `spark_catalog`.`tpcds_100`.`item`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "94" : {
          "sign" : -718336444,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 17256,
          "rowCount" : 1438,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [d_date_sk#435] "
        },
        "83" : {
          "sign" : 952793941,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 3438552408,
          "rowCount" : 143273017,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [cs_quantity#356, cs_list_price#358, cs_sold_date_sk#372] "
        },
        "35" : {
          "sign" : 1340377833,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 353748,
          "rowCount" : 1438,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: ((isnotnull(d_year#76) AND ((d_year#76 >= 1998) AND (d_year#76 <= 2000))) AND isnotnull(d_date_sk#70)) "
        },
        "16" : {
          "sign" : -1190797950,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 17970054,
          "rowCount" : 73049,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#508, d_date_id#509, d_date#510, d_month_seq#511, d_week_seq#512, d_quarter_seq#513, d_year#514, d_dow#515, d_moy#516, d_dom#517, d_qoy#518, d_fy_year#519, d_fy_quarter_seq#520, d_fy_week_seq#521, d_day_name#522, d_quarter_name#523, d_holiday#524, d_weekend#525, d_following_holiday#526, d_first_dom#527, d_last_dom#528, d_same_day_ly#529, d_same_day_lq#530, d_current_day#531, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "79" : {
          "sign" : 481602201,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 353748,
          "rowCount" : 1438,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: ((isnotnull(d_year#317) AND ((d_year#317 >= 1998) AND (d_year#317 <= 2000))) AND isnotnull(d_date_sk#311)) "
        },
        "5" : {
          "sign" : 1058180971,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
          "sizeInBytes" : 10408960,
          "rowCount" : 136960,
          "isRuntime" : false,
          "predicate" : " (unknown) Aggregate Arguments: [i_brand_id#493, i_class_id#495, i_category_id#497], [store AS channel#0, i_brand_id#493, i_class_id#495, i_category_id#497, sum((cast(ss_quantity#472 as decimal(10,0)) * ss_list_price#474)) AS sales#1, count(1) AS number_sales#2L] "
        },
        "103" : {
          "sign" : 1691916256,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 7701269884,
          "rowCount" : 275045353,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: LeftSemi, (ss_item_sk#537 = ss_item_sk#15) "
        },
        "112" : {
          "sign" : -1986668976,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 17970054,
          "rowCount" : 73049,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#653, d_date_id#654, d_date#655, d_month_seq#656, d_week_seq#657, d_quarter_seq#658, d_year#659, d_dow#660, d_moy#661, d_dom#662, d_qoy#663, d_fy_year#664, d_fy_quarter_seq#665, d_fy_week_seq#666, d_day_name#667, d_quarter_name#668, d_holiday#669, d_weekend#670, d_following_holiday#671, d_first_dom#672, d_last_dom#673, d_same_day_ly#674, d_same_day_lq#675, d_current_day#676, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "72" : {
          "sign" : -427111221,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Union",
          "sizeInBytes" : 9471049040,
          "rowCount" : 473552452,
          "isRuntime" : false,
          "predicate" : " (unknown) Union Arguments: false, false "
        },
        "10" : {
          "sign" : 1631892028,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 7701269884,
          "rowCount" : 275045353,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: LeftSemi, (ss_item_sk#464 = ss_item_sk#15) "
        },
        "59" : {
          "sign" : 1670550138,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 14972593792,
          "rowCount" : 71983624,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: ((isnotnull(ws_item_sk#134) AND isnotnull(ws_sold_date_sk#165)) AND dynamicpruning#709 [ws_sold_date_sk#165]) "
        },
        "87" : {
          "sign" : -925160823,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 353748,
          "rowCount" : 1438,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: ((isnotnull(d_year#379) AND ((d_year#379 >= 1998) AND (d_year#379 <= 2000))) AND isnotnull(d_date_sk#373)) "
        },
        "48" : {
          "sign" : 210308264,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 17256,
          "rowCount" : 1438,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [d_date_sk#210] "
        },
        "21" : {
          "sign" : 1418971112,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 7291476,
          "rowCount" : 202541,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: Inner, (((i_brand_id#32 = brand_id#12) AND (i_class_id#34 = class_id#13)) AND (i_category_id#36 = category_id#14)) "
        },
        "116" : {
          "sign" : -1595573342,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
          "sizeInBytes" : 2739200,
          "rowCount" : 136960,
          "isRuntime" : false,
          "predicate" : " (unknown) Aggregate Arguments: [brand_id#12, class_id#13, category_id#14], [brand_id#12, class_id#13, category_id#14] "
        },
        "76" : {
          "sign" : -1084898816,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 41806893656,
          "rowCount" : 275045353,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: (isnotnull(ss_sold_date_sk#310) AND dynamicpruning#704 [ss_sold_date_sk#310]) "
        },
        "138" : {
          "sign" : 1142651170,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 86282466,
          "rowCount" : 202541,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: (((isnotnull(i_item_sk#559) AND isnotnull(i_brand_id#566)) AND isnotnull(i_class_id#568)) AND isnotnull(i_category_id#570)) "
        },
        "54" : {
          "sign" : -2101411980,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 1438338100,
          "rowCount" : 71916905,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [i_brand_id#245, i_class_id#247, i_category_id#249] "
        },
        "43" : {
          "sign" : 2094788875,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 1662195144,
          "rowCount" : 138516262,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [cs_item_sk#112] "
        },
        "127" : {
          "sign" : 1360279945,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 2770325240,
          "rowCount" : 138516262,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: Inner, (cs_sold_date_sk#131 = d_date_sk#210) "
        },
        "65" : {
          "sign" : 427261396,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 86904000,
          "rowCount" : 204000,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: isnotnull(i_item_sk#238) "
        },
        "71" : {
          "sign" : 531262484,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
          "sizeInBytes" : 24,
          "rowCount" : 1,
          "isRuntime" : false,
          "predicate" : " (unknown) Aggregate Arguments: [avg((cast(quantity#16 as decimal(10,0)) * list_price#17)) AS average_sales#22] "
        },
        "57" : {
          "sign" : 619164016,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 1389912100,
          "rowCount" : 69495605,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: Inner, (ws_sold_date_sk#165 = d_date_sk#260) "
        },
        "108" : {
          "sign" : -1433950830,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 17970054,
          "rowCount" : 73049,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: ((isnotnull(d_week_seq#585) AND (d_week_seq#585 = scalar-subquery#10 [])) AND isnotnull(d_date_sk#581)) "
        },
        "32" : {
          "sign" : -1989715417,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 41806893656,
          "rowCount" : 275045353,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: ((isnotnull(ss_item_sk#48) AND isnotnull(ss_sold_date_sk#69)) AND dynamicpruning#707 [ss_sold_date_sk#69]) "
        },
        "80" : {
          "sign" : 1965288366,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 17970054,
          "rowCount" : 73049,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#311, d_date_id#312, d_date#313, d_month_seq#314, d_week_seq#315, d_quarter_seq#316, d_year#317, d_dow#318, d_moy#319, d_dom#320, d_qoy#321, d_fy_year#322, d_fy_quarter_seq#323, d_fy_week_seq#324, d_day_name#325, d_quarter_name#326, d_holiday#327, d_weekend#328, d_following_holiday#329, d_first_dom#330, d_last_dom#331, d_same_day_ly#332, d_same_day_lq#333, d_current_day#334, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "106" : {
          "sign" : 868651285,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 41806893656,
          "rowCount" : 275045353,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#536, ss_item_sk#537, ss_customer_sk#538, ss_cdemo_sk#539, ss_hdemo_sk#540, ss_addr_sk#541, ss_store_sk#542, ss_promo_sk#543, ss_ticket_number#544L, ss_quantity#545, ss_wholesale_cost#546, ss_list_price#547, ss_sales_price#548, ss_ext_discount_amt#549, ss_ext_sales_price#550, ss_ext_wholesale_cost#551, ss_ext_list_price#552, ss_ext_tax#553, ss_coupon_amt#554, ss_net_paid#555, ss_net_paid_inc_tax#556, ss_net_profit#557, ss_sold_date_sk#558], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "137" : {
          "sign" : 278532349,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 4860984,
          "rowCount" : 202541,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [i_item_sk#559, i_brand_id#566, i_class_id#568, i_category_id#570] "
        },
        "82" : {
          "sign" : -720625362,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 3878455336,
          "rowCount" : 138516262,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: Inner, (cs_sold_date_sk#372 = d_date_sk#373) "
        },
        "49" : {
          "sign" : -1001112527,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 353748,
          "rowCount" : 1438,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: ((isnotnull(d_year#216) AND ((d_year#216 >= 1998) AND (d_year#216 <= 2000))) AND isnotnull(d_date_sk#210)) "
        },
        "6" : {
          "sign" : -469899214,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 9192253472,
          "rowCount" : 287257921,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [ss_quantity#472, ss_list_price#474, i_brand_id#493, i_class_id#495, i_category_id#497] "
        },
        "126" : {
          "sign" : -587431152,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 1662195144,
          "rowCount" : 138516262,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [cs_item_sk#112] "
        },
        "36" : {
          "sign" : -232749464,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 17970054,
          "rowCount" : 73049,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#70, d_date_id#71, d_date#72, d_month_seq#73, d_week_seq#74, d_quarter_seq#75, d_year#76, d_dow#77, d_moy#78, d_dom#79, d_qoy#80, d_fy_year#81, d_fy_quarter_seq#82, d_fy_week_seq#83, d_day_name#84, d_quarter_name#85, d_holiday#86, d_weekend#87, d_following_holiday#88, d_first_dom#89, d_last_dom#90, d_same_day_ly#91, d_same_day_lq#92, d_current_day#93, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "1" : {
          "sign" : 1975634082,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
          "sizeInBytes" : 19722240,
          "rowCount" : 136960,
          "isRuntime" : false,
          "predicate" : " (unknown) LocalLimit Arguments: 100 "
        },
        "39" : {
          "sign" : -685644650,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 86282466,
          "rowCount" : 202541,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: (isnotnull(i_item_sk#166) AND ((isnotnull(i_brand_id#173) AND isnotnull(i_class_id#175)) AND isnotnull(i_category_id#177))) "
        },
        "17" : {
          "sign" : 1248827729,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 36,
          "rowCount" : 3,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [d_week_seq#629] "
        },
        "25" : {
          "sign" : 94237679,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 2739200,
          "rowCount" : 136960,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: LeftSemi, (((brand_id#12 <=> i_brand_id#245) AND (class_id#13 <=> i_class_id#247)) AND (category_id#14 <=> i_category_id#249)) "
        },
        "60" : {
          "sign" : 1159919426,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 14972593792,
          "rowCount" : 71983624,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ws_sold_time_sk#132, ws_ship_date_sk#133, ws_item_sk#134, ws_bill_customer_sk#135, ws_bill_cdemo_sk#136, ws_bill_hdemo_sk#137, ws_bill_addr_sk#138, ws_ship_customer_sk#139, ws_ship_cdemo_sk#140, ws_ship_hdemo_sk#141, ws_ship_addr_sk#142, ws_web_page_sk#143, ws_web_site_sk#144, ws_ship_mode_sk#145, ws_warehouse_sk#146, ws_promo_sk#147, ws_order_number#148L, ws_quantity#149, ws_wholesale_cost#150, ws_list_price#151, ws_sales_price#152, ws_ext_discount_amt#153, ws_ext_sales_price#154, ws_ext_wholesale_cost#155, ... 10 more fields], `spark_catalog`.`tpcds_100`.`web_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "14" : {
          "sign" : -2136113960,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 876588,
          "rowCount" : 73049,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [d_date_sk#508] "
        },
        "133" : {
          "sign" : -2012730827,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 1389912100,
          "rowCount" : 69495605,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: Inner, (ws_sold_date_sk#165 = d_date_sk#260) "
        },
        "47" : {
          "sign" : -1958078640,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 29800787536,
          "rowCount" : 143273017,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [cs_sold_time_sk#98, cs_ship_date_sk#99, cs_bill_customer_sk#100, cs_bill_cdemo_sk#101, cs_bill_hdemo_sk#102, cs_bill_addr_sk#103, cs_ship_customer_sk#104, cs_ship_cdemo_sk#105, cs_ship_hdemo_sk#106, cs_ship_addr_sk#107, cs_call_center_sk#108, cs_catalog_page_sk#109, cs_ship_mode_sk#110, cs_warehouse_sk#111, cs_item_sk#112, cs_promo_sk#113, cs_order_number#114L, cs_quantity#115, cs_wholesale_cost#116, cs_list_price#117, cs_sales_price#118, cs_ext_discount_amt#119, cs_ext_sales_price#120, cs_ext_wholesale_cost#121, ... 10 more fields], `spark_catalog`.`tpcds_100`.`catalog_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "122" : {
          "sign" : -2037162260,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 41806893656,
          "rowCount" : 275045353,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: ((isnotnull(ss_item_sk#48) AND isnotnull(ss_sold_date_sk#69)) AND dynamicpruning#713 [ss_sold_date_sk#69]) "
        },
        "111" : {
          "sign" : -1822276042,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 492,
          "rowCount" : 2,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: (((isnotnull(d_year#659) AND isnotnull(d_moy#661)) AND isnotnull(d_dom#662)) AND (((d_year#659 = 1998) AND (d_moy#661 = 12)) AND (d_dom#662 = 16))) "
        },
        "102" : {
          "sign" : 44415284,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 8497298720,
          "rowCount" : 265540585,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#558 = d_date_sk#581) "
        },
        "31" : {
          "sign" : 2017278635,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 4400725648,
          "rowCount" : 275045353,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [ss_item_sk#48, ss_sold_date_sk#69] "
        },
        "96" : {
          "sign" : -428496054,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 17970054,
          "rowCount" : 73049,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#435, d_date_id#436, d_date#437, d_month_seq#438, d_week_seq#439, d_quarter_seq#440, d_year#441, d_dow#442, d_moy#443, d_dom#444, d_qoy#445, d_fy_year#446, d_fy_quarter_seq#447, d_fy_week_seq#448, d_day_name#449, d_quarter_name#450, d_holiday#451, d_weekend#452, d_following_holiday#453, d_first_dom#454, d_last_dom#455, d_same_day_ly#456, d_same_day_lq#457, d_current_day#458, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "69" : {
          "sign" : -224321684,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 86282466,
          "rowCount" : 202541,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: (((isnotnull(i_item_sk#486) AND isnotnull(i_brand_id#493)) AND isnotnull(i_class_id#495)) AND isnotnull(i_category_id#497)) "
        },
        "95" : {
          "sign" : 283041552,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 353748,
          "rowCount" : 1438,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: ((isnotnull(d_year#441) AND ((d_year#441 >= 1998) AND (d_year#441 <= 2000))) AND isnotnull(d_date_sk#435)) "
        },
        "58" : {
          "sign" : -590660107,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 1151737984,
          "rowCount" : 71983624,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [ws_item_sk#134, ws_sold_date_sk#165] "
        },
        "64" : {
          "sign" : -1915561270,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 4896000,
          "rowCount" : 204000,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [i_item_sk#238, i_brand_id#245, i_class_id#247, i_category_id#249] "
        },
        "53" : {
          "sign" : -929612703,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 86904000,
          "rowCount" : 204000,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [i_item_sk#188, i_item_id#189, i_rec_start_date#190, i_rec_end_date#191, i_item_desc#192, i_current_price#193, i_wholesale_cost#194, i_brand_id#195, i_brand#196, i_class_id#197, i_class#198, i_category_id#199, i_category#200, i_manufact_id#201, i_manufact#202, i_size#203, i_formulation#204, i_color#205, i_units#206, i_container#207, i_manager_id#208, i_product_name#209], `spark_catalog`.`tpcds_100`.`item`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "42" : {
          "sign" : 1948543996,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 4028484684,
          "rowCount" : 143874453,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: Inner, (cs_item_sk#112 = i_item_sk#188) "
        },
        "75" : {
          "sign" : -1370797898,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 6601088472,
          "rowCount" : 275045353,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [ss_quantity#297, ss_list_price#299, ss_sold_date_sk#310] "
        },
        "115" : {
          "sign" : 1769701844,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 2739200,
          "rowCount" : 136960,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: LeftSemi, (((brand_id#12 <=> i_brand_id#245) AND (class_id#13 <=> i_class_id#247)) AND (category_id#14 <=> i_category_id#249)) "
        },
        "109" : {
          "sign" : -1639037627,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 17970054,
          "rowCount" : 73049,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#581, d_date_id#582, d_date#583, d_month_seq#584, d_week_seq#585, d_quarter_seq#586, d_year#587, d_dow#588, d_moy#589, d_dom#590, d_qoy#591, d_fy_year#592, d_fy_quarter_seq#593, d_fy_week_seq#594, d_day_name#595, d_quarter_name#596, d_holiday#597, d_weekend#598, d_following_holiday#599, d_first_dom#600, d_last_dom#601, d_same_day_ly#602, d_same_day_lq#603, d_current_day#604, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "0" : {
          "sign" : 1855061333,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
          "sizeInBytes" : 12000,
          "rowCount" : 100,
          "isRuntime" : false,
          "predicate" : " (unknown) GlobalLimit Arguments: 100 "
        },
        "20" : {
          "sign" : 1407049679,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 2430492,
          "rowCount" : 202541,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [i_item_sk#25 AS ss_item_sk#15] "
        },
        "27" : {
          "sign" : 218624297,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 5745158420,
          "rowCount" : 287257921,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [i_brand_id#173 AS brand_id#12, i_class_id#175 AS class_id#13, i_category_id#177 AS category_id#14] "
        },
        "70" : {
          "sign" : 1356068073,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 86904000,
          "rowCount" : 204000,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [i_item_sk#486, i_item_id#487, i_rec_start_date#488, i_rec_end_date#489, i_item_desc#490, i_current_price#491, i_wholesale_cost#492, i_brand_id#493, i_brand#494, i_class_id#495, i_class#496, i_category_id#497, i_category#498, i_manufact_id#499, i_manufact#500, i_size#501, i_formulation#502, i_color#503, i_units#504, i_container#505, i_manager_id#506, i_product_name#507], `spark_catalog`.`tpcds_100`.`item`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "2" : {
          "sign" : -2035451777,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
          "sizeInBytes" : 19722240,
          "rowCount" : 136960,
          "isRuntime" : false,
          "predicate" : " (unknown) Sort Arguments: [i_brand_id#493 ASC NULLS FIRST, i_class_id#495 ASC NULLS FIRST, i_category_id#497 ASC NULLS FIRST], true "
        },
        "86" : {
          "sign" : 1731429450,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 17256,
          "rowCount" : 1438,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [d_date_sk#373] "
        },
        "38" : {
          "sign" : -770532976,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 4860984,
          "rowCount" : 202541,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [i_item_sk#166, i_brand_id#173, i_class_id#175, i_category_id#177] "
        },
        "81" : {
          "sign" : -132469220,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 2770325240,
          "rowCount" : 138516262,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [cs_quantity#356 AS quantity#18, cs_list_price#358 AS list_price#19] "
        },
        "118" : {
          "sign" : -1805053607,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 8043221788,
          "rowCount" : 287257921,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: Inner, (ss_item_sk#48 = i_item_sk#166) "
        },
        "92" : {
          "sign" : -2024103393,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 14972593792,
          "rowCount" : 71983624,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: (isnotnull(ws_sold_date_sk#434) AND dynamicpruning#706 [ws_sold_date_sk#434]) "
        },
        "125" : {
          "sign" : 597694807,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 4028484684,
          "rowCount" : 143874453,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: Inner, (cs_item_sk#112 = i_item_sk#188) "
        },
        "18" : {
          "sign" : -1753135593,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 738,
          "rowCount" : 3,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: (((isnotnull(d_year#631) AND isnotnull(d_moy#633)) AND isnotnull(d_dom#634)) AND (((d_year#631 = 1999) AND (d_moy#633 = 12)) AND (d_dom#634 = 16))) "
        },
        "101" : {
          "sign" : -298038431,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 6372974040,
          "rowCount" : 265540585,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [ss_item_sk#537, ss_quantity#545, ss_list_price#547] "
        },
        "30" : {
          "sign" : 2143540435,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 5310811700,
          "rowCount" : 265540585,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#69 = d_date_sk#70) "
        },
        "7" : {
          "sign" : -616100474,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 11490316840,
          "rowCount" : 287257921,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: Inner, (ss_item_sk#464 = i_item_sk#486) "
        },
        "97" : {
          "sign" : 1706236903,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 10408960,
          "rowCount" : 136960,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: (isnotnull(sales#7) AND (cast(sales#7 as decimal(32,6)) > cast(scalar-subquery#11 [] as decimal(32,6)))) "
        },
        "130" : {
          "sign" : 248170745,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 1438338100,
          "rowCount" : 71916905,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [i_brand_id#245, i_class_id#247, i_category_id#249] "
        },
        "114" : {
          "sign" : -597916681,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 7291476,
          "rowCount" : 202541,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: Inner, (((i_brand_id#32 = brand_id#12) AND (i_class_id#34 = class_id#13)) AND (i_category_id#36 = category_id#14)) "
        },
        "129" : {
          "sign" : 799922517,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 29800787536,
          "rowCount" : 143273017,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: ((isnotnull(cs_item_sk#112) AND isnotnull(cs_sold_date_sk#131)) AND dynamicpruning#714 [cs_sold_date_sk#131]) "
        },
        "29" : {
          "sign" : -2068407856,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 3186487020,
          "rowCount" : 265540585,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [ss_item_sk#48] "
        },
        "41" : {
          "sign" : -454603704,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 2877489060,
          "rowCount" : 143874453,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [i_brand_id#195, i_class_id#197, i_category_id#199] "
        },
        "105" : {
          "sign" : 273369756,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 41806893656,
          "rowCount" : 275045353,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: ((isnotnull(ss_item_sk#537) AND isnotnull(ss_sold_date_sk#558)) AND dynamicpruning#726 [ss_sold_date_sk#558]) "
        },
        "63" : {
          "sign" : 1233068704,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 17970054,
          "rowCount" : 73049,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#260, d_date_id#261, d_date#262, d_month_seq#263, d_week_seq#264, d_quarter_seq#265, d_year#266, d_dow#267, d_moy#268, d_dom#269, d_qoy#270, d_fy_year#271, d_fy_quarter_seq#272, d_fy_week_seq#273, d_day_name#274, d_quarter_name#275, d_holiday#276, d_weekend#277, d_following_holiday#278, d_first_dom#279, d_last_dom#280, d_same_day_ly#281, d_same_day_lq#282, d_current_day#283, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "3" : {
          "sign" : 1846457348,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 19722240,
          "rowCount" : 136960,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: Inner, (((i_brand_id#493 = i_brand_id#566) AND (i_class_id#495 = i_class_id#568)) AND (i_category_id#497 = i_category_id#570)) "
        },
        "74" : {
          "sign" : 297532675,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 7435136380,
          "rowCount" : 265540585,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#310 = d_date_sk#311) "
        },
        "91" : {
          "sign" : -440935835,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 1727606976,
          "rowCount" : 71983624,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [ws_quantity#418, ws_list_price#420, ws_sold_date_sk#434] "
        },
        "52" : {
          "sign" : -723515648,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 86904000,
          "rowCount" : 204000,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: isnotnull(i_item_sk#188) "
        },
        "85" : {
          "sign" : -2018950623,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 29800787536,
          "rowCount" : 143273017,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [cs_sold_time_sk#339, cs_ship_date_sk#340, cs_bill_customer_sk#341, cs_bill_cdemo_sk#342, cs_bill_hdemo_sk#343, cs_bill_addr_sk#344, cs_ship_customer_sk#345, cs_ship_cdemo_sk#346, cs_ship_hdemo_sk#347, cs_ship_addr_sk#348, cs_call_center_sk#349, cs_catalog_page_sk#350, cs_ship_mode_sk#351, cs_warehouse_sk#352, cs_item_sk#353, cs_promo_sk#354, cs_order_number#355L, cs_quantity#356, cs_wholesale_cost#357, cs_list_price#358, cs_sales_price#359, cs_ext_discount_amt#360, cs_ext_sales_price#361, cs_ext_wholesale_cost#362, ... 10 more fields], `spark_catalog`.`tpcds_100`.`catalog_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "131" : {
          "sign" : -530153999,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 2013673340,
          "rowCount" : 71916905,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: Inner, (ws_item_sk#134 = i_item_sk#238) "
        },
        "28" : {
          "sign" : -1752442205,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 8043221788,
          "rowCount" : 287257921,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: Inner, (ss_item_sk#48 = i_item_sk#166) "
        },
        "119" : {
          "sign" : 1632472341,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 3186487020,
          "rowCount" : 265540585,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [ss_item_sk#48] "
        },
        "136" : {
          "sign" : -525259107,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 4860984,
          "rowCount" : 202541,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: LeftSemi, (i_item_sk#559 = ss_item_sk#15) "
        }
      },
      "links" : [ {
        "fromId" : 13,
        "fromName" : "LogicalRelation",
        "toId" : 12,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 16,
        "fromName" : "LogicalRelation",
        "toId" : 15,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 19,
        "fromName" : "LogicalRelation",
        "toId" : 18,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 18,
        "fromName" : "Filter",
        "toId" : 17,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 17,
        "fromName" : "Project",
        "toId" : 15,
        "toName" : "Filter",
        "linkType" : "Subquery"
      }, {
        "fromId" : 15,
        "fromName" : "Filter",
        "toId" : 14,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 14,
        "fromName" : "Project",
        "toId" : 12,
        "toName" : "Filter",
        "linkType" : "Subquery"
      }, {
        "fromId" : 12,
        "fromName" : "Filter",
        "toId" : 11,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 11,
        "fromName" : "Project",
        "toId" : 10,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 24,
        "fromName" : "LogicalRelation",
        "toId" : 23,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 23,
        "fromName" : "Filter",
        "toId" : 22,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 22,
        "fromName" : "Project",
        "toId" : 21,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 33,
        "fromName" : "LogicalRelation",
        "toId" : 32,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 36,
        "fromName" : "LogicalRelation",
        "toId" : 35,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 35,
        "fromName" : "Filter",
        "toId" : 34,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 34,
        "fromName" : "Project",
        "toId" : 32,
        "toName" : "Filter",
        "linkType" : "Subquery"
      }, {
        "fromId" : 32,
        "fromName" : "Filter",
        "toId" : 31,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 31,
        "fromName" : "Project",
        "toId" : 30,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 34,
        "fromName" : "Project",
        "toId" : 30,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 30,
        "fromName" : "Join",
        "toId" : 29,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 29,
        "fromName" : "Project",
        "toId" : 28,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 40,
        "fromName" : "LogicalRelation",
        "toId" : 39,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 39,
        "fromName" : "Filter",
        "toId" : 38,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 38,
        "fromName" : "Project",
        "toId" : 37,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 47,
        "fromName" : "LogicalRelation",
        "toId" : 46,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 50,
        "fromName" : "LogicalRelation",
        "toId" : 49,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 49,
        "fromName" : "Filter",
        "toId" : 48,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 48,
        "fromName" : "Project",
        "toId" : 46,
        "toName" : "Filter",
        "linkType" : "Subquery"
      }, {
        "fromId" : 46,
        "fromName" : "Filter",
        "toId" : 45,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 45,
        "fromName" : "Project",
        "toId" : 44,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 48,
        "fromName" : "Project",
        "toId" : 44,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 44,
        "fromName" : "Join",
        "toId" : 43,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 43,
        "fromName" : "Project",
        "toId" : 42,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 53,
        "fromName" : "LogicalRelation",
        "toId" : 52,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 52,
        "fromName" : "Filter",
        "toId" : 51,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 51,
        "fromName" : "Project",
        "toId" : 42,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 42,
        "fromName" : "Join",
        "toId" : 41,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 41,
        "fromName" : "Project",
        "toId" : 37,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 37,
        "fromName" : "Join",
        "toId" : 28,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 28,
        "fromName" : "Join",
        "toId" : 27,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 27,
        "fromName" : "Project",
        "toId" : 26,
        "toName" : "Aggregate",
        "linkType" : "Operator"
      }, {
        "fromId" : 26,
        "fromName" : "Aggregate",
        "toId" : 25,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 60,
        "fromName" : "LogicalRelation",
        "toId" : 59,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 63,
        "fromName" : "LogicalRelation",
        "toId" : 62,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 62,
        "fromName" : "Filter",
        "toId" : 61,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 61,
        "fromName" : "Project",
        "toId" : 59,
        "toName" : "Filter",
        "linkType" : "Subquery"
      }, {
        "fromId" : 59,
        "fromName" : "Filter",
        "toId" : 58,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 58,
        "fromName" : "Project",
        "toId" : 57,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 61,
        "fromName" : "Project",
        "toId" : 57,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 57,
        "fromName" : "Join",
        "toId" : 56,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 56,
        "fromName" : "Project",
        "toId" : 55,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 66,
        "fromName" : "LogicalRelation",
        "toId" : 65,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 65,
        "fromName" : "Filter",
        "toId" : 64,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 64,
        "fromName" : "Project",
        "toId" : 55,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 55,
        "fromName" : "Join",
        "toId" : 54,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 54,
        "fromName" : "Project",
        "toId" : 25,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 25,
        "fromName" : "Join",
        "toId" : 21,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 21,
        "fromName" : "Join",
        "toId" : 20,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 20,
        "fromName" : "Project",
        "toId" : 10,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 10,
        "fromName" : "Join",
        "toId" : 9,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 14,
        "fromName" : "Project",
        "toId" : 9,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 9,
        "fromName" : "Join",
        "toId" : 8,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 8,
        "fromName" : "Project",
        "toId" : 7,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 70,
        "fromName" : "LogicalRelation",
        "toId" : 69,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 69,
        "fromName" : "Filter",
        "toId" : 68,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 68,
        "fromName" : "Project",
        "toId" : 67,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 20,
        "fromName" : "Project",
        "toId" : 67,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 67,
        "fromName" : "Join",
        "toId" : 7,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 7,
        "fromName" : "Join",
        "toId" : 6,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 6,
        "fromName" : "Project",
        "toId" : 5,
        "toName" : "Aggregate",
        "linkType" : "Operator"
      }, {
        "fromId" : 5,
        "fromName" : "Aggregate",
        "toId" : 4,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 77,
        "fromName" : "LogicalRelation",
        "toId" : 76,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 80,
        "fromName" : "LogicalRelation",
        "toId" : 79,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 79,
        "fromName" : "Filter",
        "toId" : 78,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 78,
        "fromName" : "Project",
        "toId" : 76,
        "toName" : "Filter",
        "linkType" : "Subquery"
      }, {
        "fromId" : 76,
        "fromName" : "Filter",
        "toId" : 75,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 75,
        "fromName" : "Project",
        "toId" : 74,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 78,
        "fromName" : "Project",
        "toId" : 74,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 74,
        "fromName" : "Join",
        "toId" : 73,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 73,
        "fromName" : "Project",
        "toId" : 72,
        "toName" : "Union",
        "linkType" : "Operator"
      }, {
        "fromId" : 85,
        "fromName" : "LogicalRelation",
        "toId" : 84,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 88,
        "fromName" : "LogicalRelation",
        "toId" : 87,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 87,
        "fromName" : "Filter",
        "toId" : 86,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 86,
        "fromName" : "Project",
        "toId" : 84,
        "toName" : "Filter",
        "linkType" : "Subquery"
      }, {
        "fromId" : 84,
        "fromName" : "Filter",
        "toId" : 83,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 83,
        "fromName" : "Project",
        "toId" : 82,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 86,
        "fromName" : "Project",
        "toId" : 82,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 82,
        "fromName" : "Join",
        "toId" : 81,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 81,
        "fromName" : "Project",
        "toId" : 72,
        "toName" : "Union",
        "linkType" : "Operator"
      }, {
        "fromId" : 93,
        "fromName" : "LogicalRelation",
        "toId" : 92,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 96,
        "fromName" : "LogicalRelation",
        "toId" : 95,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 95,
        "fromName" : "Filter",
        "toId" : 94,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 94,
        "fromName" : "Project",
        "toId" : 92,
        "toName" : "Filter",
        "linkType" : "Subquery"
      }, {
        "fromId" : 92,
        "fromName" : "Filter",
        "toId" : 91,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 91,
        "fromName" : "Project",
        "toId" : 90,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 94,
        "fromName" : "Project",
        "toId" : 90,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 90,
        "fromName" : "Join",
        "toId" : 89,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 89,
        "fromName" : "Project",
        "toId" : 72,
        "toName" : "Union",
        "linkType" : "Operator"
      }, {
        "fromId" : 72,
        "fromName" : "Union",
        "toId" : 71,
        "toName" : "Aggregate",
        "linkType" : "Operator"
      }, {
        "fromId" : 71,
        "fromName" : "Aggregate",
        "toId" : 4,
        "toName" : "Filter",
        "linkType" : "Subquery"
      }, {
        "fromId" : 4,
        "fromName" : "Filter",
        "toId" : 3,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 106,
        "fromName" : "LogicalRelation",
        "toId" : 105,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 109,
        "fromName" : "LogicalRelation",
        "toId" : 108,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 112,
        "fromName" : "LogicalRelation",
        "toId" : 111,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 111,
        "fromName" : "Filter",
        "toId" : 110,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 110,
        "fromName" : "Project",
        "toId" : 108,
        "toName" : "Filter",
        "linkType" : "Subquery"
      }, {
        "fromId" : 108,
        "fromName" : "Filter",
        "toId" : 107,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 107,
        "fromName" : "Project",
        "toId" : 105,
        "toName" : "Filter",
        "linkType" : "Subquery"
      }, {
        "fromId" : 105,
        "fromName" : "Filter",
        "toId" : 104,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 104,
        "fromName" : "Project",
        "toId" : 103,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 22,
        "fromName" : "Project",
        "toId" : 114,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 33,
        "fromName" : "LogicalRelation",
        "toId" : 122,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 34,
        "fromName" : "Project",
        "toId" : 122,
        "toName" : "Filter",
        "linkType" : "Subquery"
      }, {
        "fromId" : 122,
        "fromName" : "Filter",
        "toId" : 121,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 121,
        "fromName" : "Project",
        "toId" : 120,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 34,
        "fromName" : "Project",
        "toId" : 120,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 120,
        "fromName" : "Join",
        "toId" : 119,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 119,
        "fromName" : "Project",
        "toId" : 118,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 38,
        "fromName" : "Project",
        "toId" : 123,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 47,
        "fromName" : "LogicalRelation",
        "toId" : 129,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 48,
        "fromName" : "Project",
        "toId" : 129,
        "toName" : "Filter",
        "linkType" : "Subquery"
      }, {
        "fromId" : 129,
        "fromName" : "Filter",
        "toId" : 128,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 128,
        "fromName" : "Project",
        "toId" : 127,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 48,
        "fromName" : "Project",
        "toId" : 127,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 127,
        "fromName" : "Join",
        "toId" : 126,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 126,
        "fromName" : "Project",
        "toId" : 125,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 51,
        "fromName" : "Project",
        "toId" : 125,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 125,
        "fromName" : "Join",
        "toId" : 124,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 124,
        "fromName" : "Project",
        "toId" : 123,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 123,
        "fromName" : "Join",
        "toId" : 118,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 118,
        "fromName" : "Join",
        "toId" : 117,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 117,
        "fromName" : "Project",
        "toId" : 116,
        "toName" : "Aggregate",
        "linkType" : "Operator"
      }, {
        "fromId" : 116,
        "fromName" : "Aggregate",
        "toId" : 115,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 60,
        "fromName" : "LogicalRelation",
        "toId" : 135,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 61,
        "fromName" : "Project",
        "toId" : 135,
        "toName" : "Filter",
        "linkType" : "Subquery"
      }, {
        "fromId" : 135,
        "fromName" : "Filter",
        "toId" : 134,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 134,
        "fromName" : "Project",
        "toId" : 133,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 61,
        "fromName" : "Project",
        "toId" : 133,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 133,
        "fromName" : "Join",
        "toId" : 132,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 132,
        "fromName" : "Project",
        "toId" : 131,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 64,
        "fromName" : "Project",
        "toId" : 131,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 131,
        "fromName" : "Join",
        "toId" : 130,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 130,
        "fromName" : "Project",
        "toId" : 115,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 115,
        "fromName" : "Join",
        "toId" : 114,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 114,
        "fromName" : "Join",
        "toId" : 113,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 113,
        "fromName" : "Project",
        "toId" : 103,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 103,
        "fromName" : "Join",
        "toId" : 102,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 107,
        "fromName" : "Project",
        "toId" : 102,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 102,
        "fromName" : "Join",
        "toId" : 101,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 101,
        "fromName" : "Project",
        "toId" : 100,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 139,
        "fromName" : "LogicalRelation",
        "toId" : 138,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 138,
        "fromName" : "Filter",
        "toId" : 137,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 137,
        "fromName" : "Project",
        "toId" : 136,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 113,
        "fromName" : "Project",
        "toId" : 136,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 136,
        "fromName" : "Join",
        "toId" : 100,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 100,
        "fromName" : "Join",
        "toId" : 99,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 99,
        "fromName" : "Project",
        "toId" : 98,
        "toName" : "Aggregate",
        "linkType" : "Operator"
      }, {
        "fromId" : 98,
        "fromName" : "Aggregate",
        "toId" : 97,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 71,
        "fromName" : "Aggregate",
        "toId" : 97,
        "toName" : "Filter",
        "linkType" : "Subquery"
      }, {
        "fromId" : 97,
        "fromName" : "Filter",
        "toId" : 3,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 3,
        "fromName" : "Join",
        "toId" : 2,
        "toName" : "Sort",
        "linkType" : "Operator"
      }, {
        "fromId" : 2,
        "fromName" : "Sort",
        "toId" : 1,
        "toName" : "LocalLimit",
        "linkType" : "Operator"
      }, {
        "fromId" : 1,
        "fromName" : "LocalLimit",
        "toId" : 0,
        "toName" : "GlobalLimit",
        "linkType" : "Operator"
      } ],
      "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [i_brand_id#493 ASC NULLS FIRST, i_class_id#495 ASC NULLS FIRST, i_category_id#497 ASC NULLS FIRST], true\n      +- Join Inner, (((i_brand_id#493 = i_brand_id#566) AND (i_class_id#495 = i_class_id#568)) AND (i_category_id#497 = i_category_id#570))\n         :- Filter (isnotnull(sales#1) AND (cast(sales#1 as decimal(32,6)) > cast(scalar-subquery#5 [] as decimal(32,6))))\n         :  :  +- Aggregate [avg((cast(quantity#16 as decimal(10,0)) * list_price#17)) AS average_sales#22]\n         :  :     +- Union false, false\n         :  :        :- Project [ss_quantity#297 AS quantity#16, ss_list_price#299 AS list_price#17]\n         :  :        :  +- Join Inner, (ss_sold_date_sk#310 = d_date_sk#311)\n         :  :        :     :- Project [ss_quantity#297, ss_list_price#299, ss_sold_date_sk#310]\n         :  :        :     :  +- Filter (isnotnull(ss_sold_date_sk#310) AND dynamicpruning#704 [ss_sold_date_sk#310])\n         :  :        :     :     :  +- Project [d_date_sk#311]\n         :  :        :     :     :     +- Filter ((isnotnull(d_year#317) AND ((d_year#317 >= 1998) AND (d_year#317 <= 2000))) AND isnotnull(d_date_sk#311))\n         :  :        :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#311,d_date_id#312,d_date#313,d_month_seq#314,d_week_seq#315,d_quarter_seq#316,d_year#317,d_dow#318,d_moy#319,d_dom#320,d_qoy#321,d_fy_year#322,d_fy_quarter_seq#323,d_fy_week_seq#324,d_day_name#325,d_quarter_name#326,d_holiday#327,d_weekend#328,d_following_holiday#329,d_first_dom#330,d_last_dom#331,d_same_day_ly#332,d_same_day_lq#333,d_current_day#334,... 4 more fields] parquet\n         :  :        :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#288,ss_item_sk#289,ss_customer_sk#290,ss_cdemo_sk#291,ss_hdemo_sk#292,ss_addr_sk#293,ss_store_sk#294,ss_promo_sk#295,ss_ticket_number#296L,ss_quantity#297,ss_wholesale_cost#298,ss_list_price#299,ss_sales_price#300,ss_ext_discount_amt#301,ss_ext_sales_price#302,ss_ext_wholesale_cost#303,ss_ext_list_price#304,ss_ext_tax#305,ss_coupon_amt#306,ss_net_paid#307,ss_net_paid_inc_tax#308,ss_net_profit#309,ss_sold_date_sk#310] parquet\n         :  :        :     +- Project [d_date_sk#311]\n         :  :        :        +- Filter ((isnotnull(d_year#317) AND ((d_year#317 >= 1998) AND (d_year#317 <= 2000))) AND isnotnull(d_date_sk#311))\n         :  :        :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#311,d_date_id#312,d_date#313,d_month_seq#314,d_week_seq#315,d_quarter_seq#316,d_year#317,d_dow#318,d_moy#319,d_dom#320,d_qoy#321,d_fy_year#322,d_fy_quarter_seq#323,d_fy_week_seq#324,d_day_name#325,d_quarter_name#326,d_holiday#327,d_weekend#328,d_following_holiday#329,d_first_dom#330,d_last_dom#331,d_same_day_ly#332,d_same_day_lq#333,d_current_day#334,... 4 more fields] parquet\n         :  :        :- Project [cs_quantity#356 AS quantity#18, cs_list_price#358 AS list_price#19]\n         :  :        :  +- Join Inner, (cs_sold_date_sk#372 = d_date_sk#373)\n         :  :        :     :- Project [cs_quantity#356, cs_list_price#358, cs_sold_date_sk#372]\n         :  :        :     :  +- Filter (isnotnull(cs_sold_date_sk#372) AND dynamicpruning#705 [cs_sold_date_sk#372])\n         :  :        :     :     :  +- Project [d_date_sk#373]\n         :  :        :     :     :     +- Filter ((isnotnull(d_year#379) AND ((d_year#379 >= 1998) AND (d_year#379 <= 2000))) AND isnotnull(d_date_sk#373))\n         :  :        :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#373,d_date_id#374,d_date#375,d_month_seq#376,d_week_seq#377,d_quarter_seq#378,d_year#379,d_dow#380,d_moy#381,d_dom#382,d_qoy#383,d_fy_year#384,d_fy_quarter_seq#385,d_fy_week_seq#386,d_day_name#387,d_quarter_name#388,d_holiday#389,d_weekend#390,d_following_holiday#391,d_first_dom#392,d_last_dom#393,d_same_day_ly#394,d_same_day_lq#395,d_current_day#396,... 4 more fields] parquet\n         :  :        :     :     +- Relation spark_catalog.tpcds_100.catalog_sales[cs_sold_time_sk#339,cs_ship_date_sk#340,cs_bill_customer_sk#341,cs_bill_cdemo_sk#342,cs_bill_hdemo_sk#343,cs_bill_addr_sk#344,cs_ship_customer_sk#345,cs_ship_cdemo_sk#346,cs_ship_hdemo_sk#347,cs_ship_addr_sk#348,cs_call_center_sk#349,cs_catalog_page_sk#350,cs_ship_mode_sk#351,cs_warehouse_sk#352,cs_item_sk#353,cs_promo_sk#354,cs_order_number#355L,cs_quantity#356,cs_wholesale_cost#357,cs_list_price#358,cs_sales_price#359,cs_ext_discount_amt#360,cs_ext_sales_price#361,cs_ext_wholesale_cost#362,... 10 more fields] parquet\n         :  :        :     +- Project [d_date_sk#373]\n         :  :        :        +- Filter ((isnotnull(d_year#379) AND ((d_year#379 >= 1998) AND (d_year#379 <= 2000))) AND isnotnull(d_date_sk#373))\n         :  :        :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#373,d_date_id#374,d_date#375,d_month_seq#376,d_week_seq#377,d_quarter_seq#378,d_year#379,d_dow#380,d_moy#381,d_dom#382,d_qoy#383,d_fy_year#384,d_fy_quarter_seq#385,d_fy_week_seq#386,d_day_name#387,d_quarter_name#388,d_holiday#389,d_weekend#390,d_following_holiday#391,d_first_dom#392,d_last_dom#393,d_same_day_ly#394,d_same_day_lq#395,d_current_day#396,... 4 more fields] parquet\n         :  :        +- Project [ws_quantity#418 AS quantity#20, ws_list_price#420 AS list_price#21]\n         :  :           +- Join Inner, (ws_sold_date_sk#434 = d_date_sk#435)\n         :  :              :- Project [ws_quantity#418, ws_list_price#420, ws_sold_date_sk#434]\n         :  :              :  +- Filter (isnotnull(ws_sold_date_sk#434) AND dynamicpruning#706 [ws_sold_date_sk#434])\n         :  :              :     :  +- Project [d_date_sk#435]\n         :  :              :     :     +- Filter ((isnotnull(d_year#441) AND ((d_year#441 >= 1998) AND (d_year#441 <= 2000))) AND isnotnull(d_date_sk#435))\n         :  :              :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#435,d_date_id#436,d_date#437,d_month_seq#438,d_week_seq#439,d_quarter_seq#440,d_year#441,d_dow#442,d_moy#443,d_dom#444,d_qoy#445,d_fy_year#446,d_fy_quarter_seq#447,d_fy_week_seq#448,d_day_name#449,d_quarter_name#450,d_holiday#451,d_weekend#452,d_following_holiday#453,d_first_dom#454,d_last_dom#455,d_same_day_ly#456,d_same_day_lq#457,d_current_day#458,... 4 more fields] parquet\n         :  :              :     +- Relation spark_catalog.tpcds_100.web_sales[ws_sold_time_sk#401,ws_ship_date_sk#402,ws_item_sk#403,ws_bill_customer_sk#404,ws_bill_cdemo_sk#405,ws_bill_hdemo_sk#406,ws_bill_addr_sk#407,ws_ship_customer_sk#408,ws_ship_cdemo_sk#409,ws_ship_hdemo_sk#410,ws_ship_addr_sk#411,ws_web_page_sk#412,ws_web_site_sk#413,ws_ship_mode_sk#414,ws_warehouse_sk#415,ws_promo_sk#416,ws_order_number#417L,ws_quantity#418,ws_wholesale_cost#419,ws_list_price#420,ws_sales_price#421,ws_ext_discount_amt#422,ws_ext_sales_price#423,ws_ext_wholesale_cost#424,... 10 more fields] parquet\n         :  :              +- Project [d_date_sk#435]\n         :  :                 +- Filter ((isnotnull(d_year#441) AND ((d_year#441 >= 1998) AND (d_year#441 <= 2000))) AND isnotnull(d_date_sk#435))\n         :  :                    +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#435,d_date_id#436,d_date#437,d_month_seq#438,d_week_seq#439,d_quarter_seq#440,d_year#441,d_dow#442,d_moy#443,d_dom#444,d_qoy#445,d_fy_year#446,d_fy_quarter_seq#447,d_fy_week_seq#448,d_day_name#449,d_quarter_name#450,d_holiday#451,d_weekend#452,d_following_holiday#453,d_first_dom#454,d_last_dom#455,d_same_day_ly#456,d_same_day_lq#457,d_current_day#458,... 4 more fields] parquet\n         :  +- Aggregate [i_brand_id#493, i_class_id#495, i_category_id#497], [store AS channel#0, i_brand_id#493, i_class_id#495, i_category_id#497, sum((cast(ss_quantity#472 as decimal(10,0)) * ss_list_price#474)) AS sales#1, count(1) AS number_sales#2L]\n         :     +- Project [ss_quantity#472, ss_list_price#474, i_brand_id#493, i_class_id#495, i_category_id#497]\n         :        +- Join Inner, (ss_item_sk#464 = i_item_sk#486)\n         :           :- Project [ss_item_sk#464, ss_quantity#472, ss_list_price#474]\n         :           :  +- Join Inner, (ss_sold_date_sk#485 = d_date_sk#508)\n         :           :     :- Join LeftSemi, (ss_item_sk#464 = ss_item_sk#15)\n         :           :     :  :- Project [ss_item_sk#464, ss_quantity#472, ss_list_price#474, ss_sold_date_sk#485]\n         :           :     :  :  +- Filter ((isnotnull(ss_item_sk#464) AND isnotnull(ss_sold_date_sk#485)) AND dynamicpruning#719 [ss_sold_date_sk#485])\n         :           :     :  :     :  +- Project [d_date_sk#508]\n         :           :     :  :     :     +- Filter ((isnotnull(d_week_seq#512) AND (d_week_seq#512 = scalar-subquery#4 [])) AND isnotnull(d_date_sk#508))\n         :           :     :  :     :        :  +- Project [d_week_seq#629]\n         :           :     :  :     :        :     +- Filter (((isnotnull(d_year#631) AND isnotnull(d_moy#633)) AND isnotnull(d_dom#634)) AND (((d_year#631 = 1999) AND (d_moy#633 = 12)) AND (d_dom#634 = 16)))\n         :           :     :  :     :        :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#625,d_date_id#626,d_date#627,d_month_seq#628,d_week_seq#629,d_quarter_seq#630,d_year#631,d_dow#632,d_moy#633,d_dom#634,d_qoy#635,d_fy_year#636,d_fy_quarter_seq#637,d_fy_week_seq#638,d_day_name#639,d_quarter_name#640,d_holiday#641,d_weekend#642,d_following_holiday#643,d_first_dom#644,d_last_dom#645,d_same_day_ly#646,d_same_day_lq#647,d_current_day#648,... 4 more fields] parquet\n         :           :     :  :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#508,d_date_id#509,d_date#510,d_month_seq#511,d_week_seq#512,d_quarter_seq#513,d_year#514,d_dow#515,d_moy#516,d_dom#517,d_qoy#518,d_fy_year#519,d_fy_quarter_seq#520,d_fy_week_seq#521,d_day_name#522,d_quarter_name#523,d_holiday#524,d_weekend#525,d_following_holiday#526,d_first_dom#527,d_last_dom#528,d_same_day_ly#529,d_same_day_lq#530,d_current_day#531,... 4 more fields] parquet\n         :           :     :  :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#463,ss_item_sk#464,ss_customer_sk#465,ss_cdemo_sk#466,ss_hdemo_sk#467,ss_addr_sk#468,ss_store_sk#469,ss_promo_sk#470,ss_ticket_number#471L,ss_quantity#472,ss_wholesale_cost#473,ss_list_price#474,ss_sales_price#475,ss_ext_discount_amt#476,ss_ext_sales_price#477,ss_ext_wholesale_cost#478,ss_ext_list_price#479,ss_ext_tax#480,ss_coupon_amt#481,ss_net_paid#482,ss_net_paid_inc_tax#483,ss_net_profit#484,ss_sold_date_sk#485] parquet\n         :           :     :  +- Project [i_item_sk#25 AS ss_item_sk#15]\n         :           :     :     +- Join Inner, (((i_brand_id#32 = brand_id#12) AND (i_class_id#34 = class_id#13)) AND (i_category_id#36 = category_id#14))\n         :           :     :        :- Project [i_item_sk#25, i_brand_id#32, i_class_id#34, i_category_id#36]\n         :           :     :        :  +- Filter ((isnotnull(i_brand_id#32) AND isnotnull(i_class_id#34)) AND isnotnull(i_category_id#36))\n         :           :     :        :     +- Relation spark_catalog.tpcds_100.item[i_item_sk#25,i_item_id#26,i_rec_start_date#27,i_rec_end_date#28,i_item_desc#29,i_current_price#30,i_wholesale_cost#31,i_brand_id#32,i_brand#33,i_class_id#34,i_class#35,i_category_id#36,i_category#37,i_manufact_id#38,i_manufact#39,i_size#40,i_formulation#41,i_color#42,i_units#43,i_container#44,i_manager_id#45,i_product_name#46] parquet\n         :           :     :        +- Join LeftSemi, (((brand_id#12 <=> i_brand_id#245) AND (class_id#13 <=> i_class_id#247)) AND (category_id#14 <=> i_category_id#249))\n         :           :     :           :- Aggregate [brand_id#12, class_id#13, category_id#14], [brand_id#12, class_id#13, category_id#14]\n         :           :     :           :  +- Project [i_brand_id#173 AS brand_id#12, i_class_id#175 AS class_id#13, i_category_id#177 AS category_id#14]\n         :           :     :           :     +- Join Inner, (ss_item_sk#48 = i_item_sk#166)\n         :           :     :           :        :- Project [ss_item_sk#48]\n         :           :     :           :        :  +- Join Inner, (ss_sold_date_sk#69 = d_date_sk#70)\n         :           :     :           :        :     :- Project [ss_item_sk#48, ss_sold_date_sk#69]\n         :           :     :           :        :     :  +- Filter ((isnotnull(ss_item_sk#48) AND isnotnull(ss_sold_date_sk#69)) AND dynamicpruning#707 [ss_sold_date_sk#69])\n         :           :     :           :        :     :     :  +- Project [d_date_sk#70]\n         :           :     :           :        :     :     :     +- Filter ((isnotnull(d_year#76) AND ((d_year#76 >= 1998) AND (d_year#76 <= 2000))) AND isnotnull(d_date_sk#70))\n         :           :     :           :        :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#70,d_date_id#71,d_date#72,d_month_seq#73,d_week_seq#74,d_quarter_seq#75,d_year#76,d_dow#77,d_moy#78,d_dom#79,d_qoy#80,d_fy_year#81,d_fy_quarter_seq#82,d_fy_week_seq#83,d_day_name#84,d_quarter_name#85,d_holiday#86,d_weekend#87,d_following_holiday#88,d_first_dom#89,d_last_dom#90,d_same_day_ly#91,d_same_day_lq#92,d_current_day#93,... 4 more fields] parquet\n         :           :     :           :        :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#47,ss_item_sk#48,ss_customer_sk#49,ss_cdemo_sk#50,ss_hdemo_sk#51,ss_addr_sk#52,ss_store_sk#53,ss_promo_sk#54,ss_ticket_number#55L,ss_quantity#56,ss_wholesale_cost#57,ss_list_price#58,ss_sales_price#59,ss_ext_discount_amt#60,ss_ext_sales_price#61,ss_ext_wholesale_cost#62,ss_ext_list_price#63,ss_ext_tax#64,ss_coupon_amt#65,ss_net_paid#66,ss_net_paid_inc_tax#67,ss_net_profit#68,ss_sold_date_sk#69] parquet\n         :           :     :           :        :     +- Project [d_date_sk#70]\n         :           :     :           :        :        +- Filter ((isnotnull(d_year#76) AND ((d_year#76 >= 1998) AND (d_year#76 <= 2000))) AND isnotnull(d_date_sk#70))\n         :           :     :           :        :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#70,d_date_id#71,d_date#72,d_month_seq#73,d_week_seq#74,d_quarter_seq#75,d_year#76,d_dow#77,d_moy#78,d_dom#79,d_qoy#80,d_fy_year#81,d_fy_quarter_seq#82,d_fy_week_seq#83,d_day_name#84,d_quarter_name#85,d_holiday#86,d_weekend#87,d_following_holiday#88,d_first_dom#89,d_last_dom#90,d_same_day_ly#91,d_same_day_lq#92,d_current_day#93,... 4 more fields] parquet\n         :           :     :           :        +- Join LeftSemi, (((i_brand_id#173 <=> i_brand_id#195) AND (i_class_id#175 <=> i_class_id#197)) AND (i_category_id#177 <=> i_category_id#199))\n         :           :     :           :           :- Project [i_item_sk#166, i_brand_id#173, i_class_id#175, i_category_id#177]\n         :           :     :           :           :  +- Filter (isnotnull(i_item_sk#166) AND ((isnotnull(i_brand_id#173) AND isnotnull(i_class_id#175)) AND isnotnull(i_category_id#177)))\n         :           :     :           :           :     +- Relation spark_catalog.tpcds_100.item[i_item_sk#166,i_item_id#167,i_rec_start_date#168,i_rec_end_date#169,i_item_desc#170,i_current_price#171,i_wholesale_cost#172,i_brand_id#173,i_brand#174,i_class_id#175,i_class#176,i_category_id#177,i_category#178,i_manufact_id#179,i_manufact#180,i_size#181,i_formulation#182,i_color#183,i_units#184,i_container#185,i_manager_id#186,i_product_name#187] parquet\n         :           :     :           :           +- Project [i_brand_id#195, i_class_id#197, i_category_id#199]\n         :           :     :           :              +- Join Inner, (cs_item_sk#112 = i_item_sk#188)\n         :           :     :           :                 :- Project [cs_item_sk#112]\n         :           :     :           :                 :  +- Join Inner, (cs_sold_date_sk#131 = d_date_sk#210)\n         :           :     :           :                 :     :- Project [cs_item_sk#112, cs_sold_date_sk#131]\n         :           :     :           :                 :     :  +- Filter ((isnotnull(cs_item_sk#112) AND isnotnull(cs_sold_date_sk#131)) AND dynamicpruning#708 [cs_sold_date_sk#131])\n         :           :     :           :                 :     :     :  +- Project [d_date_sk#210]\n         :           :     :           :                 :     :     :     +- Filter ((isnotnull(d_year#216) AND ((d_year#216 >= 1998) AND (d_year#216 <= 2000))) AND isnotnull(d_date_sk#210))\n         :           :     :           :                 :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#210,d_date_id#211,d_date#212,d_month_seq#213,d_week_seq#214,d_quarter_seq#215,d_year#216,d_dow#217,d_moy#218,d_dom#219,d_qoy#220,d_fy_year#221,d_fy_quarter_seq#222,d_fy_week_seq#223,d_day_name#224,d_quarter_name#225,d_holiday#226,d_weekend#227,d_following_holiday#228,d_first_dom#229,d_last_dom#230,d_same_day_ly#231,d_same_day_lq#232,d_current_day#233,... 4 more fields] parquet\n         :           :     :           :                 :     :     +- Relation spark_catalog.tpcds_100.catalog_sales[cs_sold_time_sk#98,cs_ship_date_sk#99,cs_bill_customer_sk#100,cs_bill_cdemo_sk#101,cs_bill_hdemo_sk#102,cs_bill_addr_sk#103,cs_ship_customer_sk#104,cs_ship_cdemo_sk#105,cs_ship_hdemo_sk#106,cs_ship_addr_sk#107,cs_call_center_sk#108,cs_catalog_page_sk#109,cs_ship_mode_sk#110,cs_warehouse_sk#111,cs_item_sk#112,cs_promo_sk#113,cs_order_number#114L,cs_quantity#115,cs_wholesale_cost#116,cs_list_price#117,cs_sales_price#118,cs_ext_discount_amt#119,cs_ext_sales_price#120,cs_ext_wholesale_cost#121,... 10 more fields] parquet\n         :           :     :           :                 :     +- Project [d_date_sk#210]\n         :           :     :           :                 :        +- Filter ((isnotnull(d_year#216) AND ((d_year#216 >= 1998) AND (d_year#216 <= 2000))) AND isnotnull(d_date_sk#210))\n         :           :     :           :                 :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#210,d_date_id#211,d_date#212,d_month_seq#213,d_week_seq#214,d_quarter_seq#215,d_year#216,d_dow#217,d_moy#218,d_dom#219,d_qoy#220,d_fy_year#221,d_fy_quarter_seq#222,d_fy_week_seq#223,d_day_name#224,d_quarter_name#225,d_holiday#226,d_weekend#227,d_following_holiday#228,d_first_dom#229,d_last_dom#230,d_same_day_ly#231,d_same_day_lq#232,d_current_day#233,... 4 more fields] parquet\n         :           :     :           :                 +- Project [i_item_sk#188, i_brand_id#195, i_class_id#197, i_category_id#199]\n         :           :     :           :                    +- Filter isnotnull(i_item_sk#188)\n         :           :     :           :                       +- Relation spark_catalog.tpcds_100.item[i_item_sk#188,i_item_id#189,i_rec_start_date#190,i_rec_end_date#191,i_item_desc#192,i_current_price#193,i_wholesale_cost#194,i_brand_id#195,i_brand#196,i_class_id#197,i_class#198,i_category_id#199,i_category#200,i_manufact_id#201,i_manufact#202,i_size#203,i_formulation#204,i_color#205,i_units#206,i_container#207,i_manager_id#208,i_product_name#209] parquet\n         :           :     :           +- Project [i_brand_id#245, i_class_id#247, i_category_id#249]\n         :           :     :              +- Join Inner, (ws_item_sk#134 = i_item_sk#238)\n         :           :     :                 :- Project [ws_item_sk#134]\n         :           :     :                 :  +- Join Inner, (ws_sold_date_sk#165 = d_date_sk#260)\n         :           :     :                 :     :- Project [ws_item_sk#134, ws_sold_date_sk#165]\n         :           :     :                 :     :  +- Filter ((isnotnull(ws_item_sk#134) AND isnotnull(ws_sold_date_sk#165)) AND dynamicpruning#709 [ws_sold_date_sk#165])\n         :           :     :                 :     :     :  +- Project [d_date_sk#260]\n         :           :     :                 :     :     :     +- Filter ((isnotnull(d_year#266) AND ((d_year#266 >= 1998) AND (d_year#266 <= 2000))) AND isnotnull(d_date_sk#260))\n         :           :     :                 :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#260,d_date_id#261,d_date#262,d_month_seq#263,d_week_seq#264,d_quarter_seq#265,d_year#266,d_dow#267,d_moy#268,d_dom#269,d_qoy#270,d_fy_year#271,d_fy_quarter_seq#272,d_fy_week_seq#273,d_day_name#274,d_quarter_name#275,d_holiday#276,d_weekend#277,d_following_holiday#278,d_first_dom#279,d_last_dom#280,d_same_day_ly#281,d_same_day_lq#282,d_current_day#283,... 4 more fields] parquet\n         :           :     :                 :     :     +- Relation spark_catalog.tpcds_100.web_sales[ws_sold_time_sk#132,ws_ship_date_sk#133,ws_item_sk#134,ws_bill_customer_sk#135,ws_bill_cdemo_sk#136,ws_bill_hdemo_sk#137,ws_bill_addr_sk#138,ws_ship_customer_sk#139,ws_ship_cdemo_sk#140,ws_ship_hdemo_sk#141,ws_ship_addr_sk#142,ws_web_page_sk#143,ws_web_site_sk#144,ws_ship_mode_sk#145,ws_warehouse_sk#146,ws_promo_sk#147,ws_order_number#148L,ws_quantity#149,ws_wholesale_cost#150,ws_list_price#151,ws_sales_price#152,ws_ext_discount_amt#153,ws_ext_sales_price#154,ws_ext_wholesale_cost#155,... 10 more fields] parquet\n         :           :     :                 :     +- Project [d_date_sk#260]\n         :           :     :                 :        +- Filter ((isnotnull(d_year#266) AND ((d_year#266 >= 1998) AND (d_year#266 <= 2000))) AND isnotnull(d_date_sk#260))\n         :           :     :                 :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#260,d_date_id#261,d_date#262,d_month_seq#263,d_week_seq#264,d_quarter_seq#265,d_year#266,d_dow#267,d_moy#268,d_dom#269,d_qoy#270,d_fy_year#271,d_fy_quarter_seq#272,d_fy_week_seq#273,d_day_name#274,d_quarter_name#275,d_holiday#276,d_weekend#277,d_following_holiday#278,d_first_dom#279,d_last_dom#280,d_same_day_ly#281,d_same_day_lq#282,d_current_day#283,... 4 more fields] parquet\n         :           :     :                 +- Project [i_item_sk#238, i_brand_id#245, i_class_id#247, i_category_id#249]\n         :           :     :                    +- Filter isnotnull(i_item_sk#238)\n         :           :     :                       +- Relation spark_catalog.tpcds_100.item[i_item_sk#238,i_item_id#239,i_rec_start_date#240,i_rec_end_date#241,i_item_desc#242,i_current_price#243,i_wholesale_cost#244,i_brand_id#245,i_brand#246,i_class_id#247,i_class#248,i_category_id#249,i_category#250,i_manufact_id#251,i_manufact#252,i_size#253,i_formulation#254,i_color#255,i_units#256,i_container#257,i_manager_id#258,i_product_name#259] parquet\n         :           :     +- Project [d_date_sk#508]\n         :           :        +- Filter ((isnotnull(d_week_seq#512) AND (d_week_seq#512 = scalar-subquery#4 [])) AND isnotnull(d_date_sk#508))\n         :           :           :  +- Project [d_week_seq#629]\n         :           :           :     +- Filter (((isnotnull(d_year#631) AND isnotnull(d_moy#633)) AND isnotnull(d_dom#634)) AND (((d_year#631 = 1999) AND (d_moy#633 = 12)) AND (d_dom#634 = 16)))\n         :           :           :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#625,d_date_id#626,d_date#627,d_month_seq#628,d_week_seq#629,d_quarter_seq#630,d_year#631,d_dow#632,d_moy#633,d_dom#634,d_qoy#635,d_fy_year#636,d_fy_quarter_seq#637,d_fy_week_seq#638,d_day_name#639,d_quarter_name#640,d_holiday#641,d_weekend#642,d_following_holiday#643,d_first_dom#644,d_last_dom#645,d_same_day_ly#646,d_same_day_lq#647,d_current_day#648,... 4 more fields] parquet\n         :           :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#508,d_date_id#509,d_date#510,d_month_seq#511,d_week_seq#512,d_quarter_seq#513,d_year#514,d_dow#515,d_moy#516,d_dom#517,d_qoy#518,d_fy_year#519,d_fy_quarter_seq#520,d_fy_week_seq#521,d_day_name#522,d_quarter_name#523,d_holiday#524,d_weekend#525,d_following_holiday#526,d_first_dom#527,d_last_dom#528,d_same_day_ly#529,d_same_day_lq#530,d_current_day#531,... 4 more fields] parquet\n         :           +- Join LeftSemi, (i_item_sk#486 = ss_item_sk#15)\n         :              :- Project [i_item_sk#486, i_brand_id#493, i_class_id#495, i_category_id#497]\n         :              :  +- Filter (((isnotnull(i_item_sk#486) AND isnotnull(i_brand_id#493)) AND isnotnull(i_class_id#495)) AND isnotnull(i_category_id#497))\n         :              :     +- Relation spark_catalog.tpcds_100.item[i_item_sk#486,i_item_id#487,i_rec_start_date#488,i_rec_end_date#489,i_item_desc#490,i_current_price#491,i_wholesale_cost#492,i_brand_id#493,i_brand#494,i_class_id#495,i_class#496,i_category_id#497,i_category#498,i_manufact_id#499,i_manufact#500,i_size#501,i_formulation#502,i_color#503,i_units#504,i_container#505,i_manager_id#506,i_product_name#507] parquet\n         :              +- Project [i_item_sk#25 AS ss_item_sk#15]\n         :                 +- Join Inner, (((i_brand_id#32 = brand_id#12) AND (i_class_id#34 = class_id#13)) AND (i_category_id#36 = category_id#14))\n         :                    :- Project [i_item_sk#25, i_brand_id#32, i_class_id#34, i_category_id#36]\n         :                    :  +- Filter ((isnotnull(i_brand_id#32) AND isnotnull(i_class_id#34)) AND isnotnull(i_category_id#36))\n         :                    :     +- Relation spark_catalog.tpcds_100.item[i_item_sk#25,i_item_id#26,i_rec_start_date#27,i_rec_end_date#28,i_item_desc#29,i_current_price#30,i_wholesale_cost#31,i_brand_id#32,i_brand#33,i_class_id#34,i_class#35,i_category_id#36,i_category#37,i_manufact_id#38,i_manufact#39,i_size#40,i_formulation#41,i_color#42,i_units#43,i_container#44,i_manager_id#45,i_product_name#46] parquet\n         :                    +- Join LeftSemi, (((brand_id#12 <=> i_brand_id#245) AND (class_id#13 <=> i_class_id#247)) AND (category_id#14 <=> i_category_id#249))\n         :                       :- Aggregate [brand_id#12, class_id#13, category_id#14], [brand_id#12, class_id#13, category_id#14]\n         :                       :  +- Project [i_brand_id#173 AS brand_id#12, i_class_id#175 AS class_id#13, i_category_id#177 AS category_id#14]\n         :                       :     +- Join Inner, (ss_item_sk#48 = i_item_sk#166)\n         :                       :        :- Project [ss_item_sk#48]\n         :                       :        :  +- Join Inner, (ss_sold_date_sk#69 = d_date_sk#70)\n         :                       :        :     :- Project [ss_item_sk#48, ss_sold_date_sk#69]\n         :                       :        :     :  +- Filter ((isnotnull(ss_item_sk#48) AND isnotnull(ss_sold_date_sk#69)) AND dynamicpruning#707 [ss_sold_date_sk#69])\n         :                       :        :     :     :  +- Project [d_date_sk#70]\n         :                       :        :     :     :     +- Filter ((isnotnull(d_year#76) AND ((d_year#76 >= 1998) AND (d_year#76 <= 2000))) AND isnotnull(d_date_sk#70))\n         :                       :        :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#70,d_date_id#71,d_date#72,d_month_seq#73,d_week_seq#74,d_quarter_seq#75,d_year#76,d_dow#77,d_moy#78,d_dom#79,d_qoy#80,d_fy_year#81,d_fy_quarter_seq#82,d_fy_week_seq#83,d_day_name#84,d_quarter_name#85,d_holiday#86,d_weekend#87,d_following_holiday#88,d_first_dom#89,d_last_dom#90,d_same_day_ly#91,d_same_day_lq#92,d_current_day#93,... 4 more fields] parquet\n         :                       :        :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#47,ss_item_sk#48,ss_customer_sk#49,ss_cdemo_sk#50,ss_hdemo_sk#51,ss_addr_sk#52,ss_store_sk#53,ss_promo_sk#54,ss_ticket_number#55L,ss_quantity#56,ss_wholesale_cost#57,ss_list_price#58,ss_sales_price#59,ss_ext_discount_amt#60,ss_ext_sales_price#61,ss_ext_wholesale_cost#62,ss_ext_list_price#63,ss_ext_tax#64,ss_coupon_amt#65,ss_net_paid#66,ss_net_paid_inc_tax#67,ss_net_profit#68,ss_sold_date_sk#69] parquet\n         :                       :        :     +- Project [d_date_sk#70]\n         :                       :        :        +- Filter ((isnotnull(d_year#76) AND ((d_year#76 >= 1998) AND (d_year#76 <= 2000))) AND isnotnull(d_date_sk#70))\n         :                       :        :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#70,d_date_id#71,d_date#72,d_month_seq#73,d_week_seq#74,d_quarter_seq#75,d_year#76,d_dow#77,d_moy#78,d_dom#79,d_qoy#80,d_fy_year#81,d_fy_quarter_seq#82,d_fy_week_seq#83,d_day_name#84,d_quarter_name#85,d_holiday#86,d_weekend#87,d_following_holiday#88,d_first_dom#89,d_last_dom#90,d_same_day_ly#91,d_same_day_lq#92,d_current_day#93,... 4 more fields] parquet\n         :                       :        +- Join LeftSemi, (((i_brand_id#173 <=> i_brand_id#195) AND (i_class_id#175 <=> i_class_id#197)) AND (i_category_id#177 <=> i_category_id#199))\n         :                       :           :- Project [i_item_sk#166, i_brand_id#173, i_class_id#175, i_category_id#177]\n         :                       :           :  +- Filter (isnotnull(i_item_sk#166) AND ((isnotnull(i_brand_id#173) AND isnotnull(i_class_id#175)) AND isnotnull(i_category_id#177)))\n         :                       :           :     +- Relation spark_catalog.tpcds_100.item[i_item_sk#166,i_item_id#167,i_rec_start_date#168,i_rec_end_date#169,i_item_desc#170,i_current_price#171,i_wholesale_cost#172,i_brand_id#173,i_brand#174,i_class_id#175,i_class#176,i_category_id#177,i_category#178,i_manufact_id#179,i_manufact#180,i_size#181,i_formulation#182,i_color#183,i_units#184,i_container#185,i_manager_id#186,i_product_name#187] parquet\n         :                       :           +- Project [i_brand_id#195, i_class_id#197, i_category_id#199]\n         :                       :              +- Join Inner, (cs_item_sk#112 = i_item_sk#188)\n         :                       :                 :- Project [cs_item_sk#112]\n         :                       :                 :  +- Join Inner, (cs_sold_date_sk#131 = d_date_sk#210)\n         :                       :                 :     :- Project [cs_item_sk#112, cs_sold_date_sk#131]\n         :                       :                 :     :  +- Filter ((isnotnull(cs_item_sk#112) AND isnotnull(cs_sold_date_sk#131)) AND dynamicpruning#708 [cs_sold_date_sk#131])\n         :                       :                 :     :     :  +- Project [d_date_sk#210]\n         :                       :                 :     :     :     +- Filter ((isnotnull(d_year#216) AND ((d_year#216 >= 1998) AND (d_year#216 <= 2000))) AND isnotnull(d_date_sk#210))\n         :                       :                 :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#210,d_date_id#211,d_date#212,d_month_seq#213,d_week_seq#214,d_quarter_seq#215,d_year#216,d_dow#217,d_moy#218,d_dom#219,d_qoy#220,d_fy_year#221,d_fy_quarter_seq#222,d_fy_week_seq#223,d_day_name#224,d_quarter_name#225,d_holiday#226,d_weekend#227,d_following_holiday#228,d_first_dom#229,d_last_dom#230,d_same_day_ly#231,d_same_day_lq#232,d_current_day#233,... 4 more fields] parquet\n         :                       :                 :     :     +- Relation spark_catalog.tpcds_100.catalog_sales[cs_sold_time_sk#98,cs_ship_date_sk#99,cs_bill_customer_sk#100,cs_bill_cdemo_sk#101,cs_bill_hdemo_sk#102,cs_bill_addr_sk#103,cs_ship_customer_sk#104,cs_ship_cdemo_sk#105,cs_ship_hdemo_sk#106,cs_ship_addr_sk#107,cs_call_center_sk#108,cs_catalog_page_sk#109,cs_ship_mode_sk#110,cs_warehouse_sk#111,cs_item_sk#112,cs_promo_sk#113,cs_order_number#114L,cs_quantity#115,cs_wholesale_cost#116,cs_list_price#117,cs_sales_price#118,cs_ext_discount_amt#119,cs_ext_sales_price#120,cs_ext_wholesale_cost#121,... 10 more fields] parquet\n         :                       :                 :     +- Project [d_date_sk#210]\n         :                       :                 :        +- Filter ((isnotnull(d_year#216) AND ((d_year#216 >= 1998) AND (d_year#216 <= 2000))) AND isnotnull(d_date_sk#210))\n         :                       :                 :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#210,d_date_id#211,d_date#212,d_month_seq#213,d_week_seq#214,d_quarter_seq#215,d_year#216,d_dow#217,d_moy#218,d_dom#219,d_qoy#220,d_fy_year#221,d_fy_quarter_seq#222,d_fy_week_seq#223,d_day_name#224,d_quarter_name#225,d_holiday#226,d_weekend#227,d_following_holiday#228,d_first_dom#229,d_last_dom#230,d_same_day_ly#231,d_same_day_lq#232,d_current_day#233,... 4 more fields] parquet\n         :                       :                 +- Project [i_item_sk#188, i_brand_id#195, i_class_id#197, i_category_id#199]\n         :                       :                    +- Filter isnotnull(i_item_sk#188)\n         :                       :                       +- Relation spark_catalog.tpcds_100.item[i_item_sk#188,i_item_id#189,i_rec_start_date#190,i_rec_end_date#191,i_item_desc#192,i_current_price#193,i_wholesale_cost#194,i_brand_id#195,i_brand#196,i_class_id#197,i_class#198,i_category_id#199,i_category#200,i_manufact_id#201,i_manufact#202,i_size#203,i_formulation#204,i_color#205,i_units#206,i_container#207,i_manager_id#208,i_product_name#209] parquet\n         :                       +- Project [i_brand_id#245, i_class_id#247, i_category_id#249]\n         :                          +- Join Inner, (ws_item_sk#134 = i_item_sk#238)\n         :                             :- Project [ws_item_sk#134]\n         :                             :  +- Join Inner, (ws_sold_date_sk#165 = d_date_sk#260)\n         :                             :     :- Project [ws_item_sk#134, ws_sold_date_sk#165]\n         :                             :     :  +- Filter ((isnotnull(ws_item_sk#134) AND isnotnull(ws_sold_date_sk#165)) AND dynamicpruning#709 [ws_sold_date_sk#165])\n         :                             :     :     :  +- Project [d_date_sk#260]\n         :                             :     :     :     +- Filter ((isnotnull(d_year#266) AND ((d_year#266 >= 1998) AND (d_year#266 <= 2000))) AND isnotnull(d_date_sk#260))\n         :                             :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#260,d_date_id#261,d_date#262,d_month_seq#263,d_week_seq#264,d_quarter_seq#265,d_year#266,d_dow#267,d_moy#268,d_dom#269,d_qoy#270,d_fy_year#271,d_fy_quarter_seq#272,d_fy_week_seq#273,d_day_name#274,d_quarter_name#275,d_holiday#276,d_weekend#277,d_following_holiday#278,d_first_dom#279,d_last_dom#280,d_same_day_ly#281,d_same_day_lq#282,d_current_day#283,... 4 more fields] parquet\n         :                             :     :     +- Relation spark_catalog.tpcds_100.web_sales[ws_sold_time_sk#132,ws_ship_date_sk#133,ws_item_sk#134,ws_bill_customer_sk#135,ws_bill_cdemo_sk#136,ws_bill_hdemo_sk#137,ws_bill_addr_sk#138,ws_ship_customer_sk#139,ws_ship_cdemo_sk#140,ws_ship_hdemo_sk#141,ws_ship_addr_sk#142,ws_web_page_sk#143,ws_web_site_sk#144,ws_ship_mode_sk#145,ws_warehouse_sk#146,ws_promo_sk#147,ws_order_number#148L,ws_quantity#149,ws_wholesale_cost#150,ws_list_price#151,ws_sales_price#152,ws_ext_discount_amt#153,ws_ext_sales_price#154,ws_ext_wholesale_cost#155,... 10 more fields] parquet\n         :                             :     +- Project [d_date_sk#260]\n         :                             :        +- Filter ((isnotnull(d_year#266) AND ((d_year#266 >= 1998) AND (d_year#266 <= 2000))) AND isnotnull(d_date_sk#260))\n         :                             :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#260,d_date_id#261,d_date#262,d_month_seq#263,d_week_seq#264,d_quarter_seq#265,d_year#266,d_dow#267,d_moy#268,d_dom#269,d_qoy#270,d_fy_year#271,d_fy_quarter_seq#272,d_fy_week_seq#273,d_day_name#274,d_quarter_name#275,d_holiday#276,d_weekend#277,d_following_holiday#278,d_first_dom#279,d_last_dom#280,d_same_day_ly#281,d_same_day_lq#282,d_current_day#283,... 4 more fields] parquet\n         :                             +- Project [i_item_sk#238, i_brand_id#245, i_class_id#247, i_category_id#249]\n         :                                +- Filter isnotnull(i_item_sk#238)\n         :                                   +- Relation spark_catalog.tpcds_100.item[i_item_sk#238,i_item_id#239,i_rec_start_date#240,i_rec_end_date#241,i_item_desc#242,i_current_price#243,i_wholesale_cost#244,i_brand_id#245,i_brand#246,i_class_id#247,i_class#248,i_category_id#249,i_category#250,i_manufact_id#251,i_manufact#252,i_size#253,i_formulation#254,i_color#255,i_units#256,i_container#257,i_manager_id#258,i_product_name#259] parquet\n         +- Filter (isnotnull(sales#7) AND (cast(sales#7 as decimal(32,6)) > cast(scalar-subquery#11 [] as decimal(32,6))))\n            :  +- Aggregate [avg((cast(quantity#16 as decimal(10,0)) * list_price#17)) AS average_sales#22]\n            :     +- Union false, false\n            :        :- Project [ss_quantity#297 AS quantity#16, ss_list_price#299 AS list_price#17]\n            :        :  +- Join Inner, (ss_sold_date_sk#310 = d_date_sk#311)\n            :        :     :- Project [ss_quantity#297, ss_list_price#299, ss_sold_date_sk#310]\n            :        :     :  +- Filter (isnotnull(ss_sold_date_sk#310) AND dynamicpruning#704 [ss_sold_date_sk#310])\n            :        :     :     :  +- Project [d_date_sk#311]\n            :        :     :     :     +- Filter ((isnotnull(d_year#317) AND ((d_year#317 >= 1998) AND (d_year#317 <= 2000))) AND isnotnull(d_date_sk#311))\n            :        :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#311,d_date_id#312,d_date#313,d_month_seq#314,d_week_seq#315,d_quarter_seq#316,d_year#317,d_dow#318,d_moy#319,d_dom#320,d_qoy#321,d_fy_year#322,d_fy_quarter_seq#323,d_fy_week_seq#324,d_day_name#325,d_quarter_name#326,d_holiday#327,d_weekend#328,d_following_holiday#329,d_first_dom#330,d_last_dom#331,d_same_day_ly#332,d_same_day_lq#333,d_current_day#334,... 4 more fields] parquet\n            :        :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#288,ss_item_sk#289,ss_customer_sk#290,ss_cdemo_sk#291,ss_hdemo_sk#292,ss_addr_sk#293,ss_store_sk#294,ss_promo_sk#295,ss_ticket_number#296L,ss_quantity#297,ss_wholesale_cost#298,ss_list_price#299,ss_sales_price#300,ss_ext_discount_amt#301,ss_ext_sales_price#302,ss_ext_wholesale_cost#303,ss_ext_list_price#304,ss_ext_tax#305,ss_coupon_amt#306,ss_net_paid#307,ss_net_paid_inc_tax#308,ss_net_profit#309,ss_sold_date_sk#310] parquet\n            :        :     +- Project [d_date_sk#311]\n            :        :        +- Filter ((isnotnull(d_year#317) AND ((d_year#317 >= 1998) AND (d_year#317 <= 2000))) AND isnotnull(d_date_sk#311))\n            :        :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#311,d_date_id#312,d_date#313,d_month_seq#314,d_week_seq#315,d_quarter_seq#316,d_year#317,d_dow#318,d_moy#319,d_dom#320,d_qoy#321,d_fy_year#322,d_fy_quarter_seq#323,d_fy_week_seq#324,d_day_name#325,d_quarter_name#326,d_holiday#327,d_weekend#328,d_following_holiday#329,d_first_dom#330,d_last_dom#331,d_same_day_ly#332,d_same_day_lq#333,d_current_day#334,... 4 more fields] parquet\n            :        :- Project [cs_quantity#356 AS quantity#18, cs_list_price#358 AS list_price#19]\n            :        :  +- Join Inner, (cs_sold_date_sk#372 = d_date_sk#373)\n            :        :     :- Project [cs_quantity#356, cs_list_price#358, cs_sold_date_sk#372]\n            :        :     :  +- Filter (isnotnull(cs_sold_date_sk#372) AND dynamicpruning#705 [cs_sold_date_sk#372])\n            :        :     :     :  +- Project [d_date_sk#373]\n            :        :     :     :     +- Filter ((isnotnull(d_year#379) AND ((d_year#379 >= 1998) AND (d_year#379 <= 2000))) AND isnotnull(d_date_sk#373))\n            :        :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#373,d_date_id#374,d_date#375,d_month_seq#376,d_week_seq#377,d_quarter_seq#378,d_year#379,d_dow#380,d_moy#381,d_dom#382,d_qoy#383,d_fy_year#384,d_fy_quarter_seq#385,d_fy_week_seq#386,d_day_name#387,d_quarter_name#388,d_holiday#389,d_weekend#390,d_following_holiday#391,d_first_dom#392,d_last_dom#393,d_same_day_ly#394,d_same_day_lq#395,d_current_day#396,... 4 more fields] parquet\n            :        :     :     +- Relation spark_catalog.tpcds_100.catalog_sales[cs_sold_time_sk#339,cs_ship_date_sk#340,cs_bill_customer_sk#341,cs_bill_cdemo_sk#342,cs_bill_hdemo_sk#343,cs_bill_addr_sk#344,cs_ship_customer_sk#345,cs_ship_cdemo_sk#346,cs_ship_hdemo_sk#347,cs_ship_addr_sk#348,cs_call_center_sk#349,cs_catalog_page_sk#350,cs_ship_mode_sk#351,cs_warehouse_sk#352,cs_item_sk#353,cs_promo_sk#354,cs_order_number#355L,cs_quantity#356,cs_wholesale_cost#357,cs_list_price#358,cs_sales_price#359,cs_ext_discount_amt#360,cs_ext_sales_price#361,cs_ext_wholesale_cost#362,... 10 more fields] parquet\n            :        :     +- Project [d_date_sk#373]\n            :        :        +- Filter ((isnotnull(d_year#379) AND ((d_year#379 >= 1998) AND (d_year#379 <= 2000))) AND isnotnull(d_date_sk#373))\n            :        :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#373,d_date_id#374,d_date#375,d_month_seq#376,d_week_seq#377,d_quarter_seq#378,d_year#379,d_dow#380,d_moy#381,d_dom#382,d_qoy#383,d_fy_year#384,d_fy_quarter_seq#385,d_fy_week_seq#386,d_day_name#387,d_quarter_name#388,d_holiday#389,d_weekend#390,d_following_holiday#391,d_first_dom#392,d_last_dom#393,d_same_day_ly#394,d_same_day_lq#395,d_current_day#396,... 4 more fields] parquet\n            :        +- Project [ws_quantity#418 AS quantity#20, ws_list_price#420 AS list_price#21]\n            :           +- Join Inner, (ws_sold_date_sk#434 = d_date_sk#435)\n            :              :- Project [ws_quantity#418, ws_list_price#420, ws_sold_date_sk#434]\n            :              :  +- Filter (isnotnull(ws_sold_date_sk#434) AND dynamicpruning#706 [ws_sold_date_sk#434])\n            :              :     :  +- Project [d_date_sk#435]\n            :              :     :     +- Filter ((isnotnull(d_year#441) AND ((d_year#441 >= 1998) AND (d_year#441 <= 2000))) AND isnotnull(d_date_sk#435))\n            :              :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#435,d_date_id#436,d_date#437,d_month_seq#438,d_week_seq#439,d_quarter_seq#440,d_year#441,d_dow#442,d_moy#443,d_dom#444,d_qoy#445,d_fy_year#446,d_fy_quarter_seq#447,d_fy_week_seq#448,d_day_name#449,d_quarter_name#450,d_holiday#451,d_weekend#452,d_following_holiday#453,d_first_dom#454,d_last_dom#455,d_same_day_ly#456,d_same_day_lq#457,d_current_day#458,... 4 more fields] parquet\n            :              :     +- Relation spark_catalog.tpcds_100.web_sales[ws_sold_time_sk#401,ws_ship_date_sk#402,ws_item_sk#403,ws_bill_customer_sk#404,ws_bill_cdemo_sk#405,ws_bill_hdemo_sk#406,ws_bill_addr_sk#407,ws_ship_customer_sk#408,ws_ship_cdemo_sk#409,ws_ship_hdemo_sk#410,ws_ship_addr_sk#411,ws_web_page_sk#412,ws_web_site_sk#413,ws_ship_mode_sk#414,ws_warehouse_sk#415,ws_promo_sk#416,ws_order_number#417L,ws_quantity#418,ws_wholesale_cost#419,ws_list_price#420,ws_sales_price#421,ws_ext_discount_amt#422,ws_ext_sales_price#423,ws_ext_wholesale_cost#424,... 10 more fields] parquet\n            :              +- Project [d_date_sk#435]\n            :                 +- Filter ((isnotnull(d_year#441) AND ((d_year#441 >= 1998) AND (d_year#441 <= 2000))) AND isnotnull(d_date_sk#435))\n            :                    +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#435,d_date_id#436,d_date#437,d_month_seq#438,d_week_seq#439,d_quarter_seq#440,d_year#441,d_dow#442,d_moy#443,d_dom#444,d_qoy#445,d_fy_year#446,d_fy_quarter_seq#447,d_fy_week_seq#448,d_day_name#449,d_quarter_name#450,d_holiday#451,d_weekend#452,d_following_holiday#453,d_first_dom#454,d_last_dom#455,d_same_day_ly#456,d_same_day_lq#457,d_current_day#458,... 4 more fields] parquet\n            +- Aggregate [i_brand_id#566, i_class_id#568, i_category_id#570], [store AS channel#6, i_brand_id#566, i_class_id#568, i_category_id#570, sum((cast(ss_quantity#545 as decimal(10,0)) * ss_list_price#547)) AS sales#7, count(1) AS number_sales#8L]\n               +- Project [ss_quantity#545, ss_list_price#547, i_brand_id#566, i_class_id#568, i_category_id#570]\n                  +- Join Inner, (ss_item_sk#537 = i_item_sk#559)\n                     :- Project [ss_item_sk#537, ss_quantity#545, ss_list_price#547]\n                     :  +- Join Inner, (ss_sold_date_sk#558 = d_date_sk#581)\n                     :     :- Join LeftSemi, (ss_item_sk#537 = ss_item_sk#15)\n                     :     :  :- Project [ss_item_sk#537, ss_quantity#545, ss_list_price#547, ss_sold_date_sk#558]\n                     :     :  :  +- Filter ((isnotnull(ss_item_sk#537) AND isnotnull(ss_sold_date_sk#558)) AND dynamicpruning#726 [ss_sold_date_sk#558])\n                     :     :  :     :  +- Project [d_date_sk#581]\n                     :     :  :     :     +- Filter ((isnotnull(d_week_seq#585) AND (d_week_seq#585 = scalar-subquery#10 [])) AND isnotnull(d_date_sk#581))\n                     :     :  :     :        :  +- Project [d_week_seq#657]\n                     :     :  :     :        :     +- Filter (((isnotnull(d_year#659) AND isnotnull(d_moy#661)) AND isnotnull(d_dom#662)) AND (((d_year#659 = 1998) AND (d_moy#661 = 12)) AND (d_dom#662 = 16)))\n                     :     :  :     :        :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#653,d_date_id#654,d_date#655,d_month_seq#656,d_week_seq#657,d_quarter_seq#658,d_year#659,d_dow#660,d_moy#661,d_dom#662,d_qoy#663,d_fy_year#664,d_fy_quarter_seq#665,d_fy_week_seq#666,d_day_name#667,d_quarter_name#668,d_holiday#669,d_weekend#670,d_following_holiday#671,d_first_dom#672,d_last_dom#673,d_same_day_ly#674,d_same_day_lq#675,d_current_day#676,... 4 more fields] parquet\n                     :     :  :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#581,d_date_id#582,d_date#583,d_month_seq#584,d_week_seq#585,d_quarter_seq#586,d_year#587,d_dow#588,d_moy#589,d_dom#590,d_qoy#591,d_fy_year#592,d_fy_quarter_seq#593,d_fy_week_seq#594,d_day_name#595,d_quarter_name#596,d_holiday#597,d_weekend#598,d_following_holiday#599,d_first_dom#600,d_last_dom#601,d_same_day_ly#602,d_same_day_lq#603,d_current_day#604,... 4 more fields] parquet\n                     :     :  :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#536,ss_item_sk#537,ss_customer_sk#538,ss_cdemo_sk#539,ss_hdemo_sk#540,ss_addr_sk#541,ss_store_sk#542,ss_promo_sk#543,ss_ticket_number#544L,ss_quantity#545,ss_wholesale_cost#546,ss_list_price#547,ss_sales_price#548,ss_ext_discount_amt#549,ss_ext_sales_price#550,ss_ext_wholesale_cost#551,ss_ext_list_price#552,ss_ext_tax#553,ss_coupon_amt#554,ss_net_paid#555,ss_net_paid_inc_tax#556,ss_net_profit#557,ss_sold_date_sk#558] parquet\n                     :     :  +- Project [i_item_sk#25 AS ss_item_sk#15]\n                     :     :     +- Join Inner, (((i_brand_id#32 = brand_id#12) AND (i_class_id#34 = class_id#13)) AND (i_category_id#36 = category_id#14))\n                     :     :        :- Project [i_item_sk#25, i_brand_id#32, i_class_id#34, i_category_id#36]\n                     :     :        :  +- Filter ((isnotnull(i_brand_id#32) AND isnotnull(i_class_id#34)) AND isnotnull(i_category_id#36))\n                     :     :        :     +- Relation spark_catalog.tpcds_100.item[i_item_sk#25,i_item_id#26,i_rec_start_date#27,i_rec_end_date#28,i_item_desc#29,i_current_price#30,i_wholesale_cost#31,i_brand_id#32,i_brand#33,i_class_id#34,i_class#35,i_category_id#36,i_category#37,i_manufact_id#38,i_manufact#39,i_size#40,i_formulation#41,i_color#42,i_units#43,i_container#44,i_manager_id#45,i_product_name#46] parquet\n                     :     :        +- Join LeftSemi, (((brand_id#12 <=> i_brand_id#245) AND (class_id#13 <=> i_class_id#247)) AND (category_id#14 <=> i_category_id#249))\n                     :     :           :- Aggregate [brand_id#12, class_id#13, category_id#14], [brand_id#12, class_id#13, category_id#14]\n                     :     :           :  +- Project [i_brand_id#173 AS brand_id#12, i_class_id#175 AS class_id#13, i_category_id#177 AS category_id#14]\n                     :     :           :     +- Join Inner, (ss_item_sk#48 = i_item_sk#166)\n                     :     :           :        :- Project [ss_item_sk#48]\n                     :     :           :        :  +- Join Inner, (ss_sold_date_sk#69 = d_date_sk#70)\n                     :     :           :        :     :- Project [ss_item_sk#48, ss_sold_date_sk#69]\n                     :     :           :        :     :  +- Filter ((isnotnull(ss_item_sk#48) AND isnotnull(ss_sold_date_sk#69)) AND dynamicpruning#713 [ss_sold_date_sk#69])\n                     :     :           :        :     :     :  +- Project [d_date_sk#70]\n                     :     :           :        :     :     :     +- Filter ((isnotnull(d_year#76) AND ((d_year#76 >= 1998) AND (d_year#76 <= 2000))) AND isnotnull(d_date_sk#70))\n                     :     :           :        :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#70,d_date_id#71,d_date#72,d_month_seq#73,d_week_seq#74,d_quarter_seq#75,d_year#76,d_dow#77,d_moy#78,d_dom#79,d_qoy#80,d_fy_year#81,d_fy_quarter_seq#82,d_fy_week_seq#83,d_day_name#84,d_quarter_name#85,d_holiday#86,d_weekend#87,d_following_holiday#88,d_first_dom#89,d_last_dom#90,d_same_day_ly#91,d_same_day_lq#92,d_current_day#93,... 4 more fields] parquet\n                     :     :           :        :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#47,ss_item_sk#48,ss_customer_sk#49,ss_cdemo_sk#50,ss_hdemo_sk#51,ss_addr_sk#52,ss_store_sk#53,ss_promo_sk#54,ss_ticket_number#55L,ss_quantity#56,ss_wholesale_cost#57,ss_list_price#58,ss_sales_price#59,ss_ext_discount_amt#60,ss_ext_sales_price#61,ss_ext_wholesale_cost#62,ss_ext_list_price#63,ss_ext_tax#64,ss_coupon_amt#65,ss_net_paid#66,ss_net_paid_inc_tax#67,ss_net_profit#68,ss_sold_date_sk#69] parquet\n                     :     :           :        :     +- Project [d_date_sk#70]\n                     :     :           :        :        +- Filter ((isnotnull(d_year#76) AND ((d_year#76 >= 1998) AND (d_year#76 <= 2000))) AND isnotnull(d_date_sk#70))\n                     :     :           :        :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#70,d_date_id#71,d_date#72,d_month_seq#73,d_week_seq#74,d_quarter_seq#75,d_year#76,d_dow#77,d_moy#78,d_dom#79,d_qoy#80,d_fy_year#81,d_fy_quarter_seq#82,d_fy_week_seq#83,d_day_name#84,d_quarter_name#85,d_holiday#86,d_weekend#87,d_following_holiday#88,d_first_dom#89,d_last_dom#90,d_same_day_ly#91,d_same_day_lq#92,d_current_day#93,... 4 more fields] parquet\n                     :     :           :        +- Join LeftSemi, (((i_brand_id#173 <=> i_brand_id#195) AND (i_class_id#175 <=> i_class_id#197)) AND (i_category_id#177 <=> i_category_id#199))\n                     :     :           :           :- Project [i_item_sk#166, i_brand_id#173, i_class_id#175, i_category_id#177]\n                     :     :           :           :  +- Filter (isnotnull(i_item_sk#166) AND ((isnotnull(i_brand_id#173) AND isnotnull(i_class_id#175)) AND isnotnull(i_category_id#177)))\n                     :     :           :           :     +- Relation spark_catalog.tpcds_100.item[i_item_sk#166,i_item_id#167,i_rec_start_date#168,i_rec_end_date#169,i_item_desc#170,i_current_price#171,i_wholesale_cost#172,i_brand_id#173,i_brand#174,i_class_id#175,i_class#176,i_category_id#177,i_category#178,i_manufact_id#179,i_manufact#180,i_size#181,i_formulation#182,i_color#183,i_units#184,i_container#185,i_manager_id#186,i_product_name#187] parquet\n                     :     :           :           +- Project [i_brand_id#195, i_class_id#197, i_category_id#199]\n                     :     :           :              +- Join Inner, (cs_item_sk#112 = i_item_sk#188)\n                     :     :           :                 :- Project [cs_item_sk#112]\n                     :     :           :                 :  +- Join Inner, (cs_sold_date_sk#131 = d_date_sk#210)\n                     :     :           :                 :     :- Project [cs_item_sk#112, cs_sold_date_sk#131]\n                     :     :           :                 :     :  +- Filter ((isnotnull(cs_item_sk#112) AND isnotnull(cs_sold_date_sk#131)) AND dynamicpruning#714 [cs_sold_date_sk#131])\n                     :     :           :                 :     :     :  +- Project [d_date_sk#210]\n                     :     :           :                 :     :     :     +- Filter ((isnotnull(d_year#216) AND ((d_year#216 >= 1998) AND (d_year#216 <= 2000))) AND isnotnull(d_date_sk#210))\n                     :     :           :                 :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#210,d_date_id#211,d_date#212,d_month_seq#213,d_week_seq#214,d_quarter_seq#215,d_year#216,d_dow#217,d_moy#218,d_dom#219,d_qoy#220,d_fy_year#221,d_fy_quarter_seq#222,d_fy_week_seq#223,d_day_name#224,d_quarter_name#225,d_holiday#226,d_weekend#227,d_following_holiday#228,d_first_dom#229,d_last_dom#230,d_same_day_ly#231,d_same_day_lq#232,d_current_day#233,... 4 more fields] parquet\n                     :     :           :                 :     :     +- Relation spark_catalog.tpcds_100.catalog_sales[cs_sold_time_sk#98,cs_ship_date_sk#99,cs_bill_customer_sk#100,cs_bill_cdemo_sk#101,cs_bill_hdemo_sk#102,cs_bill_addr_sk#103,cs_ship_customer_sk#104,cs_ship_cdemo_sk#105,cs_ship_hdemo_sk#106,cs_ship_addr_sk#107,cs_call_center_sk#108,cs_catalog_page_sk#109,cs_ship_mode_sk#110,cs_warehouse_sk#111,cs_item_sk#112,cs_promo_sk#113,cs_order_number#114L,cs_quantity#115,cs_wholesale_cost#116,cs_list_price#117,cs_sales_price#118,cs_ext_discount_amt#119,cs_ext_sales_price#120,cs_ext_wholesale_cost#121,... 10 more fields] parquet\n                     :     :           :                 :     +- Project [d_date_sk#210]\n                     :     :           :                 :        +- Filter ((isnotnull(d_year#216) AND ((d_year#216 >= 1998) AND (d_year#216 <= 2000))) AND isnotnull(d_date_sk#210))\n                     :     :           :                 :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#210,d_date_id#211,d_date#212,d_month_seq#213,d_week_seq#214,d_quarter_seq#215,d_year#216,d_dow#217,d_moy#218,d_dom#219,d_qoy#220,d_fy_year#221,d_fy_quarter_seq#222,d_fy_week_seq#223,d_day_name#224,d_quarter_name#225,d_holiday#226,d_weekend#227,d_following_holiday#228,d_first_dom#229,d_last_dom#230,d_same_day_ly#231,d_same_day_lq#232,d_current_day#233,... 4 more fields] parquet\n                     :     :           :                 +- Project [i_item_sk#188, i_brand_id#195, i_class_id#197, i_category_id#199]\n                     :     :           :                    +- Filter isnotnull(i_item_sk#188)\n                     :     :           :                       +- Relation spark_catalog.tpcds_100.item[i_item_sk#188,i_item_id#189,i_rec_start_date#190,i_rec_end_date#191,i_item_desc#192,i_current_price#193,i_wholesale_cost#194,i_brand_id#195,i_brand#196,i_class_id#197,i_class#198,i_category_id#199,i_category#200,i_manufact_id#201,i_manufact#202,i_size#203,i_formulation#204,i_color#205,i_units#206,i_container#207,i_manager_id#208,i_product_name#209] parquet\n                     :     :           +- Project [i_brand_id#245, i_class_id#247, i_category_id#249]\n                     :     :              +- Join Inner, (ws_item_sk#134 = i_item_sk#238)\n                     :     :                 :- Project [ws_item_sk#134]\n                     :     :                 :  +- Join Inner, (ws_sold_date_sk#165 = d_date_sk#260)\n                     :     :                 :     :- Project [ws_item_sk#134, ws_sold_date_sk#165]\n                     :     :                 :     :  +- Filter ((isnotnull(ws_item_sk#134) AND isnotnull(ws_sold_date_sk#165)) AND dynamicpruning#715 [ws_sold_date_sk#165])\n                     :     :                 :     :     :  +- Project [d_date_sk#260]\n                     :     :                 :     :     :     +- Filter ((isnotnull(d_year#266) AND ((d_year#266 >= 1998) AND (d_year#266 <= 2000))) AND isnotnull(d_date_sk#260))\n                     :     :                 :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#260,d_date_id#261,d_date#262,d_month_seq#263,d_week_seq#264,d_quarter_seq#265,d_year#266,d_dow#267,d_moy#268,d_dom#269,d_qoy#270,d_fy_year#271,d_fy_quarter_seq#272,d_fy_week_seq#273,d_day_name#274,d_quarter_name#275,d_holiday#276,d_weekend#277,d_following_holiday#278,d_first_dom#279,d_last_dom#280,d_same_day_ly#281,d_same_day_lq#282,d_current_day#283,... 4 more fields] parquet\n                     :     :                 :     :     +- Relation spark_catalog.tpcds_100.web_sales[ws_sold_time_sk#132,ws_ship_date_sk#133,ws_item_sk#134,ws_bill_customer_sk#135,ws_bill_cdemo_sk#136,ws_bill_hdemo_sk#137,ws_bill_addr_sk#138,ws_ship_customer_sk#139,ws_ship_cdemo_sk#140,ws_ship_hdemo_sk#141,ws_ship_addr_sk#142,ws_web_page_sk#143,ws_web_site_sk#144,ws_ship_mode_sk#145,ws_warehouse_sk#146,ws_promo_sk#147,ws_order_number#148L,ws_quantity#149,ws_wholesale_cost#150,ws_list_price#151,ws_sales_price#152,ws_ext_discount_amt#153,ws_ext_sales_price#154,ws_ext_wholesale_cost#155,... 10 more fields] parquet\n                     :     :                 :     +- Project [d_date_sk#260]\n                     :     :                 :        +- Filter ((isnotnull(d_year#266) AND ((d_year#266 >= 1998) AND (d_year#266 <= 2000))) AND isnotnull(d_date_sk#260))\n                     :     :                 :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#260,d_date_id#261,d_date#262,d_month_seq#263,d_week_seq#264,d_quarter_seq#265,d_year#266,d_dow#267,d_moy#268,d_dom#269,d_qoy#270,d_fy_year#271,d_fy_quarter_seq#272,d_fy_week_seq#273,d_day_name#274,d_quarter_name#275,d_holiday#276,d_weekend#277,d_following_holiday#278,d_first_dom#279,d_last_dom#280,d_same_day_ly#281,d_same_day_lq#282,d_current_day#283,... 4 more fields] parquet\n                     :     :                 +- Project [i_item_sk#238, i_brand_id#245, i_class_id#247, i_category_id#249]\n                     :     :                    +- Filter isnotnull(i_item_sk#238)\n                     :     :                       +- Relation spark_catalog.tpcds_100.item[i_item_sk#238,i_item_id#239,i_rec_start_date#240,i_rec_end_date#241,i_item_desc#242,i_current_price#243,i_wholesale_cost#244,i_brand_id#245,i_brand#246,i_class_id#247,i_class#248,i_category_id#249,i_category#250,i_manufact_id#251,i_manufact#252,i_size#253,i_formulation#254,i_color#255,i_units#256,i_container#257,i_manager_id#258,i_product_name#259] parquet\n                     :     +- Project [d_date_sk#581]\n                     :        +- Filter ((isnotnull(d_week_seq#585) AND (d_week_seq#585 = scalar-subquery#10 [])) AND isnotnull(d_date_sk#581))\n                     :           :  +- Project [d_week_seq#657]\n                     :           :     +- Filter (((isnotnull(d_year#659) AND isnotnull(d_moy#661)) AND isnotnull(d_dom#662)) AND (((d_year#659 = 1998) AND (d_moy#661 = 12)) AND (d_dom#662 = 16)))\n                     :           :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#653,d_date_id#654,d_date#655,d_month_seq#656,d_week_seq#657,d_quarter_seq#658,d_year#659,d_dow#660,d_moy#661,d_dom#662,d_qoy#663,d_fy_year#664,d_fy_quarter_seq#665,d_fy_week_seq#666,d_day_name#667,d_quarter_name#668,d_holiday#669,d_weekend#670,d_following_holiday#671,d_first_dom#672,d_last_dom#673,d_same_day_ly#674,d_same_day_lq#675,d_current_day#676,... 4 more fields] parquet\n                     :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#581,d_date_id#582,d_date#583,d_month_seq#584,d_week_seq#585,d_quarter_seq#586,d_year#587,d_dow#588,d_moy#589,d_dom#590,d_qoy#591,d_fy_year#592,d_fy_quarter_seq#593,d_fy_week_seq#594,d_day_name#595,d_quarter_name#596,d_holiday#597,d_weekend#598,d_following_holiday#599,d_first_dom#600,d_last_dom#601,d_same_day_ly#602,d_same_day_lq#603,d_current_day#604,... 4 more fields] parquet\n                     +- Join LeftSemi, (i_item_sk#559 = ss_item_sk#15)\n                        :- Project [i_item_sk#559, i_brand_id#566, i_class_id#568, i_category_id#570]\n                        :  +- Filter (((isnotnull(i_item_sk#559) AND isnotnull(i_brand_id#566)) AND isnotnull(i_class_id#568)) AND isnotnull(i_category_id#570))\n                        :     +- Relation spark_catalog.tpcds_100.item[i_item_sk#559,i_item_id#560,i_rec_start_date#561,i_rec_end_date#562,i_item_desc#563,i_current_price#564,i_wholesale_cost#565,i_brand_id#566,i_brand#567,i_class_id#568,i_class#569,i_category_id#570,i_category#571,i_manufact_id#572,i_manufact#573,i_size#574,i_formulation#575,i_color#576,i_units#577,i_container#578,i_manager_id#579,i_product_name#580] parquet\n                        +- Project [i_item_sk#25 AS ss_item_sk#15]\n                           +- Join Inner, (((i_brand_id#32 = brand_id#12) AND (i_class_id#34 = class_id#13)) AND (i_category_id#36 = category_id#14))\n                              :- Project [i_item_sk#25, i_brand_id#32, i_class_id#34, i_category_id#36]\n                              :  +- Filter ((isnotnull(i_brand_id#32) AND isnotnull(i_class_id#34)) AND isnotnull(i_category_id#36))\n                              :     +- Relation spark_catalog.tpcds_100.item[i_item_sk#25,i_item_id#26,i_rec_start_date#27,i_rec_end_date#28,i_item_desc#29,i_current_price#30,i_wholesale_cost#31,i_brand_id#32,i_brand#33,i_class_id#34,i_class#35,i_category_id#36,i_category#37,i_manufact_id#38,i_manufact#39,i_size#40,i_formulation#41,i_color#42,i_units#43,i_container#44,i_manager_id#45,i_product_name#46] parquet\n                              +- Join LeftSemi, (((brand_id#12 <=> i_brand_id#245) AND (class_id#13 <=> i_class_id#247)) AND (category_id#14 <=> i_category_id#249))\n                                 :- Aggregate [brand_id#12, class_id#13, category_id#14], [brand_id#12, class_id#13, category_id#14]\n                                 :  +- Project [i_brand_id#173 AS brand_id#12, i_class_id#175 AS class_id#13, i_category_id#177 AS category_id#14]\n                                 :     +- Join Inner, (ss_item_sk#48 = i_item_sk#166)\n                                 :        :- Project [ss_item_sk#48]\n                                 :        :  +- Join Inner, (ss_sold_date_sk#69 = d_date_sk#70)\n                                 :        :     :- Project [ss_item_sk#48, ss_sold_date_sk#69]\n                                 :        :     :  +- Filter ((isnotnull(ss_item_sk#48) AND isnotnull(ss_sold_date_sk#69)) AND dynamicpruning#713 [ss_sold_date_sk#69])\n                                 :        :     :     :  +- Project [d_date_sk#70]\n                                 :        :     :     :     +- Filter ((isnotnull(d_year#76) AND ((d_year#76 >= 1998) AND (d_year#76 <= 2000))) AND isnotnull(d_date_sk#70))\n                                 :        :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#70,d_date_id#71,d_date#72,d_month_seq#73,d_week_seq#74,d_quarter_seq#75,d_year#76,d_dow#77,d_moy#78,d_dom#79,d_qoy#80,d_fy_year#81,d_fy_quarter_seq#82,d_fy_week_seq#83,d_day_name#84,d_quarter_name#85,d_holiday#86,d_weekend#87,d_following_holiday#88,d_first_dom#89,d_last_dom#90,d_same_day_ly#91,d_same_day_lq#92,d_current_day#93,... 4 more fields] parquet\n                                 :        :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#47,ss_item_sk#48,ss_customer_sk#49,ss_cdemo_sk#50,ss_hdemo_sk#51,ss_addr_sk#52,ss_store_sk#53,ss_promo_sk#54,ss_ticket_number#55L,ss_quantity#56,ss_wholesale_cost#57,ss_list_price#58,ss_sales_price#59,ss_ext_discount_amt#60,ss_ext_sales_price#61,ss_ext_wholesale_cost#62,ss_ext_list_price#63,ss_ext_tax#64,ss_coupon_amt#65,ss_net_paid#66,ss_net_paid_inc_tax#67,ss_net_profit#68,ss_sold_date_sk#69] parquet\n                                 :        :     +- Project [d_date_sk#70]\n                                 :        :        +- Filter ((isnotnull(d_year#76) AND ((d_year#76 >= 1998) AND (d_year#76 <= 2000))) AND isnotnull(d_date_sk#70))\n                                 :        :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#70,d_date_id#71,d_date#72,d_month_seq#73,d_week_seq#74,d_quarter_seq#75,d_year#76,d_dow#77,d_moy#78,d_dom#79,d_qoy#80,d_fy_year#81,d_fy_quarter_seq#82,d_fy_week_seq#83,d_day_name#84,d_quarter_name#85,d_holiday#86,d_weekend#87,d_following_holiday#88,d_first_dom#89,d_last_dom#90,d_same_day_ly#91,d_same_day_lq#92,d_current_day#93,... 4 more fields] parquet\n                                 :        +- Join LeftSemi, (((i_brand_id#173 <=> i_brand_id#195) AND (i_class_id#175 <=> i_class_id#197)) AND (i_category_id#177 <=> i_category_id#199))\n                                 :           :- Project [i_item_sk#166, i_brand_id#173, i_class_id#175, i_category_id#177]\n                                 :           :  +- Filter (isnotnull(i_item_sk#166) AND ((isnotnull(i_brand_id#173) AND isnotnull(i_class_id#175)) AND isnotnull(i_category_id#177)))\n                                 :           :     +- Relation spark_catalog.tpcds_100.item[i_item_sk#166,i_item_id#167,i_rec_start_date#168,i_rec_end_date#169,i_item_desc#170,i_current_price#171,i_wholesale_cost#172,i_brand_id#173,i_brand#174,i_class_id#175,i_class#176,i_category_id#177,i_category#178,i_manufact_id#179,i_manufact#180,i_size#181,i_formulation#182,i_color#183,i_units#184,i_container#185,i_manager_id#186,i_product_name#187] parquet\n                                 :           +- Project [i_brand_id#195, i_class_id#197, i_category_id#199]\n                                 :              +- Join Inner, (cs_item_sk#112 = i_item_sk#188)\n                                 :                 :- Project [cs_item_sk#112]\n                                 :                 :  +- Join Inner, (cs_sold_date_sk#131 = d_date_sk#210)\n                                 :                 :     :- Project [cs_item_sk#112, cs_sold_date_sk#131]\n                                 :                 :     :  +- Filter ((isnotnull(cs_item_sk#112) AND isnotnull(cs_sold_date_sk#131)) AND dynamicpruning#714 [cs_sold_date_sk#131])\n                                 :                 :     :     :  +- Project [d_date_sk#210]\n                                 :                 :     :     :     +- Filter ((isnotnull(d_year#216) AND ((d_year#216 >= 1998) AND (d_year#216 <= 2000))) AND isnotnull(d_date_sk#210))\n                                 :                 :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#210,d_date_id#211,d_date#212,d_month_seq#213,d_week_seq#214,d_quarter_seq#215,d_year#216,d_dow#217,d_moy#218,d_dom#219,d_qoy#220,d_fy_year#221,d_fy_quarter_seq#222,d_fy_week_seq#223,d_day_name#224,d_quarter_name#225,d_holiday#226,d_weekend#227,d_following_holiday#228,d_first_dom#229,d_last_dom#230,d_same_day_ly#231,d_same_day_lq#232,d_current_day#233,... 4 more fields] parquet\n                                 :                 :     :     +- Relation spark_catalog.tpcds_100.catalog_sales[cs_sold_time_sk#98,cs_ship_date_sk#99,cs_bill_customer_sk#100,cs_bill_cdemo_sk#101,cs_bill_hdemo_sk#102,cs_bill_addr_sk#103,cs_ship_customer_sk#104,cs_ship_cdemo_sk#105,cs_ship_hdemo_sk#106,cs_ship_addr_sk#107,cs_call_center_sk#108,cs_catalog_page_sk#109,cs_ship_mode_sk#110,cs_warehouse_sk#111,cs_item_sk#112,cs_promo_sk#113,cs_order_number#114L,cs_quantity#115,cs_wholesale_cost#116,cs_list_price#117,cs_sales_price#118,cs_ext_discount_amt#119,cs_ext_sales_price#120,cs_ext_wholesale_cost#121,... 10 more fields] parquet\n                                 :                 :     +- Project [d_date_sk#210]\n                                 :                 :        +- Filter ((isnotnull(d_year#216) AND ((d_year#216 >= 1998) AND (d_year#216 <= 2000))) AND isnotnull(d_date_sk#210))\n                                 :                 :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#210,d_date_id#211,d_date#212,d_month_seq#213,d_week_seq#214,d_quarter_seq#215,d_year#216,d_dow#217,d_moy#218,d_dom#219,d_qoy#220,d_fy_year#221,d_fy_quarter_seq#222,d_fy_week_seq#223,d_day_name#224,d_quarter_name#225,d_holiday#226,d_weekend#227,d_following_holiday#228,d_first_dom#229,d_last_dom#230,d_same_day_ly#231,d_same_day_lq#232,d_current_day#233,... 4 more fields] parquet\n                                 :                 +- Project [i_item_sk#188, i_brand_id#195, i_class_id#197, i_category_id#199]\n                                 :                    +- Filter isnotnull(i_item_sk#188)\n                                 :                       +- Relation spark_catalog.tpcds_100.item[i_item_sk#188,i_item_id#189,i_rec_start_date#190,i_rec_end_date#191,i_item_desc#192,i_current_price#193,i_wholesale_cost#194,i_brand_id#195,i_brand#196,i_class_id#197,i_class#198,i_category_id#199,i_category#200,i_manufact_id#201,i_manufact#202,i_size#203,i_formulation#204,i_color#205,i_units#206,i_container#207,i_manager_id#208,i_product_name#209] parquet\n                                 +- Project [i_brand_id#245, i_class_id#247, i_category_id#249]\n                                    +- Join Inner, (ws_item_sk#134 = i_item_sk#238)\n                                       :- Project [ws_item_sk#134]\n                                       :  +- Join Inner, (ws_sold_date_sk#165 = d_date_sk#260)\n                                       :     :- Project [ws_item_sk#134, ws_sold_date_sk#165]\n                                       :     :  +- Filter ((isnotnull(ws_item_sk#134) AND isnotnull(ws_sold_date_sk#165)) AND dynamicpruning#715 [ws_sold_date_sk#165])\n                                       :     :     :  +- Project [d_date_sk#260]\n                                       :     :     :     +- Filter ((isnotnull(d_year#266) AND ((d_year#266 >= 1998) AND (d_year#266 <= 2000))) AND isnotnull(d_date_sk#260))\n                                       :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#260,d_date_id#261,d_date#262,d_month_seq#263,d_week_seq#264,d_quarter_seq#265,d_year#266,d_dow#267,d_moy#268,d_dom#269,d_qoy#270,d_fy_year#271,d_fy_quarter_seq#272,d_fy_week_seq#273,d_day_name#274,d_quarter_name#275,d_holiday#276,d_weekend#277,d_following_holiday#278,d_first_dom#279,d_last_dom#280,d_same_day_ly#281,d_same_day_lq#282,d_current_day#283,... 4 more fields] parquet\n                                       :     :     +- Relation spark_catalog.tpcds_100.web_sales[ws_sold_time_sk#132,ws_ship_date_sk#133,ws_item_sk#134,ws_bill_customer_sk#135,ws_bill_cdemo_sk#136,ws_bill_hdemo_sk#137,ws_bill_addr_sk#138,ws_ship_customer_sk#139,ws_ship_cdemo_sk#140,ws_ship_hdemo_sk#141,ws_ship_addr_sk#142,ws_web_page_sk#143,ws_web_site_sk#144,ws_ship_mode_sk#145,ws_warehouse_sk#146,ws_promo_sk#147,ws_order_number#148L,ws_quantity#149,ws_wholesale_cost#150,ws_list_price#151,ws_sales_price#152,ws_ext_discount_amt#153,ws_ext_sales_price#154,ws_ext_wholesale_cost#155,... 10 more fields] parquet\n                                       :     +- Project [d_date_sk#260]\n                                       :        +- Filter ((isnotnull(d_year#266) AND ((d_year#266 >= 1998) AND (d_year#266 <= 2000))) AND isnotnull(d_date_sk#260))\n                                       :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#260,d_date_id#261,d_date#262,d_month_seq#263,d_week_seq#264,d_quarter_seq#265,d_year#266,d_dow#267,d_moy#268,d_dom#269,d_qoy#270,d_fy_year#271,d_fy_quarter_seq#272,d_fy_week_seq#273,d_day_name#274,d_quarter_name#275,d_holiday#276,d_weekend#277,d_following_holiday#278,d_first_dom#279,d_last_dom#280,d_same_day_ly#281,d_same_day_lq#282,d_current_day#283,... 4 more fields] parquet\n                                       +- Project [i_item_sk#238, i_brand_id#245, i_class_id#247, i_category_id#249]\n                                          +- Filter isnotnull(i_item_sk#238)\n                                             +- Relation spark_catalog.tpcds_100.item[i_item_sk#238,i_item_id#239,i_rec_start_date#240,i_rec_end_date#241,i_item_desc#242,i_current_price#243,i_wholesale_cost#244,i_brand_id#245,i_brand#246,i_class_id#247,i_class#248,i_category_id#249,i_category#250,i_manufact_id#251,i_manufact#252,i_size#253,i_formulation#254,i_color#255,i_units#256,i_container#257,i_manager_id#258,i_product_name#259] parquet\n"
    },
    "IM" : {
      "inputSizeInBytes" : 431750740004,
      "inputRowCount" : 2515993368
    },
    "PD" : { },
    "Configuration" : {
      "theta_c" : [ {
        "spark.executor.memory" : "1g"
      }, {
        "spark.executor.cores" : "1"
      }, {
        "spark.executor.instances" : "16"
      }, {
        "spark.default.parallelism" : "16"
      }, {
        "spark.reducer.maxSizeInFlight" : "48m"
      }, {
        "spark.shuffle.sort.bypassMergeThreshold" : "200"
      }, {
        "spark.shuffle.compress" : "true"
      }, {
        "spark.memory.fraction" : "0.6"
      } ],
      "theta_p" : [ {
        "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
      }, {
        "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
      }, {
        "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
      }, {
        "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
      }, {
        "spark.sql.shuffle.partitions" : "200"
      }, {
        "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
      }, {
        "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
      }, {
        "spark.sql.files.maxPartitionBytes" : "128MB"
      }, {
        "spark.sql.files.openCostInBytes" : "4MB"
      } ],
      "theta_s" : [ {
        "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
      }, {
        "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
      } ]
    }
  },
  "RuntimeLQPs" : {
    "12" : {
      "LQP" : {
        "operators" : {
          "45" : {
            "sign" : 2019201408,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 17256,
            "rowCount" : 1438,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#900] "
          },
          "34" : {
            "sign" : 1910717224,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 16332372468,
            "rowCount" : 453677013,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (((i_brand_id#32 = brand_id#742) AND (i_class_id#34 = class_id#743)) AND (i_category_id#36 = category_id#744)) "
          },
          "67" : {
            "sign" : -2008482538,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 11490316840,
            "rowCount" : 287257921,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_item_sk#1126 = i_item_sk#1148) "
          },
          "93" : {
            "sign" : -562885986,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 2739200,
            "rowCount" : 136960,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [brand_id#742, class_id#743, category_id#744], [brand_id#742, class_id#743, category_id#744], ShuffleQueryStage 81 "
          },
          "12" : {
            "sign" : 571393713,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(ss_item_sk#1053) AND isnotnull(ss_sold_date_sk#1074)) AND dynamicpruning#1303 [ss_sold_date_sk#1074]) "
          },
          "66" : {
            "sign" : 2033168106,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 9192253472,
            "rowCount" : 287257921,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_quantity#1134, ss_list_price#1136, i_brand_id#1155, i_class_id#1157, i_category_id#1159] "
          },
          "89" : {
            "sign" : -1752719423,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 86904000,
            "rowCount" : 204000,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [i_item_sk#1148, i_item_id#1149, i_rec_start_date#1150, i_rec_end_date#1151, i_item_desc#1152, i_current_price#1153, i_wholesale_cost#1154, i_brand_id#1155, i_brand#1156, i_class_id#1157, i_class#1158, i_category_id#1159, i_category#1160, i_manufact_id#1161, i_manufact#1162, i_size#1163, i_formulation#1164, i_color#1165, i_units#1166, i_container#1167, i_manager_id#1168, i_product_name#1169], `spark_catalog`.`tpcds_100`.`item`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "51" : {
            "sign" : 1500374164,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 29800787536,
            "rowCount" : 143273017,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(cs_sold_date_sk#961) AND dynamicpruning#1289 [cs_sold_date_sk#961]) "
          },
          "84" : {
            "sign" : -365670467,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1379777760,
            "rowCount" : 43118055,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_brand_id#834, i_class_id#836, i_category_id#838], ShuffleQueryStage 56 "
          },
          "8" : {
            "sign" : 209187455,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 46207619304,
            "rowCount" : 1925317471,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#1053, ss_quantity#1061, ss_list_price#1063] "
          },
          "73" : {
            "sign" : 1179432008,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#1125, ss_item_sk#1126, ss_customer_sk#1127, ss_cdemo_sk#1128, ss_hdemo_sk#1129, ss_addr_sk#1130, ss_store_sk#1131, ss_promo_sk#1132, ss_ticket_number#1133L, ss_quantity#1134, ss_wholesale_cost#1135, ss_list_price#1136, ss_sales_price#1137, ss_ext_discount_amt#1138, ss_ext_sales_price#1139, ss_ext_wholesale_cost#1140, ss_ext_list_price#1141, ss_ext_tax#1142, ss_coupon_amt#1143, ss_net_paid#1144, ss_net_paid_inc_tax#1145, ss_net_profit#1146, ss_sold_date_sk#1147], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "78" : {
            "sign" : 1734827371,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 492,
            "rowCount" : 2,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(d_year#1243) AND isnotnull(d_moy#1245)) AND isnotnull(d_dom#1246)) AND (((d_year#1243 = 1998) AND (d_moy#1245 = 12)) AND (d_dom#1246 = 16))) "
          },
          "19" : {
            "sign" : -1755539215,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#1209, d_date_id#1210, d_date#1211, d_month_seq#1212, d_week_seq#1213, d_quarter_seq#1214, d_year#1215, d_dow#1216, d_moy#1217, d_dom#1218, d_qoy#1219, d_fy_year#1220, d_fy_quarter_seq#1221, d_fy_week_seq#1222, d_day_name#1223, d_quarter_name#1224, d_holiday#1225, d_weekend#1226, d_following_holiday#1227, d_first_dom#1228, d_last_dom#1229, d_same_day_ly#1230, d_same_day_lq#1231, d_current_day#1232, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "23" : {
            "sign" : -1756391561,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 86282466,
            "rowCount" : 202541,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(i_brand_id#32) AND isnotnull(i_class_id#34)) AND isnotnull(i_category_id#36)) "
          },
          "62" : {
            "sign" : -626435234,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 353748,
            "rowCount" : 1438,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(d_year#1030) AND ((d_year#1030 >= 1998) AND (d_year#1030 <= 2000))) AND isnotnull(d_date_sk#1024)) "
          },
          "4" : {
            "sign" : 550341882,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 10408960,
            "rowCount" : 136960,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(sales#731) AND (cast(sales#731 as decimal(32,6)) > cast(scalar-subquery#735 [] as decimal(32,6)))) "
          },
          "88" : {
            "sign" : -1448453368,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 86282466,
            "rowCount" : 202541,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(i_item_sk#1148) AND isnotnull(i_brand_id#1155)) AND isnotnull(i_class_id#1157)) AND isnotnull(i_category_id#1159)) "
          },
          "77" : {
            "sign" : -79282860,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 24,
            "rowCount" : 2,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_week_seq#1241] "
          },
          "40" : {
            "sign" : 869525063,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 5310811700,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_quantity#886 AS quantity#746, ss_list_price#888 AS list_price#747] "
          },
          "15" : {
            "sign" : 1866012666,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(d_week_seq#1101) AND (d_week_seq#1101 = scalar-subquery#734 [])) AND isnotnull(d_date_sk#1097)) "
          },
          "11" : {
            "sign" : 1222696026,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 7701269884,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#1053, ss_quantity#1061, ss_list_price#1063, ss_sold_date_sk#1074] "
          },
          "90" : {
            "sign" : 1154112415,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 5444124156,
            "rowCount" : 453677013,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_item_sk#25 AS ss_item_sk#745] "
          },
          "9" : {
            "sign" : -1072142622,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 61610159072,
            "rowCount" : 1925317471,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#1074 = d_date_sk#1097) "
          },
          "44" : {
            "sign" : -1972788865,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#877, ss_item_sk#878, ss_customer_sk#879, ss_cdemo_sk#880, ss_hdemo_sk#881, ss_addr_sk#882, ss_store_sk#883, ss_promo_sk#884, ss_ticket_number#885L, ss_quantity#886, ss_wholesale_cost#887, ss_list_price#888, ss_sales_price#889, ss_ext_discount_amt#890, ss_ext_sales_price#891, ss_ext_wholesale_cost#892, ss_ext_list_price#893, ss_ext_tax#894, ss_coupon_amt#895, ss_net_paid#896, ss_net_paid_inc_tax#897, ss_net_profit#898, ss_sold_date_sk#899], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "33" : {
            "sign" : 271311811,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 5444124156,
            "rowCount" : 453677013,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_item_sk#25 AS ss_item_sk#745] "
          },
          "22" : {
            "sign" : 2089743597,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 4860984,
            "rowCount" : 202541,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_item_sk#25, i_brand_id#32, i_class_id#34, i_category_id#36] "
          },
          "56" : {
            "sign" : 17831375,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 1389912100,
            "rowCount" : 69495605,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_quantity#1007 AS quantity#750, ws_list_price#1009 AS list_price#751] "
          },
          "55" : {
            "sign" : -169490734,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#962, d_date_id#963, d_date#964, d_month_seq#965, d_week_seq#966, d_quarter_seq#967, d_year#968, d_dow#969, d_moy#970, d_dom#971, d_qoy#972, d_fy_year#973, d_fy_quarter_seq#974, d_fy_week_seq#975, d_day_name#976, d_quarter_name#977, d_holiday#978, d_weekend#979, d_following_holiday#980, d_first_dom#981, d_last_dom#982, d_same_day_ly#983, d_same_day_lq#984, d_current_day#985, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "26" : {
            "sign" : -562886823,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 2739200,
            "rowCount" : 136960,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [brand_id#742, class_id#743, category_id#744], [brand_id#742, class_id#743, category_id#744], ShuffleQueryStage 75 "
          },
          "50" : {
            "sign" : 1942236716,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 3438552408,
            "rowCount" : 143273017,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_quantity#945, cs_list_price#947, cs_sold_date_sk#961] "
          },
          "37" : {
            "sign" : -365670591,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1379777760,
            "rowCount" : 43118055,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_brand_id#834, i_class_id#836, i_category_id#838], ShuffleQueryStage 52 "
          },
          "68" : {
            "sign" : -2102976592,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 46207619304,
            "rowCount" : 1925317471,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#1126, ss_quantity#1134, ss_list_price#1136] "
          },
          "61" : {
            "sign" : -1100969675,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 17256,
            "rowCount" : 1438,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#1024] "
          },
          "13" : {
            "sign" : 913239237,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#1052, ss_item_sk#1053, ss_customer_sk#1054, ss_cdemo_sk#1055, ss_hdemo_sk#1056, ss_addr_sk#1057, ss_store_sk#1058, ss_promo_sk#1059, ss_ticket_number#1060L, ss_quantity#1061, ss_wholesale_cost#1062, ss_list_price#1063, ss_sales_price#1064, ss_ext_discount_amt#1065, ss_ext_sales_price#1066, ss_ext_wholesale_cost#1067, ss_ext_list_price#1068, ss_ext_tax#1069, ss_coupon_amt#1070, ss_net_paid#1071, ss_net_paid_inc_tax#1072, ss_net_profit#1073, ss_sold_date_sk#1074], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "46" : {
            "sign" : -2071970095,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 353748,
            "rowCount" : 1438,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(d_year#906) AND ((d_year#906 >= 1998) AND (d_year#906 <= 2000))) AND isnotnull(d_date_sk#900)) "
          },
          "24" : {
            "sign" : 2096275601,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 86904000,
            "rowCount" : 204000,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [i_item_sk#25, i_item_id#26, i_rec_start_date#27, i_rec_end_date#28, i_item_desc#29, i_current_price#30, i_wholesale_cost#31, i_brand_id#32, i_brand#33, i_class_id#34, i_class#35, i_category_id#36, i_category#37, i_manufact_id#38, i_manufact#39, i_size#40, i_formulation#41, i_color#42, i_units#43, i_container#44, i_manager_id#45, i_product_name#46], `spark_catalog`.`tpcds_100`.`item`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "94" : {
            "sign" : -365669692,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1379777760,
            "rowCount" : 43118055,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_brand_id#834, i_class_id#836, i_category_id#838], ShuffleQueryStage 60 "
          },
          "83" : {
            "sign" : -562886699,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 2739200,
            "rowCount" : 136960,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [brand_id#742, class_id#743, category_id#744], [brand_id#742, class_id#743, category_id#744], ShuffleQueryStage 79 "
          },
          "35" : {
            "sign" : 823695055,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 2739200,
            "rowCount" : 136960,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (((brand_id#742 <=> i_brand_id#834) AND (class_id#743 <=> i_class_id#836)) AND (category_id#744 <=> i_category_id#838)) "
          },
          "16" : {
            "sign" : 682718368,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#1097, d_date_id#1098, d_date#1099, d_month_seq#1100, d_week_seq#1101, d_quarter_seq#1102, d_year#1103, d_dow#1104, d_moy#1105, d_dom#1106, d_qoy#1107, d_fy_year#1108, d_fy_quarter_seq#1109, d_fy_week_seq#1110, d_day_name#1111, d_quarter_name#1112, d_holiday#1113, d_weekend#1114, d_following_holiday#1115, d_first_dom#1116, d_last_dom#1117, d_same_day_ly#1118, d_same_day_lq#1119, d_current_day#1120, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "79" : {
            "sign" : 813769211,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#1237, d_date_id#1238, d_date#1239, d_month_seq#1240, d_week_seq#1241, d_quarter_seq#1242, d_year#1243, d_dow#1244, d_moy#1245, d_dom#1246, d_qoy#1247, d_fy_year#1248, d_fy_quarter_seq#1249, d_fy_week_seq#1250, d_day_name#1251, d_quarter_name#1252, d_holiday#1253, d_weekend#1254, d_following_holiday#1255, d_first_dom#1256, d_last_dom#1257, d_same_day_ly#1258, d_same_day_lq#1259, d_current_day#1260, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "5" : {
            "sign" : -539144950,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 10408960,
            "rowCount" : 136960,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [i_brand_id#1082, i_class_id#1084, i_category_id#1086], [store AS channel#730, i_brand_id#1082, i_class_id#1084, i_category_id#1086, sum((cast(ss_quantity#1061 as decimal(10,0)) * ss_list_price#1063)) AS sales#731, count(1) AS number_sales#732L] "
          },
          "72" : {
            "sign" : -604473204,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(ss_item_sk#1126) AND isnotnull(ss_sold_date_sk#1147)) AND dynamicpruning#1310 [ss_sold_date_sk#1147]) "
          },
          "10" : {
            "sign" : 578793581,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 7701269884,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (ss_item_sk#1053 = ss_item_sk#745) "
          },
          "59" : {
            "sign" : -1902449141,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 14972593792,
            "rowCount" : 71983624,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(ws_sold_date_sk#1023) AND dynamicpruning#1290 [ws_sold_date_sk#1023]) "
          },
          "87" : {
            "sign" : -1062759686,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 4860984,
            "rowCount" : 202541,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_item_sk#1148, i_brand_id#1155, i_class_id#1157, i_category_id#1159] "
          },
          "48" : {
            "sign" : 825651901,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 2770325240,
            "rowCount" : 138516262,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_quantity#945 AS quantity#748, cs_list_price#947 AS list_price#749] "
          },
          "21" : {
            "sign" : -411085469,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 16332372468,
            "rowCount" : 453677013,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (((i_brand_id#32 = brand_id#742) AND (i_class_id#34 = class_id#743)) AND (i_category_id#36 = category_id#744)) "
          },
          "76" : {
            "sign" : 683629544,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#1170, d_date_id#1171, d_date#1172, d_month_seq#1173, d_week_seq#1174, d_quarter_seq#1175, d_year#1176, d_dow#1177, d_moy#1178, d_dom#1179, d_qoy#1180, d_fy_year#1181, d_fy_quarter_seq#1182, d_fy_week_seq#1183, d_day_name#1184, d_quarter_name#1185, d_holiday#1186, d_weekend#1187, d_following_holiday#1188, d_first_dom#1189, d_last_dom#1190, d_same_day_ly#1191, d_same_day_lq#1192, d_current_day#1193, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "54" : {
            "sign" : -1695423935,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 353748,
            "rowCount" : 1438,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(d_year#968) AND ((d_year#968 >= 1998) AND (d_year#968 <= 2000))) AND isnotnull(d_date_sk#962)) "
          },
          "43" : {
            "sign" : 1377797290,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(ss_sold_date_sk#899) AND dynamicpruning#1288 [ss_sold_date_sk#899]) "
          },
          "65" : {
            "sign" : -686701597,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 10408960,
            "rowCount" : 136960,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [i_brand_id#1155, i_class_id#1157, i_category_id#1159], [store AS channel#736, i_brand_id#1155, i_class_id#1157, i_category_id#1159, sum((cast(ss_quantity#1134 as decimal(10,0)) * ss_list_price#1136)) AS sales#737, count(1) AS number_sales#738L] "
          },
          "71" : {
            "sign" : -303911461,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 7701269884,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#1126, ss_quantity#1134, ss_list_price#1136, ss_sold_date_sk#1147] "
          },
          "57" : {
            "sign" : 1503367439,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 1945876940,
            "rowCount" : 69495605,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ws_sold_date_sk#1023 = d_date_sk#1024) "
          },
          "32" : {
            "sign" : 73332589,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 86904000,
            "rowCount" : 204000,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [i_item_sk#1075, i_item_id#1076, i_rec_start_date#1077, i_rec_end_date#1078, i_item_desc#1079, i_current_price#1080, i_wholesale_cost#1081, i_brand_id#1082, i_brand#1083, i_class_id#1084, i_class#1085, i_category_id#1086, i_category#1087, i_manufact_id#1088, i_manufact#1089, i_size#1090, i_formulation#1091, i_color#1092, i_units#1093, i_container#1094, i_manager_id#1095, i_product_name#1096], `spark_catalog`.`tpcds_100`.`item`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "80" : {
            "sign" : -1376051007,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 5444124156,
            "rowCount" : 453677013,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_item_sk#25 AS ss_item_sk#745] "
          },
          "82" : {
            "sign" : 942136653,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 2739200,
            "rowCount" : 136960,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (((brand_id#742 <=> i_brand_id#834) AND (class_id#743 <=> i_class_id#836)) AND (category_id#744 <=> i_category_id#838)) "
          },
          "49" : {
            "sign" : 824386657,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 3878455336,
            "rowCount" : 138516262,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cs_sold_date_sk#961 = d_date_sk#962) "
          },
          "6" : {
            "sign" : 484012915,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 9192253472,
            "rowCount" : 287257921,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_quantity#1061, ss_list_price#1063, i_brand_id#1082, i_class_id#1084, i_category_id#1086] "
          },
          "36" : {
            "sign" : -562886761,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 2739200,
            "rowCount" : 136960,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [brand_id#742, class_id#743, category_id#744], [brand_id#742, class_id#743, category_id#744], ShuffleQueryStage 77 "
          },
          "1" : {
            "sign" : -1631872401,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
            "sizeInBytes" : 19722240,
            "rowCount" : 136960,
            "isRuntime" : false,
            "predicate" : " (unknown) LocalLimit Arguments: 100 "
          },
          "39" : {
            "sign" : -1298322270,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Union",
            "sizeInBytes" : 9471049040,
            "rowCount" : 473552452,
            "isRuntime" : false,
            "predicate" : " (unknown) Union Arguments: false, false "
          },
          "17" : {
            "sign" : -2061501032,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 36,
            "rowCount" : 3,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_week_seq#1213] "
          },
          "25" : {
            "sign" : 705252806,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 2739200,
            "rowCount" : 136960,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (((brand_id#742 <=> i_brand_id#834) AND (class_id#743 <=> i_class_id#836)) AND (category_id#744 <=> i_category_id#838)) "
          },
          "60" : {
            "sign" : 1698660872,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 14972593792,
            "rowCount" : 71983624,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ws_sold_time_sk#990, ws_ship_date_sk#991, ws_item_sk#992, ws_bill_customer_sk#993, ws_bill_cdemo_sk#994, ws_bill_hdemo_sk#995, ws_bill_addr_sk#996, ws_ship_customer_sk#997, ws_ship_cdemo_sk#998, ws_ship_hdemo_sk#999, ws_ship_addr_sk#1000, ws_web_page_sk#1001, ws_web_site_sk#1002, ws_ship_mode_sk#1003, ws_warehouse_sk#1004, ws_promo_sk#1005, ws_order_number#1006L, ws_quantity#1007, ws_wholesale_cost#1008, ws_list_price#1009, ws_sales_price#1010, ws_ext_discount_amt#1011, ws_ext_sales_price#1012, ws_ext_wholesale_cost#1013, ... 10 more fields], `spark_catalog`.`tpcds_100`.`web_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "14" : {
            "sign" : 707519831,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 876588,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#1097] "
          },
          "47" : {
            "sign" : -820074406,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#900, d_date_id#901, d_date#902, d_month_seq#903, d_week_seq#904, d_quarter_seq#905, d_year#906, d_dow#907, d_moy#908, d_dom#909, d_qoy#910, d_fy_year#911, d_fy_quarter_seq#912, d_fy_week_seq#913, d_day_name#914, d_quarter_name#915, d_holiday#916, d_weekend#917, d_following_holiday#918, d_first_dom#919, d_last_dom#920, d_same_day_ly#921, d_same_day_lq#922, d_current_day#923, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "31" : {
            "sign" : 579430964,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 86282466,
            "rowCount" : 202541,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(i_item_sk#1075) AND isnotnull(i_brand_id#1082)) AND isnotnull(i_class_id#1084)) AND isnotnull(i_category_id#1086)) "
          },
          "69" : {
            "sign" : 615632574,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 61610159072,
            "rowCount" : 1925317471,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#1147 = d_date_sk#1170) "
          },
          "58" : {
            "sign" : 49678577,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 1727606976,
            "rowCount" : 71983624,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_quantity#1007, ws_list_price#1009, ws_sold_date_sk#1023] "
          },
          "64" : {
            "sign" : -963212728,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 10408960,
            "rowCount" : 136960,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(sales#737) AND (cast(sales#737 as decimal(32,6)) > cast(scalar-subquery#741 [] as decimal(32,6)))) "
          },
          "53" : {
            "sign" : 406087876,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 17256,
            "rowCount" : 1438,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#962] "
          },
          "42" : {
            "sign" : 1776873494,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 6601088472,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_quantity#886, ss_list_price#888, ss_sold_date_sk#899] "
          },
          "75" : {
            "sign" : -1689547051,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(d_week_seq#1174) AND (d_week_seq#1174 = scalar-subquery#740 [])) AND isnotnull(d_date_sk#1170)) "
          },
          "0" : {
            "sign" : -1534871510,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
            "sizeInBytes" : 12000,
            "rowCount" : 100,
            "isRuntime" : false,
            "predicate" : " (unknown) GlobalLimit Arguments: 100 "
          },
          "20" : {
            "sign" : 1918673978,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 5444124156,
            "rowCount" : 453677013,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_item_sk#25 AS ss_item_sk#745] "
          },
          "27" : {
            "sign" : -365671366,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1379777760,
            "rowCount" : 43118055,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_brand_id#834, i_class_id#836, i_category_id#838], ShuffleQueryStage 48 "
          },
          "70" : {
            "sign" : -184039948,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 7701269884,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (ss_item_sk#1126 = ss_item_sk#745) "
          },
          "2" : {
            "sign" : -378917504,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 19722240,
            "rowCount" : 136960,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [i_brand_id#1082 ASC NULLS FIRST, i_class_id#1084 ASC NULLS FIRST, i_category_id#1086 ASC NULLS FIRST], true "
          },
          "86" : {
            "sign" : 1334935896,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 4860984,
            "rowCount" : 202541,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (i_item_sk#1148 = ss_item_sk#745) "
          },
          "38" : {
            "sign" : -1809172647,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 24,
            "rowCount" : 1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [avg((cast(quantity#746 as decimal(10,0)) * list_price#747)) AS average_sales#752] "
          },
          "81" : {
            "sign" : -62448030,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 16332372468,
            "rowCount" : 453677013,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (((i_brand_id#32 = brand_id#742) AND (i_class_id#34 = class_id#743)) AND (i_category_id#36 = category_id#744)) "
          },
          "92" : {
            "sign" : -1990752917,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 2739200,
            "rowCount" : 136960,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (((brand_id#742 <=> i_brand_id#834) AND (class_id#743 <=> i_class_id#836)) AND (category_id#744 <=> i_category_id#838)) "
          },
          "18" : {
            "sign" : -1305353512,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 738,
            "rowCount" : 3,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(d_year#1215) AND isnotnull(d_moy#1217)) AND isnotnull(d_dom#1218)) AND (((d_year#1215 = 1999) AND (d_moy#1217 = 12)) AND (d_dom#1218 = 16))) "
          },
          "30" : {
            "sign" : 1540331732,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 4860984,
            "rowCount" : 202541,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_item_sk#1075, i_brand_id#1082, i_class_id#1084, i_category_id#1086] "
          },
          "7" : {
            "sign" : 515261378,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 11490316840,
            "rowCount" : 287257921,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_item_sk#1053 = i_item_sk#1075) "
          },
          "29" : {
            "sign" : 725162427,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 4860984,
            "rowCount" : 202541,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (i_item_sk#1075 = ss_item_sk#745) "
          },
          "41" : {
            "sign" : -1804794945,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 7435136380,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#899 = d_date_sk#900) "
          },
          "63" : {
            "sign" : -502763688,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#1024, d_date_id#1025, d_date#1026, d_month_seq#1027, d_week_seq#1028, d_quarter_seq#1029, d_year#1030, d_dow#1031, d_moy#1032, d_dom#1033, d_qoy#1034, d_fy_year#1035, d_fy_quarter_seq#1036, d_fy_week_seq#1037, d_day_name#1038, d_quarter_name#1039, d_holiday#1040, d_weekend#1041, d_following_holiday#1042, d_first_dom#1043, d_last_dom#1044, d_same_day_ly#1045, d_same_day_lq#1046, d_current_day#1047, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "3" : {
            "sign" : -674513440,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 19722240,
            "rowCount" : 136960,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (((i_brand_id#1082 = i_brand_id#1155) AND (i_class_id#1084 = i_class_id#1157)) AND (i_category_id#1086 = i_category_id#1159)) "
          },
          "74" : {
            "sign" : 1096234976,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 876588,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#1170] "
          },
          "91" : {
            "sign" : -1279012622,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 16332372468,
            "rowCount" : 453677013,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (((i_brand_id#32 = brand_id#742) AND (i_class_id#34 = class_id#743)) AND (i_category_id#36 = category_id#744)) "
          },
          "52" : {
            "sign" : -70077436,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 29800787536,
            "rowCount" : 143273017,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [cs_sold_time_sk#928, cs_ship_date_sk#929, cs_bill_customer_sk#930, cs_bill_cdemo_sk#931, cs_bill_hdemo_sk#932, cs_bill_addr_sk#933, cs_ship_customer_sk#934, cs_ship_cdemo_sk#935, cs_ship_hdemo_sk#936, cs_ship_addr_sk#937, cs_call_center_sk#938, cs_catalog_page_sk#939, cs_ship_mode_sk#940, cs_warehouse_sk#941, cs_item_sk#942, cs_promo_sk#943, cs_order_number#944L, cs_quantity#945, cs_wholesale_cost#946, cs_list_price#947, cs_sales_price#948, cs_ext_discount_amt#949, cs_ext_sales_price#950, cs_ext_wholesale_cost#951, ... 10 more fields], `spark_catalog`.`tpcds_100`.`catalog_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "85" : {
            "sign" : -1902204624,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1048632,
            "rowCount" : 7,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#1170], BroadcastQueryStage 34 "
          },
          "28" : {
            "sign" : -21562714,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1048632,
            "rowCount" : 7,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#1097], BroadcastQueryStage 9 "
          }
        },
        "links" : [ {
          "fromId" : 13,
          "fromName" : "LogicalRelation",
          "toId" : 12,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 16,
          "fromName" : "LogicalRelation",
          "toId" : 15,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 19,
          "fromName" : "LogicalRelation",
          "toId" : 18,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 18,
          "fromName" : "Filter",
          "toId" : 17,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 17,
          "fromName" : "Project",
          "toId" : 15,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 15,
          "fromName" : "Filter",
          "toId" : 14,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 14,
          "fromName" : "Project",
          "toId" : 12,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 12,
          "fromName" : "Filter",
          "toId" : 11,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "Project",
          "toId" : 10,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 24,
          "fromName" : "LogicalRelation",
          "toId" : 23,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 23,
          "fromName" : "Filter",
          "toId" : 22,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 22,
          "fromName" : "Project",
          "toId" : 21,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 26,
          "fromName" : "LogicalQueryStage",
          "toId" : 25,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 27,
          "fromName" : "LogicalQueryStage",
          "toId" : 25,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 25,
          "fromName" : "Join",
          "toId" : 21,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 21,
          "fromName" : "Join",
          "toId" : 20,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 20,
          "fromName" : "Project",
          "toId" : 10,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "Join",
          "toId" : 9,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 28,
          "fromName" : "LogicalQueryStage",
          "toId" : 9,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "Join",
          "toId" : 8,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "Project",
          "toId" : 7,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 32,
          "fromName" : "LogicalRelation",
          "toId" : 31,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 31,
          "fromName" : "Filter",
          "toId" : 30,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 30,
          "fromName" : "Project",
          "toId" : 29,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 22,
          "fromName" : "Project",
          "toId" : 34,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 36,
          "fromName" : "LogicalQueryStage",
          "toId" : 35,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 37,
          "fromName" : "LogicalQueryStage",
          "toId" : 35,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 35,
          "fromName" : "Join",
          "toId" : 34,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 34,
          "fromName" : "Join",
          "toId" : 33,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 33,
          "fromName" : "Project",
          "toId" : 29,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 29,
          "fromName" : "Join",
          "toId" : 7,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Join",
          "toId" : 6,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Project",
          "toId" : 5,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Aggregate",
          "toId" : 4,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 44,
          "fromName" : "LogicalRelation",
          "toId" : 43,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 47,
          "fromName" : "LogicalRelation",
          "toId" : 46,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 46,
          "fromName" : "Filter",
          "toId" : 45,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 45,
          "fromName" : "Project",
          "toId" : 43,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 43,
          "fromName" : "Filter",
          "toId" : 42,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 42,
          "fromName" : "Project",
          "toId" : 41,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 45,
          "fromName" : "Project",
          "toId" : 41,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 41,
          "fromName" : "Join",
          "toId" : 40,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 40,
          "fromName" : "Project",
          "toId" : 39,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 52,
          "fromName" : "LogicalRelation",
          "toId" : 51,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 55,
          "fromName" : "LogicalRelation",
          "toId" : 54,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 54,
          "fromName" : "Filter",
          "toId" : 53,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 53,
          "fromName" : "Project",
          "toId" : 51,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 51,
          "fromName" : "Filter",
          "toId" : 50,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 50,
          "fromName" : "Project",
          "toId" : 49,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 53,
          "fromName" : "Project",
          "toId" : 49,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 49,
          "fromName" : "Join",
          "toId" : 48,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 48,
          "fromName" : "Project",
          "toId" : 39,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 60,
          "fromName" : "LogicalRelation",
          "toId" : 59,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 63,
          "fromName" : "LogicalRelation",
          "toId" : 62,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 62,
          "fromName" : "Filter",
          "toId" : 61,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 61,
          "fromName" : "Project",
          "toId" : 59,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 59,
          "fromName" : "Filter",
          "toId" : 58,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 58,
          "fromName" : "Project",
          "toId" : 57,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 61,
          "fromName" : "Project",
          "toId" : 57,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 57,
          "fromName" : "Join",
          "toId" : 56,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 56,
          "fromName" : "Project",
          "toId" : 39,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 39,
          "fromName" : "Union",
          "toId" : 38,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 38,
          "fromName" : "Aggregate",
          "toId" : 4,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 4,
          "fromName" : "Filter",
          "toId" : 3,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 73,
          "fromName" : "LogicalRelation",
          "toId" : 72,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 76,
          "fromName" : "LogicalRelation",
          "toId" : 75,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 79,
          "fromName" : "LogicalRelation",
          "toId" : 78,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 78,
          "fromName" : "Filter",
          "toId" : 77,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 77,
          "fromName" : "Project",
          "toId" : 75,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 75,
          "fromName" : "Filter",
          "toId" : 74,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 74,
          "fromName" : "Project",
          "toId" : 72,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 72,
          "fromName" : "Filter",
          "toId" : 71,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 71,
          "fromName" : "Project",
          "toId" : 70,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 22,
          "fromName" : "Project",
          "toId" : 81,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 83,
          "fromName" : "LogicalQueryStage",
          "toId" : 82,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 84,
          "fromName" : "LogicalQueryStage",
          "toId" : 82,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 82,
          "fromName" : "Join",
          "toId" : 81,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 81,
          "fromName" : "Join",
          "toId" : 80,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 80,
          "fromName" : "Project",
          "toId" : 70,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 70,
          "fromName" : "Join",
          "toId" : 69,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 85,
          "fromName" : "LogicalQueryStage",
          "toId" : 69,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 69,
          "fromName" : "Join",
          "toId" : 68,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 68,
          "fromName" : "Project",
          "toId" : 67,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 89,
          "fromName" : "LogicalRelation",
          "toId" : 88,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 88,
          "fromName" : "Filter",
          "toId" : 87,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 87,
          "fromName" : "Project",
          "toId" : 86,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 22,
          "fromName" : "Project",
          "toId" : 91,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 93,
          "fromName" : "LogicalQueryStage",
          "toId" : 92,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 94,
          "fromName" : "LogicalQueryStage",
          "toId" : 92,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 92,
          "fromName" : "Join",
          "toId" : 91,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 91,
          "fromName" : "Join",
          "toId" : 90,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 90,
          "fromName" : "Project",
          "toId" : 86,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 86,
          "fromName" : "Join",
          "toId" : 67,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 67,
          "fromName" : "Join",
          "toId" : 66,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 66,
          "fromName" : "Project",
          "toId" : 65,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 65,
          "fromName" : "Aggregate",
          "toId" : 64,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 38,
          "fromName" : "Aggregate",
          "toId" : 64,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 64,
          "fromName" : "Filter",
          "toId" : 3,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Join",
          "toId" : 2,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "LocalLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "LocalLimit",
          "toId" : 0,
          "toName" : "GlobalLimit",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [i_brand_id#1082 ASC NULLS FIRST, i_class_id#1084 ASC NULLS FIRST, i_category_id#1086 ASC NULLS FIRST], true\n      +- Join Inner, (((i_brand_id#1082 = i_brand_id#1155) AND (i_class_id#1084 = i_class_id#1157)) AND (i_category_id#1086 = i_category_id#1159))\n         :- Filter (isnotnull(sales#731) AND (cast(sales#731 as decimal(32,6)) > cast(scalar-subquery#735 [] as decimal(32,6))))\n         :  :  +- Aggregate [avg((cast(quantity#746 as decimal(10,0)) * list_price#747)) AS average_sales#752]\n         :  :     +- Union false, false\n         :  :        :- Project [ss_quantity#886 AS quantity#746, ss_list_price#888 AS list_price#747]\n         :  :        :  +- Join Inner, (ss_sold_date_sk#899 = d_date_sk#900)\n         :  :        :     :- Project [ss_quantity#886, ss_list_price#888, ss_sold_date_sk#899]\n         :  :        :     :  +- Filter (isnotnull(ss_sold_date_sk#899) AND dynamicpruning#1288 [ss_sold_date_sk#899])\n         :  :        :     :     :  +- Project [d_date_sk#900]\n         :  :        :     :     :     +- Filter ((isnotnull(d_year#906) AND ((d_year#906 >= 1998) AND (d_year#906 <= 2000))) AND isnotnull(d_date_sk#900))\n         :  :        :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#900,d_date_id#901,d_date#902,d_month_seq#903,d_week_seq#904,d_quarter_seq#905,d_year#906,d_dow#907,d_moy#908,d_dom#909,d_qoy#910,d_fy_year#911,d_fy_quarter_seq#912,d_fy_week_seq#913,d_day_name#914,d_quarter_name#915,d_holiday#916,d_weekend#917,d_following_holiday#918,d_first_dom#919,d_last_dom#920,d_same_day_ly#921,d_same_day_lq#922,d_current_day#923,... 4 more fields] parquet\n         :  :        :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#877,ss_item_sk#878,ss_customer_sk#879,ss_cdemo_sk#880,ss_hdemo_sk#881,ss_addr_sk#882,ss_store_sk#883,ss_promo_sk#884,ss_ticket_number#885L,ss_quantity#886,ss_wholesale_cost#887,ss_list_price#888,ss_sales_price#889,ss_ext_discount_amt#890,ss_ext_sales_price#891,ss_ext_wholesale_cost#892,ss_ext_list_price#893,ss_ext_tax#894,ss_coupon_amt#895,ss_net_paid#896,ss_net_paid_inc_tax#897,ss_net_profit#898,ss_sold_date_sk#899] parquet\n         :  :        :     +- Project [d_date_sk#900]\n         :  :        :        +- Filter ((isnotnull(d_year#906) AND ((d_year#906 >= 1998) AND (d_year#906 <= 2000))) AND isnotnull(d_date_sk#900))\n         :  :        :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#900,d_date_id#901,d_date#902,d_month_seq#903,d_week_seq#904,d_quarter_seq#905,d_year#906,d_dow#907,d_moy#908,d_dom#909,d_qoy#910,d_fy_year#911,d_fy_quarter_seq#912,d_fy_week_seq#913,d_day_name#914,d_quarter_name#915,d_holiday#916,d_weekend#917,d_following_holiday#918,d_first_dom#919,d_last_dom#920,d_same_day_ly#921,d_same_day_lq#922,d_current_day#923,... 4 more fields] parquet\n         :  :        :- Project [cs_quantity#945 AS quantity#748, cs_list_price#947 AS list_price#749]\n         :  :        :  +- Join Inner, (cs_sold_date_sk#961 = d_date_sk#962)\n         :  :        :     :- Project [cs_quantity#945, cs_list_price#947, cs_sold_date_sk#961]\n         :  :        :     :  +- Filter (isnotnull(cs_sold_date_sk#961) AND dynamicpruning#1289 [cs_sold_date_sk#961])\n         :  :        :     :     :  +- Project [d_date_sk#962]\n         :  :        :     :     :     +- Filter ((isnotnull(d_year#968) AND ((d_year#968 >= 1998) AND (d_year#968 <= 2000))) AND isnotnull(d_date_sk#962))\n         :  :        :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#962,d_date_id#963,d_date#964,d_month_seq#965,d_week_seq#966,d_quarter_seq#967,d_year#968,d_dow#969,d_moy#970,d_dom#971,d_qoy#972,d_fy_year#973,d_fy_quarter_seq#974,d_fy_week_seq#975,d_day_name#976,d_quarter_name#977,d_holiday#978,d_weekend#979,d_following_holiday#980,d_first_dom#981,d_last_dom#982,d_same_day_ly#983,d_same_day_lq#984,d_current_day#985,... 4 more fields] parquet\n         :  :        :     :     +- Relation spark_catalog.tpcds_100.catalog_sales[cs_sold_time_sk#928,cs_ship_date_sk#929,cs_bill_customer_sk#930,cs_bill_cdemo_sk#931,cs_bill_hdemo_sk#932,cs_bill_addr_sk#933,cs_ship_customer_sk#934,cs_ship_cdemo_sk#935,cs_ship_hdemo_sk#936,cs_ship_addr_sk#937,cs_call_center_sk#938,cs_catalog_page_sk#939,cs_ship_mode_sk#940,cs_warehouse_sk#941,cs_item_sk#942,cs_promo_sk#943,cs_order_number#944L,cs_quantity#945,cs_wholesale_cost#946,cs_list_price#947,cs_sales_price#948,cs_ext_discount_amt#949,cs_ext_sales_price#950,cs_ext_wholesale_cost#951,... 10 more fields] parquet\n         :  :        :     +- Project [d_date_sk#962]\n         :  :        :        +- Filter ((isnotnull(d_year#968) AND ((d_year#968 >= 1998) AND (d_year#968 <= 2000))) AND isnotnull(d_date_sk#962))\n         :  :        :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#962,d_date_id#963,d_date#964,d_month_seq#965,d_week_seq#966,d_quarter_seq#967,d_year#968,d_dow#969,d_moy#970,d_dom#971,d_qoy#972,d_fy_year#973,d_fy_quarter_seq#974,d_fy_week_seq#975,d_day_name#976,d_quarter_name#977,d_holiday#978,d_weekend#979,d_following_holiday#980,d_first_dom#981,d_last_dom#982,d_same_day_ly#983,d_same_day_lq#984,d_current_day#985,... 4 more fields] parquet\n         :  :        +- Project [ws_quantity#1007 AS quantity#750, ws_list_price#1009 AS list_price#751]\n         :  :           +- Join Inner, (ws_sold_date_sk#1023 = d_date_sk#1024)\n         :  :              :- Project [ws_quantity#1007, ws_list_price#1009, ws_sold_date_sk#1023]\n         :  :              :  +- Filter (isnotnull(ws_sold_date_sk#1023) AND dynamicpruning#1290 [ws_sold_date_sk#1023])\n         :  :              :     :  +- Project [d_date_sk#1024]\n         :  :              :     :     +- Filter ((isnotnull(d_year#1030) AND ((d_year#1030 >= 1998) AND (d_year#1030 <= 2000))) AND isnotnull(d_date_sk#1024))\n         :  :              :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#1024,d_date_id#1025,d_date#1026,d_month_seq#1027,d_week_seq#1028,d_quarter_seq#1029,d_year#1030,d_dow#1031,d_moy#1032,d_dom#1033,d_qoy#1034,d_fy_year#1035,d_fy_quarter_seq#1036,d_fy_week_seq#1037,d_day_name#1038,d_quarter_name#1039,d_holiday#1040,d_weekend#1041,d_following_holiday#1042,d_first_dom#1043,d_last_dom#1044,d_same_day_ly#1045,d_same_day_lq#1046,d_current_day#1047,... 4 more fields] parquet\n         :  :              :     +- Relation spark_catalog.tpcds_100.web_sales[ws_sold_time_sk#990,ws_ship_date_sk#991,ws_item_sk#992,ws_bill_customer_sk#993,ws_bill_cdemo_sk#994,ws_bill_hdemo_sk#995,ws_bill_addr_sk#996,ws_ship_customer_sk#997,ws_ship_cdemo_sk#998,ws_ship_hdemo_sk#999,ws_ship_addr_sk#1000,ws_web_page_sk#1001,ws_web_site_sk#1002,ws_ship_mode_sk#1003,ws_warehouse_sk#1004,ws_promo_sk#1005,ws_order_number#1006L,ws_quantity#1007,ws_wholesale_cost#1008,ws_list_price#1009,ws_sales_price#1010,ws_ext_discount_amt#1011,ws_ext_sales_price#1012,ws_ext_wholesale_cost#1013,... 10 more fields] parquet\n         :  :              +- Project [d_date_sk#1024]\n         :  :                 +- Filter ((isnotnull(d_year#1030) AND ((d_year#1030 >= 1998) AND (d_year#1030 <= 2000))) AND isnotnull(d_date_sk#1024))\n         :  :                    +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#1024,d_date_id#1025,d_date#1026,d_month_seq#1027,d_week_seq#1028,d_quarter_seq#1029,d_year#1030,d_dow#1031,d_moy#1032,d_dom#1033,d_qoy#1034,d_fy_year#1035,d_fy_quarter_seq#1036,d_fy_week_seq#1037,d_day_name#1038,d_quarter_name#1039,d_holiday#1040,d_weekend#1041,d_following_holiday#1042,d_first_dom#1043,d_last_dom#1044,d_same_day_ly#1045,d_same_day_lq#1046,d_current_day#1047,... 4 more fields] parquet\n         :  +- Aggregate [i_brand_id#1082, i_class_id#1084, i_category_id#1086], [store AS channel#730, i_brand_id#1082, i_class_id#1084, i_category_id#1086, sum((cast(ss_quantity#1061 as decimal(10,0)) * ss_list_price#1063)) AS sales#731, count(1) AS number_sales#732L]\n         :     +- Project [ss_quantity#1061, ss_list_price#1063, i_brand_id#1082, i_class_id#1084, i_category_id#1086]\n         :        +- Join Inner, (ss_item_sk#1053 = i_item_sk#1075)\n         :           :- Project [ss_item_sk#1053, ss_quantity#1061, ss_list_price#1063]\n         :           :  +- Join Inner, (ss_sold_date_sk#1074 = d_date_sk#1097)\n         :           :     :- Join LeftSemi, (ss_item_sk#1053 = ss_item_sk#745)\n         :           :     :  :- Project [ss_item_sk#1053, ss_quantity#1061, ss_list_price#1063, ss_sold_date_sk#1074]\n         :           :     :  :  +- Filter ((isnotnull(ss_item_sk#1053) AND isnotnull(ss_sold_date_sk#1074)) AND dynamicpruning#1303 [ss_sold_date_sk#1074])\n         :           :     :  :     :  +- Project [d_date_sk#1097]\n         :           :     :  :     :     +- Filter ((isnotnull(d_week_seq#1101) AND (d_week_seq#1101 = scalar-subquery#734 [])) AND isnotnull(d_date_sk#1097))\n         :           :     :  :     :        :  +- Project [d_week_seq#1213]\n         :           :     :  :     :        :     +- Filter (((isnotnull(d_year#1215) AND isnotnull(d_moy#1217)) AND isnotnull(d_dom#1218)) AND (((d_year#1215 = 1999) AND (d_moy#1217 = 12)) AND (d_dom#1218 = 16)))\n         :           :     :  :     :        :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#1209,d_date_id#1210,d_date#1211,d_month_seq#1212,d_week_seq#1213,d_quarter_seq#1214,d_year#1215,d_dow#1216,d_moy#1217,d_dom#1218,d_qoy#1219,d_fy_year#1220,d_fy_quarter_seq#1221,d_fy_week_seq#1222,d_day_name#1223,d_quarter_name#1224,d_holiday#1225,d_weekend#1226,d_following_holiday#1227,d_first_dom#1228,d_last_dom#1229,d_same_day_ly#1230,d_same_day_lq#1231,d_current_day#1232,... 4 more fields] parquet\n         :           :     :  :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#1097,d_date_id#1098,d_date#1099,d_month_seq#1100,d_week_seq#1101,d_quarter_seq#1102,d_year#1103,d_dow#1104,d_moy#1105,d_dom#1106,d_qoy#1107,d_fy_year#1108,d_fy_quarter_seq#1109,d_fy_week_seq#1110,d_day_name#1111,d_quarter_name#1112,d_holiday#1113,d_weekend#1114,d_following_holiday#1115,d_first_dom#1116,d_last_dom#1117,d_same_day_ly#1118,d_same_day_lq#1119,d_current_day#1120,... 4 more fields] parquet\n         :           :     :  :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#1052,ss_item_sk#1053,ss_customer_sk#1054,ss_cdemo_sk#1055,ss_hdemo_sk#1056,ss_addr_sk#1057,ss_store_sk#1058,ss_promo_sk#1059,ss_ticket_number#1060L,ss_quantity#1061,ss_wholesale_cost#1062,ss_list_price#1063,ss_sales_price#1064,ss_ext_discount_amt#1065,ss_ext_sales_price#1066,ss_ext_wholesale_cost#1067,ss_ext_list_price#1068,ss_ext_tax#1069,ss_coupon_amt#1070,ss_net_paid#1071,ss_net_paid_inc_tax#1072,ss_net_profit#1073,ss_sold_date_sk#1074] parquet\n         :           :     :  +- Project [i_item_sk#25 AS ss_item_sk#745]\n         :           :     :     +- Join Inner, (((i_brand_id#32 = brand_id#742) AND (i_class_id#34 = class_id#743)) AND (i_category_id#36 = category_id#744))\n         :           :     :        :- Project [i_item_sk#25, i_brand_id#32, i_class_id#34, i_category_id#36]\n         :           :     :        :  +- Filter ((isnotnull(i_brand_id#32) AND isnotnull(i_class_id#34)) AND isnotnull(i_category_id#36))\n         :           :     :        :     +- Relation spark_catalog.tpcds_100.item[i_item_sk#25,i_item_id#26,i_rec_start_date#27,i_rec_end_date#28,i_item_desc#29,i_current_price#30,i_wholesale_cost#31,i_brand_id#32,i_brand#33,i_class_id#34,i_class#35,i_category_id#36,i_category#37,i_manufact_id#38,i_manufact#39,i_size#40,i_formulation#41,i_color#42,i_units#43,i_container#44,i_manager_id#45,i_product_name#46] parquet\n         :           :     :        +- Join LeftSemi, (((brand_id#742 <=> i_brand_id#834) AND (class_id#743 <=> i_class_id#836)) AND (category_id#744 <=> i_category_id#838))\n         :           :     :           :- LogicalQueryStage Aggregate [brand_id#742, class_id#743, category_id#744], [brand_id#742, class_id#743, category_id#744], ShuffleQueryStage 75\n         :           :     :           +- LogicalQueryStage Project [i_brand_id#834, i_class_id#836, i_category_id#838], ShuffleQueryStage 48\n         :           :     +- LogicalQueryStage Project [d_date_sk#1097], BroadcastQueryStage 9\n         :           +- Join LeftSemi, (i_item_sk#1075 = ss_item_sk#745)\n         :              :- Project [i_item_sk#1075, i_brand_id#1082, i_class_id#1084, i_category_id#1086]\n         :              :  +- Filter (((isnotnull(i_item_sk#1075) AND isnotnull(i_brand_id#1082)) AND isnotnull(i_class_id#1084)) AND isnotnull(i_category_id#1086))\n         :              :     +- Relation spark_catalog.tpcds_100.item[i_item_sk#1075,i_item_id#1076,i_rec_start_date#1077,i_rec_end_date#1078,i_item_desc#1079,i_current_price#1080,i_wholesale_cost#1081,i_brand_id#1082,i_brand#1083,i_class_id#1084,i_class#1085,i_category_id#1086,i_category#1087,i_manufact_id#1088,i_manufact#1089,i_size#1090,i_formulation#1091,i_color#1092,i_units#1093,i_container#1094,i_manager_id#1095,i_product_name#1096] parquet\n         :              +- Project [i_item_sk#25 AS ss_item_sk#745]\n         :                 +- Join Inner, (((i_brand_id#32 = brand_id#742) AND (i_class_id#34 = class_id#743)) AND (i_category_id#36 = category_id#744))\n         :                    :- Project [i_item_sk#25, i_brand_id#32, i_class_id#34, i_category_id#36]\n         :                    :  +- Filter ((isnotnull(i_brand_id#32) AND isnotnull(i_class_id#34)) AND isnotnull(i_category_id#36))\n         :                    :     +- Relation spark_catalog.tpcds_100.item[i_item_sk#25,i_item_id#26,i_rec_start_date#27,i_rec_end_date#28,i_item_desc#29,i_current_price#30,i_wholesale_cost#31,i_brand_id#32,i_brand#33,i_class_id#34,i_class#35,i_category_id#36,i_category#37,i_manufact_id#38,i_manufact#39,i_size#40,i_formulation#41,i_color#42,i_units#43,i_container#44,i_manager_id#45,i_product_name#46] parquet\n         :                    +- Join LeftSemi, (((brand_id#742 <=> i_brand_id#834) AND (class_id#743 <=> i_class_id#836)) AND (category_id#744 <=> i_category_id#838))\n         :                       :- LogicalQueryStage Aggregate [brand_id#742, class_id#743, category_id#744], [brand_id#742, class_id#743, category_id#744], ShuffleQueryStage 77\n         :                       +- LogicalQueryStage Project [i_brand_id#834, i_class_id#836, i_category_id#838], ShuffleQueryStage 52\n         +- Filter (isnotnull(sales#737) AND (cast(sales#737 as decimal(32,6)) > cast(scalar-subquery#741 [] as decimal(32,6))))\n            :  +- Aggregate [avg((cast(quantity#746 as decimal(10,0)) * list_price#747)) AS average_sales#752]\n            :     +- Union false, false\n            :        :- Project [ss_quantity#886 AS quantity#746, ss_list_price#888 AS list_price#747]\n            :        :  +- Join Inner, (ss_sold_date_sk#899 = d_date_sk#900)\n            :        :     :- Project [ss_quantity#886, ss_list_price#888, ss_sold_date_sk#899]\n            :        :     :  +- Filter (isnotnull(ss_sold_date_sk#899) AND dynamicpruning#1288 [ss_sold_date_sk#899])\n            :        :     :     :  +- Project [d_date_sk#900]\n            :        :     :     :     +- Filter ((isnotnull(d_year#906) AND ((d_year#906 >= 1998) AND (d_year#906 <= 2000))) AND isnotnull(d_date_sk#900))\n            :        :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#900,d_date_id#901,d_date#902,d_month_seq#903,d_week_seq#904,d_quarter_seq#905,d_year#906,d_dow#907,d_moy#908,d_dom#909,d_qoy#910,d_fy_year#911,d_fy_quarter_seq#912,d_fy_week_seq#913,d_day_name#914,d_quarter_name#915,d_holiday#916,d_weekend#917,d_following_holiday#918,d_first_dom#919,d_last_dom#920,d_same_day_ly#921,d_same_day_lq#922,d_current_day#923,... 4 more fields] parquet\n            :        :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#877,ss_item_sk#878,ss_customer_sk#879,ss_cdemo_sk#880,ss_hdemo_sk#881,ss_addr_sk#882,ss_store_sk#883,ss_promo_sk#884,ss_ticket_number#885L,ss_quantity#886,ss_wholesale_cost#887,ss_list_price#888,ss_sales_price#889,ss_ext_discount_amt#890,ss_ext_sales_price#891,ss_ext_wholesale_cost#892,ss_ext_list_price#893,ss_ext_tax#894,ss_coupon_amt#895,ss_net_paid#896,ss_net_paid_inc_tax#897,ss_net_profit#898,ss_sold_date_sk#899] parquet\n            :        :     +- Project [d_date_sk#900]\n            :        :        +- Filter ((isnotnull(d_year#906) AND ((d_year#906 >= 1998) AND (d_year#906 <= 2000))) AND isnotnull(d_date_sk#900))\n            :        :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#900,d_date_id#901,d_date#902,d_month_seq#903,d_week_seq#904,d_quarter_seq#905,d_year#906,d_dow#907,d_moy#908,d_dom#909,d_qoy#910,d_fy_year#911,d_fy_quarter_seq#912,d_fy_week_seq#913,d_day_name#914,d_quarter_name#915,d_holiday#916,d_weekend#917,d_following_holiday#918,d_first_dom#919,d_last_dom#920,d_same_day_ly#921,d_same_day_lq#922,d_current_day#923,... 4 more fields] parquet\n            :        :- Project [cs_quantity#945 AS quantity#748, cs_list_price#947 AS list_price#749]\n            :        :  +- Join Inner, (cs_sold_date_sk#961 = d_date_sk#962)\n            :        :     :- Project [cs_quantity#945, cs_list_price#947, cs_sold_date_sk#961]\n            :        :     :  +- Filter (isnotnull(cs_sold_date_sk#961) AND dynamicpruning#1289 [cs_sold_date_sk#961])\n            :        :     :     :  +- Project [d_date_sk#962]\n            :        :     :     :     +- Filter ((isnotnull(d_year#968) AND ((d_year#968 >= 1998) AND (d_year#968 <= 2000))) AND isnotnull(d_date_sk#962))\n            :        :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#962,d_date_id#963,d_date#964,d_month_seq#965,d_week_seq#966,d_quarter_seq#967,d_year#968,d_dow#969,d_moy#970,d_dom#971,d_qoy#972,d_fy_year#973,d_fy_quarter_seq#974,d_fy_week_seq#975,d_day_name#976,d_quarter_name#977,d_holiday#978,d_weekend#979,d_following_holiday#980,d_first_dom#981,d_last_dom#982,d_same_day_ly#983,d_same_day_lq#984,d_current_day#985,... 4 more fields] parquet\n            :        :     :     +- Relation spark_catalog.tpcds_100.catalog_sales[cs_sold_time_sk#928,cs_ship_date_sk#929,cs_bill_customer_sk#930,cs_bill_cdemo_sk#931,cs_bill_hdemo_sk#932,cs_bill_addr_sk#933,cs_ship_customer_sk#934,cs_ship_cdemo_sk#935,cs_ship_hdemo_sk#936,cs_ship_addr_sk#937,cs_call_center_sk#938,cs_catalog_page_sk#939,cs_ship_mode_sk#940,cs_warehouse_sk#941,cs_item_sk#942,cs_promo_sk#943,cs_order_number#944L,cs_quantity#945,cs_wholesale_cost#946,cs_list_price#947,cs_sales_price#948,cs_ext_discount_amt#949,cs_ext_sales_price#950,cs_ext_wholesale_cost#951,... 10 more fields] parquet\n            :        :     +- Project [d_date_sk#962]\n            :        :        +- Filter ((isnotnull(d_year#968) AND ((d_year#968 >= 1998) AND (d_year#968 <= 2000))) AND isnotnull(d_date_sk#962))\n            :        :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#962,d_date_id#963,d_date#964,d_month_seq#965,d_week_seq#966,d_quarter_seq#967,d_year#968,d_dow#969,d_moy#970,d_dom#971,d_qoy#972,d_fy_year#973,d_fy_quarter_seq#974,d_fy_week_seq#975,d_day_name#976,d_quarter_name#977,d_holiday#978,d_weekend#979,d_following_holiday#980,d_first_dom#981,d_last_dom#982,d_same_day_ly#983,d_same_day_lq#984,d_current_day#985,... 4 more fields] parquet\n            :        +- Project [ws_quantity#1007 AS quantity#750, ws_list_price#1009 AS list_price#751]\n            :           +- Join Inner, (ws_sold_date_sk#1023 = d_date_sk#1024)\n            :              :- Project [ws_quantity#1007, ws_list_price#1009, ws_sold_date_sk#1023]\n            :              :  +- Filter (isnotnull(ws_sold_date_sk#1023) AND dynamicpruning#1290 [ws_sold_date_sk#1023])\n            :              :     :  +- Project [d_date_sk#1024]\n            :              :     :     +- Filter ((isnotnull(d_year#1030) AND ((d_year#1030 >= 1998) AND (d_year#1030 <= 2000))) AND isnotnull(d_date_sk#1024))\n            :              :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#1024,d_date_id#1025,d_date#1026,d_month_seq#1027,d_week_seq#1028,d_quarter_seq#1029,d_year#1030,d_dow#1031,d_moy#1032,d_dom#1033,d_qoy#1034,d_fy_year#1035,d_fy_quarter_seq#1036,d_fy_week_seq#1037,d_day_name#1038,d_quarter_name#1039,d_holiday#1040,d_weekend#1041,d_following_holiday#1042,d_first_dom#1043,d_last_dom#1044,d_same_day_ly#1045,d_same_day_lq#1046,d_current_day#1047,... 4 more fields] parquet\n            :              :     +- Relation spark_catalog.tpcds_100.web_sales[ws_sold_time_sk#990,ws_ship_date_sk#991,ws_item_sk#992,ws_bill_customer_sk#993,ws_bill_cdemo_sk#994,ws_bill_hdemo_sk#995,ws_bill_addr_sk#996,ws_ship_customer_sk#997,ws_ship_cdemo_sk#998,ws_ship_hdemo_sk#999,ws_ship_addr_sk#1000,ws_web_page_sk#1001,ws_web_site_sk#1002,ws_ship_mode_sk#1003,ws_warehouse_sk#1004,ws_promo_sk#1005,ws_order_number#1006L,ws_quantity#1007,ws_wholesale_cost#1008,ws_list_price#1009,ws_sales_price#1010,ws_ext_discount_amt#1011,ws_ext_sales_price#1012,ws_ext_wholesale_cost#1013,... 10 more fields] parquet\n            :              +- Project [d_date_sk#1024]\n            :                 +- Filter ((isnotnull(d_year#1030) AND ((d_year#1030 >= 1998) AND (d_year#1030 <= 2000))) AND isnotnull(d_date_sk#1024))\n            :                    +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#1024,d_date_id#1025,d_date#1026,d_month_seq#1027,d_week_seq#1028,d_quarter_seq#1029,d_year#1030,d_dow#1031,d_moy#1032,d_dom#1033,d_qoy#1034,d_fy_year#1035,d_fy_quarter_seq#1036,d_fy_week_seq#1037,d_day_name#1038,d_quarter_name#1039,d_holiday#1040,d_weekend#1041,d_following_holiday#1042,d_first_dom#1043,d_last_dom#1044,d_same_day_ly#1045,d_same_day_lq#1046,d_current_day#1047,... 4 more fields] parquet\n            +- Aggregate [i_brand_id#1155, i_class_id#1157, i_category_id#1159], [store AS channel#736, i_brand_id#1155, i_class_id#1157, i_category_id#1159, sum((cast(ss_quantity#1134 as decimal(10,0)) * ss_list_price#1136)) AS sales#737, count(1) AS number_sales#738L]\n               +- Project [ss_quantity#1134, ss_list_price#1136, i_brand_id#1155, i_class_id#1157, i_category_id#1159]\n                  +- Join Inner, (ss_item_sk#1126 = i_item_sk#1148)\n                     :- Project [ss_item_sk#1126, ss_quantity#1134, ss_list_price#1136]\n                     :  +- Join Inner, (ss_sold_date_sk#1147 = d_date_sk#1170)\n                     :     :- Join LeftSemi, (ss_item_sk#1126 = ss_item_sk#745)\n                     :     :  :- Project [ss_item_sk#1126, ss_quantity#1134, ss_list_price#1136, ss_sold_date_sk#1147]\n                     :     :  :  +- Filter ((isnotnull(ss_item_sk#1126) AND isnotnull(ss_sold_date_sk#1147)) AND dynamicpruning#1310 [ss_sold_date_sk#1147])\n                     :     :  :     :  +- Project [d_date_sk#1170]\n                     :     :  :     :     +- Filter ((isnotnull(d_week_seq#1174) AND (d_week_seq#1174 = scalar-subquery#740 [])) AND isnotnull(d_date_sk#1170))\n                     :     :  :     :        :  +- Project [d_week_seq#1241]\n                     :     :  :     :        :     +- Filter (((isnotnull(d_year#1243) AND isnotnull(d_moy#1245)) AND isnotnull(d_dom#1246)) AND (((d_year#1243 = 1998) AND (d_moy#1245 = 12)) AND (d_dom#1246 = 16)))\n                     :     :  :     :        :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#1237,d_date_id#1238,d_date#1239,d_month_seq#1240,d_week_seq#1241,d_quarter_seq#1242,d_year#1243,d_dow#1244,d_moy#1245,d_dom#1246,d_qoy#1247,d_fy_year#1248,d_fy_quarter_seq#1249,d_fy_week_seq#1250,d_day_name#1251,d_quarter_name#1252,d_holiday#1253,d_weekend#1254,d_following_holiday#1255,d_first_dom#1256,d_last_dom#1257,d_same_day_ly#1258,d_same_day_lq#1259,d_current_day#1260,... 4 more fields] parquet\n                     :     :  :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#1170,d_date_id#1171,d_date#1172,d_month_seq#1173,d_week_seq#1174,d_quarter_seq#1175,d_year#1176,d_dow#1177,d_moy#1178,d_dom#1179,d_qoy#1180,d_fy_year#1181,d_fy_quarter_seq#1182,d_fy_week_seq#1183,d_day_name#1184,d_quarter_name#1185,d_holiday#1186,d_weekend#1187,d_following_holiday#1188,d_first_dom#1189,d_last_dom#1190,d_same_day_ly#1191,d_same_day_lq#1192,d_current_day#1193,... 4 more fields] parquet\n                     :     :  :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#1125,ss_item_sk#1126,ss_customer_sk#1127,ss_cdemo_sk#1128,ss_hdemo_sk#1129,ss_addr_sk#1130,ss_store_sk#1131,ss_promo_sk#1132,ss_ticket_number#1133L,ss_quantity#1134,ss_wholesale_cost#1135,ss_list_price#1136,ss_sales_price#1137,ss_ext_discount_amt#1138,ss_ext_sales_price#1139,ss_ext_wholesale_cost#1140,ss_ext_list_price#1141,ss_ext_tax#1142,ss_coupon_amt#1143,ss_net_paid#1144,ss_net_paid_inc_tax#1145,ss_net_profit#1146,ss_sold_date_sk#1147] parquet\n                     :     :  +- Project [i_item_sk#25 AS ss_item_sk#745]\n                     :     :     +- Join Inner, (((i_brand_id#32 = brand_id#742) AND (i_class_id#34 = class_id#743)) AND (i_category_id#36 = category_id#744))\n                     :     :        :- Project [i_item_sk#25, i_brand_id#32, i_class_id#34, i_category_id#36]\n                     :     :        :  +- Filter ((isnotnull(i_brand_id#32) AND isnotnull(i_class_id#34)) AND isnotnull(i_category_id#36))\n                     :     :        :     +- Relation spark_catalog.tpcds_100.item[i_item_sk#25,i_item_id#26,i_rec_start_date#27,i_rec_end_date#28,i_item_desc#29,i_current_price#30,i_wholesale_cost#31,i_brand_id#32,i_brand#33,i_class_id#34,i_class#35,i_category_id#36,i_category#37,i_manufact_id#38,i_manufact#39,i_size#40,i_formulation#41,i_color#42,i_units#43,i_container#44,i_manager_id#45,i_product_name#46] parquet\n                     :     :        +- Join LeftSemi, (((brand_id#742 <=> i_brand_id#834) AND (class_id#743 <=> i_class_id#836)) AND (category_id#744 <=> i_category_id#838))\n                     :     :           :- LogicalQueryStage Aggregate [brand_id#742, class_id#743, category_id#744], [brand_id#742, class_id#743, category_id#744], ShuffleQueryStage 79\n                     :     :           +- LogicalQueryStage Project [i_brand_id#834, i_class_id#836, i_category_id#838], ShuffleQueryStage 56\n                     :     +- LogicalQueryStage Project [d_date_sk#1170], BroadcastQueryStage 34\n                     +- Join LeftSemi, (i_item_sk#1148 = ss_item_sk#745)\n                        :- Project [i_item_sk#1148, i_brand_id#1155, i_class_id#1157, i_category_id#1159]\n                        :  +- Filter (((isnotnull(i_item_sk#1148) AND isnotnull(i_brand_id#1155)) AND isnotnull(i_class_id#1157)) AND isnotnull(i_category_id#1159))\n                        :     +- Relation spark_catalog.tpcds_100.item[i_item_sk#1148,i_item_id#1149,i_rec_start_date#1150,i_rec_end_date#1151,i_item_desc#1152,i_current_price#1153,i_wholesale_cost#1154,i_brand_id#1155,i_brand#1156,i_class_id#1157,i_class#1158,i_category_id#1159,i_category#1160,i_manufact_id#1161,i_manufact#1162,i_size#1163,i_formulation#1164,i_color#1165,i_units#1166,i_container#1167,i_manager_id#1168,i_product_name#1169] parquet\n                        +- Project [i_item_sk#25 AS ss_item_sk#745]\n                           +- Join Inner, (((i_brand_id#32 = brand_id#742) AND (i_class_id#34 = class_id#743)) AND (i_category_id#36 = category_id#744))\n                              :- Project [i_item_sk#25, i_brand_id#32, i_class_id#34, i_category_id#36]\n                              :  +- Filter ((isnotnull(i_brand_id#32) AND isnotnull(i_class_id#34)) AND isnotnull(i_category_id#36))\n                              :     +- Relation spark_catalog.tpcds_100.item[i_item_sk#25,i_item_id#26,i_rec_start_date#27,i_rec_end_date#28,i_item_desc#29,i_current_price#30,i_wholesale_cost#31,i_brand_id#32,i_brand#33,i_class_id#34,i_class#35,i_category_id#36,i_category#37,i_manufact_id#38,i_manufact#39,i_size#40,i_formulation#41,i_color#42,i_units#43,i_container#44,i_manager_id#45,i_product_name#46] parquet\n                              +- Join LeftSemi, (((brand_id#742 <=> i_brand_id#834) AND (class_id#743 <=> i_class_id#836)) AND (category_id#744 <=> i_category_id#838))\n                                 :- LogicalQueryStage Aggregate [brand_id#742, class_id#743, category_id#744], [brand_id#742, class_id#743, category_id#744], ShuffleQueryStage 81\n                                 +- LogicalQueryStage Project [i_brand_id#834, i_class_id#836, i_category_id#838], ShuffleQueryStage 60\n"
      },
      "IM" : {
        "inputSizeInBytes" : 89667376416,
        "inputRowCount" : 724334780
      },
      "PD" : {
        "2" : [ 177962, 455930, 415323, 324034, 407180, 578113, 259800, 210766, 416594, 365097, 722932, 430581, 737269, 1031975, 1514187, 472059, 101032, 459828, 347329, 114427, 94836, 1079666, 1326142, 383040, 175045, 486302, 702614, 800093, 2890585, 749715, 100494, 720165, 530316, 795278, 705228, 310364, 730188, 287903, 255104, 608403, 493741, 197579, 98211, 1196389, 851488, 408258, 740122, 162471, 235750, 429841, 280551, 434095, 986907, 459535, 521411, 444089, 345779, 644089, 1511511, 259033, 857504, 440487, 655905, 522602, 1260769, 704242, 355941, 572333, 482841, 779237, 447588, 350687, 323737, 1316494, 306270, 639573, 819553, 701140, 669174, 780010, 675042, 476951, 636674, 322479, 897583, 280582, 223958, 573984, 561763, 119797, 430493, 121994, 311747, 117433, 377765, 318296, 740667, 431248, 547706, 508009, 414691, 367457, 723737, 442906, 583473, 347572, 1269089, 287286, 380605, 786487, 704711, 1465276, 758753, 673171, 160802, 291861, 864733, 186361, 546087, 1459274, 1695574, 115478, 421893, 386121, 312819, 164972, 1072990, 214957, 152503, 420284, 300056, 868375, 940076, 349342, 205208, 928322, 195265, 461329, 359228, 419971, 560162, 326400, 702646, 957888, 320780, 321516, 414771, 187523, 870857, 1055493, 342091, 506784, 282728, 1045719, 262333, 128426, 495313, 750638, 98964, 1366471, 574893, 319167, 147634, 1547306, 890810, 507583, 261595, 408664, 943050, 676186, 857526, 578999, 449016, 240998, 433603, 682640, 120305, 912938, 1129760, 525413, 547769, 609464, 611740, 324072, 206504, 2926245, 295669, 919509, 366206, 535787, 794086, 708510, 622156, 383847, 1071951, 677651, 914990, 923202, 596798, 344327 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 1,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "StartTimeInMs" : 1702226677326,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 34172,
        "IOBytes" : {
          "Total" : 1642682935,
          "Details" : {
            "IR" : 1515967397,
            "IW" : 0,
            "SR" : 125951502,
            "SW" : 764036
          }
        }
      }
    },
    "8" : {
      "LQP" : {
        "operators" : {
          "45" : {
            "sign" : -2126579796,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 2430492,
            "rowCount" : 202541,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_item_sk#25 AS ss_item_sk#745] "
          },
          "98" : {
            "sign" : -1443173521,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 2430492,
            "rowCount" : 202541,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_item_sk#25 AS ss_item_sk#745] "
          },
          "113" : {
            "sign" : -1062759686,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 4860984,
            "rowCount" : 202541,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_item_sk#1148, i_brand_id#1155, i_class_id#1157, i_category_id#1159] "
          },
          "34" : {
            "sign" : -117080718,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 17256,
            "rowCount" : 1438,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#70] "
          },
          "67" : {
            "sign" : 824386657,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 3878455336,
            "rowCount" : 138516262,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cs_sold_date_sk#961 = d_date_sk#962) "
          },
          "120" : {
            "sign" : -1905217952,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 5745158420,
            "rowCount" : 287257921,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_brand_id#762 AS brand_id#742, i_class_id#764 AS class_id#743, i_category_id#766 AS category_id#744] "
          },
          "93" : {
            "sign" : -1689547051,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(d_week_seq#1174) AND (d_week_seq#1174 = scalar-subquery#740 [])) AND isnotnull(d_date_sk#1170)) "
          },
          "12" : {
            "sign" : 571393713,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(ss_item_sk#1053) AND isnotnull(ss_sold_date_sk#1074)) AND dynamicpruning#1303 [ss_sold_date_sk#1074]) "
          },
          "66" : {
            "sign" : 825651901,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 2770325240,
            "rowCount" : 138516262,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_quantity#945 AS quantity#748, cs_list_price#947 AS list_price#749] "
          },
          "89" : {
            "sign" : -303911461,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 7701269884,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#1126, ss_quantity#1134, ss_list_price#1136, ss_sold_date_sk#1147] "
          },
          "51" : {
            "sign" : -1868509690,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 3617396482656,
            "rowCount" : 301449706888,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#48] "
          },
          "124" : {
            "sign" : -1598386866,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1057344,
            "rowCount" : 1096,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#70], BroadcastQueryStage 36 "
          },
          "84" : {
            "sign" : 1755814857,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 9192253472,
            "rowCount" : 287257921,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_quantity#1134, ss_list_price#1136, i_brand_id#1155, i_class_id#1157, i_category_id#1159] "
          },
          "8" : {
            "sign" : 2059020778,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 46207619304,
            "rowCount" : 1925317471,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#1053, ss_quantity#1061, ss_list_price#1063] "
          },
          "73" : {
            "sign" : -169490734,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#962, d_date_id#963, d_date#964, d_month_seq#965, d_week_seq#966, d_quarter_seq#967, d_year#968, d_dow#969, d_moy#970, d_dom#971, d_qoy#972, d_fy_year#973, d_fy_quarter_seq#974, d_fy_week_seq#975, d_day_name#976, d_quarter_name#977, d_holiday#978, d_weekend#979, d_following_holiday#980, d_first_dom#981, d_last_dom#982, d_same_day_ly#983, d_same_day_lq#984, d_current_day#985, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "78" : {
            "sign" : 1698660872,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 14972593792,
            "rowCount" : 71983624,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ws_sold_time_sk#990, ws_ship_date_sk#991, ws_item_sk#992, ws_bill_customer_sk#993, ws_bill_cdemo_sk#994, ws_bill_hdemo_sk#995, ws_bill_addr_sk#996, ws_ship_customer_sk#997, ws_ship_cdemo_sk#998, ws_ship_hdemo_sk#999, ws_ship_addr_sk#1000, ws_web_page_sk#1001, ws_web_site_sk#1002, ws_ship_mode_sk#1003, ws_warehouse_sk#1004, ws_promo_sk#1005, ws_order_number#1006L, ws_quantity#1007, ws_wholesale_cost#1008, ws_list_price#1009, ws_sales_price#1010, ws_ext_discount_amt#1011, ws_ext_sales_price#1012, ws_ext_wholesale_cost#1013, ... 10 more fields], `spark_catalog`.`tpcds_100`.`web_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "19" : {
            "sign" : -1755539215,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#1209, d_date_id#1210, d_date#1211, d_month_seq#1212, d_week_seq#1213, d_quarter_seq#1214, d_year#1215, d_dow#1216, d_moy#1217, d_dom#1218, d_qoy#1219, d_fy_year#1220, d_fy_quarter_seq#1221, d_fy_week_seq#1222, d_day_name#1223, d_quarter_name#1224, d_holiday#1225, d_weekend#1226, d_following_holiday#1227, d_first_dom#1228, d_last_dom#1229, d_same_day_ly#1230, d_same_day_lq#1231, d_current_day#1232, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "100" : {
            "sign" : 1728789219,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 2739200,
            "rowCount" : 136960,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (((brand_id#742 <=> i_brand_id#834) AND (class_id#743 <=> i_class_id#836)) AND (category_id#744 <=> i_category_id#838)) "
          },
          "23" : {
            "sign" : -1756391561,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 86282466,
            "rowCount" : 202541,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(i_brand_id#32) AND isnotnull(i_class_id#34)) AND isnotnull(i_category_id#36)) "
          },
          "62" : {
            "sign" : -1972788865,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#877, ss_item_sk#878, ss_customer_sk#879, ss_cdemo_sk#880, ss_hdemo_sk#881, ss_addr_sk#882, ss_store_sk#883, ss_promo_sk#884, ss_ticket_number#885L, ss_quantity#886, ss_wholesale_cost#887, ss_list_price#888, ss_sales_price#889, ss_ext_discount_amt#890, ss_ext_sales_price#891, ss_ext_wholesale_cost#892, ss_ext_list_price#893, ss_ext_tax#894, ss_coupon_amt#895, ss_net_paid#896, ss_net_paid_inc_tax#897, ss_net_profit#898, ss_sold_date_sk#899], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "4" : {
            "sign" : 1851780708,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 10408960,
            "rowCount" : 136960,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(sales#731) AND (cast(sales#731 as decimal(32,6)) > cast(scalar-subquery#735 [] as decimal(32,6)))) "
          },
          "121" : {
            "sign" : -861331932,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 8043221788,
            "rowCount" : 287257921,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_item_sk#48 = i_item_sk#755) "
          },
          "88" : {
            "sign" : 1854106604,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 7701269884,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (ss_item_sk#1126 = ss_item_sk#745) "
          },
          "77" : {
            "sign" : -1902449141,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 14972593792,
            "rowCount" : 71983624,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(ws_sold_date_sk#1023) AND dynamicpruning#1290 [ws_sold_date_sk#1023]) "
          },
          "40" : {
            "sign" : -21562714,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1048632,
            "rowCount" : 7,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#1097], BroadcastQueryStage 9 "
          },
          "110" : {
            "sign" : -365670467,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1379777760,
            "rowCount" : 43118055,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_brand_id#834, i_class_id#836, i_category_id#838], ShuffleQueryStage 56 "
          },
          "15" : {
            "sign" : 1866012666,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(d_week_seq#1101) AND (d_week_seq#1101 = scalar-subquery#734 [])) AND isnotnull(d_date_sk#1097)) "
          },
          "11" : {
            "sign" : 1222696026,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 7701269884,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#1053, ss_quantity#1061, ss_list_price#1063, ss_sold_date_sk#1074] "
          },
          "104" : {
            "sign" : 899851787,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 3617396482656,
            "rowCount" : 301449706888,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#48] "
          },
          "90" : {
            "sign" : -604473204,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(ss_item_sk#1126) AND isnotnull(ss_sold_date_sk#1147)) AND dynamicpruning#1310 [ss_sold_date_sk#1147]) "
          },
          "9" : {
            "sign" : 2145521043,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 61610159072,
            "rowCount" : 1925317471,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#1074 = d_date_sk#1097) "
          },
          "44" : {
            "sign" : 73332589,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 86904000,
            "rowCount" : 204000,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [i_item_sk#1075, i_item_id#1076, i_rec_start_date#1077, i_rec_end_date#1078, i_item_desc#1079, i_current_price#1080, i_wholesale_cost#1081, i_brand_id#1082, i_brand#1083, i_class_id#1084, i_class#1085, i_category_id#1086, i_category#1087, i_manufact_id#1088, i_manufact#1089, i_size#1090, i_formulation#1091, i_color#1092, i_units#1093, i_container#1094, i_manager_id#1095, i_product_name#1096], `spark_catalog`.`tpcds_100`.`item`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "33" : {
            "sign" : 1104597854,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#47, ss_item_sk#48, ss_customer_sk#49, ss_cdemo_sk#50, ss_hdemo_sk#51, ss_addr_sk#52, ss_store_sk#53, ss_promo_sk#54, ss_ticket_number#55L, ss_quantity#56, ss_wholesale_cost#57, ss_list_price#58, ss_sales_price#59, ss_ext_discount_amt#60, ss_ext_sales_price#61, ss_ext_wholesale_cost#62, ss_ext_list_price#63, ss_ext_tax#64, ss_coupon_amt#65, ss_net_paid#66, ss_net_paid_inc_tax#67, ss_net_profit#68, ss_sold_date_sk#69], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "117" : {
            "sign" : -790015455,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 7291476,
            "rowCount" : 202541,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (((i_brand_id#32 = brand_id#742) AND (i_class_id#34 = class_id#743)) AND (i_category_id#36 = category_id#744)) "
          },
          "22" : {
            "sign" : 2089743597,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 4860984,
            "rowCount" : 202541,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_item_sk#25, i_brand_id#32, i_class_id#34, i_category_id#36] "
          },
          "56" : {
            "sign" : -1809172647,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 24,
            "rowCount" : 1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [avg((cast(quantity#746 as decimal(10,0)) * list_price#747)) AS average_sales#752] "
          },
          "55" : {
            "sign" : -365670591,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1379777760,
            "rowCount" : 43118055,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_brand_id#834, i_class_id#836, i_category_id#838], ShuffleQueryStage 52 "
          },
          "26" : {
            "sign" : 1125369028,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 2739200,
            "rowCount" : 136960,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [brand_id#742, class_id#743, category_id#744], [brand_id#742, class_id#743, category_id#744] "
          },
          "50" : {
            "sign" : -1967599343,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 8043221788,
            "rowCount" : 287257921,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_item_sk#48 = i_item_sk#755) "
          },
          "123" : {
            "sign" : 1894575332,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 6028994137760,
            "rowCount" : 301449706888,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#69 = d_date_sk#70) "
          },
          "37" : {
            "sign" : -1159939661,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1057344,
            "rowCount" : 1096,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#70], BroadcastQueryStage 0 "
          },
          "68" : {
            "sign" : 1942236716,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 3438552408,
            "rowCount" : 143273017,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_quantity#945, cs_list_price#947, cs_sold_date_sk#961] "
          },
          "61" : {
            "sign" : 1377797290,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(ss_sold_date_sk#899) AND dynamicpruning#1288 [ss_sold_date_sk#899]) "
          },
          "107" : {
            "sign" : -109048900,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(ss_item_sk#48) AND isnotnull(ss_sold_date_sk#69)) AND dynamicpruning#1297 [ss_sold_date_sk#69]) "
          },
          "13" : {
            "sign" : 913239237,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#1052, ss_item_sk#1053, ss_customer_sk#1054, ss_cdemo_sk#1055, ss_hdemo_sk#1056, ss_addr_sk#1057, ss_store_sk#1058, ss_promo_sk#1059, ss_ticket_number#1060L, ss_quantity#1061, ss_wholesale_cost#1062, ss_list_price#1063, ss_sales_price#1064, ss_ext_discount_amt#1065, ss_ext_sales_price#1066, ss_ext_wholesale_cost#1067, ss_ext_list_price#1068, ss_ext_tax#1069, ss_coupon_amt#1070, ss_net_paid#1071, ss_net_paid_inc_tax#1072, ss_net_profit#1073, ss_sold_date_sk#1074], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "46" : {
            "sign" : 7491275,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 7291476,
            "rowCount" : 202541,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (((i_brand_id#32 = brand_id#742) AND (i_class_id#34 = class_id#743)) AND (i_category_id#36 = category_id#744)) "
          },
          "99" : {
            "sign" : 289217598,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 7291476,
            "rowCount" : 202541,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (((i_brand_id#32 = brand_id#742) AND (i_class_id#34 = class_id#743)) AND (i_category_id#36 = category_id#744)) "
          },
          "24" : {
            "sign" : 2096275601,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 86904000,
            "rowCount" : 204000,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [i_item_sk#25, i_item_id#26, i_rec_start_date#27, i_rec_end_date#28, i_item_desc#29, i_current_price#30, i_wholesale_cost#31, i_brand_id#32, i_brand#33, i_class_id#34, i_class#35, i_category_id#36, i_category#37, i_manufact_id#38, i_manufact#39, i_size#40, i_formulation#41, i_color#42, i_units#43, i_container#44, i_manager_id#45, i_product_name#46], `spark_catalog`.`tpcds_100`.`item`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "94" : {
            "sign" : 683629544,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#1170, d_date_id#1171, d_date#1172, d_month_seq#1173, d_week_seq#1174, d_quarter_seq#1175, d_year#1176, d_dow#1177, d_moy#1178, d_dom#1179, d_qoy#1180, d_fy_year#1181, d_fy_quarter_seq#1182, d_fy_week_seq#1183, d_day_name#1184, d_quarter_name#1185, d_holiday#1186, d_weekend#1187, d_following_holiday#1188, d_first_dom#1189, d_last_dom#1190, d_same_day_ly#1191, d_same_day_lq#1192, d_current_day#1193, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "83" : {
            "sign" : 147114472,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 10408960,
            "rowCount" : 136960,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [i_brand_id#1155, i_class_id#1157, i_category_id#1159], [store AS channel#736, i_brand_id#1155, i_class_id#1157, i_category_id#1159, sum((cast(ss_quantity#1134 as decimal(10,0)) * ss_list_price#1136)) AS sales#737, count(1) AS number_sales#738L] "
          },
          "35" : {
            "sign" : 1340377833,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 353748,
            "rowCount" : 1438,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(d_year#76) AND ((d_year#76 >= 1998) AND (d_year#76 <= 2000))) AND isnotnull(d_date_sk#70)) "
          },
          "16" : {
            "sign" : 682718368,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#1097, d_date_id#1098, d_date#1099, d_month_seq#1100, d_week_seq#1101, d_quarter_seq#1102, d_year#1103, d_dow#1104, d_moy#1105, d_dom#1106, d_qoy#1107, d_fy_year#1108, d_fy_quarter_seq#1109, d_fy_week_seq#1110, d_day_name#1111, d_quarter_name#1112, d_holiday#1113, d_weekend#1114, d_following_holiday#1115, d_first_dom#1116, d_last_dom#1117, d_same_day_ly#1118, d_same_day_lq#1119, d_current_day#1120, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "79" : {
            "sign" : -1100969675,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 17256,
            "rowCount" : 1438,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#1024] "
          },
          "5" : {
            "sign" : 1616834846,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 10408960,
            "rowCount" : 136960,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [i_brand_id#1082, i_class_id#1084, i_category_id#1086], [store AS channel#730, i_brand_id#1082, i_class_id#1084, i_category_id#1086, sum((cast(ss_quantity#1061 as decimal(10,0)) * ss_list_price#1063)) AS sales#731, count(1) AS number_sales#732L] "
          },
          "103" : {
            "sign" : 40893256,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 8043221788,
            "rowCount" : 287257921,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_item_sk#48 = i_item_sk#755) "
          },
          "112" : {
            "sign" : -410718149,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 4860984,
            "rowCount" : 202541,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (i_item_sk#1148 = ss_item_sk#745) "
          },
          "72" : {
            "sign" : -1695423935,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 353748,
            "rowCount" : 1438,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(d_year#968) AND ((d_year#968 >= 1998) AND (d_year#968 <= 2000))) AND isnotnull(d_date_sk#962)) "
          },
          "10" : {
            "sign" : 1138539736,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 7701269884,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (ss_item_sk#1053 = ss_item_sk#745) "
          },
          "59" : {
            "sign" : -1804794945,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 7435136380,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#899 = d_date_sk#900) "
          },
          "87" : {
            "sign" : -1096045218,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 61610159072,
            "rowCount" : 1925317471,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#1147 = d_date_sk#1170) "
          },
          "48" : {
            "sign" : 1144026602,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 2739200,
            "rowCount" : 136960,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [brand_id#742, class_id#743, category_id#744], [brand_id#742, class_id#743, category_id#744] "
          },
          "21" : {
            "sign" : -139690034,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 7291476,
            "rowCount" : 202541,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (((i_brand_id#32 = brand_id#742) AND (i_class_id#34 = class_id#743)) AND (i_category_id#36 = category_id#744)) "
          },
          "116" : {
            "sign" : -1936626538,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 2430492,
            "rowCount" : 202541,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_item_sk#25 AS ss_item_sk#745] "
          },
          "76" : {
            "sign" : 49678577,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 1727606976,
            "rowCount" : 71983624,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_quantity#1007, ws_list_price#1009, ws_sold_date_sk#1023] "
          },
          "54" : {
            "sign" : -2125848814,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 4860984,
            "rowCount" : 202541,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Join LeftSemi, (((i_brand_id#762 <=> i_brand_id#784) AND (i_class_id#764 <=> i_class_id#786)) AND (i_category_id#766 <=> i_category_id#788)), BroadcastQueryStage 63 "
          },
          "43" : {
            "sign" : 579430964,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 86282466,
            "rowCount" : 202541,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(i_item_sk#1075) AND isnotnull(i_brand_id#1082)) AND isnotnull(i_class_id#1084)) AND isnotnull(i_category_id#1086)) "
          },
          "65" : {
            "sign" : -820074406,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#900, d_date_id#901, d_date#902, d_month_seq#903, d_week_seq#904, d_quarter_seq#905, d_year#906, d_dow#907, d_moy#908, d_dom#909, d_qoy#910, d_fy_year#911, d_fy_quarter_seq#912, d_fy_week_seq#913, d_day_name#914, d_quarter_name#915, d_holiday#916, d_weekend#917, d_following_holiday#918, d_first_dom#919, d_last_dom#920, d_same_day_ly#921, d_same_day_lq#922, d_current_day#923, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "71" : {
            "sign" : 406087876,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 17256,
            "rowCount" : 1438,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#962] "
          },
          "57" : {
            "sign" : -1298322270,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Union",
            "sizeInBytes" : 9471049040,
            "rowCount" : 473552452,
            "isRuntime" : false,
            "predicate" : " (unknown) Union Arguments: false, false "
          },
          "108" : {
            "sign" : -1598387920,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1057344,
            "rowCount" : 1096,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#70], BroadcastQueryStage 23 "
          },
          "32" : {
            "sign" : -1052942334,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(ss_item_sk#48) AND isnotnull(ss_sold_date_sk#69)) AND dynamicpruning#1291 [ss_sold_date_sk#69]) "
          },
          "80" : {
            "sign" : -626435234,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 353748,
            "rowCount" : 1438,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(d_year#1030) AND ((d_year#1030 >= 1998) AND (d_year#1030 <= 2000))) AND isnotnull(d_date_sk#1024)) "
          },
          "106" : {
            "sign" : 2101479604,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 4400725648,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#48, ss_sold_date_sk#69] "
          },
          "82" : {
            "sign" : -1489913881,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 10408960,
            "rowCount" : 136960,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(sales#737) AND (cast(sales#737 as decimal(32,6)) > cast(scalar-subquery#741 [] as decimal(32,6)))) "
          },
          "49" : {
            "sign" : -961488729,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 5745158420,
            "rowCount" : 287257921,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_brand_id#762 AS brand_id#742, i_class_id#764 AS class_id#743, i_category_id#766 AS category_id#744] "
          },
          "6" : {
            "sign" : -1875082037,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 9192253472,
            "rowCount" : 287257921,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_quantity#1061, ss_list_price#1063, i_brand_id#1082, i_class_id#1084, i_category_id#1086] "
          },
          "126" : {
            "sign" : -365669692,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1379777760,
            "rowCount" : 43118055,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_brand_id#834, i_class_id#836, i_category_id#838], ShuffleQueryStage 60 "
          },
          "36" : {
            "sign" : -232749464,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#70, d_date_id#71, d_date#72, d_month_seq#73, d_week_seq#74, d_quarter_seq#75, d_year#76, d_dow#77, d_moy#78, d_dom#79, d_qoy#80, d_fy_year#81, d_fy_quarter_seq#82, d_fy_week_seq#83, d_day_name#84, d_quarter_name#85, d_holiday#86, d_weekend#87, d_following_holiday#88, d_first_dom#89, d_last_dom#90, d_same_day_ly#91, d_same_day_lq#92, d_current_day#93, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "1" : {
            "sign" : -934138918,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
            "sizeInBytes" : 19722240,
            "rowCount" : 136960,
            "isRuntime" : false,
            "predicate" : " (unknown) LocalLimit Arguments: 100 "
          },
          "39" : {
            "sign" : -365671366,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1379777760,
            "rowCount" : 43118055,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_brand_id#834, i_class_id#836, i_category_id#838], ShuffleQueryStage 48 "
          },
          "17" : {
            "sign" : -2061501032,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 36,
            "rowCount" : 3,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_week_seq#1213] "
          },
          "25" : {
            "sign" : -148281251,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 2739200,
            "rowCount" : 136960,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (((brand_id#742 <=> i_brand_id#834) AND (class_id#743 <=> i_class_id#836)) AND (category_id#744 <=> i_category_id#838)) "
          },
          "60" : {
            "sign" : 1776873494,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 6601088472,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_quantity#886, ss_list_price#888, ss_sold_date_sk#899] "
          },
          "14" : {
            "sign" : 707519831,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 876588,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#1097] "
          },
          "47" : {
            "sign" : 39554976,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 2739200,
            "rowCount" : 136960,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (((brand_id#742 <=> i_brand_id#834) AND (class_id#743 <=> i_class_id#836)) AND (category_id#744 <=> i_category_id#838)) "
          },
          "122" : {
            "sign" : 899852841,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 3617396482656,
            "rowCount" : 301449706888,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#48] "
          },
          "111" : {
            "sign" : -1902204624,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1048632,
            "rowCount" : 7,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#1170], BroadcastQueryStage 34 "
          },
          "102" : {
            "sign" : -1618133632,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 5745158420,
            "rowCount" : 287257921,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_brand_id#762 AS brand_id#742, i_class_id#764 AS class_id#743, i_category_id#766 AS category_id#744] "
          },
          "31" : {
            "sign" : -948624390,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 4400725648,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#48, ss_sold_date_sk#69] "
          },
          "96" : {
            "sign" : 1734827371,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 492,
            "rowCount" : 2,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(d_year#1243) AND isnotnull(d_moy#1245)) AND isnotnull(d_dom#1246)) AND (((d_year#1243 = 1998) AND (d_moy#1245 = 12)) AND (d_dom#1246 = 16))) "
          },
          "69" : {
            "sign" : 1500374164,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 29800787536,
            "rowCount" : 143273017,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(cs_sold_date_sk#961) AND dynamicpruning#1289 [cs_sold_date_sk#961]) "
          },
          "95" : {
            "sign" : -79282860,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 24,
            "rowCount" : 2,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_week_seq#1241] "
          },
          "58" : {
            "sign" : 869525063,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 5310811700,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_quantity#886 AS quantity#746, ss_list_price#888 AS list_price#747] "
          },
          "64" : {
            "sign" : -2071970095,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 353748,
            "rowCount" : 1438,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(d_year#906) AND ((d_year#906 >= 1998) AND (d_year#906 <= 2000))) AND isnotnull(d_date_sk#900)) "
          },
          "53" : {
            "sign" : -1598388943,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1057344,
            "rowCount" : 1096,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#70], BroadcastQueryStage 11 "
          },
          "42" : {
            "sign" : 1540331732,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 4860984,
            "rowCount" : 202541,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_item_sk#1075, i_brand_id#1082, i_class_id#1084, i_category_id#1086] "
          },
          "75" : {
            "sign" : 1503367439,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 1945876940,
            "rowCount" : 69495605,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ws_sold_date_sk#1023 = d_date_sk#1024) "
          },
          "115" : {
            "sign" : -1752719423,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 86904000,
            "rowCount" : 204000,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [i_item_sk#1148, i_item_id#1149, i_rec_start_date#1150, i_rec_end_date#1151, i_item_desc#1152, i_current_price#1153, i_wholesale_cost#1154, i_brand_id#1155, i_brand#1156, i_class_id#1157, i_class#1158, i_category_id#1159, i_category#1160, i_manufact_id#1161, i_manufact#1162, i_size#1163, i_formulation#1164, i_color#1165, i_units#1166, i_container#1167, i_manager_id#1168, i_product_name#1169], `spark_catalog`.`tpcds_100`.`item`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "109" : {
            "sign" : -2125848752,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 4860984,
            "rowCount" : 202541,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Join LeftSemi, (((i_brand_id#762 <=> i_brand_id#784) AND (i_class_id#764 <=> i_class_id#786)) AND (i_category_id#766 <=> i_category_id#788)), BroadcastQueryStage 65 "
          },
          "0" : {
            "sign" : -1158955065,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
            "sizeInBytes" : 12000,
            "rowCount" : 100,
            "isRuntime" : false,
            "predicate" : " (unknown) GlobalLimit Arguments: 100 "
          },
          "20" : {
            "sign" : 816932689,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 2430492,
            "rowCount" : 202541,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_item_sk#25 AS ss_item_sk#745] "
          },
          "27" : {
            "sign" : 1343739679,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 5745158420,
            "rowCount" : 287257921,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_brand_id#762 AS brand_id#742, i_class_id#764 AS class_id#743, i_category_id#766 AS category_id#744] "
          },
          "70" : {
            "sign" : -70077436,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 29800787536,
            "rowCount" : 143273017,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [cs_sold_time_sk#928, cs_ship_date_sk#929, cs_bill_customer_sk#930, cs_bill_cdemo_sk#931, cs_bill_hdemo_sk#932, cs_bill_addr_sk#933, cs_ship_customer_sk#934, cs_ship_cdemo_sk#935, cs_ship_hdemo_sk#936, cs_ship_addr_sk#937, cs_call_center_sk#938, cs_catalog_page_sk#939, cs_ship_mode_sk#940, cs_warehouse_sk#941, cs_item_sk#942, cs_promo_sk#943, cs_order_number#944L, cs_quantity#945, cs_wholesale_cost#946, cs_list_price#947, cs_sales_price#948, cs_ext_discount_amt#949, cs_ext_sales_price#950, cs_ext_wholesale_cost#951, ... 10 more fields], `spark_catalog`.`tpcds_100`.`catalog_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "2" : {
            "sign" : 248040881,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 19722240,
            "rowCount" : 136960,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [i_brand_id#1082 ASC NULLS FIRST, i_class_id#1084 ASC NULLS FIRST, i_category_id#1086 ASC NULLS FIRST], true "
          },
          "86" : {
            "sign" : 483542764,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 46207619304,
            "rowCount" : 1925317471,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#1126, ss_quantity#1134, ss_list_price#1136] "
          },
          "38" : {
            "sign" : -2125848876,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 4860984,
            "rowCount" : 202541,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Join LeftSemi, (((i_brand_id#762 <=> i_brand_id#784) AND (i_class_id#764 <=> i_class_id#786)) AND (i_category_id#766 <=> i_category_id#788)), BroadcastQueryStage 61 "
          },
          "81" : {
            "sign" : -502763688,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#1024, d_date_id#1025, d_date#1026, d_month_seq#1027, d_week_seq#1028, d_quarter_seq#1029, d_year#1030, d_dow#1031, d_moy#1032, d_dom#1033, d_qoy#1034, d_fy_year#1035, d_fy_quarter_seq#1036, d_fy_week_seq#1037, d_day_name#1038, d_quarter_name#1039, d_holiday#1040, d_weekend#1041, d_following_holiday#1042, d_first_dom#1043, d_last_dom#1044, d_same_day_ly#1045, d_same_day_lq#1046, d_current_day#1047, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "118" : {
            "sign" : 326156938,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 2739200,
            "rowCount" : 136960,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (((brand_id#742 <=> i_brand_id#834) AND (class_id#743 <=> i_class_id#836)) AND (category_id#744 <=> i_category_id#838)) "
          },
          "92" : {
            "sign" : 1096234976,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 876588,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#1170] "
          },
          "125" : {
            "sign" : -2125848690,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 4860984,
            "rowCount" : 202541,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Join LeftSemi, (((i_brand_id#762 <=> i_brand_id#784) AND (i_class_id#764 <=> i_class_id#786)) AND (i_category_id#766 <=> i_category_id#788)), BroadcastQueryStage 67 "
          },
          "18" : {
            "sign" : -1305353512,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 738,
            "rowCount" : 3,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(d_year#1215) AND isnotnull(d_moy#1217)) AND isnotnull(d_dom#1218)) AND (((d_year#1215 = 1999) AND (d_moy#1217 = 12)) AND (d_dom#1218 = 16))) "
          },
          "101" : {
            "sign" : -165306399,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 2739200,
            "rowCount" : 136960,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [brand_id#742, class_id#743, category_id#744], [brand_id#742, class_id#743, category_id#744] "
          },
          "30" : {
            "sign" : 1668181847,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 6028994137760,
            "rowCount" : 301449706888,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#69 = d_date_sk#70) "
          },
          "7" : {
            "sign" : 2050273830,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 11490316840,
            "rowCount" : 287257921,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_item_sk#1053 = i_item_sk#1075) "
          },
          "97" : {
            "sign" : 813769211,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#1237, d_date_id#1238, d_date#1239, d_month_seq#1240, d_week_seq#1241, d_quarter_seq#1242, d_year#1243, d_dow#1244, d_moy#1245, d_dom#1246, d_qoy#1247, d_fy_year#1248, d_fy_quarter_seq#1249, d_fy_week_seq#1250, d_day_name#1251, d_quarter_name#1252, d_holiday#1253, d_weekend#1254, d_following_holiday#1255, d_first_dom#1256, d_last_dom#1257, d_same_day_ly#1258, d_same_day_lq#1259, d_current_day#1260, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "114" : {
            "sign" : -1448453368,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 86282466,
            "rowCount" : 202541,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(i_item_sk#1148) AND isnotnull(i_brand_id#1155)) AND isnotnull(i_class_id#1157)) AND isnotnull(i_category_id#1159)) "
          },
          "29" : {
            "sign" : -1722842562,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 3617396482656,
            "rowCount" : 301449706888,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#48] "
          },
          "41" : {
            "sign" : -1933696680,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 4860984,
            "rowCount" : 202541,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (i_item_sk#1075 = ss_item_sk#745) "
          },
          "105" : {
            "sign" : 1894574278,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 6028994137760,
            "rowCount" : 301449706888,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#69 = d_date_sk#70) "
          },
          "63" : {
            "sign" : 2019201408,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 17256,
            "rowCount" : 1438,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#900] "
          },
          "3" : {
            "sign" : 1652835273,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 19722240,
            "rowCount" : 136960,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (((i_brand_id#1082 = i_brand_id#1155) AND (i_class_id#1084 = i_class_id#1157)) AND (i_category_id#1086 = i_category_id#1159)) "
          },
          "74" : {
            "sign" : 17831375,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 1389912100,
            "rowCount" : 69495605,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_quantity#1007 AS quantity#750, ws_list_price#1009 AS list_price#751] "
          },
          "91" : {
            "sign" : 1179432008,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#1125, ss_item_sk#1126, ss_customer_sk#1127, ss_cdemo_sk#1128, ss_hdemo_sk#1129, ss_addr_sk#1130, ss_store_sk#1131, ss_promo_sk#1132, ss_ticket_number#1133L, ss_quantity#1134, ss_wholesale_cost#1135, ss_list_price#1136, ss_sales_price#1137, ss_ext_discount_amt#1138, ss_ext_sales_price#1139, ss_ext_wholesale_cost#1140, ss_ext_list_price#1141, ss_ext_tax#1142, ss_coupon_amt#1143, ss_net_paid#1144, ss_net_paid_inc_tax#1145, ss_net_profit#1146, ss_sold_date_sk#1147], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "52" : {
            "sign" : 174031885,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 6028994137760,
            "rowCount" : 301449706888,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#69 = d_date_sk#70) "
          },
          "85" : {
            "sign" : 362840603,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 11490316840,
            "rowCount" : 287257921,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_item_sk#1126 = i_item_sk#1148) "
          },
          "28" : {
            "sign" : -368155715,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 8043221788,
            "rowCount" : 287257921,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_item_sk#48 = i_item_sk#755) "
          },
          "119" : {
            "sign" : -1416244163,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 2739200,
            "rowCount" : 136960,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [brand_id#742, class_id#743, category_id#744], [brand_id#742, class_id#743, category_id#744] "
          }
        },
        "links" : [ {
          "fromId" : 13,
          "fromName" : "LogicalRelation",
          "toId" : 12,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 16,
          "fromName" : "LogicalRelation",
          "toId" : 15,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 19,
          "fromName" : "LogicalRelation",
          "toId" : 18,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 18,
          "fromName" : "Filter",
          "toId" : 17,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 17,
          "fromName" : "Project",
          "toId" : 15,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 15,
          "fromName" : "Filter",
          "toId" : 14,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 14,
          "fromName" : "Project",
          "toId" : 12,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 12,
          "fromName" : "Filter",
          "toId" : 11,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "Project",
          "toId" : 10,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 24,
          "fromName" : "LogicalRelation",
          "toId" : 23,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 23,
          "fromName" : "Filter",
          "toId" : 22,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 22,
          "fromName" : "Project",
          "toId" : 21,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 33,
          "fromName" : "LogicalRelation",
          "toId" : 32,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 36,
          "fromName" : "LogicalRelation",
          "toId" : 35,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 35,
          "fromName" : "Filter",
          "toId" : 34,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 34,
          "fromName" : "Project",
          "toId" : 32,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 32,
          "fromName" : "Filter",
          "toId" : 31,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 31,
          "fromName" : "Project",
          "toId" : 30,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 37,
          "fromName" : "LogicalQueryStage",
          "toId" : 30,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 30,
          "fromName" : "Join",
          "toId" : 29,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 29,
          "fromName" : "Project",
          "toId" : 28,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 38,
          "fromName" : "LogicalQueryStage",
          "toId" : 28,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 28,
          "fromName" : "Join",
          "toId" : 27,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 27,
          "fromName" : "Project",
          "toId" : 26,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 26,
          "fromName" : "Aggregate",
          "toId" : 25,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 39,
          "fromName" : "LogicalQueryStage",
          "toId" : 25,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 25,
          "fromName" : "Join",
          "toId" : 21,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 21,
          "fromName" : "Join",
          "toId" : 20,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 20,
          "fromName" : "Project",
          "toId" : 10,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "Join",
          "toId" : 9,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 40,
          "fromName" : "LogicalQueryStage",
          "toId" : 9,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "Join",
          "toId" : 8,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "Project",
          "toId" : 7,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 44,
          "fromName" : "LogicalRelation",
          "toId" : 43,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 43,
          "fromName" : "Filter",
          "toId" : 42,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 42,
          "fromName" : "Project",
          "toId" : 41,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 22,
          "fromName" : "Project",
          "toId" : 46,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 31,
          "fromName" : "Project",
          "toId" : 52,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 53,
          "fromName" : "LogicalQueryStage",
          "toId" : 52,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 52,
          "fromName" : "Join",
          "toId" : 51,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 51,
          "fromName" : "Project",
          "toId" : 50,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 54,
          "fromName" : "LogicalQueryStage",
          "toId" : 50,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 50,
          "fromName" : "Join",
          "toId" : 49,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 49,
          "fromName" : "Project",
          "toId" : 48,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 48,
          "fromName" : "Aggregate",
          "toId" : 47,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 55,
          "fromName" : "LogicalQueryStage",
          "toId" : 47,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 47,
          "fromName" : "Join",
          "toId" : 46,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 46,
          "fromName" : "Join",
          "toId" : 45,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 45,
          "fromName" : "Project",
          "toId" : 41,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 41,
          "fromName" : "Join",
          "toId" : 7,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Join",
          "toId" : 6,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Project",
          "toId" : 5,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Aggregate",
          "toId" : 4,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 62,
          "fromName" : "LogicalRelation",
          "toId" : 61,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 65,
          "fromName" : "LogicalRelation",
          "toId" : 64,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 64,
          "fromName" : "Filter",
          "toId" : 63,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 63,
          "fromName" : "Project",
          "toId" : 61,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 61,
          "fromName" : "Filter",
          "toId" : 60,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 60,
          "fromName" : "Project",
          "toId" : 59,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 63,
          "fromName" : "Project",
          "toId" : 59,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 59,
          "fromName" : "Join",
          "toId" : 58,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 58,
          "fromName" : "Project",
          "toId" : 57,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 70,
          "fromName" : "LogicalRelation",
          "toId" : 69,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 73,
          "fromName" : "LogicalRelation",
          "toId" : 72,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 72,
          "fromName" : "Filter",
          "toId" : 71,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 71,
          "fromName" : "Project",
          "toId" : 69,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 69,
          "fromName" : "Filter",
          "toId" : 68,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 68,
          "fromName" : "Project",
          "toId" : 67,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 71,
          "fromName" : "Project",
          "toId" : 67,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 67,
          "fromName" : "Join",
          "toId" : 66,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 66,
          "fromName" : "Project",
          "toId" : 57,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 78,
          "fromName" : "LogicalRelation",
          "toId" : 77,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 81,
          "fromName" : "LogicalRelation",
          "toId" : 80,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 80,
          "fromName" : "Filter",
          "toId" : 79,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 79,
          "fromName" : "Project",
          "toId" : 77,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 77,
          "fromName" : "Filter",
          "toId" : 76,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 76,
          "fromName" : "Project",
          "toId" : 75,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 79,
          "fromName" : "Project",
          "toId" : 75,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 75,
          "fromName" : "Join",
          "toId" : 74,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 74,
          "fromName" : "Project",
          "toId" : 57,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 57,
          "fromName" : "Union",
          "toId" : 56,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 56,
          "fromName" : "Aggregate",
          "toId" : 4,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 4,
          "fromName" : "Filter",
          "toId" : 3,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 91,
          "fromName" : "LogicalRelation",
          "toId" : 90,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 94,
          "fromName" : "LogicalRelation",
          "toId" : 93,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 97,
          "fromName" : "LogicalRelation",
          "toId" : 96,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 96,
          "fromName" : "Filter",
          "toId" : 95,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 95,
          "fromName" : "Project",
          "toId" : 93,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 93,
          "fromName" : "Filter",
          "toId" : 92,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 92,
          "fromName" : "Project",
          "toId" : 90,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 90,
          "fromName" : "Filter",
          "toId" : 89,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 89,
          "fromName" : "Project",
          "toId" : 88,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 22,
          "fromName" : "Project",
          "toId" : 99,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 33,
          "fromName" : "LogicalRelation",
          "toId" : 107,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 34,
          "fromName" : "Project",
          "toId" : 107,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 107,
          "fromName" : "Filter",
          "toId" : 106,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 106,
          "fromName" : "Project",
          "toId" : 105,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 108,
          "fromName" : "LogicalQueryStage",
          "toId" : 105,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 105,
          "fromName" : "Join",
          "toId" : 104,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 104,
          "fromName" : "Project",
          "toId" : 103,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 109,
          "fromName" : "LogicalQueryStage",
          "toId" : 103,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 103,
          "fromName" : "Join",
          "toId" : 102,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 102,
          "fromName" : "Project",
          "toId" : 101,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 101,
          "fromName" : "Aggregate",
          "toId" : 100,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 110,
          "fromName" : "LogicalQueryStage",
          "toId" : 100,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 100,
          "fromName" : "Join",
          "toId" : 99,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 99,
          "fromName" : "Join",
          "toId" : 98,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 98,
          "fromName" : "Project",
          "toId" : 88,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 88,
          "fromName" : "Join",
          "toId" : 87,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 111,
          "fromName" : "LogicalQueryStage",
          "toId" : 87,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 87,
          "fromName" : "Join",
          "toId" : 86,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 86,
          "fromName" : "Project",
          "toId" : 85,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 115,
          "fromName" : "LogicalRelation",
          "toId" : 114,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 114,
          "fromName" : "Filter",
          "toId" : 113,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 113,
          "fromName" : "Project",
          "toId" : 112,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 22,
          "fromName" : "Project",
          "toId" : 117,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 106,
          "fromName" : "Project",
          "toId" : 123,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 124,
          "fromName" : "LogicalQueryStage",
          "toId" : 123,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 123,
          "fromName" : "Join",
          "toId" : 122,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 122,
          "fromName" : "Project",
          "toId" : 121,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 125,
          "fromName" : "LogicalQueryStage",
          "toId" : 121,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 121,
          "fromName" : "Join",
          "toId" : 120,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 120,
          "fromName" : "Project",
          "toId" : 119,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 119,
          "fromName" : "Aggregate",
          "toId" : 118,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 126,
          "fromName" : "LogicalQueryStage",
          "toId" : 118,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 118,
          "fromName" : "Join",
          "toId" : 117,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 117,
          "fromName" : "Join",
          "toId" : 116,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 116,
          "fromName" : "Project",
          "toId" : 112,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 112,
          "fromName" : "Join",
          "toId" : 85,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 85,
          "fromName" : "Join",
          "toId" : 84,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 84,
          "fromName" : "Project",
          "toId" : 83,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 83,
          "fromName" : "Aggregate",
          "toId" : 82,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 56,
          "fromName" : "Aggregate",
          "toId" : 82,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 82,
          "fromName" : "Filter",
          "toId" : 3,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Join",
          "toId" : 2,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "LocalLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "LocalLimit",
          "toId" : 0,
          "toName" : "GlobalLimit",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [i_brand_id#1082 ASC NULLS FIRST, i_class_id#1084 ASC NULLS FIRST, i_category_id#1086 ASC NULLS FIRST], true\n      +- Join Inner, (((i_brand_id#1082 = i_brand_id#1155) AND (i_class_id#1084 = i_class_id#1157)) AND (i_category_id#1086 = i_category_id#1159))\n         :- Filter (isnotnull(sales#731) AND (cast(sales#731 as decimal(32,6)) > cast(scalar-subquery#735 [] as decimal(32,6))))\n         :  :  +- Aggregate [avg((cast(quantity#746 as decimal(10,0)) * list_price#747)) AS average_sales#752]\n         :  :     +- Union false, false\n         :  :        :- Project [ss_quantity#886 AS quantity#746, ss_list_price#888 AS list_price#747]\n         :  :        :  +- Join Inner, (ss_sold_date_sk#899 = d_date_sk#900)\n         :  :        :     :- Project [ss_quantity#886, ss_list_price#888, ss_sold_date_sk#899]\n         :  :        :     :  +- Filter (isnotnull(ss_sold_date_sk#899) AND dynamicpruning#1288 [ss_sold_date_sk#899])\n         :  :        :     :     :  +- Project [d_date_sk#900]\n         :  :        :     :     :     +- Filter ((isnotnull(d_year#906) AND ((d_year#906 >= 1998) AND (d_year#906 <= 2000))) AND isnotnull(d_date_sk#900))\n         :  :        :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#900,d_date_id#901,d_date#902,d_month_seq#903,d_week_seq#904,d_quarter_seq#905,d_year#906,d_dow#907,d_moy#908,d_dom#909,d_qoy#910,d_fy_year#911,d_fy_quarter_seq#912,d_fy_week_seq#913,d_day_name#914,d_quarter_name#915,d_holiday#916,d_weekend#917,d_following_holiday#918,d_first_dom#919,d_last_dom#920,d_same_day_ly#921,d_same_day_lq#922,d_current_day#923,... 4 more fields] parquet\n         :  :        :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#877,ss_item_sk#878,ss_customer_sk#879,ss_cdemo_sk#880,ss_hdemo_sk#881,ss_addr_sk#882,ss_store_sk#883,ss_promo_sk#884,ss_ticket_number#885L,ss_quantity#886,ss_wholesale_cost#887,ss_list_price#888,ss_sales_price#889,ss_ext_discount_amt#890,ss_ext_sales_price#891,ss_ext_wholesale_cost#892,ss_ext_list_price#893,ss_ext_tax#894,ss_coupon_amt#895,ss_net_paid#896,ss_net_paid_inc_tax#897,ss_net_profit#898,ss_sold_date_sk#899] parquet\n         :  :        :     +- Project [d_date_sk#900]\n         :  :        :        +- Filter ((isnotnull(d_year#906) AND ((d_year#906 >= 1998) AND (d_year#906 <= 2000))) AND isnotnull(d_date_sk#900))\n         :  :        :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#900,d_date_id#901,d_date#902,d_month_seq#903,d_week_seq#904,d_quarter_seq#905,d_year#906,d_dow#907,d_moy#908,d_dom#909,d_qoy#910,d_fy_year#911,d_fy_quarter_seq#912,d_fy_week_seq#913,d_day_name#914,d_quarter_name#915,d_holiday#916,d_weekend#917,d_following_holiday#918,d_first_dom#919,d_last_dom#920,d_same_day_ly#921,d_same_day_lq#922,d_current_day#923,... 4 more fields] parquet\n         :  :        :- Project [cs_quantity#945 AS quantity#748, cs_list_price#947 AS list_price#749]\n         :  :        :  +- Join Inner, (cs_sold_date_sk#961 = d_date_sk#962)\n         :  :        :     :- Project [cs_quantity#945, cs_list_price#947, cs_sold_date_sk#961]\n         :  :        :     :  +- Filter (isnotnull(cs_sold_date_sk#961) AND dynamicpruning#1289 [cs_sold_date_sk#961])\n         :  :        :     :     :  +- Project [d_date_sk#962]\n         :  :        :     :     :     +- Filter ((isnotnull(d_year#968) AND ((d_year#968 >= 1998) AND (d_year#968 <= 2000))) AND isnotnull(d_date_sk#962))\n         :  :        :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#962,d_date_id#963,d_date#964,d_month_seq#965,d_week_seq#966,d_quarter_seq#967,d_year#968,d_dow#969,d_moy#970,d_dom#971,d_qoy#972,d_fy_year#973,d_fy_quarter_seq#974,d_fy_week_seq#975,d_day_name#976,d_quarter_name#977,d_holiday#978,d_weekend#979,d_following_holiday#980,d_first_dom#981,d_last_dom#982,d_same_day_ly#983,d_same_day_lq#984,d_current_day#985,... 4 more fields] parquet\n         :  :        :     :     +- Relation spark_catalog.tpcds_100.catalog_sales[cs_sold_time_sk#928,cs_ship_date_sk#929,cs_bill_customer_sk#930,cs_bill_cdemo_sk#931,cs_bill_hdemo_sk#932,cs_bill_addr_sk#933,cs_ship_customer_sk#934,cs_ship_cdemo_sk#935,cs_ship_hdemo_sk#936,cs_ship_addr_sk#937,cs_call_center_sk#938,cs_catalog_page_sk#939,cs_ship_mode_sk#940,cs_warehouse_sk#941,cs_item_sk#942,cs_promo_sk#943,cs_order_number#944L,cs_quantity#945,cs_wholesale_cost#946,cs_list_price#947,cs_sales_price#948,cs_ext_discount_amt#949,cs_ext_sales_price#950,cs_ext_wholesale_cost#951,... 10 more fields] parquet\n         :  :        :     +- Project [d_date_sk#962]\n         :  :        :        +- Filter ((isnotnull(d_year#968) AND ((d_year#968 >= 1998) AND (d_year#968 <= 2000))) AND isnotnull(d_date_sk#962))\n         :  :        :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#962,d_date_id#963,d_date#964,d_month_seq#965,d_week_seq#966,d_quarter_seq#967,d_year#968,d_dow#969,d_moy#970,d_dom#971,d_qoy#972,d_fy_year#973,d_fy_quarter_seq#974,d_fy_week_seq#975,d_day_name#976,d_quarter_name#977,d_holiday#978,d_weekend#979,d_following_holiday#980,d_first_dom#981,d_last_dom#982,d_same_day_ly#983,d_same_day_lq#984,d_current_day#985,... 4 more fields] parquet\n         :  :        +- Project [ws_quantity#1007 AS quantity#750, ws_list_price#1009 AS list_price#751]\n         :  :           +- Join Inner, (ws_sold_date_sk#1023 = d_date_sk#1024)\n         :  :              :- Project [ws_quantity#1007, ws_list_price#1009, ws_sold_date_sk#1023]\n         :  :              :  +- Filter (isnotnull(ws_sold_date_sk#1023) AND dynamicpruning#1290 [ws_sold_date_sk#1023])\n         :  :              :     :  +- Project [d_date_sk#1024]\n         :  :              :     :     +- Filter ((isnotnull(d_year#1030) AND ((d_year#1030 >= 1998) AND (d_year#1030 <= 2000))) AND isnotnull(d_date_sk#1024))\n         :  :              :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#1024,d_date_id#1025,d_date#1026,d_month_seq#1027,d_week_seq#1028,d_quarter_seq#1029,d_year#1030,d_dow#1031,d_moy#1032,d_dom#1033,d_qoy#1034,d_fy_year#1035,d_fy_quarter_seq#1036,d_fy_week_seq#1037,d_day_name#1038,d_quarter_name#1039,d_holiday#1040,d_weekend#1041,d_following_holiday#1042,d_first_dom#1043,d_last_dom#1044,d_same_day_ly#1045,d_same_day_lq#1046,d_current_day#1047,... 4 more fields] parquet\n         :  :              :     +- Relation spark_catalog.tpcds_100.web_sales[ws_sold_time_sk#990,ws_ship_date_sk#991,ws_item_sk#992,ws_bill_customer_sk#993,ws_bill_cdemo_sk#994,ws_bill_hdemo_sk#995,ws_bill_addr_sk#996,ws_ship_customer_sk#997,ws_ship_cdemo_sk#998,ws_ship_hdemo_sk#999,ws_ship_addr_sk#1000,ws_web_page_sk#1001,ws_web_site_sk#1002,ws_ship_mode_sk#1003,ws_warehouse_sk#1004,ws_promo_sk#1005,ws_order_number#1006L,ws_quantity#1007,ws_wholesale_cost#1008,ws_list_price#1009,ws_sales_price#1010,ws_ext_discount_amt#1011,ws_ext_sales_price#1012,ws_ext_wholesale_cost#1013,... 10 more fields] parquet\n         :  :              +- Project [d_date_sk#1024]\n         :  :                 +- Filter ((isnotnull(d_year#1030) AND ((d_year#1030 >= 1998) AND (d_year#1030 <= 2000))) AND isnotnull(d_date_sk#1024))\n         :  :                    +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#1024,d_date_id#1025,d_date#1026,d_month_seq#1027,d_week_seq#1028,d_quarter_seq#1029,d_year#1030,d_dow#1031,d_moy#1032,d_dom#1033,d_qoy#1034,d_fy_year#1035,d_fy_quarter_seq#1036,d_fy_week_seq#1037,d_day_name#1038,d_quarter_name#1039,d_holiday#1040,d_weekend#1041,d_following_holiday#1042,d_first_dom#1043,d_last_dom#1044,d_same_day_ly#1045,d_same_day_lq#1046,d_current_day#1047,... 4 more fields] parquet\n         :  +- Aggregate [i_brand_id#1082, i_class_id#1084, i_category_id#1086], [store AS channel#730, i_brand_id#1082, i_class_id#1084, i_category_id#1086, sum((cast(ss_quantity#1061 as decimal(10,0)) * ss_list_price#1063)) AS sales#731, count(1) AS number_sales#732L]\n         :     +- Project [ss_quantity#1061, ss_list_price#1063, i_brand_id#1082, i_class_id#1084, i_category_id#1086]\n         :        +- Join Inner, (ss_item_sk#1053 = i_item_sk#1075)\n         :           :- Project [ss_item_sk#1053, ss_quantity#1061, ss_list_price#1063]\n         :           :  +- Join Inner, (ss_sold_date_sk#1074 = d_date_sk#1097)\n         :           :     :- Join LeftSemi, (ss_item_sk#1053 = ss_item_sk#745)\n         :           :     :  :- Project [ss_item_sk#1053, ss_quantity#1061, ss_list_price#1063, ss_sold_date_sk#1074]\n         :           :     :  :  +- Filter ((isnotnull(ss_item_sk#1053) AND isnotnull(ss_sold_date_sk#1074)) AND dynamicpruning#1303 [ss_sold_date_sk#1074])\n         :           :     :  :     :  +- Project [d_date_sk#1097]\n         :           :     :  :     :     +- Filter ((isnotnull(d_week_seq#1101) AND (d_week_seq#1101 = scalar-subquery#734 [])) AND isnotnull(d_date_sk#1097))\n         :           :     :  :     :        :  +- Project [d_week_seq#1213]\n         :           :     :  :     :        :     +- Filter (((isnotnull(d_year#1215) AND isnotnull(d_moy#1217)) AND isnotnull(d_dom#1218)) AND (((d_year#1215 = 1999) AND (d_moy#1217 = 12)) AND (d_dom#1218 = 16)))\n         :           :     :  :     :        :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#1209,d_date_id#1210,d_date#1211,d_month_seq#1212,d_week_seq#1213,d_quarter_seq#1214,d_year#1215,d_dow#1216,d_moy#1217,d_dom#1218,d_qoy#1219,d_fy_year#1220,d_fy_quarter_seq#1221,d_fy_week_seq#1222,d_day_name#1223,d_quarter_name#1224,d_holiday#1225,d_weekend#1226,d_following_holiday#1227,d_first_dom#1228,d_last_dom#1229,d_same_day_ly#1230,d_same_day_lq#1231,d_current_day#1232,... 4 more fields] parquet\n         :           :     :  :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#1097,d_date_id#1098,d_date#1099,d_month_seq#1100,d_week_seq#1101,d_quarter_seq#1102,d_year#1103,d_dow#1104,d_moy#1105,d_dom#1106,d_qoy#1107,d_fy_year#1108,d_fy_quarter_seq#1109,d_fy_week_seq#1110,d_day_name#1111,d_quarter_name#1112,d_holiday#1113,d_weekend#1114,d_following_holiday#1115,d_first_dom#1116,d_last_dom#1117,d_same_day_ly#1118,d_same_day_lq#1119,d_current_day#1120,... 4 more fields] parquet\n         :           :     :  :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#1052,ss_item_sk#1053,ss_customer_sk#1054,ss_cdemo_sk#1055,ss_hdemo_sk#1056,ss_addr_sk#1057,ss_store_sk#1058,ss_promo_sk#1059,ss_ticket_number#1060L,ss_quantity#1061,ss_wholesale_cost#1062,ss_list_price#1063,ss_sales_price#1064,ss_ext_discount_amt#1065,ss_ext_sales_price#1066,ss_ext_wholesale_cost#1067,ss_ext_list_price#1068,ss_ext_tax#1069,ss_coupon_amt#1070,ss_net_paid#1071,ss_net_paid_inc_tax#1072,ss_net_profit#1073,ss_sold_date_sk#1074] parquet\n         :           :     :  +- Project [i_item_sk#25 AS ss_item_sk#745]\n         :           :     :     +- Join Inner, (((i_brand_id#32 = brand_id#742) AND (i_class_id#34 = class_id#743)) AND (i_category_id#36 = category_id#744))\n         :           :     :        :- Project [i_item_sk#25, i_brand_id#32, i_class_id#34, i_category_id#36]\n         :           :     :        :  +- Filter ((isnotnull(i_brand_id#32) AND isnotnull(i_class_id#34)) AND isnotnull(i_category_id#36))\n         :           :     :        :     +- Relation spark_catalog.tpcds_100.item[i_item_sk#25,i_item_id#26,i_rec_start_date#27,i_rec_end_date#28,i_item_desc#29,i_current_price#30,i_wholesale_cost#31,i_brand_id#32,i_brand#33,i_class_id#34,i_class#35,i_category_id#36,i_category#37,i_manufact_id#38,i_manufact#39,i_size#40,i_formulation#41,i_color#42,i_units#43,i_container#44,i_manager_id#45,i_product_name#46] parquet\n         :           :     :        +- Join LeftSemi, (((brand_id#742 <=> i_brand_id#834) AND (class_id#743 <=> i_class_id#836)) AND (category_id#744 <=> i_category_id#838))\n         :           :     :           :- Aggregate [brand_id#742, class_id#743, category_id#744], [brand_id#742, class_id#743, category_id#744]\n         :           :     :           :  +- Project [i_brand_id#762 AS brand_id#742, i_class_id#764 AS class_id#743, i_category_id#766 AS category_id#744]\n         :           :     :           :     +- Join Inner, (ss_item_sk#48 = i_item_sk#755)\n         :           :     :           :        :- Project [ss_item_sk#48]\n         :           :     :           :        :  +- Join Inner, (ss_sold_date_sk#69 = d_date_sk#70)\n         :           :     :           :        :     :- Project [ss_item_sk#48, ss_sold_date_sk#69]\n         :           :     :           :        :     :  +- Filter ((isnotnull(ss_item_sk#48) AND isnotnull(ss_sold_date_sk#69)) AND dynamicpruning#1291 [ss_sold_date_sk#69])\n         :           :     :           :        :     :     :  +- Project [d_date_sk#70]\n         :           :     :           :        :     :     :     +- Filter ((isnotnull(d_year#76) AND ((d_year#76 >= 1998) AND (d_year#76 <= 2000))) AND isnotnull(d_date_sk#70))\n         :           :     :           :        :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#70,d_date_id#71,d_date#72,d_month_seq#73,d_week_seq#74,d_quarter_seq#75,d_year#76,d_dow#77,d_moy#78,d_dom#79,d_qoy#80,d_fy_year#81,d_fy_quarter_seq#82,d_fy_week_seq#83,d_day_name#84,d_quarter_name#85,d_holiday#86,d_weekend#87,d_following_holiday#88,d_first_dom#89,d_last_dom#90,d_same_day_ly#91,d_same_day_lq#92,d_current_day#93,... 4 more fields] parquet\n         :           :     :           :        :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#47,ss_item_sk#48,ss_customer_sk#49,ss_cdemo_sk#50,ss_hdemo_sk#51,ss_addr_sk#52,ss_store_sk#53,ss_promo_sk#54,ss_ticket_number#55L,ss_quantity#56,ss_wholesale_cost#57,ss_list_price#58,ss_sales_price#59,ss_ext_discount_amt#60,ss_ext_sales_price#61,ss_ext_wholesale_cost#62,ss_ext_list_price#63,ss_ext_tax#64,ss_coupon_amt#65,ss_net_paid#66,ss_net_paid_inc_tax#67,ss_net_profit#68,ss_sold_date_sk#69] parquet\n         :           :     :           :        :     +- LogicalQueryStage Project [d_date_sk#70], BroadcastQueryStage 0\n         :           :     :           :        +- LogicalQueryStage Join LeftSemi, (((i_brand_id#762 <=> i_brand_id#784) AND (i_class_id#764 <=> i_class_id#786)) AND (i_category_id#766 <=> i_category_id#788)), BroadcastQueryStage 61\n         :           :     :           +- LogicalQueryStage Project [i_brand_id#834, i_class_id#836, i_category_id#838], ShuffleQueryStage 48\n         :           :     +- LogicalQueryStage Project [d_date_sk#1097], BroadcastQueryStage 9\n         :           +- Join LeftSemi, (i_item_sk#1075 = ss_item_sk#745)\n         :              :- Project [i_item_sk#1075, i_brand_id#1082, i_class_id#1084, i_category_id#1086]\n         :              :  +- Filter (((isnotnull(i_item_sk#1075) AND isnotnull(i_brand_id#1082)) AND isnotnull(i_class_id#1084)) AND isnotnull(i_category_id#1086))\n         :              :     +- Relation spark_catalog.tpcds_100.item[i_item_sk#1075,i_item_id#1076,i_rec_start_date#1077,i_rec_end_date#1078,i_item_desc#1079,i_current_price#1080,i_wholesale_cost#1081,i_brand_id#1082,i_brand#1083,i_class_id#1084,i_class#1085,i_category_id#1086,i_category#1087,i_manufact_id#1088,i_manufact#1089,i_size#1090,i_formulation#1091,i_color#1092,i_units#1093,i_container#1094,i_manager_id#1095,i_product_name#1096] parquet\n         :              +- Project [i_item_sk#25 AS ss_item_sk#745]\n         :                 +- Join Inner, (((i_brand_id#32 = brand_id#742) AND (i_class_id#34 = class_id#743)) AND (i_category_id#36 = category_id#744))\n         :                    :- Project [i_item_sk#25, i_brand_id#32, i_class_id#34, i_category_id#36]\n         :                    :  +- Filter ((isnotnull(i_brand_id#32) AND isnotnull(i_class_id#34)) AND isnotnull(i_category_id#36))\n         :                    :     +- Relation spark_catalog.tpcds_100.item[i_item_sk#25,i_item_id#26,i_rec_start_date#27,i_rec_end_date#28,i_item_desc#29,i_current_price#30,i_wholesale_cost#31,i_brand_id#32,i_brand#33,i_class_id#34,i_class#35,i_category_id#36,i_category#37,i_manufact_id#38,i_manufact#39,i_size#40,i_formulation#41,i_color#42,i_units#43,i_container#44,i_manager_id#45,i_product_name#46] parquet\n         :                    +- Join LeftSemi, (((brand_id#742 <=> i_brand_id#834) AND (class_id#743 <=> i_class_id#836)) AND (category_id#744 <=> i_category_id#838))\n         :                       :- Aggregate [brand_id#742, class_id#743, category_id#744], [brand_id#742, class_id#743, category_id#744]\n         :                       :  +- Project [i_brand_id#762 AS brand_id#742, i_class_id#764 AS class_id#743, i_category_id#766 AS category_id#744]\n         :                       :     +- Join Inner, (ss_item_sk#48 = i_item_sk#755)\n         :                       :        :- Project [ss_item_sk#48]\n         :                       :        :  +- Join Inner, (ss_sold_date_sk#69 = d_date_sk#70)\n         :                       :        :     :- Project [ss_item_sk#48, ss_sold_date_sk#69]\n         :                       :        :     :  +- Filter ((isnotnull(ss_item_sk#48) AND isnotnull(ss_sold_date_sk#69)) AND dynamicpruning#1291 [ss_sold_date_sk#69])\n         :                       :        :     :     :  +- Project [d_date_sk#70]\n         :                       :        :     :     :     +- Filter ((isnotnull(d_year#76) AND ((d_year#76 >= 1998) AND (d_year#76 <= 2000))) AND isnotnull(d_date_sk#70))\n         :                       :        :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#70,d_date_id#71,d_date#72,d_month_seq#73,d_week_seq#74,d_quarter_seq#75,d_year#76,d_dow#77,d_moy#78,d_dom#79,d_qoy#80,d_fy_year#81,d_fy_quarter_seq#82,d_fy_week_seq#83,d_day_name#84,d_quarter_name#85,d_holiday#86,d_weekend#87,d_following_holiday#88,d_first_dom#89,d_last_dom#90,d_same_day_ly#91,d_same_day_lq#92,d_current_day#93,... 4 more fields] parquet\n         :                       :        :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#47,ss_item_sk#48,ss_customer_sk#49,ss_cdemo_sk#50,ss_hdemo_sk#51,ss_addr_sk#52,ss_store_sk#53,ss_promo_sk#54,ss_ticket_number#55L,ss_quantity#56,ss_wholesale_cost#57,ss_list_price#58,ss_sales_price#59,ss_ext_discount_amt#60,ss_ext_sales_price#61,ss_ext_wholesale_cost#62,ss_ext_list_price#63,ss_ext_tax#64,ss_coupon_amt#65,ss_net_paid#66,ss_net_paid_inc_tax#67,ss_net_profit#68,ss_sold_date_sk#69] parquet\n         :                       :        :     +- LogicalQueryStage Project [d_date_sk#70], BroadcastQueryStage 11\n         :                       :        +- LogicalQueryStage Join LeftSemi, (((i_brand_id#762 <=> i_brand_id#784) AND (i_class_id#764 <=> i_class_id#786)) AND (i_category_id#766 <=> i_category_id#788)), BroadcastQueryStage 63\n         :                       +- LogicalQueryStage Project [i_brand_id#834, i_class_id#836, i_category_id#838], ShuffleQueryStage 52\n         +- Filter (isnotnull(sales#737) AND (cast(sales#737 as decimal(32,6)) > cast(scalar-subquery#741 [] as decimal(32,6))))\n            :  +- Aggregate [avg((cast(quantity#746 as decimal(10,0)) * list_price#747)) AS average_sales#752]\n            :     +- Union false, false\n            :        :- Project [ss_quantity#886 AS quantity#746, ss_list_price#888 AS list_price#747]\n            :        :  +- Join Inner, (ss_sold_date_sk#899 = d_date_sk#900)\n            :        :     :- Project [ss_quantity#886, ss_list_price#888, ss_sold_date_sk#899]\n            :        :     :  +- Filter (isnotnull(ss_sold_date_sk#899) AND dynamicpruning#1288 [ss_sold_date_sk#899])\n            :        :     :     :  +- Project [d_date_sk#900]\n            :        :     :     :     +- Filter ((isnotnull(d_year#906) AND ((d_year#906 >= 1998) AND (d_year#906 <= 2000))) AND isnotnull(d_date_sk#900))\n            :        :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#900,d_date_id#901,d_date#902,d_month_seq#903,d_week_seq#904,d_quarter_seq#905,d_year#906,d_dow#907,d_moy#908,d_dom#909,d_qoy#910,d_fy_year#911,d_fy_quarter_seq#912,d_fy_week_seq#913,d_day_name#914,d_quarter_name#915,d_holiday#916,d_weekend#917,d_following_holiday#918,d_first_dom#919,d_last_dom#920,d_same_day_ly#921,d_same_day_lq#922,d_current_day#923,... 4 more fields] parquet\n            :        :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#877,ss_item_sk#878,ss_customer_sk#879,ss_cdemo_sk#880,ss_hdemo_sk#881,ss_addr_sk#882,ss_store_sk#883,ss_promo_sk#884,ss_ticket_number#885L,ss_quantity#886,ss_wholesale_cost#887,ss_list_price#888,ss_sales_price#889,ss_ext_discount_amt#890,ss_ext_sales_price#891,ss_ext_wholesale_cost#892,ss_ext_list_price#893,ss_ext_tax#894,ss_coupon_amt#895,ss_net_paid#896,ss_net_paid_inc_tax#897,ss_net_profit#898,ss_sold_date_sk#899] parquet\n            :        :     +- Project [d_date_sk#900]\n            :        :        +- Filter ((isnotnull(d_year#906) AND ((d_year#906 >= 1998) AND (d_year#906 <= 2000))) AND isnotnull(d_date_sk#900))\n            :        :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#900,d_date_id#901,d_date#902,d_month_seq#903,d_week_seq#904,d_quarter_seq#905,d_year#906,d_dow#907,d_moy#908,d_dom#909,d_qoy#910,d_fy_year#911,d_fy_quarter_seq#912,d_fy_week_seq#913,d_day_name#914,d_quarter_name#915,d_holiday#916,d_weekend#917,d_following_holiday#918,d_first_dom#919,d_last_dom#920,d_same_day_ly#921,d_same_day_lq#922,d_current_day#923,... 4 more fields] parquet\n            :        :- Project [cs_quantity#945 AS quantity#748, cs_list_price#947 AS list_price#749]\n            :        :  +- Join Inner, (cs_sold_date_sk#961 = d_date_sk#962)\n            :        :     :- Project [cs_quantity#945, cs_list_price#947, cs_sold_date_sk#961]\n            :        :     :  +- Filter (isnotnull(cs_sold_date_sk#961) AND dynamicpruning#1289 [cs_sold_date_sk#961])\n            :        :     :     :  +- Project [d_date_sk#962]\n            :        :     :     :     +- Filter ((isnotnull(d_year#968) AND ((d_year#968 >= 1998) AND (d_year#968 <= 2000))) AND isnotnull(d_date_sk#962))\n            :        :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#962,d_date_id#963,d_date#964,d_month_seq#965,d_week_seq#966,d_quarter_seq#967,d_year#968,d_dow#969,d_moy#970,d_dom#971,d_qoy#972,d_fy_year#973,d_fy_quarter_seq#974,d_fy_week_seq#975,d_day_name#976,d_quarter_name#977,d_holiday#978,d_weekend#979,d_following_holiday#980,d_first_dom#981,d_last_dom#982,d_same_day_ly#983,d_same_day_lq#984,d_current_day#985,... 4 more fields] parquet\n            :        :     :     +- Relation spark_catalog.tpcds_100.catalog_sales[cs_sold_time_sk#928,cs_ship_date_sk#929,cs_bill_customer_sk#930,cs_bill_cdemo_sk#931,cs_bill_hdemo_sk#932,cs_bill_addr_sk#933,cs_ship_customer_sk#934,cs_ship_cdemo_sk#935,cs_ship_hdemo_sk#936,cs_ship_addr_sk#937,cs_call_center_sk#938,cs_catalog_page_sk#939,cs_ship_mode_sk#940,cs_warehouse_sk#941,cs_item_sk#942,cs_promo_sk#943,cs_order_number#944L,cs_quantity#945,cs_wholesale_cost#946,cs_list_price#947,cs_sales_price#948,cs_ext_discount_amt#949,cs_ext_sales_price#950,cs_ext_wholesale_cost#951,... 10 more fields] parquet\n            :        :     +- Project [d_date_sk#962]\n            :        :        +- Filter ((isnotnull(d_year#968) AND ((d_year#968 >= 1998) AND (d_year#968 <= 2000))) AND isnotnull(d_date_sk#962))\n            :        :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#962,d_date_id#963,d_date#964,d_month_seq#965,d_week_seq#966,d_quarter_seq#967,d_year#968,d_dow#969,d_moy#970,d_dom#971,d_qoy#972,d_fy_year#973,d_fy_quarter_seq#974,d_fy_week_seq#975,d_day_name#976,d_quarter_name#977,d_holiday#978,d_weekend#979,d_following_holiday#980,d_first_dom#981,d_last_dom#982,d_same_day_ly#983,d_same_day_lq#984,d_current_day#985,... 4 more fields] parquet\n            :        +- Project [ws_quantity#1007 AS quantity#750, ws_list_price#1009 AS list_price#751]\n            :           +- Join Inner, (ws_sold_date_sk#1023 = d_date_sk#1024)\n            :              :- Project [ws_quantity#1007, ws_list_price#1009, ws_sold_date_sk#1023]\n            :              :  +- Filter (isnotnull(ws_sold_date_sk#1023) AND dynamicpruning#1290 [ws_sold_date_sk#1023])\n            :              :     :  +- Project [d_date_sk#1024]\n            :              :     :     +- Filter ((isnotnull(d_year#1030) AND ((d_year#1030 >= 1998) AND (d_year#1030 <= 2000))) AND isnotnull(d_date_sk#1024))\n            :              :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#1024,d_date_id#1025,d_date#1026,d_month_seq#1027,d_week_seq#1028,d_quarter_seq#1029,d_year#1030,d_dow#1031,d_moy#1032,d_dom#1033,d_qoy#1034,d_fy_year#1035,d_fy_quarter_seq#1036,d_fy_week_seq#1037,d_day_name#1038,d_quarter_name#1039,d_holiday#1040,d_weekend#1041,d_following_holiday#1042,d_first_dom#1043,d_last_dom#1044,d_same_day_ly#1045,d_same_day_lq#1046,d_current_day#1047,... 4 more fields] parquet\n            :              :     +- Relation spark_catalog.tpcds_100.web_sales[ws_sold_time_sk#990,ws_ship_date_sk#991,ws_item_sk#992,ws_bill_customer_sk#993,ws_bill_cdemo_sk#994,ws_bill_hdemo_sk#995,ws_bill_addr_sk#996,ws_ship_customer_sk#997,ws_ship_cdemo_sk#998,ws_ship_hdemo_sk#999,ws_ship_addr_sk#1000,ws_web_page_sk#1001,ws_web_site_sk#1002,ws_ship_mode_sk#1003,ws_warehouse_sk#1004,ws_promo_sk#1005,ws_order_number#1006L,ws_quantity#1007,ws_wholesale_cost#1008,ws_list_price#1009,ws_sales_price#1010,ws_ext_discount_amt#1011,ws_ext_sales_price#1012,ws_ext_wholesale_cost#1013,... 10 more fields] parquet\n            :              +- Project [d_date_sk#1024]\n            :                 +- Filter ((isnotnull(d_year#1030) AND ((d_year#1030 >= 1998) AND (d_year#1030 <= 2000))) AND isnotnull(d_date_sk#1024))\n            :                    +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#1024,d_date_id#1025,d_date#1026,d_month_seq#1027,d_week_seq#1028,d_quarter_seq#1029,d_year#1030,d_dow#1031,d_moy#1032,d_dom#1033,d_qoy#1034,d_fy_year#1035,d_fy_quarter_seq#1036,d_fy_week_seq#1037,d_day_name#1038,d_quarter_name#1039,d_holiday#1040,d_weekend#1041,d_following_holiday#1042,d_first_dom#1043,d_last_dom#1044,d_same_day_ly#1045,d_same_day_lq#1046,d_current_day#1047,... 4 more fields] parquet\n            +- Aggregate [i_brand_id#1155, i_class_id#1157, i_category_id#1159], [store AS channel#736, i_brand_id#1155, i_class_id#1157, i_category_id#1159, sum((cast(ss_quantity#1134 as decimal(10,0)) * ss_list_price#1136)) AS sales#737, count(1) AS number_sales#738L]\n               +- Project [ss_quantity#1134, ss_list_price#1136, i_brand_id#1155, i_class_id#1157, i_category_id#1159]\n                  +- Join Inner, (ss_item_sk#1126 = i_item_sk#1148)\n                     :- Project [ss_item_sk#1126, ss_quantity#1134, ss_list_price#1136]\n                     :  +- Join Inner, (ss_sold_date_sk#1147 = d_date_sk#1170)\n                     :     :- Join LeftSemi, (ss_item_sk#1126 = ss_item_sk#745)\n                     :     :  :- Project [ss_item_sk#1126, ss_quantity#1134, ss_list_price#1136, ss_sold_date_sk#1147]\n                     :     :  :  +- Filter ((isnotnull(ss_item_sk#1126) AND isnotnull(ss_sold_date_sk#1147)) AND dynamicpruning#1310 [ss_sold_date_sk#1147])\n                     :     :  :     :  +- Project [d_date_sk#1170]\n                     :     :  :     :     +- Filter ((isnotnull(d_week_seq#1174) AND (d_week_seq#1174 = scalar-subquery#740 [])) AND isnotnull(d_date_sk#1170))\n                     :     :  :     :        :  +- Project [d_week_seq#1241]\n                     :     :  :     :        :     +- Filter (((isnotnull(d_year#1243) AND isnotnull(d_moy#1245)) AND isnotnull(d_dom#1246)) AND (((d_year#1243 = 1998) AND (d_moy#1245 = 12)) AND (d_dom#1246 = 16)))\n                     :     :  :     :        :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#1237,d_date_id#1238,d_date#1239,d_month_seq#1240,d_week_seq#1241,d_quarter_seq#1242,d_year#1243,d_dow#1244,d_moy#1245,d_dom#1246,d_qoy#1247,d_fy_year#1248,d_fy_quarter_seq#1249,d_fy_week_seq#1250,d_day_name#1251,d_quarter_name#1252,d_holiday#1253,d_weekend#1254,d_following_holiday#1255,d_first_dom#1256,d_last_dom#1257,d_same_day_ly#1258,d_same_day_lq#1259,d_current_day#1260,... 4 more fields] parquet\n                     :     :  :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#1170,d_date_id#1171,d_date#1172,d_month_seq#1173,d_week_seq#1174,d_quarter_seq#1175,d_year#1176,d_dow#1177,d_moy#1178,d_dom#1179,d_qoy#1180,d_fy_year#1181,d_fy_quarter_seq#1182,d_fy_week_seq#1183,d_day_name#1184,d_quarter_name#1185,d_holiday#1186,d_weekend#1187,d_following_holiday#1188,d_first_dom#1189,d_last_dom#1190,d_same_day_ly#1191,d_same_day_lq#1192,d_current_day#1193,... 4 more fields] parquet\n                     :     :  :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#1125,ss_item_sk#1126,ss_customer_sk#1127,ss_cdemo_sk#1128,ss_hdemo_sk#1129,ss_addr_sk#1130,ss_store_sk#1131,ss_promo_sk#1132,ss_ticket_number#1133L,ss_quantity#1134,ss_wholesale_cost#1135,ss_list_price#1136,ss_sales_price#1137,ss_ext_discount_amt#1138,ss_ext_sales_price#1139,ss_ext_wholesale_cost#1140,ss_ext_list_price#1141,ss_ext_tax#1142,ss_coupon_amt#1143,ss_net_paid#1144,ss_net_paid_inc_tax#1145,ss_net_profit#1146,ss_sold_date_sk#1147] parquet\n                     :     :  +- Project [i_item_sk#25 AS ss_item_sk#745]\n                     :     :     +- Join Inner, (((i_brand_id#32 = brand_id#742) AND (i_class_id#34 = class_id#743)) AND (i_category_id#36 = category_id#744))\n                     :     :        :- Project [i_item_sk#25, i_brand_id#32, i_class_id#34, i_category_id#36]\n                     :     :        :  +- Filter ((isnotnull(i_brand_id#32) AND isnotnull(i_class_id#34)) AND isnotnull(i_category_id#36))\n                     :     :        :     +- Relation spark_catalog.tpcds_100.item[i_item_sk#25,i_item_id#26,i_rec_start_date#27,i_rec_end_date#28,i_item_desc#29,i_current_price#30,i_wholesale_cost#31,i_brand_id#32,i_brand#33,i_class_id#34,i_class#35,i_category_id#36,i_category#37,i_manufact_id#38,i_manufact#39,i_size#40,i_formulation#41,i_color#42,i_units#43,i_container#44,i_manager_id#45,i_product_name#46] parquet\n                     :     :        +- Join LeftSemi, (((brand_id#742 <=> i_brand_id#834) AND (class_id#743 <=> i_class_id#836)) AND (category_id#744 <=> i_category_id#838))\n                     :     :           :- Aggregate [brand_id#742, class_id#743, category_id#744], [brand_id#742, class_id#743, category_id#744]\n                     :     :           :  +- Project [i_brand_id#762 AS brand_id#742, i_class_id#764 AS class_id#743, i_category_id#766 AS category_id#744]\n                     :     :           :     +- Join Inner, (ss_item_sk#48 = i_item_sk#755)\n                     :     :           :        :- Project [ss_item_sk#48]\n                     :     :           :        :  +- Join Inner, (ss_sold_date_sk#69 = d_date_sk#70)\n                     :     :           :        :     :- Project [ss_item_sk#48, ss_sold_date_sk#69]\n                     :     :           :        :     :  +- Filter ((isnotnull(ss_item_sk#48) AND isnotnull(ss_sold_date_sk#69)) AND dynamicpruning#1297 [ss_sold_date_sk#69])\n                     :     :           :        :     :     :  +- Project [d_date_sk#70]\n                     :     :           :        :     :     :     +- Filter ((isnotnull(d_year#76) AND ((d_year#76 >= 1998) AND (d_year#76 <= 2000))) AND isnotnull(d_date_sk#70))\n                     :     :           :        :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#70,d_date_id#71,d_date#72,d_month_seq#73,d_week_seq#74,d_quarter_seq#75,d_year#76,d_dow#77,d_moy#78,d_dom#79,d_qoy#80,d_fy_year#81,d_fy_quarter_seq#82,d_fy_week_seq#83,d_day_name#84,d_quarter_name#85,d_holiday#86,d_weekend#87,d_following_holiday#88,d_first_dom#89,d_last_dom#90,d_same_day_ly#91,d_same_day_lq#92,d_current_day#93,... 4 more fields] parquet\n                     :     :           :        :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#47,ss_item_sk#48,ss_customer_sk#49,ss_cdemo_sk#50,ss_hdemo_sk#51,ss_addr_sk#52,ss_store_sk#53,ss_promo_sk#54,ss_ticket_number#55L,ss_quantity#56,ss_wholesale_cost#57,ss_list_price#58,ss_sales_price#59,ss_ext_discount_amt#60,ss_ext_sales_price#61,ss_ext_wholesale_cost#62,ss_ext_list_price#63,ss_ext_tax#64,ss_coupon_amt#65,ss_net_paid#66,ss_net_paid_inc_tax#67,ss_net_profit#68,ss_sold_date_sk#69] parquet\n                     :     :           :        :     +- LogicalQueryStage Project [d_date_sk#70], BroadcastQueryStage 23\n                     :     :           :        +- LogicalQueryStage Join LeftSemi, (((i_brand_id#762 <=> i_brand_id#784) AND (i_class_id#764 <=> i_class_id#786)) AND (i_category_id#766 <=> i_category_id#788)), BroadcastQueryStage 65\n                     :     :           +- LogicalQueryStage Project [i_brand_id#834, i_class_id#836, i_category_id#838], ShuffleQueryStage 56\n                     :     +- LogicalQueryStage Project [d_date_sk#1170], BroadcastQueryStage 34\n                     +- Join LeftSemi, (i_item_sk#1148 = ss_item_sk#745)\n                        :- Project [i_item_sk#1148, i_brand_id#1155, i_class_id#1157, i_category_id#1159]\n                        :  +- Filter (((isnotnull(i_item_sk#1148) AND isnotnull(i_brand_id#1155)) AND isnotnull(i_class_id#1157)) AND isnotnull(i_category_id#1159))\n                        :     +- Relation spark_catalog.tpcds_100.item[i_item_sk#1148,i_item_id#1149,i_rec_start_date#1150,i_rec_end_date#1151,i_item_desc#1152,i_current_price#1153,i_wholesale_cost#1154,i_brand_id#1155,i_brand#1156,i_class_id#1157,i_class#1158,i_category_id#1159,i_category#1160,i_manufact_id#1161,i_manufact#1162,i_size#1163,i_formulation#1164,i_color#1165,i_units#1166,i_container#1167,i_manager_id#1168,i_product_name#1169] parquet\n                        +- Project [i_item_sk#25 AS ss_item_sk#745]\n                           +- Join Inner, (((i_brand_id#32 = brand_id#742) AND (i_class_id#34 = class_id#743)) AND (i_category_id#36 = category_id#744))\n                              :- Project [i_item_sk#25, i_brand_id#32, i_class_id#34, i_category_id#36]\n                              :  +- Filter ((isnotnull(i_brand_id#32) AND isnotnull(i_class_id#34)) AND isnotnull(i_category_id#36))\n                              :     +- Relation spark_catalog.tpcds_100.item[i_item_sk#25,i_item_id#26,i_rec_start_date#27,i_rec_end_date#28,i_item_desc#29,i_current_price#30,i_wholesale_cost#31,i_brand_id#32,i_brand#33,i_class_id#34,i_class#35,i_category_id#36,i_category#37,i_manufact_id#38,i_manufact#39,i_size#40,i_formulation#41,i_color#42,i_units#43,i_container#44,i_manager_id#45,i_product_name#46] parquet\n                              +- Join LeftSemi, (((brand_id#742 <=> i_brand_id#834) AND (class_id#743 <=> i_class_id#836)) AND (category_id#744 <=> i_category_id#838))\n                                 :- Aggregate [brand_id#742, class_id#743, category_id#744], [brand_id#742, class_id#743, category_id#744]\n                                 :  +- Project [i_brand_id#762 AS brand_id#742, i_class_id#764 AS class_id#743, i_category_id#766 AS category_id#744]\n                                 :     +- Join Inner, (ss_item_sk#48 = i_item_sk#755)\n                                 :        :- Project [ss_item_sk#48]\n                                 :        :  +- Join Inner, (ss_sold_date_sk#69 = d_date_sk#70)\n                                 :        :     :- Project [ss_item_sk#48, ss_sold_date_sk#69]\n                                 :        :     :  +- Filter ((isnotnull(ss_item_sk#48) AND isnotnull(ss_sold_date_sk#69)) AND dynamicpruning#1297 [ss_sold_date_sk#69])\n                                 :        :     :     :  +- Project [d_date_sk#70]\n                                 :        :     :     :     +- Filter ((isnotnull(d_year#76) AND ((d_year#76 >= 1998) AND (d_year#76 <= 2000))) AND isnotnull(d_date_sk#70))\n                                 :        :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#70,d_date_id#71,d_date#72,d_month_seq#73,d_week_seq#74,d_quarter_seq#75,d_year#76,d_dow#77,d_moy#78,d_dom#79,d_qoy#80,d_fy_year#81,d_fy_quarter_seq#82,d_fy_week_seq#83,d_day_name#84,d_quarter_name#85,d_holiday#86,d_weekend#87,d_following_holiday#88,d_first_dom#89,d_last_dom#90,d_same_day_ly#91,d_same_day_lq#92,d_current_day#93,... 4 more fields] parquet\n                                 :        :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#47,ss_item_sk#48,ss_customer_sk#49,ss_cdemo_sk#50,ss_hdemo_sk#51,ss_addr_sk#52,ss_store_sk#53,ss_promo_sk#54,ss_ticket_number#55L,ss_quantity#56,ss_wholesale_cost#57,ss_list_price#58,ss_sales_price#59,ss_ext_discount_amt#60,ss_ext_sales_price#61,ss_ext_wholesale_cost#62,ss_ext_list_price#63,ss_ext_tax#64,ss_coupon_amt#65,ss_net_paid#66,ss_net_paid_inc_tax#67,ss_net_profit#68,ss_sold_date_sk#69] parquet\n                                 :        :     +- LogicalQueryStage Project [d_date_sk#70], BroadcastQueryStage 36\n                                 :        +- LogicalQueryStage Join LeftSemi, (((i_brand_id#762 <=> i_brand_id#784) AND (i_class_id#764 <=> i_class_id#786)) AND (i_category_id#766 <=> i_category_id#788)), BroadcastQueryStage 67\n                                 +- LogicalQueryStage Project [i_brand_id#834, i_class_id#836, i_category_id#838], ShuffleQueryStage 60\n"
      },
      "IM" : {
        "inputSizeInBytes" : 256907667552,
        "inputRowCount" : 1824782900
      },
      "PD" : {
        "2" : [ 177962, 455930, 415323, 324034, 407180, 578113, 259800, 210766, 416594, 365097, 722932, 430581, 737269, 1031975, 1514187, 472059, 101032, 459828, 347329, 114427, 94836, 1079666, 1326142, 383040, 175045, 486302, 702614, 800093, 2890585, 749715, 100494, 720165, 530316, 795278, 705228, 310364, 730188, 287903, 255104, 608403, 493741, 197579, 98211, 1196389, 851488, 408258, 740122, 162471, 235750, 429841, 280551, 434095, 986907, 459535, 521411, 444089, 345779, 644089, 1511511, 259033, 857504, 440487, 655905, 522602, 1260769, 704242, 355941, 572333, 482841, 779237, 447588, 350687, 323737, 1316494, 306270, 639573, 819553, 701140, 669174, 780010, 675042, 476951, 636674, 322479, 897583, 280582, 223958, 573984, 561763, 119797, 430493, 121994, 311747, 117433, 377765, 318296, 740667, 431248, 547706, 508009, 414691, 367457, 723737, 442906, 583473, 347572, 1269089, 287286, 380605, 786487, 704711, 1465276, 758753, 673171, 160802, 291861, 864733, 186361, 546087, 1459274, 1695574, 115478, 421893, 386121, 312819, 164972, 1072990, 214957, 152503, 420284, 300056, 868375, 940076, 349342, 205208, 928322, 195265, 461329, 359228, 419971, 560162, 326400, 702646, 957888, 320780, 321516, 414771, 187523, 870857, 1055493, 342091, 506784, 282728, 1045719, 262333, 128426, 495313, 750638, 98964, 1366471, 574893, 319167, 147634, 1547306, 890810, 507583, 261595, 408664, 943050, 676186, 857526, 578999, 449016, 240998, 433603, 682640, 120305, 912938, 1129760, 525413, 547769, 609464, 611740, 324072, 206504, 2926245, 295669, 919509, 366206, 535787, 794086, 708510, 622156, 383847, 1071951, 677651, 914990, 923202, 596798, 344327 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 4,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "StartTimeInMs" : 1702226651872,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 59626,
        "IOBytes" : {
          "Total" : 2546216615,
          "Details" : {
            "IR" : 2186334353,
            "IW" : 0,
            "SR" : 344431542,
            "SW" : 15450720
          }
        }
      }
    },
    "19" : {
      "LQP" : {
        "operators" : {
          "12" : {
            "sign" : -1972788865,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#877, ss_item_sk#878, ss_customer_sk#879, ss_cdemo_sk#880, ss_hdemo_sk#881, ss_addr_sk#882, ss_store_sk#883, ss_promo_sk#884, ss_ticket_number#885L, ss_quantity#886, ss_wholesale_cost#887, ss_list_price#888, ss_sales_price#889, ss_ext_discount_amt#890, ss_ext_sales_price#891, ss_ext_wholesale_cost#892, ss_ext_list_price#893, ss_ext_tax#894, ss_coupon_amt#895, ss_net_paid#896, ss_net_paid_inc_tax#897, ss_net_profit#898, ss_sold_date_sk#899], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "8" : {
            "sign" : 869525063,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 5310811700,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_quantity#886 AS quantity#746, ss_list_price#888 AS list_price#747] "
          },
          "19" : {
            "sign" : 1500374164,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 29800787536,
            "rowCount" : 143273017,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(cs_sold_date_sk#961) AND dynamicpruning#1289 [cs_sold_date_sk#961]) "
          },
          "23" : {
            "sign" : -169490734,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#962, d_date_id#963, d_date#964, d_month_seq#965, d_week_seq#966, d_quarter_seq#967, d_year#968, d_dow#969, d_moy#970, d_dom#971, d_qoy#972, d_fy_year#973, d_fy_quarter_seq#974, d_fy_week_seq#975, d_day_name#976, d_quarter_name#977, d_holiday#978, d_weekend#979, d_following_holiday#980, d_first_dom#981, d_last_dom#982, d_same_day_ly#983, d_same_day_lq#984, d_current_day#985, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "4" : {
            "sign" : -554368650,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 21787077332313216,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(sales#731) AND (cast(sales#731 as decimal(32,6)) > cast(scalar-subquery#735 [] as decimal(32,6)))) "
          },
          "15" : {
            "sign" : -820074406,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#900, d_date_id#901, d_date#902, d_month_seq#903, d_week_seq#904, d_quarter_seq#905, d_year#906, d_dow#907, d_moy#908, d_dom#909, d_qoy#910, d_fy_year#911, d_fy_quarter_seq#912, d_fy_week_seq#913, d_day_name#914, d_quarter_name#915, d_holiday#916, d_weekend#917, d_following_holiday#918, d_first_dom#919, d_last_dom#920, d_same_day_ly#921, d_same_day_lq#922, d_current_day#923, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "11" : {
            "sign" : 1377797290,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(ss_sold_date_sk#899) AND dynamicpruning#1288 [ss_sold_date_sk#899]) "
          },
          "9" : {
            "sign" : -1804794945,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 7435136380,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#899 = d_date_sk#900) "
          },
          "33" : {
            "sign" : -303166545,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 21787077332313216,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [i_brand_id#1155, i_class_id#1157, i_category_id#1159], [store AS channel#736, i_brand_id#1155, i_class_id#1157, i_category_id#1159, sum((cast(ss_quantity#1134 as decimal(10,0)) * ss_list_price#1136)) AS sales#737, count(1) AS number_sales#738L], HashAggregate(keys=[i_brand_id#1155, i_class_id#1157, i_category_id#1159], functions=[sum((cast(ss_quantity#1134 as decimal(10,0)) * ss_list_price#1136)), count(1)]) "
          },
          "22" : {
            "sign" : -1695423935,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 353748,
            "rowCount" : 1438,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(d_year#968) AND ((d_year#968 >= 1998) AND (d_year#968 <= 2000))) AND isnotnull(d_date_sk#962)) "
          },
          "26" : {
            "sign" : 49678577,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 1727606976,
            "rowCount" : 71983624,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_quantity#1007, ws_list_price#1009, ws_sold_date_sk#1023] "
          },
          "13" : {
            "sign" : 2019201408,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 17256,
            "rowCount" : 1438,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#900] "
          },
          "24" : {
            "sign" : 17831375,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 1389912100,
            "rowCount" : 69495605,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_quantity#1007 AS quantity#750, ws_list_price#1009 AS list_price#751] "
          },
          "16" : {
            "sign" : 825651901,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 2770325240,
            "rowCount" : 138516262,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_quantity#945 AS quantity#748, cs_list_price#947 AS list_price#749] "
          },
          "5" : {
            "sign" : -1581118840,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 21787077332313216,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [i_brand_id#1082, i_class_id#1084, i_category_id#1086], [store AS channel#730, i_brand_id#1082, i_class_id#1084, i_category_id#1086, sum((cast(ss_quantity#1061 as decimal(10,0)) * ss_list_price#1063)) AS sales#731, count(1) AS number_sales#732L], HashAggregate(keys=[i_brand_id#1082, i_class_id#1084, i_category_id#1086], functions=[sum((cast(ss_quantity#1061 as decimal(10,0)) * ss_list_price#1063)), count(1)]) "
          },
          "10" : {
            "sign" : 1776873494,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 6601088472,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_quantity#886, ss_list_price#888, ss_sold_date_sk#899] "
          },
          "21" : {
            "sign" : 406087876,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 17256,
            "rowCount" : 1438,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#962] "
          },
          "32" : {
            "sign" : -1109463710,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 21787077332313216,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(sales#737) AND (cast(sales#737 as decimal(32,6)) > cast(scalar-subquery#741 [] as decimal(32,6)))) "
          },
          "6" : {
            "sign" : -1809172647,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 24,
            "rowCount" : 1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [avg((cast(quantity#746 as decimal(10,0)) * list_price#747)) AS average_sales#752] "
          },
          "1" : {
            "sign" : 322006439,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
            "sizeInBytes" : 474676738684196360651337528262656,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) LocalLimit Arguments: 100 "
          },
          "17" : {
            "sign" : 824386657,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 3878455336,
            "rowCount" : 138516262,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cs_sold_date_sk#961 = d_date_sk#962) "
          },
          "25" : {
            "sign" : 1503367439,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 1945876940,
            "rowCount" : 69495605,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ws_sold_date_sk#1023 = d_date_sk#1024) "
          },
          "14" : {
            "sign" : -2071970095,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 353748,
            "rowCount" : 1438,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(d_year#906) AND ((d_year#906 >= 1998) AND (d_year#906 <= 2000))) AND isnotnull(d_date_sk#900)) "
          },
          "31" : {
            "sign" : -502763688,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#1024, d_date_id#1025, d_date#1026, d_month_seq#1027, d_week_seq#1028, d_quarter_seq#1029, d_year#1030, d_dow#1031, d_moy#1032, d_dom#1033, d_qoy#1034, d_fy_year#1035, d_fy_quarter_seq#1036, d_fy_week_seq#1037, d_day_name#1038, d_quarter_name#1039, d_holiday#1040, d_weekend#1041, d_following_holiday#1042, d_first_dom#1043, d_last_dom#1044, d_same_day_ly#1045, d_same_day_lq#1046, d_current_day#1047, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "0" : {
            "sign" : 29737490,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
            "sizeInBytes" : 12000,
            "rowCount" : 100,
            "isRuntime" : false,
            "predicate" : " (unknown) GlobalLimit Arguments: 100 "
          },
          "20" : {
            "sign" : -70077436,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 29800787536,
            "rowCount" : 143273017,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [cs_sold_time_sk#928, cs_ship_date_sk#929, cs_bill_customer_sk#930, cs_bill_cdemo_sk#931, cs_bill_hdemo_sk#932, cs_bill_addr_sk#933, cs_ship_customer_sk#934, cs_ship_cdemo_sk#935, cs_ship_hdemo_sk#936, cs_ship_addr_sk#937, cs_call_center_sk#938, cs_catalog_page_sk#939, cs_ship_mode_sk#940, cs_warehouse_sk#941, cs_item_sk#942, cs_promo_sk#943, cs_order_number#944L, cs_quantity#945, cs_wholesale_cost#946, cs_list_price#947, cs_sales_price#948, cs_ext_discount_amt#949, cs_ext_sales_price#950, cs_ext_wholesale_cost#951, ... 10 more fields], `spark_catalog`.`tpcds_100`.`catalog_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "27" : {
            "sign" : -1902449141,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 14972593792,
            "rowCount" : 71983624,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(ws_sold_date_sk#1023) AND dynamicpruning#1290 [ws_sold_date_sk#1023]) "
          },
          "2" : {
            "sign" : 337351868,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 474676738684196360651337528262656,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [i_brand_id#1082 ASC NULLS FIRST, i_class_id#1084 ASC NULLS FIRST, i_category_id#1086 ASC NULLS FIRST], true "
          },
          "18" : {
            "sign" : 1942236716,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 3438552408,
            "rowCount" : 143273017,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_quantity#945, cs_list_price#947, cs_sold_date_sk#961] "
          },
          "30" : {
            "sign" : -626435234,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 353748,
            "rowCount" : 1438,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(d_year#1030) AND ((d_year#1030 >= 1998) AND (d_year#1030 <= 2000))) AND isnotnull(d_date_sk#1024)) "
          },
          "7" : {
            "sign" : -1298322270,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Union",
            "sizeInBytes" : 9471049040,
            "rowCount" : 473552452,
            "isRuntime" : false,
            "predicate" : " (unknown) Union Arguments: false, false "
          },
          "29" : {
            "sign" : -1100969675,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 17256,
            "rowCount" : 1438,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#1024] "
          },
          "3" : {
            "sign" : 208564054,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 474676738684196360651337528262656,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (((i_brand_id#1082 = i_brand_id#1155) AND (i_class_id#1084 = i_class_id#1157)) AND (i_category_id#1086 = i_category_id#1159)) "
          },
          "28" : {
            "sign" : 1698660872,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 14972593792,
            "rowCount" : 71983624,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ws_sold_time_sk#990, ws_ship_date_sk#991, ws_item_sk#992, ws_bill_customer_sk#993, ws_bill_cdemo_sk#994, ws_bill_hdemo_sk#995, ws_bill_addr_sk#996, ws_ship_customer_sk#997, ws_ship_cdemo_sk#998, ws_ship_hdemo_sk#999, ws_ship_addr_sk#1000, ws_web_page_sk#1001, ws_web_site_sk#1002, ws_ship_mode_sk#1003, ws_warehouse_sk#1004, ws_promo_sk#1005, ws_order_number#1006L, ws_quantity#1007, ws_wholesale_cost#1008, ws_list_price#1009, ws_sales_price#1010, ws_ext_discount_amt#1011, ws_ext_sales_price#1012, ws_ext_wholesale_cost#1013, ... 10 more fields], `spark_catalog`.`tpcds_100`.`web_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          }
        },
        "links" : [ {
          "fromId" : 5,
          "fromName" : "LogicalQueryStage",
          "toId" : 4,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 12,
          "fromName" : "LogicalRelation",
          "toId" : 11,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 15,
          "fromName" : "LogicalRelation",
          "toId" : 14,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 14,
          "fromName" : "Filter",
          "toId" : 13,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 13,
          "fromName" : "Project",
          "toId" : 11,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 11,
          "fromName" : "Filter",
          "toId" : 10,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "Project",
          "toId" : 9,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 13,
          "fromName" : "Project",
          "toId" : 9,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "Join",
          "toId" : 8,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "Project",
          "toId" : 7,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 20,
          "fromName" : "LogicalRelation",
          "toId" : 19,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 23,
          "fromName" : "LogicalRelation",
          "toId" : 22,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 22,
          "fromName" : "Filter",
          "toId" : 21,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 21,
          "fromName" : "Project",
          "toId" : 19,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 19,
          "fromName" : "Filter",
          "toId" : 18,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 18,
          "fromName" : "Project",
          "toId" : 17,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 21,
          "fromName" : "Project",
          "toId" : 17,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 17,
          "fromName" : "Join",
          "toId" : 16,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 16,
          "fromName" : "Project",
          "toId" : 7,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 28,
          "fromName" : "LogicalRelation",
          "toId" : 27,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 31,
          "fromName" : "LogicalRelation",
          "toId" : 30,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 30,
          "fromName" : "Filter",
          "toId" : 29,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 29,
          "fromName" : "Project",
          "toId" : 27,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 27,
          "fromName" : "Filter",
          "toId" : 26,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 26,
          "fromName" : "Project",
          "toId" : 25,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 29,
          "fromName" : "Project",
          "toId" : 25,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 25,
          "fromName" : "Join",
          "toId" : 24,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 24,
          "fromName" : "Project",
          "toId" : 7,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Union",
          "toId" : 6,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Aggregate",
          "toId" : 4,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 4,
          "fromName" : "Filter",
          "toId" : 3,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 33,
          "fromName" : "LogicalQueryStage",
          "toId" : 32,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Aggregate",
          "toId" : 32,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 32,
          "fromName" : "Filter",
          "toId" : 3,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Join",
          "toId" : 2,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "LocalLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "LocalLimit",
          "toId" : 0,
          "toName" : "GlobalLimit",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [i_brand_id#1082 ASC NULLS FIRST, i_class_id#1084 ASC NULLS FIRST, i_category_id#1086 ASC NULLS FIRST], true\n      +- Join Inner, (((i_brand_id#1082 = i_brand_id#1155) AND (i_class_id#1084 = i_class_id#1157)) AND (i_category_id#1086 = i_category_id#1159))\n         :- Filter (isnotnull(sales#731) AND (cast(sales#731 as decimal(32,6)) > cast(scalar-subquery#735 [] as decimal(32,6))))\n         :  :  +- Aggregate [avg((cast(quantity#746 as decimal(10,0)) * list_price#747)) AS average_sales#752]\n         :  :     +- Union false, false\n         :  :        :- Project [ss_quantity#886 AS quantity#746, ss_list_price#888 AS list_price#747]\n         :  :        :  +- Join Inner, (ss_sold_date_sk#899 = d_date_sk#900)\n         :  :        :     :- Project [ss_quantity#886, ss_list_price#888, ss_sold_date_sk#899]\n         :  :        :     :  +- Filter (isnotnull(ss_sold_date_sk#899) AND dynamicpruning#1288 [ss_sold_date_sk#899])\n         :  :        :     :     :  +- Project [d_date_sk#900]\n         :  :        :     :     :     +- Filter ((isnotnull(d_year#906) AND ((d_year#906 >= 1998) AND (d_year#906 <= 2000))) AND isnotnull(d_date_sk#900))\n         :  :        :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#900,d_date_id#901,d_date#902,d_month_seq#903,d_week_seq#904,d_quarter_seq#905,d_year#906,d_dow#907,d_moy#908,d_dom#909,d_qoy#910,d_fy_year#911,d_fy_quarter_seq#912,d_fy_week_seq#913,d_day_name#914,d_quarter_name#915,d_holiday#916,d_weekend#917,d_following_holiday#918,d_first_dom#919,d_last_dom#920,d_same_day_ly#921,d_same_day_lq#922,d_current_day#923,... 4 more fields] parquet\n         :  :        :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#877,ss_item_sk#878,ss_customer_sk#879,ss_cdemo_sk#880,ss_hdemo_sk#881,ss_addr_sk#882,ss_store_sk#883,ss_promo_sk#884,ss_ticket_number#885L,ss_quantity#886,ss_wholesale_cost#887,ss_list_price#888,ss_sales_price#889,ss_ext_discount_amt#890,ss_ext_sales_price#891,ss_ext_wholesale_cost#892,ss_ext_list_price#893,ss_ext_tax#894,ss_coupon_amt#895,ss_net_paid#896,ss_net_paid_inc_tax#897,ss_net_profit#898,ss_sold_date_sk#899] parquet\n         :  :        :     +- Project [d_date_sk#900]\n         :  :        :        +- Filter ((isnotnull(d_year#906) AND ((d_year#906 >= 1998) AND (d_year#906 <= 2000))) AND isnotnull(d_date_sk#900))\n         :  :        :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#900,d_date_id#901,d_date#902,d_month_seq#903,d_week_seq#904,d_quarter_seq#905,d_year#906,d_dow#907,d_moy#908,d_dom#909,d_qoy#910,d_fy_year#911,d_fy_quarter_seq#912,d_fy_week_seq#913,d_day_name#914,d_quarter_name#915,d_holiday#916,d_weekend#917,d_following_holiday#918,d_first_dom#919,d_last_dom#920,d_same_day_ly#921,d_same_day_lq#922,d_current_day#923,... 4 more fields] parquet\n         :  :        :- Project [cs_quantity#945 AS quantity#748, cs_list_price#947 AS list_price#749]\n         :  :        :  +- Join Inner, (cs_sold_date_sk#961 = d_date_sk#962)\n         :  :        :     :- Project [cs_quantity#945, cs_list_price#947, cs_sold_date_sk#961]\n         :  :        :     :  +- Filter (isnotnull(cs_sold_date_sk#961) AND dynamicpruning#1289 [cs_sold_date_sk#961])\n         :  :        :     :     :  +- Project [d_date_sk#962]\n         :  :        :     :     :     +- Filter ((isnotnull(d_year#968) AND ((d_year#968 >= 1998) AND (d_year#968 <= 2000))) AND isnotnull(d_date_sk#962))\n         :  :        :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#962,d_date_id#963,d_date#964,d_month_seq#965,d_week_seq#966,d_quarter_seq#967,d_year#968,d_dow#969,d_moy#970,d_dom#971,d_qoy#972,d_fy_year#973,d_fy_quarter_seq#974,d_fy_week_seq#975,d_day_name#976,d_quarter_name#977,d_holiday#978,d_weekend#979,d_following_holiday#980,d_first_dom#981,d_last_dom#982,d_same_day_ly#983,d_same_day_lq#984,d_current_day#985,... 4 more fields] parquet\n         :  :        :     :     +- Relation spark_catalog.tpcds_100.catalog_sales[cs_sold_time_sk#928,cs_ship_date_sk#929,cs_bill_customer_sk#930,cs_bill_cdemo_sk#931,cs_bill_hdemo_sk#932,cs_bill_addr_sk#933,cs_ship_customer_sk#934,cs_ship_cdemo_sk#935,cs_ship_hdemo_sk#936,cs_ship_addr_sk#937,cs_call_center_sk#938,cs_catalog_page_sk#939,cs_ship_mode_sk#940,cs_warehouse_sk#941,cs_item_sk#942,cs_promo_sk#943,cs_order_number#944L,cs_quantity#945,cs_wholesale_cost#946,cs_list_price#947,cs_sales_price#948,cs_ext_discount_amt#949,cs_ext_sales_price#950,cs_ext_wholesale_cost#951,... 10 more fields] parquet\n         :  :        :     +- Project [d_date_sk#962]\n         :  :        :        +- Filter ((isnotnull(d_year#968) AND ((d_year#968 >= 1998) AND (d_year#968 <= 2000))) AND isnotnull(d_date_sk#962))\n         :  :        :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#962,d_date_id#963,d_date#964,d_month_seq#965,d_week_seq#966,d_quarter_seq#967,d_year#968,d_dow#969,d_moy#970,d_dom#971,d_qoy#972,d_fy_year#973,d_fy_quarter_seq#974,d_fy_week_seq#975,d_day_name#976,d_quarter_name#977,d_holiday#978,d_weekend#979,d_following_holiday#980,d_first_dom#981,d_last_dom#982,d_same_day_ly#983,d_same_day_lq#984,d_current_day#985,... 4 more fields] parquet\n         :  :        +- Project [ws_quantity#1007 AS quantity#750, ws_list_price#1009 AS list_price#751]\n         :  :           +- Join Inner, (ws_sold_date_sk#1023 = d_date_sk#1024)\n         :  :              :- Project [ws_quantity#1007, ws_list_price#1009, ws_sold_date_sk#1023]\n         :  :              :  +- Filter (isnotnull(ws_sold_date_sk#1023) AND dynamicpruning#1290 [ws_sold_date_sk#1023])\n         :  :              :     :  +- Project [d_date_sk#1024]\n         :  :              :     :     +- Filter ((isnotnull(d_year#1030) AND ((d_year#1030 >= 1998) AND (d_year#1030 <= 2000))) AND isnotnull(d_date_sk#1024))\n         :  :              :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#1024,d_date_id#1025,d_date#1026,d_month_seq#1027,d_week_seq#1028,d_quarter_seq#1029,d_year#1030,d_dow#1031,d_moy#1032,d_dom#1033,d_qoy#1034,d_fy_year#1035,d_fy_quarter_seq#1036,d_fy_week_seq#1037,d_day_name#1038,d_quarter_name#1039,d_holiday#1040,d_weekend#1041,d_following_holiday#1042,d_first_dom#1043,d_last_dom#1044,d_same_day_ly#1045,d_same_day_lq#1046,d_current_day#1047,... 4 more fields] parquet\n         :  :              :     +- Relation spark_catalog.tpcds_100.web_sales[ws_sold_time_sk#990,ws_ship_date_sk#991,ws_item_sk#992,ws_bill_customer_sk#993,ws_bill_cdemo_sk#994,ws_bill_hdemo_sk#995,ws_bill_addr_sk#996,ws_ship_customer_sk#997,ws_ship_cdemo_sk#998,ws_ship_hdemo_sk#999,ws_ship_addr_sk#1000,ws_web_page_sk#1001,ws_web_site_sk#1002,ws_ship_mode_sk#1003,ws_warehouse_sk#1004,ws_promo_sk#1005,ws_order_number#1006L,ws_quantity#1007,ws_wholesale_cost#1008,ws_list_price#1009,ws_sales_price#1010,ws_ext_discount_amt#1011,ws_ext_sales_price#1012,ws_ext_wholesale_cost#1013,... 10 more fields] parquet\n         :  :              +- Project [d_date_sk#1024]\n         :  :                 +- Filter ((isnotnull(d_year#1030) AND ((d_year#1030 >= 1998) AND (d_year#1030 <= 2000))) AND isnotnull(d_date_sk#1024))\n         :  :                    +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#1024,d_date_id#1025,d_date#1026,d_month_seq#1027,d_week_seq#1028,d_quarter_seq#1029,d_year#1030,d_dow#1031,d_moy#1032,d_dom#1033,d_qoy#1034,d_fy_year#1035,d_fy_quarter_seq#1036,d_fy_week_seq#1037,d_day_name#1038,d_quarter_name#1039,d_holiday#1040,d_weekend#1041,d_following_holiday#1042,d_first_dom#1043,d_last_dom#1044,d_same_day_ly#1045,d_same_day_lq#1046,d_current_day#1047,... 4 more fields] parquet\n         :  +- LogicalQueryStage Aggregate [i_brand_id#1082, i_class_id#1084, i_category_id#1086], [store AS channel#730, i_brand_id#1082, i_class_id#1084, i_category_id#1086, sum((cast(ss_quantity#1061 as decimal(10,0)) * ss_list_price#1063)) AS sales#731, count(1) AS number_sales#732L], HashAggregate(keys=[i_brand_id#1082, i_class_id#1084, i_category_id#1086], functions=[sum((cast(ss_quantity#1061 as decimal(10,0)) * ss_list_price#1063)), count(1)])\n         +- Filter (isnotnull(sales#737) AND (cast(sales#737 as decimal(32,6)) > cast(scalar-subquery#741 [] as decimal(32,6))))\n            :  +- Aggregate [avg((cast(quantity#746 as decimal(10,0)) * list_price#747)) AS average_sales#752]\n            :     +- Union false, false\n            :        :- Project [ss_quantity#886 AS quantity#746, ss_list_price#888 AS list_price#747]\n            :        :  +- Join Inner, (ss_sold_date_sk#899 = d_date_sk#900)\n            :        :     :- Project [ss_quantity#886, ss_list_price#888, ss_sold_date_sk#899]\n            :        :     :  +- Filter (isnotnull(ss_sold_date_sk#899) AND dynamicpruning#1288 [ss_sold_date_sk#899])\n            :        :     :     :  +- Project [d_date_sk#900]\n            :        :     :     :     +- Filter ((isnotnull(d_year#906) AND ((d_year#906 >= 1998) AND (d_year#906 <= 2000))) AND isnotnull(d_date_sk#900))\n            :        :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#900,d_date_id#901,d_date#902,d_month_seq#903,d_week_seq#904,d_quarter_seq#905,d_year#906,d_dow#907,d_moy#908,d_dom#909,d_qoy#910,d_fy_year#911,d_fy_quarter_seq#912,d_fy_week_seq#913,d_day_name#914,d_quarter_name#915,d_holiday#916,d_weekend#917,d_following_holiday#918,d_first_dom#919,d_last_dom#920,d_same_day_ly#921,d_same_day_lq#922,d_current_day#923,... 4 more fields] parquet\n            :        :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#877,ss_item_sk#878,ss_customer_sk#879,ss_cdemo_sk#880,ss_hdemo_sk#881,ss_addr_sk#882,ss_store_sk#883,ss_promo_sk#884,ss_ticket_number#885L,ss_quantity#886,ss_wholesale_cost#887,ss_list_price#888,ss_sales_price#889,ss_ext_discount_amt#890,ss_ext_sales_price#891,ss_ext_wholesale_cost#892,ss_ext_list_price#893,ss_ext_tax#894,ss_coupon_amt#895,ss_net_paid#896,ss_net_paid_inc_tax#897,ss_net_profit#898,ss_sold_date_sk#899] parquet\n            :        :     +- Project [d_date_sk#900]\n            :        :        +- Filter ((isnotnull(d_year#906) AND ((d_year#906 >= 1998) AND (d_year#906 <= 2000))) AND isnotnull(d_date_sk#900))\n            :        :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#900,d_date_id#901,d_date#902,d_month_seq#903,d_week_seq#904,d_quarter_seq#905,d_year#906,d_dow#907,d_moy#908,d_dom#909,d_qoy#910,d_fy_year#911,d_fy_quarter_seq#912,d_fy_week_seq#913,d_day_name#914,d_quarter_name#915,d_holiday#916,d_weekend#917,d_following_holiday#918,d_first_dom#919,d_last_dom#920,d_same_day_ly#921,d_same_day_lq#922,d_current_day#923,... 4 more fields] parquet\n            :        :- Project [cs_quantity#945 AS quantity#748, cs_list_price#947 AS list_price#749]\n            :        :  +- Join Inner, (cs_sold_date_sk#961 = d_date_sk#962)\n            :        :     :- Project [cs_quantity#945, cs_list_price#947, cs_sold_date_sk#961]\n            :        :     :  +- Filter (isnotnull(cs_sold_date_sk#961) AND dynamicpruning#1289 [cs_sold_date_sk#961])\n            :        :     :     :  +- Project [d_date_sk#962]\n            :        :     :     :     +- Filter ((isnotnull(d_year#968) AND ((d_year#968 >= 1998) AND (d_year#968 <= 2000))) AND isnotnull(d_date_sk#962))\n            :        :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#962,d_date_id#963,d_date#964,d_month_seq#965,d_week_seq#966,d_quarter_seq#967,d_year#968,d_dow#969,d_moy#970,d_dom#971,d_qoy#972,d_fy_year#973,d_fy_quarter_seq#974,d_fy_week_seq#975,d_day_name#976,d_quarter_name#977,d_holiday#978,d_weekend#979,d_following_holiday#980,d_first_dom#981,d_last_dom#982,d_same_day_ly#983,d_same_day_lq#984,d_current_day#985,... 4 more fields] parquet\n            :        :     :     +- Relation spark_catalog.tpcds_100.catalog_sales[cs_sold_time_sk#928,cs_ship_date_sk#929,cs_bill_customer_sk#930,cs_bill_cdemo_sk#931,cs_bill_hdemo_sk#932,cs_bill_addr_sk#933,cs_ship_customer_sk#934,cs_ship_cdemo_sk#935,cs_ship_hdemo_sk#936,cs_ship_addr_sk#937,cs_call_center_sk#938,cs_catalog_page_sk#939,cs_ship_mode_sk#940,cs_warehouse_sk#941,cs_item_sk#942,cs_promo_sk#943,cs_order_number#944L,cs_quantity#945,cs_wholesale_cost#946,cs_list_price#947,cs_sales_price#948,cs_ext_discount_amt#949,cs_ext_sales_price#950,cs_ext_wholesale_cost#951,... 10 more fields] parquet\n            :        :     +- Project [d_date_sk#962]\n            :        :        +- Filter ((isnotnull(d_year#968) AND ((d_year#968 >= 1998) AND (d_year#968 <= 2000))) AND isnotnull(d_date_sk#962))\n            :        :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#962,d_date_id#963,d_date#964,d_month_seq#965,d_week_seq#966,d_quarter_seq#967,d_year#968,d_dow#969,d_moy#970,d_dom#971,d_qoy#972,d_fy_year#973,d_fy_quarter_seq#974,d_fy_week_seq#975,d_day_name#976,d_quarter_name#977,d_holiday#978,d_weekend#979,d_following_holiday#980,d_first_dom#981,d_last_dom#982,d_same_day_ly#983,d_same_day_lq#984,d_current_day#985,... 4 more fields] parquet\n            :        +- Project [ws_quantity#1007 AS quantity#750, ws_list_price#1009 AS list_price#751]\n            :           +- Join Inner, (ws_sold_date_sk#1023 = d_date_sk#1024)\n            :              :- Project [ws_quantity#1007, ws_list_price#1009, ws_sold_date_sk#1023]\n            :              :  +- Filter (isnotnull(ws_sold_date_sk#1023) AND dynamicpruning#1290 [ws_sold_date_sk#1023])\n            :              :     :  +- Project [d_date_sk#1024]\n            :              :     :     +- Filter ((isnotnull(d_year#1030) AND ((d_year#1030 >= 1998) AND (d_year#1030 <= 2000))) AND isnotnull(d_date_sk#1024))\n            :              :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#1024,d_date_id#1025,d_date#1026,d_month_seq#1027,d_week_seq#1028,d_quarter_seq#1029,d_year#1030,d_dow#1031,d_moy#1032,d_dom#1033,d_qoy#1034,d_fy_year#1035,d_fy_quarter_seq#1036,d_fy_week_seq#1037,d_day_name#1038,d_quarter_name#1039,d_holiday#1040,d_weekend#1041,d_following_holiday#1042,d_first_dom#1043,d_last_dom#1044,d_same_day_ly#1045,d_same_day_lq#1046,d_current_day#1047,... 4 more fields] parquet\n            :              :     +- Relation spark_catalog.tpcds_100.web_sales[ws_sold_time_sk#990,ws_ship_date_sk#991,ws_item_sk#992,ws_bill_customer_sk#993,ws_bill_cdemo_sk#994,ws_bill_hdemo_sk#995,ws_bill_addr_sk#996,ws_ship_customer_sk#997,ws_ship_cdemo_sk#998,ws_ship_hdemo_sk#999,ws_ship_addr_sk#1000,ws_web_page_sk#1001,ws_web_site_sk#1002,ws_ship_mode_sk#1003,ws_warehouse_sk#1004,ws_promo_sk#1005,ws_order_number#1006L,ws_quantity#1007,ws_wholesale_cost#1008,ws_list_price#1009,ws_sales_price#1010,ws_ext_discount_amt#1011,ws_ext_sales_price#1012,ws_ext_wholesale_cost#1013,... 10 more fields] parquet\n            :              +- Project [d_date_sk#1024]\n            :                 +- Filter ((isnotnull(d_year#1030) AND ((d_year#1030 >= 1998) AND (d_year#1030 <= 2000))) AND isnotnull(d_date_sk#1024))\n            :                    +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#1024,d_date_id#1025,d_date#1026,d_month_seq#1027,d_week_seq#1028,d_quarter_seq#1029,d_year#1030,d_dow#1031,d_moy#1032,d_dom#1033,d_qoy#1034,d_fy_year#1035,d_fy_quarter_seq#1036,d_fy_week_seq#1037,d_day_name#1038,d_quarter_name#1039,d_holiday#1040,d_weekend#1041,d_following_holiday#1042,d_first_dom#1043,d_last_dom#1044,d_same_day_ly#1045,d_same_day_lq#1046,d_current_day#1047,... 4 more fields] parquet\n            +- LogicalQueryStage Aggregate [i_brand_id#1155, i_class_id#1157, i_category_id#1159], [store AS channel#736, i_brand_id#1155, i_class_id#1157, i_category_id#1159, sum((cast(ss_quantity#1134 as decimal(10,0)) * ss_list_price#1136)) AS sales#737, count(1) AS number_sales#738L], HashAggregate(keys=[i_brand_id#1155, i_class_id#1157, i_category_id#1159], functions=[sum((cast(ss_quantity#1134 as decimal(10,0)) * ss_list_price#1136)), count(1)])\n"
      },
      "IM" : {
        "inputSizeInBytes" : 43574154664626432,
        "inputRowCount" : 0
      },
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 16,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "StartTimeInMs" : 1702226698156,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 13342,
        "IOBytes" : {
          "Total" : 1514502064,
          "Details" : {
            "IR" : 1513291882,
            "IW" : 0,
            "SR" : 605091,
            "SW" : 605091
          }
        }
      }
    },
    "23" : {
      "LQP" : {
        "operators" : {
          "12" : {
            "sign" : 1377797290,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(ss_sold_date_sk#899) AND dynamicpruning#1288 [ss_sold_date_sk#899]) "
          },
          "8" : {
            "sign" : -1298322270,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Union",
            "sizeInBytes" : 9471049040,
            "rowCount" : 473552452,
            "isRuntime" : false,
            "predicate" : " (unknown) Union Arguments: false, false "
          },
          "19" : {
            "sign" : 1942236716,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 3438552408,
            "rowCount" : 143273017,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_quantity#945, cs_list_price#947, cs_sold_date_sk#961] "
          },
          "23" : {
            "sign" : -1695423935,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 353748,
            "rowCount" : 1438,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(d_year#968) AND ((d_year#968 >= 1998) AND (d_year#968 <= 2000))) AND isnotnull(d_date_sk#962)) "
          },
          "4" : {
            "sign" : -184003501,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 33587200,
            "rowCount" : 856,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Filter (isnotnull(sales#731) AND (cast(sales#731 as decimal(32,6)) > cast(scalar-subquery#735 [] as decimal(32,6)))), BroadcastQueryStage 101 "
          },
          "15" : {
            "sign" : -2071970095,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 353748,
            "rowCount" : 1438,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(d_year#906) AND ((d_year#906 >= 1998) AND (d_year#906 <= 2000))) AND isnotnull(d_date_sk#900)) "
          },
          "11" : {
            "sign" : 1776873494,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 6601088472,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_quantity#886, ss_list_price#888, ss_sold_date_sk#899] "
          },
          "9" : {
            "sign" : 869525063,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 5310811700,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_quantity#886 AS quantity#746, ss_list_price#888 AS list_price#747] "
          },
          "22" : {
            "sign" : 406087876,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 17256,
            "rowCount" : 1438,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#962] "
          },
          "26" : {
            "sign" : 1503367439,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 1945876940,
            "rowCount" : 69495605,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ws_sold_date_sk#1023 = d_date_sk#1024) "
          },
          "13" : {
            "sign" : -1972788865,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#877, ss_item_sk#878, ss_customer_sk#879, ss_cdemo_sk#880, ss_hdemo_sk#881, ss_addr_sk#882, ss_store_sk#883, ss_promo_sk#884, ss_ticket_number#885L, ss_quantity#886, ss_wholesale_cost#887, ss_list_price#888, ss_sales_price#889, ss_ext_discount_amt#890, ss_ext_sales_price#891, ss_ext_wholesale_cost#892, ss_ext_list_price#893, ss_ext_tax#894, ss_coupon_amt#895, ss_net_paid#896, ss_net_paid_inc_tax#897, ss_net_profit#898, ss_sold_date_sk#899], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "24" : {
            "sign" : -169490734,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#962, d_date_id#963, d_date#964, d_month_seq#965, d_week_seq#966, d_quarter_seq#967, d_year#968, d_dow#969, d_moy#970, d_dom#971, d_qoy#972, d_fy_year#973, d_fy_quarter_seq#974, d_fy_week_seq#975, d_day_name#976, d_quarter_name#977, d_holiday#978, d_weekend#979, d_following_holiday#980, d_first_dom#981, d_last_dom#982, d_same_day_ly#983, d_same_day_lq#984, d_current_day#985, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "16" : {
            "sign" : -820074406,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#900, d_date_id#901, d_date#902, d_month_seq#903, d_week_seq#904, d_quarter_seq#905, d_year#906, d_dow#907, d_moy#908, d_dom#909, d_qoy#910, d_fy_year#911, d_fy_quarter_seq#912, d_fy_week_seq#913, d_day_name#914, d_quarter_name#915, d_holiday#916, d_weekend#917, d_following_holiday#918, d_first_dom#919, d_last_dom#920, d_same_day_ly#921, d_same_day_lq#922, d_current_day#923, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "5" : {
            "sign" : -1109463710,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 383488,
            "rowCount" : 5992,
            "isRuntime" : true,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(sales#737) AND (cast(sales#737 as decimal(32,6)) > cast(scalar-subquery#741 [] as decimal(32,6)))) "
          },
          "10" : {
            "sign" : -1804794945,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 7435136380,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#899 = d_date_sk#900) "
          },
          "21" : {
            "sign" : -70077436,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 29800787536,
            "rowCount" : 143273017,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [cs_sold_time_sk#928, cs_ship_date_sk#929, cs_bill_customer_sk#930, cs_bill_cdemo_sk#931, cs_bill_hdemo_sk#932, cs_bill_addr_sk#933, cs_ship_customer_sk#934, cs_ship_cdemo_sk#935, cs_ship_hdemo_sk#936, cs_ship_addr_sk#937, cs_call_center_sk#938, cs_catalog_page_sk#939, cs_ship_mode_sk#940, cs_warehouse_sk#941, cs_item_sk#942, cs_promo_sk#943, cs_order_number#944L, cs_quantity#945, cs_wholesale_cost#946, cs_list_price#947, cs_sales_price#948, cs_ext_discount_amt#949, cs_ext_sales_price#950, cs_ext_wholesale_cost#951, ... 10 more fields], `spark_catalog`.`tpcds_100`.`catalog_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "32" : {
            "sign" : -502763688,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#1024, d_date_id#1025, d_date#1026, d_month_seq#1027, d_week_seq#1028, d_quarter_seq#1029, d_year#1030, d_dow#1031, d_moy#1032, d_dom#1033, d_qoy#1034, d_fy_year#1035, d_fy_quarter_seq#1036, d_fy_week_seq#1037, d_day_name#1038, d_quarter_name#1039, d_holiday#1040, d_weekend#1041, d_following_holiday#1042, d_first_dom#1043, d_last_dom#1044, d_same_day_ly#1045, d_same_day_lq#1046, d_current_day#1047, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "6" : {
            "sign" : -303166545,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 431424,
            "rowCount" : 5992,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [i_brand_id#1155, i_class_id#1157, i_category_id#1159], [store AS channel#736, i_brand_id#1155, i_class_id#1157, i_category_id#1159, sum((cast(ss_quantity#1134 as decimal(10,0)) * ss_list_price#1136)) AS sales#737, count(1) AS number_sales#738L], HashAggregate(keys=[i_brand_id#1155, i_class_id#1157, i_category_id#1159], functions=[sum((cast(ss_quantity#1134 as decimal(10,0)) * ss_list_price#1136)), count(1)]) "
          },
          "1" : {
            "sign" : -471306006,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
            "sizeInBytes" : 615498240,
            "rowCount" : 5129152,
            "isRuntime" : false,
            "predicate" : " (unknown) LocalLimit Arguments: 100 "
          },
          "17" : {
            "sign" : 825651901,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 2770325240,
            "rowCount" : 138516262,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_quantity#945 AS quantity#748, cs_list_price#947 AS list_price#749] "
          },
          "25" : {
            "sign" : 17831375,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 1389912100,
            "rowCount" : 69495605,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_quantity#1007 AS quantity#750, ws_list_price#1009 AS list_price#751] "
          },
          "14" : {
            "sign" : 2019201408,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 17256,
            "rowCount" : 1438,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#900] "
          },
          "31" : {
            "sign" : -626435234,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 353748,
            "rowCount" : 1438,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(d_year#1030) AND ((d_year#1030 >= 1998) AND (d_year#1030 <= 2000))) AND isnotnull(d_date_sk#1024)) "
          },
          "0" : {
            "sign" : -158106733,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
            "sizeInBytes" : 12000,
            "rowCount" : 100,
            "isRuntime" : false,
            "predicate" : " (unknown) GlobalLimit Arguments: 100 "
          },
          "20" : {
            "sign" : 1500374164,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 29800787536,
            "rowCount" : 143273017,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(cs_sold_date_sk#961) AND dynamicpruning#1289 [cs_sold_date_sk#961]) "
          },
          "27" : {
            "sign" : 49678577,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 1727606976,
            "rowCount" : 71983624,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_quantity#1007, ws_list_price#1009, ws_sold_date_sk#1023] "
          },
          "2" : {
            "sign" : 1739259005,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 615498240,
            "rowCount" : 5129152,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [i_brand_id#1082 ASC NULLS FIRST, i_class_id#1084 ASC NULLS FIRST, i_category_id#1086 ASC NULLS FIRST], true "
          },
          "18" : {
            "sign" : 824386657,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 3878455336,
            "rowCount" : 138516262,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cs_sold_date_sk#961 = d_date_sk#962) "
          },
          "30" : {
            "sign" : -1100969675,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 17256,
            "rowCount" : 1438,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#1024] "
          },
          "7" : {
            "sign" : -1809172647,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 24,
            "rowCount" : 1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [avg((cast(quantity#746 as decimal(10,0)) * list_price#747)) AS average_sales#752] "
          },
          "29" : {
            "sign" : 1698660872,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 14972593792,
            "rowCount" : 71983624,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ws_sold_time_sk#990, ws_ship_date_sk#991, ws_item_sk#992, ws_bill_customer_sk#993, ws_bill_cdemo_sk#994, ws_bill_hdemo_sk#995, ws_bill_addr_sk#996, ws_ship_customer_sk#997, ws_ship_cdemo_sk#998, ws_ship_hdemo_sk#999, ws_ship_addr_sk#1000, ws_web_page_sk#1001, ws_web_site_sk#1002, ws_ship_mode_sk#1003, ws_warehouse_sk#1004, ws_promo_sk#1005, ws_order_number#1006L, ws_quantity#1007, ws_wholesale_cost#1008, ws_list_price#1009, ws_sales_price#1010, ws_ext_discount_amt#1011, ws_ext_sales_price#1012, ws_ext_wholesale_cost#1013, ... 10 more fields], `spark_catalog`.`tpcds_100`.`web_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "3" : {
            "sign" : -702797607,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 615498240,
            "rowCount" : 5129152,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (((i_brand_id#1082 = i_brand_id#1155) AND (i_class_id#1084 = i_class_id#1157)) AND (i_category_id#1086 = i_category_id#1159)) "
          },
          "28" : {
            "sign" : -1902449141,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 14972593792,
            "rowCount" : 71983624,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(ws_sold_date_sk#1023) AND dynamicpruning#1290 [ws_sold_date_sk#1023]) "
          }
        },
        "links" : [ {
          "fromId" : 4,
          "fromName" : "LogicalQueryStage",
          "toId" : 3,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "LogicalQueryStage",
          "toId" : 5,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 13,
          "fromName" : "LogicalRelation",
          "toId" : 12,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 16,
          "fromName" : "LogicalRelation",
          "toId" : 15,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 15,
          "fromName" : "Filter",
          "toId" : 14,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 14,
          "fromName" : "Project",
          "toId" : 12,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 12,
          "fromName" : "Filter",
          "toId" : 11,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "Project",
          "toId" : 10,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 14,
          "fromName" : "Project",
          "toId" : 10,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "Join",
          "toId" : 9,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "Project",
          "toId" : 8,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 21,
          "fromName" : "LogicalRelation",
          "toId" : 20,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 24,
          "fromName" : "LogicalRelation",
          "toId" : 23,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 23,
          "fromName" : "Filter",
          "toId" : 22,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 22,
          "fromName" : "Project",
          "toId" : 20,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 20,
          "fromName" : "Filter",
          "toId" : 19,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 19,
          "fromName" : "Project",
          "toId" : 18,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 22,
          "fromName" : "Project",
          "toId" : 18,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 18,
          "fromName" : "Join",
          "toId" : 17,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 17,
          "fromName" : "Project",
          "toId" : 8,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 29,
          "fromName" : "LogicalRelation",
          "toId" : 28,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 32,
          "fromName" : "LogicalRelation",
          "toId" : 31,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 31,
          "fromName" : "Filter",
          "toId" : 30,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 30,
          "fromName" : "Project",
          "toId" : 28,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 28,
          "fromName" : "Filter",
          "toId" : 27,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 27,
          "fromName" : "Project",
          "toId" : 26,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 30,
          "fromName" : "Project",
          "toId" : 26,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 26,
          "fromName" : "Join",
          "toId" : 25,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 25,
          "fromName" : "Project",
          "toId" : 8,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "Union",
          "toId" : 7,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Aggregate",
          "toId" : 5,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 5,
          "fromName" : "Filter",
          "toId" : 3,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Join",
          "toId" : 2,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "LocalLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "LocalLimit",
          "toId" : 0,
          "toName" : "GlobalLimit",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [i_brand_id#1082 ASC NULLS FIRST, i_class_id#1084 ASC NULLS FIRST, i_category_id#1086 ASC NULLS FIRST], true\n      +- Join Inner, (((i_brand_id#1082 = i_brand_id#1155) AND (i_class_id#1084 = i_class_id#1157)) AND (i_category_id#1086 = i_category_id#1159))\n         :- LogicalQueryStage Filter (isnotnull(sales#731) AND (cast(sales#731 as decimal(32,6)) > cast(scalar-subquery#735 [] as decimal(32,6)))), BroadcastQueryStage 101\n         +- Filter (isnotnull(sales#737) AND (cast(sales#737 as decimal(32,6)) > cast(scalar-subquery#741 [] as decimal(32,6))))\n            :  +- Aggregate [avg((cast(quantity#746 as decimal(10,0)) * list_price#747)) AS average_sales#752]\n            :     +- Union false, false\n            :        :- Project [ss_quantity#886 AS quantity#746, ss_list_price#888 AS list_price#747]\n            :        :  +- Join Inner, (ss_sold_date_sk#899 = d_date_sk#900)\n            :        :     :- Project [ss_quantity#886, ss_list_price#888, ss_sold_date_sk#899]\n            :        :     :  +- Filter (isnotnull(ss_sold_date_sk#899) AND dynamicpruning#1288 [ss_sold_date_sk#899])\n            :        :     :     :  +- Project [d_date_sk#900]\n            :        :     :     :     +- Filter ((isnotnull(d_year#906) AND ((d_year#906 >= 1998) AND (d_year#906 <= 2000))) AND isnotnull(d_date_sk#900))\n            :        :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#900,d_date_id#901,d_date#902,d_month_seq#903,d_week_seq#904,d_quarter_seq#905,d_year#906,d_dow#907,d_moy#908,d_dom#909,d_qoy#910,d_fy_year#911,d_fy_quarter_seq#912,d_fy_week_seq#913,d_day_name#914,d_quarter_name#915,d_holiday#916,d_weekend#917,d_following_holiday#918,d_first_dom#919,d_last_dom#920,d_same_day_ly#921,d_same_day_lq#922,d_current_day#923,... 4 more fields] parquet\n            :        :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#877,ss_item_sk#878,ss_customer_sk#879,ss_cdemo_sk#880,ss_hdemo_sk#881,ss_addr_sk#882,ss_store_sk#883,ss_promo_sk#884,ss_ticket_number#885L,ss_quantity#886,ss_wholesale_cost#887,ss_list_price#888,ss_sales_price#889,ss_ext_discount_amt#890,ss_ext_sales_price#891,ss_ext_wholesale_cost#892,ss_ext_list_price#893,ss_ext_tax#894,ss_coupon_amt#895,ss_net_paid#896,ss_net_paid_inc_tax#897,ss_net_profit#898,ss_sold_date_sk#899] parquet\n            :        :     +- Project [d_date_sk#900]\n            :        :        +- Filter ((isnotnull(d_year#906) AND ((d_year#906 >= 1998) AND (d_year#906 <= 2000))) AND isnotnull(d_date_sk#900))\n            :        :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#900,d_date_id#901,d_date#902,d_month_seq#903,d_week_seq#904,d_quarter_seq#905,d_year#906,d_dow#907,d_moy#908,d_dom#909,d_qoy#910,d_fy_year#911,d_fy_quarter_seq#912,d_fy_week_seq#913,d_day_name#914,d_quarter_name#915,d_holiday#916,d_weekend#917,d_following_holiday#918,d_first_dom#919,d_last_dom#920,d_same_day_ly#921,d_same_day_lq#922,d_current_day#923,... 4 more fields] parquet\n            :        :- Project [cs_quantity#945 AS quantity#748, cs_list_price#947 AS list_price#749]\n            :        :  +- Join Inner, (cs_sold_date_sk#961 = d_date_sk#962)\n            :        :     :- Project [cs_quantity#945, cs_list_price#947, cs_sold_date_sk#961]\n            :        :     :  +- Filter (isnotnull(cs_sold_date_sk#961) AND dynamicpruning#1289 [cs_sold_date_sk#961])\n            :        :     :     :  +- Project [d_date_sk#962]\n            :        :     :     :     +- Filter ((isnotnull(d_year#968) AND ((d_year#968 >= 1998) AND (d_year#968 <= 2000))) AND isnotnull(d_date_sk#962))\n            :        :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#962,d_date_id#963,d_date#964,d_month_seq#965,d_week_seq#966,d_quarter_seq#967,d_year#968,d_dow#969,d_moy#970,d_dom#971,d_qoy#972,d_fy_year#973,d_fy_quarter_seq#974,d_fy_week_seq#975,d_day_name#976,d_quarter_name#977,d_holiday#978,d_weekend#979,d_following_holiday#980,d_first_dom#981,d_last_dom#982,d_same_day_ly#983,d_same_day_lq#984,d_current_day#985,... 4 more fields] parquet\n            :        :     :     +- Relation spark_catalog.tpcds_100.catalog_sales[cs_sold_time_sk#928,cs_ship_date_sk#929,cs_bill_customer_sk#930,cs_bill_cdemo_sk#931,cs_bill_hdemo_sk#932,cs_bill_addr_sk#933,cs_ship_customer_sk#934,cs_ship_cdemo_sk#935,cs_ship_hdemo_sk#936,cs_ship_addr_sk#937,cs_call_center_sk#938,cs_catalog_page_sk#939,cs_ship_mode_sk#940,cs_warehouse_sk#941,cs_item_sk#942,cs_promo_sk#943,cs_order_number#944L,cs_quantity#945,cs_wholesale_cost#946,cs_list_price#947,cs_sales_price#948,cs_ext_discount_amt#949,cs_ext_sales_price#950,cs_ext_wholesale_cost#951,... 10 more fields] parquet\n            :        :     +- Project [d_date_sk#962]\n            :        :        +- Filter ((isnotnull(d_year#968) AND ((d_year#968 >= 1998) AND (d_year#968 <= 2000))) AND isnotnull(d_date_sk#962))\n            :        :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#962,d_date_id#963,d_date#964,d_month_seq#965,d_week_seq#966,d_quarter_seq#967,d_year#968,d_dow#969,d_moy#970,d_dom#971,d_qoy#972,d_fy_year#973,d_fy_quarter_seq#974,d_fy_week_seq#975,d_day_name#976,d_quarter_name#977,d_holiday#978,d_weekend#979,d_following_holiday#980,d_first_dom#981,d_last_dom#982,d_same_day_ly#983,d_same_day_lq#984,d_current_day#985,... 4 more fields] parquet\n            :        +- Project [ws_quantity#1007 AS quantity#750, ws_list_price#1009 AS list_price#751]\n            :           +- Join Inner, (ws_sold_date_sk#1023 = d_date_sk#1024)\n            :              :- Project [ws_quantity#1007, ws_list_price#1009, ws_sold_date_sk#1023]\n            :              :  +- Filter (isnotnull(ws_sold_date_sk#1023) AND dynamicpruning#1290 [ws_sold_date_sk#1023])\n            :              :     :  +- Project [d_date_sk#1024]\n            :              :     :     +- Filter ((isnotnull(d_year#1030) AND ((d_year#1030 >= 1998) AND (d_year#1030 <= 2000))) AND isnotnull(d_date_sk#1024))\n            :              :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#1024,d_date_id#1025,d_date#1026,d_month_seq#1027,d_week_seq#1028,d_quarter_seq#1029,d_year#1030,d_dow#1031,d_moy#1032,d_dom#1033,d_qoy#1034,d_fy_year#1035,d_fy_quarter_seq#1036,d_fy_week_seq#1037,d_day_name#1038,d_quarter_name#1039,d_holiday#1040,d_weekend#1041,d_following_holiday#1042,d_first_dom#1043,d_last_dom#1044,d_same_day_ly#1045,d_same_day_lq#1046,d_current_day#1047,... 4 more fields] parquet\n            :              :     +- Relation spark_catalog.tpcds_100.web_sales[ws_sold_time_sk#990,ws_ship_date_sk#991,ws_item_sk#992,ws_bill_customer_sk#993,ws_bill_cdemo_sk#994,ws_bill_hdemo_sk#995,ws_bill_addr_sk#996,ws_ship_customer_sk#997,ws_ship_cdemo_sk#998,ws_ship_hdemo_sk#999,ws_ship_addr_sk#1000,ws_web_page_sk#1001,ws_web_site_sk#1002,ws_ship_mode_sk#1003,ws_warehouse_sk#1004,ws_promo_sk#1005,ws_order_number#1006L,ws_quantity#1007,ws_wholesale_cost#1008,ws_list_price#1009,ws_sales_price#1010,ws_ext_discount_amt#1011,ws_ext_sales_price#1012,ws_ext_wholesale_cost#1013,... 10 more fields] parquet\n            :              +- Project [d_date_sk#1024]\n            :                 +- Filter ((isnotnull(d_year#1030) AND ((d_year#1030 >= 1998) AND (d_year#1030 <= 2000))) AND isnotnull(d_date_sk#1024))\n            :                    +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#1024,d_date_id#1025,d_date#1026,d_month_seq#1027,d_week_seq#1028,d_quarter_seq#1029,d_year#1030,d_dow#1031,d_moy#1032,d_dom#1033,d_qoy#1034,d_fy_year#1035,d_fy_quarter_seq#1036,d_fy_week_seq#1037,d_day_name#1038,d_quarter_name#1039,d_holiday#1040,d_weekend#1041,d_following_holiday#1042,d_first_dom#1043,d_last_dom#1044,d_same_day_ly#1045,d_same_day_lq#1046,d_current_day#1047,... 4 more fields] parquet\n            +- LogicalQueryStage Aggregate [i_brand_id#1155, i_class_id#1157, i_category_id#1159], [store AS channel#736, i_brand_id#1155, i_class_id#1157, i_category_id#1159, sum((cast(ss_quantity#1134 as decimal(10,0)) * ss_list_price#1136)) AS sales#737, count(1) AS number_sales#738L], HashAggregate(keys=[i_brand_id#1155, i_class_id#1157, i_category_id#1159], functions=[sum((cast(ss_quantity#1134 as decimal(10,0)) * ss_list_price#1136)), count(1)])\n"
      },
      "IM" : {
        "inputSizeInBytes" : 34018624,
        "inputRowCount" : 6848
      },
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "StartTimeInMs" : 1702226710977,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 521,
        "IOBytes" : {
          "Total" : 292905,
          "Details" : {
            "IR" : 0,
            "IW" : 0,
            "SR" : 292905,
            "SW" : 0
          }
        }
      }
    },
    "4" : {
      "LQP" : {
        "operators" : {
          "45" : {
            "sign" : 579430964,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 86282466,
            "rowCount" : 202541,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(i_item_sk#1075) AND isnotnull(i_brand_id#1082)) AND isnotnull(i_class_id#1084)) AND isnotnull(i_category_id#1086)) "
          },
          "98" : {
            "sign" : 683629544,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#1170, d_date_id#1171, d_date#1172, d_month_seq#1173, d_week_seq#1174, d_quarter_seq#1175, d_year#1176, d_dow#1177, d_moy#1178, d_dom#1179, d_qoy#1180, d_fy_year#1181, d_fy_quarter_seq#1182, d_fy_week_seq#1183, d_day_name#1184, d_quarter_name#1185, d_holiday#1186, d_weekend#1187, d_following_holiday#1188, d_first_dom#1189, d_last_dom#1190, d_same_day_ly#1191, d_same_day_lq#1192, d_current_day#1193, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "113" : {
            "sign" : -1270097614,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 4875456,
            "rowCount" : 203144,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (((i_brand_id#762 <=> i_brand_id#784) AND (i_class_id#764 <=> i_class_id#786)) AND (i_category_id#766 <=> i_category_id#788)) "
          },
          "34" : {
            "sign" : -117080718,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 17256,
            "rowCount" : 1438,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#70] "
          },
          "67" : {
            "sign" : 2019201408,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 17256,
            "rowCount" : 1438,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#900] "
          },
          "120" : {
            "sign" : -1448453368,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 86282466,
            "rowCount" : 202541,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(i_item_sk#1148) AND isnotnull(i_brand_id#1155)) AND isnotnull(i_class_id#1157)) AND isnotnull(i_category_id#1159)) "
          },
          "93" : {
            "sign" : -303911461,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 7701269884,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#1126, ss_quantity#1134, ss_list_price#1136, ss_sold_date_sk#1147] "
          },
          "12" : {
            "sign" : 571393713,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(ss_item_sk#1053) AND isnotnull(ss_sold_date_sk#1074)) AND dynamicpruning#1303 [ss_sold_date_sk#1074]) "
          },
          "66" : {
            "sign" : -1972788865,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#877, ss_item_sk#878, ss_customer_sk#879, ss_cdemo_sk#880, ss_hdemo_sk#881, ss_addr_sk#882, ss_store_sk#883, ss_promo_sk#884, ss_ticket_number#885L, ss_quantity#886, ss_wholesale_cost#887, ss_list_price#888, ss_sales_price#889, ss_ext_discount_amt#890, ss_ext_sales_price#891, ss_ext_wholesale_cost#892, ss_ext_list_price#893, ss_ext_tax#894, ss_coupon_amt#895, ss_net_paid#896, ss_net_paid_inc_tax#897, ss_net_profit#898, ss_sold_date_sk#899], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "89" : {
            "sign" : -309843437,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 11490316840,
            "rowCount" : 287257921,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_item_sk#1126 = i_item_sk#1148) "
          },
          "51" : {
            "sign" : -1922967392,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 1224753985121117440,
            "rowCount" : 61237699256055872,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_brand_id#762 AS brand_id#742, i_class_id#764 AS class_id#743, i_category_id#766 AS category_id#744] "
          },
          "124" : {
            "sign" : -14482712,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 1224753985121117440,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (((brand_id#742 <=> i_brand_id#834) AND (class_id#743 <=> i_class_id#836)) AND (category_id#744 <=> i_category_id#838)) "
          },
          "84" : {
            "sign" : -626435234,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 353748,
            "rowCount" : 1438,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(d_year#1030) AND ((d_year#1030 >= 1998) AND (d_year#1030 <= 2000))) AND isnotnull(d_date_sk#1024)) "
          },
          "8" : {
            "sign" : 139041030,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 46207619304,
            "rowCount" : 1925317471,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#1053, ss_quantity#1061, ss_list_price#1063] "
          },
          "73" : {
            "sign" : 1500374164,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 29800787536,
            "rowCount" : 143273017,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(cs_sold_date_sk#961) AND dynamicpruning#1289 [cs_sold_date_sk#961]) "
          },
          "78" : {
            "sign" : 17831375,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 1389912100,
            "rowCount" : 69495605,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_quantity#1007 AS quantity#750, ws_list_price#1009 AS list_price#751] "
          },
          "19" : {
            "sign" : -1755539215,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#1209, d_date_id#1210, d_date#1211, d_month_seq#1212, d_week_seq#1213, d_quarter_seq#1214, d_year#1215, d_dow#1216, d_moy#1217, d_dom#1218, d_qoy#1219, d_fy_year#1220, d_fy_quarter_seq#1221, d_fy_week_seq#1222, d_day_name#1223, d_quarter_name#1224, d_holiday#1225, d_weekend#1226, d_following_holiday#1227, d_first_dom#1228, d_last_dom#1229, d_same_day_ly#1230, d_same_day_lq#1231, d_current_day#1232, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "100" : {
            "sign" : 1734827371,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 492,
            "rowCount" : 2,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(d_year#1243) AND isnotnull(d_moy#1245)) AND isnotnull(d_dom#1246)) AND (((d_year#1243 = 1998) AND (d_moy#1245 = 12)) AND (d_dom#1246 = 16))) "
          },
          "23" : {
            "sign" : -1756391561,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 86282466,
            "rowCount" : 202541,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(i_brand_id#32) AND isnotnull(i_class_id#34)) AND isnotnull(i_category_id#36)) "
          },
          "62" : {
            "sign" : 869525063,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 5310811700,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_quantity#886 AS quantity#746, ss_list_price#888 AS list_price#747] "
          },
          "128" : {
            "sign" : 899852841,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 3617396482656,
            "rowCount" : 301449706888,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#48] "
          },
          "4" : {
            "sign" : 1357304059,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 10408960,
            "rowCount" : 136960,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(sales#731) AND (cast(sales#731 as decimal(32,6)) > cast(scalar-subquery#735 [] as decimal(32,6)))) "
          },
          "121" : {
            "sign" : -1752719423,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 86904000,
            "rowCount" : 204000,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [i_item_sk#1148, i_item_id#1149, i_rec_start_date#1150, i_rec_end_date#1151, i_item_desc#1152, i_current_price#1153, i_wholesale_cost#1154, i_brand_id#1155, i_brand#1156, i_class_id#1157, i_class#1158, i_category_id#1159, i_category#1160, i_manufact_id#1161, i_manufact#1162, i_size#1163, i_formulation#1164, i_color#1165, i_units#1166, i_container#1167, i_manager_id#1168, i_product_name#1169], `spark_catalog`.`tpcds_100`.`item`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "88" : {
            "sign" : -1250291275,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 9192253472,
            "rowCount" : 287257921,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_quantity#1134, ss_list_price#1136, i_brand_id#1155, i_class_id#1157, i_category_id#1159] "
          },
          "77" : {
            "sign" : -169490734,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#962, d_date_id#963, d_date#964, d_month_seq#965, d_week_seq#966, d_quarter_seq#967, d_year#968, d_dow#969, d_moy#970, d_dom#971, d_qoy#972, d_fy_year#973, d_fy_quarter_seq#974, d_fy_week_seq#975, d_day_name#976, d_quarter_name#977, d_holiday#978, d_weekend#979, d_following_holiday#980, d_first_dom#981, d_last_dom#982, d_same_day_ly#983, d_same_day_lq#984, d_current_day#985, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "40" : {
            "sign" : 366726337,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 2877489060,
            "rowCount" : 143874453,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_brand_id#784, i_class_id#786, i_category_id#788], ShuffleQueryStage 47 "
          },
          "110" : {
            "sign" : 2101479604,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 4400725648,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#48, ss_sold_date_sk#69] "
          },
          "15" : {
            "sign" : 1866012666,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(d_week_seq#1101) AND (d_week_seq#1101 = scalar-subquery#734 [])) AND isnotnull(d_date_sk#1097)) "
          },
          "11" : {
            "sign" : 1222696026,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 7701269884,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#1053, ss_quantity#1061, ss_list_price#1063, ss_sold_date_sk#1074] "
          },
          "104" : {
            "sign" : -876321123,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 1224753985121117440,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (((brand_id#742 <=> i_brand_id#834) AND (class_id#743 <=> i_class_id#836)) AND (category_id#744 <=> i_category_id#838)) "
          },
          "90" : {
            "sign" : -2676572,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 46207619304,
            "rowCount" : 1925317471,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#1126, ss_quantity#1134, ss_list_price#1136] "
          },
          "9" : {
            "sign" : -1944592689,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 61610159072,
            "rowCount" : 1925317471,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#1074 = d_date_sk#1097) "
          },
          "132" : {
            "sign" : 1549879919,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 8125760,
            "rowCount" : 203144,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_item_sk#755, i_brand_id#762, i_class_id#764, i_category_id#766], ShuffleQueryStage 38 "
          },
          "44" : {
            "sign" : 1540331732,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 4860984,
            "rowCount" : 202541,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_item_sk#1075, i_brand_id#1082, i_class_id#1084, i_category_id#1086] "
          },
          "33" : {
            "sign" : 1104597854,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#47, ss_item_sk#48, ss_customer_sk#49, ss_cdemo_sk#50, ss_hdemo_sk#51, ss_addr_sk#52, ss_store_sk#53, ss_promo_sk#54, ss_ticket_number#55L, ss_quantity#56, ss_wholesale_cost#57, ss_list_price#58, ss_sales_price#59, ss_ext_discount_amt#60, ss_ext_sales_price#61, ss_ext_wholesale_cost#62, ss_ext_list_price#63, ss_ext_tax#64, ss_coupon_amt#65, ss_net_paid#66, ss_net_paid_inc_tax#67, ss_net_profit#68, ss_sold_date_sk#69], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "117" : {
            "sign" : -1902204624,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1048632,
            "rowCount" : 7,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#1170], BroadcastQueryStage 34 "
          },
          "22" : {
            "sign" : 2089743597,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 4860984,
            "rowCount" : 202541,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_item_sk#25, i_brand_id#32, i_class_id#34, i_category_id#36] "
          },
          "56" : {
            "sign" : 1070585237,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 4875456,
            "rowCount" : 203144,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (((i_brand_id#762 <=> i_brand_id#784) AND (i_class_id#764 <=> i_class_id#786)) AND (i_category_id#766 <=> i_category_id#788)) "
          },
          "55" : {
            "sign" : -1598388943,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1057344,
            "rowCount" : 1096,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#70], BroadcastQueryStage 11 "
          },
          "26" : {
            "sign" : -1989347848,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 1224753985121117440,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [brand_id#742, class_id#743, category_id#744], [brand_id#742, class_id#743, category_id#744] "
          },
          "134" : {
            "sign" : -365669692,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1438338100,
            "rowCount" : 71916905,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_brand_id#834, i_class_id#836, i_category_id#838], ShuffleQueryStage 60 "
          },
          "50" : {
            "sign" : -1608368025,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 1224753985121117440,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [brand_id#742, class_id#743, category_id#744], [brand_id#742, class_id#743, category_id#744] "
          },
          "123" : {
            "sign" : -1382179355,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 1224753985125978424,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (((i_brand_id#32 = brand_id#742) AND (i_class_id#34 = class_id#743)) AND (i_category_id#36 = category_id#744)) "
          },
          "37" : {
            "sign" : -1159939661,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1057344,
            "rowCount" : 1096,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#70], BroadcastQueryStage 0 "
          },
          "68" : {
            "sign" : -2071970095,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 353748,
            "rowCount" : 1438,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(d_year#906) AND ((d_year#906 >= 1998) AND (d_year#906 <= 2000))) AND isnotnull(d_date_sk#900)) "
          },
          "61" : {
            "sign" : -1298322270,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Union",
            "sizeInBytes" : 9471049040,
            "rowCount" : 473552452,
            "isRuntime" : false,
            "predicate" : " (unknown) Union Arguments: false, false "
          },
          "107" : {
            "sign" : -105466558,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 1714655579169564416,
            "rowCount" : 61237699256055872,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_item_sk#48 = i_item_sk#755) "
          },
          "13" : {
            "sign" : 913239237,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#1052, ss_item_sk#1053, ss_customer_sk#1054, ss_cdemo_sk#1055, ss_hdemo_sk#1056, ss_addr_sk#1057, ss_store_sk#1058, ss_promo_sk#1059, ss_ticket_number#1060L, ss_quantity#1061, ss_wholesale_cost#1062, ss_list_price#1063, ss_sales_price#1064, ss_ext_discount_amt#1065, ss_ext_sales_price#1066, ss_ext_wholesale_cost#1067, ss_ext_list_price#1068, ss_ext_tax#1069, ss_coupon_amt#1070, ss_net_paid#1071, ss_net_paid_inc_tax#1072, ss_net_profit#1073, ss_sold_date_sk#1074], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "46" : {
            "sign" : 73332589,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 86904000,
            "rowCount" : 204000,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [i_item_sk#1075, i_item_id#1076, i_rec_start_date#1077, i_rec_end_date#1078, i_item_desc#1079, i_current_price#1080, i_wholesale_cost#1081, i_brand_id#1082, i_brand#1083, i_class_id#1084, i_class#1085, i_category_id#1086, i_category#1087, i_manufact_id#1088, i_manufact#1089, i_size#1090, i_formulation#1091, i_color#1092, i_units#1093, i_container#1094, i_manager_id#1095, i_product_name#1096], `spark_catalog`.`tpcds_100`.`item`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "99" : {
            "sign" : -79282860,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 24,
            "rowCount" : 2,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_week_seq#1241] "
          },
          "24" : {
            "sign" : 2096275601,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 86904000,
            "rowCount" : 204000,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [i_item_sk#25, i_item_id#26, i_rec_start_date#27, i_rec_end_date#28, i_item_desc#29, i_current_price#30, i_wholesale_cost#31, i_brand_id#32, i_brand#33, i_class_id#34, i_class#35, i_category_id#36, i_category#37, i_manufact_id#38, i_manufact#39, i_size#40, i_formulation#41, i_color#42, i_units#43, i_container#44, i_manager_id#45, i_product_name#46], `spark_catalog`.`tpcds_100`.`item`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "94" : {
            "sign" : -604473204,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(ss_item_sk#1126) AND isnotnull(ss_sold_date_sk#1147)) AND dynamicpruning#1310 [ss_sold_date_sk#1147]) "
          },
          "83" : {
            "sign" : -1100969675,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 17256,
            "rowCount" : 1438,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#1024] "
          },
          "35" : {
            "sign" : 1340377833,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 353748,
            "rowCount" : 1438,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(d_year#76) AND ((d_year#76 >= 1998) AND (d_year#76 <= 2000))) AND isnotnull(d_date_sk#70)) "
          },
          "16" : {
            "sign" : 682718368,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#1097, d_date_id#1098, d_date#1099, d_month_seq#1100, d_week_seq#1101, d_quarter_seq#1102, d_year#1103, d_dow#1104, d_moy#1105, d_dom#1106, d_qoy#1107, d_fy_year#1108, d_fy_quarter_seq#1109, d_fy_week_seq#1110, d_day_name#1111, d_quarter_name#1112, d_holiday#1113, d_weekend#1114, d_following_holiday#1115, d_first_dom#1116, d_last_dom#1117, d_same_day_ly#1118, d_same_day_lq#1119, d_current_day#1120, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "79" : {
            "sign" : 1503367439,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 1945876940,
            "rowCount" : 69495605,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ws_sold_date_sk#1023 = d_date_sk#1024) "
          },
          "5" : {
            "sign" : -1173314487,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 10408960,
            "rowCount" : 136960,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [i_brand_id#1082, i_class_id#1084, i_category_id#1086], [store AS channel#730, i_brand_id#1082, i_class_id#1084, i_category_id#1086, sum((cast(ss_quantity#1061 as decimal(10,0)) * ss_list_price#1063)) AS sales#731, count(1) AS number_sales#732L] "
          },
          "103" : {
            "sign" : 1717410210,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 1224753985125978424,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (((i_brand_id#32 = brand_id#742) AND (i_class_id#34 = class_id#743)) AND (i_category_id#36 = category_id#744)) "
          },
          "112" : {
            "sign" : -1598387920,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1057344,
            "rowCount" : 1096,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#70], BroadcastQueryStage 23 "
          },
          "72" : {
            "sign" : 1942236716,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 3438552408,
            "rowCount" : 143273017,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_quantity#945, cs_list_price#947, cs_sold_date_sk#961] "
          },
          "10" : {
            "sign" : 1073081792,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 7701269884,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (ss_item_sk#1053 = ss_item_sk#745) "
          },
          "59" : {
            "sign" : -365670591,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1438338100,
            "rowCount" : 71916905,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_brand_id#834, i_class_id#836, i_category_id#838], ShuffleQueryStage 52 "
          },
          "87" : {
            "sign" : 778880288,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 10408960,
            "rowCount" : 136960,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [i_brand_id#1155, i_class_id#1157, i_category_id#1159], [store AS channel#736, i_brand_id#1155, i_class_id#1157, i_category_id#1159, sum((cast(ss_quantity#1134 as decimal(10,0)) * ss_list_price#1136)) AS sales#737, count(1) AS number_sales#738L] "
          },
          "48" : {
            "sign" : 1987472580,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 1224753985125978424,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (((i_brand_id#32 = brand_id#742) AND (i_class_id#34 = class_id#743)) AND (i_category_id#36 = category_id#744)) "
          },
          "21" : {
            "sign" : -1061891914,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 1224753985125978424,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (((i_brand_id#32 = brand_id#742) AND (i_class_id#34 = class_id#743)) AND (i_category_id#36 = category_id#744)) "
          },
          "116" : {
            "sign" : -365670467,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1438338100,
            "rowCount" : 71916905,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_brand_id#834, i_class_id#836, i_category_id#838], ShuffleQueryStage 56 "
          },
          "76" : {
            "sign" : -1695423935,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 353748,
            "rowCount" : 1438,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(d_year#968) AND ((d_year#968 >= 1998) AND (d_year#968 <= 2000))) AND isnotnull(d_date_sk#962)) "
          },
          "54" : {
            "sign" : 174031885,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 6028994137760,
            "rowCount" : 301449706888,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#69 = d_date_sk#70) "
          },
          "43" : {
            "sign" : -917424425,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 4860984,
            "rowCount" : 202541,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (i_item_sk#1075 = ss_item_sk#745) "
          },
          "127" : {
            "sign" : -2083387522,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 1714655579169564416,
            "rowCount" : 61237699256055872,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_item_sk#48 = i_item_sk#755) "
          },
          "65" : {
            "sign" : 1377797290,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(ss_sold_date_sk#899) AND dynamicpruning#1288 [ss_sold_date_sk#899]) "
          },
          "71" : {
            "sign" : 824386657,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 3878455336,
            "rowCount" : 138516262,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cs_sold_date_sk#961 = d_date_sk#962) "
          },
          "57" : {
            "sign" : 1549877842,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 8125760,
            "rowCount" : 203144,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_item_sk#755, i_brand_id#762, i_class_id#764, i_category_id#766], ShuffleQueryStage 13 "
          },
          "108" : {
            "sign" : 899851787,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 3617396482656,
            "rowCount" : 301449706888,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#48] "
          },
          "32" : {
            "sign" : -1052942334,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(ss_item_sk#48) AND isnotnull(ss_sold_date_sk#69)) AND dynamicpruning#1291 [ss_sold_date_sk#69]) "
          },
          "80" : {
            "sign" : 49678577,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 1727606976,
            "rowCount" : 71983624,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_quantity#1007, ws_list_price#1009, ws_sold_date_sk#1023] "
          },
          "106" : {
            "sign" : -694393982,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 1224753985121117440,
            "rowCount" : 61237699256055872,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_brand_id#762 AS brand_id#742, i_class_id#764 AS class_id#743, i_category_id#766 AS category_id#744] "
          },
          "82" : {
            "sign" : 1698660872,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 14972593792,
            "rowCount" : 71983624,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ws_sold_time_sk#990, ws_ship_date_sk#991, ws_item_sk#992, ws_bill_customer_sk#993, ws_bill_cdemo_sk#994, ws_bill_hdemo_sk#995, ws_bill_addr_sk#996, ws_ship_customer_sk#997, ws_ship_cdemo_sk#998, ws_ship_hdemo_sk#999, ws_ship_addr_sk#1000, ws_web_page_sk#1001, ws_web_site_sk#1002, ws_ship_mode_sk#1003, ws_warehouse_sk#1004, ws_promo_sk#1005, ws_order_number#1006L, ws_quantity#1007, ws_wholesale_cost#1008, ws_list_price#1009, ws_sales_price#1010, ws_ext_discount_amt#1011, ws_ext_sales_price#1012, ws_ext_wholesale_cost#1013, ... 10 more fields], `spark_catalog`.`tpcds_100`.`web_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "49" : {
            "sign" : 967702723,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 1224753985121117440,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (((brand_id#742 <=> i_brand_id#834) AND (class_id#743 <=> i_class_id#836)) AND (category_id#744 <=> i_category_id#838)) "
          },
          "6" : {
            "sign" : -2124690956,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 9192253472,
            "rowCount" : 287257921,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_quantity#1061, ss_list_price#1063, i_brand_id#1082, i_class_id#1084, i_category_id#1086] "
          },
          "126" : {
            "sign" : 979536830,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 1224753985121117440,
            "rowCount" : 61237699256055872,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_brand_id#762 AS brand_id#742, i_class_id#764 AS class_id#743, i_category_id#766 AS category_id#744] "
          },
          "36" : {
            "sign" : -232749464,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#70, d_date_id#71, d_date#72, d_month_seq#73, d_week_seq#74, d_quarter_seq#75, d_year#76, d_dow#77, d_moy#78, d_dom#79, d_qoy#80, d_fy_year#81, d_fy_quarter_seq#82, d_fy_week_seq#83, d_day_name#84, d_quarter_name#85, d_holiday#86, d_weekend#87, d_following_holiday#88, d_first_dom#89, d_last_dom#90, d_same_day_ly#91, d_same_day_lq#92, d_current_day#93, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "1" : {
            "sign" : -393757989,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
            "sizeInBytes" : 19722240,
            "rowCount" : 136960,
            "isRuntime" : false,
            "predicate" : " (unknown) LocalLimit Arguments: 100 "
          },
          "39" : {
            "sign" : 1019827343,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 8125760,
            "rowCount" : 203144,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_item_sk#755, i_brand_id#762, i_class_id#764, i_category_id#766], ShuffleQueryStage 1 "
          },
          "17" : {
            "sign" : -2061501032,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 36,
            "rowCount" : 3,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_week_seq#1213] "
          },
          "25" : {
            "sign" : -929833631,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 1224753985121117440,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (((brand_id#742 <=> i_brand_id#834) AND (class_id#743 <=> i_class_id#836)) AND (category_id#744 <=> i_category_id#838)) "
          },
          "60" : {
            "sign" : -1809172647,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 24,
            "rowCount" : 1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [avg((cast(quantity#746 as decimal(10,0)) * list_price#747)) AS average_sales#752] "
          },
          "14" : {
            "sign" : 707519831,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 876588,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#1097] "
          },
          "133" : {
            "sign" : 366727329,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 2877489060,
            "rowCount" : 143874453,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_brand_id#784, i_class_id#786, i_category_id#788], ShuffleQueryStage 58 "
          },
          "47" : {
            "sign" : 23707703,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 408251328375326141,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_item_sk#25 AS ss_item_sk#745] "
          },
          "122" : {
            "sign" : -1413048228,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 408251328375326141,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_item_sk#25 AS ss_item_sk#745] "
          },
          "111" : {
            "sign" : -109048900,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(ss_item_sk#48) AND isnotnull(ss_sold_date_sk#69)) AND dynamicpruning#1297 [ss_sold_date_sk#69]) "
          },
          "102" : {
            "sign" : 1324241425,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 408251328375326141,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_item_sk#25 AS ss_item_sk#745] "
          },
          "31" : {
            "sign" : -948624390,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 4400725648,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#48, ss_sold_date_sk#69] "
          },
          "96" : {
            "sign" : 1096234976,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 876588,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#1170] "
          },
          "69" : {
            "sign" : -820074406,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#900, d_date_id#901, d_date#902, d_month_seq#903, d_week_seq#904, d_quarter_seq#905, d_year#906, d_dow#907, d_moy#908, d_dom#909, d_qoy#910, d_fy_year#911, d_fy_quarter_seq#912, d_fy_week_seq#913, d_day_name#914, d_quarter_name#915, d_holiday#916, d_weekend#917, d_following_holiday#918, d_first_dom#919, d_last_dom#920, d_same_day_ly#921, d_same_day_lq#922, d_current_day#923, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "95" : {
            "sign" : 1179432008,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#1125, ss_item_sk#1126, ss_customer_sk#1127, ss_cdemo_sk#1128, ss_hdemo_sk#1129, ss_addr_sk#1130, ss_store_sk#1131, ss_promo_sk#1132, ss_ticket_number#1133L, ss_quantity#1134, ss_wholesale_cost#1135, ss_list_price#1136, ss_sales_price#1137, ss_ext_discount_amt#1138, ss_ext_sales_price#1139, ss_ext_wholesale_cost#1140, ss_ext_list_price#1141, ss_ext_tax#1142, ss_coupon_amt#1143, ss_net_paid#1144, ss_net_paid_inc_tax#1145, ss_net_profit#1146, ss_sold_date_sk#1147], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "58" : {
            "sign" : 366727081,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 2877489060,
            "rowCount" : 143874453,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_brand_id#784, i_class_id#786, i_category_id#788], ShuffleQueryStage 50 "
          },
          "64" : {
            "sign" : 1776873494,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 6601088472,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_quantity#886, ss_list_price#888, ss_sold_date_sk#899] "
          },
          "53" : {
            "sign" : -1868509690,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 3617396482656,
            "rowCount" : 301449706888,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#48] "
          },
          "42" : {
            "sign" : -21562714,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1048632,
            "rowCount" : 7,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#1097], BroadcastQueryStage 9 "
          },
          "75" : {
            "sign" : 406087876,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 17256,
            "rowCount" : 1438,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#962] "
          },
          "115" : {
            "sign" : 366727205,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 2877489060,
            "rowCount" : 143874453,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_brand_id#784, i_class_id#786, i_category_id#788], ShuffleQueryStage 54 "
          },
          "109" : {
            "sign" : 1894574278,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 6028994137760,
            "rowCount" : 301449706888,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#69 = d_date_sk#70) "
          },
          "0" : {
            "sign" : -1382183986,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
            "sizeInBytes" : 12000,
            "rowCount" : 100,
            "isRuntime" : false,
            "predicate" : " (unknown) GlobalLimit Arguments: 100 "
          },
          "20" : {
            "sign" : 1675872213,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 408251328375326141,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_item_sk#25 AS ss_item_sk#745] "
          },
          "27" : {
            "sign" : 1543581019,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 1224753985121117440,
            "rowCount" : 61237699256055872,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_brand_id#762 AS brand_id#742, i_class_id#764 AS class_id#743, i_category_id#766 AS category_id#744] "
          },
          "70" : {
            "sign" : 825651901,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 2770325240,
            "rowCount" : 138516262,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_quantity#945 AS quantity#748, cs_list_price#947 AS list_price#749] "
          },
          "2" : {
            "sign" : 1709700516,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 19722240,
            "rowCount" : 136960,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [i_brand_id#1082 ASC NULLS FIRST, i_class_id#1084 ASC NULLS FIRST, i_category_id#1086 ASC NULLS FIRST], true "
          },
          "86" : {
            "sign" : -799736365,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 10408960,
            "rowCount" : 136960,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(sales#737) AND (cast(sales#737 as decimal(32,6)) > cast(scalar-subquery#741 [] as decimal(32,6)))) "
          },
          "38" : {
            "sign" : -1412645680,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 4875456,
            "rowCount" : 203144,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (((i_brand_id#762 <=> i_brand_id#784) AND (i_class_id#764 <=> i_class_id#786)) AND (i_category_id#766 <=> i_category_id#788)) "
          },
          "81" : {
            "sign" : -1902449141,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 14972593792,
            "rowCount" : 71983624,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(ws_sold_date_sk#1023) AND dynamicpruning#1290 [ws_sold_date_sk#1023]) "
          },
          "118" : {
            "sign" : -1455297653,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 4860984,
            "rowCount" : 202541,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (i_item_sk#1148 = ss_item_sk#745) "
          },
          "92" : {
            "sign" : 500470196,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 7701269884,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (ss_item_sk#1126 = ss_item_sk#745) "
          },
          "125" : {
            "sign" : -1218597883,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 1224753985121117440,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [brand_id#742, class_id#743, category_id#744], [brand_id#742, class_id#743, category_id#744] "
          },
          "18" : {
            "sign" : -1305353512,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 738,
            "rowCount" : 3,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(d_year#1215) AND isnotnull(d_moy#1217)) AND isnotnull(d_dom#1218)) AND (((d_year#1215 = 1999) AND (d_moy#1217 = 12)) AND (d_dom#1218 = 16))) "
          },
          "101" : {
            "sign" : 813769211,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#1237, d_date_id#1238, d_date#1239, d_month_seq#1240, d_week_seq#1241, d_quarter_seq#1242, d_year#1243, d_dow#1244, d_moy#1245, d_dom#1246, d_qoy#1247, d_fy_year#1248, d_fy_quarter_seq#1249, d_fy_week_seq#1250, d_day_name#1251, d_quarter_name#1252, d_holiday#1253, d_weekend#1254, d_following_holiday#1255, d_first_dom#1256, d_last_dom#1257, d_same_day_ly#1258, d_same_day_lq#1259, d_current_day#1260, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "30" : {
            "sign" : 1668181847,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 6028994137760,
            "rowCount" : 301449706888,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#69 = d_date_sk#70) "
          },
          "7" : {
            "sign" : -292159423,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 11490316840,
            "rowCount" : 287257921,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_item_sk#1053 = i_item_sk#1075) "
          },
          "97" : {
            "sign" : -1689547051,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(d_week_seq#1174) AND (d_week_seq#1174 = scalar-subquery#740 [])) AND isnotnull(d_date_sk#1170)) "
          },
          "130" : {
            "sign" : -1598386866,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1057344,
            "rowCount" : 1096,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#70], BroadcastQueryStage 36 "
          },
          "114" : {
            "sign" : 1549878865,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 8125760,
            "rowCount" : 203144,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_item_sk#755, i_brand_id#762, i_class_id#764, i_category_id#766], ShuffleQueryStage 25 "
          },
          "129" : {
            "sign" : 1894575332,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 6028994137760,
            "rowCount" : 301449706888,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#69 = d_date_sk#70) "
          },
          "29" : {
            "sign" : -1722842562,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 3617396482656,
            "rowCount" : 301449706888,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#48] "
          },
          "41" : {
            "sign" : -365671366,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1438338100,
            "rowCount" : 71916905,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_brand_id#834, i_class_id#836, i_category_id#838], ShuffleQueryStage 48 "
          },
          "105" : {
            "sign" : -1787425591,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 1224753985121117440,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [brand_id#742, class_id#743, category_id#744], [brand_id#742, class_id#743, category_id#744] "
          },
          "63" : {
            "sign" : -1804794945,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 7435136380,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#899 = d_date_sk#900) "
          },
          "3" : {
            "sign" : 327734412,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 19722240,
            "rowCount" : 136960,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (((i_brand_id#1082 = i_brand_id#1155) AND (i_class_id#1084 = i_class_id#1157)) AND (i_category_id#1086 = i_category_id#1159)) "
          },
          "74" : {
            "sign" : -70077436,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 29800787536,
            "rowCount" : 143273017,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [cs_sold_time_sk#928, cs_ship_date_sk#929, cs_bill_customer_sk#930, cs_bill_cdemo_sk#931, cs_bill_hdemo_sk#932, cs_bill_addr_sk#933, cs_ship_customer_sk#934, cs_ship_cdemo_sk#935, cs_ship_hdemo_sk#936, cs_ship_addr_sk#937, cs_call_center_sk#938, cs_catalog_page_sk#939, cs_ship_mode_sk#940, cs_warehouse_sk#941, cs_item_sk#942, cs_promo_sk#943, cs_order_number#944L, cs_quantity#945, cs_wholesale_cost#946, cs_list_price#947, cs_sales_price#948, cs_ext_discount_amt#949, cs_ext_sales_price#950, cs_ext_wholesale_cost#951, ... 10 more fields], `spark_catalog`.`tpcds_100`.`catalog_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "91" : {
            "sign" : 787262118,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 61610159072,
            "rowCount" : 1925317471,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#1147 = d_date_sk#1170) "
          },
          "52" : {
            "sign" : -604531872,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 1714655579169564416,
            "rowCount" : 61237699256055872,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_item_sk#48 = i_item_sk#755) "
          },
          "85" : {
            "sign" : -502763688,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#1024, d_date_id#1025, d_date#1026, d_month_seq#1027, d_week_seq#1028, d_quarter_seq#1029, d_year#1030, d_dow#1031, d_moy#1032, d_dom#1033, d_qoy#1034, d_fy_year#1035, d_fy_quarter_seq#1036, d_fy_week_seq#1037, d_day_name#1038, d_quarter_name#1039, d_holiday#1040, d_weekend#1041, d_following_holiday#1042, d_first_dom#1043, d_last_dom#1044, d_same_day_ly#1045, d_same_day_lq#1046, d_current_day#1047, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "131" : {
            "sign" : 743407568,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 4875456,
            "rowCount" : 203144,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (((i_brand_id#762 <=> i_brand_id#784) AND (i_class_id#764 <=> i_class_id#786)) AND (i_category_id#766 <=> i_category_id#788)) "
          },
          "28" : {
            "sign" : -672276879,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 1714655579169564416,
            "rowCount" : 61237699256055872,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_item_sk#48 = i_item_sk#755) "
          },
          "119" : {
            "sign" : -1062759686,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 4860984,
            "rowCount" : 202541,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_item_sk#1148, i_brand_id#1155, i_class_id#1157, i_category_id#1159] "
          }
        },
        "links" : [ {
          "fromId" : 13,
          "fromName" : "LogicalRelation",
          "toId" : 12,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 16,
          "fromName" : "LogicalRelation",
          "toId" : 15,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 19,
          "fromName" : "LogicalRelation",
          "toId" : 18,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 18,
          "fromName" : "Filter",
          "toId" : 17,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 17,
          "fromName" : "Project",
          "toId" : 15,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 15,
          "fromName" : "Filter",
          "toId" : 14,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 14,
          "fromName" : "Project",
          "toId" : 12,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 12,
          "fromName" : "Filter",
          "toId" : 11,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "Project",
          "toId" : 10,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 24,
          "fromName" : "LogicalRelation",
          "toId" : 23,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 23,
          "fromName" : "Filter",
          "toId" : 22,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 22,
          "fromName" : "Project",
          "toId" : 21,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 33,
          "fromName" : "LogicalRelation",
          "toId" : 32,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 36,
          "fromName" : "LogicalRelation",
          "toId" : 35,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 35,
          "fromName" : "Filter",
          "toId" : 34,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 34,
          "fromName" : "Project",
          "toId" : 32,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 32,
          "fromName" : "Filter",
          "toId" : 31,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 31,
          "fromName" : "Project",
          "toId" : 30,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 37,
          "fromName" : "LogicalQueryStage",
          "toId" : 30,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 30,
          "fromName" : "Join",
          "toId" : 29,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 29,
          "fromName" : "Project",
          "toId" : 28,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 39,
          "fromName" : "LogicalQueryStage",
          "toId" : 38,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 40,
          "fromName" : "LogicalQueryStage",
          "toId" : 38,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 38,
          "fromName" : "Join",
          "toId" : 28,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 28,
          "fromName" : "Join",
          "toId" : 27,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 27,
          "fromName" : "Project",
          "toId" : 26,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 26,
          "fromName" : "Aggregate",
          "toId" : 25,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 41,
          "fromName" : "LogicalQueryStage",
          "toId" : 25,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 25,
          "fromName" : "Join",
          "toId" : 21,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 21,
          "fromName" : "Join",
          "toId" : 20,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 20,
          "fromName" : "Project",
          "toId" : 10,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "Join",
          "toId" : 9,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 42,
          "fromName" : "LogicalQueryStage",
          "toId" : 9,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "Join",
          "toId" : 8,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "Project",
          "toId" : 7,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 46,
          "fromName" : "LogicalRelation",
          "toId" : 45,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 45,
          "fromName" : "Filter",
          "toId" : 44,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 44,
          "fromName" : "Project",
          "toId" : 43,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 22,
          "fromName" : "Project",
          "toId" : 48,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 31,
          "fromName" : "Project",
          "toId" : 54,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 55,
          "fromName" : "LogicalQueryStage",
          "toId" : 54,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 54,
          "fromName" : "Join",
          "toId" : 53,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 53,
          "fromName" : "Project",
          "toId" : 52,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 57,
          "fromName" : "LogicalQueryStage",
          "toId" : 56,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 58,
          "fromName" : "LogicalQueryStage",
          "toId" : 56,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 56,
          "fromName" : "Join",
          "toId" : 52,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 52,
          "fromName" : "Join",
          "toId" : 51,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 51,
          "fromName" : "Project",
          "toId" : 50,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 50,
          "fromName" : "Aggregate",
          "toId" : 49,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 59,
          "fromName" : "LogicalQueryStage",
          "toId" : 49,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 49,
          "fromName" : "Join",
          "toId" : 48,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 48,
          "fromName" : "Join",
          "toId" : 47,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 47,
          "fromName" : "Project",
          "toId" : 43,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 43,
          "fromName" : "Join",
          "toId" : 7,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Join",
          "toId" : 6,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Project",
          "toId" : 5,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Aggregate",
          "toId" : 4,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 66,
          "fromName" : "LogicalRelation",
          "toId" : 65,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 69,
          "fromName" : "LogicalRelation",
          "toId" : 68,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 68,
          "fromName" : "Filter",
          "toId" : 67,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 67,
          "fromName" : "Project",
          "toId" : 65,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 65,
          "fromName" : "Filter",
          "toId" : 64,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 64,
          "fromName" : "Project",
          "toId" : 63,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 67,
          "fromName" : "Project",
          "toId" : 63,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 63,
          "fromName" : "Join",
          "toId" : 62,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 62,
          "fromName" : "Project",
          "toId" : 61,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 74,
          "fromName" : "LogicalRelation",
          "toId" : 73,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 77,
          "fromName" : "LogicalRelation",
          "toId" : 76,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 76,
          "fromName" : "Filter",
          "toId" : 75,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 75,
          "fromName" : "Project",
          "toId" : 73,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 73,
          "fromName" : "Filter",
          "toId" : 72,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 72,
          "fromName" : "Project",
          "toId" : 71,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 75,
          "fromName" : "Project",
          "toId" : 71,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 71,
          "fromName" : "Join",
          "toId" : 70,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 70,
          "fromName" : "Project",
          "toId" : 61,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 82,
          "fromName" : "LogicalRelation",
          "toId" : 81,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 85,
          "fromName" : "LogicalRelation",
          "toId" : 84,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 84,
          "fromName" : "Filter",
          "toId" : 83,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 83,
          "fromName" : "Project",
          "toId" : 81,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 81,
          "fromName" : "Filter",
          "toId" : 80,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 80,
          "fromName" : "Project",
          "toId" : 79,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 83,
          "fromName" : "Project",
          "toId" : 79,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 79,
          "fromName" : "Join",
          "toId" : 78,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 78,
          "fromName" : "Project",
          "toId" : 61,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 61,
          "fromName" : "Union",
          "toId" : 60,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 60,
          "fromName" : "Aggregate",
          "toId" : 4,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 4,
          "fromName" : "Filter",
          "toId" : 3,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 95,
          "fromName" : "LogicalRelation",
          "toId" : 94,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 98,
          "fromName" : "LogicalRelation",
          "toId" : 97,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 101,
          "fromName" : "LogicalRelation",
          "toId" : 100,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 100,
          "fromName" : "Filter",
          "toId" : 99,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 99,
          "fromName" : "Project",
          "toId" : 97,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 97,
          "fromName" : "Filter",
          "toId" : 96,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 96,
          "fromName" : "Project",
          "toId" : 94,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 94,
          "fromName" : "Filter",
          "toId" : 93,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 93,
          "fromName" : "Project",
          "toId" : 92,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 22,
          "fromName" : "Project",
          "toId" : 103,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 33,
          "fromName" : "LogicalRelation",
          "toId" : 111,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 34,
          "fromName" : "Project",
          "toId" : 111,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 111,
          "fromName" : "Filter",
          "toId" : 110,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 110,
          "fromName" : "Project",
          "toId" : 109,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 112,
          "fromName" : "LogicalQueryStage",
          "toId" : 109,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 109,
          "fromName" : "Join",
          "toId" : 108,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 108,
          "fromName" : "Project",
          "toId" : 107,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 114,
          "fromName" : "LogicalQueryStage",
          "toId" : 113,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 115,
          "fromName" : "LogicalQueryStage",
          "toId" : 113,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 113,
          "fromName" : "Join",
          "toId" : 107,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 107,
          "fromName" : "Join",
          "toId" : 106,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 106,
          "fromName" : "Project",
          "toId" : 105,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 105,
          "fromName" : "Aggregate",
          "toId" : 104,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 116,
          "fromName" : "LogicalQueryStage",
          "toId" : 104,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 104,
          "fromName" : "Join",
          "toId" : 103,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 103,
          "fromName" : "Join",
          "toId" : 102,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 102,
          "fromName" : "Project",
          "toId" : 92,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 92,
          "fromName" : "Join",
          "toId" : 91,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 117,
          "fromName" : "LogicalQueryStage",
          "toId" : 91,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 91,
          "fromName" : "Join",
          "toId" : 90,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 90,
          "fromName" : "Project",
          "toId" : 89,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 121,
          "fromName" : "LogicalRelation",
          "toId" : 120,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 120,
          "fromName" : "Filter",
          "toId" : 119,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 119,
          "fromName" : "Project",
          "toId" : 118,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 22,
          "fromName" : "Project",
          "toId" : 123,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 110,
          "fromName" : "Project",
          "toId" : 129,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 130,
          "fromName" : "LogicalQueryStage",
          "toId" : 129,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 129,
          "fromName" : "Join",
          "toId" : 128,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 128,
          "fromName" : "Project",
          "toId" : 127,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 132,
          "fromName" : "LogicalQueryStage",
          "toId" : 131,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 133,
          "fromName" : "LogicalQueryStage",
          "toId" : 131,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 131,
          "fromName" : "Join",
          "toId" : 127,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 127,
          "fromName" : "Join",
          "toId" : 126,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 126,
          "fromName" : "Project",
          "toId" : 125,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 125,
          "fromName" : "Aggregate",
          "toId" : 124,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 134,
          "fromName" : "LogicalQueryStage",
          "toId" : 124,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 124,
          "fromName" : "Join",
          "toId" : 123,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 123,
          "fromName" : "Join",
          "toId" : 122,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 122,
          "fromName" : "Project",
          "toId" : 118,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 118,
          "fromName" : "Join",
          "toId" : 89,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 89,
          "fromName" : "Join",
          "toId" : 88,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 88,
          "fromName" : "Project",
          "toId" : 87,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 87,
          "fromName" : "Aggregate",
          "toId" : 86,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 60,
          "fromName" : "Aggregate",
          "toId" : 86,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 86,
          "fromName" : "Filter",
          "toId" : 3,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Join",
          "toId" : 2,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "LocalLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "LocalLimit",
          "toId" : 0,
          "toName" : "GlobalLimit",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [i_brand_id#1082 ASC NULLS FIRST, i_class_id#1084 ASC NULLS FIRST, i_category_id#1086 ASC NULLS FIRST], true\n      +- Join Inner, (((i_brand_id#1082 = i_brand_id#1155) AND (i_class_id#1084 = i_class_id#1157)) AND (i_category_id#1086 = i_category_id#1159))\n         :- Filter (isnotnull(sales#731) AND (cast(sales#731 as decimal(32,6)) > cast(scalar-subquery#735 [] as decimal(32,6))))\n         :  :  +- Aggregate [avg((cast(quantity#746 as decimal(10,0)) * list_price#747)) AS average_sales#752]\n         :  :     +- Union false, false\n         :  :        :- Project [ss_quantity#886 AS quantity#746, ss_list_price#888 AS list_price#747]\n         :  :        :  +- Join Inner, (ss_sold_date_sk#899 = d_date_sk#900)\n         :  :        :     :- Project [ss_quantity#886, ss_list_price#888, ss_sold_date_sk#899]\n         :  :        :     :  +- Filter (isnotnull(ss_sold_date_sk#899) AND dynamicpruning#1288 [ss_sold_date_sk#899])\n         :  :        :     :     :  +- Project [d_date_sk#900]\n         :  :        :     :     :     +- Filter ((isnotnull(d_year#906) AND ((d_year#906 >= 1998) AND (d_year#906 <= 2000))) AND isnotnull(d_date_sk#900))\n         :  :        :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#900,d_date_id#901,d_date#902,d_month_seq#903,d_week_seq#904,d_quarter_seq#905,d_year#906,d_dow#907,d_moy#908,d_dom#909,d_qoy#910,d_fy_year#911,d_fy_quarter_seq#912,d_fy_week_seq#913,d_day_name#914,d_quarter_name#915,d_holiday#916,d_weekend#917,d_following_holiday#918,d_first_dom#919,d_last_dom#920,d_same_day_ly#921,d_same_day_lq#922,d_current_day#923,... 4 more fields] parquet\n         :  :        :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#877,ss_item_sk#878,ss_customer_sk#879,ss_cdemo_sk#880,ss_hdemo_sk#881,ss_addr_sk#882,ss_store_sk#883,ss_promo_sk#884,ss_ticket_number#885L,ss_quantity#886,ss_wholesale_cost#887,ss_list_price#888,ss_sales_price#889,ss_ext_discount_amt#890,ss_ext_sales_price#891,ss_ext_wholesale_cost#892,ss_ext_list_price#893,ss_ext_tax#894,ss_coupon_amt#895,ss_net_paid#896,ss_net_paid_inc_tax#897,ss_net_profit#898,ss_sold_date_sk#899] parquet\n         :  :        :     +- Project [d_date_sk#900]\n         :  :        :        +- Filter ((isnotnull(d_year#906) AND ((d_year#906 >= 1998) AND (d_year#906 <= 2000))) AND isnotnull(d_date_sk#900))\n         :  :        :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#900,d_date_id#901,d_date#902,d_month_seq#903,d_week_seq#904,d_quarter_seq#905,d_year#906,d_dow#907,d_moy#908,d_dom#909,d_qoy#910,d_fy_year#911,d_fy_quarter_seq#912,d_fy_week_seq#913,d_day_name#914,d_quarter_name#915,d_holiday#916,d_weekend#917,d_following_holiday#918,d_first_dom#919,d_last_dom#920,d_same_day_ly#921,d_same_day_lq#922,d_current_day#923,... 4 more fields] parquet\n         :  :        :- Project [cs_quantity#945 AS quantity#748, cs_list_price#947 AS list_price#749]\n         :  :        :  +- Join Inner, (cs_sold_date_sk#961 = d_date_sk#962)\n         :  :        :     :- Project [cs_quantity#945, cs_list_price#947, cs_sold_date_sk#961]\n         :  :        :     :  +- Filter (isnotnull(cs_sold_date_sk#961) AND dynamicpruning#1289 [cs_sold_date_sk#961])\n         :  :        :     :     :  +- Project [d_date_sk#962]\n         :  :        :     :     :     +- Filter ((isnotnull(d_year#968) AND ((d_year#968 >= 1998) AND (d_year#968 <= 2000))) AND isnotnull(d_date_sk#962))\n         :  :        :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#962,d_date_id#963,d_date#964,d_month_seq#965,d_week_seq#966,d_quarter_seq#967,d_year#968,d_dow#969,d_moy#970,d_dom#971,d_qoy#972,d_fy_year#973,d_fy_quarter_seq#974,d_fy_week_seq#975,d_day_name#976,d_quarter_name#977,d_holiday#978,d_weekend#979,d_following_holiday#980,d_first_dom#981,d_last_dom#982,d_same_day_ly#983,d_same_day_lq#984,d_current_day#985,... 4 more fields] parquet\n         :  :        :     :     +- Relation spark_catalog.tpcds_100.catalog_sales[cs_sold_time_sk#928,cs_ship_date_sk#929,cs_bill_customer_sk#930,cs_bill_cdemo_sk#931,cs_bill_hdemo_sk#932,cs_bill_addr_sk#933,cs_ship_customer_sk#934,cs_ship_cdemo_sk#935,cs_ship_hdemo_sk#936,cs_ship_addr_sk#937,cs_call_center_sk#938,cs_catalog_page_sk#939,cs_ship_mode_sk#940,cs_warehouse_sk#941,cs_item_sk#942,cs_promo_sk#943,cs_order_number#944L,cs_quantity#945,cs_wholesale_cost#946,cs_list_price#947,cs_sales_price#948,cs_ext_discount_amt#949,cs_ext_sales_price#950,cs_ext_wholesale_cost#951,... 10 more fields] parquet\n         :  :        :     +- Project [d_date_sk#962]\n         :  :        :        +- Filter ((isnotnull(d_year#968) AND ((d_year#968 >= 1998) AND (d_year#968 <= 2000))) AND isnotnull(d_date_sk#962))\n         :  :        :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#962,d_date_id#963,d_date#964,d_month_seq#965,d_week_seq#966,d_quarter_seq#967,d_year#968,d_dow#969,d_moy#970,d_dom#971,d_qoy#972,d_fy_year#973,d_fy_quarter_seq#974,d_fy_week_seq#975,d_day_name#976,d_quarter_name#977,d_holiday#978,d_weekend#979,d_following_holiday#980,d_first_dom#981,d_last_dom#982,d_same_day_ly#983,d_same_day_lq#984,d_current_day#985,... 4 more fields] parquet\n         :  :        +- Project [ws_quantity#1007 AS quantity#750, ws_list_price#1009 AS list_price#751]\n         :  :           +- Join Inner, (ws_sold_date_sk#1023 = d_date_sk#1024)\n         :  :              :- Project [ws_quantity#1007, ws_list_price#1009, ws_sold_date_sk#1023]\n         :  :              :  +- Filter (isnotnull(ws_sold_date_sk#1023) AND dynamicpruning#1290 [ws_sold_date_sk#1023])\n         :  :              :     :  +- Project [d_date_sk#1024]\n         :  :              :     :     +- Filter ((isnotnull(d_year#1030) AND ((d_year#1030 >= 1998) AND (d_year#1030 <= 2000))) AND isnotnull(d_date_sk#1024))\n         :  :              :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#1024,d_date_id#1025,d_date#1026,d_month_seq#1027,d_week_seq#1028,d_quarter_seq#1029,d_year#1030,d_dow#1031,d_moy#1032,d_dom#1033,d_qoy#1034,d_fy_year#1035,d_fy_quarter_seq#1036,d_fy_week_seq#1037,d_day_name#1038,d_quarter_name#1039,d_holiday#1040,d_weekend#1041,d_following_holiday#1042,d_first_dom#1043,d_last_dom#1044,d_same_day_ly#1045,d_same_day_lq#1046,d_current_day#1047,... 4 more fields] parquet\n         :  :              :     +- Relation spark_catalog.tpcds_100.web_sales[ws_sold_time_sk#990,ws_ship_date_sk#991,ws_item_sk#992,ws_bill_customer_sk#993,ws_bill_cdemo_sk#994,ws_bill_hdemo_sk#995,ws_bill_addr_sk#996,ws_ship_customer_sk#997,ws_ship_cdemo_sk#998,ws_ship_hdemo_sk#999,ws_ship_addr_sk#1000,ws_web_page_sk#1001,ws_web_site_sk#1002,ws_ship_mode_sk#1003,ws_warehouse_sk#1004,ws_promo_sk#1005,ws_order_number#1006L,ws_quantity#1007,ws_wholesale_cost#1008,ws_list_price#1009,ws_sales_price#1010,ws_ext_discount_amt#1011,ws_ext_sales_price#1012,ws_ext_wholesale_cost#1013,... 10 more fields] parquet\n         :  :              +- Project [d_date_sk#1024]\n         :  :                 +- Filter ((isnotnull(d_year#1030) AND ((d_year#1030 >= 1998) AND (d_year#1030 <= 2000))) AND isnotnull(d_date_sk#1024))\n         :  :                    +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#1024,d_date_id#1025,d_date#1026,d_month_seq#1027,d_week_seq#1028,d_quarter_seq#1029,d_year#1030,d_dow#1031,d_moy#1032,d_dom#1033,d_qoy#1034,d_fy_year#1035,d_fy_quarter_seq#1036,d_fy_week_seq#1037,d_day_name#1038,d_quarter_name#1039,d_holiday#1040,d_weekend#1041,d_following_holiday#1042,d_first_dom#1043,d_last_dom#1044,d_same_day_ly#1045,d_same_day_lq#1046,d_current_day#1047,... 4 more fields] parquet\n         :  +- Aggregate [i_brand_id#1082, i_class_id#1084, i_category_id#1086], [store AS channel#730, i_brand_id#1082, i_class_id#1084, i_category_id#1086, sum((cast(ss_quantity#1061 as decimal(10,0)) * ss_list_price#1063)) AS sales#731, count(1) AS number_sales#732L]\n         :     +- Project [ss_quantity#1061, ss_list_price#1063, i_brand_id#1082, i_class_id#1084, i_category_id#1086]\n         :        +- Join Inner, (ss_item_sk#1053 = i_item_sk#1075)\n         :           :- Project [ss_item_sk#1053, ss_quantity#1061, ss_list_price#1063]\n         :           :  +- Join Inner, (ss_sold_date_sk#1074 = d_date_sk#1097)\n         :           :     :- Join LeftSemi, (ss_item_sk#1053 = ss_item_sk#745)\n         :           :     :  :- Project [ss_item_sk#1053, ss_quantity#1061, ss_list_price#1063, ss_sold_date_sk#1074]\n         :           :     :  :  +- Filter ((isnotnull(ss_item_sk#1053) AND isnotnull(ss_sold_date_sk#1074)) AND dynamicpruning#1303 [ss_sold_date_sk#1074])\n         :           :     :  :     :  +- Project [d_date_sk#1097]\n         :           :     :  :     :     +- Filter ((isnotnull(d_week_seq#1101) AND (d_week_seq#1101 = scalar-subquery#734 [])) AND isnotnull(d_date_sk#1097))\n         :           :     :  :     :        :  +- Project [d_week_seq#1213]\n         :           :     :  :     :        :     +- Filter (((isnotnull(d_year#1215) AND isnotnull(d_moy#1217)) AND isnotnull(d_dom#1218)) AND (((d_year#1215 = 1999) AND (d_moy#1217 = 12)) AND (d_dom#1218 = 16)))\n         :           :     :  :     :        :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#1209,d_date_id#1210,d_date#1211,d_month_seq#1212,d_week_seq#1213,d_quarter_seq#1214,d_year#1215,d_dow#1216,d_moy#1217,d_dom#1218,d_qoy#1219,d_fy_year#1220,d_fy_quarter_seq#1221,d_fy_week_seq#1222,d_day_name#1223,d_quarter_name#1224,d_holiday#1225,d_weekend#1226,d_following_holiday#1227,d_first_dom#1228,d_last_dom#1229,d_same_day_ly#1230,d_same_day_lq#1231,d_current_day#1232,... 4 more fields] parquet\n         :           :     :  :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#1097,d_date_id#1098,d_date#1099,d_month_seq#1100,d_week_seq#1101,d_quarter_seq#1102,d_year#1103,d_dow#1104,d_moy#1105,d_dom#1106,d_qoy#1107,d_fy_year#1108,d_fy_quarter_seq#1109,d_fy_week_seq#1110,d_day_name#1111,d_quarter_name#1112,d_holiday#1113,d_weekend#1114,d_following_holiday#1115,d_first_dom#1116,d_last_dom#1117,d_same_day_ly#1118,d_same_day_lq#1119,d_current_day#1120,... 4 more fields] parquet\n         :           :     :  :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#1052,ss_item_sk#1053,ss_customer_sk#1054,ss_cdemo_sk#1055,ss_hdemo_sk#1056,ss_addr_sk#1057,ss_store_sk#1058,ss_promo_sk#1059,ss_ticket_number#1060L,ss_quantity#1061,ss_wholesale_cost#1062,ss_list_price#1063,ss_sales_price#1064,ss_ext_discount_amt#1065,ss_ext_sales_price#1066,ss_ext_wholesale_cost#1067,ss_ext_list_price#1068,ss_ext_tax#1069,ss_coupon_amt#1070,ss_net_paid#1071,ss_net_paid_inc_tax#1072,ss_net_profit#1073,ss_sold_date_sk#1074] parquet\n         :           :     :  +- Project [i_item_sk#25 AS ss_item_sk#745]\n         :           :     :     +- Join Inner, (((i_brand_id#32 = brand_id#742) AND (i_class_id#34 = class_id#743)) AND (i_category_id#36 = category_id#744))\n         :           :     :        :- Project [i_item_sk#25, i_brand_id#32, i_class_id#34, i_category_id#36]\n         :           :     :        :  +- Filter ((isnotnull(i_brand_id#32) AND isnotnull(i_class_id#34)) AND isnotnull(i_category_id#36))\n         :           :     :        :     +- Relation spark_catalog.tpcds_100.item[i_item_sk#25,i_item_id#26,i_rec_start_date#27,i_rec_end_date#28,i_item_desc#29,i_current_price#30,i_wholesale_cost#31,i_brand_id#32,i_brand#33,i_class_id#34,i_class#35,i_category_id#36,i_category#37,i_manufact_id#38,i_manufact#39,i_size#40,i_formulation#41,i_color#42,i_units#43,i_container#44,i_manager_id#45,i_product_name#46] parquet\n         :           :     :        +- Join LeftSemi, (((brand_id#742 <=> i_brand_id#834) AND (class_id#743 <=> i_class_id#836)) AND (category_id#744 <=> i_category_id#838))\n         :           :     :           :- Aggregate [brand_id#742, class_id#743, category_id#744], [brand_id#742, class_id#743, category_id#744]\n         :           :     :           :  +- Project [i_brand_id#762 AS brand_id#742, i_class_id#764 AS class_id#743, i_category_id#766 AS category_id#744]\n         :           :     :           :     +- Join Inner, (ss_item_sk#48 = i_item_sk#755)\n         :           :     :           :        :- Project [ss_item_sk#48]\n         :           :     :           :        :  +- Join Inner, (ss_sold_date_sk#69 = d_date_sk#70)\n         :           :     :           :        :     :- Project [ss_item_sk#48, ss_sold_date_sk#69]\n         :           :     :           :        :     :  +- Filter ((isnotnull(ss_item_sk#48) AND isnotnull(ss_sold_date_sk#69)) AND dynamicpruning#1291 [ss_sold_date_sk#69])\n         :           :     :           :        :     :     :  +- Project [d_date_sk#70]\n         :           :     :           :        :     :     :     +- Filter ((isnotnull(d_year#76) AND ((d_year#76 >= 1998) AND (d_year#76 <= 2000))) AND isnotnull(d_date_sk#70))\n         :           :     :           :        :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#70,d_date_id#71,d_date#72,d_month_seq#73,d_week_seq#74,d_quarter_seq#75,d_year#76,d_dow#77,d_moy#78,d_dom#79,d_qoy#80,d_fy_year#81,d_fy_quarter_seq#82,d_fy_week_seq#83,d_day_name#84,d_quarter_name#85,d_holiday#86,d_weekend#87,d_following_holiday#88,d_first_dom#89,d_last_dom#90,d_same_day_ly#91,d_same_day_lq#92,d_current_day#93,... 4 more fields] parquet\n         :           :     :           :        :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#47,ss_item_sk#48,ss_customer_sk#49,ss_cdemo_sk#50,ss_hdemo_sk#51,ss_addr_sk#52,ss_store_sk#53,ss_promo_sk#54,ss_ticket_number#55L,ss_quantity#56,ss_wholesale_cost#57,ss_list_price#58,ss_sales_price#59,ss_ext_discount_amt#60,ss_ext_sales_price#61,ss_ext_wholesale_cost#62,ss_ext_list_price#63,ss_ext_tax#64,ss_coupon_amt#65,ss_net_paid#66,ss_net_paid_inc_tax#67,ss_net_profit#68,ss_sold_date_sk#69] parquet\n         :           :     :           :        :     +- LogicalQueryStage Project [d_date_sk#70], BroadcastQueryStage 0\n         :           :     :           :        +- Join LeftSemi, (((i_brand_id#762 <=> i_brand_id#784) AND (i_class_id#764 <=> i_class_id#786)) AND (i_category_id#766 <=> i_category_id#788))\n         :           :     :           :           :- LogicalQueryStage Project [i_item_sk#755, i_brand_id#762, i_class_id#764, i_category_id#766], ShuffleQueryStage 1\n         :           :     :           :           +- LogicalQueryStage Project [i_brand_id#784, i_class_id#786, i_category_id#788], ShuffleQueryStage 47\n         :           :     :           +- LogicalQueryStage Project [i_brand_id#834, i_class_id#836, i_category_id#838], ShuffleQueryStage 48\n         :           :     +- LogicalQueryStage Project [d_date_sk#1097], BroadcastQueryStage 9\n         :           +- Join LeftSemi, (i_item_sk#1075 = ss_item_sk#745)\n         :              :- Project [i_item_sk#1075, i_brand_id#1082, i_class_id#1084, i_category_id#1086]\n         :              :  +- Filter (((isnotnull(i_item_sk#1075) AND isnotnull(i_brand_id#1082)) AND isnotnull(i_class_id#1084)) AND isnotnull(i_category_id#1086))\n         :              :     +- Relation spark_catalog.tpcds_100.item[i_item_sk#1075,i_item_id#1076,i_rec_start_date#1077,i_rec_end_date#1078,i_item_desc#1079,i_current_price#1080,i_wholesale_cost#1081,i_brand_id#1082,i_brand#1083,i_class_id#1084,i_class#1085,i_category_id#1086,i_category#1087,i_manufact_id#1088,i_manufact#1089,i_size#1090,i_formulation#1091,i_color#1092,i_units#1093,i_container#1094,i_manager_id#1095,i_product_name#1096] parquet\n         :              +- Project [i_item_sk#25 AS ss_item_sk#745]\n         :                 +- Join Inner, (((i_brand_id#32 = brand_id#742) AND (i_class_id#34 = class_id#743)) AND (i_category_id#36 = category_id#744))\n         :                    :- Project [i_item_sk#25, i_brand_id#32, i_class_id#34, i_category_id#36]\n         :                    :  +- Filter ((isnotnull(i_brand_id#32) AND isnotnull(i_class_id#34)) AND isnotnull(i_category_id#36))\n         :                    :     +- Relation spark_catalog.tpcds_100.item[i_item_sk#25,i_item_id#26,i_rec_start_date#27,i_rec_end_date#28,i_item_desc#29,i_current_price#30,i_wholesale_cost#31,i_brand_id#32,i_brand#33,i_class_id#34,i_class#35,i_category_id#36,i_category#37,i_manufact_id#38,i_manufact#39,i_size#40,i_formulation#41,i_color#42,i_units#43,i_container#44,i_manager_id#45,i_product_name#46] parquet\n         :                    +- Join LeftSemi, (((brand_id#742 <=> i_brand_id#834) AND (class_id#743 <=> i_class_id#836)) AND (category_id#744 <=> i_category_id#838))\n         :                       :- Aggregate [brand_id#742, class_id#743, category_id#744], [brand_id#742, class_id#743, category_id#744]\n         :                       :  +- Project [i_brand_id#762 AS brand_id#742, i_class_id#764 AS class_id#743, i_category_id#766 AS category_id#744]\n         :                       :     +- Join Inner, (ss_item_sk#48 = i_item_sk#755)\n         :                       :        :- Project [ss_item_sk#48]\n         :                       :        :  +- Join Inner, (ss_sold_date_sk#69 = d_date_sk#70)\n         :                       :        :     :- Project [ss_item_sk#48, ss_sold_date_sk#69]\n         :                       :        :     :  +- Filter ((isnotnull(ss_item_sk#48) AND isnotnull(ss_sold_date_sk#69)) AND dynamicpruning#1291 [ss_sold_date_sk#69])\n         :                       :        :     :     :  +- Project [d_date_sk#70]\n         :                       :        :     :     :     +- Filter ((isnotnull(d_year#76) AND ((d_year#76 >= 1998) AND (d_year#76 <= 2000))) AND isnotnull(d_date_sk#70))\n         :                       :        :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#70,d_date_id#71,d_date#72,d_month_seq#73,d_week_seq#74,d_quarter_seq#75,d_year#76,d_dow#77,d_moy#78,d_dom#79,d_qoy#80,d_fy_year#81,d_fy_quarter_seq#82,d_fy_week_seq#83,d_day_name#84,d_quarter_name#85,d_holiday#86,d_weekend#87,d_following_holiday#88,d_first_dom#89,d_last_dom#90,d_same_day_ly#91,d_same_day_lq#92,d_current_day#93,... 4 more fields] parquet\n         :                       :        :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#47,ss_item_sk#48,ss_customer_sk#49,ss_cdemo_sk#50,ss_hdemo_sk#51,ss_addr_sk#52,ss_store_sk#53,ss_promo_sk#54,ss_ticket_number#55L,ss_quantity#56,ss_wholesale_cost#57,ss_list_price#58,ss_sales_price#59,ss_ext_discount_amt#60,ss_ext_sales_price#61,ss_ext_wholesale_cost#62,ss_ext_list_price#63,ss_ext_tax#64,ss_coupon_amt#65,ss_net_paid#66,ss_net_paid_inc_tax#67,ss_net_profit#68,ss_sold_date_sk#69] parquet\n         :                       :        :     +- LogicalQueryStage Project [d_date_sk#70], BroadcastQueryStage 11\n         :                       :        +- Join LeftSemi, (((i_brand_id#762 <=> i_brand_id#784) AND (i_class_id#764 <=> i_class_id#786)) AND (i_category_id#766 <=> i_category_id#788))\n         :                       :           :- LogicalQueryStage Project [i_item_sk#755, i_brand_id#762, i_class_id#764, i_category_id#766], ShuffleQueryStage 13\n         :                       :           +- LogicalQueryStage Project [i_brand_id#784, i_class_id#786, i_category_id#788], ShuffleQueryStage 50\n         :                       +- LogicalQueryStage Project [i_brand_id#834, i_class_id#836, i_category_id#838], ShuffleQueryStage 52\n         +- Filter (isnotnull(sales#737) AND (cast(sales#737 as decimal(32,6)) > cast(scalar-subquery#741 [] as decimal(32,6))))\n            :  +- Aggregate [avg((cast(quantity#746 as decimal(10,0)) * list_price#747)) AS average_sales#752]\n            :     +- Union false, false\n            :        :- Project [ss_quantity#886 AS quantity#746, ss_list_price#888 AS list_price#747]\n            :        :  +- Join Inner, (ss_sold_date_sk#899 = d_date_sk#900)\n            :        :     :- Project [ss_quantity#886, ss_list_price#888, ss_sold_date_sk#899]\n            :        :     :  +- Filter (isnotnull(ss_sold_date_sk#899) AND dynamicpruning#1288 [ss_sold_date_sk#899])\n            :        :     :     :  +- Project [d_date_sk#900]\n            :        :     :     :     +- Filter ((isnotnull(d_year#906) AND ((d_year#906 >= 1998) AND (d_year#906 <= 2000))) AND isnotnull(d_date_sk#900))\n            :        :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#900,d_date_id#901,d_date#902,d_month_seq#903,d_week_seq#904,d_quarter_seq#905,d_year#906,d_dow#907,d_moy#908,d_dom#909,d_qoy#910,d_fy_year#911,d_fy_quarter_seq#912,d_fy_week_seq#913,d_day_name#914,d_quarter_name#915,d_holiday#916,d_weekend#917,d_following_holiday#918,d_first_dom#919,d_last_dom#920,d_same_day_ly#921,d_same_day_lq#922,d_current_day#923,... 4 more fields] parquet\n            :        :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#877,ss_item_sk#878,ss_customer_sk#879,ss_cdemo_sk#880,ss_hdemo_sk#881,ss_addr_sk#882,ss_store_sk#883,ss_promo_sk#884,ss_ticket_number#885L,ss_quantity#886,ss_wholesale_cost#887,ss_list_price#888,ss_sales_price#889,ss_ext_discount_amt#890,ss_ext_sales_price#891,ss_ext_wholesale_cost#892,ss_ext_list_price#893,ss_ext_tax#894,ss_coupon_amt#895,ss_net_paid#896,ss_net_paid_inc_tax#897,ss_net_profit#898,ss_sold_date_sk#899] parquet\n            :        :     +- Project [d_date_sk#900]\n            :        :        +- Filter ((isnotnull(d_year#906) AND ((d_year#906 >= 1998) AND (d_year#906 <= 2000))) AND isnotnull(d_date_sk#900))\n            :        :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#900,d_date_id#901,d_date#902,d_month_seq#903,d_week_seq#904,d_quarter_seq#905,d_year#906,d_dow#907,d_moy#908,d_dom#909,d_qoy#910,d_fy_year#911,d_fy_quarter_seq#912,d_fy_week_seq#913,d_day_name#914,d_quarter_name#915,d_holiday#916,d_weekend#917,d_following_holiday#918,d_first_dom#919,d_last_dom#920,d_same_day_ly#921,d_same_day_lq#922,d_current_day#923,... 4 more fields] parquet\n            :        :- Project [cs_quantity#945 AS quantity#748, cs_list_price#947 AS list_price#749]\n            :        :  +- Join Inner, (cs_sold_date_sk#961 = d_date_sk#962)\n            :        :     :- Project [cs_quantity#945, cs_list_price#947, cs_sold_date_sk#961]\n            :        :     :  +- Filter (isnotnull(cs_sold_date_sk#961) AND dynamicpruning#1289 [cs_sold_date_sk#961])\n            :        :     :     :  +- Project [d_date_sk#962]\n            :        :     :     :     +- Filter ((isnotnull(d_year#968) AND ((d_year#968 >= 1998) AND (d_year#968 <= 2000))) AND isnotnull(d_date_sk#962))\n            :        :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#962,d_date_id#963,d_date#964,d_month_seq#965,d_week_seq#966,d_quarter_seq#967,d_year#968,d_dow#969,d_moy#970,d_dom#971,d_qoy#972,d_fy_year#973,d_fy_quarter_seq#974,d_fy_week_seq#975,d_day_name#976,d_quarter_name#977,d_holiday#978,d_weekend#979,d_following_holiday#980,d_first_dom#981,d_last_dom#982,d_same_day_ly#983,d_same_day_lq#984,d_current_day#985,... 4 more fields] parquet\n            :        :     :     +- Relation spark_catalog.tpcds_100.catalog_sales[cs_sold_time_sk#928,cs_ship_date_sk#929,cs_bill_customer_sk#930,cs_bill_cdemo_sk#931,cs_bill_hdemo_sk#932,cs_bill_addr_sk#933,cs_ship_customer_sk#934,cs_ship_cdemo_sk#935,cs_ship_hdemo_sk#936,cs_ship_addr_sk#937,cs_call_center_sk#938,cs_catalog_page_sk#939,cs_ship_mode_sk#940,cs_warehouse_sk#941,cs_item_sk#942,cs_promo_sk#943,cs_order_number#944L,cs_quantity#945,cs_wholesale_cost#946,cs_list_price#947,cs_sales_price#948,cs_ext_discount_amt#949,cs_ext_sales_price#950,cs_ext_wholesale_cost#951,... 10 more fields] parquet\n            :        :     +- Project [d_date_sk#962]\n            :        :        +- Filter ((isnotnull(d_year#968) AND ((d_year#968 >= 1998) AND (d_year#968 <= 2000))) AND isnotnull(d_date_sk#962))\n            :        :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#962,d_date_id#963,d_date#964,d_month_seq#965,d_week_seq#966,d_quarter_seq#967,d_year#968,d_dow#969,d_moy#970,d_dom#971,d_qoy#972,d_fy_year#973,d_fy_quarter_seq#974,d_fy_week_seq#975,d_day_name#976,d_quarter_name#977,d_holiday#978,d_weekend#979,d_following_holiday#980,d_first_dom#981,d_last_dom#982,d_same_day_ly#983,d_same_day_lq#984,d_current_day#985,... 4 more fields] parquet\n            :        +- Project [ws_quantity#1007 AS quantity#750, ws_list_price#1009 AS list_price#751]\n            :           +- Join Inner, (ws_sold_date_sk#1023 = d_date_sk#1024)\n            :              :- Project [ws_quantity#1007, ws_list_price#1009, ws_sold_date_sk#1023]\n            :              :  +- Filter (isnotnull(ws_sold_date_sk#1023) AND dynamicpruning#1290 [ws_sold_date_sk#1023])\n            :              :     :  +- Project [d_date_sk#1024]\n            :              :     :     +- Filter ((isnotnull(d_year#1030) AND ((d_year#1030 >= 1998) AND (d_year#1030 <= 2000))) AND isnotnull(d_date_sk#1024))\n            :              :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#1024,d_date_id#1025,d_date#1026,d_month_seq#1027,d_week_seq#1028,d_quarter_seq#1029,d_year#1030,d_dow#1031,d_moy#1032,d_dom#1033,d_qoy#1034,d_fy_year#1035,d_fy_quarter_seq#1036,d_fy_week_seq#1037,d_day_name#1038,d_quarter_name#1039,d_holiday#1040,d_weekend#1041,d_following_holiday#1042,d_first_dom#1043,d_last_dom#1044,d_same_day_ly#1045,d_same_day_lq#1046,d_current_day#1047,... 4 more fields] parquet\n            :              :     +- Relation spark_catalog.tpcds_100.web_sales[ws_sold_time_sk#990,ws_ship_date_sk#991,ws_item_sk#992,ws_bill_customer_sk#993,ws_bill_cdemo_sk#994,ws_bill_hdemo_sk#995,ws_bill_addr_sk#996,ws_ship_customer_sk#997,ws_ship_cdemo_sk#998,ws_ship_hdemo_sk#999,ws_ship_addr_sk#1000,ws_web_page_sk#1001,ws_web_site_sk#1002,ws_ship_mode_sk#1003,ws_warehouse_sk#1004,ws_promo_sk#1005,ws_order_number#1006L,ws_quantity#1007,ws_wholesale_cost#1008,ws_list_price#1009,ws_sales_price#1010,ws_ext_discount_amt#1011,ws_ext_sales_price#1012,ws_ext_wholesale_cost#1013,... 10 more fields] parquet\n            :              +- Project [d_date_sk#1024]\n            :                 +- Filter ((isnotnull(d_year#1030) AND ((d_year#1030 >= 1998) AND (d_year#1030 <= 2000))) AND isnotnull(d_date_sk#1024))\n            :                    +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#1024,d_date_id#1025,d_date#1026,d_month_seq#1027,d_week_seq#1028,d_quarter_seq#1029,d_year#1030,d_dow#1031,d_moy#1032,d_dom#1033,d_qoy#1034,d_fy_year#1035,d_fy_quarter_seq#1036,d_fy_week_seq#1037,d_day_name#1038,d_quarter_name#1039,d_holiday#1040,d_weekend#1041,d_following_holiday#1042,d_first_dom#1043,d_last_dom#1044,d_same_day_ly#1045,d_same_day_lq#1046,d_current_day#1047,... 4 more fields] parquet\n            +- Aggregate [i_brand_id#1155, i_class_id#1157, i_category_id#1159], [store AS channel#736, i_brand_id#1155, i_class_id#1157, i_category_id#1159, sum((cast(ss_quantity#1134 as decimal(10,0)) * ss_list_price#1136)) AS sales#737, count(1) AS number_sales#738L]\n               +- Project [ss_quantity#1134, ss_list_price#1136, i_brand_id#1155, i_class_id#1157, i_category_id#1159]\n                  +- Join Inner, (ss_item_sk#1126 = i_item_sk#1148)\n                     :- Project [ss_item_sk#1126, ss_quantity#1134, ss_list_price#1136]\n                     :  +- Join Inner, (ss_sold_date_sk#1147 = d_date_sk#1170)\n                     :     :- Join LeftSemi, (ss_item_sk#1126 = ss_item_sk#745)\n                     :     :  :- Project [ss_item_sk#1126, ss_quantity#1134, ss_list_price#1136, ss_sold_date_sk#1147]\n                     :     :  :  +- Filter ((isnotnull(ss_item_sk#1126) AND isnotnull(ss_sold_date_sk#1147)) AND dynamicpruning#1310 [ss_sold_date_sk#1147])\n                     :     :  :     :  +- Project [d_date_sk#1170]\n                     :     :  :     :     +- Filter ((isnotnull(d_week_seq#1174) AND (d_week_seq#1174 = scalar-subquery#740 [])) AND isnotnull(d_date_sk#1170))\n                     :     :  :     :        :  +- Project [d_week_seq#1241]\n                     :     :  :     :        :     +- Filter (((isnotnull(d_year#1243) AND isnotnull(d_moy#1245)) AND isnotnull(d_dom#1246)) AND (((d_year#1243 = 1998) AND (d_moy#1245 = 12)) AND (d_dom#1246 = 16)))\n                     :     :  :     :        :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#1237,d_date_id#1238,d_date#1239,d_month_seq#1240,d_week_seq#1241,d_quarter_seq#1242,d_year#1243,d_dow#1244,d_moy#1245,d_dom#1246,d_qoy#1247,d_fy_year#1248,d_fy_quarter_seq#1249,d_fy_week_seq#1250,d_day_name#1251,d_quarter_name#1252,d_holiday#1253,d_weekend#1254,d_following_holiday#1255,d_first_dom#1256,d_last_dom#1257,d_same_day_ly#1258,d_same_day_lq#1259,d_current_day#1260,... 4 more fields] parquet\n                     :     :  :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#1170,d_date_id#1171,d_date#1172,d_month_seq#1173,d_week_seq#1174,d_quarter_seq#1175,d_year#1176,d_dow#1177,d_moy#1178,d_dom#1179,d_qoy#1180,d_fy_year#1181,d_fy_quarter_seq#1182,d_fy_week_seq#1183,d_day_name#1184,d_quarter_name#1185,d_holiday#1186,d_weekend#1187,d_following_holiday#1188,d_first_dom#1189,d_last_dom#1190,d_same_day_ly#1191,d_same_day_lq#1192,d_current_day#1193,... 4 more fields] parquet\n                     :     :  :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#1125,ss_item_sk#1126,ss_customer_sk#1127,ss_cdemo_sk#1128,ss_hdemo_sk#1129,ss_addr_sk#1130,ss_store_sk#1131,ss_promo_sk#1132,ss_ticket_number#1133L,ss_quantity#1134,ss_wholesale_cost#1135,ss_list_price#1136,ss_sales_price#1137,ss_ext_discount_amt#1138,ss_ext_sales_price#1139,ss_ext_wholesale_cost#1140,ss_ext_list_price#1141,ss_ext_tax#1142,ss_coupon_amt#1143,ss_net_paid#1144,ss_net_paid_inc_tax#1145,ss_net_profit#1146,ss_sold_date_sk#1147] parquet\n                     :     :  +- Project [i_item_sk#25 AS ss_item_sk#745]\n                     :     :     +- Join Inner, (((i_brand_id#32 = brand_id#742) AND (i_class_id#34 = class_id#743)) AND (i_category_id#36 = category_id#744))\n                     :     :        :- Project [i_item_sk#25, i_brand_id#32, i_class_id#34, i_category_id#36]\n                     :     :        :  +- Filter ((isnotnull(i_brand_id#32) AND isnotnull(i_class_id#34)) AND isnotnull(i_category_id#36))\n                     :     :        :     +- Relation spark_catalog.tpcds_100.item[i_item_sk#25,i_item_id#26,i_rec_start_date#27,i_rec_end_date#28,i_item_desc#29,i_current_price#30,i_wholesale_cost#31,i_brand_id#32,i_brand#33,i_class_id#34,i_class#35,i_category_id#36,i_category#37,i_manufact_id#38,i_manufact#39,i_size#40,i_formulation#41,i_color#42,i_units#43,i_container#44,i_manager_id#45,i_product_name#46] parquet\n                     :     :        +- Join LeftSemi, (((brand_id#742 <=> i_brand_id#834) AND (class_id#743 <=> i_class_id#836)) AND (category_id#744 <=> i_category_id#838))\n                     :     :           :- Aggregate [brand_id#742, class_id#743, category_id#744], [brand_id#742, class_id#743, category_id#744]\n                     :     :           :  +- Project [i_brand_id#762 AS brand_id#742, i_class_id#764 AS class_id#743, i_category_id#766 AS category_id#744]\n                     :     :           :     +- Join Inner, (ss_item_sk#48 = i_item_sk#755)\n                     :     :           :        :- Project [ss_item_sk#48]\n                     :     :           :        :  +- Join Inner, (ss_sold_date_sk#69 = d_date_sk#70)\n                     :     :           :        :     :- Project [ss_item_sk#48, ss_sold_date_sk#69]\n                     :     :           :        :     :  +- Filter ((isnotnull(ss_item_sk#48) AND isnotnull(ss_sold_date_sk#69)) AND dynamicpruning#1297 [ss_sold_date_sk#69])\n                     :     :           :        :     :     :  +- Project [d_date_sk#70]\n                     :     :           :        :     :     :     +- Filter ((isnotnull(d_year#76) AND ((d_year#76 >= 1998) AND (d_year#76 <= 2000))) AND isnotnull(d_date_sk#70))\n                     :     :           :        :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#70,d_date_id#71,d_date#72,d_month_seq#73,d_week_seq#74,d_quarter_seq#75,d_year#76,d_dow#77,d_moy#78,d_dom#79,d_qoy#80,d_fy_year#81,d_fy_quarter_seq#82,d_fy_week_seq#83,d_day_name#84,d_quarter_name#85,d_holiday#86,d_weekend#87,d_following_holiday#88,d_first_dom#89,d_last_dom#90,d_same_day_ly#91,d_same_day_lq#92,d_current_day#93,... 4 more fields] parquet\n                     :     :           :        :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#47,ss_item_sk#48,ss_customer_sk#49,ss_cdemo_sk#50,ss_hdemo_sk#51,ss_addr_sk#52,ss_store_sk#53,ss_promo_sk#54,ss_ticket_number#55L,ss_quantity#56,ss_wholesale_cost#57,ss_list_price#58,ss_sales_price#59,ss_ext_discount_amt#60,ss_ext_sales_price#61,ss_ext_wholesale_cost#62,ss_ext_list_price#63,ss_ext_tax#64,ss_coupon_amt#65,ss_net_paid#66,ss_net_paid_inc_tax#67,ss_net_profit#68,ss_sold_date_sk#69] parquet\n                     :     :           :        :     +- LogicalQueryStage Project [d_date_sk#70], BroadcastQueryStage 23\n                     :     :           :        +- Join LeftSemi, (((i_brand_id#762 <=> i_brand_id#784) AND (i_class_id#764 <=> i_class_id#786)) AND (i_category_id#766 <=> i_category_id#788))\n                     :     :           :           :- LogicalQueryStage Project [i_item_sk#755, i_brand_id#762, i_class_id#764, i_category_id#766], ShuffleQueryStage 25\n                     :     :           :           +- LogicalQueryStage Project [i_brand_id#784, i_class_id#786, i_category_id#788], ShuffleQueryStage 54\n                     :     :           +- LogicalQueryStage Project [i_brand_id#834, i_class_id#836, i_category_id#838], ShuffleQueryStage 56\n                     :     +- LogicalQueryStage Project [d_date_sk#1170], BroadcastQueryStage 34\n                     +- Join LeftSemi, (i_item_sk#1148 = ss_item_sk#745)\n                        :- Project [i_item_sk#1148, i_brand_id#1155, i_class_id#1157, i_category_id#1159]\n                        :  +- Filter (((isnotnull(i_item_sk#1148) AND isnotnull(i_brand_id#1155)) AND isnotnull(i_class_id#1157)) AND isnotnull(i_category_id#1159))\n                        :     +- Relation spark_catalog.tpcds_100.item[i_item_sk#1148,i_item_id#1149,i_rec_start_date#1150,i_rec_end_date#1151,i_item_desc#1152,i_current_price#1153,i_wholesale_cost#1154,i_brand_id#1155,i_brand#1156,i_class_id#1157,i_class#1158,i_category_id#1159,i_category#1160,i_manufact_id#1161,i_manufact#1162,i_size#1163,i_formulation#1164,i_color#1165,i_units#1166,i_container#1167,i_manager_id#1168,i_product_name#1169] parquet\n                        +- Project [i_item_sk#25 AS ss_item_sk#745]\n                           +- Join Inner, (((i_brand_id#32 = brand_id#742) AND (i_class_id#34 = class_id#743)) AND (i_category_id#36 = category_id#744))\n                              :- Project [i_item_sk#25, i_brand_id#32, i_class_id#34, i_category_id#36]\n                              :  +- Filter ((isnotnull(i_brand_id#32) AND isnotnull(i_class_id#34)) AND isnotnull(i_category_id#36))\n                              :     +- Relation spark_catalog.tpcds_100.item[i_item_sk#25,i_item_id#26,i_rec_start_date#27,i_rec_end_date#28,i_item_desc#29,i_current_price#30,i_wholesale_cost#31,i_brand_id#32,i_brand#33,i_class_id#34,i_class#35,i_category_id#36,i_category#37,i_manufact_id#38,i_manufact#39,i_size#40,i_formulation#41,i_color#42,i_units#43,i_container#44,i_manager_id#45,i_product_name#46] parquet\n                              +- Join LeftSemi, (((brand_id#742 <=> i_brand_id#834) AND (class_id#743 <=> i_class_id#836)) AND (category_id#744 <=> i_category_id#838))\n                                 :- Aggregate [brand_id#742, class_id#743, category_id#744], [brand_id#742, class_id#743, category_id#744]\n                                 :  +- Project [i_brand_id#762 AS brand_id#742, i_class_id#764 AS class_id#743, i_category_id#766 AS category_id#744]\n                                 :     +- Join Inner, (ss_item_sk#48 = i_item_sk#755)\n                                 :        :- Project [ss_item_sk#48]\n                                 :        :  +- Join Inner, (ss_sold_date_sk#69 = d_date_sk#70)\n                                 :        :     :- Project [ss_item_sk#48, ss_sold_date_sk#69]\n                                 :        :     :  +- Filter ((isnotnull(ss_item_sk#48) AND isnotnull(ss_sold_date_sk#69)) AND dynamicpruning#1297 [ss_sold_date_sk#69])\n                                 :        :     :     :  +- Project [d_date_sk#70]\n                                 :        :     :     :     +- Filter ((isnotnull(d_year#76) AND ((d_year#76 >= 1998) AND (d_year#76 <= 2000))) AND isnotnull(d_date_sk#70))\n                                 :        :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#70,d_date_id#71,d_date#72,d_month_seq#73,d_week_seq#74,d_quarter_seq#75,d_year#76,d_dow#77,d_moy#78,d_dom#79,d_qoy#80,d_fy_year#81,d_fy_quarter_seq#82,d_fy_week_seq#83,d_day_name#84,d_quarter_name#85,d_holiday#86,d_weekend#87,d_following_holiday#88,d_first_dom#89,d_last_dom#90,d_same_day_ly#91,d_same_day_lq#92,d_current_day#93,... 4 more fields] parquet\n                                 :        :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#47,ss_item_sk#48,ss_customer_sk#49,ss_cdemo_sk#50,ss_hdemo_sk#51,ss_addr_sk#52,ss_store_sk#53,ss_promo_sk#54,ss_ticket_number#55L,ss_quantity#56,ss_wholesale_cost#57,ss_list_price#58,ss_sales_price#59,ss_ext_discount_amt#60,ss_ext_sales_price#61,ss_ext_wholesale_cost#62,ss_ext_list_price#63,ss_ext_tax#64,ss_coupon_amt#65,ss_net_paid#66,ss_net_paid_inc_tax#67,ss_net_profit#68,ss_sold_date_sk#69] parquet\n                                 :        :     +- LogicalQueryStage Project [d_date_sk#70], BroadcastQueryStage 36\n                                 :        +- Join LeftSemi, (((i_brand_id#762 <=> i_brand_id#784) AND (i_class_id#764 <=> i_class_id#786)) AND (i_category_id#766 <=> i_category_id#788))\n                                 :           :- LogicalQueryStage Project [i_item_sk#755, i_brand_id#762, i_class_id#764, i_category_id#766], ShuffleQueryStage 38\n                                 :           +- LogicalQueryStage Project [i_brand_id#784, i_class_id#786, i_category_id#788], ShuffleQueryStage 58\n                                 +- LogicalQueryStage Project [i_brand_id#834, i_class_id#836, i_category_id#838], ShuffleQueryStage 60\n"
      },
      "IM" : {
        "inputSizeInBytes" : 268664924256,
        "inputRowCount" : 2515478524
      },
      "PD" : {
        "0" : [ 5844, 9412, 7071, 5313, 7071, 8556, 7071, 5844, 7071, 5313, 9412, 7071, 9412, 20176, 20176, 7778, 5844, 7778, 6428, 4830, 4390, 18341, 20176, 7071, 5844, 8556, 16674, 10353, 32493, 9412, 3628, 16674, 9412, 8556, 9412, 6428, 8556, 6428, 5844, 16674, 7778, 5313, 4830, 22193, 10353, 6428, 18341, 5844, 7071, 7071, 5844, 7778, 10353, 7071, 7071, 6428, 6428, 9412, 20176, 6428, 16674, 7071, 10353, 8556, 22193, 16674, 6428, 9412, 7778, 9412, 6428, 5844, 6428, 18341, 6428, 9412, 11388, 10353, 20176, 10353, 9412, 6428, 8556, 5844, 9412, 5844, 5844, 18341, 8556, 4390, 13780, 4830, 7071, 4830, 7071, 6428, 20176, 7071, 7778, 7778, 5844, 7071, 11388, 7778, 8556, 6428, 18341, 6428, 6428, 10353, 8556, 22193, 9412, 7778, 5844, 6428, 20176, 5313, 7071, 20176, 24413, 4390, 7071, 7071, 7071, 6428, 20176, 6428, 5844, 10353, 5844, 10353, 15158, 7071, 5844, 20176, 4830, 7778, 5844, 8556, 9412, 7071, 9412, 11388, 5313, 6428, 13780, 4830, 16674, 11388, 6428, 15158, 6428, 20176, 6428, 5313, 7778, 8556, 4390, 22193, 8556, 7778, 5844, 22193, 9412, 7778, 6428, 6428, 11388, 9412, 9412, 7778, 7778, 5313, 6428, 9412, 4830, 11388, 18341, 7778, 7778, 8556, 8556, 6428, 5313, 35743, 6428, 20176, 7778, 10353, 9412, 11388, 20176, 6428, 22193, 10353, 10353, 11388, 7778, 6428 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 16,
        "FinishedTasksNum" : 2,
        "FinishedTasksTotalTimeInMs" : 3127.0,
        "FinishedTasksDistributionInMs" : [ 1290.0, 1290.0, 1837.0, 1837.0, 1837.0 ]
      },
      "StartTimeInMs" : 1702226629128,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 82370,
        "IOBytes" : {
          "Total" : 3420903239,
          "Details" : {
            "IR" : 2733924494,
            "IW" : 0,
            "SR" : 344431542,
            "SW" : 342547203
          }
        }
      }
    },
    "15" : {
      "LQP" : {
        "operators" : {
          "45" : {
            "sign" : 17831375,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 1389912100,
            "rowCount" : 69495605,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_quantity#1007 AS quantity#750, ws_list_price#1009 AS list_price#751] "
          },
          "34" : {
            "sign" : 2019201408,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 17256,
            "rowCount" : 1438,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#900] "
          },
          "67" : {
            "sign" : 1734827371,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 492,
            "rowCount" : 2,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(d_year#1243) AND isnotnull(d_moy#1245)) AND isnotnull(d_dom#1246)) AND (((d_year#1243 = 1998) AND (d_moy#1245 = 12)) AND (d_dom#1246 = 16))) "
          },
          "12" : {
            "sign" : 571393713,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(ss_item_sk#1053) AND isnotnull(ss_sold_date_sk#1074)) AND dynamicpruning#1303 [ss_sold_date_sk#1074]) "
          },
          "66" : {
            "sign" : -79282860,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 24,
            "rowCount" : 2,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_week_seq#1241] "
          },
          "51" : {
            "sign" : -626435234,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 353748,
            "rowCount" : 1438,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(d_year#1030) AND ((d_year#1030 >= 1998) AND (d_year#1030 <= 2000))) AND isnotnull(d_date_sk#1024)) "
          },
          "8" : {
            "sign" : 447227797,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 46207619304,
            "rowCount" : 1925317471,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#1053, ss_quantity#1061, ss_list_price#1063] "
          },
          "73" : {
            "sign" : -1448453368,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 86282466,
            "rowCount" : 202541,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(i_item_sk#1148) AND isnotnull(i_brand_id#1155)) AND isnotnull(i_class_id#1157)) AND isnotnull(i_category_id#1159)) "
          },
          "19" : {
            "sign" : -1755539215,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#1209, d_date_id#1210, d_date#1211, d_month_seq#1212, d_week_seq#1213, d_quarter_seq#1214, d_year#1215, d_dow#1216, d_moy#1217, d_dom#1218, d_qoy#1219, d_fy_year#1220, d_fy_quarter_seq#1221, d_fy_week_seq#1222, d_day_name#1223, d_quarter_name#1224, d_holiday#1225, d_weekend#1226, d_following_holiday#1227, d_first_dom#1228, d_last_dom#1229, d_same_day_ly#1230, d_same_day_lq#1231, d_current_day#1232, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "23" : {
            "sign" : 1540331732,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 4860984,
            "rowCount" : 202541,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_item_sk#1075, i_brand_id#1082, i_class_id#1084, i_category_id#1086] "
          },
          "62" : {
            "sign" : 1179432008,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#1125, ss_item_sk#1126, ss_customer_sk#1127, ss_cdemo_sk#1128, ss_hdemo_sk#1129, ss_addr_sk#1130, ss_store_sk#1131, ss_promo_sk#1132, ss_ticket_number#1133L, ss_quantity#1134, ss_wholesale_cost#1135, ss_list_price#1136, ss_sales_price#1137, ss_ext_discount_amt#1138, ss_ext_sales_price#1139, ss_ext_wholesale_cost#1140, ss_ext_list_price#1141, ss_ext_tax#1142, ss_coupon_amt#1143, ss_net_paid#1144, ss_net_paid_inc_tax#1145, ss_net_profit#1146, ss_sold_date_sk#1147], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "4" : {
            "sign" : -1738172062,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 10408960,
            "rowCount" : 136960,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(sales#731) AND (cast(sales#731 as decimal(32,6)) > cast(scalar-subquery#735 [] as decimal(32,6)))) "
          },
          "40" : {
            "sign" : 1500374164,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 29800787536,
            "rowCount" : 143273017,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(cs_sold_date_sk#961) AND dynamicpruning#1289 [cs_sold_date_sk#961]) "
          },
          "15" : {
            "sign" : 1866012666,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(d_week_seq#1101) AND (d_week_seq#1101 = scalar-subquery#734 [])) AND isnotnull(d_date_sk#1097)) "
          },
          "11" : {
            "sign" : 1222696026,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 7701269884,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#1053, ss_quantity#1061, ss_list_price#1063, ss_sold_date_sk#1074] "
          },
          "9" : {
            "sign" : 178119988,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 61610159072,
            "rowCount" : 1925317471,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#1074 = d_date_sk#1097) "
          },
          "44" : {
            "sign" : -169490734,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#962, d_date_id#963, d_date#964, d_month_seq#965, d_week_seq#966, d_quarter_seq#967, d_year#968, d_dow#969, d_moy#970, d_dom#971, d_qoy#972, d_fy_year#973, d_fy_quarter_seq#974, d_fy_week_seq#975, d_day_name#976, d_quarter_name#977, d_holiday#978, d_weekend#979, d_following_holiday#980, d_first_dom#981, d_last_dom#982, d_same_day_ly#983, d_same_day_lq#984, d_current_day#985, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "33" : {
            "sign" : -1972788865,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#877, ss_item_sk#878, ss_customer_sk#879, ss_cdemo_sk#880, ss_hdemo_sk#881, ss_addr_sk#882, ss_store_sk#883, ss_promo_sk#884, ss_ticket_number#885L, ss_quantity#886, ss_wholesale_cost#887, ss_list_price#888, ss_sales_price#889, ss_ext_discount_amt#890, ss_ext_sales_price#891, ss_ext_wholesale_cost#892, ss_ext_list_price#893, ss_ext_tax#894, ss_coupon_amt#895, ss_net_paid#896, ss_net_paid_inc_tax#897, ss_net_profit#898, ss_sold_date_sk#899], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "22" : {
            "sign" : -1778355751,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 4860984,
            "rowCount" : 202541,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (i_item_sk#1075 = ss_item_sk#745) "
          },
          "56" : {
            "sign" : 271911914,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 11490316840,
            "rowCount" : 287257921,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_item_sk#1126 = i_item_sk#1148) "
          },
          "55" : {
            "sign" : -959073112,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 9192253472,
            "rowCount" : 287257921,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_quantity#1134, ss_list_price#1136, i_brand_id#1155, i_class_id#1157, i_category_id#1159] "
          },
          "26" : {
            "sign" : 1108483851,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 2430492,
            "rowCount" : 202541,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_item_sk#25 AS ss_item_sk#745], BroadcastQueryStage 91 "
          },
          "50" : {
            "sign" : -1100969675,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 17256,
            "rowCount" : 1438,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#1024] "
          },
          "37" : {
            "sign" : 825651901,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 2770325240,
            "rowCount" : 138516262,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_quantity#945 AS quantity#748, cs_list_price#947 AS list_price#749] "
          },
          "68" : {
            "sign" : 813769211,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#1237, d_date_id#1238, d_date#1239, d_month_seq#1240, d_week_seq#1241, d_quarter_seq#1242, d_year#1243, d_dow#1244, d_moy#1245, d_dom#1246, d_qoy#1247, d_fy_year#1248, d_fy_quarter_seq#1249, d_fy_week_seq#1250, d_day_name#1251, d_quarter_name#1252, d_holiday#1253, d_weekend#1254, d_following_holiday#1255, d_first_dom#1256, d_last_dom#1257, d_same_day_ly#1258, d_same_day_lq#1259, d_current_day#1260, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "61" : {
            "sign" : -604473204,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(ss_item_sk#1126) AND isnotnull(ss_sold_date_sk#1147)) AND dynamicpruning#1310 [ss_sold_date_sk#1147]) "
          },
          "13" : {
            "sign" : 913239237,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#1052, ss_item_sk#1053, ss_customer_sk#1054, ss_cdemo_sk#1055, ss_hdemo_sk#1056, ss_addr_sk#1057, ss_store_sk#1058, ss_promo_sk#1059, ss_ticket_number#1060L, ss_quantity#1061, ss_wholesale_cost#1062, ss_list_price#1063, ss_sales_price#1064, ss_ext_discount_amt#1065, ss_ext_sales_price#1066, ss_ext_wholesale_cost#1067, ss_ext_list_price#1068, ss_ext_tax#1069, ss_coupon_amt#1070, ss_net_paid#1071, ss_net_paid_inc_tax#1072, ss_net_profit#1073, ss_sold_date_sk#1074], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "46" : {
            "sign" : 1503367439,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 1945876940,
            "rowCount" : 69495605,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ws_sold_date_sk#1023 = d_date_sk#1024) "
          },
          "24" : {
            "sign" : 579430964,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 86282466,
            "rowCount" : 202541,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(i_item_sk#1075) AND isnotnull(i_brand_id#1082)) AND isnotnull(i_class_id#1084)) AND isnotnull(i_category_id#1086)) "
          },
          "35" : {
            "sign" : -2071970095,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 353748,
            "rowCount" : 1438,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(d_year#906) AND ((d_year#906 >= 1998) AND (d_year#906 <= 2000))) AND isnotnull(d_date_sk#900)) "
          },
          "16" : {
            "sign" : 682718368,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#1097, d_date_id#1098, d_date#1099, d_month_seq#1100, d_week_seq#1101, d_quarter_seq#1102, d_year#1103, d_dow#1104, d_moy#1105, d_dom#1106, d_qoy#1107, d_fy_year#1108, d_fy_quarter_seq#1109, d_fy_week_seq#1110, d_day_name#1111, d_quarter_name#1112, d_holiday#1113, d_weekend#1114, d_following_holiday#1115, d_first_dom#1116, d_last_dom#1117, d_same_day_ly#1118, d_same_day_lq#1119, d_current_day#1120, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "5" : {
            "sign" : -311137114,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 10408960,
            "rowCount" : 136960,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [i_brand_id#1082, i_class_id#1084, i_category_id#1086], [store AS channel#730, i_brand_id#1082, i_class_id#1084, i_category_id#1086, sum((cast(ss_quantity#1061 as decimal(10,0)) * ss_list_price#1063)) AS sales#731, count(1) AS number_sales#732L] "
          },
          "72" : {
            "sign" : -1062759686,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 4860984,
            "rowCount" : 202541,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_item_sk#1148, i_brand_id#1155, i_class_id#1157, i_category_id#1159] "
          },
          "10" : {
            "sign" : 1532047545,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 7701269884,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (ss_item_sk#1053 = ss_item_sk#745) "
          },
          "59" : {
            "sign" : 1957680440,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 7701269884,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (ss_item_sk#1126 = ss_item_sk#745) "
          },
          "48" : {
            "sign" : -1902449141,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 14972593792,
            "rowCount" : 71983624,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(ws_sold_date_sk#1023) AND dynamicpruning#1290 [ws_sold_date_sk#1023]) "
          },
          "21" : {
            "sign" : -21562714,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1048632,
            "rowCount" : 7,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#1097], BroadcastQueryStage 9 "
          },
          "54" : {
            "sign" : 149291703,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 10408960,
            "rowCount" : 136960,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [i_brand_id#1155, i_class_id#1157, i_category_id#1159], [store AS channel#736, i_brand_id#1155, i_class_id#1157, i_category_id#1159, sum((cast(ss_quantity#1134 as decimal(10,0)) * ss_list_price#1136)) AS sales#737, count(1) AS number_sales#738L] "
          },
          "43" : {
            "sign" : -1695423935,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 353748,
            "rowCount" : 1438,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(d_year#968) AND ((d_year#968 >= 1998) AND (d_year#968 <= 2000))) AND isnotnull(d_date_sk#962)) "
          },
          "65" : {
            "sign" : 683629544,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#1170, d_date_id#1171, d_date#1172, d_month_seq#1173, d_week_seq#1174, d_quarter_seq#1175, d_year#1176, d_dow#1177, d_moy#1178, d_dom#1179, d_qoy#1180, d_fy_year#1181, d_fy_quarter_seq#1182, d_fy_week_seq#1183, d_day_name#1184, d_quarter_name#1185, d_holiday#1186, d_weekend#1187, d_following_holiday#1188, d_first_dom#1189, d_last_dom#1190, d_same_day_ly#1191, d_same_day_lq#1192, d_current_day#1193, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "71" : {
            "sign" : -540123806,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 4860984,
            "rowCount" : 202541,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (i_item_sk#1148 = ss_item_sk#745) "
          },
          "57" : {
            "sign" : 342660770,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 46207619304,
            "rowCount" : 1925317471,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#1126, ss_quantity#1134, ss_list_price#1136] "
          },
          "32" : {
            "sign" : 1377797290,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(ss_sold_date_sk#899) AND dynamicpruning#1288 [ss_sold_date_sk#899]) "
          },
          "49" : {
            "sign" : 1698660872,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 14972593792,
            "rowCount" : 71983624,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ws_sold_time_sk#990, ws_ship_date_sk#991, ws_item_sk#992, ws_bill_customer_sk#993, ws_bill_cdemo_sk#994, ws_bill_hdemo_sk#995, ws_bill_addr_sk#996, ws_ship_customer_sk#997, ws_ship_cdemo_sk#998, ws_ship_hdemo_sk#999, ws_ship_addr_sk#1000, ws_web_page_sk#1001, ws_web_site_sk#1002, ws_ship_mode_sk#1003, ws_warehouse_sk#1004, ws_promo_sk#1005, ws_order_number#1006L, ws_quantity#1007, ws_wholesale_cost#1008, ws_list_price#1009, ws_sales_price#1010, ws_ext_discount_amt#1011, ws_ext_sales_price#1012, ws_ext_wholesale_cost#1013, ... 10 more fields], `spark_catalog`.`tpcds_100`.`web_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "6" : {
            "sign" : 199675227,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 9192253472,
            "rowCount" : 287257921,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_quantity#1061, ss_list_price#1063, i_brand_id#1082, i_class_id#1084, i_category_id#1086] "
          },
          "36" : {
            "sign" : -820074406,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#900, d_date_id#901, d_date#902, d_month_seq#903, d_week_seq#904, d_quarter_seq#905, d_year#906, d_dow#907, d_moy#908, d_dom#909, d_qoy#910, d_fy_year#911, d_fy_quarter_seq#912, d_fy_week_seq#913, d_day_name#914, d_quarter_name#915, d_holiday#916, d_weekend#917, d_following_holiday#918, d_first_dom#919, d_last_dom#920, d_same_day_ly#921, d_same_day_lq#922, d_current_day#923, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "1" : {
            "sign" : 231496299,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
            "sizeInBytes" : 19722240,
            "rowCount" : 136960,
            "isRuntime" : false,
            "predicate" : " (unknown) LocalLimit Arguments: 100 "
          },
          "39" : {
            "sign" : 1942236716,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 3438552408,
            "rowCount" : 143273017,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_quantity#945, cs_list_price#947, cs_sold_date_sk#961] "
          },
          "17" : {
            "sign" : -2061501032,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 36,
            "rowCount" : 3,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_week_seq#1213] "
          },
          "25" : {
            "sign" : 73332589,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 86904000,
            "rowCount" : 204000,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [i_item_sk#1075, i_item_id#1076, i_rec_start_date#1077, i_rec_end_date#1078, i_item_desc#1079, i_current_price#1080, i_wholesale_cost#1081, i_brand_id#1082, i_brand#1083, i_class_id#1084, i_class#1085, i_category_id#1086, i_category#1087, i_manufact_id#1088, i_manufact#1089, i_size#1090, i_formulation#1091, i_color#1092, i_units#1093, i_container#1094, i_manager_id#1095, i_product_name#1096], `spark_catalog`.`tpcds_100`.`item`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "60" : {
            "sign" : -303911461,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 7701269884,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#1126, ss_quantity#1134, ss_list_price#1136, ss_sold_date_sk#1147] "
          },
          "14" : {
            "sign" : 707519831,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 876588,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#1097] "
          },
          "47" : {
            "sign" : 49678577,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 1727606976,
            "rowCount" : 71983624,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_quantity#1007, ws_list_price#1009, ws_sold_date_sk#1023] "
          },
          "31" : {
            "sign" : 1776873494,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 6601088472,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_quantity#886, ss_list_price#888, ss_sold_date_sk#899] "
          },
          "69" : {
            "sign" : 1108483913,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 2430492,
            "rowCount" : 202541,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_item_sk#25 AS ss_item_sk#745], BroadcastQueryStage 93 "
          },
          "58" : {
            "sign" : -508787732,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 61610159072,
            "rowCount" : 1925317471,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#1147 = d_date_sk#1170) "
          },
          "64" : {
            "sign" : -1689547051,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(d_week_seq#1174) AND (d_week_seq#1174 = scalar-subquery#740 [])) AND isnotnull(d_date_sk#1170)) "
          },
          "53" : {
            "sign" : -532673722,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 10408960,
            "rowCount" : 136960,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(sales#737) AND (cast(sales#737 as decimal(32,6)) > cast(scalar-subquery#741 [] as decimal(32,6)))) "
          },
          "42" : {
            "sign" : 406087876,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 17256,
            "rowCount" : 1438,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#962] "
          },
          "75" : {
            "sign" : 1108483975,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 2430492,
            "rowCount" : 202541,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_item_sk#25 AS ss_item_sk#745], BroadcastQueryStage 95 "
          },
          "0" : {
            "sign" : -1948456008,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
            "sizeInBytes" : 12000,
            "rowCount" : 100,
            "isRuntime" : false,
            "predicate" : " (unknown) GlobalLimit Arguments: 100 "
          },
          "20" : {
            "sign" : 1108483138,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 2430492,
            "rowCount" : 202541,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_item_sk#25 AS ss_item_sk#745], BroadcastQueryStage 89 "
          },
          "27" : {
            "sign" : -1809172647,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 24,
            "rowCount" : 1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [avg((cast(quantity#746 as decimal(10,0)) * list_price#747)) AS average_sales#752] "
          },
          "70" : {
            "sign" : -1902204624,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1048632,
            "rowCount" : 7,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#1170], BroadcastQueryStage 34 "
          },
          "2" : {
            "sign" : 2031547086,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 19722240,
            "rowCount" : 136960,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [i_brand_id#1082 ASC NULLS FIRST, i_class_id#1084 ASC NULLS FIRST, i_category_id#1086 ASC NULLS FIRST], true "
          },
          "38" : {
            "sign" : 824386657,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 3878455336,
            "rowCount" : 138516262,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cs_sold_date_sk#961 = d_date_sk#962) "
          },
          "18" : {
            "sign" : -1305353512,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 738,
            "rowCount" : 3,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(d_year#1215) AND isnotnull(d_moy#1217)) AND isnotnull(d_dom#1218)) AND (((d_year#1215 = 1999) AND (d_moy#1217 = 12)) AND (d_dom#1218 = 16))) "
          },
          "30" : {
            "sign" : -1804794945,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 7435136380,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#899 = d_date_sk#900) "
          },
          "7" : {
            "sign" : 1605641694,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 11490316840,
            "rowCount" : 287257921,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_item_sk#1053 = i_item_sk#1075) "
          },
          "29" : {
            "sign" : 869525063,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 5310811700,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_quantity#886 AS quantity#746, ss_list_price#888 AS list_price#747] "
          },
          "41" : {
            "sign" : -70077436,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 29800787536,
            "rowCount" : 143273017,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [cs_sold_time_sk#928, cs_ship_date_sk#929, cs_bill_customer_sk#930, cs_bill_cdemo_sk#931, cs_bill_hdemo_sk#932, cs_bill_addr_sk#933, cs_ship_customer_sk#934, cs_ship_cdemo_sk#935, cs_ship_hdemo_sk#936, cs_ship_addr_sk#937, cs_call_center_sk#938, cs_catalog_page_sk#939, cs_ship_mode_sk#940, cs_warehouse_sk#941, cs_item_sk#942, cs_promo_sk#943, cs_order_number#944L, cs_quantity#945, cs_wholesale_cost#946, cs_list_price#947, cs_sales_price#948, cs_ext_discount_amt#949, cs_ext_sales_price#950, cs_ext_wholesale_cost#951, ... 10 more fields], `spark_catalog`.`tpcds_100`.`catalog_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "63" : {
            "sign" : 1096234976,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 876588,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#1170] "
          },
          "3" : {
            "sign" : 408258716,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 19722240,
            "rowCount" : 136960,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (((i_brand_id#1082 = i_brand_id#1155) AND (i_class_id#1084 = i_class_id#1157)) AND (i_category_id#1086 = i_category_id#1159)) "
          },
          "74" : {
            "sign" : -1752719423,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 86904000,
            "rowCount" : 204000,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [i_item_sk#1148, i_item_id#1149, i_rec_start_date#1150, i_rec_end_date#1151, i_item_desc#1152, i_current_price#1153, i_wholesale_cost#1154, i_brand_id#1155, i_brand#1156, i_class_id#1157, i_class#1158, i_category_id#1159, i_category#1160, i_manufact_id#1161, i_manufact#1162, i_size#1163, i_formulation#1164, i_color#1165, i_units#1166, i_container#1167, i_manager_id#1168, i_product_name#1169], `spark_catalog`.`tpcds_100`.`item`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "52" : {
            "sign" : -502763688,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#1024, d_date_id#1025, d_date#1026, d_month_seq#1027, d_week_seq#1028, d_quarter_seq#1029, d_year#1030, d_dow#1031, d_moy#1032, d_dom#1033, d_qoy#1034, d_fy_year#1035, d_fy_quarter_seq#1036, d_fy_week_seq#1037, d_day_name#1038, d_quarter_name#1039, d_holiday#1040, d_weekend#1041, d_following_holiday#1042, d_first_dom#1043, d_last_dom#1044, d_same_day_ly#1045, d_same_day_lq#1046, d_current_day#1047, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "28" : {
            "sign" : -1298322270,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Union",
            "sizeInBytes" : 9471049040,
            "rowCount" : 473552452,
            "isRuntime" : false,
            "predicate" : " (unknown) Union Arguments: false, false "
          }
        },
        "links" : [ {
          "fromId" : 13,
          "fromName" : "LogicalRelation",
          "toId" : 12,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 16,
          "fromName" : "LogicalRelation",
          "toId" : 15,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 19,
          "fromName" : "LogicalRelation",
          "toId" : 18,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 18,
          "fromName" : "Filter",
          "toId" : 17,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 17,
          "fromName" : "Project",
          "toId" : 15,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 15,
          "fromName" : "Filter",
          "toId" : 14,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 14,
          "fromName" : "Project",
          "toId" : 12,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 12,
          "fromName" : "Filter",
          "toId" : 11,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "Project",
          "toId" : 10,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 20,
          "fromName" : "LogicalQueryStage",
          "toId" : 10,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "Join",
          "toId" : 9,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 21,
          "fromName" : "LogicalQueryStage",
          "toId" : 9,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "Join",
          "toId" : 8,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "Project",
          "toId" : 7,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 25,
          "fromName" : "LogicalRelation",
          "toId" : 24,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 24,
          "fromName" : "Filter",
          "toId" : 23,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 23,
          "fromName" : "Project",
          "toId" : 22,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 26,
          "fromName" : "LogicalQueryStage",
          "toId" : 22,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 22,
          "fromName" : "Join",
          "toId" : 7,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Join",
          "toId" : 6,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Project",
          "toId" : 5,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Aggregate",
          "toId" : 4,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 33,
          "fromName" : "LogicalRelation",
          "toId" : 32,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 36,
          "fromName" : "LogicalRelation",
          "toId" : 35,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 35,
          "fromName" : "Filter",
          "toId" : 34,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 34,
          "fromName" : "Project",
          "toId" : 32,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 32,
          "fromName" : "Filter",
          "toId" : 31,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 31,
          "fromName" : "Project",
          "toId" : 30,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 34,
          "fromName" : "Project",
          "toId" : 30,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 30,
          "fromName" : "Join",
          "toId" : 29,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 29,
          "fromName" : "Project",
          "toId" : 28,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 41,
          "fromName" : "LogicalRelation",
          "toId" : 40,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 44,
          "fromName" : "LogicalRelation",
          "toId" : 43,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 43,
          "fromName" : "Filter",
          "toId" : 42,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 42,
          "fromName" : "Project",
          "toId" : 40,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 40,
          "fromName" : "Filter",
          "toId" : 39,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 39,
          "fromName" : "Project",
          "toId" : 38,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 42,
          "fromName" : "Project",
          "toId" : 38,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 38,
          "fromName" : "Join",
          "toId" : 37,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 37,
          "fromName" : "Project",
          "toId" : 28,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 49,
          "fromName" : "LogicalRelation",
          "toId" : 48,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 52,
          "fromName" : "LogicalRelation",
          "toId" : 51,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 51,
          "fromName" : "Filter",
          "toId" : 50,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 50,
          "fromName" : "Project",
          "toId" : 48,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 48,
          "fromName" : "Filter",
          "toId" : 47,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 47,
          "fromName" : "Project",
          "toId" : 46,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 50,
          "fromName" : "Project",
          "toId" : 46,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 46,
          "fromName" : "Join",
          "toId" : 45,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 45,
          "fromName" : "Project",
          "toId" : 28,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 28,
          "fromName" : "Union",
          "toId" : 27,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 27,
          "fromName" : "Aggregate",
          "toId" : 4,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 4,
          "fromName" : "Filter",
          "toId" : 3,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 62,
          "fromName" : "LogicalRelation",
          "toId" : 61,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 65,
          "fromName" : "LogicalRelation",
          "toId" : 64,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 68,
          "fromName" : "LogicalRelation",
          "toId" : 67,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 67,
          "fromName" : "Filter",
          "toId" : 66,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 66,
          "fromName" : "Project",
          "toId" : 64,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 64,
          "fromName" : "Filter",
          "toId" : 63,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 63,
          "fromName" : "Project",
          "toId" : 61,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 61,
          "fromName" : "Filter",
          "toId" : 60,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 60,
          "fromName" : "Project",
          "toId" : 59,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 69,
          "fromName" : "LogicalQueryStage",
          "toId" : 59,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 59,
          "fromName" : "Join",
          "toId" : 58,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 70,
          "fromName" : "LogicalQueryStage",
          "toId" : 58,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 58,
          "fromName" : "Join",
          "toId" : 57,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 57,
          "fromName" : "Project",
          "toId" : 56,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 74,
          "fromName" : "LogicalRelation",
          "toId" : 73,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 73,
          "fromName" : "Filter",
          "toId" : 72,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 72,
          "fromName" : "Project",
          "toId" : 71,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 75,
          "fromName" : "LogicalQueryStage",
          "toId" : 71,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 71,
          "fromName" : "Join",
          "toId" : 56,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 56,
          "fromName" : "Join",
          "toId" : 55,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 55,
          "fromName" : "Project",
          "toId" : 54,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 54,
          "fromName" : "Aggregate",
          "toId" : 53,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 27,
          "fromName" : "Aggregate",
          "toId" : 53,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 53,
          "fromName" : "Filter",
          "toId" : 3,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Join",
          "toId" : 2,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "LocalLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "LocalLimit",
          "toId" : 0,
          "toName" : "GlobalLimit",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [i_brand_id#1082 ASC NULLS FIRST, i_class_id#1084 ASC NULLS FIRST, i_category_id#1086 ASC NULLS FIRST], true\n      +- Join Inner, (((i_brand_id#1082 = i_brand_id#1155) AND (i_class_id#1084 = i_class_id#1157)) AND (i_category_id#1086 = i_category_id#1159))\n         :- Filter (isnotnull(sales#731) AND (cast(sales#731 as decimal(32,6)) > cast(scalar-subquery#735 [] as decimal(32,6))))\n         :  :  +- Aggregate [avg((cast(quantity#746 as decimal(10,0)) * list_price#747)) AS average_sales#752]\n         :  :     +- Union false, false\n         :  :        :- Project [ss_quantity#886 AS quantity#746, ss_list_price#888 AS list_price#747]\n         :  :        :  +- Join Inner, (ss_sold_date_sk#899 = d_date_sk#900)\n         :  :        :     :- Project [ss_quantity#886, ss_list_price#888, ss_sold_date_sk#899]\n         :  :        :     :  +- Filter (isnotnull(ss_sold_date_sk#899) AND dynamicpruning#1288 [ss_sold_date_sk#899])\n         :  :        :     :     :  +- Project [d_date_sk#900]\n         :  :        :     :     :     +- Filter ((isnotnull(d_year#906) AND ((d_year#906 >= 1998) AND (d_year#906 <= 2000))) AND isnotnull(d_date_sk#900))\n         :  :        :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#900,d_date_id#901,d_date#902,d_month_seq#903,d_week_seq#904,d_quarter_seq#905,d_year#906,d_dow#907,d_moy#908,d_dom#909,d_qoy#910,d_fy_year#911,d_fy_quarter_seq#912,d_fy_week_seq#913,d_day_name#914,d_quarter_name#915,d_holiday#916,d_weekend#917,d_following_holiday#918,d_first_dom#919,d_last_dom#920,d_same_day_ly#921,d_same_day_lq#922,d_current_day#923,... 4 more fields] parquet\n         :  :        :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#877,ss_item_sk#878,ss_customer_sk#879,ss_cdemo_sk#880,ss_hdemo_sk#881,ss_addr_sk#882,ss_store_sk#883,ss_promo_sk#884,ss_ticket_number#885L,ss_quantity#886,ss_wholesale_cost#887,ss_list_price#888,ss_sales_price#889,ss_ext_discount_amt#890,ss_ext_sales_price#891,ss_ext_wholesale_cost#892,ss_ext_list_price#893,ss_ext_tax#894,ss_coupon_amt#895,ss_net_paid#896,ss_net_paid_inc_tax#897,ss_net_profit#898,ss_sold_date_sk#899] parquet\n         :  :        :     +- Project [d_date_sk#900]\n         :  :        :        +- Filter ((isnotnull(d_year#906) AND ((d_year#906 >= 1998) AND (d_year#906 <= 2000))) AND isnotnull(d_date_sk#900))\n         :  :        :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#900,d_date_id#901,d_date#902,d_month_seq#903,d_week_seq#904,d_quarter_seq#905,d_year#906,d_dow#907,d_moy#908,d_dom#909,d_qoy#910,d_fy_year#911,d_fy_quarter_seq#912,d_fy_week_seq#913,d_day_name#914,d_quarter_name#915,d_holiday#916,d_weekend#917,d_following_holiday#918,d_first_dom#919,d_last_dom#920,d_same_day_ly#921,d_same_day_lq#922,d_current_day#923,... 4 more fields] parquet\n         :  :        :- Project [cs_quantity#945 AS quantity#748, cs_list_price#947 AS list_price#749]\n         :  :        :  +- Join Inner, (cs_sold_date_sk#961 = d_date_sk#962)\n         :  :        :     :- Project [cs_quantity#945, cs_list_price#947, cs_sold_date_sk#961]\n         :  :        :     :  +- Filter (isnotnull(cs_sold_date_sk#961) AND dynamicpruning#1289 [cs_sold_date_sk#961])\n         :  :        :     :     :  +- Project [d_date_sk#962]\n         :  :        :     :     :     +- Filter ((isnotnull(d_year#968) AND ((d_year#968 >= 1998) AND (d_year#968 <= 2000))) AND isnotnull(d_date_sk#962))\n         :  :        :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#962,d_date_id#963,d_date#964,d_month_seq#965,d_week_seq#966,d_quarter_seq#967,d_year#968,d_dow#969,d_moy#970,d_dom#971,d_qoy#972,d_fy_year#973,d_fy_quarter_seq#974,d_fy_week_seq#975,d_day_name#976,d_quarter_name#977,d_holiday#978,d_weekend#979,d_following_holiday#980,d_first_dom#981,d_last_dom#982,d_same_day_ly#983,d_same_day_lq#984,d_current_day#985,... 4 more fields] parquet\n         :  :        :     :     +- Relation spark_catalog.tpcds_100.catalog_sales[cs_sold_time_sk#928,cs_ship_date_sk#929,cs_bill_customer_sk#930,cs_bill_cdemo_sk#931,cs_bill_hdemo_sk#932,cs_bill_addr_sk#933,cs_ship_customer_sk#934,cs_ship_cdemo_sk#935,cs_ship_hdemo_sk#936,cs_ship_addr_sk#937,cs_call_center_sk#938,cs_catalog_page_sk#939,cs_ship_mode_sk#940,cs_warehouse_sk#941,cs_item_sk#942,cs_promo_sk#943,cs_order_number#944L,cs_quantity#945,cs_wholesale_cost#946,cs_list_price#947,cs_sales_price#948,cs_ext_discount_amt#949,cs_ext_sales_price#950,cs_ext_wholesale_cost#951,... 10 more fields] parquet\n         :  :        :     +- Project [d_date_sk#962]\n         :  :        :        +- Filter ((isnotnull(d_year#968) AND ((d_year#968 >= 1998) AND (d_year#968 <= 2000))) AND isnotnull(d_date_sk#962))\n         :  :        :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#962,d_date_id#963,d_date#964,d_month_seq#965,d_week_seq#966,d_quarter_seq#967,d_year#968,d_dow#969,d_moy#970,d_dom#971,d_qoy#972,d_fy_year#973,d_fy_quarter_seq#974,d_fy_week_seq#975,d_day_name#976,d_quarter_name#977,d_holiday#978,d_weekend#979,d_following_holiday#980,d_first_dom#981,d_last_dom#982,d_same_day_ly#983,d_same_day_lq#984,d_current_day#985,... 4 more fields] parquet\n         :  :        +- Project [ws_quantity#1007 AS quantity#750, ws_list_price#1009 AS list_price#751]\n         :  :           +- Join Inner, (ws_sold_date_sk#1023 = d_date_sk#1024)\n         :  :              :- Project [ws_quantity#1007, ws_list_price#1009, ws_sold_date_sk#1023]\n         :  :              :  +- Filter (isnotnull(ws_sold_date_sk#1023) AND dynamicpruning#1290 [ws_sold_date_sk#1023])\n         :  :              :     :  +- Project [d_date_sk#1024]\n         :  :              :     :     +- Filter ((isnotnull(d_year#1030) AND ((d_year#1030 >= 1998) AND (d_year#1030 <= 2000))) AND isnotnull(d_date_sk#1024))\n         :  :              :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#1024,d_date_id#1025,d_date#1026,d_month_seq#1027,d_week_seq#1028,d_quarter_seq#1029,d_year#1030,d_dow#1031,d_moy#1032,d_dom#1033,d_qoy#1034,d_fy_year#1035,d_fy_quarter_seq#1036,d_fy_week_seq#1037,d_day_name#1038,d_quarter_name#1039,d_holiday#1040,d_weekend#1041,d_following_holiday#1042,d_first_dom#1043,d_last_dom#1044,d_same_day_ly#1045,d_same_day_lq#1046,d_current_day#1047,... 4 more fields] parquet\n         :  :              :     +- Relation spark_catalog.tpcds_100.web_sales[ws_sold_time_sk#990,ws_ship_date_sk#991,ws_item_sk#992,ws_bill_customer_sk#993,ws_bill_cdemo_sk#994,ws_bill_hdemo_sk#995,ws_bill_addr_sk#996,ws_ship_customer_sk#997,ws_ship_cdemo_sk#998,ws_ship_hdemo_sk#999,ws_ship_addr_sk#1000,ws_web_page_sk#1001,ws_web_site_sk#1002,ws_ship_mode_sk#1003,ws_warehouse_sk#1004,ws_promo_sk#1005,ws_order_number#1006L,ws_quantity#1007,ws_wholesale_cost#1008,ws_list_price#1009,ws_sales_price#1010,ws_ext_discount_amt#1011,ws_ext_sales_price#1012,ws_ext_wholesale_cost#1013,... 10 more fields] parquet\n         :  :              +- Project [d_date_sk#1024]\n         :  :                 +- Filter ((isnotnull(d_year#1030) AND ((d_year#1030 >= 1998) AND (d_year#1030 <= 2000))) AND isnotnull(d_date_sk#1024))\n         :  :                    +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#1024,d_date_id#1025,d_date#1026,d_month_seq#1027,d_week_seq#1028,d_quarter_seq#1029,d_year#1030,d_dow#1031,d_moy#1032,d_dom#1033,d_qoy#1034,d_fy_year#1035,d_fy_quarter_seq#1036,d_fy_week_seq#1037,d_day_name#1038,d_quarter_name#1039,d_holiday#1040,d_weekend#1041,d_following_holiday#1042,d_first_dom#1043,d_last_dom#1044,d_same_day_ly#1045,d_same_day_lq#1046,d_current_day#1047,... 4 more fields] parquet\n         :  +- Aggregate [i_brand_id#1082, i_class_id#1084, i_category_id#1086], [store AS channel#730, i_brand_id#1082, i_class_id#1084, i_category_id#1086, sum((cast(ss_quantity#1061 as decimal(10,0)) * ss_list_price#1063)) AS sales#731, count(1) AS number_sales#732L]\n         :     +- Project [ss_quantity#1061, ss_list_price#1063, i_brand_id#1082, i_class_id#1084, i_category_id#1086]\n         :        +- Join Inner, (ss_item_sk#1053 = i_item_sk#1075)\n         :           :- Project [ss_item_sk#1053, ss_quantity#1061, ss_list_price#1063]\n         :           :  +- Join Inner, (ss_sold_date_sk#1074 = d_date_sk#1097)\n         :           :     :- Join LeftSemi, (ss_item_sk#1053 = ss_item_sk#745)\n         :           :     :  :- Project [ss_item_sk#1053, ss_quantity#1061, ss_list_price#1063, ss_sold_date_sk#1074]\n         :           :     :  :  +- Filter ((isnotnull(ss_item_sk#1053) AND isnotnull(ss_sold_date_sk#1074)) AND dynamicpruning#1303 [ss_sold_date_sk#1074])\n         :           :     :  :     :  +- Project [d_date_sk#1097]\n         :           :     :  :     :     +- Filter ((isnotnull(d_week_seq#1101) AND (d_week_seq#1101 = scalar-subquery#734 [])) AND isnotnull(d_date_sk#1097))\n         :           :     :  :     :        :  +- Project [d_week_seq#1213]\n         :           :     :  :     :        :     +- Filter (((isnotnull(d_year#1215) AND isnotnull(d_moy#1217)) AND isnotnull(d_dom#1218)) AND (((d_year#1215 = 1999) AND (d_moy#1217 = 12)) AND (d_dom#1218 = 16)))\n         :           :     :  :     :        :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#1209,d_date_id#1210,d_date#1211,d_month_seq#1212,d_week_seq#1213,d_quarter_seq#1214,d_year#1215,d_dow#1216,d_moy#1217,d_dom#1218,d_qoy#1219,d_fy_year#1220,d_fy_quarter_seq#1221,d_fy_week_seq#1222,d_day_name#1223,d_quarter_name#1224,d_holiday#1225,d_weekend#1226,d_following_holiday#1227,d_first_dom#1228,d_last_dom#1229,d_same_day_ly#1230,d_same_day_lq#1231,d_current_day#1232,... 4 more fields] parquet\n         :           :     :  :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#1097,d_date_id#1098,d_date#1099,d_month_seq#1100,d_week_seq#1101,d_quarter_seq#1102,d_year#1103,d_dow#1104,d_moy#1105,d_dom#1106,d_qoy#1107,d_fy_year#1108,d_fy_quarter_seq#1109,d_fy_week_seq#1110,d_day_name#1111,d_quarter_name#1112,d_holiday#1113,d_weekend#1114,d_following_holiday#1115,d_first_dom#1116,d_last_dom#1117,d_same_day_ly#1118,d_same_day_lq#1119,d_current_day#1120,... 4 more fields] parquet\n         :           :     :  :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#1052,ss_item_sk#1053,ss_customer_sk#1054,ss_cdemo_sk#1055,ss_hdemo_sk#1056,ss_addr_sk#1057,ss_store_sk#1058,ss_promo_sk#1059,ss_ticket_number#1060L,ss_quantity#1061,ss_wholesale_cost#1062,ss_list_price#1063,ss_sales_price#1064,ss_ext_discount_amt#1065,ss_ext_sales_price#1066,ss_ext_wholesale_cost#1067,ss_ext_list_price#1068,ss_ext_tax#1069,ss_coupon_amt#1070,ss_net_paid#1071,ss_net_paid_inc_tax#1072,ss_net_profit#1073,ss_sold_date_sk#1074] parquet\n         :           :     :  +- LogicalQueryStage Project [i_item_sk#25 AS ss_item_sk#745], BroadcastQueryStage 89\n         :           :     +- LogicalQueryStage Project [d_date_sk#1097], BroadcastQueryStage 9\n         :           +- Join LeftSemi, (i_item_sk#1075 = ss_item_sk#745)\n         :              :- Project [i_item_sk#1075, i_brand_id#1082, i_class_id#1084, i_category_id#1086]\n         :              :  +- Filter (((isnotnull(i_item_sk#1075) AND isnotnull(i_brand_id#1082)) AND isnotnull(i_class_id#1084)) AND isnotnull(i_category_id#1086))\n         :              :     +- Relation spark_catalog.tpcds_100.item[i_item_sk#1075,i_item_id#1076,i_rec_start_date#1077,i_rec_end_date#1078,i_item_desc#1079,i_current_price#1080,i_wholesale_cost#1081,i_brand_id#1082,i_brand#1083,i_class_id#1084,i_class#1085,i_category_id#1086,i_category#1087,i_manufact_id#1088,i_manufact#1089,i_size#1090,i_formulation#1091,i_color#1092,i_units#1093,i_container#1094,i_manager_id#1095,i_product_name#1096] parquet\n         :              +- LogicalQueryStage Project [i_item_sk#25 AS ss_item_sk#745], BroadcastQueryStage 91\n         +- Filter (isnotnull(sales#737) AND (cast(sales#737 as decimal(32,6)) > cast(scalar-subquery#741 [] as decimal(32,6))))\n            :  +- Aggregate [avg((cast(quantity#746 as decimal(10,0)) * list_price#747)) AS average_sales#752]\n            :     +- Union false, false\n            :        :- Project [ss_quantity#886 AS quantity#746, ss_list_price#888 AS list_price#747]\n            :        :  +- Join Inner, (ss_sold_date_sk#899 = d_date_sk#900)\n            :        :     :- Project [ss_quantity#886, ss_list_price#888, ss_sold_date_sk#899]\n            :        :     :  +- Filter (isnotnull(ss_sold_date_sk#899) AND dynamicpruning#1288 [ss_sold_date_sk#899])\n            :        :     :     :  +- Project [d_date_sk#900]\n            :        :     :     :     +- Filter ((isnotnull(d_year#906) AND ((d_year#906 >= 1998) AND (d_year#906 <= 2000))) AND isnotnull(d_date_sk#900))\n            :        :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#900,d_date_id#901,d_date#902,d_month_seq#903,d_week_seq#904,d_quarter_seq#905,d_year#906,d_dow#907,d_moy#908,d_dom#909,d_qoy#910,d_fy_year#911,d_fy_quarter_seq#912,d_fy_week_seq#913,d_day_name#914,d_quarter_name#915,d_holiday#916,d_weekend#917,d_following_holiday#918,d_first_dom#919,d_last_dom#920,d_same_day_ly#921,d_same_day_lq#922,d_current_day#923,... 4 more fields] parquet\n            :        :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#877,ss_item_sk#878,ss_customer_sk#879,ss_cdemo_sk#880,ss_hdemo_sk#881,ss_addr_sk#882,ss_store_sk#883,ss_promo_sk#884,ss_ticket_number#885L,ss_quantity#886,ss_wholesale_cost#887,ss_list_price#888,ss_sales_price#889,ss_ext_discount_amt#890,ss_ext_sales_price#891,ss_ext_wholesale_cost#892,ss_ext_list_price#893,ss_ext_tax#894,ss_coupon_amt#895,ss_net_paid#896,ss_net_paid_inc_tax#897,ss_net_profit#898,ss_sold_date_sk#899] parquet\n            :        :     +- Project [d_date_sk#900]\n            :        :        +- Filter ((isnotnull(d_year#906) AND ((d_year#906 >= 1998) AND (d_year#906 <= 2000))) AND isnotnull(d_date_sk#900))\n            :        :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#900,d_date_id#901,d_date#902,d_month_seq#903,d_week_seq#904,d_quarter_seq#905,d_year#906,d_dow#907,d_moy#908,d_dom#909,d_qoy#910,d_fy_year#911,d_fy_quarter_seq#912,d_fy_week_seq#913,d_day_name#914,d_quarter_name#915,d_holiday#916,d_weekend#917,d_following_holiday#918,d_first_dom#919,d_last_dom#920,d_same_day_ly#921,d_same_day_lq#922,d_current_day#923,... 4 more fields] parquet\n            :        :- Project [cs_quantity#945 AS quantity#748, cs_list_price#947 AS list_price#749]\n            :        :  +- Join Inner, (cs_sold_date_sk#961 = d_date_sk#962)\n            :        :     :- Project [cs_quantity#945, cs_list_price#947, cs_sold_date_sk#961]\n            :        :     :  +- Filter (isnotnull(cs_sold_date_sk#961) AND dynamicpruning#1289 [cs_sold_date_sk#961])\n            :        :     :     :  +- Project [d_date_sk#962]\n            :        :     :     :     +- Filter ((isnotnull(d_year#968) AND ((d_year#968 >= 1998) AND (d_year#968 <= 2000))) AND isnotnull(d_date_sk#962))\n            :        :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#962,d_date_id#963,d_date#964,d_month_seq#965,d_week_seq#966,d_quarter_seq#967,d_year#968,d_dow#969,d_moy#970,d_dom#971,d_qoy#972,d_fy_year#973,d_fy_quarter_seq#974,d_fy_week_seq#975,d_day_name#976,d_quarter_name#977,d_holiday#978,d_weekend#979,d_following_holiday#980,d_first_dom#981,d_last_dom#982,d_same_day_ly#983,d_same_day_lq#984,d_current_day#985,... 4 more fields] parquet\n            :        :     :     +- Relation spark_catalog.tpcds_100.catalog_sales[cs_sold_time_sk#928,cs_ship_date_sk#929,cs_bill_customer_sk#930,cs_bill_cdemo_sk#931,cs_bill_hdemo_sk#932,cs_bill_addr_sk#933,cs_ship_customer_sk#934,cs_ship_cdemo_sk#935,cs_ship_hdemo_sk#936,cs_ship_addr_sk#937,cs_call_center_sk#938,cs_catalog_page_sk#939,cs_ship_mode_sk#940,cs_warehouse_sk#941,cs_item_sk#942,cs_promo_sk#943,cs_order_number#944L,cs_quantity#945,cs_wholesale_cost#946,cs_list_price#947,cs_sales_price#948,cs_ext_discount_amt#949,cs_ext_sales_price#950,cs_ext_wholesale_cost#951,... 10 more fields] parquet\n            :        :     +- Project [d_date_sk#962]\n            :        :        +- Filter ((isnotnull(d_year#968) AND ((d_year#968 >= 1998) AND (d_year#968 <= 2000))) AND isnotnull(d_date_sk#962))\n            :        :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#962,d_date_id#963,d_date#964,d_month_seq#965,d_week_seq#966,d_quarter_seq#967,d_year#968,d_dow#969,d_moy#970,d_dom#971,d_qoy#972,d_fy_year#973,d_fy_quarter_seq#974,d_fy_week_seq#975,d_day_name#976,d_quarter_name#977,d_holiday#978,d_weekend#979,d_following_holiday#980,d_first_dom#981,d_last_dom#982,d_same_day_ly#983,d_same_day_lq#984,d_current_day#985,... 4 more fields] parquet\n            :        +- Project [ws_quantity#1007 AS quantity#750, ws_list_price#1009 AS list_price#751]\n            :           +- Join Inner, (ws_sold_date_sk#1023 = d_date_sk#1024)\n            :              :- Project [ws_quantity#1007, ws_list_price#1009, ws_sold_date_sk#1023]\n            :              :  +- Filter (isnotnull(ws_sold_date_sk#1023) AND dynamicpruning#1290 [ws_sold_date_sk#1023])\n            :              :     :  +- Project [d_date_sk#1024]\n            :              :     :     +- Filter ((isnotnull(d_year#1030) AND ((d_year#1030 >= 1998) AND (d_year#1030 <= 2000))) AND isnotnull(d_date_sk#1024))\n            :              :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#1024,d_date_id#1025,d_date#1026,d_month_seq#1027,d_week_seq#1028,d_quarter_seq#1029,d_year#1030,d_dow#1031,d_moy#1032,d_dom#1033,d_qoy#1034,d_fy_year#1035,d_fy_quarter_seq#1036,d_fy_week_seq#1037,d_day_name#1038,d_quarter_name#1039,d_holiday#1040,d_weekend#1041,d_following_holiday#1042,d_first_dom#1043,d_last_dom#1044,d_same_day_ly#1045,d_same_day_lq#1046,d_current_day#1047,... 4 more fields] parquet\n            :              :     +- Relation spark_catalog.tpcds_100.web_sales[ws_sold_time_sk#990,ws_ship_date_sk#991,ws_item_sk#992,ws_bill_customer_sk#993,ws_bill_cdemo_sk#994,ws_bill_hdemo_sk#995,ws_bill_addr_sk#996,ws_ship_customer_sk#997,ws_ship_cdemo_sk#998,ws_ship_hdemo_sk#999,ws_ship_addr_sk#1000,ws_web_page_sk#1001,ws_web_site_sk#1002,ws_ship_mode_sk#1003,ws_warehouse_sk#1004,ws_promo_sk#1005,ws_order_number#1006L,ws_quantity#1007,ws_wholesale_cost#1008,ws_list_price#1009,ws_sales_price#1010,ws_ext_discount_amt#1011,ws_ext_sales_price#1012,ws_ext_wholesale_cost#1013,... 10 more fields] parquet\n            :              +- Project [d_date_sk#1024]\n            :                 +- Filter ((isnotnull(d_year#1030) AND ((d_year#1030 >= 1998) AND (d_year#1030 <= 2000))) AND isnotnull(d_date_sk#1024))\n            :                    +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#1024,d_date_id#1025,d_date#1026,d_month_seq#1027,d_week_seq#1028,d_quarter_seq#1029,d_year#1030,d_dow#1031,d_moy#1032,d_dom#1033,d_qoy#1034,d_fy_year#1035,d_fy_quarter_seq#1036,d_fy_week_seq#1037,d_day_name#1038,d_quarter_name#1039,d_holiday#1040,d_weekend#1041,d_following_holiday#1042,d_first_dom#1043,d_last_dom#1044,d_same_day_ly#1045,d_same_day_lq#1046,d_current_day#1047,... 4 more fields] parquet\n            +- Aggregate [i_brand_id#1155, i_class_id#1157, i_category_id#1159], [store AS channel#736, i_brand_id#1155, i_class_id#1157, i_category_id#1159, sum((cast(ss_quantity#1134 as decimal(10,0)) * ss_list_price#1136)) AS sales#737, count(1) AS number_sales#738L]\n               +- Project [ss_quantity#1134, ss_list_price#1136, i_brand_id#1155, i_class_id#1157, i_category_id#1159]\n                  +- Join Inner, (ss_item_sk#1126 = i_item_sk#1148)\n                     :- Project [ss_item_sk#1126, ss_quantity#1134, ss_list_price#1136]\n                     :  +- Join Inner, (ss_sold_date_sk#1147 = d_date_sk#1170)\n                     :     :- Join LeftSemi, (ss_item_sk#1126 = ss_item_sk#745)\n                     :     :  :- Project [ss_item_sk#1126, ss_quantity#1134, ss_list_price#1136, ss_sold_date_sk#1147]\n                     :     :  :  +- Filter ((isnotnull(ss_item_sk#1126) AND isnotnull(ss_sold_date_sk#1147)) AND dynamicpruning#1310 [ss_sold_date_sk#1147])\n                     :     :  :     :  +- Project [d_date_sk#1170]\n                     :     :  :     :     +- Filter ((isnotnull(d_week_seq#1174) AND (d_week_seq#1174 = scalar-subquery#740 [])) AND isnotnull(d_date_sk#1170))\n                     :     :  :     :        :  +- Project [d_week_seq#1241]\n                     :     :  :     :        :     +- Filter (((isnotnull(d_year#1243) AND isnotnull(d_moy#1245)) AND isnotnull(d_dom#1246)) AND (((d_year#1243 = 1998) AND (d_moy#1245 = 12)) AND (d_dom#1246 = 16)))\n                     :     :  :     :        :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#1237,d_date_id#1238,d_date#1239,d_month_seq#1240,d_week_seq#1241,d_quarter_seq#1242,d_year#1243,d_dow#1244,d_moy#1245,d_dom#1246,d_qoy#1247,d_fy_year#1248,d_fy_quarter_seq#1249,d_fy_week_seq#1250,d_day_name#1251,d_quarter_name#1252,d_holiday#1253,d_weekend#1254,d_following_holiday#1255,d_first_dom#1256,d_last_dom#1257,d_same_day_ly#1258,d_same_day_lq#1259,d_current_day#1260,... 4 more fields] parquet\n                     :     :  :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#1170,d_date_id#1171,d_date#1172,d_month_seq#1173,d_week_seq#1174,d_quarter_seq#1175,d_year#1176,d_dow#1177,d_moy#1178,d_dom#1179,d_qoy#1180,d_fy_year#1181,d_fy_quarter_seq#1182,d_fy_week_seq#1183,d_day_name#1184,d_quarter_name#1185,d_holiday#1186,d_weekend#1187,d_following_holiday#1188,d_first_dom#1189,d_last_dom#1190,d_same_day_ly#1191,d_same_day_lq#1192,d_current_day#1193,... 4 more fields] parquet\n                     :     :  :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#1125,ss_item_sk#1126,ss_customer_sk#1127,ss_cdemo_sk#1128,ss_hdemo_sk#1129,ss_addr_sk#1130,ss_store_sk#1131,ss_promo_sk#1132,ss_ticket_number#1133L,ss_quantity#1134,ss_wholesale_cost#1135,ss_list_price#1136,ss_sales_price#1137,ss_ext_discount_amt#1138,ss_ext_sales_price#1139,ss_ext_wholesale_cost#1140,ss_ext_list_price#1141,ss_ext_tax#1142,ss_coupon_amt#1143,ss_net_paid#1144,ss_net_paid_inc_tax#1145,ss_net_profit#1146,ss_sold_date_sk#1147] parquet\n                     :     :  +- LogicalQueryStage Project [i_item_sk#25 AS ss_item_sk#745], BroadcastQueryStage 93\n                     :     +- LogicalQueryStage Project [d_date_sk#1170], BroadcastQueryStage 34\n                     +- Join LeftSemi, (i_item_sk#1148 = ss_item_sk#745)\n                        :- Project [i_item_sk#1148, i_brand_id#1155, i_class_id#1157, i_category_id#1159]\n                        :  +- Filter (((isnotnull(i_item_sk#1148) AND isnotnull(i_brand_id#1155)) AND isnotnull(i_class_id#1157)) AND isnotnull(i_category_id#1159))\n                        :     +- Relation spark_catalog.tpcds_100.item[i_item_sk#1148,i_item_id#1149,i_rec_start_date#1150,i_rec_end_date#1151,i_item_desc#1152,i_current_price#1153,i_wholesale_cost#1154,i_brand_id#1155,i_brand#1156,i_class_id#1157,i_class#1158,i_category_id#1159,i_category#1160,i_manufact_id#1161,i_manufact#1162,i_size#1163,i_formulation#1164,i_color#1165,i_units#1166,i_container#1167,i_manager_id#1168,i_product_name#1169] parquet\n                        +- LogicalQueryStage Project [i_item_sk#25 AS ss_item_sk#745], BroadcastQueryStage 95\n"
      },
      "IM" : {
        "inputSizeInBytes" : 83799414544,
        "inputRowCount" : 551308884
      },
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 5,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "StartTimeInMs" : 1702226696769,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 14729,
        "IOBytes" : {
          "Total" : 1517177579,
          "Details" : {
            "IR" : 1515967397,
            "IW" : 0,
            "SR" : 605091,
            "SW" : 605091
          }
        }
      }
    },
    "11" : {
      "LQP" : {
        "operators" : {
          "45" : {
            "sign" : -2071970095,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 353748,
            "rowCount" : 1438,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(d_year#906) AND ((d_year#906 >= 1998) AND (d_year#906 <= 2000))) AND isnotnull(d_date_sk#900)) "
          },
          "34" : {
            "sign" : -111220512,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 7627788039024,
            "rowCount" : 211883001084,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (((i_brand_id#32 = brand_id#742) AND (i_class_id#34 = class_id#743)) AND (i_category_id#36 = category_id#744)) "
          },
          "67" : {
            "sign" : 609930370,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 46207619304,
            "rowCount" : 1925317471,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#1126, ss_quantity#1134, ss_list_price#1136] "
          },
          "12" : {
            "sign" : 571393713,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(ss_item_sk#1053) AND isnotnull(ss_sold_date_sk#1074)) AND dynamicpruning#1303 [ss_sold_date_sk#1074]) "
          },
          "66" : {
            "sign" : -400959281,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 11490316840,
            "rowCount" : 287257921,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_item_sk#1126 = i_item_sk#1148) "
          },
          "89" : {
            "sign" : -111219613,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 7627788039024,
            "rowCount" : 211883001084,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (((i_brand_id#32 = brand_id#742) AND (i_class_id#34 = class_id#743)) AND (i_category_id#36 = category_id#744)) "
          },
          "51" : {
            "sign" : -70077436,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 29800787536,
            "rowCount" : 143273017,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [cs_sold_time_sk#928, cs_ship_date_sk#929, cs_bill_customer_sk#930, cs_bill_cdemo_sk#931, cs_bill_hdemo_sk#932, cs_bill_addr_sk#933, cs_ship_customer_sk#934, cs_ship_cdemo_sk#935, cs_ship_hdemo_sk#936, cs_ship_addr_sk#937, cs_call_center_sk#938, cs_catalog_page_sk#939, cs_ship_mode_sk#940, cs_warehouse_sk#941, cs_item_sk#942, cs_promo_sk#943, cs_order_number#944L, cs_quantity#945, cs_wholesale_cost#946, cs_list_price#947, cs_sales_price#948, cs_ext_discount_amt#949, cs_ext_sales_price#950, cs_ext_wholesale_cost#951, ... 10 more fields], `spark_catalog`.`tpcds_100`.`catalog_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "84" : {
            "sign" : 1244416893,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 4860984,
            "rowCount" : 202541,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (i_item_sk#1148 = ss_item_sk#745) "
          },
          "8" : {
            "sign" : 2120175417,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 46207619304,
            "rowCount" : 1925317471,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#1053, ss_quantity#1061, ss_list_price#1063] "
          },
          "73" : {
            "sign" : 1096234976,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 876588,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#1170] "
          },
          "78" : {
            "sign" : 813769211,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#1237, d_date_id#1238, d_date#1239, d_month_seq#1240, d_week_seq#1241, d_quarter_seq#1242, d_year#1243, d_dow#1244, d_moy#1245, d_dom#1246, d_qoy#1247, d_fy_year#1248, d_fy_quarter_seq#1249, d_fy_week_seq#1250, d_day_name#1251, d_quarter_name#1252, d_holiday#1253, d_weekend#1254, d_following_holiday#1255, d_first_dom#1256, d_last_dom#1257, d_same_day_ly#1258, d_same_day_lq#1259, d_current_day#1260, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "19" : {
            "sign" : -1755539215,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#1209, d_date_id#1210, d_date#1211, d_month_seq#1212, d_week_seq#1213, d_quarter_seq#1214, d_year#1215, d_dow#1216, d_moy#1217, d_dom#1218, d_qoy#1219, d_fy_year#1220, d_fy_quarter_seq#1221, d_fy_week_seq#1222, d_day_name#1223, d_quarter_name#1224, d_holiday#1225, d_weekend#1226, d_following_holiday#1227, d_first_dom#1228, d_last_dom#1229, d_same_day_ly#1230, d_same_day_lq#1231, d_current_day#1232, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "23" : {
            "sign" : -1756391561,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 86282466,
            "rowCount" : 202541,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(i_brand_id#32) AND isnotnull(i_class_id#34)) AND isnotnull(i_category_id#36)) "
          },
          "62" : {
            "sign" : -502763688,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#1024, d_date_id#1025, d_date#1026, d_month_seq#1027, d_week_seq#1028, d_quarter_seq#1029, d_year#1030, d_dow#1031, d_moy#1032, d_dom#1033, d_qoy#1034, d_fy_year#1035, d_fy_quarter_seq#1036, d_fy_week_seq#1037, d_day_name#1038, d_quarter_name#1039, d_holiday#1040, d_weekend#1041, d_following_holiday#1042, d_first_dom#1043, d_last_dom#1044, d_same_day_ly#1045, d_same_day_lq#1046, d_current_day#1047, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "4" : {
            "sign" : 1843205480,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 10408960,
            "rowCount" : 136960,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(sales#731) AND (cast(sales#731 as decimal(32,6)) > cast(scalar-subquery#735 [] as decimal(32,6)))) "
          },
          "88" : {
            "sign" : -877530092,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 2542596013008,
            "rowCount" : 211883001084,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_item_sk#25 AS ss_item_sk#745] "
          },
          "77" : {
            "sign" : 1734827371,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 492,
            "rowCount" : 2,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(d_year#1243) AND isnotnull(d_moy#1245)) AND isnotnull(d_dom#1246)) AND (((d_year#1243 = 1998) AND (d_moy#1245 = 12)) AND (d_dom#1246 = 16))) "
          },
          "40" : {
            "sign" : -1804794945,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 7435136380,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#899 = d_date_sk#900) "
          },
          "15" : {
            "sign" : 1866012666,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(d_week_seq#1101) AND (d_week_seq#1101 = scalar-subquery#734 [])) AND isnotnull(d_date_sk#1097)) "
          },
          "11" : {
            "sign" : 1222696026,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 7701269884,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#1053, ss_quantity#1061, ss_list_price#1063, ss_sold_date_sk#1074] "
          },
          "90" : {
            "sign" : 674494984,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 20922480,
            "rowCount" : 1046124,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (((brand_id#742 <=> i_brand_id#834) AND (class_id#743 <=> i_class_id#836)) AND (category_id#744 <=> i_category_id#838)) "
          },
          "9" : {
            "sign" : 2077626158,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 61610159072,
            "rowCount" : 1925317471,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#1074 = d_date_sk#1097) "
          },
          "44" : {
            "sign" : 2019201408,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 17256,
            "rowCount" : 1438,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#900] "
          },
          "33" : {
            "sign" : -877530991,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 2542596013008,
            "rowCount" : 211883001084,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_item_sk#25 AS ss_item_sk#745] "
          },
          "22" : {
            "sign" : 2089743597,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 4860984,
            "rowCount" : 202541,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_item_sk#25, i_brand_id#32, i_class_id#34, i_category_id#36] "
          },
          "56" : {
            "sign" : 1503367439,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 1945876940,
            "rowCount" : 69495605,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ws_sold_date_sk#1023 = d_date_sk#1024) "
          },
          "55" : {
            "sign" : 17831375,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 1389912100,
            "rowCount" : 69495605,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_quantity#1007 AS quantity#750, ws_list_price#1009 AS list_price#751] "
          },
          "26" : {
            "sign" : 2085872115,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 33475968,
            "rowCount" : 1046124,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [brand_id#742, class_id#743, category_id#744], [brand_id#742, class_id#743, category_id#744], HashAggregate(keys=[brand_id#742, class_id#743, category_id#744], functions=[]) "
          },
          "50" : {
            "sign" : 1500374164,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 29800787536,
            "rowCount" : 143273017,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(cs_sold_date_sk#961) AND dynamicpruning#1289 [cs_sold_date_sk#961]) "
          },
          "37" : {
            "sign" : -1809172647,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 24,
            "rowCount" : 1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [avg((cast(quantity#746 as decimal(10,0)) * list_price#747)) AS average_sales#752] "
          },
          "68" : {
            "sign" : 1961765640,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 61610159072,
            "rowCount" : 1925317471,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#1147 = d_date_sk#1170) "
          },
          "61" : {
            "sign" : -626435234,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 353748,
            "rowCount" : 1438,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(d_year#1030) AND ((d_year#1030 >= 1998) AND (d_year#1030 <= 2000))) AND isnotnull(d_date_sk#1024)) "
          },
          "13" : {
            "sign" : 913239237,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#1052, ss_item_sk#1053, ss_customer_sk#1054, ss_cdemo_sk#1055, ss_hdemo_sk#1056, ss_addr_sk#1057, ss_store_sk#1058, ss_promo_sk#1059, ss_ticket_number#1060L, ss_quantity#1061, ss_wholesale_cost#1062, ss_list_price#1063, ss_sales_price#1064, ss_ext_discount_amt#1065, ss_ext_sales_price#1066, ss_ext_wholesale_cost#1067, ss_ext_list_price#1068, ss_ext_tax#1069, ss_coupon_amt#1070, ss_net_paid#1071, ss_net_paid_inc_tax#1072, ss_net_profit#1073, ss_sold_date_sk#1074], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "46" : {
            "sign" : -820074406,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#900, d_date_id#901, d_date#902, d_month_seq#903, d_week_seq#904, d_quarter_seq#905, d_year#906, d_dow#907, d_moy#908, d_dom#909, d_qoy#910, d_fy_year#911, d_fy_quarter_seq#912, d_fy_week_seq#913, d_day_name#914, d_quarter_name#915, d_holiday#916, d_weekend#917, d_following_holiday#918, d_first_dom#919, d_last_dom#920, d_same_day_ly#921, d_same_day_lq#922, d_current_day#923, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "24" : {
            "sign" : 2096275601,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 86904000,
            "rowCount" : 204000,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [i_item_sk#25, i_item_id#26, i_rec_start_date#27, i_rec_end_date#28, i_item_desc#29, i_current_price#30, i_wholesale_cost#31, i_brand_id#32, i_brand#33, i_class_id#34, i_class#35, i_category_id#36, i_category#37, i_manufact_id#38, i_manufact#39, i_size#40, i_formulation#41, i_color#42, i_units#43, i_container#44, i_manager_id#45, i_product_name#46], `spark_catalog`.`tpcds_100`.`item`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "83" : {
            "sign" : -1902204624,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1048632,
            "rowCount" : 7,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#1170], BroadcastQueryStage 34 "
          },
          "35" : {
            "sign" : 674494085,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 20922480,
            "rowCount" : 1046124,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (((brand_id#742 <=> i_brand_id#834) AND (class_id#743 <=> i_class_id#836)) AND (category_id#744 <=> i_category_id#838)) "
          },
          "16" : {
            "sign" : 682718368,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#1097, d_date_id#1098, d_date#1099, d_month_seq#1100, d_week_seq#1101, d_quarter_seq#1102, d_year#1103, d_dow#1104, d_moy#1105, d_dom#1106, d_qoy#1107, d_fy_year#1108, d_fy_quarter_seq#1109, d_fy_week_seq#1110, d_day_name#1111, d_quarter_name#1112, d_holiday#1113, d_weekend#1114, d_following_holiday#1115, d_first_dom#1116, d_last_dom#1117, d_same_day_ly#1118, d_same_day_lq#1119, d_current_day#1120, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "79" : {
            "sign" : -877530867,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 2542596013008,
            "rowCount" : 211883001084,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_item_sk#25 AS ss_item_sk#745] "
          },
          "5" : {
            "sign" : 921867656,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 10408960,
            "rowCount" : 136960,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [i_brand_id#1082, i_class_id#1084, i_category_id#1086], [store AS channel#730, i_brand_id#1082, i_class_id#1084, i_category_id#1086, sum((cast(ss_quantity#1061 as decimal(10,0)) * ss_list_price#1063)) AS sales#731, count(1) AS number_sales#732L] "
          },
          "72" : {
            "sign" : 1179432008,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#1125, ss_item_sk#1126, ss_customer_sk#1127, ss_cdemo_sk#1128, ss_hdemo_sk#1129, ss_addr_sk#1130, ss_store_sk#1131, ss_promo_sk#1132, ss_ticket_number#1133L, ss_quantity#1134, ss_wholesale_cost#1135, ss_list_price#1136, ss_sales_price#1137, ss_ext_discount_amt#1138, ss_ext_sales_price#1139, ss_ext_wholesale_cost#1140, ss_ext_list_price#1141, ss_ext_tax#1142, ss_coupon_amt#1143, ss_net_paid#1144, ss_net_paid_inc_tax#1145, ss_net_profit#1146, ss_sold_date_sk#1147], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "10" : {
            "sign" : 2018775951,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 7701269884,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (ss_item_sk#1053 = ss_item_sk#745) "
          },
          "59" : {
            "sign" : 1698660872,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 14972593792,
            "rowCount" : 71983624,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ws_sold_time_sk#990, ws_ship_date_sk#991, ws_item_sk#992, ws_bill_customer_sk#993, ws_bill_cdemo_sk#994, ws_bill_hdemo_sk#995, ws_bill_addr_sk#996, ws_ship_customer_sk#997, ws_ship_cdemo_sk#998, ws_ship_hdemo_sk#999, ws_ship_addr_sk#1000, ws_web_page_sk#1001, ws_web_site_sk#1002, ws_ship_mode_sk#1003, ws_warehouse_sk#1004, ws_promo_sk#1005, ws_order_number#1006L, ws_quantity#1007, ws_wholesale_cost#1008, ws_list_price#1009, ws_sales_price#1010, ws_ext_discount_amt#1011, ws_ext_sales_price#1012, ws_ext_wholesale_cost#1013, ... 10 more fields], `spark_catalog`.`tpcds_100`.`web_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "87" : {
            "sign" : -1752719423,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 86904000,
            "rowCount" : 204000,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [i_item_sk#1148, i_item_id#1149, i_rec_start_date#1150, i_rec_end_date#1151, i_item_desc#1152, i_current_price#1153, i_wholesale_cost#1154, i_brand_id#1155, i_brand#1156, i_class_id#1157, i_class#1158, i_category_id#1159, i_category#1160, i_manufact_id#1161, i_manufact#1162, i_size#1163, i_formulation#1164, i_color#1165, i_units#1166, i_container#1167, i_manager_id#1168, i_product_name#1169], `spark_catalog`.`tpcds_100`.`item`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "48" : {
            "sign" : 824386657,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 3878455336,
            "rowCount" : 138516262,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cs_sold_date_sk#961 = d_date_sk#962) "
          },
          "21" : {
            "sign" : -111221287,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 7627788039024,
            "rowCount" : 211883001084,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (((i_brand_id#32 = brand_id#742) AND (i_class_id#34 = class_id#743)) AND (i_category_id#36 = category_id#744)) "
          },
          "76" : {
            "sign" : -79282860,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 24,
            "rowCount" : 2,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_week_seq#1241] "
          },
          "54" : {
            "sign" : -169490734,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#962, d_date_id#963, d_date#964, d_month_seq#965, d_week_seq#966, d_quarter_seq#967, d_year#968, d_dow#969, d_moy#970, d_dom#971, d_qoy#972, d_fy_year#973, d_fy_quarter_seq#974, d_fy_week_seq#975, d_day_name#976, d_quarter_name#977, d_holiday#978, d_weekend#979, d_following_holiday#980, d_first_dom#981, d_last_dom#982, d_same_day_ly#983, d_same_day_lq#984, d_current_day#985, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "43" : {
            "sign" : -1972788865,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#877, ss_item_sk#878, ss_customer_sk#879, ss_cdemo_sk#880, ss_hdemo_sk#881, ss_addr_sk#882, ss_store_sk#883, ss_promo_sk#884, ss_ticket_number#885L, ss_quantity#886, ss_wholesale_cost#887, ss_list_price#888, ss_sales_price#889, ss_ext_discount_amt#890, ss_ext_sales_price#891, ss_ext_wholesale_cost#892, ss_ext_list_price#893, ss_ext_tax#894, ss_coupon_amt#895, ss_net_paid#896, ss_net_paid_inc_tax#897, ss_net_profit#898, ss_sold_date_sk#899], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "65" : {
            "sign" : 144049429,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 9192253472,
            "rowCount" : 287257921,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_quantity#1134, ss_list_price#1136, i_brand_id#1155, i_class_id#1157, i_category_id#1159] "
          },
          "71" : {
            "sign" : -604473204,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(ss_item_sk#1126) AND isnotnull(ss_sold_date_sk#1147)) AND dynamicpruning#1310 [ss_sold_date_sk#1147]) "
          },
          "57" : {
            "sign" : 49678577,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 1727606976,
            "rowCount" : 71983624,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_quantity#1007, ws_list_price#1009, ws_sold_date_sk#1023] "
          },
          "32" : {
            "sign" : 73332589,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 86904000,
            "rowCount" : 204000,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [i_item_sk#1075, i_item_id#1076, i_rec_start_date#1077, i_rec_end_date#1078, i_item_desc#1079, i_current_price#1080, i_wholesale_cost#1081, i_brand_id#1082, i_brand#1083, i_class_id#1084, i_class#1085, i_category_id#1086, i_category#1087, i_manufact_id#1088, i_manufact#1089, i_size#1090, i_formulation#1091, i_color#1092, i_units#1093, i_container#1094, i_manager_id#1095, i_product_name#1096], `spark_catalog`.`tpcds_100`.`item`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "80" : {
            "sign" : -111220388,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 7627788039024,
            "rowCount" : 211883001084,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (((i_brand_id#32 = brand_id#742) AND (i_class_id#34 = class_id#743)) AND (i_category_id#36 = category_id#744)) "
          },
          "82" : {
            "sign" : -365670467,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1379777760,
            "rowCount" : 43118055,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_brand_id#834, i_class_id#836, i_category_id#838], ShuffleQueryStage 56 "
          },
          "49" : {
            "sign" : 1942236716,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 3438552408,
            "rowCount" : 143273017,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_quantity#945, cs_list_price#947, cs_sold_date_sk#961] "
          },
          "6" : {
            "sign" : 1118516257,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 9192253472,
            "rowCount" : 287257921,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_quantity#1061, ss_list_price#1063, i_brand_id#1082, i_class_id#1084, i_category_id#1086] "
          },
          "36" : {
            "sign" : -365670591,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1379777760,
            "rowCount" : 43118055,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_brand_id#834, i_class_id#836, i_category_id#838], ShuffleQueryStage 52 "
          },
          "1" : {
            "sign" : -1563674126,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
            "sizeInBytes" : 19722240,
            "rowCount" : 136960,
            "isRuntime" : false,
            "predicate" : " (unknown) LocalLimit Arguments: 100 "
          },
          "39" : {
            "sign" : 869525063,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 5310811700,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_quantity#886 AS quantity#746, ss_list_price#888 AS list_price#747] "
          },
          "17" : {
            "sign" : -2061501032,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 36,
            "rowCount" : 3,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_week_seq#1213] "
          },
          "25" : {
            "sign" : 674493310,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 20922480,
            "rowCount" : 1046124,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (((brand_id#742 <=> i_brand_id#834) AND (class_id#743 <=> i_class_id#836)) AND (category_id#744 <=> i_category_id#838)) "
          },
          "60" : {
            "sign" : -1100969675,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 17256,
            "rowCount" : 1438,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#1024] "
          },
          "14" : {
            "sign" : 707519831,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 876588,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#1097] "
          },
          "47" : {
            "sign" : 825651901,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 2770325240,
            "rowCount" : 138516262,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_quantity#945 AS quantity#748, cs_list_price#947 AS list_price#749] "
          },
          "31" : {
            "sign" : 579430964,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 86282466,
            "rowCount" : 202541,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(i_item_sk#1075) AND isnotnull(i_brand_id#1082)) AND isnotnull(i_class_id#1084)) AND isnotnull(i_category_id#1086)) "
          },
          "69" : {
            "sign" : -1907808118,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 7701269884,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (ss_item_sk#1126 = ss_item_sk#745) "
          },
          "58" : {
            "sign" : -1902449141,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 14972593792,
            "rowCount" : 71983624,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(ws_sold_date_sk#1023) AND dynamicpruning#1290 [ws_sold_date_sk#1023]) "
          },
          "64" : {
            "sign" : -1932050276,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 10408960,
            "rowCount" : 136960,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [i_brand_id#1155, i_class_id#1157, i_category_id#1159], [store AS channel#736, i_brand_id#1155, i_class_id#1157, i_category_id#1159, sum((cast(ss_quantity#1134 as decimal(10,0)) * ss_list_price#1136)) AS sales#737, count(1) AS number_sales#738L] "
          },
          "53" : {
            "sign" : -1695423935,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 353748,
            "rowCount" : 1438,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(d_year#968) AND ((d_year#968 >= 1998) AND (d_year#968 <= 2000))) AND isnotnull(d_date_sk#962)) "
          },
          "42" : {
            "sign" : 1377797290,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(ss_sold_date_sk#899) AND dynamicpruning#1288 [ss_sold_date_sk#899]) "
          },
          "75" : {
            "sign" : 683629544,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#1170, d_date_id#1171, d_date#1172, d_month_seq#1173, d_week_seq#1174, d_quarter_seq#1175, d_year#1176, d_dow#1177, d_moy#1178, d_dom#1179, d_qoy#1180, d_fy_year#1181, d_fy_quarter_seq#1182, d_fy_week_seq#1183, d_day_name#1184, d_quarter_name#1185, d_holiday#1186, d_weekend#1187, d_following_holiday#1188, d_first_dom#1189, d_last_dom#1190, d_same_day_ly#1191, d_same_day_lq#1192, d_current_day#1193, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "0" : {
            "sign" : -2070380729,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
            "sizeInBytes" : 12000,
            "rowCount" : 100,
            "isRuntime" : false,
            "predicate" : " (unknown) GlobalLimit Arguments: 100 "
          },
          "20" : {
            "sign" : -877531766,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 2542596013008,
            "rowCount" : 211883001084,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_item_sk#25 AS ss_item_sk#745] "
          },
          "27" : {
            "sign" : -365671366,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1379777760,
            "rowCount" : 43118055,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_brand_id#834, i_class_id#836, i_category_id#838], ShuffleQueryStage 48 "
          },
          "70" : {
            "sign" : -303911461,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 7701269884,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#1126, ss_quantity#1134, ss_list_price#1136, ss_sold_date_sk#1147] "
          },
          "2" : {
            "sign" : 49162845,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 19722240,
            "rowCount" : 136960,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [i_brand_id#1082 ASC NULLS FIRST, i_class_id#1084 ASC NULLS FIRST, i_category_id#1086 ASC NULLS FIRST], true "
          },
          "86" : {
            "sign" : -1448453368,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 86282466,
            "rowCount" : 202541,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(i_item_sk#1148) AND isnotnull(i_brand_id#1155)) AND isnotnull(i_class_id#1157)) AND isnotnull(i_category_id#1159)) "
          },
          "38" : {
            "sign" : -1298322270,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Union",
            "sizeInBytes" : 9471049040,
            "rowCount" : 473552452,
            "isRuntime" : false,
            "predicate" : " (unknown) Union Arguments: false, false "
          },
          "81" : {
            "sign" : 674494209,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 20922480,
            "rowCount" : 1046124,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (((brand_id#742 <=> i_brand_id#834) AND (class_id#743 <=> i_class_id#836)) AND (category_id#744 <=> i_category_id#838)) "
          },
          "18" : {
            "sign" : -1305353512,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 738,
            "rowCount" : 3,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(d_year#1215) AND isnotnull(d_moy#1217)) AND isnotnull(d_dom#1218)) AND (((d_year#1215 = 1999) AND (d_moy#1217 = 12)) AND (d_dom#1218 = 16))) "
          },
          "30" : {
            "sign" : 1540331732,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 4860984,
            "rowCount" : 202541,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_item_sk#1075, i_brand_id#1082, i_class_id#1084, i_category_id#1086] "
          },
          "7" : {
            "sign" : -1504880320,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 11490316840,
            "rowCount" : 287257921,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_item_sk#1053 = i_item_sk#1075) "
          },
          "29" : {
            "sign" : 1990259437,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 4860984,
            "rowCount" : 202541,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (i_item_sk#1075 = ss_item_sk#745) "
          },
          "41" : {
            "sign" : 1776873494,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 6601088472,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_quantity#886, ss_list_price#888, ss_sold_date_sk#899] "
          },
          "63" : {
            "sign" : -831896269,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 10408960,
            "rowCount" : 136960,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(sales#737) AND (cast(sales#737 as decimal(32,6)) > cast(scalar-subquery#741 [] as decimal(32,6)))) "
          },
          "3" : {
            "sign" : 1243852067,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 19722240,
            "rowCount" : 136960,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (((i_brand_id#1082 = i_brand_id#1155) AND (i_class_id#1084 = i_class_id#1157)) AND (i_category_id#1086 = i_category_id#1159)) "
          },
          "74" : {
            "sign" : -1689547051,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(d_week_seq#1174) AND (d_week_seq#1174 = scalar-subquery#740 [])) AND isnotnull(d_date_sk#1170)) "
          },
          "91" : {
            "sign" : -365669692,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1379777760,
            "rowCount" : 43118055,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_brand_id#834, i_class_id#836, i_category_id#838], ShuffleQueryStage 60 "
          },
          "52" : {
            "sign" : 406087876,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 17256,
            "rowCount" : 1438,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#962] "
          },
          "85" : {
            "sign" : -1062759686,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 4860984,
            "rowCount" : 202541,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_item_sk#1148, i_brand_id#1155, i_class_id#1157, i_category_id#1159] "
          },
          "28" : {
            "sign" : -21562714,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1048632,
            "rowCount" : 7,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#1097], BroadcastQueryStage 9 "
          }
        },
        "links" : [ {
          "fromId" : 13,
          "fromName" : "LogicalRelation",
          "toId" : 12,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 16,
          "fromName" : "LogicalRelation",
          "toId" : 15,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 19,
          "fromName" : "LogicalRelation",
          "toId" : 18,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 18,
          "fromName" : "Filter",
          "toId" : 17,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 17,
          "fromName" : "Project",
          "toId" : 15,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 15,
          "fromName" : "Filter",
          "toId" : 14,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 14,
          "fromName" : "Project",
          "toId" : 12,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 12,
          "fromName" : "Filter",
          "toId" : 11,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "Project",
          "toId" : 10,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 24,
          "fromName" : "LogicalRelation",
          "toId" : 23,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 23,
          "fromName" : "Filter",
          "toId" : 22,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 22,
          "fromName" : "Project",
          "toId" : 21,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 26,
          "fromName" : "LogicalQueryStage",
          "toId" : 25,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 27,
          "fromName" : "LogicalQueryStage",
          "toId" : 25,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 25,
          "fromName" : "Join",
          "toId" : 21,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 21,
          "fromName" : "Join",
          "toId" : 20,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 20,
          "fromName" : "Project",
          "toId" : 10,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "Join",
          "toId" : 9,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 28,
          "fromName" : "LogicalQueryStage",
          "toId" : 9,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "Join",
          "toId" : 8,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "Project",
          "toId" : 7,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 32,
          "fromName" : "LogicalRelation",
          "toId" : 31,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 31,
          "fromName" : "Filter",
          "toId" : 30,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 30,
          "fromName" : "Project",
          "toId" : 29,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 22,
          "fromName" : "Project",
          "toId" : 34,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 26,
          "fromName" : "LogicalQueryStage",
          "toId" : 35,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 36,
          "fromName" : "LogicalQueryStage",
          "toId" : 35,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 35,
          "fromName" : "Join",
          "toId" : 34,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 34,
          "fromName" : "Join",
          "toId" : 33,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 33,
          "fromName" : "Project",
          "toId" : 29,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 29,
          "fromName" : "Join",
          "toId" : 7,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Join",
          "toId" : 6,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Project",
          "toId" : 5,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Aggregate",
          "toId" : 4,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 43,
          "fromName" : "LogicalRelation",
          "toId" : 42,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 46,
          "fromName" : "LogicalRelation",
          "toId" : 45,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 45,
          "fromName" : "Filter",
          "toId" : 44,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 44,
          "fromName" : "Project",
          "toId" : 42,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 42,
          "fromName" : "Filter",
          "toId" : 41,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 41,
          "fromName" : "Project",
          "toId" : 40,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 44,
          "fromName" : "Project",
          "toId" : 40,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 40,
          "fromName" : "Join",
          "toId" : 39,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 39,
          "fromName" : "Project",
          "toId" : 38,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 51,
          "fromName" : "LogicalRelation",
          "toId" : 50,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 54,
          "fromName" : "LogicalRelation",
          "toId" : 53,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 53,
          "fromName" : "Filter",
          "toId" : 52,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 52,
          "fromName" : "Project",
          "toId" : 50,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 50,
          "fromName" : "Filter",
          "toId" : 49,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 49,
          "fromName" : "Project",
          "toId" : 48,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 52,
          "fromName" : "Project",
          "toId" : 48,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 48,
          "fromName" : "Join",
          "toId" : 47,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 47,
          "fromName" : "Project",
          "toId" : 38,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 59,
          "fromName" : "LogicalRelation",
          "toId" : 58,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 62,
          "fromName" : "LogicalRelation",
          "toId" : 61,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 61,
          "fromName" : "Filter",
          "toId" : 60,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 60,
          "fromName" : "Project",
          "toId" : 58,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 58,
          "fromName" : "Filter",
          "toId" : 57,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 57,
          "fromName" : "Project",
          "toId" : 56,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 60,
          "fromName" : "Project",
          "toId" : 56,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 56,
          "fromName" : "Join",
          "toId" : 55,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 55,
          "fromName" : "Project",
          "toId" : 38,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 38,
          "fromName" : "Union",
          "toId" : 37,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 37,
          "fromName" : "Aggregate",
          "toId" : 4,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 4,
          "fromName" : "Filter",
          "toId" : 3,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 72,
          "fromName" : "LogicalRelation",
          "toId" : 71,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 75,
          "fromName" : "LogicalRelation",
          "toId" : 74,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 78,
          "fromName" : "LogicalRelation",
          "toId" : 77,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 77,
          "fromName" : "Filter",
          "toId" : 76,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 76,
          "fromName" : "Project",
          "toId" : 74,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 74,
          "fromName" : "Filter",
          "toId" : 73,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 73,
          "fromName" : "Project",
          "toId" : 71,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 71,
          "fromName" : "Filter",
          "toId" : 70,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 70,
          "fromName" : "Project",
          "toId" : 69,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 22,
          "fromName" : "Project",
          "toId" : 80,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 26,
          "fromName" : "LogicalQueryStage",
          "toId" : 81,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 82,
          "fromName" : "LogicalQueryStage",
          "toId" : 81,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 81,
          "fromName" : "Join",
          "toId" : 80,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 80,
          "fromName" : "Join",
          "toId" : 79,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 79,
          "fromName" : "Project",
          "toId" : 69,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 69,
          "fromName" : "Join",
          "toId" : 68,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 83,
          "fromName" : "LogicalQueryStage",
          "toId" : 68,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 68,
          "fromName" : "Join",
          "toId" : 67,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 67,
          "fromName" : "Project",
          "toId" : 66,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 87,
          "fromName" : "LogicalRelation",
          "toId" : 86,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 86,
          "fromName" : "Filter",
          "toId" : 85,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 85,
          "fromName" : "Project",
          "toId" : 84,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 22,
          "fromName" : "Project",
          "toId" : 89,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 26,
          "fromName" : "LogicalQueryStage",
          "toId" : 90,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 91,
          "fromName" : "LogicalQueryStage",
          "toId" : 90,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 90,
          "fromName" : "Join",
          "toId" : 89,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 89,
          "fromName" : "Join",
          "toId" : 88,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 88,
          "fromName" : "Project",
          "toId" : 84,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 84,
          "fromName" : "Join",
          "toId" : 66,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 66,
          "fromName" : "Join",
          "toId" : 65,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 65,
          "fromName" : "Project",
          "toId" : 64,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 64,
          "fromName" : "Aggregate",
          "toId" : 63,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 37,
          "fromName" : "Aggregate",
          "toId" : 63,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 63,
          "fromName" : "Filter",
          "toId" : 3,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Join",
          "toId" : 2,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "LocalLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "LocalLimit",
          "toId" : 0,
          "toName" : "GlobalLimit",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [i_brand_id#1082 ASC NULLS FIRST, i_class_id#1084 ASC NULLS FIRST, i_category_id#1086 ASC NULLS FIRST], true\n      +- Join Inner, (((i_brand_id#1082 = i_brand_id#1155) AND (i_class_id#1084 = i_class_id#1157)) AND (i_category_id#1086 = i_category_id#1159))\n         :- Filter (isnotnull(sales#731) AND (cast(sales#731 as decimal(32,6)) > cast(scalar-subquery#735 [] as decimal(32,6))))\n         :  :  +- Aggregate [avg((cast(quantity#746 as decimal(10,0)) * list_price#747)) AS average_sales#752]\n         :  :     +- Union false, false\n         :  :        :- Project [ss_quantity#886 AS quantity#746, ss_list_price#888 AS list_price#747]\n         :  :        :  +- Join Inner, (ss_sold_date_sk#899 = d_date_sk#900)\n         :  :        :     :- Project [ss_quantity#886, ss_list_price#888, ss_sold_date_sk#899]\n         :  :        :     :  +- Filter (isnotnull(ss_sold_date_sk#899) AND dynamicpruning#1288 [ss_sold_date_sk#899])\n         :  :        :     :     :  +- Project [d_date_sk#900]\n         :  :        :     :     :     +- Filter ((isnotnull(d_year#906) AND ((d_year#906 >= 1998) AND (d_year#906 <= 2000))) AND isnotnull(d_date_sk#900))\n         :  :        :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#900,d_date_id#901,d_date#902,d_month_seq#903,d_week_seq#904,d_quarter_seq#905,d_year#906,d_dow#907,d_moy#908,d_dom#909,d_qoy#910,d_fy_year#911,d_fy_quarter_seq#912,d_fy_week_seq#913,d_day_name#914,d_quarter_name#915,d_holiday#916,d_weekend#917,d_following_holiday#918,d_first_dom#919,d_last_dom#920,d_same_day_ly#921,d_same_day_lq#922,d_current_day#923,... 4 more fields] parquet\n         :  :        :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#877,ss_item_sk#878,ss_customer_sk#879,ss_cdemo_sk#880,ss_hdemo_sk#881,ss_addr_sk#882,ss_store_sk#883,ss_promo_sk#884,ss_ticket_number#885L,ss_quantity#886,ss_wholesale_cost#887,ss_list_price#888,ss_sales_price#889,ss_ext_discount_amt#890,ss_ext_sales_price#891,ss_ext_wholesale_cost#892,ss_ext_list_price#893,ss_ext_tax#894,ss_coupon_amt#895,ss_net_paid#896,ss_net_paid_inc_tax#897,ss_net_profit#898,ss_sold_date_sk#899] parquet\n         :  :        :     +- Project [d_date_sk#900]\n         :  :        :        +- Filter ((isnotnull(d_year#906) AND ((d_year#906 >= 1998) AND (d_year#906 <= 2000))) AND isnotnull(d_date_sk#900))\n         :  :        :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#900,d_date_id#901,d_date#902,d_month_seq#903,d_week_seq#904,d_quarter_seq#905,d_year#906,d_dow#907,d_moy#908,d_dom#909,d_qoy#910,d_fy_year#911,d_fy_quarter_seq#912,d_fy_week_seq#913,d_day_name#914,d_quarter_name#915,d_holiday#916,d_weekend#917,d_following_holiday#918,d_first_dom#919,d_last_dom#920,d_same_day_ly#921,d_same_day_lq#922,d_current_day#923,... 4 more fields] parquet\n         :  :        :- Project [cs_quantity#945 AS quantity#748, cs_list_price#947 AS list_price#749]\n         :  :        :  +- Join Inner, (cs_sold_date_sk#961 = d_date_sk#962)\n         :  :        :     :- Project [cs_quantity#945, cs_list_price#947, cs_sold_date_sk#961]\n         :  :        :     :  +- Filter (isnotnull(cs_sold_date_sk#961) AND dynamicpruning#1289 [cs_sold_date_sk#961])\n         :  :        :     :     :  +- Project [d_date_sk#962]\n         :  :        :     :     :     +- Filter ((isnotnull(d_year#968) AND ((d_year#968 >= 1998) AND (d_year#968 <= 2000))) AND isnotnull(d_date_sk#962))\n         :  :        :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#962,d_date_id#963,d_date#964,d_month_seq#965,d_week_seq#966,d_quarter_seq#967,d_year#968,d_dow#969,d_moy#970,d_dom#971,d_qoy#972,d_fy_year#973,d_fy_quarter_seq#974,d_fy_week_seq#975,d_day_name#976,d_quarter_name#977,d_holiday#978,d_weekend#979,d_following_holiday#980,d_first_dom#981,d_last_dom#982,d_same_day_ly#983,d_same_day_lq#984,d_current_day#985,... 4 more fields] parquet\n         :  :        :     :     +- Relation spark_catalog.tpcds_100.catalog_sales[cs_sold_time_sk#928,cs_ship_date_sk#929,cs_bill_customer_sk#930,cs_bill_cdemo_sk#931,cs_bill_hdemo_sk#932,cs_bill_addr_sk#933,cs_ship_customer_sk#934,cs_ship_cdemo_sk#935,cs_ship_hdemo_sk#936,cs_ship_addr_sk#937,cs_call_center_sk#938,cs_catalog_page_sk#939,cs_ship_mode_sk#940,cs_warehouse_sk#941,cs_item_sk#942,cs_promo_sk#943,cs_order_number#944L,cs_quantity#945,cs_wholesale_cost#946,cs_list_price#947,cs_sales_price#948,cs_ext_discount_amt#949,cs_ext_sales_price#950,cs_ext_wholesale_cost#951,... 10 more fields] parquet\n         :  :        :     +- Project [d_date_sk#962]\n         :  :        :        +- Filter ((isnotnull(d_year#968) AND ((d_year#968 >= 1998) AND (d_year#968 <= 2000))) AND isnotnull(d_date_sk#962))\n         :  :        :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#962,d_date_id#963,d_date#964,d_month_seq#965,d_week_seq#966,d_quarter_seq#967,d_year#968,d_dow#969,d_moy#970,d_dom#971,d_qoy#972,d_fy_year#973,d_fy_quarter_seq#974,d_fy_week_seq#975,d_day_name#976,d_quarter_name#977,d_holiday#978,d_weekend#979,d_following_holiday#980,d_first_dom#981,d_last_dom#982,d_same_day_ly#983,d_same_day_lq#984,d_current_day#985,... 4 more fields] parquet\n         :  :        +- Project [ws_quantity#1007 AS quantity#750, ws_list_price#1009 AS list_price#751]\n         :  :           +- Join Inner, (ws_sold_date_sk#1023 = d_date_sk#1024)\n         :  :              :- Project [ws_quantity#1007, ws_list_price#1009, ws_sold_date_sk#1023]\n         :  :              :  +- Filter (isnotnull(ws_sold_date_sk#1023) AND dynamicpruning#1290 [ws_sold_date_sk#1023])\n         :  :              :     :  +- Project [d_date_sk#1024]\n         :  :              :     :     +- Filter ((isnotnull(d_year#1030) AND ((d_year#1030 >= 1998) AND (d_year#1030 <= 2000))) AND isnotnull(d_date_sk#1024))\n         :  :              :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#1024,d_date_id#1025,d_date#1026,d_month_seq#1027,d_week_seq#1028,d_quarter_seq#1029,d_year#1030,d_dow#1031,d_moy#1032,d_dom#1033,d_qoy#1034,d_fy_year#1035,d_fy_quarter_seq#1036,d_fy_week_seq#1037,d_day_name#1038,d_quarter_name#1039,d_holiday#1040,d_weekend#1041,d_following_holiday#1042,d_first_dom#1043,d_last_dom#1044,d_same_day_ly#1045,d_same_day_lq#1046,d_current_day#1047,... 4 more fields] parquet\n         :  :              :     +- Relation spark_catalog.tpcds_100.web_sales[ws_sold_time_sk#990,ws_ship_date_sk#991,ws_item_sk#992,ws_bill_customer_sk#993,ws_bill_cdemo_sk#994,ws_bill_hdemo_sk#995,ws_bill_addr_sk#996,ws_ship_customer_sk#997,ws_ship_cdemo_sk#998,ws_ship_hdemo_sk#999,ws_ship_addr_sk#1000,ws_web_page_sk#1001,ws_web_site_sk#1002,ws_ship_mode_sk#1003,ws_warehouse_sk#1004,ws_promo_sk#1005,ws_order_number#1006L,ws_quantity#1007,ws_wholesale_cost#1008,ws_list_price#1009,ws_sales_price#1010,ws_ext_discount_amt#1011,ws_ext_sales_price#1012,ws_ext_wholesale_cost#1013,... 10 more fields] parquet\n         :  :              +- Project [d_date_sk#1024]\n         :  :                 +- Filter ((isnotnull(d_year#1030) AND ((d_year#1030 >= 1998) AND (d_year#1030 <= 2000))) AND isnotnull(d_date_sk#1024))\n         :  :                    +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#1024,d_date_id#1025,d_date#1026,d_month_seq#1027,d_week_seq#1028,d_quarter_seq#1029,d_year#1030,d_dow#1031,d_moy#1032,d_dom#1033,d_qoy#1034,d_fy_year#1035,d_fy_quarter_seq#1036,d_fy_week_seq#1037,d_day_name#1038,d_quarter_name#1039,d_holiday#1040,d_weekend#1041,d_following_holiday#1042,d_first_dom#1043,d_last_dom#1044,d_same_day_ly#1045,d_same_day_lq#1046,d_current_day#1047,... 4 more fields] parquet\n         :  +- Aggregate [i_brand_id#1082, i_class_id#1084, i_category_id#1086], [store AS channel#730, i_brand_id#1082, i_class_id#1084, i_category_id#1086, sum((cast(ss_quantity#1061 as decimal(10,0)) * ss_list_price#1063)) AS sales#731, count(1) AS number_sales#732L]\n         :     +- Project [ss_quantity#1061, ss_list_price#1063, i_brand_id#1082, i_class_id#1084, i_category_id#1086]\n         :        +- Join Inner, (ss_item_sk#1053 = i_item_sk#1075)\n         :           :- Project [ss_item_sk#1053, ss_quantity#1061, ss_list_price#1063]\n         :           :  +- Join Inner, (ss_sold_date_sk#1074 = d_date_sk#1097)\n         :           :     :- Join LeftSemi, (ss_item_sk#1053 = ss_item_sk#745)\n         :           :     :  :- Project [ss_item_sk#1053, ss_quantity#1061, ss_list_price#1063, ss_sold_date_sk#1074]\n         :           :     :  :  +- Filter ((isnotnull(ss_item_sk#1053) AND isnotnull(ss_sold_date_sk#1074)) AND dynamicpruning#1303 [ss_sold_date_sk#1074])\n         :           :     :  :     :  +- Project [d_date_sk#1097]\n         :           :     :  :     :     +- Filter ((isnotnull(d_week_seq#1101) AND (d_week_seq#1101 = scalar-subquery#734 [])) AND isnotnull(d_date_sk#1097))\n         :           :     :  :     :        :  +- Project [d_week_seq#1213]\n         :           :     :  :     :        :     +- Filter (((isnotnull(d_year#1215) AND isnotnull(d_moy#1217)) AND isnotnull(d_dom#1218)) AND (((d_year#1215 = 1999) AND (d_moy#1217 = 12)) AND (d_dom#1218 = 16)))\n         :           :     :  :     :        :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#1209,d_date_id#1210,d_date#1211,d_month_seq#1212,d_week_seq#1213,d_quarter_seq#1214,d_year#1215,d_dow#1216,d_moy#1217,d_dom#1218,d_qoy#1219,d_fy_year#1220,d_fy_quarter_seq#1221,d_fy_week_seq#1222,d_day_name#1223,d_quarter_name#1224,d_holiday#1225,d_weekend#1226,d_following_holiday#1227,d_first_dom#1228,d_last_dom#1229,d_same_day_ly#1230,d_same_day_lq#1231,d_current_day#1232,... 4 more fields] parquet\n         :           :     :  :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#1097,d_date_id#1098,d_date#1099,d_month_seq#1100,d_week_seq#1101,d_quarter_seq#1102,d_year#1103,d_dow#1104,d_moy#1105,d_dom#1106,d_qoy#1107,d_fy_year#1108,d_fy_quarter_seq#1109,d_fy_week_seq#1110,d_day_name#1111,d_quarter_name#1112,d_holiday#1113,d_weekend#1114,d_following_holiday#1115,d_first_dom#1116,d_last_dom#1117,d_same_day_ly#1118,d_same_day_lq#1119,d_current_day#1120,... 4 more fields] parquet\n         :           :     :  :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#1052,ss_item_sk#1053,ss_customer_sk#1054,ss_cdemo_sk#1055,ss_hdemo_sk#1056,ss_addr_sk#1057,ss_store_sk#1058,ss_promo_sk#1059,ss_ticket_number#1060L,ss_quantity#1061,ss_wholesale_cost#1062,ss_list_price#1063,ss_sales_price#1064,ss_ext_discount_amt#1065,ss_ext_sales_price#1066,ss_ext_wholesale_cost#1067,ss_ext_list_price#1068,ss_ext_tax#1069,ss_coupon_amt#1070,ss_net_paid#1071,ss_net_paid_inc_tax#1072,ss_net_profit#1073,ss_sold_date_sk#1074] parquet\n         :           :     :  +- Project [i_item_sk#25 AS ss_item_sk#745]\n         :           :     :     +- Join Inner, (((i_brand_id#32 = brand_id#742) AND (i_class_id#34 = class_id#743)) AND (i_category_id#36 = category_id#744))\n         :           :     :        :- Project [i_item_sk#25, i_brand_id#32, i_class_id#34, i_category_id#36]\n         :           :     :        :  +- Filter ((isnotnull(i_brand_id#32) AND isnotnull(i_class_id#34)) AND isnotnull(i_category_id#36))\n         :           :     :        :     +- Relation spark_catalog.tpcds_100.item[i_item_sk#25,i_item_id#26,i_rec_start_date#27,i_rec_end_date#28,i_item_desc#29,i_current_price#30,i_wholesale_cost#31,i_brand_id#32,i_brand#33,i_class_id#34,i_class#35,i_category_id#36,i_category#37,i_manufact_id#38,i_manufact#39,i_size#40,i_formulation#41,i_color#42,i_units#43,i_container#44,i_manager_id#45,i_product_name#46] parquet\n         :           :     :        +- Join LeftSemi, (((brand_id#742 <=> i_brand_id#834) AND (class_id#743 <=> i_class_id#836)) AND (category_id#744 <=> i_category_id#838))\n         :           :     :           :- LogicalQueryStage Aggregate [brand_id#742, class_id#743, category_id#744], [brand_id#742, class_id#743, category_id#744], HashAggregate(keys=[brand_id#742, class_id#743, category_id#744], functions=[])\n         :           :     :           +- LogicalQueryStage Project [i_brand_id#834, i_class_id#836, i_category_id#838], ShuffleQueryStage 48\n         :           :     +- LogicalQueryStage Project [d_date_sk#1097], BroadcastQueryStage 9\n         :           +- Join LeftSemi, (i_item_sk#1075 = ss_item_sk#745)\n         :              :- Project [i_item_sk#1075, i_brand_id#1082, i_class_id#1084, i_category_id#1086]\n         :              :  +- Filter (((isnotnull(i_item_sk#1075) AND isnotnull(i_brand_id#1082)) AND isnotnull(i_class_id#1084)) AND isnotnull(i_category_id#1086))\n         :              :     +- Relation spark_catalog.tpcds_100.item[i_item_sk#1075,i_item_id#1076,i_rec_start_date#1077,i_rec_end_date#1078,i_item_desc#1079,i_current_price#1080,i_wholesale_cost#1081,i_brand_id#1082,i_brand#1083,i_class_id#1084,i_class#1085,i_category_id#1086,i_category#1087,i_manufact_id#1088,i_manufact#1089,i_size#1090,i_formulation#1091,i_color#1092,i_units#1093,i_container#1094,i_manager_id#1095,i_product_name#1096] parquet\n         :              +- Project [i_item_sk#25 AS ss_item_sk#745]\n         :                 +- Join Inner, (((i_brand_id#32 = brand_id#742) AND (i_class_id#34 = class_id#743)) AND (i_category_id#36 = category_id#744))\n         :                    :- Project [i_item_sk#25, i_brand_id#32, i_class_id#34, i_category_id#36]\n         :                    :  +- Filter ((isnotnull(i_brand_id#32) AND isnotnull(i_class_id#34)) AND isnotnull(i_category_id#36))\n         :                    :     +- Relation spark_catalog.tpcds_100.item[i_item_sk#25,i_item_id#26,i_rec_start_date#27,i_rec_end_date#28,i_item_desc#29,i_current_price#30,i_wholesale_cost#31,i_brand_id#32,i_brand#33,i_class_id#34,i_class#35,i_category_id#36,i_category#37,i_manufact_id#38,i_manufact#39,i_size#40,i_formulation#41,i_color#42,i_units#43,i_container#44,i_manager_id#45,i_product_name#46] parquet\n         :                    +- Join LeftSemi, (((brand_id#742 <=> i_brand_id#834) AND (class_id#743 <=> i_class_id#836)) AND (category_id#744 <=> i_category_id#838))\n         :                       :- LogicalQueryStage Aggregate [brand_id#742, class_id#743, category_id#744], [brand_id#742, class_id#743, category_id#744], HashAggregate(keys=[brand_id#742, class_id#743, category_id#744], functions=[])\n         :                       +- LogicalQueryStage Project [i_brand_id#834, i_class_id#836, i_category_id#838], ShuffleQueryStage 52\n         +- Filter (isnotnull(sales#737) AND (cast(sales#737 as decimal(32,6)) > cast(scalar-subquery#741 [] as decimal(32,6))))\n            :  +- Aggregate [avg((cast(quantity#746 as decimal(10,0)) * list_price#747)) AS average_sales#752]\n            :     +- Union false, false\n            :        :- Project [ss_quantity#886 AS quantity#746, ss_list_price#888 AS list_price#747]\n            :        :  +- Join Inner, (ss_sold_date_sk#899 = d_date_sk#900)\n            :        :     :- Project [ss_quantity#886, ss_list_price#888, ss_sold_date_sk#899]\n            :        :     :  +- Filter (isnotnull(ss_sold_date_sk#899) AND dynamicpruning#1288 [ss_sold_date_sk#899])\n            :        :     :     :  +- Project [d_date_sk#900]\n            :        :     :     :     +- Filter ((isnotnull(d_year#906) AND ((d_year#906 >= 1998) AND (d_year#906 <= 2000))) AND isnotnull(d_date_sk#900))\n            :        :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#900,d_date_id#901,d_date#902,d_month_seq#903,d_week_seq#904,d_quarter_seq#905,d_year#906,d_dow#907,d_moy#908,d_dom#909,d_qoy#910,d_fy_year#911,d_fy_quarter_seq#912,d_fy_week_seq#913,d_day_name#914,d_quarter_name#915,d_holiday#916,d_weekend#917,d_following_holiday#918,d_first_dom#919,d_last_dom#920,d_same_day_ly#921,d_same_day_lq#922,d_current_day#923,... 4 more fields] parquet\n            :        :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#877,ss_item_sk#878,ss_customer_sk#879,ss_cdemo_sk#880,ss_hdemo_sk#881,ss_addr_sk#882,ss_store_sk#883,ss_promo_sk#884,ss_ticket_number#885L,ss_quantity#886,ss_wholesale_cost#887,ss_list_price#888,ss_sales_price#889,ss_ext_discount_amt#890,ss_ext_sales_price#891,ss_ext_wholesale_cost#892,ss_ext_list_price#893,ss_ext_tax#894,ss_coupon_amt#895,ss_net_paid#896,ss_net_paid_inc_tax#897,ss_net_profit#898,ss_sold_date_sk#899] parquet\n            :        :     +- Project [d_date_sk#900]\n            :        :        +- Filter ((isnotnull(d_year#906) AND ((d_year#906 >= 1998) AND (d_year#906 <= 2000))) AND isnotnull(d_date_sk#900))\n            :        :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#900,d_date_id#901,d_date#902,d_month_seq#903,d_week_seq#904,d_quarter_seq#905,d_year#906,d_dow#907,d_moy#908,d_dom#909,d_qoy#910,d_fy_year#911,d_fy_quarter_seq#912,d_fy_week_seq#913,d_day_name#914,d_quarter_name#915,d_holiday#916,d_weekend#917,d_following_holiday#918,d_first_dom#919,d_last_dom#920,d_same_day_ly#921,d_same_day_lq#922,d_current_day#923,... 4 more fields] parquet\n            :        :- Project [cs_quantity#945 AS quantity#748, cs_list_price#947 AS list_price#749]\n            :        :  +- Join Inner, (cs_sold_date_sk#961 = d_date_sk#962)\n            :        :     :- Project [cs_quantity#945, cs_list_price#947, cs_sold_date_sk#961]\n            :        :     :  +- Filter (isnotnull(cs_sold_date_sk#961) AND dynamicpruning#1289 [cs_sold_date_sk#961])\n            :        :     :     :  +- Project [d_date_sk#962]\n            :        :     :     :     +- Filter ((isnotnull(d_year#968) AND ((d_year#968 >= 1998) AND (d_year#968 <= 2000))) AND isnotnull(d_date_sk#962))\n            :        :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#962,d_date_id#963,d_date#964,d_month_seq#965,d_week_seq#966,d_quarter_seq#967,d_year#968,d_dow#969,d_moy#970,d_dom#971,d_qoy#972,d_fy_year#973,d_fy_quarter_seq#974,d_fy_week_seq#975,d_day_name#976,d_quarter_name#977,d_holiday#978,d_weekend#979,d_following_holiday#980,d_first_dom#981,d_last_dom#982,d_same_day_ly#983,d_same_day_lq#984,d_current_day#985,... 4 more fields] parquet\n            :        :     :     +- Relation spark_catalog.tpcds_100.catalog_sales[cs_sold_time_sk#928,cs_ship_date_sk#929,cs_bill_customer_sk#930,cs_bill_cdemo_sk#931,cs_bill_hdemo_sk#932,cs_bill_addr_sk#933,cs_ship_customer_sk#934,cs_ship_cdemo_sk#935,cs_ship_hdemo_sk#936,cs_ship_addr_sk#937,cs_call_center_sk#938,cs_catalog_page_sk#939,cs_ship_mode_sk#940,cs_warehouse_sk#941,cs_item_sk#942,cs_promo_sk#943,cs_order_number#944L,cs_quantity#945,cs_wholesale_cost#946,cs_list_price#947,cs_sales_price#948,cs_ext_discount_amt#949,cs_ext_sales_price#950,cs_ext_wholesale_cost#951,... 10 more fields] parquet\n            :        :     +- Project [d_date_sk#962]\n            :        :        +- Filter ((isnotnull(d_year#968) AND ((d_year#968 >= 1998) AND (d_year#968 <= 2000))) AND isnotnull(d_date_sk#962))\n            :        :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#962,d_date_id#963,d_date#964,d_month_seq#965,d_week_seq#966,d_quarter_seq#967,d_year#968,d_dow#969,d_moy#970,d_dom#971,d_qoy#972,d_fy_year#973,d_fy_quarter_seq#974,d_fy_week_seq#975,d_day_name#976,d_quarter_name#977,d_holiday#978,d_weekend#979,d_following_holiday#980,d_first_dom#981,d_last_dom#982,d_same_day_ly#983,d_same_day_lq#984,d_current_day#985,... 4 more fields] parquet\n            :        +- Project [ws_quantity#1007 AS quantity#750, ws_list_price#1009 AS list_price#751]\n            :           +- Join Inner, (ws_sold_date_sk#1023 = d_date_sk#1024)\n            :              :- Project [ws_quantity#1007, ws_list_price#1009, ws_sold_date_sk#1023]\n            :              :  +- Filter (isnotnull(ws_sold_date_sk#1023) AND dynamicpruning#1290 [ws_sold_date_sk#1023])\n            :              :     :  +- Project [d_date_sk#1024]\n            :              :     :     +- Filter ((isnotnull(d_year#1030) AND ((d_year#1030 >= 1998) AND (d_year#1030 <= 2000))) AND isnotnull(d_date_sk#1024))\n            :              :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#1024,d_date_id#1025,d_date#1026,d_month_seq#1027,d_week_seq#1028,d_quarter_seq#1029,d_year#1030,d_dow#1031,d_moy#1032,d_dom#1033,d_qoy#1034,d_fy_year#1035,d_fy_quarter_seq#1036,d_fy_week_seq#1037,d_day_name#1038,d_quarter_name#1039,d_holiday#1040,d_weekend#1041,d_following_holiday#1042,d_first_dom#1043,d_last_dom#1044,d_same_day_ly#1045,d_same_day_lq#1046,d_current_day#1047,... 4 more fields] parquet\n            :              :     +- Relation spark_catalog.tpcds_100.web_sales[ws_sold_time_sk#990,ws_ship_date_sk#991,ws_item_sk#992,ws_bill_customer_sk#993,ws_bill_cdemo_sk#994,ws_bill_hdemo_sk#995,ws_bill_addr_sk#996,ws_ship_customer_sk#997,ws_ship_cdemo_sk#998,ws_ship_hdemo_sk#999,ws_ship_addr_sk#1000,ws_web_page_sk#1001,ws_web_site_sk#1002,ws_ship_mode_sk#1003,ws_warehouse_sk#1004,ws_promo_sk#1005,ws_order_number#1006L,ws_quantity#1007,ws_wholesale_cost#1008,ws_list_price#1009,ws_sales_price#1010,ws_ext_discount_amt#1011,ws_ext_sales_price#1012,ws_ext_wholesale_cost#1013,... 10 more fields] parquet\n            :              +- Project [d_date_sk#1024]\n            :                 +- Filter ((isnotnull(d_year#1030) AND ((d_year#1030 >= 1998) AND (d_year#1030 <= 2000))) AND isnotnull(d_date_sk#1024))\n            :                    +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#1024,d_date_id#1025,d_date#1026,d_month_seq#1027,d_week_seq#1028,d_quarter_seq#1029,d_year#1030,d_dow#1031,d_moy#1032,d_dom#1033,d_qoy#1034,d_fy_year#1035,d_fy_quarter_seq#1036,d_fy_week_seq#1037,d_day_name#1038,d_quarter_name#1039,d_holiday#1040,d_weekend#1041,d_following_holiday#1042,d_first_dom#1043,d_last_dom#1044,d_same_day_ly#1045,d_same_day_lq#1046,d_current_day#1047,... 4 more fields] parquet\n            +- Aggregate [i_brand_id#1155, i_class_id#1157, i_category_id#1159], [store AS channel#736, i_brand_id#1155, i_class_id#1157, i_category_id#1159, sum((cast(ss_quantity#1134 as decimal(10,0)) * ss_list_price#1136)) AS sales#737, count(1) AS number_sales#738L]\n               +- Project [ss_quantity#1134, ss_list_price#1136, i_brand_id#1155, i_class_id#1157, i_category_id#1159]\n                  +- Join Inner, (ss_item_sk#1126 = i_item_sk#1148)\n                     :- Project [ss_item_sk#1126, ss_quantity#1134, ss_list_price#1136]\n                     :  +- Join Inner, (ss_sold_date_sk#1147 = d_date_sk#1170)\n                     :     :- Join LeftSemi, (ss_item_sk#1126 = ss_item_sk#745)\n                     :     :  :- Project [ss_item_sk#1126, ss_quantity#1134, ss_list_price#1136, ss_sold_date_sk#1147]\n                     :     :  :  +- Filter ((isnotnull(ss_item_sk#1126) AND isnotnull(ss_sold_date_sk#1147)) AND dynamicpruning#1310 [ss_sold_date_sk#1147])\n                     :     :  :     :  +- Project [d_date_sk#1170]\n                     :     :  :     :     +- Filter ((isnotnull(d_week_seq#1174) AND (d_week_seq#1174 = scalar-subquery#740 [])) AND isnotnull(d_date_sk#1170))\n                     :     :  :     :        :  +- Project [d_week_seq#1241]\n                     :     :  :     :        :     +- Filter (((isnotnull(d_year#1243) AND isnotnull(d_moy#1245)) AND isnotnull(d_dom#1246)) AND (((d_year#1243 = 1998) AND (d_moy#1245 = 12)) AND (d_dom#1246 = 16)))\n                     :     :  :     :        :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#1237,d_date_id#1238,d_date#1239,d_month_seq#1240,d_week_seq#1241,d_quarter_seq#1242,d_year#1243,d_dow#1244,d_moy#1245,d_dom#1246,d_qoy#1247,d_fy_year#1248,d_fy_quarter_seq#1249,d_fy_week_seq#1250,d_day_name#1251,d_quarter_name#1252,d_holiday#1253,d_weekend#1254,d_following_holiday#1255,d_first_dom#1256,d_last_dom#1257,d_same_day_ly#1258,d_same_day_lq#1259,d_current_day#1260,... 4 more fields] parquet\n                     :     :  :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#1170,d_date_id#1171,d_date#1172,d_month_seq#1173,d_week_seq#1174,d_quarter_seq#1175,d_year#1176,d_dow#1177,d_moy#1178,d_dom#1179,d_qoy#1180,d_fy_year#1181,d_fy_quarter_seq#1182,d_fy_week_seq#1183,d_day_name#1184,d_quarter_name#1185,d_holiday#1186,d_weekend#1187,d_following_holiday#1188,d_first_dom#1189,d_last_dom#1190,d_same_day_ly#1191,d_same_day_lq#1192,d_current_day#1193,... 4 more fields] parquet\n                     :     :  :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#1125,ss_item_sk#1126,ss_customer_sk#1127,ss_cdemo_sk#1128,ss_hdemo_sk#1129,ss_addr_sk#1130,ss_store_sk#1131,ss_promo_sk#1132,ss_ticket_number#1133L,ss_quantity#1134,ss_wholesale_cost#1135,ss_list_price#1136,ss_sales_price#1137,ss_ext_discount_amt#1138,ss_ext_sales_price#1139,ss_ext_wholesale_cost#1140,ss_ext_list_price#1141,ss_ext_tax#1142,ss_coupon_amt#1143,ss_net_paid#1144,ss_net_paid_inc_tax#1145,ss_net_profit#1146,ss_sold_date_sk#1147] parquet\n                     :     :  +- Project [i_item_sk#25 AS ss_item_sk#745]\n                     :     :     +- Join Inner, (((i_brand_id#32 = brand_id#742) AND (i_class_id#34 = class_id#743)) AND (i_category_id#36 = category_id#744))\n                     :     :        :- Project [i_item_sk#25, i_brand_id#32, i_class_id#34, i_category_id#36]\n                     :     :        :  +- Filter ((isnotnull(i_brand_id#32) AND isnotnull(i_class_id#34)) AND isnotnull(i_category_id#36))\n                     :     :        :     +- Relation spark_catalog.tpcds_100.item[i_item_sk#25,i_item_id#26,i_rec_start_date#27,i_rec_end_date#28,i_item_desc#29,i_current_price#30,i_wholesale_cost#31,i_brand_id#32,i_brand#33,i_class_id#34,i_class#35,i_category_id#36,i_category#37,i_manufact_id#38,i_manufact#39,i_size#40,i_formulation#41,i_color#42,i_units#43,i_container#44,i_manager_id#45,i_product_name#46] parquet\n                     :     :        +- Join LeftSemi, (((brand_id#742 <=> i_brand_id#834) AND (class_id#743 <=> i_class_id#836)) AND (category_id#744 <=> i_category_id#838))\n                     :     :           :- LogicalQueryStage Aggregate [brand_id#742, class_id#743, category_id#744], [brand_id#742, class_id#743, category_id#744], HashAggregate(keys=[brand_id#742, class_id#743, category_id#744], functions=[])\n                     :     :           +- LogicalQueryStage Project [i_brand_id#834, i_class_id#836, i_category_id#838], ShuffleQueryStage 56\n                     :     +- LogicalQueryStage Project [d_date_sk#1170], BroadcastQueryStage 34\n                     +- Join LeftSemi, (i_item_sk#1148 = ss_item_sk#745)\n                        :- Project [i_item_sk#1148, i_brand_id#1155, i_class_id#1157, i_category_id#1159]\n                        :  +- Filter (((isnotnull(i_item_sk#1148) AND isnotnull(i_brand_id#1155)) AND isnotnull(i_class_id#1157)) AND isnotnull(i_category_id#1159))\n                        :     +- Relation spark_catalog.tpcds_100.item[i_item_sk#1148,i_item_id#1149,i_rec_start_date#1150,i_rec_end_date#1151,i_item_desc#1152,i_current_price#1153,i_wholesale_cost#1154,i_brand_id#1155,i_brand#1156,i_class_id#1157,i_class#1158,i_category_id#1159,i_category#1160,i_manufact_id#1161,i_manufact#1162,i_size#1163,i_formulation#1164,i_color#1165,i_units#1166,i_container#1167,i_manager_id#1168,i_product_name#1169] parquet\n                        +- Project [i_item_sk#25 AS ss_item_sk#745]\n                           +- Join Inner, (((i_brand_id#32 = brand_id#742) AND (i_class_id#34 = class_id#743)) AND (i_category_id#36 = category_id#744))\n                              :- Project [i_item_sk#25, i_brand_id#32, i_class_id#34, i_category_id#36]\n                              :  +- Filter ((isnotnull(i_brand_id#32) AND isnotnull(i_class_id#34)) AND isnotnull(i_category_id#36))\n                              :     +- Relation spark_catalog.tpcds_100.item[i_item_sk#25,i_item_id#26,i_rec_start_date#27,i_rec_end_date#28,i_item_desc#29,i_current_price#30,i_wholesale_cost#31,i_brand_id#32,i_brand#33,i_class_id#34,i_class#35,i_category_id#36,i_category#37,i_manufact_id#38,i_manufact#39,i_size#40,i_formulation#41,i_color#42,i_units#43,i_container#44,i_manager_id#45,i_product_name#46] parquet\n                              +- Join LeftSemi, (((brand_id#742 <=> i_brand_id#834) AND (class_id#743 <=> i_class_id#836)) AND (category_id#744 <=> i_category_id#838))\n                                 :- LogicalQueryStage Aggregate [brand_id#742, class_id#743, category_id#744], [brand_id#742, class_id#743, category_id#744], HashAggregate(keys=[brand_id#742, class_id#743, category_id#744], functions=[])\n                                 +- LogicalQueryStage Project [i_brand_id#834, i_class_id#836, i_category_id#838], ShuffleQueryStage 60\n"
      },
      "IM" : {
        "inputSizeInBytes" : 89790323488,
        "inputRowCount" : 727971436
      },
      "PD" : {
        "2" : [ 177962, 455930, 415323, 324034, 407180, 578113, 259800, 210766, 416594, 365097, 722932, 430581, 737269, 1031975, 1514187, 472059, 101032, 459828, 347329, 114427, 94836, 1079666, 1326142, 383040, 175045, 486302, 702614, 800093, 2890585, 749715, 100494, 720165, 530316, 795278, 705228, 310364, 730188, 287903, 255104, 608403, 493741, 197579, 98211, 1196389, 851488, 408258, 740122, 162471, 235750, 429841, 280551, 434095, 986907, 459535, 521411, 444089, 345779, 644089, 1511511, 259033, 857504, 440487, 655905, 522602, 1260769, 704242, 355941, 572333, 482841, 779237, 447588, 350687, 323737, 1316494, 306270, 639573, 819553, 701140, 669174, 780010, 675042, 476951, 636674, 322479, 897583, 280582, 223958, 573984, 561763, 119797, 430493, 121994, 311747, 117433, 377765, 318296, 740667, 431248, 547706, 508009, 414691, 367457, 723737, 442906, 583473, 347572, 1269089, 287286, 380605, 786487, 704711, 1465276, 758753, 673171, 160802, 291861, 864733, 186361, 546087, 1459274, 1695574, 115478, 421893, 386121, 312819, 164972, 1072990, 214957, 152503, 420284, 300056, 868375, 940076, 349342, 205208, 928322, 195265, 461329, 359228, 419971, 560162, 326400, 702646, 957888, 320780, 321516, 414771, 187523, 870857, 1055493, 342091, 506784, 282728, 1045719, 262333, 128426, 495313, 750638, 98964, 1366471, 574893, 319167, 147634, 1547306, 890810, 507583, 261595, 408664, 943050, 676186, 857526, 578999, 449016, 240998, 433603, 682640, 120305, 912938, 1129760, 525413, 547769, 609464, 611740, 324072, 206504, 2926245, 295669, 919509, 366206, 535787, 794086, 708510, 622156, 383847, 1071951, 677651, 914990, 923202, 596798, 344327 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "StartTimeInMs" : 1702226676856,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 34642,
        "IOBytes" : {
          "Total" : 1642682935,
          "Details" : {
            "IR" : 1515967397,
            "IW" : 0,
            "SR" : 125951502,
            "SW" : 764036
          }
        }
      }
    },
    "9" : {
      "LQP" : {
        "operators" : {
          "45" : {
            "sign" : -2126579796,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 355336856492919208,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_item_sk#25 AS ss_item_sk#745] "
          },
          "98" : {
            "sign" : -1443173521,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 355336856492919208,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_item_sk#25 AS ss_item_sk#745] "
          },
          "113" : {
            "sign" : -1062759686,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 4860984,
            "rowCount" : 202541,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_item_sk#1148, i_brand_id#1155, i_class_id#1157, i_category_id#1159] "
          },
          "34" : {
            "sign" : -117080718,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 17256,
            "rowCount" : 1438,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#70] "
          },
          "67" : {
            "sign" : 824386657,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 3878455336,
            "rowCount" : 138516262,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cs_sold_date_sk#961 = d_date_sk#962) "
          },
          "120" : {
            "sign" : -1905217952,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 1066010569473896640,
            "rowCount" : 53300528473694832,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_brand_id#762 AS brand_id#742, i_class_id#764 AS class_id#743, i_category_id#766 AS category_id#744] "
          },
          "93" : {
            "sign" : -1689547051,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(d_week_seq#1174) AND (d_week_seq#1174 = scalar-subquery#740 [])) AND isnotnull(d_date_sk#1170)) "
          },
          "12" : {
            "sign" : 571393713,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(ss_item_sk#1053) AND isnotnull(ss_sold_date_sk#1074)) AND dynamicpruning#1303 [ss_sold_date_sk#1074]) "
          },
          "66" : {
            "sign" : 825651901,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 2770325240,
            "rowCount" : 138516262,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_quantity#945 AS quantity#748, cs_list_price#947 AS list_price#749] "
          },
          "89" : {
            "sign" : -303911461,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 7701269884,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#1126, ss_quantity#1134, ss_list_price#1136, ss_sold_date_sk#1147] "
          },
          "51" : {
            "sign" : -1868509690,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 3617396482656,
            "rowCount" : 301449706888,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#48] "
          },
          "124" : {
            "sign" : -1598386866,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1057344,
            "rowCount" : 1096,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#70], BroadcastQueryStage 36 "
          },
          "84" : {
            "sign" : 1755814857,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 9192253472,
            "rowCount" : 287257921,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_quantity#1134, ss_list_price#1136, i_brand_id#1155, i_class_id#1157, i_category_id#1159] "
          },
          "8" : {
            "sign" : 2059020778,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 46207619304,
            "rowCount" : 1925317471,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#1053, ss_quantity#1061, ss_list_price#1063] "
          },
          "73" : {
            "sign" : -169490734,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#962, d_date_id#963, d_date#964, d_month_seq#965, d_week_seq#966, d_quarter_seq#967, d_year#968, d_dow#969, d_moy#970, d_dom#971, d_qoy#972, d_fy_year#973, d_fy_quarter_seq#974, d_fy_week_seq#975, d_day_name#976, d_quarter_name#977, d_holiday#978, d_weekend#979, d_following_holiday#980, d_first_dom#981, d_last_dom#982, d_same_day_ly#983, d_same_day_lq#984, d_current_day#985, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "78" : {
            "sign" : 1698660872,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 14972593792,
            "rowCount" : 71983624,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ws_sold_time_sk#990, ws_ship_date_sk#991, ws_item_sk#992, ws_bill_customer_sk#993, ws_bill_cdemo_sk#994, ws_bill_hdemo_sk#995, ws_bill_addr_sk#996, ws_ship_customer_sk#997, ws_ship_cdemo_sk#998, ws_ship_hdemo_sk#999, ws_ship_addr_sk#1000, ws_web_page_sk#1001, ws_web_site_sk#1002, ws_ship_mode_sk#1003, ws_warehouse_sk#1004, ws_promo_sk#1005, ws_order_number#1006L, ws_quantity#1007, ws_wholesale_cost#1008, ws_list_price#1009, ws_sales_price#1010, ws_ext_discount_amt#1011, ws_ext_sales_price#1012, ws_ext_wholesale_cost#1013, ... 10 more fields], `spark_catalog`.`tpcds_100`.`web_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "19" : {
            "sign" : -1755539215,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#1209, d_date_id#1210, d_date#1211, d_month_seq#1212, d_week_seq#1213, d_quarter_seq#1214, d_year#1215, d_dow#1216, d_moy#1217, d_dom#1218, d_qoy#1219, d_fy_year#1220, d_fy_quarter_seq#1221, d_fy_week_seq#1222, d_day_name#1223, d_quarter_name#1224, d_holiday#1225, d_weekend#1226, d_following_holiday#1227, d_first_dom#1228, d_last_dom#1229, d_same_day_ly#1230, d_same_day_lq#1231, d_current_day#1232, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "100" : {
            "sign" : 1728789219,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 1066010569473896640,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (((brand_id#742 <=> i_brand_id#834) AND (class_id#743 <=> i_class_id#836)) AND (category_id#744 <=> i_category_id#838)) "
          },
          "23" : {
            "sign" : -1756391561,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 86282466,
            "rowCount" : 202541,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(i_brand_id#32) AND isnotnull(i_class_id#34)) AND isnotnull(i_category_id#36)) "
          },
          "62" : {
            "sign" : -1972788865,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#877, ss_item_sk#878, ss_customer_sk#879, ss_cdemo_sk#880, ss_hdemo_sk#881, ss_addr_sk#882, ss_store_sk#883, ss_promo_sk#884, ss_ticket_number#885L, ss_quantity#886, ss_wholesale_cost#887, ss_list_price#888, ss_sales_price#889, ss_ext_discount_amt#890, ss_ext_sales_price#891, ss_ext_wholesale_cost#892, ss_ext_list_price#893, ss_ext_tax#894, ss_coupon_amt#895, ss_net_paid#896, ss_net_paid_inc_tax#897, ss_net_profit#898, ss_sold_date_sk#899], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "4" : {
            "sign" : 1851780708,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 10408960,
            "rowCount" : 136960,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(sales#731) AND (cast(sales#731 as decimal(32,6)) > cast(scalar-subquery#735 [] as decimal(32,6)))) "
          },
          "121" : {
            "sign" : -861331932,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 1492414797263455296,
            "rowCount" : 53300528473694832,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_item_sk#48 = i_item_sk#755) "
          },
          "88" : {
            "sign" : 1854106604,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 7701269884,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (ss_item_sk#1126 = ss_item_sk#745) "
          },
          "77" : {
            "sign" : -1902449141,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 14972593792,
            "rowCount" : 71983624,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(ws_sold_date_sk#1023) AND dynamicpruning#1290 [ws_sold_date_sk#1023]) "
          },
          "40" : {
            "sign" : -21562714,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1048632,
            "rowCount" : 7,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#1097], BroadcastQueryStage 9 "
          },
          "110" : {
            "sign" : -365670467,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1379777760,
            "rowCount" : 43118055,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_brand_id#834, i_class_id#836, i_category_id#838], ShuffleQueryStage 56 "
          },
          "15" : {
            "sign" : 1866012666,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(d_week_seq#1101) AND (d_week_seq#1101 = scalar-subquery#734 [])) AND isnotnull(d_date_sk#1097)) "
          },
          "11" : {
            "sign" : 1222696026,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 7701269884,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#1053, ss_quantity#1061, ss_list_price#1063, ss_sold_date_sk#1074] "
          },
          "104" : {
            "sign" : 899851787,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 3617396482656,
            "rowCount" : 301449706888,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#48] "
          },
          "90" : {
            "sign" : -604473204,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(ss_item_sk#1126) AND isnotnull(ss_sold_date_sk#1147)) AND dynamicpruning#1310 [ss_sold_date_sk#1147]) "
          },
          "9" : {
            "sign" : 2145521043,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 61610159072,
            "rowCount" : 1925317471,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#1074 = d_date_sk#1097) "
          },
          "44" : {
            "sign" : 73332589,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 86904000,
            "rowCount" : 204000,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [i_item_sk#1075, i_item_id#1076, i_rec_start_date#1077, i_rec_end_date#1078, i_item_desc#1079, i_current_price#1080, i_wholesale_cost#1081, i_brand_id#1082, i_brand#1083, i_class_id#1084, i_class#1085, i_category_id#1086, i_category#1087, i_manufact_id#1088, i_manufact#1089, i_size#1090, i_formulation#1091, i_color#1092, i_units#1093, i_container#1094, i_manager_id#1095, i_product_name#1096], `spark_catalog`.`tpcds_100`.`item`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "33" : {
            "sign" : 1104597854,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#47, ss_item_sk#48, ss_customer_sk#49, ss_cdemo_sk#50, ss_hdemo_sk#51, ss_addr_sk#52, ss_store_sk#53, ss_promo_sk#54, ss_ticket_number#55L, ss_quantity#56, ss_wholesale_cost#57, ss_list_price#58, ss_sales_price#59, ss_ext_discount_amt#60, ss_ext_sales_price#61, ss_ext_wholesale_cost#62, ss_ext_list_price#63, ss_ext_tax#64, ss_coupon_amt#65, ss_net_paid#66, ss_net_paid_inc_tax#67, ss_net_profit#68, ss_sold_date_sk#69], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "117" : {
            "sign" : -790015455,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 1066010569478757624,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (((i_brand_id#32 = brand_id#742) AND (i_class_id#34 = class_id#743)) AND (i_category_id#36 = category_id#744)) "
          },
          "22" : {
            "sign" : 2089743597,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 4860984,
            "rowCount" : 202541,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_item_sk#25, i_brand_id#32, i_class_id#34, i_category_id#36] "
          },
          "56" : {
            "sign" : -1809172647,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 24,
            "rowCount" : 1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [avg((cast(quantity#746 as decimal(10,0)) * list_price#747)) AS average_sales#752] "
          },
          "55" : {
            "sign" : -365670591,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1379777760,
            "rowCount" : 43118055,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_brand_id#834, i_class_id#836, i_category_id#838], ShuffleQueryStage 52 "
          },
          "26" : {
            "sign" : 1125369028,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 1066010569473896640,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [brand_id#742, class_id#743, category_id#744], [brand_id#742, class_id#743, category_id#744] "
          },
          "50" : {
            "sign" : -1967599343,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 1492414797263455296,
            "rowCount" : 53300528473694832,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_item_sk#48 = i_item_sk#755) "
          },
          "123" : {
            "sign" : 1894575332,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 6028994137760,
            "rowCount" : 301449706888,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#69 = d_date_sk#70) "
          },
          "37" : {
            "sign" : -1159939661,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1057344,
            "rowCount" : 1096,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#70], BroadcastQueryStage 0 "
          },
          "68" : {
            "sign" : 1942236716,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 3438552408,
            "rowCount" : 143273017,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_quantity#945, cs_list_price#947, cs_sold_date_sk#961] "
          },
          "61" : {
            "sign" : 1377797290,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(ss_sold_date_sk#899) AND dynamicpruning#1288 [ss_sold_date_sk#899]) "
          },
          "107" : {
            "sign" : -109048900,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(ss_item_sk#48) AND isnotnull(ss_sold_date_sk#69)) AND dynamicpruning#1297 [ss_sold_date_sk#69]) "
          },
          "13" : {
            "sign" : 913239237,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#1052, ss_item_sk#1053, ss_customer_sk#1054, ss_cdemo_sk#1055, ss_hdemo_sk#1056, ss_addr_sk#1057, ss_store_sk#1058, ss_promo_sk#1059, ss_ticket_number#1060L, ss_quantity#1061, ss_wholesale_cost#1062, ss_list_price#1063, ss_sales_price#1064, ss_ext_discount_amt#1065, ss_ext_sales_price#1066, ss_ext_wholesale_cost#1067, ss_ext_list_price#1068, ss_ext_tax#1069, ss_coupon_amt#1070, ss_net_paid#1071, ss_net_paid_inc_tax#1072, ss_net_profit#1073, ss_sold_date_sk#1074], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "46" : {
            "sign" : 7491275,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 1066010569478757624,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (((i_brand_id#32 = brand_id#742) AND (i_class_id#34 = class_id#743)) AND (i_category_id#36 = category_id#744)) "
          },
          "99" : {
            "sign" : 289217598,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 1066010569478757624,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (((i_brand_id#32 = brand_id#742) AND (i_class_id#34 = class_id#743)) AND (i_category_id#36 = category_id#744)) "
          },
          "24" : {
            "sign" : 2096275601,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 86904000,
            "rowCount" : 204000,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [i_item_sk#25, i_item_id#26, i_rec_start_date#27, i_rec_end_date#28, i_item_desc#29, i_current_price#30, i_wholesale_cost#31, i_brand_id#32, i_brand#33, i_class_id#34, i_class#35, i_category_id#36, i_category#37, i_manufact_id#38, i_manufact#39, i_size#40, i_formulation#41, i_color#42, i_units#43, i_container#44, i_manager_id#45, i_product_name#46], `spark_catalog`.`tpcds_100`.`item`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "94" : {
            "sign" : 683629544,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#1170, d_date_id#1171, d_date#1172, d_month_seq#1173, d_week_seq#1174, d_quarter_seq#1175, d_year#1176, d_dow#1177, d_moy#1178, d_dom#1179, d_qoy#1180, d_fy_year#1181, d_fy_quarter_seq#1182, d_fy_week_seq#1183, d_day_name#1184, d_quarter_name#1185, d_holiday#1186, d_weekend#1187, d_following_holiday#1188, d_first_dom#1189, d_last_dom#1190, d_same_day_ly#1191, d_same_day_lq#1192, d_current_day#1193, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "83" : {
            "sign" : 147114472,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 10408960,
            "rowCount" : 136960,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [i_brand_id#1155, i_class_id#1157, i_category_id#1159], [store AS channel#736, i_brand_id#1155, i_class_id#1157, i_category_id#1159, sum((cast(ss_quantity#1134 as decimal(10,0)) * ss_list_price#1136)) AS sales#737, count(1) AS number_sales#738L] "
          },
          "35" : {
            "sign" : 1340377833,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 353748,
            "rowCount" : 1438,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(d_year#76) AND ((d_year#76 >= 1998) AND (d_year#76 <= 2000))) AND isnotnull(d_date_sk#70)) "
          },
          "16" : {
            "sign" : 682718368,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#1097, d_date_id#1098, d_date#1099, d_month_seq#1100, d_week_seq#1101, d_quarter_seq#1102, d_year#1103, d_dow#1104, d_moy#1105, d_dom#1106, d_qoy#1107, d_fy_year#1108, d_fy_quarter_seq#1109, d_fy_week_seq#1110, d_day_name#1111, d_quarter_name#1112, d_holiday#1113, d_weekend#1114, d_following_holiday#1115, d_first_dom#1116, d_last_dom#1117, d_same_day_ly#1118, d_same_day_lq#1119, d_current_day#1120, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "79" : {
            "sign" : -1100969675,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 17256,
            "rowCount" : 1438,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#1024] "
          },
          "5" : {
            "sign" : 1616834846,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 10408960,
            "rowCount" : 136960,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [i_brand_id#1082, i_class_id#1084, i_category_id#1086], [store AS channel#730, i_brand_id#1082, i_class_id#1084, i_category_id#1086, sum((cast(ss_quantity#1061 as decimal(10,0)) * ss_list_price#1063)) AS sales#731, count(1) AS number_sales#732L] "
          },
          "103" : {
            "sign" : 40893256,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 1492414797263455296,
            "rowCount" : 53300528473694832,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_item_sk#48 = i_item_sk#755) "
          },
          "112" : {
            "sign" : -410718149,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 4860984,
            "rowCount" : 202541,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (i_item_sk#1148 = ss_item_sk#745) "
          },
          "72" : {
            "sign" : -1695423935,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 353748,
            "rowCount" : 1438,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(d_year#968) AND ((d_year#968 >= 1998) AND (d_year#968 <= 2000))) AND isnotnull(d_date_sk#962)) "
          },
          "10" : {
            "sign" : 1138539736,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 7701269884,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (ss_item_sk#1053 = ss_item_sk#745) "
          },
          "59" : {
            "sign" : -1804794945,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 7435136380,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#899 = d_date_sk#900) "
          },
          "87" : {
            "sign" : -1096045218,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 61610159072,
            "rowCount" : 1925317471,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#1147 = d_date_sk#1170) "
          },
          "48" : {
            "sign" : 1144026602,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 1066010569473896640,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [brand_id#742, class_id#743, category_id#744], [brand_id#742, class_id#743, category_id#744] "
          },
          "21" : {
            "sign" : -139690034,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 1066010569478757624,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (((i_brand_id#32 = brand_id#742) AND (i_class_id#34 = class_id#743)) AND (i_category_id#36 = category_id#744)) "
          },
          "116" : {
            "sign" : -1936626538,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 355336856492919208,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_item_sk#25 AS ss_item_sk#745] "
          },
          "76" : {
            "sign" : 49678577,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 1727606976,
            "rowCount" : 71983624,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_quantity#1007, ws_list_price#1009, ws_sold_date_sk#1023] "
          },
          "54" : {
            "sign" : -2125848814,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 18409208,
            "rowCount" : 176814,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Join LeftSemi, (((i_brand_id#762 <=> i_brand_id#784) AND (i_class_id#764 <=> i_class_id#786)) AND (i_category_id#766 <=> i_category_id#788)), BroadcastQueryStage 63 "
          },
          "43" : {
            "sign" : 579430964,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 86282466,
            "rowCount" : 202541,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(i_item_sk#1075) AND isnotnull(i_brand_id#1082)) AND isnotnull(i_class_id#1084)) AND isnotnull(i_category_id#1086)) "
          },
          "65" : {
            "sign" : -820074406,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#900, d_date_id#901, d_date#902, d_month_seq#903, d_week_seq#904, d_quarter_seq#905, d_year#906, d_dow#907, d_moy#908, d_dom#909, d_qoy#910, d_fy_year#911, d_fy_quarter_seq#912, d_fy_week_seq#913, d_day_name#914, d_quarter_name#915, d_holiday#916, d_weekend#917, d_following_holiday#918, d_first_dom#919, d_last_dom#920, d_same_day_ly#921, d_same_day_lq#922, d_current_day#923, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "71" : {
            "sign" : 406087876,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 17256,
            "rowCount" : 1438,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#962] "
          },
          "57" : {
            "sign" : -1298322270,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Union",
            "sizeInBytes" : 9471049040,
            "rowCount" : 473552452,
            "isRuntime" : false,
            "predicate" : " (unknown) Union Arguments: false, false "
          },
          "108" : {
            "sign" : -1598387920,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1057344,
            "rowCount" : 1096,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#70], BroadcastQueryStage 23 "
          },
          "32" : {
            "sign" : -1052942334,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(ss_item_sk#48) AND isnotnull(ss_sold_date_sk#69)) AND dynamicpruning#1291 [ss_sold_date_sk#69]) "
          },
          "80" : {
            "sign" : -626435234,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 353748,
            "rowCount" : 1438,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(d_year#1030) AND ((d_year#1030 >= 1998) AND (d_year#1030 <= 2000))) AND isnotnull(d_date_sk#1024)) "
          },
          "106" : {
            "sign" : 2101479604,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 4400725648,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#48, ss_sold_date_sk#69] "
          },
          "82" : {
            "sign" : -1489913881,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 10408960,
            "rowCount" : 136960,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(sales#737) AND (cast(sales#737 as decimal(32,6)) > cast(scalar-subquery#741 [] as decimal(32,6)))) "
          },
          "49" : {
            "sign" : -961488729,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 1066010569473896640,
            "rowCount" : 53300528473694832,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_brand_id#762 AS brand_id#742, i_class_id#764 AS class_id#743, i_category_id#766 AS category_id#744] "
          },
          "6" : {
            "sign" : -1875082037,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 9192253472,
            "rowCount" : 287257921,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_quantity#1061, ss_list_price#1063, i_brand_id#1082, i_class_id#1084, i_category_id#1086] "
          },
          "126" : {
            "sign" : -365669692,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1379777760,
            "rowCount" : 43118055,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_brand_id#834, i_class_id#836, i_category_id#838], ShuffleQueryStage 60 "
          },
          "36" : {
            "sign" : -232749464,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#70, d_date_id#71, d_date#72, d_month_seq#73, d_week_seq#74, d_quarter_seq#75, d_year#76, d_dow#77, d_moy#78, d_dom#79, d_qoy#80, d_fy_year#81, d_fy_quarter_seq#82, d_fy_week_seq#83, d_day_name#84, d_quarter_name#85, d_holiday#86, d_weekend#87, d_following_holiday#88, d_first_dom#89, d_last_dom#90, d_same_day_ly#91, d_same_day_lq#92, d_current_day#93, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "1" : {
            "sign" : -934138918,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
            "sizeInBytes" : 19722240,
            "rowCount" : 136960,
            "isRuntime" : false,
            "predicate" : " (unknown) LocalLimit Arguments: 100 "
          },
          "39" : {
            "sign" : -365671366,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1379777760,
            "rowCount" : 43118055,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_brand_id#834, i_class_id#836, i_category_id#838], ShuffleQueryStage 48 "
          },
          "17" : {
            "sign" : -2061501032,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 36,
            "rowCount" : 3,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_week_seq#1213] "
          },
          "25" : {
            "sign" : -148281251,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 1066010569473896640,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (((brand_id#742 <=> i_brand_id#834) AND (class_id#743 <=> i_class_id#836)) AND (category_id#744 <=> i_category_id#838)) "
          },
          "60" : {
            "sign" : 1776873494,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 6601088472,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_quantity#886, ss_list_price#888, ss_sold_date_sk#899] "
          },
          "14" : {
            "sign" : 707519831,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 876588,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#1097] "
          },
          "47" : {
            "sign" : 39554976,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 1066010569473896640,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (((brand_id#742 <=> i_brand_id#834) AND (class_id#743 <=> i_class_id#836)) AND (category_id#744 <=> i_category_id#838)) "
          },
          "122" : {
            "sign" : 899852841,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 3617396482656,
            "rowCount" : 301449706888,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#48] "
          },
          "111" : {
            "sign" : -1902204624,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1048632,
            "rowCount" : 7,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#1170], BroadcastQueryStage 34 "
          },
          "102" : {
            "sign" : -1618133632,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 1066010569473896640,
            "rowCount" : 53300528473694832,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_brand_id#762 AS brand_id#742, i_class_id#764 AS class_id#743, i_category_id#766 AS category_id#744] "
          },
          "31" : {
            "sign" : -948624390,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 4400725648,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#48, ss_sold_date_sk#69] "
          },
          "96" : {
            "sign" : 1734827371,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 492,
            "rowCount" : 2,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(d_year#1243) AND isnotnull(d_moy#1245)) AND isnotnull(d_dom#1246)) AND (((d_year#1243 = 1998) AND (d_moy#1245 = 12)) AND (d_dom#1246 = 16))) "
          },
          "69" : {
            "sign" : 1500374164,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 29800787536,
            "rowCount" : 143273017,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(cs_sold_date_sk#961) AND dynamicpruning#1289 [cs_sold_date_sk#961]) "
          },
          "95" : {
            "sign" : -79282860,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 24,
            "rowCount" : 2,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_week_seq#1241] "
          },
          "58" : {
            "sign" : 869525063,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 5310811700,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_quantity#886 AS quantity#746, ss_list_price#888 AS list_price#747] "
          },
          "64" : {
            "sign" : -2071970095,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 353748,
            "rowCount" : 1438,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(d_year#906) AND ((d_year#906 >= 1998) AND (d_year#906 <= 2000))) AND isnotnull(d_date_sk#900)) "
          },
          "53" : {
            "sign" : -1598388943,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1057344,
            "rowCount" : 1096,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#70], BroadcastQueryStage 11 "
          },
          "42" : {
            "sign" : 1540331732,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 4860984,
            "rowCount" : 202541,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_item_sk#1075, i_brand_id#1082, i_class_id#1084, i_category_id#1086] "
          },
          "75" : {
            "sign" : 1503367439,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 1945876940,
            "rowCount" : 69495605,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ws_sold_date_sk#1023 = d_date_sk#1024) "
          },
          "115" : {
            "sign" : -1752719423,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 86904000,
            "rowCount" : 204000,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [i_item_sk#1148, i_item_id#1149, i_rec_start_date#1150, i_rec_end_date#1151, i_item_desc#1152, i_current_price#1153, i_wholesale_cost#1154, i_brand_id#1155, i_brand#1156, i_class_id#1157, i_class#1158, i_category_id#1159, i_category#1160, i_manufact_id#1161, i_manufact#1162, i_size#1163, i_formulation#1164, i_color#1165, i_units#1166, i_container#1167, i_manager_id#1168, i_product_name#1169], `spark_catalog`.`tpcds_100`.`item`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "109" : {
            "sign" : -2125848752,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 18409208,
            "rowCount" : 176814,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Join LeftSemi, (((i_brand_id#762 <=> i_brand_id#784) AND (i_class_id#764 <=> i_class_id#786)) AND (i_category_id#766 <=> i_category_id#788)), BroadcastQueryStage 65 "
          },
          "0" : {
            "sign" : -1158955065,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
            "sizeInBytes" : 12000,
            "rowCount" : 100,
            "isRuntime" : false,
            "predicate" : " (unknown) GlobalLimit Arguments: 100 "
          },
          "20" : {
            "sign" : 816932689,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 355336856492919208,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_item_sk#25 AS ss_item_sk#745] "
          },
          "27" : {
            "sign" : 1343739679,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 1066010569473896640,
            "rowCount" : 53300528473694832,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_brand_id#762 AS brand_id#742, i_class_id#764 AS class_id#743, i_category_id#766 AS category_id#744] "
          },
          "70" : {
            "sign" : -70077436,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 29800787536,
            "rowCount" : 143273017,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [cs_sold_time_sk#928, cs_ship_date_sk#929, cs_bill_customer_sk#930, cs_bill_cdemo_sk#931, cs_bill_hdemo_sk#932, cs_bill_addr_sk#933, cs_ship_customer_sk#934, cs_ship_cdemo_sk#935, cs_ship_hdemo_sk#936, cs_ship_addr_sk#937, cs_call_center_sk#938, cs_catalog_page_sk#939, cs_ship_mode_sk#940, cs_warehouse_sk#941, cs_item_sk#942, cs_promo_sk#943, cs_order_number#944L, cs_quantity#945, cs_wholesale_cost#946, cs_list_price#947, cs_sales_price#948, cs_ext_discount_amt#949, cs_ext_sales_price#950, cs_ext_wholesale_cost#951, ... 10 more fields], `spark_catalog`.`tpcds_100`.`catalog_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "2" : {
            "sign" : 248040881,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 19722240,
            "rowCount" : 136960,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [i_brand_id#1082 ASC NULLS FIRST, i_class_id#1084 ASC NULLS FIRST, i_category_id#1086 ASC NULLS FIRST], true "
          },
          "86" : {
            "sign" : 483542764,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 46207619304,
            "rowCount" : 1925317471,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#1126, ss_quantity#1134, ss_list_price#1136] "
          },
          "38" : {
            "sign" : -2125848876,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 18409208,
            "rowCount" : 176814,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Join LeftSemi, (((i_brand_id#762 <=> i_brand_id#784) AND (i_class_id#764 <=> i_class_id#786)) AND (i_category_id#766 <=> i_category_id#788)), BroadcastQueryStage 61 "
          },
          "81" : {
            "sign" : -502763688,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#1024, d_date_id#1025, d_date#1026, d_month_seq#1027, d_week_seq#1028, d_quarter_seq#1029, d_year#1030, d_dow#1031, d_moy#1032, d_dom#1033, d_qoy#1034, d_fy_year#1035, d_fy_quarter_seq#1036, d_fy_week_seq#1037, d_day_name#1038, d_quarter_name#1039, d_holiday#1040, d_weekend#1041, d_following_holiday#1042, d_first_dom#1043, d_last_dom#1044, d_same_day_ly#1045, d_same_day_lq#1046, d_current_day#1047, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "118" : {
            "sign" : 326156938,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 1066010569473896640,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (((brand_id#742 <=> i_brand_id#834) AND (class_id#743 <=> i_class_id#836)) AND (category_id#744 <=> i_category_id#838)) "
          },
          "92" : {
            "sign" : 1096234976,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 876588,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#1170] "
          },
          "125" : {
            "sign" : -2125848690,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 18409208,
            "rowCount" : 176814,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Join LeftSemi, (((i_brand_id#762 <=> i_brand_id#784) AND (i_class_id#764 <=> i_class_id#786)) AND (i_category_id#766 <=> i_category_id#788)), BroadcastQueryStage 67 "
          },
          "18" : {
            "sign" : -1305353512,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 738,
            "rowCount" : 3,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(d_year#1215) AND isnotnull(d_moy#1217)) AND isnotnull(d_dom#1218)) AND (((d_year#1215 = 1999) AND (d_moy#1217 = 12)) AND (d_dom#1218 = 16))) "
          },
          "101" : {
            "sign" : -165306399,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 1066010569473896640,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [brand_id#742, class_id#743, category_id#744], [brand_id#742, class_id#743, category_id#744] "
          },
          "30" : {
            "sign" : 1668181847,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 6028994137760,
            "rowCount" : 301449706888,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#69 = d_date_sk#70) "
          },
          "7" : {
            "sign" : 2050273830,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 11490316840,
            "rowCount" : 287257921,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_item_sk#1053 = i_item_sk#1075) "
          },
          "97" : {
            "sign" : 813769211,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#1237, d_date_id#1238, d_date#1239, d_month_seq#1240, d_week_seq#1241, d_quarter_seq#1242, d_year#1243, d_dow#1244, d_moy#1245, d_dom#1246, d_qoy#1247, d_fy_year#1248, d_fy_quarter_seq#1249, d_fy_week_seq#1250, d_day_name#1251, d_quarter_name#1252, d_holiday#1253, d_weekend#1254, d_following_holiday#1255, d_first_dom#1256, d_last_dom#1257, d_same_day_ly#1258, d_same_day_lq#1259, d_current_day#1260, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "114" : {
            "sign" : -1448453368,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 86282466,
            "rowCount" : 202541,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(i_item_sk#1148) AND isnotnull(i_brand_id#1155)) AND isnotnull(i_class_id#1157)) AND isnotnull(i_category_id#1159)) "
          },
          "29" : {
            "sign" : -1722842562,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 3617396482656,
            "rowCount" : 301449706888,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#48] "
          },
          "41" : {
            "sign" : -1933696680,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 4860984,
            "rowCount" : 202541,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (i_item_sk#1075 = ss_item_sk#745) "
          },
          "105" : {
            "sign" : 1894574278,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 6028994137760,
            "rowCount" : 301449706888,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#69 = d_date_sk#70) "
          },
          "63" : {
            "sign" : 2019201408,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 17256,
            "rowCount" : 1438,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#900] "
          },
          "3" : {
            "sign" : 1652835273,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 19722240,
            "rowCount" : 136960,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (((i_brand_id#1082 = i_brand_id#1155) AND (i_class_id#1084 = i_class_id#1157)) AND (i_category_id#1086 = i_category_id#1159)) "
          },
          "74" : {
            "sign" : 17831375,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 1389912100,
            "rowCount" : 69495605,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_quantity#1007 AS quantity#750, ws_list_price#1009 AS list_price#751] "
          },
          "91" : {
            "sign" : 1179432008,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#1125, ss_item_sk#1126, ss_customer_sk#1127, ss_cdemo_sk#1128, ss_hdemo_sk#1129, ss_addr_sk#1130, ss_store_sk#1131, ss_promo_sk#1132, ss_ticket_number#1133L, ss_quantity#1134, ss_wholesale_cost#1135, ss_list_price#1136, ss_sales_price#1137, ss_ext_discount_amt#1138, ss_ext_sales_price#1139, ss_ext_wholesale_cost#1140, ss_ext_list_price#1141, ss_ext_tax#1142, ss_coupon_amt#1143, ss_net_paid#1144, ss_net_paid_inc_tax#1145, ss_net_profit#1146, ss_sold_date_sk#1147], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "52" : {
            "sign" : 174031885,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 6028994137760,
            "rowCount" : 301449706888,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#69 = d_date_sk#70) "
          },
          "85" : {
            "sign" : 362840603,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 11490316840,
            "rowCount" : 287257921,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_item_sk#1126 = i_item_sk#1148) "
          },
          "28" : {
            "sign" : -368155715,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 1492414797263455296,
            "rowCount" : 53300528473694832,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_item_sk#48 = i_item_sk#755) "
          },
          "119" : {
            "sign" : -1416244163,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 1066010569473896640,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [brand_id#742, class_id#743, category_id#744], [brand_id#742, class_id#743, category_id#744] "
          }
        },
        "links" : [ {
          "fromId" : 13,
          "fromName" : "LogicalRelation",
          "toId" : 12,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 16,
          "fromName" : "LogicalRelation",
          "toId" : 15,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 19,
          "fromName" : "LogicalRelation",
          "toId" : 18,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 18,
          "fromName" : "Filter",
          "toId" : 17,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 17,
          "fromName" : "Project",
          "toId" : 15,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 15,
          "fromName" : "Filter",
          "toId" : 14,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 14,
          "fromName" : "Project",
          "toId" : 12,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 12,
          "fromName" : "Filter",
          "toId" : 11,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "Project",
          "toId" : 10,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 24,
          "fromName" : "LogicalRelation",
          "toId" : 23,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 23,
          "fromName" : "Filter",
          "toId" : 22,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 22,
          "fromName" : "Project",
          "toId" : 21,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 33,
          "fromName" : "LogicalRelation",
          "toId" : 32,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 36,
          "fromName" : "LogicalRelation",
          "toId" : 35,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 35,
          "fromName" : "Filter",
          "toId" : 34,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 34,
          "fromName" : "Project",
          "toId" : 32,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 32,
          "fromName" : "Filter",
          "toId" : 31,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 31,
          "fromName" : "Project",
          "toId" : 30,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 37,
          "fromName" : "LogicalQueryStage",
          "toId" : 30,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 30,
          "fromName" : "Join",
          "toId" : 29,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 29,
          "fromName" : "Project",
          "toId" : 28,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 38,
          "fromName" : "LogicalQueryStage",
          "toId" : 28,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 28,
          "fromName" : "Join",
          "toId" : 27,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 27,
          "fromName" : "Project",
          "toId" : 26,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 26,
          "fromName" : "Aggregate",
          "toId" : 25,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 39,
          "fromName" : "LogicalQueryStage",
          "toId" : 25,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 25,
          "fromName" : "Join",
          "toId" : 21,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 21,
          "fromName" : "Join",
          "toId" : 20,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 20,
          "fromName" : "Project",
          "toId" : 10,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "Join",
          "toId" : 9,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 40,
          "fromName" : "LogicalQueryStage",
          "toId" : 9,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "Join",
          "toId" : 8,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "Project",
          "toId" : 7,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 44,
          "fromName" : "LogicalRelation",
          "toId" : 43,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 43,
          "fromName" : "Filter",
          "toId" : 42,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 42,
          "fromName" : "Project",
          "toId" : 41,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 22,
          "fromName" : "Project",
          "toId" : 46,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 31,
          "fromName" : "Project",
          "toId" : 52,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 53,
          "fromName" : "LogicalQueryStage",
          "toId" : 52,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 52,
          "fromName" : "Join",
          "toId" : 51,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 51,
          "fromName" : "Project",
          "toId" : 50,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 54,
          "fromName" : "LogicalQueryStage",
          "toId" : 50,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 50,
          "fromName" : "Join",
          "toId" : 49,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 49,
          "fromName" : "Project",
          "toId" : 48,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 48,
          "fromName" : "Aggregate",
          "toId" : 47,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 55,
          "fromName" : "LogicalQueryStage",
          "toId" : 47,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 47,
          "fromName" : "Join",
          "toId" : 46,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 46,
          "fromName" : "Join",
          "toId" : 45,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 45,
          "fromName" : "Project",
          "toId" : 41,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 41,
          "fromName" : "Join",
          "toId" : 7,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Join",
          "toId" : 6,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Project",
          "toId" : 5,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Aggregate",
          "toId" : 4,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 62,
          "fromName" : "LogicalRelation",
          "toId" : 61,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 65,
          "fromName" : "LogicalRelation",
          "toId" : 64,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 64,
          "fromName" : "Filter",
          "toId" : 63,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 63,
          "fromName" : "Project",
          "toId" : 61,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 61,
          "fromName" : "Filter",
          "toId" : 60,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 60,
          "fromName" : "Project",
          "toId" : 59,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 63,
          "fromName" : "Project",
          "toId" : 59,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 59,
          "fromName" : "Join",
          "toId" : 58,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 58,
          "fromName" : "Project",
          "toId" : 57,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 70,
          "fromName" : "LogicalRelation",
          "toId" : 69,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 73,
          "fromName" : "LogicalRelation",
          "toId" : 72,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 72,
          "fromName" : "Filter",
          "toId" : 71,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 71,
          "fromName" : "Project",
          "toId" : 69,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 69,
          "fromName" : "Filter",
          "toId" : 68,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 68,
          "fromName" : "Project",
          "toId" : 67,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 71,
          "fromName" : "Project",
          "toId" : 67,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 67,
          "fromName" : "Join",
          "toId" : 66,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 66,
          "fromName" : "Project",
          "toId" : 57,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 78,
          "fromName" : "LogicalRelation",
          "toId" : 77,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 81,
          "fromName" : "LogicalRelation",
          "toId" : 80,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 80,
          "fromName" : "Filter",
          "toId" : 79,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 79,
          "fromName" : "Project",
          "toId" : 77,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 77,
          "fromName" : "Filter",
          "toId" : 76,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 76,
          "fromName" : "Project",
          "toId" : 75,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 79,
          "fromName" : "Project",
          "toId" : 75,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 75,
          "fromName" : "Join",
          "toId" : 74,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 74,
          "fromName" : "Project",
          "toId" : 57,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 57,
          "fromName" : "Union",
          "toId" : 56,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 56,
          "fromName" : "Aggregate",
          "toId" : 4,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 4,
          "fromName" : "Filter",
          "toId" : 3,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 91,
          "fromName" : "LogicalRelation",
          "toId" : 90,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 94,
          "fromName" : "LogicalRelation",
          "toId" : 93,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 97,
          "fromName" : "LogicalRelation",
          "toId" : 96,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 96,
          "fromName" : "Filter",
          "toId" : 95,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 95,
          "fromName" : "Project",
          "toId" : 93,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 93,
          "fromName" : "Filter",
          "toId" : 92,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 92,
          "fromName" : "Project",
          "toId" : 90,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 90,
          "fromName" : "Filter",
          "toId" : 89,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 89,
          "fromName" : "Project",
          "toId" : 88,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 22,
          "fromName" : "Project",
          "toId" : 99,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 33,
          "fromName" : "LogicalRelation",
          "toId" : 107,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 34,
          "fromName" : "Project",
          "toId" : 107,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 107,
          "fromName" : "Filter",
          "toId" : 106,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 106,
          "fromName" : "Project",
          "toId" : 105,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 108,
          "fromName" : "LogicalQueryStage",
          "toId" : 105,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 105,
          "fromName" : "Join",
          "toId" : 104,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 104,
          "fromName" : "Project",
          "toId" : 103,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 109,
          "fromName" : "LogicalQueryStage",
          "toId" : 103,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 103,
          "fromName" : "Join",
          "toId" : 102,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 102,
          "fromName" : "Project",
          "toId" : 101,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 101,
          "fromName" : "Aggregate",
          "toId" : 100,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 110,
          "fromName" : "LogicalQueryStage",
          "toId" : 100,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 100,
          "fromName" : "Join",
          "toId" : 99,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 99,
          "fromName" : "Join",
          "toId" : 98,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 98,
          "fromName" : "Project",
          "toId" : 88,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 88,
          "fromName" : "Join",
          "toId" : 87,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 111,
          "fromName" : "LogicalQueryStage",
          "toId" : 87,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 87,
          "fromName" : "Join",
          "toId" : 86,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 86,
          "fromName" : "Project",
          "toId" : 85,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 115,
          "fromName" : "LogicalRelation",
          "toId" : 114,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 114,
          "fromName" : "Filter",
          "toId" : 113,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 113,
          "fromName" : "Project",
          "toId" : 112,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 22,
          "fromName" : "Project",
          "toId" : 117,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 106,
          "fromName" : "Project",
          "toId" : 123,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 124,
          "fromName" : "LogicalQueryStage",
          "toId" : 123,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 123,
          "fromName" : "Join",
          "toId" : 122,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 122,
          "fromName" : "Project",
          "toId" : 121,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 125,
          "fromName" : "LogicalQueryStage",
          "toId" : 121,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 121,
          "fromName" : "Join",
          "toId" : 120,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 120,
          "fromName" : "Project",
          "toId" : 119,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 119,
          "fromName" : "Aggregate",
          "toId" : 118,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 126,
          "fromName" : "LogicalQueryStage",
          "toId" : 118,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 118,
          "fromName" : "Join",
          "toId" : 117,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 117,
          "fromName" : "Join",
          "toId" : 116,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 116,
          "fromName" : "Project",
          "toId" : 112,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 112,
          "fromName" : "Join",
          "toId" : 85,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 85,
          "fromName" : "Join",
          "toId" : 84,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 84,
          "fromName" : "Project",
          "toId" : 83,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 83,
          "fromName" : "Aggregate",
          "toId" : 82,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 56,
          "fromName" : "Aggregate",
          "toId" : 82,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 82,
          "fromName" : "Filter",
          "toId" : 3,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Join",
          "toId" : 2,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "LocalLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "LocalLimit",
          "toId" : 0,
          "toName" : "GlobalLimit",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [i_brand_id#1082 ASC NULLS FIRST, i_class_id#1084 ASC NULLS FIRST, i_category_id#1086 ASC NULLS FIRST], true\n      +- Join Inner, (((i_brand_id#1082 = i_brand_id#1155) AND (i_class_id#1084 = i_class_id#1157)) AND (i_category_id#1086 = i_category_id#1159))\n         :- Filter (isnotnull(sales#731) AND (cast(sales#731 as decimal(32,6)) > cast(scalar-subquery#735 [] as decimal(32,6))))\n         :  :  +- Aggregate [avg((cast(quantity#746 as decimal(10,0)) * list_price#747)) AS average_sales#752]\n         :  :     +- Union false, false\n         :  :        :- Project [ss_quantity#886 AS quantity#746, ss_list_price#888 AS list_price#747]\n         :  :        :  +- Join Inner, (ss_sold_date_sk#899 = d_date_sk#900)\n         :  :        :     :- Project [ss_quantity#886, ss_list_price#888, ss_sold_date_sk#899]\n         :  :        :     :  +- Filter (isnotnull(ss_sold_date_sk#899) AND dynamicpruning#1288 [ss_sold_date_sk#899])\n         :  :        :     :     :  +- Project [d_date_sk#900]\n         :  :        :     :     :     +- Filter ((isnotnull(d_year#906) AND ((d_year#906 >= 1998) AND (d_year#906 <= 2000))) AND isnotnull(d_date_sk#900))\n         :  :        :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#900,d_date_id#901,d_date#902,d_month_seq#903,d_week_seq#904,d_quarter_seq#905,d_year#906,d_dow#907,d_moy#908,d_dom#909,d_qoy#910,d_fy_year#911,d_fy_quarter_seq#912,d_fy_week_seq#913,d_day_name#914,d_quarter_name#915,d_holiday#916,d_weekend#917,d_following_holiday#918,d_first_dom#919,d_last_dom#920,d_same_day_ly#921,d_same_day_lq#922,d_current_day#923,... 4 more fields] parquet\n         :  :        :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#877,ss_item_sk#878,ss_customer_sk#879,ss_cdemo_sk#880,ss_hdemo_sk#881,ss_addr_sk#882,ss_store_sk#883,ss_promo_sk#884,ss_ticket_number#885L,ss_quantity#886,ss_wholesale_cost#887,ss_list_price#888,ss_sales_price#889,ss_ext_discount_amt#890,ss_ext_sales_price#891,ss_ext_wholesale_cost#892,ss_ext_list_price#893,ss_ext_tax#894,ss_coupon_amt#895,ss_net_paid#896,ss_net_paid_inc_tax#897,ss_net_profit#898,ss_sold_date_sk#899] parquet\n         :  :        :     +- Project [d_date_sk#900]\n         :  :        :        +- Filter ((isnotnull(d_year#906) AND ((d_year#906 >= 1998) AND (d_year#906 <= 2000))) AND isnotnull(d_date_sk#900))\n         :  :        :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#900,d_date_id#901,d_date#902,d_month_seq#903,d_week_seq#904,d_quarter_seq#905,d_year#906,d_dow#907,d_moy#908,d_dom#909,d_qoy#910,d_fy_year#911,d_fy_quarter_seq#912,d_fy_week_seq#913,d_day_name#914,d_quarter_name#915,d_holiday#916,d_weekend#917,d_following_holiday#918,d_first_dom#919,d_last_dom#920,d_same_day_ly#921,d_same_day_lq#922,d_current_day#923,... 4 more fields] parquet\n         :  :        :- Project [cs_quantity#945 AS quantity#748, cs_list_price#947 AS list_price#749]\n         :  :        :  +- Join Inner, (cs_sold_date_sk#961 = d_date_sk#962)\n         :  :        :     :- Project [cs_quantity#945, cs_list_price#947, cs_sold_date_sk#961]\n         :  :        :     :  +- Filter (isnotnull(cs_sold_date_sk#961) AND dynamicpruning#1289 [cs_sold_date_sk#961])\n         :  :        :     :     :  +- Project [d_date_sk#962]\n         :  :        :     :     :     +- Filter ((isnotnull(d_year#968) AND ((d_year#968 >= 1998) AND (d_year#968 <= 2000))) AND isnotnull(d_date_sk#962))\n         :  :        :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#962,d_date_id#963,d_date#964,d_month_seq#965,d_week_seq#966,d_quarter_seq#967,d_year#968,d_dow#969,d_moy#970,d_dom#971,d_qoy#972,d_fy_year#973,d_fy_quarter_seq#974,d_fy_week_seq#975,d_day_name#976,d_quarter_name#977,d_holiday#978,d_weekend#979,d_following_holiday#980,d_first_dom#981,d_last_dom#982,d_same_day_ly#983,d_same_day_lq#984,d_current_day#985,... 4 more fields] parquet\n         :  :        :     :     +- Relation spark_catalog.tpcds_100.catalog_sales[cs_sold_time_sk#928,cs_ship_date_sk#929,cs_bill_customer_sk#930,cs_bill_cdemo_sk#931,cs_bill_hdemo_sk#932,cs_bill_addr_sk#933,cs_ship_customer_sk#934,cs_ship_cdemo_sk#935,cs_ship_hdemo_sk#936,cs_ship_addr_sk#937,cs_call_center_sk#938,cs_catalog_page_sk#939,cs_ship_mode_sk#940,cs_warehouse_sk#941,cs_item_sk#942,cs_promo_sk#943,cs_order_number#944L,cs_quantity#945,cs_wholesale_cost#946,cs_list_price#947,cs_sales_price#948,cs_ext_discount_amt#949,cs_ext_sales_price#950,cs_ext_wholesale_cost#951,... 10 more fields] parquet\n         :  :        :     +- Project [d_date_sk#962]\n         :  :        :        +- Filter ((isnotnull(d_year#968) AND ((d_year#968 >= 1998) AND (d_year#968 <= 2000))) AND isnotnull(d_date_sk#962))\n         :  :        :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#962,d_date_id#963,d_date#964,d_month_seq#965,d_week_seq#966,d_quarter_seq#967,d_year#968,d_dow#969,d_moy#970,d_dom#971,d_qoy#972,d_fy_year#973,d_fy_quarter_seq#974,d_fy_week_seq#975,d_day_name#976,d_quarter_name#977,d_holiday#978,d_weekend#979,d_following_holiday#980,d_first_dom#981,d_last_dom#982,d_same_day_ly#983,d_same_day_lq#984,d_current_day#985,... 4 more fields] parquet\n         :  :        +- Project [ws_quantity#1007 AS quantity#750, ws_list_price#1009 AS list_price#751]\n         :  :           +- Join Inner, (ws_sold_date_sk#1023 = d_date_sk#1024)\n         :  :              :- Project [ws_quantity#1007, ws_list_price#1009, ws_sold_date_sk#1023]\n         :  :              :  +- Filter (isnotnull(ws_sold_date_sk#1023) AND dynamicpruning#1290 [ws_sold_date_sk#1023])\n         :  :              :     :  +- Project [d_date_sk#1024]\n         :  :              :     :     +- Filter ((isnotnull(d_year#1030) AND ((d_year#1030 >= 1998) AND (d_year#1030 <= 2000))) AND isnotnull(d_date_sk#1024))\n         :  :              :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#1024,d_date_id#1025,d_date#1026,d_month_seq#1027,d_week_seq#1028,d_quarter_seq#1029,d_year#1030,d_dow#1031,d_moy#1032,d_dom#1033,d_qoy#1034,d_fy_year#1035,d_fy_quarter_seq#1036,d_fy_week_seq#1037,d_day_name#1038,d_quarter_name#1039,d_holiday#1040,d_weekend#1041,d_following_holiday#1042,d_first_dom#1043,d_last_dom#1044,d_same_day_ly#1045,d_same_day_lq#1046,d_current_day#1047,... 4 more fields] parquet\n         :  :              :     +- Relation spark_catalog.tpcds_100.web_sales[ws_sold_time_sk#990,ws_ship_date_sk#991,ws_item_sk#992,ws_bill_customer_sk#993,ws_bill_cdemo_sk#994,ws_bill_hdemo_sk#995,ws_bill_addr_sk#996,ws_ship_customer_sk#997,ws_ship_cdemo_sk#998,ws_ship_hdemo_sk#999,ws_ship_addr_sk#1000,ws_web_page_sk#1001,ws_web_site_sk#1002,ws_ship_mode_sk#1003,ws_warehouse_sk#1004,ws_promo_sk#1005,ws_order_number#1006L,ws_quantity#1007,ws_wholesale_cost#1008,ws_list_price#1009,ws_sales_price#1010,ws_ext_discount_amt#1011,ws_ext_sales_price#1012,ws_ext_wholesale_cost#1013,... 10 more fields] parquet\n         :  :              +- Project [d_date_sk#1024]\n         :  :                 +- Filter ((isnotnull(d_year#1030) AND ((d_year#1030 >= 1998) AND (d_year#1030 <= 2000))) AND isnotnull(d_date_sk#1024))\n         :  :                    +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#1024,d_date_id#1025,d_date#1026,d_month_seq#1027,d_week_seq#1028,d_quarter_seq#1029,d_year#1030,d_dow#1031,d_moy#1032,d_dom#1033,d_qoy#1034,d_fy_year#1035,d_fy_quarter_seq#1036,d_fy_week_seq#1037,d_day_name#1038,d_quarter_name#1039,d_holiday#1040,d_weekend#1041,d_following_holiday#1042,d_first_dom#1043,d_last_dom#1044,d_same_day_ly#1045,d_same_day_lq#1046,d_current_day#1047,... 4 more fields] parquet\n         :  +- Aggregate [i_brand_id#1082, i_class_id#1084, i_category_id#1086], [store AS channel#730, i_brand_id#1082, i_class_id#1084, i_category_id#1086, sum((cast(ss_quantity#1061 as decimal(10,0)) * ss_list_price#1063)) AS sales#731, count(1) AS number_sales#732L]\n         :     +- Project [ss_quantity#1061, ss_list_price#1063, i_brand_id#1082, i_class_id#1084, i_category_id#1086]\n         :        +- Join Inner, (ss_item_sk#1053 = i_item_sk#1075)\n         :           :- Project [ss_item_sk#1053, ss_quantity#1061, ss_list_price#1063]\n         :           :  +- Join Inner, (ss_sold_date_sk#1074 = d_date_sk#1097)\n         :           :     :- Join LeftSemi, (ss_item_sk#1053 = ss_item_sk#745)\n         :           :     :  :- Project [ss_item_sk#1053, ss_quantity#1061, ss_list_price#1063, ss_sold_date_sk#1074]\n         :           :     :  :  +- Filter ((isnotnull(ss_item_sk#1053) AND isnotnull(ss_sold_date_sk#1074)) AND dynamicpruning#1303 [ss_sold_date_sk#1074])\n         :           :     :  :     :  +- Project [d_date_sk#1097]\n         :           :     :  :     :     +- Filter ((isnotnull(d_week_seq#1101) AND (d_week_seq#1101 = scalar-subquery#734 [])) AND isnotnull(d_date_sk#1097))\n         :           :     :  :     :        :  +- Project [d_week_seq#1213]\n         :           :     :  :     :        :     +- Filter (((isnotnull(d_year#1215) AND isnotnull(d_moy#1217)) AND isnotnull(d_dom#1218)) AND (((d_year#1215 = 1999) AND (d_moy#1217 = 12)) AND (d_dom#1218 = 16)))\n         :           :     :  :     :        :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#1209,d_date_id#1210,d_date#1211,d_month_seq#1212,d_week_seq#1213,d_quarter_seq#1214,d_year#1215,d_dow#1216,d_moy#1217,d_dom#1218,d_qoy#1219,d_fy_year#1220,d_fy_quarter_seq#1221,d_fy_week_seq#1222,d_day_name#1223,d_quarter_name#1224,d_holiday#1225,d_weekend#1226,d_following_holiday#1227,d_first_dom#1228,d_last_dom#1229,d_same_day_ly#1230,d_same_day_lq#1231,d_current_day#1232,... 4 more fields] parquet\n         :           :     :  :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#1097,d_date_id#1098,d_date#1099,d_month_seq#1100,d_week_seq#1101,d_quarter_seq#1102,d_year#1103,d_dow#1104,d_moy#1105,d_dom#1106,d_qoy#1107,d_fy_year#1108,d_fy_quarter_seq#1109,d_fy_week_seq#1110,d_day_name#1111,d_quarter_name#1112,d_holiday#1113,d_weekend#1114,d_following_holiday#1115,d_first_dom#1116,d_last_dom#1117,d_same_day_ly#1118,d_same_day_lq#1119,d_current_day#1120,... 4 more fields] parquet\n         :           :     :  :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#1052,ss_item_sk#1053,ss_customer_sk#1054,ss_cdemo_sk#1055,ss_hdemo_sk#1056,ss_addr_sk#1057,ss_store_sk#1058,ss_promo_sk#1059,ss_ticket_number#1060L,ss_quantity#1061,ss_wholesale_cost#1062,ss_list_price#1063,ss_sales_price#1064,ss_ext_discount_amt#1065,ss_ext_sales_price#1066,ss_ext_wholesale_cost#1067,ss_ext_list_price#1068,ss_ext_tax#1069,ss_coupon_amt#1070,ss_net_paid#1071,ss_net_paid_inc_tax#1072,ss_net_profit#1073,ss_sold_date_sk#1074] parquet\n         :           :     :  +- Project [i_item_sk#25 AS ss_item_sk#745]\n         :           :     :     +- Join Inner, (((i_brand_id#32 = brand_id#742) AND (i_class_id#34 = class_id#743)) AND (i_category_id#36 = category_id#744))\n         :           :     :        :- Project [i_item_sk#25, i_brand_id#32, i_class_id#34, i_category_id#36]\n         :           :     :        :  +- Filter ((isnotnull(i_brand_id#32) AND isnotnull(i_class_id#34)) AND isnotnull(i_category_id#36))\n         :           :     :        :     +- Relation spark_catalog.tpcds_100.item[i_item_sk#25,i_item_id#26,i_rec_start_date#27,i_rec_end_date#28,i_item_desc#29,i_current_price#30,i_wholesale_cost#31,i_brand_id#32,i_brand#33,i_class_id#34,i_class#35,i_category_id#36,i_category#37,i_manufact_id#38,i_manufact#39,i_size#40,i_formulation#41,i_color#42,i_units#43,i_container#44,i_manager_id#45,i_product_name#46] parquet\n         :           :     :        +- Join LeftSemi, (((brand_id#742 <=> i_brand_id#834) AND (class_id#743 <=> i_class_id#836)) AND (category_id#744 <=> i_category_id#838))\n         :           :     :           :- Aggregate [brand_id#742, class_id#743, category_id#744], [brand_id#742, class_id#743, category_id#744]\n         :           :     :           :  +- Project [i_brand_id#762 AS brand_id#742, i_class_id#764 AS class_id#743, i_category_id#766 AS category_id#744]\n         :           :     :           :     +- Join Inner, (ss_item_sk#48 = i_item_sk#755)\n         :           :     :           :        :- Project [ss_item_sk#48]\n         :           :     :           :        :  +- Join Inner, (ss_sold_date_sk#69 = d_date_sk#70)\n         :           :     :           :        :     :- Project [ss_item_sk#48, ss_sold_date_sk#69]\n         :           :     :           :        :     :  +- Filter ((isnotnull(ss_item_sk#48) AND isnotnull(ss_sold_date_sk#69)) AND dynamicpruning#1291 [ss_sold_date_sk#69])\n         :           :     :           :        :     :     :  +- Project [d_date_sk#70]\n         :           :     :           :        :     :     :     +- Filter ((isnotnull(d_year#76) AND ((d_year#76 >= 1998) AND (d_year#76 <= 2000))) AND isnotnull(d_date_sk#70))\n         :           :     :           :        :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#70,d_date_id#71,d_date#72,d_month_seq#73,d_week_seq#74,d_quarter_seq#75,d_year#76,d_dow#77,d_moy#78,d_dom#79,d_qoy#80,d_fy_year#81,d_fy_quarter_seq#82,d_fy_week_seq#83,d_day_name#84,d_quarter_name#85,d_holiday#86,d_weekend#87,d_following_holiday#88,d_first_dom#89,d_last_dom#90,d_same_day_ly#91,d_same_day_lq#92,d_current_day#93,... 4 more fields] parquet\n         :           :     :           :        :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#47,ss_item_sk#48,ss_customer_sk#49,ss_cdemo_sk#50,ss_hdemo_sk#51,ss_addr_sk#52,ss_store_sk#53,ss_promo_sk#54,ss_ticket_number#55L,ss_quantity#56,ss_wholesale_cost#57,ss_list_price#58,ss_sales_price#59,ss_ext_discount_amt#60,ss_ext_sales_price#61,ss_ext_wholesale_cost#62,ss_ext_list_price#63,ss_ext_tax#64,ss_coupon_amt#65,ss_net_paid#66,ss_net_paid_inc_tax#67,ss_net_profit#68,ss_sold_date_sk#69] parquet\n         :           :     :           :        :     +- LogicalQueryStage Project [d_date_sk#70], BroadcastQueryStage 0\n         :           :     :           :        +- LogicalQueryStage Join LeftSemi, (((i_brand_id#762 <=> i_brand_id#784) AND (i_class_id#764 <=> i_class_id#786)) AND (i_category_id#766 <=> i_category_id#788)), BroadcastQueryStage 61\n         :           :     :           +- LogicalQueryStage Project [i_brand_id#834, i_class_id#836, i_category_id#838], ShuffleQueryStage 48\n         :           :     +- LogicalQueryStage Project [d_date_sk#1097], BroadcastQueryStage 9\n         :           +- Join LeftSemi, (i_item_sk#1075 = ss_item_sk#745)\n         :              :- Project [i_item_sk#1075, i_brand_id#1082, i_class_id#1084, i_category_id#1086]\n         :              :  +- Filter (((isnotnull(i_item_sk#1075) AND isnotnull(i_brand_id#1082)) AND isnotnull(i_class_id#1084)) AND isnotnull(i_category_id#1086))\n         :              :     +- Relation spark_catalog.tpcds_100.item[i_item_sk#1075,i_item_id#1076,i_rec_start_date#1077,i_rec_end_date#1078,i_item_desc#1079,i_current_price#1080,i_wholesale_cost#1081,i_brand_id#1082,i_brand#1083,i_class_id#1084,i_class#1085,i_category_id#1086,i_category#1087,i_manufact_id#1088,i_manufact#1089,i_size#1090,i_formulation#1091,i_color#1092,i_units#1093,i_container#1094,i_manager_id#1095,i_product_name#1096] parquet\n         :              +- Project [i_item_sk#25 AS ss_item_sk#745]\n         :                 +- Join Inner, (((i_brand_id#32 = brand_id#742) AND (i_class_id#34 = class_id#743)) AND (i_category_id#36 = category_id#744))\n         :                    :- Project [i_item_sk#25, i_brand_id#32, i_class_id#34, i_category_id#36]\n         :                    :  +- Filter ((isnotnull(i_brand_id#32) AND isnotnull(i_class_id#34)) AND isnotnull(i_category_id#36))\n         :                    :     +- Relation spark_catalog.tpcds_100.item[i_item_sk#25,i_item_id#26,i_rec_start_date#27,i_rec_end_date#28,i_item_desc#29,i_current_price#30,i_wholesale_cost#31,i_brand_id#32,i_brand#33,i_class_id#34,i_class#35,i_category_id#36,i_category#37,i_manufact_id#38,i_manufact#39,i_size#40,i_formulation#41,i_color#42,i_units#43,i_container#44,i_manager_id#45,i_product_name#46] parquet\n         :                    +- Join LeftSemi, (((brand_id#742 <=> i_brand_id#834) AND (class_id#743 <=> i_class_id#836)) AND (category_id#744 <=> i_category_id#838))\n         :                       :- Aggregate [brand_id#742, class_id#743, category_id#744], [brand_id#742, class_id#743, category_id#744]\n         :                       :  +- Project [i_brand_id#762 AS brand_id#742, i_class_id#764 AS class_id#743, i_category_id#766 AS category_id#744]\n         :                       :     +- Join Inner, (ss_item_sk#48 = i_item_sk#755)\n         :                       :        :- Project [ss_item_sk#48]\n         :                       :        :  +- Join Inner, (ss_sold_date_sk#69 = d_date_sk#70)\n         :                       :        :     :- Project [ss_item_sk#48, ss_sold_date_sk#69]\n         :                       :        :     :  +- Filter ((isnotnull(ss_item_sk#48) AND isnotnull(ss_sold_date_sk#69)) AND dynamicpruning#1291 [ss_sold_date_sk#69])\n         :                       :        :     :     :  +- Project [d_date_sk#70]\n         :                       :        :     :     :     +- Filter ((isnotnull(d_year#76) AND ((d_year#76 >= 1998) AND (d_year#76 <= 2000))) AND isnotnull(d_date_sk#70))\n         :                       :        :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#70,d_date_id#71,d_date#72,d_month_seq#73,d_week_seq#74,d_quarter_seq#75,d_year#76,d_dow#77,d_moy#78,d_dom#79,d_qoy#80,d_fy_year#81,d_fy_quarter_seq#82,d_fy_week_seq#83,d_day_name#84,d_quarter_name#85,d_holiday#86,d_weekend#87,d_following_holiday#88,d_first_dom#89,d_last_dom#90,d_same_day_ly#91,d_same_day_lq#92,d_current_day#93,... 4 more fields] parquet\n         :                       :        :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#47,ss_item_sk#48,ss_customer_sk#49,ss_cdemo_sk#50,ss_hdemo_sk#51,ss_addr_sk#52,ss_store_sk#53,ss_promo_sk#54,ss_ticket_number#55L,ss_quantity#56,ss_wholesale_cost#57,ss_list_price#58,ss_sales_price#59,ss_ext_discount_amt#60,ss_ext_sales_price#61,ss_ext_wholesale_cost#62,ss_ext_list_price#63,ss_ext_tax#64,ss_coupon_amt#65,ss_net_paid#66,ss_net_paid_inc_tax#67,ss_net_profit#68,ss_sold_date_sk#69] parquet\n         :                       :        :     +- LogicalQueryStage Project [d_date_sk#70], BroadcastQueryStage 11\n         :                       :        +- LogicalQueryStage Join LeftSemi, (((i_brand_id#762 <=> i_brand_id#784) AND (i_class_id#764 <=> i_class_id#786)) AND (i_category_id#766 <=> i_category_id#788)), BroadcastQueryStage 63\n         :                       +- LogicalQueryStage Project [i_brand_id#834, i_class_id#836, i_category_id#838], ShuffleQueryStage 52\n         +- Filter (isnotnull(sales#737) AND (cast(sales#737 as decimal(32,6)) > cast(scalar-subquery#741 [] as decimal(32,6))))\n            :  +- Aggregate [avg((cast(quantity#746 as decimal(10,0)) * list_price#747)) AS average_sales#752]\n            :     +- Union false, false\n            :        :- Project [ss_quantity#886 AS quantity#746, ss_list_price#888 AS list_price#747]\n            :        :  +- Join Inner, (ss_sold_date_sk#899 = d_date_sk#900)\n            :        :     :- Project [ss_quantity#886, ss_list_price#888, ss_sold_date_sk#899]\n            :        :     :  +- Filter (isnotnull(ss_sold_date_sk#899) AND dynamicpruning#1288 [ss_sold_date_sk#899])\n            :        :     :     :  +- Project [d_date_sk#900]\n            :        :     :     :     +- Filter ((isnotnull(d_year#906) AND ((d_year#906 >= 1998) AND (d_year#906 <= 2000))) AND isnotnull(d_date_sk#900))\n            :        :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#900,d_date_id#901,d_date#902,d_month_seq#903,d_week_seq#904,d_quarter_seq#905,d_year#906,d_dow#907,d_moy#908,d_dom#909,d_qoy#910,d_fy_year#911,d_fy_quarter_seq#912,d_fy_week_seq#913,d_day_name#914,d_quarter_name#915,d_holiday#916,d_weekend#917,d_following_holiday#918,d_first_dom#919,d_last_dom#920,d_same_day_ly#921,d_same_day_lq#922,d_current_day#923,... 4 more fields] parquet\n            :        :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#877,ss_item_sk#878,ss_customer_sk#879,ss_cdemo_sk#880,ss_hdemo_sk#881,ss_addr_sk#882,ss_store_sk#883,ss_promo_sk#884,ss_ticket_number#885L,ss_quantity#886,ss_wholesale_cost#887,ss_list_price#888,ss_sales_price#889,ss_ext_discount_amt#890,ss_ext_sales_price#891,ss_ext_wholesale_cost#892,ss_ext_list_price#893,ss_ext_tax#894,ss_coupon_amt#895,ss_net_paid#896,ss_net_paid_inc_tax#897,ss_net_profit#898,ss_sold_date_sk#899] parquet\n            :        :     +- Project [d_date_sk#900]\n            :        :        +- Filter ((isnotnull(d_year#906) AND ((d_year#906 >= 1998) AND (d_year#906 <= 2000))) AND isnotnull(d_date_sk#900))\n            :        :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#900,d_date_id#901,d_date#902,d_month_seq#903,d_week_seq#904,d_quarter_seq#905,d_year#906,d_dow#907,d_moy#908,d_dom#909,d_qoy#910,d_fy_year#911,d_fy_quarter_seq#912,d_fy_week_seq#913,d_day_name#914,d_quarter_name#915,d_holiday#916,d_weekend#917,d_following_holiday#918,d_first_dom#919,d_last_dom#920,d_same_day_ly#921,d_same_day_lq#922,d_current_day#923,... 4 more fields] parquet\n            :        :- Project [cs_quantity#945 AS quantity#748, cs_list_price#947 AS list_price#749]\n            :        :  +- Join Inner, (cs_sold_date_sk#961 = d_date_sk#962)\n            :        :     :- Project [cs_quantity#945, cs_list_price#947, cs_sold_date_sk#961]\n            :        :     :  +- Filter (isnotnull(cs_sold_date_sk#961) AND dynamicpruning#1289 [cs_sold_date_sk#961])\n            :        :     :     :  +- Project [d_date_sk#962]\n            :        :     :     :     +- Filter ((isnotnull(d_year#968) AND ((d_year#968 >= 1998) AND (d_year#968 <= 2000))) AND isnotnull(d_date_sk#962))\n            :        :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#962,d_date_id#963,d_date#964,d_month_seq#965,d_week_seq#966,d_quarter_seq#967,d_year#968,d_dow#969,d_moy#970,d_dom#971,d_qoy#972,d_fy_year#973,d_fy_quarter_seq#974,d_fy_week_seq#975,d_day_name#976,d_quarter_name#977,d_holiday#978,d_weekend#979,d_following_holiday#980,d_first_dom#981,d_last_dom#982,d_same_day_ly#983,d_same_day_lq#984,d_current_day#985,... 4 more fields] parquet\n            :        :     :     +- Relation spark_catalog.tpcds_100.catalog_sales[cs_sold_time_sk#928,cs_ship_date_sk#929,cs_bill_customer_sk#930,cs_bill_cdemo_sk#931,cs_bill_hdemo_sk#932,cs_bill_addr_sk#933,cs_ship_customer_sk#934,cs_ship_cdemo_sk#935,cs_ship_hdemo_sk#936,cs_ship_addr_sk#937,cs_call_center_sk#938,cs_catalog_page_sk#939,cs_ship_mode_sk#940,cs_warehouse_sk#941,cs_item_sk#942,cs_promo_sk#943,cs_order_number#944L,cs_quantity#945,cs_wholesale_cost#946,cs_list_price#947,cs_sales_price#948,cs_ext_discount_amt#949,cs_ext_sales_price#950,cs_ext_wholesale_cost#951,... 10 more fields] parquet\n            :        :     +- Project [d_date_sk#962]\n            :        :        +- Filter ((isnotnull(d_year#968) AND ((d_year#968 >= 1998) AND (d_year#968 <= 2000))) AND isnotnull(d_date_sk#962))\n            :        :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#962,d_date_id#963,d_date#964,d_month_seq#965,d_week_seq#966,d_quarter_seq#967,d_year#968,d_dow#969,d_moy#970,d_dom#971,d_qoy#972,d_fy_year#973,d_fy_quarter_seq#974,d_fy_week_seq#975,d_day_name#976,d_quarter_name#977,d_holiday#978,d_weekend#979,d_following_holiday#980,d_first_dom#981,d_last_dom#982,d_same_day_ly#983,d_same_day_lq#984,d_current_day#985,... 4 more fields] parquet\n            :        +- Project [ws_quantity#1007 AS quantity#750, ws_list_price#1009 AS list_price#751]\n            :           +- Join Inner, (ws_sold_date_sk#1023 = d_date_sk#1024)\n            :              :- Project [ws_quantity#1007, ws_list_price#1009, ws_sold_date_sk#1023]\n            :              :  +- Filter (isnotnull(ws_sold_date_sk#1023) AND dynamicpruning#1290 [ws_sold_date_sk#1023])\n            :              :     :  +- Project [d_date_sk#1024]\n            :              :     :     +- Filter ((isnotnull(d_year#1030) AND ((d_year#1030 >= 1998) AND (d_year#1030 <= 2000))) AND isnotnull(d_date_sk#1024))\n            :              :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#1024,d_date_id#1025,d_date#1026,d_month_seq#1027,d_week_seq#1028,d_quarter_seq#1029,d_year#1030,d_dow#1031,d_moy#1032,d_dom#1033,d_qoy#1034,d_fy_year#1035,d_fy_quarter_seq#1036,d_fy_week_seq#1037,d_day_name#1038,d_quarter_name#1039,d_holiday#1040,d_weekend#1041,d_following_holiday#1042,d_first_dom#1043,d_last_dom#1044,d_same_day_ly#1045,d_same_day_lq#1046,d_current_day#1047,... 4 more fields] parquet\n            :              :     +- Relation spark_catalog.tpcds_100.web_sales[ws_sold_time_sk#990,ws_ship_date_sk#991,ws_item_sk#992,ws_bill_customer_sk#993,ws_bill_cdemo_sk#994,ws_bill_hdemo_sk#995,ws_bill_addr_sk#996,ws_ship_customer_sk#997,ws_ship_cdemo_sk#998,ws_ship_hdemo_sk#999,ws_ship_addr_sk#1000,ws_web_page_sk#1001,ws_web_site_sk#1002,ws_ship_mode_sk#1003,ws_warehouse_sk#1004,ws_promo_sk#1005,ws_order_number#1006L,ws_quantity#1007,ws_wholesale_cost#1008,ws_list_price#1009,ws_sales_price#1010,ws_ext_discount_amt#1011,ws_ext_sales_price#1012,ws_ext_wholesale_cost#1013,... 10 more fields] parquet\n            :              +- Project [d_date_sk#1024]\n            :                 +- Filter ((isnotnull(d_year#1030) AND ((d_year#1030 >= 1998) AND (d_year#1030 <= 2000))) AND isnotnull(d_date_sk#1024))\n            :                    +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#1024,d_date_id#1025,d_date#1026,d_month_seq#1027,d_week_seq#1028,d_quarter_seq#1029,d_year#1030,d_dow#1031,d_moy#1032,d_dom#1033,d_qoy#1034,d_fy_year#1035,d_fy_quarter_seq#1036,d_fy_week_seq#1037,d_day_name#1038,d_quarter_name#1039,d_holiday#1040,d_weekend#1041,d_following_holiday#1042,d_first_dom#1043,d_last_dom#1044,d_same_day_ly#1045,d_same_day_lq#1046,d_current_day#1047,... 4 more fields] parquet\n            +- Aggregate [i_brand_id#1155, i_class_id#1157, i_category_id#1159], [store AS channel#736, i_brand_id#1155, i_class_id#1157, i_category_id#1159, sum((cast(ss_quantity#1134 as decimal(10,0)) * ss_list_price#1136)) AS sales#737, count(1) AS number_sales#738L]\n               +- Project [ss_quantity#1134, ss_list_price#1136, i_brand_id#1155, i_class_id#1157, i_category_id#1159]\n                  +- Join Inner, (ss_item_sk#1126 = i_item_sk#1148)\n                     :- Project [ss_item_sk#1126, ss_quantity#1134, ss_list_price#1136]\n                     :  +- Join Inner, (ss_sold_date_sk#1147 = d_date_sk#1170)\n                     :     :- Join LeftSemi, (ss_item_sk#1126 = ss_item_sk#745)\n                     :     :  :- Project [ss_item_sk#1126, ss_quantity#1134, ss_list_price#1136, ss_sold_date_sk#1147]\n                     :     :  :  +- Filter ((isnotnull(ss_item_sk#1126) AND isnotnull(ss_sold_date_sk#1147)) AND dynamicpruning#1310 [ss_sold_date_sk#1147])\n                     :     :  :     :  +- Project [d_date_sk#1170]\n                     :     :  :     :     +- Filter ((isnotnull(d_week_seq#1174) AND (d_week_seq#1174 = scalar-subquery#740 [])) AND isnotnull(d_date_sk#1170))\n                     :     :  :     :        :  +- Project [d_week_seq#1241]\n                     :     :  :     :        :     +- Filter (((isnotnull(d_year#1243) AND isnotnull(d_moy#1245)) AND isnotnull(d_dom#1246)) AND (((d_year#1243 = 1998) AND (d_moy#1245 = 12)) AND (d_dom#1246 = 16)))\n                     :     :  :     :        :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#1237,d_date_id#1238,d_date#1239,d_month_seq#1240,d_week_seq#1241,d_quarter_seq#1242,d_year#1243,d_dow#1244,d_moy#1245,d_dom#1246,d_qoy#1247,d_fy_year#1248,d_fy_quarter_seq#1249,d_fy_week_seq#1250,d_day_name#1251,d_quarter_name#1252,d_holiday#1253,d_weekend#1254,d_following_holiday#1255,d_first_dom#1256,d_last_dom#1257,d_same_day_ly#1258,d_same_day_lq#1259,d_current_day#1260,... 4 more fields] parquet\n                     :     :  :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#1170,d_date_id#1171,d_date#1172,d_month_seq#1173,d_week_seq#1174,d_quarter_seq#1175,d_year#1176,d_dow#1177,d_moy#1178,d_dom#1179,d_qoy#1180,d_fy_year#1181,d_fy_quarter_seq#1182,d_fy_week_seq#1183,d_day_name#1184,d_quarter_name#1185,d_holiday#1186,d_weekend#1187,d_following_holiday#1188,d_first_dom#1189,d_last_dom#1190,d_same_day_ly#1191,d_same_day_lq#1192,d_current_day#1193,... 4 more fields] parquet\n                     :     :  :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#1125,ss_item_sk#1126,ss_customer_sk#1127,ss_cdemo_sk#1128,ss_hdemo_sk#1129,ss_addr_sk#1130,ss_store_sk#1131,ss_promo_sk#1132,ss_ticket_number#1133L,ss_quantity#1134,ss_wholesale_cost#1135,ss_list_price#1136,ss_sales_price#1137,ss_ext_discount_amt#1138,ss_ext_sales_price#1139,ss_ext_wholesale_cost#1140,ss_ext_list_price#1141,ss_ext_tax#1142,ss_coupon_amt#1143,ss_net_paid#1144,ss_net_paid_inc_tax#1145,ss_net_profit#1146,ss_sold_date_sk#1147] parquet\n                     :     :  +- Project [i_item_sk#25 AS ss_item_sk#745]\n                     :     :     +- Join Inner, (((i_brand_id#32 = brand_id#742) AND (i_class_id#34 = class_id#743)) AND (i_category_id#36 = category_id#744))\n                     :     :        :- Project [i_item_sk#25, i_brand_id#32, i_class_id#34, i_category_id#36]\n                     :     :        :  +- Filter ((isnotnull(i_brand_id#32) AND isnotnull(i_class_id#34)) AND isnotnull(i_category_id#36))\n                     :     :        :     +- Relation spark_catalog.tpcds_100.item[i_item_sk#25,i_item_id#26,i_rec_start_date#27,i_rec_end_date#28,i_item_desc#29,i_current_price#30,i_wholesale_cost#31,i_brand_id#32,i_brand#33,i_class_id#34,i_class#35,i_category_id#36,i_category#37,i_manufact_id#38,i_manufact#39,i_size#40,i_formulation#41,i_color#42,i_units#43,i_container#44,i_manager_id#45,i_product_name#46] parquet\n                     :     :        +- Join LeftSemi, (((brand_id#742 <=> i_brand_id#834) AND (class_id#743 <=> i_class_id#836)) AND (category_id#744 <=> i_category_id#838))\n                     :     :           :- Aggregate [brand_id#742, class_id#743, category_id#744], [brand_id#742, class_id#743, category_id#744]\n                     :     :           :  +- Project [i_brand_id#762 AS brand_id#742, i_class_id#764 AS class_id#743, i_category_id#766 AS category_id#744]\n                     :     :           :     +- Join Inner, (ss_item_sk#48 = i_item_sk#755)\n                     :     :           :        :- Project [ss_item_sk#48]\n                     :     :           :        :  +- Join Inner, (ss_sold_date_sk#69 = d_date_sk#70)\n                     :     :           :        :     :- Project [ss_item_sk#48, ss_sold_date_sk#69]\n                     :     :           :        :     :  +- Filter ((isnotnull(ss_item_sk#48) AND isnotnull(ss_sold_date_sk#69)) AND dynamicpruning#1297 [ss_sold_date_sk#69])\n                     :     :           :        :     :     :  +- Project [d_date_sk#70]\n                     :     :           :        :     :     :     +- Filter ((isnotnull(d_year#76) AND ((d_year#76 >= 1998) AND (d_year#76 <= 2000))) AND isnotnull(d_date_sk#70))\n                     :     :           :        :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#70,d_date_id#71,d_date#72,d_month_seq#73,d_week_seq#74,d_quarter_seq#75,d_year#76,d_dow#77,d_moy#78,d_dom#79,d_qoy#80,d_fy_year#81,d_fy_quarter_seq#82,d_fy_week_seq#83,d_day_name#84,d_quarter_name#85,d_holiday#86,d_weekend#87,d_following_holiday#88,d_first_dom#89,d_last_dom#90,d_same_day_ly#91,d_same_day_lq#92,d_current_day#93,... 4 more fields] parquet\n                     :     :           :        :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#47,ss_item_sk#48,ss_customer_sk#49,ss_cdemo_sk#50,ss_hdemo_sk#51,ss_addr_sk#52,ss_store_sk#53,ss_promo_sk#54,ss_ticket_number#55L,ss_quantity#56,ss_wholesale_cost#57,ss_list_price#58,ss_sales_price#59,ss_ext_discount_amt#60,ss_ext_sales_price#61,ss_ext_wholesale_cost#62,ss_ext_list_price#63,ss_ext_tax#64,ss_coupon_amt#65,ss_net_paid#66,ss_net_paid_inc_tax#67,ss_net_profit#68,ss_sold_date_sk#69] parquet\n                     :     :           :        :     +- LogicalQueryStage Project [d_date_sk#70], BroadcastQueryStage 23\n                     :     :           :        +- LogicalQueryStage Join LeftSemi, (((i_brand_id#762 <=> i_brand_id#784) AND (i_class_id#764 <=> i_class_id#786)) AND (i_category_id#766 <=> i_category_id#788)), BroadcastQueryStage 65\n                     :     :           +- LogicalQueryStage Project [i_brand_id#834, i_class_id#836, i_category_id#838], ShuffleQueryStage 56\n                     :     +- LogicalQueryStage Project [d_date_sk#1170], BroadcastQueryStage 34\n                     +- Join LeftSemi, (i_item_sk#1148 = ss_item_sk#745)\n                        :- Project [i_item_sk#1148, i_brand_id#1155, i_class_id#1157, i_category_id#1159]\n                        :  +- Filter (((isnotnull(i_item_sk#1148) AND isnotnull(i_brand_id#1155)) AND isnotnull(i_class_id#1157)) AND isnotnull(i_category_id#1159))\n                        :     +- Relation spark_catalog.tpcds_100.item[i_item_sk#1148,i_item_id#1149,i_rec_start_date#1150,i_rec_end_date#1151,i_item_desc#1152,i_current_price#1153,i_wholesale_cost#1154,i_brand_id#1155,i_brand#1156,i_class_id#1157,i_class#1158,i_category_id#1159,i_category#1160,i_manufact_id#1161,i_manufact#1162,i_size#1163,i_formulation#1164,i_color#1165,i_units#1166,i_container#1167,i_manager_id#1168,i_product_name#1169] parquet\n                        +- Project [i_item_sk#25 AS ss_item_sk#745]\n                           +- Join Inner, (((i_brand_id#32 = brand_id#742) AND (i_class_id#34 = class_id#743)) AND (i_category_id#36 = category_id#744))\n                              :- Project [i_item_sk#25, i_brand_id#32, i_class_id#34, i_category_id#36]\n                              :  +- Filter ((isnotnull(i_brand_id#32) AND isnotnull(i_class_id#34)) AND isnotnull(i_category_id#36))\n                              :     +- Relation spark_catalog.tpcds_100.item[i_item_sk#25,i_item_id#26,i_rec_start_date#27,i_rec_end_date#28,i_item_desc#29,i_current_price#30,i_wholesale_cost#31,i_brand_id#32,i_brand#33,i_class_id#34,i_class#35,i_category_id#36,i_category#37,i_manufact_id#38,i_manufact#39,i_size#40,i_formulation#41,i_color#42,i_units#43,i_container#44,i_manager_id#45,i_product_name#46] parquet\n                              +- Join LeftSemi, (((brand_id#742 <=> i_brand_id#834) AND (class_id#743 <=> i_class_id#836)) AND (category_id#744 <=> i_category_id#838))\n                                 :- Aggregate [brand_id#742, class_id#743, category_id#744], [brand_id#742, class_id#743, category_id#744]\n                                 :  +- Project [i_brand_id#762 AS brand_id#742, i_class_id#764 AS class_id#743, i_category_id#766 AS category_id#744]\n                                 :     +- Join Inner, (ss_item_sk#48 = i_item_sk#755)\n                                 :        :- Project [ss_item_sk#48]\n                                 :        :  +- Join Inner, (ss_sold_date_sk#69 = d_date_sk#70)\n                                 :        :     :- Project [ss_item_sk#48, ss_sold_date_sk#69]\n                                 :        :     :  +- Filter ((isnotnull(ss_item_sk#48) AND isnotnull(ss_sold_date_sk#69)) AND dynamicpruning#1297 [ss_sold_date_sk#69])\n                                 :        :     :     :  +- Project [d_date_sk#70]\n                                 :        :     :     :     +- Filter ((isnotnull(d_year#76) AND ((d_year#76 >= 1998) AND (d_year#76 <= 2000))) AND isnotnull(d_date_sk#70))\n                                 :        :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#70,d_date_id#71,d_date#72,d_month_seq#73,d_week_seq#74,d_quarter_seq#75,d_year#76,d_dow#77,d_moy#78,d_dom#79,d_qoy#80,d_fy_year#81,d_fy_quarter_seq#82,d_fy_week_seq#83,d_day_name#84,d_quarter_name#85,d_holiday#86,d_weekend#87,d_following_holiday#88,d_first_dom#89,d_last_dom#90,d_same_day_ly#91,d_same_day_lq#92,d_current_day#93,... 4 more fields] parquet\n                                 :        :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#47,ss_item_sk#48,ss_customer_sk#49,ss_cdemo_sk#50,ss_hdemo_sk#51,ss_addr_sk#52,ss_store_sk#53,ss_promo_sk#54,ss_ticket_number#55L,ss_quantity#56,ss_wholesale_cost#57,ss_list_price#58,ss_sales_price#59,ss_ext_discount_amt#60,ss_ext_sales_price#61,ss_ext_wholesale_cost#62,ss_ext_list_price#63,ss_ext_tax#64,ss_coupon_amt#65,ss_net_paid#66,ss_net_paid_inc_tax#67,ss_net_profit#68,ss_sold_date_sk#69] parquet\n                                 :        :     +- LogicalQueryStage Project [d_date_sk#70], BroadcastQueryStage 36\n                                 :        +- LogicalQueryStage Join LeftSemi, (((i_brand_id#762 <=> i_brand_id#784) AND (i_class_id#764 <=> i_class_id#786)) AND (i_category_id#766 <=> i_category_id#788)), BroadcastQueryStage 67\n                                 +- LogicalQueryStage Project [i_brand_id#834, i_class_id#836, i_category_id#838], ShuffleQueryStage 60\n"
      },
      "IM" : {
        "inputSizeInBytes" : 256961860448,
        "inputRowCount" : 1824679992
      },
      "PD" : {
        "2" : [ 177962, 455930, 415323, 324034, 407180, 578113, 259800, 210766, 416594, 365097, 722932, 430581, 737269, 1031975, 1514187, 472059, 101032, 459828, 347329, 114427, 94836, 1079666, 1326142, 383040, 175045, 486302, 702614, 800093, 2890585, 749715, 100494, 720165, 530316, 795278, 705228, 310364, 730188, 287903, 255104, 608403, 493741, 197579, 98211, 1196389, 851488, 408258, 740122, 162471, 235750, 429841, 280551, 434095, 986907, 459535, 521411, 444089, 345779, 644089, 1511511, 259033, 857504, 440487, 655905, 522602, 1260769, 704242, 355941, 572333, 482841, 779237, 447588, 350687, 323737, 1316494, 306270, 639573, 819553, 701140, 669174, 780010, 675042, 476951, 636674, 322479, 897583, 280582, 223958, 573984, 561763, 119797, 430493, 121994, 311747, 117433, 377765, 318296, 740667, 431248, 547706, 508009, 414691, 367457, 723737, 442906, 583473, 347572, 1269089, 287286, 380605, 786487, 704711, 1465276, 758753, 673171, 160802, 291861, 864733, 186361, 546087, 1459274, 1695574, 115478, 421893, 386121, 312819, 164972, 1072990, 214957, 152503, 420284, 300056, 868375, 940076, 349342, 205208, 928322, 195265, 461329, 359228, 419971, 560162, 326400, 702646, 957888, 320780, 321516, 414771, 187523, 870857, 1055493, 342091, 506784, 282728, 1045719, 262333, 128426, 495313, 750638, 98964, 1366471, 574893, 319167, 147634, 1547306, 890810, 507583, 261595, 408664, 943050, 676186, 857526, 578999, 449016, 240998, 433603, 682640, 120305, 912938, 1129760, 525413, 547769, 609464, 611740, 324072, 206504, 2926245, 295669, 919509, 366206, 535787, 794086, 708510, 622156, 383847, 1071951, 677651, 914990, 923202, 596798, 344327 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "StartTimeInMs" : 1702226670584,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 40914,
        "IOBytes" : {
          "Total" : 2327736575,
          "Details" : {
            "IR" : 2186334353,
            "IW" : 0,
            "SR" : 125951502,
            "SW" : 15450720
          }
        }
      }
    },
    "22" : {
      "LQP" : {
        "operators" : {
          "0" : {
            "sign" : 821689530,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 9400,
            "rowCount" : 235,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [avg((cast(quantity#746 as decimal(10,0)) * list_price#747)) AS average_sales#752], HashAggregate(keys=[], functions=[avg((cast(quantity#746 as decimal(10,0)) * list_price#747))]) "
          }
        },
        "links" : [ ],
        "rawPlan" : "LogicalQueryStage Aggregate [avg((cast(quantity#746 as decimal(10,0)) * list_price#747)) AS average_sales#752], HashAggregate(keys=[], functions=[avg((cast(quantity#746 as decimal(10,0)) * list_price#747))])\n"
      },
      "IM" : {
        "inputSizeInBytes" : 9400,
        "inputRowCount" : 235
      },
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "StartTimeInMs" : 1702226710520,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 978,
        "IOBytes" : {
          "Total" : 605091,
          "Details" : {
            "IR" : 0,
            "IW" : 0,
            "SR" : 605091,
            "SW" : 0
          }
        }
      }
    },
    "13" : {
      "LQP" : {
        "operators" : {
          "45" : {
            "sign" : 2019201408,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 17256,
            "rowCount" : 1438,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#900] "
          },
          "34" : {
            "sign" : 1910717224,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 82641588984,
            "rowCount" : 2295599694,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (((i_brand_id#32 = brand_id#742) AND (i_class_id#34 = class_id#743)) AND (i_category_id#36 = category_id#744)) "
          },
          "67" : {
            "sign" : -2008482538,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 11490316840,
            "rowCount" : 287257921,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_item_sk#1126 = i_item_sk#1148) "
          },
          "93" : {
            "sign" : -562885986,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 362688,
            "rowCount" : 11334,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [brand_id#742, class_id#743, category_id#744], [brand_id#742, class_id#743, category_id#744], ShuffleQueryStage 81 "
          },
          "12" : {
            "sign" : 571393713,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(ss_item_sk#1053) AND isnotnull(ss_sold_date_sk#1074)) AND dynamicpruning#1303 [ss_sold_date_sk#1074]) "
          },
          "66" : {
            "sign" : 2033168106,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 9192253472,
            "rowCount" : 287257921,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_quantity#1134, ss_list_price#1136, i_brand_id#1155, i_class_id#1157, i_category_id#1159] "
          },
          "89" : {
            "sign" : -1752719423,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 86904000,
            "rowCount" : 204000,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [i_item_sk#1148, i_item_id#1149, i_rec_start_date#1150, i_rec_end_date#1151, i_item_desc#1152, i_current_price#1153, i_wholesale_cost#1154, i_brand_id#1155, i_brand#1156, i_class_id#1157, i_class#1158, i_category_id#1159, i_category#1160, i_manufact_id#1161, i_manufact#1162, i_size#1163, i_formulation#1164, i_color#1165, i_units#1166, i_container#1167, i_manager_id#1168, i_product_name#1169], `spark_catalog`.`tpcds_100`.`item`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "51" : {
            "sign" : 1500374164,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 29800787536,
            "rowCount" : 143273017,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(cs_sold_date_sk#961) AND dynamicpruning#1289 [cs_sold_date_sk#961]) "
          },
          "84" : {
            "sign" : -365670467,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1379777760,
            "rowCount" : 43118055,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_brand_id#834, i_class_id#836, i_category_id#838], ShuffleQueryStage 56 "
          },
          "8" : {
            "sign" : 209187455,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 46207619304,
            "rowCount" : 1925317471,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#1053, ss_quantity#1061, ss_list_price#1063] "
          },
          "73" : {
            "sign" : 1179432008,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#1125, ss_item_sk#1126, ss_customer_sk#1127, ss_cdemo_sk#1128, ss_hdemo_sk#1129, ss_addr_sk#1130, ss_store_sk#1131, ss_promo_sk#1132, ss_ticket_number#1133L, ss_quantity#1134, ss_wholesale_cost#1135, ss_list_price#1136, ss_sales_price#1137, ss_ext_discount_amt#1138, ss_ext_sales_price#1139, ss_ext_wholesale_cost#1140, ss_ext_list_price#1141, ss_ext_tax#1142, ss_coupon_amt#1143, ss_net_paid#1144, ss_net_paid_inc_tax#1145, ss_net_profit#1146, ss_sold_date_sk#1147], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "78" : {
            "sign" : 1734827371,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 492,
            "rowCount" : 2,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(d_year#1243) AND isnotnull(d_moy#1245)) AND isnotnull(d_dom#1246)) AND (((d_year#1243 = 1998) AND (d_moy#1245 = 12)) AND (d_dom#1246 = 16))) "
          },
          "19" : {
            "sign" : -1755539215,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#1209, d_date_id#1210, d_date#1211, d_month_seq#1212, d_week_seq#1213, d_quarter_seq#1214, d_year#1215, d_dow#1216, d_moy#1217, d_dom#1218, d_qoy#1219, d_fy_year#1220, d_fy_quarter_seq#1221, d_fy_week_seq#1222, d_day_name#1223, d_quarter_name#1224, d_holiday#1225, d_weekend#1226, d_following_holiday#1227, d_first_dom#1228, d_last_dom#1229, d_same_day_ly#1230, d_same_day_lq#1231, d_current_day#1232, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "23" : {
            "sign" : -1756391561,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 86282466,
            "rowCount" : 202541,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(i_brand_id#32) AND isnotnull(i_class_id#34)) AND isnotnull(i_category_id#36)) "
          },
          "62" : {
            "sign" : -626435234,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 353748,
            "rowCount" : 1438,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(d_year#1030) AND ((d_year#1030 >= 1998) AND (d_year#1030 <= 2000))) AND isnotnull(d_date_sk#1024)) "
          },
          "4" : {
            "sign" : 550341882,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 10408960,
            "rowCount" : 136960,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(sales#731) AND (cast(sales#731 as decimal(32,6)) > cast(scalar-subquery#735 [] as decimal(32,6)))) "
          },
          "88" : {
            "sign" : -1448453368,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 86282466,
            "rowCount" : 202541,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(i_item_sk#1148) AND isnotnull(i_brand_id#1155)) AND isnotnull(i_class_id#1157)) AND isnotnull(i_category_id#1159)) "
          },
          "77" : {
            "sign" : -79282860,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 24,
            "rowCount" : 2,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_week_seq#1241] "
          },
          "40" : {
            "sign" : 869525063,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 5310811700,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_quantity#886 AS quantity#746, ss_list_price#888 AS list_price#747] "
          },
          "15" : {
            "sign" : 1866012666,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(d_week_seq#1101) AND (d_week_seq#1101 = scalar-subquery#734 [])) AND isnotnull(d_date_sk#1097)) "
          },
          "11" : {
            "sign" : 1222696026,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 7701269884,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#1053, ss_quantity#1061, ss_list_price#1063, ss_sold_date_sk#1074] "
          },
          "90" : {
            "sign" : 1154112415,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 27547196328,
            "rowCount" : 2295599694,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_item_sk#25 AS ss_item_sk#745] "
          },
          "9" : {
            "sign" : -1072142622,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 61610159072,
            "rowCount" : 1925317471,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#1074 = d_date_sk#1097) "
          },
          "44" : {
            "sign" : -1972788865,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#877, ss_item_sk#878, ss_customer_sk#879, ss_cdemo_sk#880, ss_hdemo_sk#881, ss_addr_sk#882, ss_store_sk#883, ss_promo_sk#884, ss_ticket_number#885L, ss_quantity#886, ss_wholesale_cost#887, ss_list_price#888, ss_sales_price#889, ss_ext_discount_amt#890, ss_ext_sales_price#891, ss_ext_wholesale_cost#892, ss_ext_list_price#893, ss_ext_tax#894, ss_coupon_amt#895, ss_net_paid#896, ss_net_paid_inc_tax#897, ss_net_profit#898, ss_sold_date_sk#899], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "33" : {
            "sign" : 271311811,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 27547196328,
            "rowCount" : 2295599694,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_item_sk#25 AS ss_item_sk#745] "
          },
          "22" : {
            "sign" : 2089743597,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 4860984,
            "rowCount" : 202541,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_item_sk#25, i_brand_id#32, i_class_id#34, i_category_id#36] "
          },
          "56" : {
            "sign" : 17831375,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 1389912100,
            "rowCount" : 69495605,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_quantity#1007 AS quantity#750, ws_list_price#1009 AS list_price#751] "
          },
          "55" : {
            "sign" : -169490734,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#962, d_date_id#963, d_date#964, d_month_seq#965, d_week_seq#966, d_quarter_seq#967, d_year#968, d_dow#969, d_moy#970, d_dom#971, d_qoy#972, d_fy_year#973, d_fy_quarter_seq#974, d_fy_week_seq#975, d_day_name#976, d_quarter_name#977, d_holiday#978, d_weekend#979, d_following_holiday#980, d_first_dom#981, d_last_dom#982, d_same_day_ly#983, d_same_day_lq#984, d_current_day#985, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "26" : {
            "sign" : -562886823,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 362688,
            "rowCount" : 11334,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [brand_id#742, class_id#743, category_id#744], [brand_id#742, class_id#743, category_id#744], ShuffleQueryStage 75 "
          },
          "50" : {
            "sign" : 1942236716,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 3438552408,
            "rowCount" : 143273017,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_quantity#945, cs_list_price#947, cs_sold_date_sk#961] "
          },
          "37" : {
            "sign" : -365670591,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1379777760,
            "rowCount" : 43118055,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_brand_id#834, i_class_id#836, i_category_id#838], ShuffleQueryStage 52 "
          },
          "68" : {
            "sign" : -2102976592,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 46207619304,
            "rowCount" : 1925317471,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#1126, ss_quantity#1134, ss_list_price#1136] "
          },
          "61" : {
            "sign" : -1100969675,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 17256,
            "rowCount" : 1438,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#1024] "
          },
          "13" : {
            "sign" : 913239237,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#1052, ss_item_sk#1053, ss_customer_sk#1054, ss_cdemo_sk#1055, ss_hdemo_sk#1056, ss_addr_sk#1057, ss_store_sk#1058, ss_promo_sk#1059, ss_ticket_number#1060L, ss_quantity#1061, ss_wholesale_cost#1062, ss_list_price#1063, ss_sales_price#1064, ss_ext_discount_amt#1065, ss_ext_sales_price#1066, ss_ext_wholesale_cost#1067, ss_ext_list_price#1068, ss_ext_tax#1069, ss_coupon_amt#1070, ss_net_paid#1071, ss_net_paid_inc_tax#1072, ss_net_profit#1073, ss_sold_date_sk#1074], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "46" : {
            "sign" : -2071970095,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 353748,
            "rowCount" : 1438,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(d_year#906) AND ((d_year#906 >= 1998) AND (d_year#906 <= 2000))) AND isnotnull(d_date_sk#900)) "
          },
          "24" : {
            "sign" : 2096275601,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 86904000,
            "rowCount" : 204000,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [i_item_sk#25, i_item_id#26, i_rec_start_date#27, i_rec_end_date#28, i_item_desc#29, i_current_price#30, i_wholesale_cost#31, i_brand_id#32, i_brand#33, i_class_id#34, i_class#35, i_category_id#36, i_category#37, i_manufact_id#38, i_manufact#39, i_size#40, i_formulation#41, i_color#42, i_units#43, i_container#44, i_manager_id#45, i_product_name#46], `spark_catalog`.`tpcds_100`.`item`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "94" : {
            "sign" : -365669692,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1379777760,
            "rowCount" : 43118055,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_brand_id#834, i_class_id#836, i_category_id#838], ShuffleQueryStage 60 "
          },
          "83" : {
            "sign" : -562886699,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 362688,
            "rowCount" : 11334,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [brand_id#742, class_id#743, category_id#744], [brand_id#742, class_id#743, category_id#744], ShuffleQueryStage 79 "
          },
          "35" : {
            "sign" : 823695055,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 226680,
            "rowCount" : 11334,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (((brand_id#742 <=> i_brand_id#834) AND (class_id#743 <=> i_class_id#836)) AND (category_id#744 <=> i_category_id#838)) "
          },
          "16" : {
            "sign" : 682718368,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#1097, d_date_id#1098, d_date#1099, d_month_seq#1100, d_week_seq#1101, d_quarter_seq#1102, d_year#1103, d_dow#1104, d_moy#1105, d_dom#1106, d_qoy#1107, d_fy_year#1108, d_fy_quarter_seq#1109, d_fy_week_seq#1110, d_day_name#1111, d_quarter_name#1112, d_holiday#1113, d_weekend#1114, d_following_holiday#1115, d_first_dom#1116, d_last_dom#1117, d_same_day_ly#1118, d_same_day_lq#1119, d_current_day#1120, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "79" : {
            "sign" : 813769211,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#1237, d_date_id#1238, d_date#1239, d_month_seq#1240, d_week_seq#1241, d_quarter_seq#1242, d_year#1243, d_dow#1244, d_moy#1245, d_dom#1246, d_qoy#1247, d_fy_year#1248, d_fy_quarter_seq#1249, d_fy_week_seq#1250, d_day_name#1251, d_quarter_name#1252, d_holiday#1253, d_weekend#1254, d_following_holiday#1255, d_first_dom#1256, d_last_dom#1257, d_same_day_ly#1258, d_same_day_lq#1259, d_current_day#1260, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "5" : {
            "sign" : -539144950,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 10408960,
            "rowCount" : 136960,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [i_brand_id#1082, i_class_id#1084, i_category_id#1086], [store AS channel#730, i_brand_id#1082, i_class_id#1084, i_category_id#1086, sum((cast(ss_quantity#1061 as decimal(10,0)) * ss_list_price#1063)) AS sales#731, count(1) AS number_sales#732L] "
          },
          "72" : {
            "sign" : -604473204,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(ss_item_sk#1126) AND isnotnull(ss_sold_date_sk#1147)) AND dynamicpruning#1310 [ss_sold_date_sk#1147]) "
          },
          "10" : {
            "sign" : 578793581,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 7701269884,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (ss_item_sk#1053 = ss_item_sk#745) "
          },
          "59" : {
            "sign" : -1902449141,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 14972593792,
            "rowCount" : 71983624,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(ws_sold_date_sk#1023) AND dynamicpruning#1290 [ws_sold_date_sk#1023]) "
          },
          "87" : {
            "sign" : -1062759686,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 4860984,
            "rowCount" : 202541,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_item_sk#1148, i_brand_id#1155, i_class_id#1157, i_category_id#1159] "
          },
          "48" : {
            "sign" : 825651901,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 2770325240,
            "rowCount" : 138516262,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_quantity#945 AS quantity#748, cs_list_price#947 AS list_price#749] "
          },
          "21" : {
            "sign" : -411085469,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 82641588984,
            "rowCount" : 2295599694,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (((i_brand_id#32 = brand_id#742) AND (i_class_id#34 = class_id#743)) AND (i_category_id#36 = category_id#744)) "
          },
          "76" : {
            "sign" : 683629544,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#1170, d_date_id#1171, d_date#1172, d_month_seq#1173, d_week_seq#1174, d_quarter_seq#1175, d_year#1176, d_dow#1177, d_moy#1178, d_dom#1179, d_qoy#1180, d_fy_year#1181, d_fy_quarter_seq#1182, d_fy_week_seq#1183, d_day_name#1184, d_quarter_name#1185, d_holiday#1186, d_weekend#1187, d_following_holiday#1188, d_first_dom#1189, d_last_dom#1190, d_same_day_ly#1191, d_same_day_lq#1192, d_current_day#1193, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "54" : {
            "sign" : -1695423935,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 353748,
            "rowCount" : 1438,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(d_year#968) AND ((d_year#968 >= 1998) AND (d_year#968 <= 2000))) AND isnotnull(d_date_sk#962)) "
          },
          "43" : {
            "sign" : 1377797290,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(ss_sold_date_sk#899) AND dynamicpruning#1288 [ss_sold_date_sk#899]) "
          },
          "65" : {
            "sign" : -686701597,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 10408960,
            "rowCount" : 136960,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [i_brand_id#1155, i_class_id#1157, i_category_id#1159], [store AS channel#736, i_brand_id#1155, i_class_id#1157, i_category_id#1159, sum((cast(ss_quantity#1134 as decimal(10,0)) * ss_list_price#1136)) AS sales#737, count(1) AS number_sales#738L] "
          },
          "71" : {
            "sign" : -303911461,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 7701269884,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#1126, ss_quantity#1134, ss_list_price#1136, ss_sold_date_sk#1147] "
          },
          "57" : {
            "sign" : 1503367439,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 1945876940,
            "rowCount" : 69495605,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ws_sold_date_sk#1023 = d_date_sk#1024) "
          },
          "32" : {
            "sign" : 73332589,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 86904000,
            "rowCount" : 204000,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [i_item_sk#1075, i_item_id#1076, i_rec_start_date#1077, i_rec_end_date#1078, i_item_desc#1079, i_current_price#1080, i_wholesale_cost#1081, i_brand_id#1082, i_brand#1083, i_class_id#1084, i_class#1085, i_category_id#1086, i_category#1087, i_manufact_id#1088, i_manufact#1089, i_size#1090, i_formulation#1091, i_color#1092, i_units#1093, i_container#1094, i_manager_id#1095, i_product_name#1096], `spark_catalog`.`tpcds_100`.`item`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "80" : {
            "sign" : -1376051007,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 27547196328,
            "rowCount" : 2295599694,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_item_sk#25 AS ss_item_sk#745] "
          },
          "82" : {
            "sign" : 942136653,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 226680,
            "rowCount" : 11334,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (((brand_id#742 <=> i_brand_id#834) AND (class_id#743 <=> i_class_id#836)) AND (category_id#744 <=> i_category_id#838)) "
          },
          "49" : {
            "sign" : 824386657,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 3878455336,
            "rowCount" : 138516262,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cs_sold_date_sk#961 = d_date_sk#962) "
          },
          "6" : {
            "sign" : 484012915,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 9192253472,
            "rowCount" : 287257921,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_quantity#1061, ss_list_price#1063, i_brand_id#1082, i_class_id#1084, i_category_id#1086] "
          },
          "36" : {
            "sign" : -562886761,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 362688,
            "rowCount" : 11334,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [brand_id#742, class_id#743, category_id#744], [brand_id#742, class_id#743, category_id#744], ShuffleQueryStage 77 "
          },
          "1" : {
            "sign" : -1631872401,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
            "sizeInBytes" : 19722240,
            "rowCount" : 136960,
            "isRuntime" : false,
            "predicate" : " (unknown) LocalLimit Arguments: 100 "
          },
          "39" : {
            "sign" : -1298322270,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Union",
            "sizeInBytes" : 9471049040,
            "rowCount" : 473552452,
            "isRuntime" : false,
            "predicate" : " (unknown) Union Arguments: false, false "
          },
          "17" : {
            "sign" : -2061501032,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 36,
            "rowCount" : 3,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_week_seq#1213] "
          },
          "25" : {
            "sign" : 705252806,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 226680,
            "rowCount" : 11334,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (((brand_id#742 <=> i_brand_id#834) AND (class_id#743 <=> i_class_id#836)) AND (category_id#744 <=> i_category_id#838)) "
          },
          "60" : {
            "sign" : 1698660872,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 14972593792,
            "rowCount" : 71983624,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ws_sold_time_sk#990, ws_ship_date_sk#991, ws_item_sk#992, ws_bill_customer_sk#993, ws_bill_cdemo_sk#994, ws_bill_hdemo_sk#995, ws_bill_addr_sk#996, ws_ship_customer_sk#997, ws_ship_cdemo_sk#998, ws_ship_hdemo_sk#999, ws_ship_addr_sk#1000, ws_web_page_sk#1001, ws_web_site_sk#1002, ws_ship_mode_sk#1003, ws_warehouse_sk#1004, ws_promo_sk#1005, ws_order_number#1006L, ws_quantity#1007, ws_wholesale_cost#1008, ws_list_price#1009, ws_sales_price#1010, ws_ext_discount_amt#1011, ws_ext_sales_price#1012, ws_ext_wholesale_cost#1013, ... 10 more fields], `spark_catalog`.`tpcds_100`.`web_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "14" : {
            "sign" : 707519831,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 876588,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#1097] "
          },
          "47" : {
            "sign" : -820074406,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#900, d_date_id#901, d_date#902, d_month_seq#903, d_week_seq#904, d_quarter_seq#905, d_year#906, d_dow#907, d_moy#908, d_dom#909, d_qoy#910, d_fy_year#911, d_fy_quarter_seq#912, d_fy_week_seq#913, d_day_name#914, d_quarter_name#915, d_holiday#916, d_weekend#917, d_following_holiday#918, d_first_dom#919, d_last_dom#920, d_same_day_ly#921, d_same_day_lq#922, d_current_day#923, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "31" : {
            "sign" : 579430964,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 86282466,
            "rowCount" : 202541,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(i_item_sk#1075) AND isnotnull(i_brand_id#1082)) AND isnotnull(i_class_id#1084)) AND isnotnull(i_category_id#1086)) "
          },
          "69" : {
            "sign" : 615632574,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 61610159072,
            "rowCount" : 1925317471,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#1147 = d_date_sk#1170) "
          },
          "58" : {
            "sign" : 49678577,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 1727606976,
            "rowCount" : 71983624,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_quantity#1007, ws_list_price#1009, ws_sold_date_sk#1023] "
          },
          "64" : {
            "sign" : -963212728,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 10408960,
            "rowCount" : 136960,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(sales#737) AND (cast(sales#737 as decimal(32,6)) > cast(scalar-subquery#741 [] as decimal(32,6)))) "
          },
          "53" : {
            "sign" : 406087876,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 17256,
            "rowCount" : 1438,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#962] "
          },
          "42" : {
            "sign" : 1776873494,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 6601088472,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_quantity#886, ss_list_price#888, ss_sold_date_sk#899] "
          },
          "75" : {
            "sign" : -1689547051,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(d_week_seq#1174) AND (d_week_seq#1174 = scalar-subquery#740 [])) AND isnotnull(d_date_sk#1170)) "
          },
          "0" : {
            "sign" : -1534871510,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
            "sizeInBytes" : 12000,
            "rowCount" : 100,
            "isRuntime" : false,
            "predicate" : " (unknown) GlobalLimit Arguments: 100 "
          },
          "20" : {
            "sign" : 1918673978,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 27547196328,
            "rowCount" : 2295599694,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_item_sk#25 AS ss_item_sk#745] "
          },
          "27" : {
            "sign" : -365671366,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1379777760,
            "rowCount" : 43118055,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_brand_id#834, i_class_id#836, i_category_id#838], ShuffleQueryStage 48 "
          },
          "70" : {
            "sign" : -184039948,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 7701269884,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (ss_item_sk#1126 = ss_item_sk#745) "
          },
          "2" : {
            "sign" : -378917504,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 19722240,
            "rowCount" : 136960,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [i_brand_id#1082 ASC NULLS FIRST, i_class_id#1084 ASC NULLS FIRST, i_category_id#1086 ASC NULLS FIRST], true "
          },
          "86" : {
            "sign" : 1334935896,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 4860984,
            "rowCount" : 202541,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (i_item_sk#1148 = ss_item_sk#745) "
          },
          "38" : {
            "sign" : -1809172647,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 24,
            "rowCount" : 1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [avg((cast(quantity#746 as decimal(10,0)) * list_price#747)) AS average_sales#752] "
          },
          "81" : {
            "sign" : -62448030,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 82641588984,
            "rowCount" : 2295599694,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (((i_brand_id#32 = brand_id#742) AND (i_class_id#34 = class_id#743)) AND (i_category_id#36 = category_id#744)) "
          },
          "92" : {
            "sign" : -1990752917,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 226680,
            "rowCount" : 11334,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (((brand_id#742 <=> i_brand_id#834) AND (class_id#743 <=> i_class_id#836)) AND (category_id#744 <=> i_category_id#838)) "
          },
          "18" : {
            "sign" : -1305353512,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 738,
            "rowCount" : 3,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(d_year#1215) AND isnotnull(d_moy#1217)) AND isnotnull(d_dom#1218)) AND (((d_year#1215 = 1999) AND (d_moy#1217 = 12)) AND (d_dom#1218 = 16))) "
          },
          "30" : {
            "sign" : 1540331732,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 4860984,
            "rowCount" : 202541,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_item_sk#1075, i_brand_id#1082, i_class_id#1084, i_category_id#1086] "
          },
          "7" : {
            "sign" : 515261378,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 11490316840,
            "rowCount" : 287257921,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_item_sk#1053 = i_item_sk#1075) "
          },
          "29" : {
            "sign" : 725162427,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 4860984,
            "rowCount" : 202541,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (i_item_sk#1075 = ss_item_sk#745) "
          },
          "41" : {
            "sign" : -1804794945,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 7435136380,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#899 = d_date_sk#900) "
          },
          "63" : {
            "sign" : -502763688,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#1024, d_date_id#1025, d_date#1026, d_month_seq#1027, d_week_seq#1028, d_quarter_seq#1029, d_year#1030, d_dow#1031, d_moy#1032, d_dom#1033, d_qoy#1034, d_fy_year#1035, d_fy_quarter_seq#1036, d_fy_week_seq#1037, d_day_name#1038, d_quarter_name#1039, d_holiday#1040, d_weekend#1041, d_following_holiday#1042, d_first_dom#1043, d_last_dom#1044, d_same_day_ly#1045, d_same_day_lq#1046, d_current_day#1047, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "3" : {
            "sign" : -674513440,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 19722240,
            "rowCount" : 136960,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (((i_brand_id#1082 = i_brand_id#1155) AND (i_class_id#1084 = i_class_id#1157)) AND (i_category_id#1086 = i_category_id#1159)) "
          },
          "74" : {
            "sign" : 1096234976,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 876588,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#1170] "
          },
          "91" : {
            "sign" : -1279012622,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 82641588984,
            "rowCount" : 2295599694,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (((i_brand_id#32 = brand_id#742) AND (i_class_id#34 = class_id#743)) AND (i_category_id#36 = category_id#744)) "
          },
          "52" : {
            "sign" : -70077436,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 29800787536,
            "rowCount" : 143273017,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [cs_sold_time_sk#928, cs_ship_date_sk#929, cs_bill_customer_sk#930, cs_bill_cdemo_sk#931, cs_bill_hdemo_sk#932, cs_bill_addr_sk#933, cs_ship_customer_sk#934, cs_ship_cdemo_sk#935, cs_ship_hdemo_sk#936, cs_ship_addr_sk#937, cs_call_center_sk#938, cs_catalog_page_sk#939, cs_ship_mode_sk#940, cs_warehouse_sk#941, cs_item_sk#942, cs_promo_sk#943, cs_order_number#944L, cs_quantity#945, cs_wholesale_cost#946, cs_list_price#947, cs_sales_price#948, cs_ext_discount_amt#949, cs_ext_sales_price#950, cs_ext_wholesale_cost#951, ... 10 more fields], `spark_catalog`.`tpcds_100`.`catalog_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "85" : {
            "sign" : -1902204624,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1048632,
            "rowCount" : 7,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#1170], BroadcastQueryStage 34 "
          },
          "28" : {
            "sign" : -21562714,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1048632,
            "rowCount" : 7,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#1097], BroadcastQueryStage 9 "
          }
        },
        "links" : [ {
          "fromId" : 13,
          "fromName" : "LogicalRelation",
          "toId" : 12,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 16,
          "fromName" : "LogicalRelation",
          "toId" : 15,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 19,
          "fromName" : "LogicalRelation",
          "toId" : 18,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 18,
          "fromName" : "Filter",
          "toId" : 17,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 17,
          "fromName" : "Project",
          "toId" : 15,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 15,
          "fromName" : "Filter",
          "toId" : 14,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 14,
          "fromName" : "Project",
          "toId" : 12,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 12,
          "fromName" : "Filter",
          "toId" : 11,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "Project",
          "toId" : 10,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 24,
          "fromName" : "LogicalRelation",
          "toId" : 23,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 23,
          "fromName" : "Filter",
          "toId" : 22,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 22,
          "fromName" : "Project",
          "toId" : 21,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 26,
          "fromName" : "LogicalQueryStage",
          "toId" : 25,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 27,
          "fromName" : "LogicalQueryStage",
          "toId" : 25,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 25,
          "fromName" : "Join",
          "toId" : 21,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 21,
          "fromName" : "Join",
          "toId" : 20,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 20,
          "fromName" : "Project",
          "toId" : 10,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "Join",
          "toId" : 9,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 28,
          "fromName" : "LogicalQueryStage",
          "toId" : 9,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "Join",
          "toId" : 8,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "Project",
          "toId" : 7,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 32,
          "fromName" : "LogicalRelation",
          "toId" : 31,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 31,
          "fromName" : "Filter",
          "toId" : 30,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 30,
          "fromName" : "Project",
          "toId" : 29,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 22,
          "fromName" : "Project",
          "toId" : 34,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 36,
          "fromName" : "LogicalQueryStage",
          "toId" : 35,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 37,
          "fromName" : "LogicalQueryStage",
          "toId" : 35,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 35,
          "fromName" : "Join",
          "toId" : 34,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 34,
          "fromName" : "Join",
          "toId" : 33,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 33,
          "fromName" : "Project",
          "toId" : 29,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 29,
          "fromName" : "Join",
          "toId" : 7,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Join",
          "toId" : 6,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Project",
          "toId" : 5,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Aggregate",
          "toId" : 4,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 44,
          "fromName" : "LogicalRelation",
          "toId" : 43,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 47,
          "fromName" : "LogicalRelation",
          "toId" : 46,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 46,
          "fromName" : "Filter",
          "toId" : 45,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 45,
          "fromName" : "Project",
          "toId" : 43,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 43,
          "fromName" : "Filter",
          "toId" : 42,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 42,
          "fromName" : "Project",
          "toId" : 41,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 45,
          "fromName" : "Project",
          "toId" : 41,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 41,
          "fromName" : "Join",
          "toId" : 40,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 40,
          "fromName" : "Project",
          "toId" : 39,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 52,
          "fromName" : "LogicalRelation",
          "toId" : 51,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 55,
          "fromName" : "LogicalRelation",
          "toId" : 54,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 54,
          "fromName" : "Filter",
          "toId" : 53,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 53,
          "fromName" : "Project",
          "toId" : 51,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 51,
          "fromName" : "Filter",
          "toId" : 50,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 50,
          "fromName" : "Project",
          "toId" : 49,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 53,
          "fromName" : "Project",
          "toId" : 49,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 49,
          "fromName" : "Join",
          "toId" : 48,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 48,
          "fromName" : "Project",
          "toId" : 39,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 60,
          "fromName" : "LogicalRelation",
          "toId" : 59,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 63,
          "fromName" : "LogicalRelation",
          "toId" : 62,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 62,
          "fromName" : "Filter",
          "toId" : 61,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 61,
          "fromName" : "Project",
          "toId" : 59,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 59,
          "fromName" : "Filter",
          "toId" : 58,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 58,
          "fromName" : "Project",
          "toId" : 57,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 61,
          "fromName" : "Project",
          "toId" : 57,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 57,
          "fromName" : "Join",
          "toId" : 56,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 56,
          "fromName" : "Project",
          "toId" : 39,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 39,
          "fromName" : "Union",
          "toId" : 38,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 38,
          "fromName" : "Aggregate",
          "toId" : 4,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 4,
          "fromName" : "Filter",
          "toId" : 3,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 73,
          "fromName" : "LogicalRelation",
          "toId" : 72,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 76,
          "fromName" : "LogicalRelation",
          "toId" : 75,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 79,
          "fromName" : "LogicalRelation",
          "toId" : 78,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 78,
          "fromName" : "Filter",
          "toId" : 77,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 77,
          "fromName" : "Project",
          "toId" : 75,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 75,
          "fromName" : "Filter",
          "toId" : 74,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 74,
          "fromName" : "Project",
          "toId" : 72,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 72,
          "fromName" : "Filter",
          "toId" : 71,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 71,
          "fromName" : "Project",
          "toId" : 70,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 22,
          "fromName" : "Project",
          "toId" : 81,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 83,
          "fromName" : "LogicalQueryStage",
          "toId" : 82,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 84,
          "fromName" : "LogicalQueryStage",
          "toId" : 82,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 82,
          "fromName" : "Join",
          "toId" : 81,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 81,
          "fromName" : "Join",
          "toId" : 80,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 80,
          "fromName" : "Project",
          "toId" : 70,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 70,
          "fromName" : "Join",
          "toId" : 69,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 85,
          "fromName" : "LogicalQueryStage",
          "toId" : 69,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 69,
          "fromName" : "Join",
          "toId" : 68,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 68,
          "fromName" : "Project",
          "toId" : 67,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 89,
          "fromName" : "LogicalRelation",
          "toId" : 88,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 88,
          "fromName" : "Filter",
          "toId" : 87,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 87,
          "fromName" : "Project",
          "toId" : 86,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 22,
          "fromName" : "Project",
          "toId" : 91,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 93,
          "fromName" : "LogicalQueryStage",
          "toId" : 92,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 94,
          "fromName" : "LogicalQueryStage",
          "toId" : 92,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 92,
          "fromName" : "Join",
          "toId" : 91,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 91,
          "fromName" : "Join",
          "toId" : 90,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 90,
          "fromName" : "Project",
          "toId" : 86,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 86,
          "fromName" : "Join",
          "toId" : 67,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 67,
          "fromName" : "Join",
          "toId" : 66,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 66,
          "fromName" : "Project",
          "toId" : 65,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 65,
          "fromName" : "Aggregate",
          "toId" : 64,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 38,
          "fromName" : "Aggregate",
          "toId" : 64,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 64,
          "fromName" : "Filter",
          "toId" : 3,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Join",
          "toId" : 2,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "LocalLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "LocalLimit",
          "toId" : 0,
          "toName" : "GlobalLimit",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [i_brand_id#1082 ASC NULLS FIRST, i_class_id#1084 ASC NULLS FIRST, i_category_id#1086 ASC NULLS FIRST], true\n      +- Join Inner, (((i_brand_id#1082 = i_brand_id#1155) AND (i_class_id#1084 = i_class_id#1157)) AND (i_category_id#1086 = i_category_id#1159))\n         :- Filter (isnotnull(sales#731) AND (cast(sales#731 as decimal(32,6)) > cast(scalar-subquery#735 [] as decimal(32,6))))\n         :  :  +- Aggregate [avg((cast(quantity#746 as decimal(10,0)) * list_price#747)) AS average_sales#752]\n         :  :     +- Union false, false\n         :  :        :- Project [ss_quantity#886 AS quantity#746, ss_list_price#888 AS list_price#747]\n         :  :        :  +- Join Inner, (ss_sold_date_sk#899 = d_date_sk#900)\n         :  :        :     :- Project [ss_quantity#886, ss_list_price#888, ss_sold_date_sk#899]\n         :  :        :     :  +- Filter (isnotnull(ss_sold_date_sk#899) AND dynamicpruning#1288 [ss_sold_date_sk#899])\n         :  :        :     :     :  +- Project [d_date_sk#900]\n         :  :        :     :     :     +- Filter ((isnotnull(d_year#906) AND ((d_year#906 >= 1998) AND (d_year#906 <= 2000))) AND isnotnull(d_date_sk#900))\n         :  :        :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#900,d_date_id#901,d_date#902,d_month_seq#903,d_week_seq#904,d_quarter_seq#905,d_year#906,d_dow#907,d_moy#908,d_dom#909,d_qoy#910,d_fy_year#911,d_fy_quarter_seq#912,d_fy_week_seq#913,d_day_name#914,d_quarter_name#915,d_holiday#916,d_weekend#917,d_following_holiday#918,d_first_dom#919,d_last_dom#920,d_same_day_ly#921,d_same_day_lq#922,d_current_day#923,... 4 more fields] parquet\n         :  :        :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#877,ss_item_sk#878,ss_customer_sk#879,ss_cdemo_sk#880,ss_hdemo_sk#881,ss_addr_sk#882,ss_store_sk#883,ss_promo_sk#884,ss_ticket_number#885L,ss_quantity#886,ss_wholesale_cost#887,ss_list_price#888,ss_sales_price#889,ss_ext_discount_amt#890,ss_ext_sales_price#891,ss_ext_wholesale_cost#892,ss_ext_list_price#893,ss_ext_tax#894,ss_coupon_amt#895,ss_net_paid#896,ss_net_paid_inc_tax#897,ss_net_profit#898,ss_sold_date_sk#899] parquet\n         :  :        :     +- Project [d_date_sk#900]\n         :  :        :        +- Filter ((isnotnull(d_year#906) AND ((d_year#906 >= 1998) AND (d_year#906 <= 2000))) AND isnotnull(d_date_sk#900))\n         :  :        :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#900,d_date_id#901,d_date#902,d_month_seq#903,d_week_seq#904,d_quarter_seq#905,d_year#906,d_dow#907,d_moy#908,d_dom#909,d_qoy#910,d_fy_year#911,d_fy_quarter_seq#912,d_fy_week_seq#913,d_day_name#914,d_quarter_name#915,d_holiday#916,d_weekend#917,d_following_holiday#918,d_first_dom#919,d_last_dom#920,d_same_day_ly#921,d_same_day_lq#922,d_current_day#923,... 4 more fields] parquet\n         :  :        :- Project [cs_quantity#945 AS quantity#748, cs_list_price#947 AS list_price#749]\n         :  :        :  +- Join Inner, (cs_sold_date_sk#961 = d_date_sk#962)\n         :  :        :     :- Project [cs_quantity#945, cs_list_price#947, cs_sold_date_sk#961]\n         :  :        :     :  +- Filter (isnotnull(cs_sold_date_sk#961) AND dynamicpruning#1289 [cs_sold_date_sk#961])\n         :  :        :     :     :  +- Project [d_date_sk#962]\n         :  :        :     :     :     +- Filter ((isnotnull(d_year#968) AND ((d_year#968 >= 1998) AND (d_year#968 <= 2000))) AND isnotnull(d_date_sk#962))\n         :  :        :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#962,d_date_id#963,d_date#964,d_month_seq#965,d_week_seq#966,d_quarter_seq#967,d_year#968,d_dow#969,d_moy#970,d_dom#971,d_qoy#972,d_fy_year#973,d_fy_quarter_seq#974,d_fy_week_seq#975,d_day_name#976,d_quarter_name#977,d_holiday#978,d_weekend#979,d_following_holiday#980,d_first_dom#981,d_last_dom#982,d_same_day_ly#983,d_same_day_lq#984,d_current_day#985,... 4 more fields] parquet\n         :  :        :     :     +- Relation spark_catalog.tpcds_100.catalog_sales[cs_sold_time_sk#928,cs_ship_date_sk#929,cs_bill_customer_sk#930,cs_bill_cdemo_sk#931,cs_bill_hdemo_sk#932,cs_bill_addr_sk#933,cs_ship_customer_sk#934,cs_ship_cdemo_sk#935,cs_ship_hdemo_sk#936,cs_ship_addr_sk#937,cs_call_center_sk#938,cs_catalog_page_sk#939,cs_ship_mode_sk#940,cs_warehouse_sk#941,cs_item_sk#942,cs_promo_sk#943,cs_order_number#944L,cs_quantity#945,cs_wholesale_cost#946,cs_list_price#947,cs_sales_price#948,cs_ext_discount_amt#949,cs_ext_sales_price#950,cs_ext_wholesale_cost#951,... 10 more fields] parquet\n         :  :        :     +- Project [d_date_sk#962]\n         :  :        :        +- Filter ((isnotnull(d_year#968) AND ((d_year#968 >= 1998) AND (d_year#968 <= 2000))) AND isnotnull(d_date_sk#962))\n         :  :        :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#962,d_date_id#963,d_date#964,d_month_seq#965,d_week_seq#966,d_quarter_seq#967,d_year#968,d_dow#969,d_moy#970,d_dom#971,d_qoy#972,d_fy_year#973,d_fy_quarter_seq#974,d_fy_week_seq#975,d_day_name#976,d_quarter_name#977,d_holiday#978,d_weekend#979,d_following_holiday#980,d_first_dom#981,d_last_dom#982,d_same_day_ly#983,d_same_day_lq#984,d_current_day#985,... 4 more fields] parquet\n         :  :        +- Project [ws_quantity#1007 AS quantity#750, ws_list_price#1009 AS list_price#751]\n         :  :           +- Join Inner, (ws_sold_date_sk#1023 = d_date_sk#1024)\n         :  :              :- Project [ws_quantity#1007, ws_list_price#1009, ws_sold_date_sk#1023]\n         :  :              :  +- Filter (isnotnull(ws_sold_date_sk#1023) AND dynamicpruning#1290 [ws_sold_date_sk#1023])\n         :  :              :     :  +- Project [d_date_sk#1024]\n         :  :              :     :     +- Filter ((isnotnull(d_year#1030) AND ((d_year#1030 >= 1998) AND (d_year#1030 <= 2000))) AND isnotnull(d_date_sk#1024))\n         :  :              :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#1024,d_date_id#1025,d_date#1026,d_month_seq#1027,d_week_seq#1028,d_quarter_seq#1029,d_year#1030,d_dow#1031,d_moy#1032,d_dom#1033,d_qoy#1034,d_fy_year#1035,d_fy_quarter_seq#1036,d_fy_week_seq#1037,d_day_name#1038,d_quarter_name#1039,d_holiday#1040,d_weekend#1041,d_following_holiday#1042,d_first_dom#1043,d_last_dom#1044,d_same_day_ly#1045,d_same_day_lq#1046,d_current_day#1047,... 4 more fields] parquet\n         :  :              :     +- Relation spark_catalog.tpcds_100.web_sales[ws_sold_time_sk#990,ws_ship_date_sk#991,ws_item_sk#992,ws_bill_customer_sk#993,ws_bill_cdemo_sk#994,ws_bill_hdemo_sk#995,ws_bill_addr_sk#996,ws_ship_customer_sk#997,ws_ship_cdemo_sk#998,ws_ship_hdemo_sk#999,ws_ship_addr_sk#1000,ws_web_page_sk#1001,ws_web_site_sk#1002,ws_ship_mode_sk#1003,ws_warehouse_sk#1004,ws_promo_sk#1005,ws_order_number#1006L,ws_quantity#1007,ws_wholesale_cost#1008,ws_list_price#1009,ws_sales_price#1010,ws_ext_discount_amt#1011,ws_ext_sales_price#1012,ws_ext_wholesale_cost#1013,... 10 more fields] parquet\n         :  :              +- Project [d_date_sk#1024]\n         :  :                 +- Filter ((isnotnull(d_year#1030) AND ((d_year#1030 >= 1998) AND (d_year#1030 <= 2000))) AND isnotnull(d_date_sk#1024))\n         :  :                    +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#1024,d_date_id#1025,d_date#1026,d_month_seq#1027,d_week_seq#1028,d_quarter_seq#1029,d_year#1030,d_dow#1031,d_moy#1032,d_dom#1033,d_qoy#1034,d_fy_year#1035,d_fy_quarter_seq#1036,d_fy_week_seq#1037,d_day_name#1038,d_quarter_name#1039,d_holiday#1040,d_weekend#1041,d_following_holiday#1042,d_first_dom#1043,d_last_dom#1044,d_same_day_ly#1045,d_same_day_lq#1046,d_current_day#1047,... 4 more fields] parquet\n         :  +- Aggregate [i_brand_id#1082, i_class_id#1084, i_category_id#1086], [store AS channel#730, i_brand_id#1082, i_class_id#1084, i_category_id#1086, sum((cast(ss_quantity#1061 as decimal(10,0)) * ss_list_price#1063)) AS sales#731, count(1) AS number_sales#732L]\n         :     +- Project [ss_quantity#1061, ss_list_price#1063, i_brand_id#1082, i_class_id#1084, i_category_id#1086]\n         :        +- Join Inner, (ss_item_sk#1053 = i_item_sk#1075)\n         :           :- Project [ss_item_sk#1053, ss_quantity#1061, ss_list_price#1063]\n         :           :  +- Join Inner, (ss_sold_date_sk#1074 = d_date_sk#1097)\n         :           :     :- Join LeftSemi, (ss_item_sk#1053 = ss_item_sk#745)\n         :           :     :  :- Project [ss_item_sk#1053, ss_quantity#1061, ss_list_price#1063, ss_sold_date_sk#1074]\n         :           :     :  :  +- Filter ((isnotnull(ss_item_sk#1053) AND isnotnull(ss_sold_date_sk#1074)) AND dynamicpruning#1303 [ss_sold_date_sk#1074])\n         :           :     :  :     :  +- Project [d_date_sk#1097]\n         :           :     :  :     :     +- Filter ((isnotnull(d_week_seq#1101) AND (d_week_seq#1101 = scalar-subquery#734 [])) AND isnotnull(d_date_sk#1097))\n         :           :     :  :     :        :  +- Project [d_week_seq#1213]\n         :           :     :  :     :        :     +- Filter (((isnotnull(d_year#1215) AND isnotnull(d_moy#1217)) AND isnotnull(d_dom#1218)) AND (((d_year#1215 = 1999) AND (d_moy#1217 = 12)) AND (d_dom#1218 = 16)))\n         :           :     :  :     :        :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#1209,d_date_id#1210,d_date#1211,d_month_seq#1212,d_week_seq#1213,d_quarter_seq#1214,d_year#1215,d_dow#1216,d_moy#1217,d_dom#1218,d_qoy#1219,d_fy_year#1220,d_fy_quarter_seq#1221,d_fy_week_seq#1222,d_day_name#1223,d_quarter_name#1224,d_holiday#1225,d_weekend#1226,d_following_holiday#1227,d_first_dom#1228,d_last_dom#1229,d_same_day_ly#1230,d_same_day_lq#1231,d_current_day#1232,... 4 more fields] parquet\n         :           :     :  :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#1097,d_date_id#1098,d_date#1099,d_month_seq#1100,d_week_seq#1101,d_quarter_seq#1102,d_year#1103,d_dow#1104,d_moy#1105,d_dom#1106,d_qoy#1107,d_fy_year#1108,d_fy_quarter_seq#1109,d_fy_week_seq#1110,d_day_name#1111,d_quarter_name#1112,d_holiday#1113,d_weekend#1114,d_following_holiday#1115,d_first_dom#1116,d_last_dom#1117,d_same_day_ly#1118,d_same_day_lq#1119,d_current_day#1120,... 4 more fields] parquet\n         :           :     :  :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#1052,ss_item_sk#1053,ss_customer_sk#1054,ss_cdemo_sk#1055,ss_hdemo_sk#1056,ss_addr_sk#1057,ss_store_sk#1058,ss_promo_sk#1059,ss_ticket_number#1060L,ss_quantity#1061,ss_wholesale_cost#1062,ss_list_price#1063,ss_sales_price#1064,ss_ext_discount_amt#1065,ss_ext_sales_price#1066,ss_ext_wholesale_cost#1067,ss_ext_list_price#1068,ss_ext_tax#1069,ss_coupon_amt#1070,ss_net_paid#1071,ss_net_paid_inc_tax#1072,ss_net_profit#1073,ss_sold_date_sk#1074] parquet\n         :           :     :  +- Project [i_item_sk#25 AS ss_item_sk#745]\n         :           :     :     +- Join Inner, (((i_brand_id#32 = brand_id#742) AND (i_class_id#34 = class_id#743)) AND (i_category_id#36 = category_id#744))\n         :           :     :        :- Project [i_item_sk#25, i_brand_id#32, i_class_id#34, i_category_id#36]\n         :           :     :        :  +- Filter ((isnotnull(i_brand_id#32) AND isnotnull(i_class_id#34)) AND isnotnull(i_category_id#36))\n         :           :     :        :     +- Relation spark_catalog.tpcds_100.item[i_item_sk#25,i_item_id#26,i_rec_start_date#27,i_rec_end_date#28,i_item_desc#29,i_current_price#30,i_wholesale_cost#31,i_brand_id#32,i_brand#33,i_class_id#34,i_class#35,i_category_id#36,i_category#37,i_manufact_id#38,i_manufact#39,i_size#40,i_formulation#41,i_color#42,i_units#43,i_container#44,i_manager_id#45,i_product_name#46] parquet\n         :           :     :        +- Join LeftSemi, (((brand_id#742 <=> i_brand_id#834) AND (class_id#743 <=> i_class_id#836)) AND (category_id#744 <=> i_category_id#838))\n         :           :     :           :- LogicalQueryStage Aggregate [brand_id#742, class_id#743, category_id#744], [brand_id#742, class_id#743, category_id#744], ShuffleQueryStage 75\n         :           :     :           +- LogicalQueryStage Project [i_brand_id#834, i_class_id#836, i_category_id#838], ShuffleQueryStage 48\n         :           :     +- LogicalQueryStage Project [d_date_sk#1097], BroadcastQueryStage 9\n         :           +- Join LeftSemi, (i_item_sk#1075 = ss_item_sk#745)\n         :              :- Project [i_item_sk#1075, i_brand_id#1082, i_class_id#1084, i_category_id#1086]\n         :              :  +- Filter (((isnotnull(i_item_sk#1075) AND isnotnull(i_brand_id#1082)) AND isnotnull(i_class_id#1084)) AND isnotnull(i_category_id#1086))\n         :              :     +- Relation spark_catalog.tpcds_100.item[i_item_sk#1075,i_item_id#1076,i_rec_start_date#1077,i_rec_end_date#1078,i_item_desc#1079,i_current_price#1080,i_wholesale_cost#1081,i_brand_id#1082,i_brand#1083,i_class_id#1084,i_class#1085,i_category_id#1086,i_category#1087,i_manufact_id#1088,i_manufact#1089,i_size#1090,i_formulation#1091,i_color#1092,i_units#1093,i_container#1094,i_manager_id#1095,i_product_name#1096] parquet\n         :              +- Project [i_item_sk#25 AS ss_item_sk#745]\n         :                 +- Join Inner, (((i_brand_id#32 = brand_id#742) AND (i_class_id#34 = class_id#743)) AND (i_category_id#36 = category_id#744))\n         :                    :- Project [i_item_sk#25, i_brand_id#32, i_class_id#34, i_category_id#36]\n         :                    :  +- Filter ((isnotnull(i_brand_id#32) AND isnotnull(i_class_id#34)) AND isnotnull(i_category_id#36))\n         :                    :     +- Relation spark_catalog.tpcds_100.item[i_item_sk#25,i_item_id#26,i_rec_start_date#27,i_rec_end_date#28,i_item_desc#29,i_current_price#30,i_wholesale_cost#31,i_brand_id#32,i_brand#33,i_class_id#34,i_class#35,i_category_id#36,i_category#37,i_manufact_id#38,i_manufact#39,i_size#40,i_formulation#41,i_color#42,i_units#43,i_container#44,i_manager_id#45,i_product_name#46] parquet\n         :                    +- Join LeftSemi, (((brand_id#742 <=> i_brand_id#834) AND (class_id#743 <=> i_class_id#836)) AND (category_id#744 <=> i_category_id#838))\n         :                       :- LogicalQueryStage Aggregate [brand_id#742, class_id#743, category_id#744], [brand_id#742, class_id#743, category_id#744], ShuffleQueryStage 77\n         :                       +- LogicalQueryStage Project [i_brand_id#834, i_class_id#836, i_category_id#838], ShuffleQueryStage 52\n         +- Filter (isnotnull(sales#737) AND (cast(sales#737 as decimal(32,6)) > cast(scalar-subquery#741 [] as decimal(32,6))))\n            :  +- Aggregate [avg((cast(quantity#746 as decimal(10,0)) * list_price#747)) AS average_sales#752]\n            :     +- Union false, false\n            :        :- Project [ss_quantity#886 AS quantity#746, ss_list_price#888 AS list_price#747]\n            :        :  +- Join Inner, (ss_sold_date_sk#899 = d_date_sk#900)\n            :        :     :- Project [ss_quantity#886, ss_list_price#888, ss_sold_date_sk#899]\n            :        :     :  +- Filter (isnotnull(ss_sold_date_sk#899) AND dynamicpruning#1288 [ss_sold_date_sk#899])\n            :        :     :     :  +- Project [d_date_sk#900]\n            :        :     :     :     +- Filter ((isnotnull(d_year#906) AND ((d_year#906 >= 1998) AND (d_year#906 <= 2000))) AND isnotnull(d_date_sk#900))\n            :        :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#900,d_date_id#901,d_date#902,d_month_seq#903,d_week_seq#904,d_quarter_seq#905,d_year#906,d_dow#907,d_moy#908,d_dom#909,d_qoy#910,d_fy_year#911,d_fy_quarter_seq#912,d_fy_week_seq#913,d_day_name#914,d_quarter_name#915,d_holiday#916,d_weekend#917,d_following_holiday#918,d_first_dom#919,d_last_dom#920,d_same_day_ly#921,d_same_day_lq#922,d_current_day#923,... 4 more fields] parquet\n            :        :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#877,ss_item_sk#878,ss_customer_sk#879,ss_cdemo_sk#880,ss_hdemo_sk#881,ss_addr_sk#882,ss_store_sk#883,ss_promo_sk#884,ss_ticket_number#885L,ss_quantity#886,ss_wholesale_cost#887,ss_list_price#888,ss_sales_price#889,ss_ext_discount_amt#890,ss_ext_sales_price#891,ss_ext_wholesale_cost#892,ss_ext_list_price#893,ss_ext_tax#894,ss_coupon_amt#895,ss_net_paid#896,ss_net_paid_inc_tax#897,ss_net_profit#898,ss_sold_date_sk#899] parquet\n            :        :     +- Project [d_date_sk#900]\n            :        :        +- Filter ((isnotnull(d_year#906) AND ((d_year#906 >= 1998) AND (d_year#906 <= 2000))) AND isnotnull(d_date_sk#900))\n            :        :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#900,d_date_id#901,d_date#902,d_month_seq#903,d_week_seq#904,d_quarter_seq#905,d_year#906,d_dow#907,d_moy#908,d_dom#909,d_qoy#910,d_fy_year#911,d_fy_quarter_seq#912,d_fy_week_seq#913,d_day_name#914,d_quarter_name#915,d_holiday#916,d_weekend#917,d_following_holiday#918,d_first_dom#919,d_last_dom#920,d_same_day_ly#921,d_same_day_lq#922,d_current_day#923,... 4 more fields] parquet\n            :        :- Project [cs_quantity#945 AS quantity#748, cs_list_price#947 AS list_price#749]\n            :        :  +- Join Inner, (cs_sold_date_sk#961 = d_date_sk#962)\n            :        :     :- Project [cs_quantity#945, cs_list_price#947, cs_sold_date_sk#961]\n            :        :     :  +- Filter (isnotnull(cs_sold_date_sk#961) AND dynamicpruning#1289 [cs_sold_date_sk#961])\n            :        :     :     :  +- Project [d_date_sk#962]\n            :        :     :     :     +- Filter ((isnotnull(d_year#968) AND ((d_year#968 >= 1998) AND (d_year#968 <= 2000))) AND isnotnull(d_date_sk#962))\n            :        :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#962,d_date_id#963,d_date#964,d_month_seq#965,d_week_seq#966,d_quarter_seq#967,d_year#968,d_dow#969,d_moy#970,d_dom#971,d_qoy#972,d_fy_year#973,d_fy_quarter_seq#974,d_fy_week_seq#975,d_day_name#976,d_quarter_name#977,d_holiday#978,d_weekend#979,d_following_holiday#980,d_first_dom#981,d_last_dom#982,d_same_day_ly#983,d_same_day_lq#984,d_current_day#985,... 4 more fields] parquet\n            :        :     :     +- Relation spark_catalog.tpcds_100.catalog_sales[cs_sold_time_sk#928,cs_ship_date_sk#929,cs_bill_customer_sk#930,cs_bill_cdemo_sk#931,cs_bill_hdemo_sk#932,cs_bill_addr_sk#933,cs_ship_customer_sk#934,cs_ship_cdemo_sk#935,cs_ship_hdemo_sk#936,cs_ship_addr_sk#937,cs_call_center_sk#938,cs_catalog_page_sk#939,cs_ship_mode_sk#940,cs_warehouse_sk#941,cs_item_sk#942,cs_promo_sk#943,cs_order_number#944L,cs_quantity#945,cs_wholesale_cost#946,cs_list_price#947,cs_sales_price#948,cs_ext_discount_amt#949,cs_ext_sales_price#950,cs_ext_wholesale_cost#951,... 10 more fields] parquet\n            :        :     +- Project [d_date_sk#962]\n            :        :        +- Filter ((isnotnull(d_year#968) AND ((d_year#968 >= 1998) AND (d_year#968 <= 2000))) AND isnotnull(d_date_sk#962))\n            :        :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#962,d_date_id#963,d_date#964,d_month_seq#965,d_week_seq#966,d_quarter_seq#967,d_year#968,d_dow#969,d_moy#970,d_dom#971,d_qoy#972,d_fy_year#973,d_fy_quarter_seq#974,d_fy_week_seq#975,d_day_name#976,d_quarter_name#977,d_holiday#978,d_weekend#979,d_following_holiday#980,d_first_dom#981,d_last_dom#982,d_same_day_ly#983,d_same_day_lq#984,d_current_day#985,... 4 more fields] parquet\n            :        +- Project [ws_quantity#1007 AS quantity#750, ws_list_price#1009 AS list_price#751]\n            :           +- Join Inner, (ws_sold_date_sk#1023 = d_date_sk#1024)\n            :              :- Project [ws_quantity#1007, ws_list_price#1009, ws_sold_date_sk#1023]\n            :              :  +- Filter (isnotnull(ws_sold_date_sk#1023) AND dynamicpruning#1290 [ws_sold_date_sk#1023])\n            :              :     :  +- Project [d_date_sk#1024]\n            :              :     :     +- Filter ((isnotnull(d_year#1030) AND ((d_year#1030 >= 1998) AND (d_year#1030 <= 2000))) AND isnotnull(d_date_sk#1024))\n            :              :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#1024,d_date_id#1025,d_date#1026,d_month_seq#1027,d_week_seq#1028,d_quarter_seq#1029,d_year#1030,d_dow#1031,d_moy#1032,d_dom#1033,d_qoy#1034,d_fy_year#1035,d_fy_quarter_seq#1036,d_fy_week_seq#1037,d_day_name#1038,d_quarter_name#1039,d_holiday#1040,d_weekend#1041,d_following_holiday#1042,d_first_dom#1043,d_last_dom#1044,d_same_day_ly#1045,d_same_day_lq#1046,d_current_day#1047,... 4 more fields] parquet\n            :              :     +- Relation spark_catalog.tpcds_100.web_sales[ws_sold_time_sk#990,ws_ship_date_sk#991,ws_item_sk#992,ws_bill_customer_sk#993,ws_bill_cdemo_sk#994,ws_bill_hdemo_sk#995,ws_bill_addr_sk#996,ws_ship_customer_sk#997,ws_ship_cdemo_sk#998,ws_ship_hdemo_sk#999,ws_ship_addr_sk#1000,ws_web_page_sk#1001,ws_web_site_sk#1002,ws_ship_mode_sk#1003,ws_warehouse_sk#1004,ws_promo_sk#1005,ws_order_number#1006L,ws_quantity#1007,ws_wholesale_cost#1008,ws_list_price#1009,ws_sales_price#1010,ws_ext_discount_amt#1011,ws_ext_sales_price#1012,ws_ext_wholesale_cost#1013,... 10 more fields] parquet\n            :              +- Project [d_date_sk#1024]\n            :                 +- Filter ((isnotnull(d_year#1030) AND ((d_year#1030 >= 1998) AND (d_year#1030 <= 2000))) AND isnotnull(d_date_sk#1024))\n            :                    +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#1024,d_date_id#1025,d_date#1026,d_month_seq#1027,d_week_seq#1028,d_quarter_seq#1029,d_year#1030,d_dow#1031,d_moy#1032,d_dom#1033,d_qoy#1034,d_fy_year#1035,d_fy_quarter_seq#1036,d_fy_week_seq#1037,d_day_name#1038,d_quarter_name#1039,d_holiday#1040,d_weekend#1041,d_following_holiday#1042,d_first_dom#1043,d_last_dom#1044,d_same_day_ly#1045,d_same_day_lq#1046,d_current_day#1047,... 4 more fields] parquet\n            +- Aggregate [i_brand_id#1155, i_class_id#1157, i_category_id#1159], [store AS channel#736, i_brand_id#1155, i_class_id#1157, i_category_id#1159, sum((cast(ss_quantity#1134 as decimal(10,0)) * ss_list_price#1136)) AS sales#737, count(1) AS number_sales#738L]\n               +- Project [ss_quantity#1134, ss_list_price#1136, i_brand_id#1155, i_class_id#1157, i_category_id#1159]\n                  +- Join Inner, (ss_item_sk#1126 = i_item_sk#1148)\n                     :- Project [ss_item_sk#1126, ss_quantity#1134, ss_list_price#1136]\n                     :  +- Join Inner, (ss_sold_date_sk#1147 = d_date_sk#1170)\n                     :     :- Join LeftSemi, (ss_item_sk#1126 = ss_item_sk#745)\n                     :     :  :- Project [ss_item_sk#1126, ss_quantity#1134, ss_list_price#1136, ss_sold_date_sk#1147]\n                     :     :  :  +- Filter ((isnotnull(ss_item_sk#1126) AND isnotnull(ss_sold_date_sk#1147)) AND dynamicpruning#1310 [ss_sold_date_sk#1147])\n                     :     :  :     :  +- Project [d_date_sk#1170]\n                     :     :  :     :     +- Filter ((isnotnull(d_week_seq#1174) AND (d_week_seq#1174 = scalar-subquery#740 [])) AND isnotnull(d_date_sk#1170))\n                     :     :  :     :        :  +- Project [d_week_seq#1241]\n                     :     :  :     :        :     +- Filter (((isnotnull(d_year#1243) AND isnotnull(d_moy#1245)) AND isnotnull(d_dom#1246)) AND (((d_year#1243 = 1998) AND (d_moy#1245 = 12)) AND (d_dom#1246 = 16)))\n                     :     :  :     :        :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#1237,d_date_id#1238,d_date#1239,d_month_seq#1240,d_week_seq#1241,d_quarter_seq#1242,d_year#1243,d_dow#1244,d_moy#1245,d_dom#1246,d_qoy#1247,d_fy_year#1248,d_fy_quarter_seq#1249,d_fy_week_seq#1250,d_day_name#1251,d_quarter_name#1252,d_holiday#1253,d_weekend#1254,d_following_holiday#1255,d_first_dom#1256,d_last_dom#1257,d_same_day_ly#1258,d_same_day_lq#1259,d_current_day#1260,... 4 more fields] parquet\n                     :     :  :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#1170,d_date_id#1171,d_date#1172,d_month_seq#1173,d_week_seq#1174,d_quarter_seq#1175,d_year#1176,d_dow#1177,d_moy#1178,d_dom#1179,d_qoy#1180,d_fy_year#1181,d_fy_quarter_seq#1182,d_fy_week_seq#1183,d_day_name#1184,d_quarter_name#1185,d_holiday#1186,d_weekend#1187,d_following_holiday#1188,d_first_dom#1189,d_last_dom#1190,d_same_day_ly#1191,d_same_day_lq#1192,d_current_day#1193,... 4 more fields] parquet\n                     :     :  :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#1125,ss_item_sk#1126,ss_customer_sk#1127,ss_cdemo_sk#1128,ss_hdemo_sk#1129,ss_addr_sk#1130,ss_store_sk#1131,ss_promo_sk#1132,ss_ticket_number#1133L,ss_quantity#1134,ss_wholesale_cost#1135,ss_list_price#1136,ss_sales_price#1137,ss_ext_discount_amt#1138,ss_ext_sales_price#1139,ss_ext_wholesale_cost#1140,ss_ext_list_price#1141,ss_ext_tax#1142,ss_coupon_amt#1143,ss_net_paid#1144,ss_net_paid_inc_tax#1145,ss_net_profit#1146,ss_sold_date_sk#1147] parquet\n                     :     :  +- Project [i_item_sk#25 AS ss_item_sk#745]\n                     :     :     +- Join Inner, (((i_brand_id#32 = brand_id#742) AND (i_class_id#34 = class_id#743)) AND (i_category_id#36 = category_id#744))\n                     :     :        :- Project [i_item_sk#25, i_brand_id#32, i_class_id#34, i_category_id#36]\n                     :     :        :  +- Filter ((isnotnull(i_brand_id#32) AND isnotnull(i_class_id#34)) AND isnotnull(i_category_id#36))\n                     :     :        :     +- Relation spark_catalog.tpcds_100.item[i_item_sk#25,i_item_id#26,i_rec_start_date#27,i_rec_end_date#28,i_item_desc#29,i_current_price#30,i_wholesale_cost#31,i_brand_id#32,i_brand#33,i_class_id#34,i_class#35,i_category_id#36,i_category#37,i_manufact_id#38,i_manufact#39,i_size#40,i_formulation#41,i_color#42,i_units#43,i_container#44,i_manager_id#45,i_product_name#46] parquet\n                     :     :        +- Join LeftSemi, (((brand_id#742 <=> i_brand_id#834) AND (class_id#743 <=> i_class_id#836)) AND (category_id#744 <=> i_category_id#838))\n                     :     :           :- LogicalQueryStage Aggregate [brand_id#742, class_id#743, category_id#744], [brand_id#742, class_id#743, category_id#744], ShuffleQueryStage 79\n                     :     :           +- LogicalQueryStage Project [i_brand_id#834, i_class_id#836, i_category_id#838], ShuffleQueryStage 56\n                     :     +- LogicalQueryStage Project [d_date_sk#1170], BroadcastQueryStage 34\n                     +- Join LeftSemi, (i_item_sk#1148 = ss_item_sk#745)\n                        :- Project [i_item_sk#1148, i_brand_id#1155, i_class_id#1157, i_category_id#1159]\n                        :  +- Filter (((isnotnull(i_item_sk#1148) AND isnotnull(i_brand_id#1155)) AND isnotnull(i_class_id#1157)) AND isnotnull(i_category_id#1159))\n                        :     +- Relation spark_catalog.tpcds_100.item[i_item_sk#1148,i_item_id#1149,i_rec_start_date#1150,i_rec_end_date#1151,i_item_desc#1152,i_current_price#1153,i_wholesale_cost#1154,i_brand_id#1155,i_brand#1156,i_class_id#1157,i_class#1158,i_category_id#1159,i_category#1160,i_manufact_id#1161,i_manufact#1162,i_size#1163,i_formulation#1164,i_color#1165,i_units#1166,i_container#1167,i_manager_id#1168,i_product_name#1169] parquet\n                        +- Project [i_item_sk#25 AS ss_item_sk#745]\n                           +- Join Inner, (((i_brand_id#32 = brand_id#742) AND (i_class_id#34 = class_id#743)) AND (i_category_id#36 = category_id#744))\n                              :- Project [i_item_sk#25, i_brand_id#32, i_class_id#34, i_category_id#36]\n                              :  +- Filter ((isnotnull(i_brand_id#32) AND isnotnull(i_class_id#34)) AND isnotnull(i_category_id#36))\n                              :     +- Relation spark_catalog.tpcds_100.item[i_item_sk#25,i_item_id#26,i_rec_start_date#27,i_rec_end_date#28,i_item_desc#29,i_current_price#30,i_wholesale_cost#31,i_brand_id#32,i_brand#33,i_class_id#34,i_class#35,i_category_id#36,i_category#37,i_manufact_id#38,i_manufact#39,i_size#40,i_formulation#41,i_color#42,i_units#43,i_container#44,i_manager_id#45,i_product_name#46] parquet\n                              +- Join LeftSemi, (((brand_id#742 <=> i_brand_id#834) AND (class_id#743 <=> i_class_id#836)) AND (category_id#744 <=> i_category_id#838))\n                                 :- LogicalQueryStage Aggregate [brand_id#742, class_id#743, category_id#744], [brand_id#742, class_id#743, category_id#744], ShuffleQueryStage 81\n                                 +- LogicalQueryStage Project [i_brand_id#834, i_class_id#836, i_category_id#838], ShuffleQueryStage 60\n"
      },
      "IM" : {
        "inputSizeInBytes" : 89657870368,
        "inputRowCount" : 723832276
      },
      "PD" : {
        "2" : [ 177962, 455930, 415323, 324034, 407180, 578113, 259800, 210766, 416594, 365097, 722932, 430581, 737269, 1031975, 1514187, 472059, 101032, 459828, 347329, 114427, 94836, 1079666, 1326142, 383040, 175045, 486302, 702614, 800093, 2890585, 749715, 100494, 720165, 530316, 795278, 705228, 310364, 730188, 287903, 255104, 608403, 493741, 197579, 98211, 1196389, 851488, 408258, 740122, 162471, 235750, 429841, 280551, 434095, 986907, 459535, 521411, 444089, 345779, 644089, 1511511, 259033, 857504, 440487, 655905, 522602, 1260769, 704242, 355941, 572333, 482841, 779237, 447588, 350687, 323737, 1316494, 306270, 639573, 819553, 701140, 669174, 780010, 675042, 476951, 636674, 322479, 897583, 280582, 223958, 573984, 561763, 119797, 430493, 121994, 311747, 117433, 377765, 318296, 740667, 431248, 547706, 508009, 414691, 367457, 723737, 442906, 583473, 347572, 1269089, 287286, 380605, 786487, 704711, 1465276, 758753, 673171, 160802, 291861, 864733, 186361, 546087, 1459274, 1695574, 115478, 421893, 386121, 312819, 164972, 1072990, 214957, 152503, 420284, 300056, 868375, 940076, 349342, 205208, 928322, 195265, 461329, 359228, 419971, 560162, 326400, 702646, 957888, 320780, 321516, 414771, 187523, 870857, 1055493, 342091, 506784, 282728, 1045719, 262333, 128426, 495313, 750638, 98964, 1366471, 574893, 319167, 147634, 1547306, 890810, 507583, 261595, 408664, 943050, 676186, 857526, 578999, 449016, 240998, 433603, 682640, 120305, 912938, 1129760, 525413, 547769, 609464, 611740, 324072, 206504, 2926245, 295669, 919509, 366206, 535787, 794086, 708510, 622156, 383847, 1071951, 677651, 914990, 923202, 596798, 344327 ],
        "4" : [ 717, 789, 789, 868, 789, 868, 789, 789, 868, 593, 955, 868, 955, 868, 868, 789, 868, 789, 789, 789, 789, 1051, 955, 868, 868, 868, 868, 868, 868, 868, 717, 955, 789, 789, 955, 789, 955, 868, 652, 868, 789, 717, 789, 955, 789, 717, 789, 789, 868, 717, 789, 717, 955, 955, 868, 717, 868, 717, 868, 789, 955, 955, 789, 789, 789, 789, 652, 789, 955, 955, 868, 789, 789, 868, 717, 868, 955, 868, 717, 1051, 868, 789, 868, 955, 868, 868, 955, 789, 1156, 868, 717, 593, 789, 652, 789, 789, 868, 717, 789, 868, 955, 717, 717, 955, 1051, 789, 868, 868, 717, 789, 868, 717, 652, 789, 955, 789, 789, 593, 868, 868, 868, 717, 868, 868, 717, 868, 717, 868, 652, 1156, 789, 868, 789, 955, 868, 789, 789, 717, 789, 868, 868, 1051, 789, 955, 717, 717, 868, 652, 789, 868, 1051, 789, 789, 789, 868, 717, 789, 955, 789, 955, 717, 789, 868, 868, 868, 789, 717, 868, 955, 789, 955, 868, 789, 717, 717, 868, 652, 1051, 955, 789, 717, 1051, 868, 955, 868, 789, 868, 868, 789, 955, 955, 868, 789, 868, 868, 868, 955, 789, 868, 789 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "StartTimeInMs" : 1702226677439,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 34059,
        "IOBytes" : {
          "Total" : 1627837306,
          "Details" : {
            "IR" : 1515967397,
            "IW" : 0,
            "SR" : 111264818,
            "SW" : 605091
          }
        }
      }
    },
    "16" : {
      "LQP" : {
        "operators" : {
          "45" : {
            "sign" : 17831375,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 1389912100,
            "rowCount" : 69495605,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_quantity#1007 AS quantity#750, ws_list_price#1009 AS list_price#751] "
          },
          "34" : {
            "sign" : 2019201408,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 17256,
            "rowCount" : 1438,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#900] "
          },
          "67" : {
            "sign" : 1734827371,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 492,
            "rowCount" : 2,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(d_year#1243) AND isnotnull(d_moy#1245)) AND isnotnull(d_dom#1246)) AND (((d_year#1243 = 1998) AND (d_moy#1245 = 12)) AND (d_dom#1246 = 16))) "
          },
          "12" : {
            "sign" : 571393713,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(ss_item_sk#1053) AND isnotnull(ss_sold_date_sk#1074)) AND dynamicpruning#1303 [ss_sold_date_sk#1074]) "
          },
          "66" : {
            "sign" : -79282860,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 24,
            "rowCount" : 2,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_week_seq#1241] "
          },
          "51" : {
            "sign" : -626435234,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 353748,
            "rowCount" : 1438,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(d_year#1030) AND ((d_year#1030 >= 1998) AND (d_year#1030 <= 2000))) AND isnotnull(d_date_sk#1024)) "
          },
          "8" : {
            "sign" : 447227797,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 46207619304,
            "rowCount" : 1925317471,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#1053, ss_quantity#1061, ss_list_price#1063] "
          },
          "73" : {
            "sign" : -1448453368,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 86282466,
            "rowCount" : 202541,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(i_item_sk#1148) AND isnotnull(i_brand_id#1155)) AND isnotnull(i_class_id#1157)) AND isnotnull(i_category_id#1159)) "
          },
          "19" : {
            "sign" : -1755539215,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#1209, d_date_id#1210, d_date#1211, d_month_seq#1212, d_week_seq#1213, d_quarter_seq#1214, d_year#1215, d_dow#1216, d_moy#1217, d_dom#1218, d_qoy#1219, d_fy_year#1220, d_fy_quarter_seq#1221, d_fy_week_seq#1222, d_day_name#1223, d_quarter_name#1224, d_holiday#1225, d_weekend#1226, d_following_holiday#1227, d_first_dom#1228, d_last_dom#1229, d_same_day_ly#1230, d_same_day_lq#1231, d_current_day#1232, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "23" : {
            "sign" : 1540331732,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 4860984,
            "rowCount" : 202541,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_item_sk#1075, i_brand_id#1082, i_class_id#1084, i_category_id#1086] "
          },
          "62" : {
            "sign" : 1179432008,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#1125, ss_item_sk#1126, ss_customer_sk#1127, ss_cdemo_sk#1128, ss_hdemo_sk#1129, ss_addr_sk#1130, ss_store_sk#1131, ss_promo_sk#1132, ss_ticket_number#1133L, ss_quantity#1134, ss_wholesale_cost#1135, ss_list_price#1136, ss_sales_price#1137, ss_ext_discount_amt#1138, ss_ext_sales_price#1139, ss_ext_wholesale_cost#1140, ss_ext_list_price#1141, ss_ext_tax#1142, ss_coupon_amt#1143, ss_net_paid#1144, ss_net_paid_inc_tax#1145, ss_net_profit#1146, ss_sold_date_sk#1147], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "4" : {
            "sign" : -1738172062,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 10408960,
            "rowCount" : 136960,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(sales#731) AND (cast(sales#731 as decimal(32,6)) > cast(scalar-subquery#735 [] as decimal(32,6)))) "
          },
          "40" : {
            "sign" : 1500374164,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 29800787536,
            "rowCount" : 143273017,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(cs_sold_date_sk#961) AND dynamicpruning#1289 [cs_sold_date_sk#961]) "
          },
          "15" : {
            "sign" : 1866012666,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(d_week_seq#1101) AND (d_week_seq#1101 = scalar-subquery#734 [])) AND isnotnull(d_date_sk#1097)) "
          },
          "11" : {
            "sign" : 1222696026,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 7701269884,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#1053, ss_quantity#1061, ss_list_price#1063, ss_sold_date_sk#1074] "
          },
          "9" : {
            "sign" : 178119988,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 61610159072,
            "rowCount" : 1925317471,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#1074 = d_date_sk#1097) "
          },
          "44" : {
            "sign" : -169490734,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#962, d_date_id#963, d_date#964, d_month_seq#965, d_week_seq#966, d_quarter_seq#967, d_year#968, d_dow#969, d_moy#970, d_dom#971, d_qoy#972, d_fy_year#973, d_fy_quarter_seq#974, d_fy_week_seq#975, d_day_name#976, d_quarter_name#977, d_holiday#978, d_weekend#979, d_following_holiday#980, d_first_dom#981, d_last_dom#982, d_same_day_ly#983, d_same_day_lq#984, d_current_day#985, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "33" : {
            "sign" : -1972788865,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#877, ss_item_sk#878, ss_customer_sk#879, ss_cdemo_sk#880, ss_hdemo_sk#881, ss_addr_sk#882, ss_store_sk#883, ss_promo_sk#884, ss_ticket_number#885L, ss_quantity#886, ss_wholesale_cost#887, ss_list_price#888, ss_sales_price#889, ss_ext_discount_amt#890, ss_ext_sales_price#891, ss_ext_wholesale_cost#892, ss_ext_list_price#893, ss_ext_tax#894, ss_coupon_amt#895, ss_net_paid#896, ss_net_paid_inc_tax#897, ss_net_profit#898, ss_sold_date_sk#899], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "22" : {
            "sign" : -1778355751,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 4860984,
            "rowCount" : 202541,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (i_item_sk#1075 = ss_item_sk#745) "
          },
          "56" : {
            "sign" : 271911914,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 11490316840,
            "rowCount" : 287257921,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_item_sk#1126 = i_item_sk#1148) "
          },
          "55" : {
            "sign" : -959073112,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 9192253472,
            "rowCount" : 287257921,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_quantity#1134, ss_list_price#1136, i_brand_id#1155, i_class_id#1157, i_category_id#1159] "
          },
          "26" : {
            "sign" : 1108483851,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 10020600,
            "rowCount" : 176814,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_item_sk#25 AS ss_item_sk#745], BroadcastQueryStage 91 "
          },
          "50" : {
            "sign" : -1100969675,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 17256,
            "rowCount" : 1438,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#1024] "
          },
          "37" : {
            "sign" : 825651901,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 2770325240,
            "rowCount" : 138516262,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_quantity#945 AS quantity#748, cs_list_price#947 AS list_price#749] "
          },
          "68" : {
            "sign" : 813769211,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#1237, d_date_id#1238, d_date#1239, d_month_seq#1240, d_week_seq#1241, d_quarter_seq#1242, d_year#1243, d_dow#1244, d_moy#1245, d_dom#1246, d_qoy#1247, d_fy_year#1248, d_fy_quarter_seq#1249, d_fy_week_seq#1250, d_day_name#1251, d_quarter_name#1252, d_holiday#1253, d_weekend#1254, d_following_holiday#1255, d_first_dom#1256, d_last_dom#1257, d_same_day_ly#1258, d_same_day_lq#1259, d_current_day#1260, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "61" : {
            "sign" : -604473204,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(ss_item_sk#1126) AND isnotnull(ss_sold_date_sk#1147)) AND dynamicpruning#1310 [ss_sold_date_sk#1147]) "
          },
          "13" : {
            "sign" : 913239237,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#1052, ss_item_sk#1053, ss_customer_sk#1054, ss_cdemo_sk#1055, ss_hdemo_sk#1056, ss_addr_sk#1057, ss_store_sk#1058, ss_promo_sk#1059, ss_ticket_number#1060L, ss_quantity#1061, ss_wholesale_cost#1062, ss_list_price#1063, ss_sales_price#1064, ss_ext_discount_amt#1065, ss_ext_sales_price#1066, ss_ext_wholesale_cost#1067, ss_ext_list_price#1068, ss_ext_tax#1069, ss_coupon_amt#1070, ss_net_paid#1071, ss_net_paid_inc_tax#1072, ss_net_profit#1073, ss_sold_date_sk#1074], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "46" : {
            "sign" : 1503367439,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 1945876940,
            "rowCount" : 69495605,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ws_sold_date_sk#1023 = d_date_sk#1024) "
          },
          "24" : {
            "sign" : 579430964,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 86282466,
            "rowCount" : 202541,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(i_item_sk#1075) AND isnotnull(i_brand_id#1082)) AND isnotnull(i_class_id#1084)) AND isnotnull(i_category_id#1086)) "
          },
          "35" : {
            "sign" : -2071970095,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 353748,
            "rowCount" : 1438,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(d_year#906) AND ((d_year#906 >= 1998) AND (d_year#906 <= 2000))) AND isnotnull(d_date_sk#900)) "
          },
          "16" : {
            "sign" : 682718368,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#1097, d_date_id#1098, d_date#1099, d_month_seq#1100, d_week_seq#1101, d_quarter_seq#1102, d_year#1103, d_dow#1104, d_moy#1105, d_dom#1106, d_qoy#1107, d_fy_year#1108, d_fy_quarter_seq#1109, d_fy_week_seq#1110, d_day_name#1111, d_quarter_name#1112, d_holiday#1113, d_weekend#1114, d_following_holiday#1115, d_first_dom#1116, d_last_dom#1117, d_same_day_ly#1118, d_same_day_lq#1119, d_current_day#1120, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "5" : {
            "sign" : -311137114,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 10408960,
            "rowCount" : 136960,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [i_brand_id#1082, i_class_id#1084, i_category_id#1086], [store AS channel#730, i_brand_id#1082, i_class_id#1084, i_category_id#1086, sum((cast(ss_quantity#1061 as decimal(10,0)) * ss_list_price#1063)) AS sales#731, count(1) AS number_sales#732L] "
          },
          "72" : {
            "sign" : -1062759686,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 4860984,
            "rowCount" : 202541,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_item_sk#1148, i_brand_id#1155, i_class_id#1157, i_category_id#1159] "
          },
          "10" : {
            "sign" : 1532047545,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 7701269884,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (ss_item_sk#1053 = ss_item_sk#745) "
          },
          "59" : {
            "sign" : 1957680440,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 7701269884,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (ss_item_sk#1126 = ss_item_sk#745) "
          },
          "48" : {
            "sign" : -1902449141,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 14972593792,
            "rowCount" : 71983624,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(ws_sold_date_sk#1023) AND dynamicpruning#1290 [ws_sold_date_sk#1023]) "
          },
          "21" : {
            "sign" : -21562714,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1048632,
            "rowCount" : 7,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#1097], BroadcastQueryStage 9 "
          },
          "54" : {
            "sign" : 149291703,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 10408960,
            "rowCount" : 136960,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [i_brand_id#1155, i_class_id#1157, i_category_id#1159], [store AS channel#736, i_brand_id#1155, i_class_id#1157, i_category_id#1159, sum((cast(ss_quantity#1134 as decimal(10,0)) * ss_list_price#1136)) AS sales#737, count(1) AS number_sales#738L] "
          },
          "43" : {
            "sign" : -1695423935,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 353748,
            "rowCount" : 1438,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(d_year#968) AND ((d_year#968 >= 1998) AND (d_year#968 <= 2000))) AND isnotnull(d_date_sk#962)) "
          },
          "65" : {
            "sign" : 683629544,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#1170, d_date_id#1171, d_date#1172, d_month_seq#1173, d_week_seq#1174, d_quarter_seq#1175, d_year#1176, d_dow#1177, d_moy#1178, d_dom#1179, d_qoy#1180, d_fy_year#1181, d_fy_quarter_seq#1182, d_fy_week_seq#1183, d_day_name#1184, d_quarter_name#1185, d_holiday#1186, d_weekend#1187, d_following_holiday#1188, d_first_dom#1189, d_last_dom#1190, d_same_day_ly#1191, d_same_day_lq#1192, d_current_day#1193, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "71" : {
            "sign" : -540123806,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 4860984,
            "rowCount" : 202541,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (i_item_sk#1148 = ss_item_sk#745) "
          },
          "57" : {
            "sign" : 342660770,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 46207619304,
            "rowCount" : 1925317471,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#1126, ss_quantity#1134, ss_list_price#1136] "
          },
          "32" : {
            "sign" : 1377797290,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(ss_sold_date_sk#899) AND dynamicpruning#1288 [ss_sold_date_sk#899]) "
          },
          "49" : {
            "sign" : 1698660872,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 14972593792,
            "rowCount" : 71983624,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ws_sold_time_sk#990, ws_ship_date_sk#991, ws_item_sk#992, ws_bill_customer_sk#993, ws_bill_cdemo_sk#994, ws_bill_hdemo_sk#995, ws_bill_addr_sk#996, ws_ship_customer_sk#997, ws_ship_cdemo_sk#998, ws_ship_hdemo_sk#999, ws_ship_addr_sk#1000, ws_web_page_sk#1001, ws_web_site_sk#1002, ws_ship_mode_sk#1003, ws_warehouse_sk#1004, ws_promo_sk#1005, ws_order_number#1006L, ws_quantity#1007, ws_wholesale_cost#1008, ws_list_price#1009, ws_sales_price#1010, ws_ext_discount_amt#1011, ws_ext_sales_price#1012, ws_ext_wholesale_cost#1013, ... 10 more fields], `spark_catalog`.`tpcds_100`.`web_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "6" : {
            "sign" : 199675227,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 9192253472,
            "rowCount" : 287257921,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_quantity#1061, ss_list_price#1063, i_brand_id#1082, i_class_id#1084, i_category_id#1086] "
          },
          "36" : {
            "sign" : -820074406,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#900, d_date_id#901, d_date#902, d_month_seq#903, d_week_seq#904, d_quarter_seq#905, d_year#906, d_dow#907, d_moy#908, d_dom#909, d_qoy#910, d_fy_year#911, d_fy_quarter_seq#912, d_fy_week_seq#913, d_day_name#914, d_quarter_name#915, d_holiday#916, d_weekend#917, d_following_holiday#918, d_first_dom#919, d_last_dom#920, d_same_day_ly#921, d_same_day_lq#922, d_current_day#923, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "1" : {
            "sign" : 231496299,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
            "sizeInBytes" : 19722240,
            "rowCount" : 136960,
            "isRuntime" : false,
            "predicate" : " (unknown) LocalLimit Arguments: 100 "
          },
          "39" : {
            "sign" : 1942236716,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 3438552408,
            "rowCount" : 143273017,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_quantity#945, cs_list_price#947, cs_sold_date_sk#961] "
          },
          "17" : {
            "sign" : -2061501032,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 36,
            "rowCount" : 3,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_week_seq#1213] "
          },
          "25" : {
            "sign" : 73332589,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 86904000,
            "rowCount" : 204000,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [i_item_sk#1075, i_item_id#1076, i_rec_start_date#1077, i_rec_end_date#1078, i_item_desc#1079, i_current_price#1080, i_wholesale_cost#1081, i_brand_id#1082, i_brand#1083, i_class_id#1084, i_class#1085, i_category_id#1086, i_category#1087, i_manufact_id#1088, i_manufact#1089, i_size#1090, i_formulation#1091, i_color#1092, i_units#1093, i_container#1094, i_manager_id#1095, i_product_name#1096], `spark_catalog`.`tpcds_100`.`item`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "60" : {
            "sign" : -303911461,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 7701269884,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#1126, ss_quantity#1134, ss_list_price#1136, ss_sold_date_sk#1147] "
          },
          "14" : {
            "sign" : 707519831,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 876588,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#1097] "
          },
          "47" : {
            "sign" : 49678577,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 1727606976,
            "rowCount" : 71983624,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_quantity#1007, ws_list_price#1009, ws_sold_date_sk#1023] "
          },
          "31" : {
            "sign" : 1776873494,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 6601088472,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_quantity#886, ss_list_price#888, ss_sold_date_sk#899] "
          },
          "69" : {
            "sign" : 1108483913,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 10020600,
            "rowCount" : 176814,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_item_sk#25 AS ss_item_sk#745], BroadcastQueryStage 93 "
          },
          "58" : {
            "sign" : -508787732,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 61610159072,
            "rowCount" : 1925317471,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#1147 = d_date_sk#1170) "
          },
          "64" : {
            "sign" : -1689547051,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(d_week_seq#1174) AND (d_week_seq#1174 = scalar-subquery#740 [])) AND isnotnull(d_date_sk#1170)) "
          },
          "53" : {
            "sign" : -532673722,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 10408960,
            "rowCount" : 136960,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(sales#737) AND (cast(sales#737 as decimal(32,6)) > cast(scalar-subquery#741 [] as decimal(32,6)))) "
          },
          "42" : {
            "sign" : 406087876,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 17256,
            "rowCount" : 1438,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#962] "
          },
          "75" : {
            "sign" : 1108483975,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 10020600,
            "rowCount" : 176814,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_item_sk#25 AS ss_item_sk#745], BroadcastQueryStage 95 "
          },
          "0" : {
            "sign" : -1948456008,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
            "sizeInBytes" : 12000,
            "rowCount" : 100,
            "isRuntime" : false,
            "predicate" : " (unknown) GlobalLimit Arguments: 100 "
          },
          "20" : {
            "sign" : 1108483138,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 10020600,
            "rowCount" : 176814,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_item_sk#25 AS ss_item_sk#745], BroadcastQueryStage 89 "
          },
          "27" : {
            "sign" : -1809172647,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 24,
            "rowCount" : 1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [avg((cast(quantity#746 as decimal(10,0)) * list_price#747)) AS average_sales#752] "
          },
          "70" : {
            "sign" : -1902204624,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1048632,
            "rowCount" : 7,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#1170], BroadcastQueryStage 34 "
          },
          "2" : {
            "sign" : 2031547086,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 19722240,
            "rowCount" : 136960,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [i_brand_id#1082 ASC NULLS FIRST, i_class_id#1084 ASC NULLS FIRST, i_category_id#1086 ASC NULLS FIRST], true "
          },
          "38" : {
            "sign" : 824386657,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 3878455336,
            "rowCount" : 138516262,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cs_sold_date_sk#961 = d_date_sk#962) "
          },
          "18" : {
            "sign" : -1305353512,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 738,
            "rowCount" : 3,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(d_year#1215) AND isnotnull(d_moy#1217)) AND isnotnull(d_dom#1218)) AND (((d_year#1215 = 1999) AND (d_moy#1217 = 12)) AND (d_dom#1218 = 16))) "
          },
          "30" : {
            "sign" : -1804794945,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 7435136380,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#899 = d_date_sk#900) "
          },
          "7" : {
            "sign" : 1605641694,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 11490316840,
            "rowCount" : 287257921,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_item_sk#1053 = i_item_sk#1075) "
          },
          "29" : {
            "sign" : 869525063,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 5310811700,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_quantity#886 AS quantity#746, ss_list_price#888 AS list_price#747] "
          },
          "41" : {
            "sign" : -70077436,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 29800787536,
            "rowCount" : 143273017,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [cs_sold_time_sk#928, cs_ship_date_sk#929, cs_bill_customer_sk#930, cs_bill_cdemo_sk#931, cs_bill_hdemo_sk#932, cs_bill_addr_sk#933, cs_ship_customer_sk#934, cs_ship_cdemo_sk#935, cs_ship_hdemo_sk#936, cs_ship_addr_sk#937, cs_call_center_sk#938, cs_catalog_page_sk#939, cs_ship_mode_sk#940, cs_warehouse_sk#941, cs_item_sk#942, cs_promo_sk#943, cs_order_number#944L, cs_quantity#945, cs_wholesale_cost#946, cs_list_price#947, cs_sales_price#948, cs_ext_discount_amt#949, cs_ext_sales_price#950, cs_ext_wholesale_cost#951, ... 10 more fields], `spark_catalog`.`tpcds_100`.`catalog_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "63" : {
            "sign" : 1096234976,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 876588,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#1170] "
          },
          "3" : {
            "sign" : 408258716,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 19722240,
            "rowCount" : 136960,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (((i_brand_id#1082 = i_brand_id#1155) AND (i_class_id#1084 = i_class_id#1157)) AND (i_category_id#1086 = i_category_id#1159)) "
          },
          "74" : {
            "sign" : -1752719423,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 86904000,
            "rowCount" : 204000,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [i_item_sk#1148, i_item_id#1149, i_rec_start_date#1150, i_rec_end_date#1151, i_item_desc#1152, i_current_price#1153, i_wholesale_cost#1154, i_brand_id#1155, i_brand#1156, i_class_id#1157, i_class#1158, i_category_id#1159, i_category#1160, i_manufact_id#1161, i_manufact#1162, i_size#1163, i_formulation#1164, i_color#1165, i_units#1166, i_container#1167, i_manager_id#1168, i_product_name#1169], `spark_catalog`.`tpcds_100`.`item`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "52" : {
            "sign" : -502763688,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#1024, d_date_id#1025, d_date#1026, d_month_seq#1027, d_week_seq#1028, d_quarter_seq#1029, d_year#1030, d_dow#1031, d_moy#1032, d_dom#1033, d_qoy#1034, d_fy_year#1035, d_fy_quarter_seq#1036, d_fy_week_seq#1037, d_day_name#1038, d_quarter_name#1039, d_holiday#1040, d_weekend#1041, d_following_holiday#1042, d_first_dom#1043, d_last_dom#1044, d_same_day_ly#1045, d_same_day_lq#1046, d_current_day#1047, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "28" : {
            "sign" : -1298322270,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Union",
            "sizeInBytes" : 9471049040,
            "rowCount" : 473552452,
            "isRuntime" : false,
            "predicate" : " (unknown) Union Arguments: false, false "
          }
        },
        "links" : [ {
          "fromId" : 13,
          "fromName" : "LogicalRelation",
          "toId" : 12,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 16,
          "fromName" : "LogicalRelation",
          "toId" : 15,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 19,
          "fromName" : "LogicalRelation",
          "toId" : 18,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 18,
          "fromName" : "Filter",
          "toId" : 17,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 17,
          "fromName" : "Project",
          "toId" : 15,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 15,
          "fromName" : "Filter",
          "toId" : 14,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 14,
          "fromName" : "Project",
          "toId" : 12,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 12,
          "fromName" : "Filter",
          "toId" : 11,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "Project",
          "toId" : 10,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 20,
          "fromName" : "LogicalQueryStage",
          "toId" : 10,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "Join",
          "toId" : 9,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 21,
          "fromName" : "LogicalQueryStage",
          "toId" : 9,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "Join",
          "toId" : 8,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "Project",
          "toId" : 7,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 25,
          "fromName" : "LogicalRelation",
          "toId" : 24,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 24,
          "fromName" : "Filter",
          "toId" : 23,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 23,
          "fromName" : "Project",
          "toId" : 22,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 26,
          "fromName" : "LogicalQueryStage",
          "toId" : 22,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 22,
          "fromName" : "Join",
          "toId" : 7,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Join",
          "toId" : 6,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Project",
          "toId" : 5,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Aggregate",
          "toId" : 4,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 33,
          "fromName" : "LogicalRelation",
          "toId" : 32,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 36,
          "fromName" : "LogicalRelation",
          "toId" : 35,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 35,
          "fromName" : "Filter",
          "toId" : 34,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 34,
          "fromName" : "Project",
          "toId" : 32,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 32,
          "fromName" : "Filter",
          "toId" : 31,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 31,
          "fromName" : "Project",
          "toId" : 30,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 34,
          "fromName" : "Project",
          "toId" : 30,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 30,
          "fromName" : "Join",
          "toId" : 29,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 29,
          "fromName" : "Project",
          "toId" : 28,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 41,
          "fromName" : "LogicalRelation",
          "toId" : 40,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 44,
          "fromName" : "LogicalRelation",
          "toId" : 43,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 43,
          "fromName" : "Filter",
          "toId" : 42,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 42,
          "fromName" : "Project",
          "toId" : 40,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 40,
          "fromName" : "Filter",
          "toId" : 39,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 39,
          "fromName" : "Project",
          "toId" : 38,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 42,
          "fromName" : "Project",
          "toId" : 38,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 38,
          "fromName" : "Join",
          "toId" : 37,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 37,
          "fromName" : "Project",
          "toId" : 28,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 49,
          "fromName" : "LogicalRelation",
          "toId" : 48,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 52,
          "fromName" : "LogicalRelation",
          "toId" : 51,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 51,
          "fromName" : "Filter",
          "toId" : 50,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 50,
          "fromName" : "Project",
          "toId" : 48,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 48,
          "fromName" : "Filter",
          "toId" : 47,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 47,
          "fromName" : "Project",
          "toId" : 46,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 50,
          "fromName" : "Project",
          "toId" : 46,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 46,
          "fromName" : "Join",
          "toId" : 45,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 45,
          "fromName" : "Project",
          "toId" : 28,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 28,
          "fromName" : "Union",
          "toId" : 27,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 27,
          "fromName" : "Aggregate",
          "toId" : 4,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 4,
          "fromName" : "Filter",
          "toId" : 3,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 62,
          "fromName" : "LogicalRelation",
          "toId" : 61,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 65,
          "fromName" : "LogicalRelation",
          "toId" : 64,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 68,
          "fromName" : "LogicalRelation",
          "toId" : 67,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 67,
          "fromName" : "Filter",
          "toId" : 66,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 66,
          "fromName" : "Project",
          "toId" : 64,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 64,
          "fromName" : "Filter",
          "toId" : 63,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 63,
          "fromName" : "Project",
          "toId" : 61,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 61,
          "fromName" : "Filter",
          "toId" : 60,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 60,
          "fromName" : "Project",
          "toId" : 59,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 69,
          "fromName" : "LogicalQueryStage",
          "toId" : 59,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 59,
          "fromName" : "Join",
          "toId" : 58,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 70,
          "fromName" : "LogicalQueryStage",
          "toId" : 58,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 58,
          "fromName" : "Join",
          "toId" : 57,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 57,
          "fromName" : "Project",
          "toId" : 56,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 74,
          "fromName" : "LogicalRelation",
          "toId" : 73,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 73,
          "fromName" : "Filter",
          "toId" : 72,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 72,
          "fromName" : "Project",
          "toId" : 71,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 75,
          "fromName" : "LogicalQueryStage",
          "toId" : 71,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 71,
          "fromName" : "Join",
          "toId" : 56,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 56,
          "fromName" : "Join",
          "toId" : 55,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 55,
          "fromName" : "Project",
          "toId" : 54,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 54,
          "fromName" : "Aggregate",
          "toId" : 53,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 27,
          "fromName" : "Aggregate",
          "toId" : 53,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 53,
          "fromName" : "Filter",
          "toId" : 3,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Join",
          "toId" : 2,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "LocalLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "LocalLimit",
          "toId" : 0,
          "toName" : "GlobalLimit",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [i_brand_id#1082 ASC NULLS FIRST, i_class_id#1084 ASC NULLS FIRST, i_category_id#1086 ASC NULLS FIRST], true\n      +- Join Inner, (((i_brand_id#1082 = i_brand_id#1155) AND (i_class_id#1084 = i_class_id#1157)) AND (i_category_id#1086 = i_category_id#1159))\n         :- Filter (isnotnull(sales#731) AND (cast(sales#731 as decimal(32,6)) > cast(scalar-subquery#735 [] as decimal(32,6))))\n         :  :  +- Aggregate [avg((cast(quantity#746 as decimal(10,0)) * list_price#747)) AS average_sales#752]\n         :  :     +- Union false, false\n         :  :        :- Project [ss_quantity#886 AS quantity#746, ss_list_price#888 AS list_price#747]\n         :  :        :  +- Join Inner, (ss_sold_date_sk#899 = d_date_sk#900)\n         :  :        :     :- Project [ss_quantity#886, ss_list_price#888, ss_sold_date_sk#899]\n         :  :        :     :  +- Filter (isnotnull(ss_sold_date_sk#899) AND dynamicpruning#1288 [ss_sold_date_sk#899])\n         :  :        :     :     :  +- Project [d_date_sk#900]\n         :  :        :     :     :     +- Filter ((isnotnull(d_year#906) AND ((d_year#906 >= 1998) AND (d_year#906 <= 2000))) AND isnotnull(d_date_sk#900))\n         :  :        :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#900,d_date_id#901,d_date#902,d_month_seq#903,d_week_seq#904,d_quarter_seq#905,d_year#906,d_dow#907,d_moy#908,d_dom#909,d_qoy#910,d_fy_year#911,d_fy_quarter_seq#912,d_fy_week_seq#913,d_day_name#914,d_quarter_name#915,d_holiday#916,d_weekend#917,d_following_holiday#918,d_first_dom#919,d_last_dom#920,d_same_day_ly#921,d_same_day_lq#922,d_current_day#923,... 4 more fields] parquet\n         :  :        :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#877,ss_item_sk#878,ss_customer_sk#879,ss_cdemo_sk#880,ss_hdemo_sk#881,ss_addr_sk#882,ss_store_sk#883,ss_promo_sk#884,ss_ticket_number#885L,ss_quantity#886,ss_wholesale_cost#887,ss_list_price#888,ss_sales_price#889,ss_ext_discount_amt#890,ss_ext_sales_price#891,ss_ext_wholesale_cost#892,ss_ext_list_price#893,ss_ext_tax#894,ss_coupon_amt#895,ss_net_paid#896,ss_net_paid_inc_tax#897,ss_net_profit#898,ss_sold_date_sk#899] parquet\n         :  :        :     +- Project [d_date_sk#900]\n         :  :        :        +- Filter ((isnotnull(d_year#906) AND ((d_year#906 >= 1998) AND (d_year#906 <= 2000))) AND isnotnull(d_date_sk#900))\n         :  :        :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#900,d_date_id#901,d_date#902,d_month_seq#903,d_week_seq#904,d_quarter_seq#905,d_year#906,d_dow#907,d_moy#908,d_dom#909,d_qoy#910,d_fy_year#911,d_fy_quarter_seq#912,d_fy_week_seq#913,d_day_name#914,d_quarter_name#915,d_holiday#916,d_weekend#917,d_following_holiday#918,d_first_dom#919,d_last_dom#920,d_same_day_ly#921,d_same_day_lq#922,d_current_day#923,... 4 more fields] parquet\n         :  :        :- Project [cs_quantity#945 AS quantity#748, cs_list_price#947 AS list_price#749]\n         :  :        :  +- Join Inner, (cs_sold_date_sk#961 = d_date_sk#962)\n         :  :        :     :- Project [cs_quantity#945, cs_list_price#947, cs_sold_date_sk#961]\n         :  :        :     :  +- Filter (isnotnull(cs_sold_date_sk#961) AND dynamicpruning#1289 [cs_sold_date_sk#961])\n         :  :        :     :     :  +- Project [d_date_sk#962]\n         :  :        :     :     :     +- Filter ((isnotnull(d_year#968) AND ((d_year#968 >= 1998) AND (d_year#968 <= 2000))) AND isnotnull(d_date_sk#962))\n         :  :        :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#962,d_date_id#963,d_date#964,d_month_seq#965,d_week_seq#966,d_quarter_seq#967,d_year#968,d_dow#969,d_moy#970,d_dom#971,d_qoy#972,d_fy_year#973,d_fy_quarter_seq#974,d_fy_week_seq#975,d_day_name#976,d_quarter_name#977,d_holiday#978,d_weekend#979,d_following_holiday#980,d_first_dom#981,d_last_dom#982,d_same_day_ly#983,d_same_day_lq#984,d_current_day#985,... 4 more fields] parquet\n         :  :        :     :     +- Relation spark_catalog.tpcds_100.catalog_sales[cs_sold_time_sk#928,cs_ship_date_sk#929,cs_bill_customer_sk#930,cs_bill_cdemo_sk#931,cs_bill_hdemo_sk#932,cs_bill_addr_sk#933,cs_ship_customer_sk#934,cs_ship_cdemo_sk#935,cs_ship_hdemo_sk#936,cs_ship_addr_sk#937,cs_call_center_sk#938,cs_catalog_page_sk#939,cs_ship_mode_sk#940,cs_warehouse_sk#941,cs_item_sk#942,cs_promo_sk#943,cs_order_number#944L,cs_quantity#945,cs_wholesale_cost#946,cs_list_price#947,cs_sales_price#948,cs_ext_discount_amt#949,cs_ext_sales_price#950,cs_ext_wholesale_cost#951,... 10 more fields] parquet\n         :  :        :     +- Project [d_date_sk#962]\n         :  :        :        +- Filter ((isnotnull(d_year#968) AND ((d_year#968 >= 1998) AND (d_year#968 <= 2000))) AND isnotnull(d_date_sk#962))\n         :  :        :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#962,d_date_id#963,d_date#964,d_month_seq#965,d_week_seq#966,d_quarter_seq#967,d_year#968,d_dow#969,d_moy#970,d_dom#971,d_qoy#972,d_fy_year#973,d_fy_quarter_seq#974,d_fy_week_seq#975,d_day_name#976,d_quarter_name#977,d_holiday#978,d_weekend#979,d_following_holiday#980,d_first_dom#981,d_last_dom#982,d_same_day_ly#983,d_same_day_lq#984,d_current_day#985,... 4 more fields] parquet\n         :  :        +- Project [ws_quantity#1007 AS quantity#750, ws_list_price#1009 AS list_price#751]\n         :  :           +- Join Inner, (ws_sold_date_sk#1023 = d_date_sk#1024)\n         :  :              :- Project [ws_quantity#1007, ws_list_price#1009, ws_sold_date_sk#1023]\n         :  :              :  +- Filter (isnotnull(ws_sold_date_sk#1023) AND dynamicpruning#1290 [ws_sold_date_sk#1023])\n         :  :              :     :  +- Project [d_date_sk#1024]\n         :  :              :     :     +- Filter ((isnotnull(d_year#1030) AND ((d_year#1030 >= 1998) AND (d_year#1030 <= 2000))) AND isnotnull(d_date_sk#1024))\n         :  :              :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#1024,d_date_id#1025,d_date#1026,d_month_seq#1027,d_week_seq#1028,d_quarter_seq#1029,d_year#1030,d_dow#1031,d_moy#1032,d_dom#1033,d_qoy#1034,d_fy_year#1035,d_fy_quarter_seq#1036,d_fy_week_seq#1037,d_day_name#1038,d_quarter_name#1039,d_holiday#1040,d_weekend#1041,d_following_holiday#1042,d_first_dom#1043,d_last_dom#1044,d_same_day_ly#1045,d_same_day_lq#1046,d_current_day#1047,... 4 more fields] parquet\n         :  :              :     +- Relation spark_catalog.tpcds_100.web_sales[ws_sold_time_sk#990,ws_ship_date_sk#991,ws_item_sk#992,ws_bill_customer_sk#993,ws_bill_cdemo_sk#994,ws_bill_hdemo_sk#995,ws_bill_addr_sk#996,ws_ship_customer_sk#997,ws_ship_cdemo_sk#998,ws_ship_hdemo_sk#999,ws_ship_addr_sk#1000,ws_web_page_sk#1001,ws_web_site_sk#1002,ws_ship_mode_sk#1003,ws_warehouse_sk#1004,ws_promo_sk#1005,ws_order_number#1006L,ws_quantity#1007,ws_wholesale_cost#1008,ws_list_price#1009,ws_sales_price#1010,ws_ext_discount_amt#1011,ws_ext_sales_price#1012,ws_ext_wholesale_cost#1013,... 10 more fields] parquet\n         :  :              +- Project [d_date_sk#1024]\n         :  :                 +- Filter ((isnotnull(d_year#1030) AND ((d_year#1030 >= 1998) AND (d_year#1030 <= 2000))) AND isnotnull(d_date_sk#1024))\n         :  :                    +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#1024,d_date_id#1025,d_date#1026,d_month_seq#1027,d_week_seq#1028,d_quarter_seq#1029,d_year#1030,d_dow#1031,d_moy#1032,d_dom#1033,d_qoy#1034,d_fy_year#1035,d_fy_quarter_seq#1036,d_fy_week_seq#1037,d_day_name#1038,d_quarter_name#1039,d_holiday#1040,d_weekend#1041,d_following_holiday#1042,d_first_dom#1043,d_last_dom#1044,d_same_day_ly#1045,d_same_day_lq#1046,d_current_day#1047,... 4 more fields] parquet\n         :  +- Aggregate [i_brand_id#1082, i_class_id#1084, i_category_id#1086], [store AS channel#730, i_brand_id#1082, i_class_id#1084, i_category_id#1086, sum((cast(ss_quantity#1061 as decimal(10,0)) * ss_list_price#1063)) AS sales#731, count(1) AS number_sales#732L]\n         :     +- Project [ss_quantity#1061, ss_list_price#1063, i_brand_id#1082, i_class_id#1084, i_category_id#1086]\n         :        +- Join Inner, (ss_item_sk#1053 = i_item_sk#1075)\n         :           :- Project [ss_item_sk#1053, ss_quantity#1061, ss_list_price#1063]\n         :           :  +- Join Inner, (ss_sold_date_sk#1074 = d_date_sk#1097)\n         :           :     :- Join LeftSemi, (ss_item_sk#1053 = ss_item_sk#745)\n         :           :     :  :- Project [ss_item_sk#1053, ss_quantity#1061, ss_list_price#1063, ss_sold_date_sk#1074]\n         :           :     :  :  +- Filter ((isnotnull(ss_item_sk#1053) AND isnotnull(ss_sold_date_sk#1074)) AND dynamicpruning#1303 [ss_sold_date_sk#1074])\n         :           :     :  :     :  +- Project [d_date_sk#1097]\n         :           :     :  :     :     +- Filter ((isnotnull(d_week_seq#1101) AND (d_week_seq#1101 = scalar-subquery#734 [])) AND isnotnull(d_date_sk#1097))\n         :           :     :  :     :        :  +- Project [d_week_seq#1213]\n         :           :     :  :     :        :     +- Filter (((isnotnull(d_year#1215) AND isnotnull(d_moy#1217)) AND isnotnull(d_dom#1218)) AND (((d_year#1215 = 1999) AND (d_moy#1217 = 12)) AND (d_dom#1218 = 16)))\n         :           :     :  :     :        :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#1209,d_date_id#1210,d_date#1211,d_month_seq#1212,d_week_seq#1213,d_quarter_seq#1214,d_year#1215,d_dow#1216,d_moy#1217,d_dom#1218,d_qoy#1219,d_fy_year#1220,d_fy_quarter_seq#1221,d_fy_week_seq#1222,d_day_name#1223,d_quarter_name#1224,d_holiday#1225,d_weekend#1226,d_following_holiday#1227,d_first_dom#1228,d_last_dom#1229,d_same_day_ly#1230,d_same_day_lq#1231,d_current_day#1232,... 4 more fields] parquet\n         :           :     :  :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#1097,d_date_id#1098,d_date#1099,d_month_seq#1100,d_week_seq#1101,d_quarter_seq#1102,d_year#1103,d_dow#1104,d_moy#1105,d_dom#1106,d_qoy#1107,d_fy_year#1108,d_fy_quarter_seq#1109,d_fy_week_seq#1110,d_day_name#1111,d_quarter_name#1112,d_holiday#1113,d_weekend#1114,d_following_holiday#1115,d_first_dom#1116,d_last_dom#1117,d_same_day_ly#1118,d_same_day_lq#1119,d_current_day#1120,... 4 more fields] parquet\n         :           :     :  :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#1052,ss_item_sk#1053,ss_customer_sk#1054,ss_cdemo_sk#1055,ss_hdemo_sk#1056,ss_addr_sk#1057,ss_store_sk#1058,ss_promo_sk#1059,ss_ticket_number#1060L,ss_quantity#1061,ss_wholesale_cost#1062,ss_list_price#1063,ss_sales_price#1064,ss_ext_discount_amt#1065,ss_ext_sales_price#1066,ss_ext_wholesale_cost#1067,ss_ext_list_price#1068,ss_ext_tax#1069,ss_coupon_amt#1070,ss_net_paid#1071,ss_net_paid_inc_tax#1072,ss_net_profit#1073,ss_sold_date_sk#1074] parquet\n         :           :     :  +- LogicalQueryStage Project [i_item_sk#25 AS ss_item_sk#745], BroadcastQueryStage 89\n         :           :     +- LogicalQueryStage Project [d_date_sk#1097], BroadcastQueryStage 9\n         :           +- Join LeftSemi, (i_item_sk#1075 = ss_item_sk#745)\n         :              :- Project [i_item_sk#1075, i_brand_id#1082, i_class_id#1084, i_category_id#1086]\n         :              :  +- Filter (((isnotnull(i_item_sk#1075) AND isnotnull(i_brand_id#1082)) AND isnotnull(i_class_id#1084)) AND isnotnull(i_category_id#1086))\n         :              :     +- Relation spark_catalog.tpcds_100.item[i_item_sk#1075,i_item_id#1076,i_rec_start_date#1077,i_rec_end_date#1078,i_item_desc#1079,i_current_price#1080,i_wholesale_cost#1081,i_brand_id#1082,i_brand#1083,i_class_id#1084,i_class#1085,i_category_id#1086,i_category#1087,i_manufact_id#1088,i_manufact#1089,i_size#1090,i_formulation#1091,i_color#1092,i_units#1093,i_container#1094,i_manager_id#1095,i_product_name#1096] parquet\n         :              +- LogicalQueryStage Project [i_item_sk#25 AS ss_item_sk#745], BroadcastQueryStage 91\n         +- Filter (isnotnull(sales#737) AND (cast(sales#737 as decimal(32,6)) > cast(scalar-subquery#741 [] as decimal(32,6))))\n            :  +- Aggregate [avg((cast(quantity#746 as decimal(10,0)) * list_price#747)) AS average_sales#752]\n            :     +- Union false, false\n            :        :- Project [ss_quantity#886 AS quantity#746, ss_list_price#888 AS list_price#747]\n            :        :  +- Join Inner, (ss_sold_date_sk#899 = d_date_sk#900)\n            :        :     :- Project [ss_quantity#886, ss_list_price#888, ss_sold_date_sk#899]\n            :        :     :  +- Filter (isnotnull(ss_sold_date_sk#899) AND dynamicpruning#1288 [ss_sold_date_sk#899])\n            :        :     :     :  +- Project [d_date_sk#900]\n            :        :     :     :     +- Filter ((isnotnull(d_year#906) AND ((d_year#906 >= 1998) AND (d_year#906 <= 2000))) AND isnotnull(d_date_sk#900))\n            :        :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#900,d_date_id#901,d_date#902,d_month_seq#903,d_week_seq#904,d_quarter_seq#905,d_year#906,d_dow#907,d_moy#908,d_dom#909,d_qoy#910,d_fy_year#911,d_fy_quarter_seq#912,d_fy_week_seq#913,d_day_name#914,d_quarter_name#915,d_holiday#916,d_weekend#917,d_following_holiday#918,d_first_dom#919,d_last_dom#920,d_same_day_ly#921,d_same_day_lq#922,d_current_day#923,... 4 more fields] parquet\n            :        :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#877,ss_item_sk#878,ss_customer_sk#879,ss_cdemo_sk#880,ss_hdemo_sk#881,ss_addr_sk#882,ss_store_sk#883,ss_promo_sk#884,ss_ticket_number#885L,ss_quantity#886,ss_wholesale_cost#887,ss_list_price#888,ss_sales_price#889,ss_ext_discount_amt#890,ss_ext_sales_price#891,ss_ext_wholesale_cost#892,ss_ext_list_price#893,ss_ext_tax#894,ss_coupon_amt#895,ss_net_paid#896,ss_net_paid_inc_tax#897,ss_net_profit#898,ss_sold_date_sk#899] parquet\n            :        :     +- Project [d_date_sk#900]\n            :        :        +- Filter ((isnotnull(d_year#906) AND ((d_year#906 >= 1998) AND (d_year#906 <= 2000))) AND isnotnull(d_date_sk#900))\n            :        :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#900,d_date_id#901,d_date#902,d_month_seq#903,d_week_seq#904,d_quarter_seq#905,d_year#906,d_dow#907,d_moy#908,d_dom#909,d_qoy#910,d_fy_year#911,d_fy_quarter_seq#912,d_fy_week_seq#913,d_day_name#914,d_quarter_name#915,d_holiday#916,d_weekend#917,d_following_holiday#918,d_first_dom#919,d_last_dom#920,d_same_day_ly#921,d_same_day_lq#922,d_current_day#923,... 4 more fields] parquet\n            :        :- Project [cs_quantity#945 AS quantity#748, cs_list_price#947 AS list_price#749]\n            :        :  +- Join Inner, (cs_sold_date_sk#961 = d_date_sk#962)\n            :        :     :- Project [cs_quantity#945, cs_list_price#947, cs_sold_date_sk#961]\n            :        :     :  +- Filter (isnotnull(cs_sold_date_sk#961) AND dynamicpruning#1289 [cs_sold_date_sk#961])\n            :        :     :     :  +- Project [d_date_sk#962]\n            :        :     :     :     +- Filter ((isnotnull(d_year#968) AND ((d_year#968 >= 1998) AND (d_year#968 <= 2000))) AND isnotnull(d_date_sk#962))\n            :        :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#962,d_date_id#963,d_date#964,d_month_seq#965,d_week_seq#966,d_quarter_seq#967,d_year#968,d_dow#969,d_moy#970,d_dom#971,d_qoy#972,d_fy_year#973,d_fy_quarter_seq#974,d_fy_week_seq#975,d_day_name#976,d_quarter_name#977,d_holiday#978,d_weekend#979,d_following_holiday#980,d_first_dom#981,d_last_dom#982,d_same_day_ly#983,d_same_day_lq#984,d_current_day#985,... 4 more fields] parquet\n            :        :     :     +- Relation spark_catalog.tpcds_100.catalog_sales[cs_sold_time_sk#928,cs_ship_date_sk#929,cs_bill_customer_sk#930,cs_bill_cdemo_sk#931,cs_bill_hdemo_sk#932,cs_bill_addr_sk#933,cs_ship_customer_sk#934,cs_ship_cdemo_sk#935,cs_ship_hdemo_sk#936,cs_ship_addr_sk#937,cs_call_center_sk#938,cs_catalog_page_sk#939,cs_ship_mode_sk#940,cs_warehouse_sk#941,cs_item_sk#942,cs_promo_sk#943,cs_order_number#944L,cs_quantity#945,cs_wholesale_cost#946,cs_list_price#947,cs_sales_price#948,cs_ext_discount_amt#949,cs_ext_sales_price#950,cs_ext_wholesale_cost#951,... 10 more fields] parquet\n            :        :     +- Project [d_date_sk#962]\n            :        :        +- Filter ((isnotnull(d_year#968) AND ((d_year#968 >= 1998) AND (d_year#968 <= 2000))) AND isnotnull(d_date_sk#962))\n            :        :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#962,d_date_id#963,d_date#964,d_month_seq#965,d_week_seq#966,d_quarter_seq#967,d_year#968,d_dow#969,d_moy#970,d_dom#971,d_qoy#972,d_fy_year#973,d_fy_quarter_seq#974,d_fy_week_seq#975,d_day_name#976,d_quarter_name#977,d_holiday#978,d_weekend#979,d_following_holiday#980,d_first_dom#981,d_last_dom#982,d_same_day_ly#983,d_same_day_lq#984,d_current_day#985,... 4 more fields] parquet\n            :        +- Project [ws_quantity#1007 AS quantity#750, ws_list_price#1009 AS list_price#751]\n            :           +- Join Inner, (ws_sold_date_sk#1023 = d_date_sk#1024)\n            :              :- Project [ws_quantity#1007, ws_list_price#1009, ws_sold_date_sk#1023]\n            :              :  +- Filter (isnotnull(ws_sold_date_sk#1023) AND dynamicpruning#1290 [ws_sold_date_sk#1023])\n            :              :     :  +- Project [d_date_sk#1024]\n            :              :     :     +- Filter ((isnotnull(d_year#1030) AND ((d_year#1030 >= 1998) AND (d_year#1030 <= 2000))) AND isnotnull(d_date_sk#1024))\n            :              :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#1024,d_date_id#1025,d_date#1026,d_month_seq#1027,d_week_seq#1028,d_quarter_seq#1029,d_year#1030,d_dow#1031,d_moy#1032,d_dom#1033,d_qoy#1034,d_fy_year#1035,d_fy_quarter_seq#1036,d_fy_week_seq#1037,d_day_name#1038,d_quarter_name#1039,d_holiday#1040,d_weekend#1041,d_following_holiday#1042,d_first_dom#1043,d_last_dom#1044,d_same_day_ly#1045,d_same_day_lq#1046,d_current_day#1047,... 4 more fields] parquet\n            :              :     +- Relation spark_catalog.tpcds_100.web_sales[ws_sold_time_sk#990,ws_ship_date_sk#991,ws_item_sk#992,ws_bill_customer_sk#993,ws_bill_cdemo_sk#994,ws_bill_hdemo_sk#995,ws_bill_addr_sk#996,ws_ship_customer_sk#997,ws_ship_cdemo_sk#998,ws_ship_hdemo_sk#999,ws_ship_addr_sk#1000,ws_web_page_sk#1001,ws_web_site_sk#1002,ws_ship_mode_sk#1003,ws_warehouse_sk#1004,ws_promo_sk#1005,ws_order_number#1006L,ws_quantity#1007,ws_wholesale_cost#1008,ws_list_price#1009,ws_sales_price#1010,ws_ext_discount_amt#1011,ws_ext_sales_price#1012,ws_ext_wholesale_cost#1013,... 10 more fields] parquet\n            :              +- Project [d_date_sk#1024]\n            :                 +- Filter ((isnotnull(d_year#1030) AND ((d_year#1030 >= 1998) AND (d_year#1030 <= 2000))) AND isnotnull(d_date_sk#1024))\n            :                    +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#1024,d_date_id#1025,d_date#1026,d_month_seq#1027,d_week_seq#1028,d_quarter_seq#1029,d_year#1030,d_dow#1031,d_moy#1032,d_dom#1033,d_qoy#1034,d_fy_year#1035,d_fy_quarter_seq#1036,d_fy_week_seq#1037,d_day_name#1038,d_quarter_name#1039,d_holiday#1040,d_weekend#1041,d_following_holiday#1042,d_first_dom#1043,d_last_dom#1044,d_same_day_ly#1045,d_same_day_lq#1046,d_current_day#1047,... 4 more fields] parquet\n            +- Aggregate [i_brand_id#1155, i_class_id#1157, i_category_id#1159], [store AS channel#736, i_brand_id#1155, i_class_id#1157, i_category_id#1159, sum((cast(ss_quantity#1134 as decimal(10,0)) * ss_list_price#1136)) AS sales#737, count(1) AS number_sales#738L]\n               +- Project [ss_quantity#1134, ss_list_price#1136, i_brand_id#1155, i_class_id#1157, i_category_id#1159]\n                  +- Join Inner, (ss_item_sk#1126 = i_item_sk#1148)\n                     :- Project [ss_item_sk#1126, ss_quantity#1134, ss_list_price#1136]\n                     :  +- Join Inner, (ss_sold_date_sk#1147 = d_date_sk#1170)\n                     :     :- Join LeftSemi, (ss_item_sk#1126 = ss_item_sk#745)\n                     :     :  :- Project [ss_item_sk#1126, ss_quantity#1134, ss_list_price#1136, ss_sold_date_sk#1147]\n                     :     :  :  +- Filter ((isnotnull(ss_item_sk#1126) AND isnotnull(ss_sold_date_sk#1147)) AND dynamicpruning#1310 [ss_sold_date_sk#1147])\n                     :     :  :     :  +- Project [d_date_sk#1170]\n                     :     :  :     :     +- Filter ((isnotnull(d_week_seq#1174) AND (d_week_seq#1174 = scalar-subquery#740 [])) AND isnotnull(d_date_sk#1170))\n                     :     :  :     :        :  +- Project [d_week_seq#1241]\n                     :     :  :     :        :     +- Filter (((isnotnull(d_year#1243) AND isnotnull(d_moy#1245)) AND isnotnull(d_dom#1246)) AND (((d_year#1243 = 1998) AND (d_moy#1245 = 12)) AND (d_dom#1246 = 16)))\n                     :     :  :     :        :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#1237,d_date_id#1238,d_date#1239,d_month_seq#1240,d_week_seq#1241,d_quarter_seq#1242,d_year#1243,d_dow#1244,d_moy#1245,d_dom#1246,d_qoy#1247,d_fy_year#1248,d_fy_quarter_seq#1249,d_fy_week_seq#1250,d_day_name#1251,d_quarter_name#1252,d_holiday#1253,d_weekend#1254,d_following_holiday#1255,d_first_dom#1256,d_last_dom#1257,d_same_day_ly#1258,d_same_day_lq#1259,d_current_day#1260,... 4 more fields] parquet\n                     :     :  :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#1170,d_date_id#1171,d_date#1172,d_month_seq#1173,d_week_seq#1174,d_quarter_seq#1175,d_year#1176,d_dow#1177,d_moy#1178,d_dom#1179,d_qoy#1180,d_fy_year#1181,d_fy_quarter_seq#1182,d_fy_week_seq#1183,d_day_name#1184,d_quarter_name#1185,d_holiday#1186,d_weekend#1187,d_following_holiday#1188,d_first_dom#1189,d_last_dom#1190,d_same_day_ly#1191,d_same_day_lq#1192,d_current_day#1193,... 4 more fields] parquet\n                     :     :  :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#1125,ss_item_sk#1126,ss_customer_sk#1127,ss_cdemo_sk#1128,ss_hdemo_sk#1129,ss_addr_sk#1130,ss_store_sk#1131,ss_promo_sk#1132,ss_ticket_number#1133L,ss_quantity#1134,ss_wholesale_cost#1135,ss_list_price#1136,ss_sales_price#1137,ss_ext_discount_amt#1138,ss_ext_sales_price#1139,ss_ext_wholesale_cost#1140,ss_ext_list_price#1141,ss_ext_tax#1142,ss_coupon_amt#1143,ss_net_paid#1144,ss_net_paid_inc_tax#1145,ss_net_profit#1146,ss_sold_date_sk#1147] parquet\n                     :     :  +- LogicalQueryStage Project [i_item_sk#25 AS ss_item_sk#745], BroadcastQueryStage 93\n                     :     +- LogicalQueryStage Project [d_date_sk#1170], BroadcastQueryStage 34\n                     +- Join LeftSemi, (i_item_sk#1148 = ss_item_sk#745)\n                        :- Project [i_item_sk#1148, i_brand_id#1155, i_class_id#1157, i_category_id#1159]\n                        :  +- Filter (((isnotnull(i_item_sk#1148) AND isnotnull(i_brand_id#1155)) AND isnotnull(i_class_id#1157)) AND isnotnull(i_category_id#1159))\n                        :     +- Relation spark_catalog.tpcds_100.item[i_item_sk#1148,i_item_id#1149,i_rec_start_date#1150,i_rec_end_date#1151,i_item_desc#1152,i_current_price#1153,i_wholesale_cost#1154,i_brand_id#1155,i_brand#1156,i_class_id#1157,i_class#1158,i_category_id#1159,i_category#1160,i_manufact_id#1161,i_manufact#1162,i_size#1163,i_formulation#1164,i_color#1165,i_units#1166,i_container#1167,i_manager_id#1168,i_product_name#1169] parquet\n                        +- LogicalQueryStage Project [i_item_sk#25 AS ss_item_sk#745], BroadcastQueryStage 95\n"
      },
      "IM" : {
        "inputSizeInBytes" : 83829774976,
        "inputRowCount" : 551205976
      },
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "StartTimeInMs" : 1702226697186,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 14312,
        "IOBytes" : {
          "Total" : 1515839893,
          "Details" : {
            "IR" : 1514629711,
            "IW" : 0,
            "SR" : 605091,
            "SW" : 605091
          }
        }
      }
    },
    "5" : {
      "LQP" : {
        "operators" : {
          "45" : {
            "sign" : 579430964,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 86282466,
            "rowCount" : 202541,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(i_item_sk#1075) AND isnotnull(i_brand_id#1082)) AND isnotnull(i_class_id#1084)) AND isnotnull(i_category_id#1086)) "
          },
          "98" : {
            "sign" : 683629544,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#1170, d_date_id#1171, d_date#1172, d_month_seq#1173, d_week_seq#1174, d_quarter_seq#1175, d_year#1176, d_dow#1177, d_moy#1178, d_dom#1179, d_qoy#1180, d_fy_year#1181, d_fy_quarter_seq#1182, d_fy_week_seq#1183, d_day_name#1184, d_quarter_name#1185, d_holiday#1186, d_weekend#1187, d_following_holiday#1188, d_first_dom#1189, d_last_dom#1190, d_same_day_ly#1191, d_same_day_lq#1192, d_current_day#1193, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "113" : {
            "sign" : -1270097614,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 4875456,
            "rowCount" : 203144,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (((i_brand_id#762 <=> i_brand_id#784) AND (i_class_id#764 <=> i_class_id#786)) AND (i_category_id#766 <=> i_category_id#788)) "
          },
          "34" : {
            "sign" : -117080718,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 17256,
            "rowCount" : 1438,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#70] "
          },
          "67" : {
            "sign" : 2019201408,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 17256,
            "rowCount" : 1438,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#900] "
          },
          "120" : {
            "sign" : -1448453368,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 86282466,
            "rowCount" : 202541,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(i_item_sk#1148) AND isnotnull(i_brand_id#1155)) AND isnotnull(i_class_id#1157)) AND isnotnull(i_category_id#1159)) "
          },
          "93" : {
            "sign" : -303911461,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 7701269884,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#1126, ss_quantity#1134, ss_list_price#1136, ss_sold_date_sk#1147] "
          },
          "12" : {
            "sign" : 571393713,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(ss_item_sk#1053) AND isnotnull(ss_sold_date_sk#1074)) AND dynamicpruning#1303 [ss_sold_date_sk#1074]) "
          },
          "66" : {
            "sign" : -1972788865,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#877, ss_item_sk#878, ss_customer_sk#879, ss_cdemo_sk#880, ss_hdemo_sk#881, ss_addr_sk#882, ss_store_sk#883, ss_promo_sk#884, ss_ticket_number#885L, ss_quantity#886, ss_wholesale_cost#887, ss_list_price#888, ss_sales_price#889, ss_ext_discount_amt#890, ss_ext_sales_price#891, ss_ext_wholesale_cost#892, ss_ext_list_price#893, ss_ext_tax#894, ss_coupon_amt#895, ss_net_paid#896, ss_net_paid_inc_tax#897, ss_net_profit#898, ss_sold_date_sk#899], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "89" : {
            "sign" : -309843437,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 11490316840,
            "rowCount" : 287257921,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_item_sk#1126 = i_item_sk#1148) "
          },
          "51" : {
            "sign" : -1922967392,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 1224753985121117440,
            "rowCount" : 61237699256055872,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_brand_id#762 AS brand_id#742, i_class_id#764 AS class_id#743, i_category_id#766 AS category_id#744] "
          },
          "124" : {
            "sign" : -14482712,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 1224753985121117440,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (((brand_id#742 <=> i_brand_id#834) AND (class_id#743 <=> i_class_id#836)) AND (category_id#744 <=> i_category_id#838)) "
          },
          "84" : {
            "sign" : -626435234,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 353748,
            "rowCount" : 1438,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(d_year#1030) AND ((d_year#1030 >= 1998) AND (d_year#1030 <= 2000))) AND isnotnull(d_date_sk#1024)) "
          },
          "8" : {
            "sign" : 139041030,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 46207619304,
            "rowCount" : 1925317471,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#1053, ss_quantity#1061, ss_list_price#1063] "
          },
          "73" : {
            "sign" : 1500374164,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 29800787536,
            "rowCount" : 143273017,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(cs_sold_date_sk#961) AND dynamicpruning#1289 [cs_sold_date_sk#961]) "
          },
          "78" : {
            "sign" : 17831375,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 1389912100,
            "rowCount" : 69495605,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_quantity#1007 AS quantity#750, ws_list_price#1009 AS list_price#751] "
          },
          "19" : {
            "sign" : -1755539215,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#1209, d_date_id#1210, d_date#1211, d_month_seq#1212, d_week_seq#1213, d_quarter_seq#1214, d_year#1215, d_dow#1216, d_moy#1217, d_dom#1218, d_qoy#1219, d_fy_year#1220, d_fy_quarter_seq#1221, d_fy_week_seq#1222, d_day_name#1223, d_quarter_name#1224, d_holiday#1225, d_weekend#1226, d_following_holiday#1227, d_first_dom#1228, d_last_dom#1229, d_same_day_ly#1230, d_same_day_lq#1231, d_current_day#1232, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "100" : {
            "sign" : 1734827371,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 492,
            "rowCount" : 2,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(d_year#1243) AND isnotnull(d_moy#1245)) AND isnotnull(d_dom#1246)) AND (((d_year#1243 = 1998) AND (d_moy#1245 = 12)) AND (d_dom#1246 = 16))) "
          },
          "23" : {
            "sign" : -1756391561,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 86282466,
            "rowCount" : 202541,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(i_brand_id#32) AND isnotnull(i_class_id#34)) AND isnotnull(i_category_id#36)) "
          },
          "62" : {
            "sign" : 869525063,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 5310811700,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_quantity#886 AS quantity#746, ss_list_price#888 AS list_price#747] "
          },
          "128" : {
            "sign" : 899852841,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 3617396482656,
            "rowCount" : 301449706888,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#48] "
          },
          "4" : {
            "sign" : 1357304059,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 10408960,
            "rowCount" : 136960,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(sales#731) AND (cast(sales#731 as decimal(32,6)) > cast(scalar-subquery#735 [] as decimal(32,6)))) "
          },
          "121" : {
            "sign" : -1752719423,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 86904000,
            "rowCount" : 204000,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [i_item_sk#1148, i_item_id#1149, i_rec_start_date#1150, i_rec_end_date#1151, i_item_desc#1152, i_current_price#1153, i_wholesale_cost#1154, i_brand_id#1155, i_brand#1156, i_class_id#1157, i_class#1158, i_category_id#1159, i_category#1160, i_manufact_id#1161, i_manufact#1162, i_size#1163, i_formulation#1164, i_color#1165, i_units#1166, i_container#1167, i_manager_id#1168, i_product_name#1169], `spark_catalog`.`tpcds_100`.`item`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "88" : {
            "sign" : -1250291275,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 9192253472,
            "rowCount" : 287257921,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_quantity#1134, ss_list_price#1136, i_brand_id#1155, i_class_id#1157, i_category_id#1159] "
          },
          "77" : {
            "sign" : -169490734,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#962, d_date_id#963, d_date#964, d_month_seq#965, d_week_seq#966, d_quarter_seq#967, d_year#968, d_dow#969, d_moy#970, d_dom#971, d_qoy#972, d_fy_year#973, d_fy_quarter_seq#974, d_fy_week_seq#975, d_day_name#976, d_quarter_name#977, d_holiday#978, d_weekend#979, d_following_holiday#980, d_first_dom#981, d_last_dom#982, d_same_day_ly#983, d_same_day_lq#984, d_current_day#985, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "40" : {
            "sign" : 366726337,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 2877489060,
            "rowCount" : 143874453,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_brand_id#784, i_class_id#786, i_category_id#788], ShuffleQueryStage 47 "
          },
          "110" : {
            "sign" : 2101479604,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 4400725648,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#48, ss_sold_date_sk#69] "
          },
          "15" : {
            "sign" : 1866012666,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(d_week_seq#1101) AND (d_week_seq#1101 = scalar-subquery#734 [])) AND isnotnull(d_date_sk#1097)) "
          },
          "11" : {
            "sign" : 1222696026,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 7701269884,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#1053, ss_quantity#1061, ss_list_price#1063, ss_sold_date_sk#1074] "
          },
          "104" : {
            "sign" : -876321123,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 1224753985121117440,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (((brand_id#742 <=> i_brand_id#834) AND (class_id#743 <=> i_class_id#836)) AND (category_id#744 <=> i_category_id#838)) "
          },
          "90" : {
            "sign" : -2676572,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 46207619304,
            "rowCount" : 1925317471,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#1126, ss_quantity#1134, ss_list_price#1136] "
          },
          "9" : {
            "sign" : -1944592689,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 61610159072,
            "rowCount" : 1925317471,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#1074 = d_date_sk#1097) "
          },
          "132" : {
            "sign" : 1549879919,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 8125760,
            "rowCount" : 203144,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_item_sk#755, i_brand_id#762, i_class_id#764, i_category_id#766], ShuffleQueryStage 38 "
          },
          "44" : {
            "sign" : 1540331732,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 4860984,
            "rowCount" : 202541,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_item_sk#1075, i_brand_id#1082, i_class_id#1084, i_category_id#1086] "
          },
          "33" : {
            "sign" : 1104597854,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#47, ss_item_sk#48, ss_customer_sk#49, ss_cdemo_sk#50, ss_hdemo_sk#51, ss_addr_sk#52, ss_store_sk#53, ss_promo_sk#54, ss_ticket_number#55L, ss_quantity#56, ss_wholesale_cost#57, ss_list_price#58, ss_sales_price#59, ss_ext_discount_amt#60, ss_ext_sales_price#61, ss_ext_wholesale_cost#62, ss_ext_list_price#63, ss_ext_tax#64, ss_coupon_amt#65, ss_net_paid#66, ss_net_paid_inc_tax#67, ss_net_profit#68, ss_sold_date_sk#69], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "117" : {
            "sign" : -1902204624,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1048632,
            "rowCount" : 7,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#1170], BroadcastQueryStage 34 "
          },
          "22" : {
            "sign" : 2089743597,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 4860984,
            "rowCount" : 202541,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_item_sk#25, i_brand_id#32, i_class_id#34, i_category_id#36] "
          },
          "56" : {
            "sign" : 1070585237,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 4875456,
            "rowCount" : 203144,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (((i_brand_id#762 <=> i_brand_id#784) AND (i_class_id#764 <=> i_class_id#786)) AND (i_category_id#766 <=> i_category_id#788)) "
          },
          "55" : {
            "sign" : -1598388943,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1057344,
            "rowCount" : 1096,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#70], BroadcastQueryStage 11 "
          },
          "26" : {
            "sign" : -1989347848,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 1224753985121117440,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [brand_id#742, class_id#743, category_id#744], [brand_id#742, class_id#743, category_id#744] "
          },
          "134" : {
            "sign" : -365669692,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1379777760,
            "rowCount" : 43118055,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_brand_id#834, i_class_id#836, i_category_id#838], ShuffleQueryStage 60 "
          },
          "50" : {
            "sign" : -1608368025,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 1224753985121117440,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [brand_id#742, class_id#743, category_id#744], [brand_id#742, class_id#743, category_id#744] "
          },
          "123" : {
            "sign" : -1382179355,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 1224753985125978424,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (((i_brand_id#32 = brand_id#742) AND (i_class_id#34 = class_id#743)) AND (i_category_id#36 = category_id#744)) "
          },
          "37" : {
            "sign" : -1159939661,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1057344,
            "rowCount" : 1096,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#70], BroadcastQueryStage 0 "
          },
          "68" : {
            "sign" : -2071970095,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 353748,
            "rowCount" : 1438,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(d_year#906) AND ((d_year#906 >= 1998) AND (d_year#906 <= 2000))) AND isnotnull(d_date_sk#900)) "
          },
          "61" : {
            "sign" : -1298322270,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Union",
            "sizeInBytes" : 9471049040,
            "rowCount" : 473552452,
            "isRuntime" : false,
            "predicate" : " (unknown) Union Arguments: false, false "
          },
          "107" : {
            "sign" : -105466558,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 1714655579169564416,
            "rowCount" : 61237699256055872,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_item_sk#48 = i_item_sk#755) "
          },
          "13" : {
            "sign" : 913239237,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#1052, ss_item_sk#1053, ss_customer_sk#1054, ss_cdemo_sk#1055, ss_hdemo_sk#1056, ss_addr_sk#1057, ss_store_sk#1058, ss_promo_sk#1059, ss_ticket_number#1060L, ss_quantity#1061, ss_wholesale_cost#1062, ss_list_price#1063, ss_sales_price#1064, ss_ext_discount_amt#1065, ss_ext_sales_price#1066, ss_ext_wholesale_cost#1067, ss_ext_list_price#1068, ss_ext_tax#1069, ss_coupon_amt#1070, ss_net_paid#1071, ss_net_paid_inc_tax#1072, ss_net_profit#1073, ss_sold_date_sk#1074], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "46" : {
            "sign" : 73332589,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 86904000,
            "rowCount" : 204000,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [i_item_sk#1075, i_item_id#1076, i_rec_start_date#1077, i_rec_end_date#1078, i_item_desc#1079, i_current_price#1080, i_wholesale_cost#1081, i_brand_id#1082, i_brand#1083, i_class_id#1084, i_class#1085, i_category_id#1086, i_category#1087, i_manufact_id#1088, i_manufact#1089, i_size#1090, i_formulation#1091, i_color#1092, i_units#1093, i_container#1094, i_manager_id#1095, i_product_name#1096], `spark_catalog`.`tpcds_100`.`item`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "99" : {
            "sign" : -79282860,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 24,
            "rowCount" : 2,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_week_seq#1241] "
          },
          "24" : {
            "sign" : 2096275601,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 86904000,
            "rowCount" : 204000,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [i_item_sk#25, i_item_id#26, i_rec_start_date#27, i_rec_end_date#28, i_item_desc#29, i_current_price#30, i_wholesale_cost#31, i_brand_id#32, i_brand#33, i_class_id#34, i_class#35, i_category_id#36, i_category#37, i_manufact_id#38, i_manufact#39, i_size#40, i_formulation#41, i_color#42, i_units#43, i_container#44, i_manager_id#45, i_product_name#46], `spark_catalog`.`tpcds_100`.`item`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "94" : {
            "sign" : -604473204,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(ss_item_sk#1126) AND isnotnull(ss_sold_date_sk#1147)) AND dynamicpruning#1310 [ss_sold_date_sk#1147]) "
          },
          "83" : {
            "sign" : -1100969675,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 17256,
            "rowCount" : 1438,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#1024] "
          },
          "35" : {
            "sign" : 1340377833,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 353748,
            "rowCount" : 1438,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(d_year#76) AND ((d_year#76 >= 1998) AND (d_year#76 <= 2000))) AND isnotnull(d_date_sk#70)) "
          },
          "16" : {
            "sign" : 682718368,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#1097, d_date_id#1098, d_date#1099, d_month_seq#1100, d_week_seq#1101, d_quarter_seq#1102, d_year#1103, d_dow#1104, d_moy#1105, d_dom#1106, d_qoy#1107, d_fy_year#1108, d_fy_quarter_seq#1109, d_fy_week_seq#1110, d_day_name#1111, d_quarter_name#1112, d_holiday#1113, d_weekend#1114, d_following_holiday#1115, d_first_dom#1116, d_last_dom#1117, d_same_day_ly#1118, d_same_day_lq#1119, d_current_day#1120, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "79" : {
            "sign" : 1503367439,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 1945876940,
            "rowCount" : 69495605,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ws_sold_date_sk#1023 = d_date_sk#1024) "
          },
          "5" : {
            "sign" : -1173314487,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 10408960,
            "rowCount" : 136960,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [i_brand_id#1082, i_class_id#1084, i_category_id#1086], [store AS channel#730, i_brand_id#1082, i_class_id#1084, i_category_id#1086, sum((cast(ss_quantity#1061 as decimal(10,0)) * ss_list_price#1063)) AS sales#731, count(1) AS number_sales#732L] "
          },
          "103" : {
            "sign" : 1717410210,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 1224753985125978424,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (((i_brand_id#32 = brand_id#742) AND (i_class_id#34 = class_id#743)) AND (i_category_id#36 = category_id#744)) "
          },
          "112" : {
            "sign" : -1598387920,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1057344,
            "rowCount" : 1096,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#70], BroadcastQueryStage 23 "
          },
          "72" : {
            "sign" : 1942236716,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 3438552408,
            "rowCount" : 143273017,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_quantity#945, cs_list_price#947, cs_sold_date_sk#961] "
          },
          "10" : {
            "sign" : 1073081792,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 7701269884,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (ss_item_sk#1053 = ss_item_sk#745) "
          },
          "59" : {
            "sign" : -365670591,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1379777760,
            "rowCount" : 43118055,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_brand_id#834, i_class_id#836, i_category_id#838], ShuffleQueryStage 52 "
          },
          "87" : {
            "sign" : 778880288,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 10408960,
            "rowCount" : 136960,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [i_brand_id#1155, i_class_id#1157, i_category_id#1159], [store AS channel#736, i_brand_id#1155, i_class_id#1157, i_category_id#1159, sum((cast(ss_quantity#1134 as decimal(10,0)) * ss_list_price#1136)) AS sales#737, count(1) AS number_sales#738L] "
          },
          "48" : {
            "sign" : 1987472580,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 1224753985125978424,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (((i_brand_id#32 = brand_id#742) AND (i_class_id#34 = class_id#743)) AND (i_category_id#36 = category_id#744)) "
          },
          "21" : {
            "sign" : -1061891914,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 1224753985125978424,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (((i_brand_id#32 = brand_id#742) AND (i_class_id#34 = class_id#743)) AND (i_category_id#36 = category_id#744)) "
          },
          "116" : {
            "sign" : -365670467,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1379777760,
            "rowCount" : 43118055,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_brand_id#834, i_class_id#836, i_category_id#838], ShuffleQueryStage 56 "
          },
          "76" : {
            "sign" : -1695423935,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 353748,
            "rowCount" : 1438,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(d_year#968) AND ((d_year#968 >= 1998) AND (d_year#968 <= 2000))) AND isnotnull(d_date_sk#962)) "
          },
          "54" : {
            "sign" : 174031885,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 6028994137760,
            "rowCount" : 301449706888,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#69 = d_date_sk#70) "
          },
          "43" : {
            "sign" : -917424425,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 4860984,
            "rowCount" : 202541,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (i_item_sk#1075 = ss_item_sk#745) "
          },
          "127" : {
            "sign" : -2083387522,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 1714655579169564416,
            "rowCount" : 61237699256055872,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_item_sk#48 = i_item_sk#755) "
          },
          "65" : {
            "sign" : 1377797290,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(ss_sold_date_sk#899) AND dynamicpruning#1288 [ss_sold_date_sk#899]) "
          },
          "71" : {
            "sign" : 824386657,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 3878455336,
            "rowCount" : 138516262,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cs_sold_date_sk#961 = d_date_sk#962) "
          },
          "57" : {
            "sign" : 1549877842,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 8125760,
            "rowCount" : 203144,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_item_sk#755, i_brand_id#762, i_class_id#764, i_category_id#766], ShuffleQueryStage 13 "
          },
          "108" : {
            "sign" : 899851787,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 3617396482656,
            "rowCount" : 301449706888,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#48] "
          },
          "32" : {
            "sign" : -1052942334,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(ss_item_sk#48) AND isnotnull(ss_sold_date_sk#69)) AND dynamicpruning#1291 [ss_sold_date_sk#69]) "
          },
          "80" : {
            "sign" : 49678577,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 1727606976,
            "rowCount" : 71983624,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_quantity#1007, ws_list_price#1009, ws_sold_date_sk#1023] "
          },
          "106" : {
            "sign" : -694393982,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 1224753985121117440,
            "rowCount" : 61237699256055872,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_brand_id#762 AS brand_id#742, i_class_id#764 AS class_id#743, i_category_id#766 AS category_id#744] "
          },
          "82" : {
            "sign" : 1698660872,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 14972593792,
            "rowCount" : 71983624,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ws_sold_time_sk#990, ws_ship_date_sk#991, ws_item_sk#992, ws_bill_customer_sk#993, ws_bill_cdemo_sk#994, ws_bill_hdemo_sk#995, ws_bill_addr_sk#996, ws_ship_customer_sk#997, ws_ship_cdemo_sk#998, ws_ship_hdemo_sk#999, ws_ship_addr_sk#1000, ws_web_page_sk#1001, ws_web_site_sk#1002, ws_ship_mode_sk#1003, ws_warehouse_sk#1004, ws_promo_sk#1005, ws_order_number#1006L, ws_quantity#1007, ws_wholesale_cost#1008, ws_list_price#1009, ws_sales_price#1010, ws_ext_discount_amt#1011, ws_ext_sales_price#1012, ws_ext_wholesale_cost#1013, ... 10 more fields], `spark_catalog`.`tpcds_100`.`web_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "49" : {
            "sign" : 967702723,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 1224753985121117440,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (((brand_id#742 <=> i_brand_id#834) AND (class_id#743 <=> i_class_id#836)) AND (category_id#744 <=> i_category_id#838)) "
          },
          "6" : {
            "sign" : -2124690956,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 9192253472,
            "rowCount" : 287257921,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_quantity#1061, ss_list_price#1063, i_brand_id#1082, i_class_id#1084, i_category_id#1086] "
          },
          "126" : {
            "sign" : 979536830,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 1224753985121117440,
            "rowCount" : 61237699256055872,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_brand_id#762 AS brand_id#742, i_class_id#764 AS class_id#743, i_category_id#766 AS category_id#744] "
          },
          "36" : {
            "sign" : -232749464,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#70, d_date_id#71, d_date#72, d_month_seq#73, d_week_seq#74, d_quarter_seq#75, d_year#76, d_dow#77, d_moy#78, d_dom#79, d_qoy#80, d_fy_year#81, d_fy_quarter_seq#82, d_fy_week_seq#83, d_day_name#84, d_quarter_name#85, d_holiday#86, d_weekend#87, d_following_holiday#88, d_first_dom#89, d_last_dom#90, d_same_day_ly#91, d_same_day_lq#92, d_current_day#93, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "1" : {
            "sign" : -393757989,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
            "sizeInBytes" : 19722240,
            "rowCount" : 136960,
            "isRuntime" : false,
            "predicate" : " (unknown) LocalLimit Arguments: 100 "
          },
          "39" : {
            "sign" : 1019827343,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 8125760,
            "rowCount" : 203144,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_item_sk#755, i_brand_id#762, i_class_id#764, i_category_id#766], ShuffleQueryStage 1 "
          },
          "17" : {
            "sign" : -2061501032,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 36,
            "rowCount" : 3,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_week_seq#1213] "
          },
          "25" : {
            "sign" : -929833631,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 1224753985121117440,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (((brand_id#742 <=> i_brand_id#834) AND (class_id#743 <=> i_class_id#836)) AND (category_id#744 <=> i_category_id#838)) "
          },
          "60" : {
            "sign" : -1809172647,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 24,
            "rowCount" : 1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [avg((cast(quantity#746 as decimal(10,0)) * list_price#747)) AS average_sales#752] "
          },
          "14" : {
            "sign" : 707519831,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 876588,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#1097] "
          },
          "133" : {
            "sign" : 366727329,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 2877489060,
            "rowCount" : 143874453,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_brand_id#784, i_class_id#786, i_category_id#788], ShuffleQueryStage 58 "
          },
          "47" : {
            "sign" : 23707703,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 408251328375326141,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_item_sk#25 AS ss_item_sk#745] "
          },
          "122" : {
            "sign" : -1413048228,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 408251328375326141,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_item_sk#25 AS ss_item_sk#745] "
          },
          "111" : {
            "sign" : -109048900,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(ss_item_sk#48) AND isnotnull(ss_sold_date_sk#69)) AND dynamicpruning#1297 [ss_sold_date_sk#69]) "
          },
          "102" : {
            "sign" : 1324241425,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 408251328375326141,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_item_sk#25 AS ss_item_sk#745] "
          },
          "31" : {
            "sign" : -948624390,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 4400725648,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#48, ss_sold_date_sk#69] "
          },
          "96" : {
            "sign" : 1096234976,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 876588,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#1170] "
          },
          "69" : {
            "sign" : -820074406,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#900, d_date_id#901, d_date#902, d_month_seq#903, d_week_seq#904, d_quarter_seq#905, d_year#906, d_dow#907, d_moy#908, d_dom#909, d_qoy#910, d_fy_year#911, d_fy_quarter_seq#912, d_fy_week_seq#913, d_day_name#914, d_quarter_name#915, d_holiday#916, d_weekend#917, d_following_holiday#918, d_first_dom#919, d_last_dom#920, d_same_day_ly#921, d_same_day_lq#922, d_current_day#923, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "95" : {
            "sign" : 1179432008,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#1125, ss_item_sk#1126, ss_customer_sk#1127, ss_cdemo_sk#1128, ss_hdemo_sk#1129, ss_addr_sk#1130, ss_store_sk#1131, ss_promo_sk#1132, ss_ticket_number#1133L, ss_quantity#1134, ss_wholesale_cost#1135, ss_list_price#1136, ss_sales_price#1137, ss_ext_discount_amt#1138, ss_ext_sales_price#1139, ss_ext_wholesale_cost#1140, ss_ext_list_price#1141, ss_ext_tax#1142, ss_coupon_amt#1143, ss_net_paid#1144, ss_net_paid_inc_tax#1145, ss_net_profit#1146, ss_sold_date_sk#1147], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "58" : {
            "sign" : 366727081,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 2877489060,
            "rowCount" : 143874453,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_brand_id#784, i_class_id#786, i_category_id#788], ShuffleQueryStage 50 "
          },
          "64" : {
            "sign" : 1776873494,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 6601088472,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_quantity#886, ss_list_price#888, ss_sold_date_sk#899] "
          },
          "53" : {
            "sign" : -1868509690,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 3617396482656,
            "rowCount" : 301449706888,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#48] "
          },
          "42" : {
            "sign" : -21562714,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1048632,
            "rowCount" : 7,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#1097], BroadcastQueryStage 9 "
          },
          "75" : {
            "sign" : 406087876,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 17256,
            "rowCount" : 1438,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#962] "
          },
          "115" : {
            "sign" : 366727205,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 2877489060,
            "rowCount" : 143874453,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_brand_id#784, i_class_id#786, i_category_id#788], ShuffleQueryStage 54 "
          },
          "109" : {
            "sign" : 1894574278,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 6028994137760,
            "rowCount" : 301449706888,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#69 = d_date_sk#70) "
          },
          "0" : {
            "sign" : -1382183986,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
            "sizeInBytes" : 12000,
            "rowCount" : 100,
            "isRuntime" : false,
            "predicate" : " (unknown) GlobalLimit Arguments: 100 "
          },
          "20" : {
            "sign" : 1675872213,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 408251328375326141,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_item_sk#25 AS ss_item_sk#745] "
          },
          "27" : {
            "sign" : 1543581019,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 1224753985121117440,
            "rowCount" : 61237699256055872,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_brand_id#762 AS brand_id#742, i_class_id#764 AS class_id#743, i_category_id#766 AS category_id#744] "
          },
          "70" : {
            "sign" : 825651901,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 2770325240,
            "rowCount" : 138516262,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_quantity#945 AS quantity#748, cs_list_price#947 AS list_price#749] "
          },
          "2" : {
            "sign" : 1709700516,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 19722240,
            "rowCount" : 136960,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [i_brand_id#1082 ASC NULLS FIRST, i_class_id#1084 ASC NULLS FIRST, i_category_id#1086 ASC NULLS FIRST], true "
          },
          "86" : {
            "sign" : -799736365,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 10408960,
            "rowCount" : 136960,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(sales#737) AND (cast(sales#737 as decimal(32,6)) > cast(scalar-subquery#741 [] as decimal(32,6)))) "
          },
          "38" : {
            "sign" : -1412645680,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 4875456,
            "rowCount" : 203144,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (((i_brand_id#762 <=> i_brand_id#784) AND (i_class_id#764 <=> i_class_id#786)) AND (i_category_id#766 <=> i_category_id#788)) "
          },
          "81" : {
            "sign" : -1902449141,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 14972593792,
            "rowCount" : 71983624,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(ws_sold_date_sk#1023) AND dynamicpruning#1290 [ws_sold_date_sk#1023]) "
          },
          "118" : {
            "sign" : -1455297653,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 4860984,
            "rowCount" : 202541,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (i_item_sk#1148 = ss_item_sk#745) "
          },
          "92" : {
            "sign" : 500470196,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 7701269884,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (ss_item_sk#1126 = ss_item_sk#745) "
          },
          "125" : {
            "sign" : -1218597883,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 1224753985121117440,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [brand_id#742, class_id#743, category_id#744], [brand_id#742, class_id#743, category_id#744] "
          },
          "18" : {
            "sign" : -1305353512,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 738,
            "rowCount" : 3,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(d_year#1215) AND isnotnull(d_moy#1217)) AND isnotnull(d_dom#1218)) AND (((d_year#1215 = 1999) AND (d_moy#1217 = 12)) AND (d_dom#1218 = 16))) "
          },
          "101" : {
            "sign" : 813769211,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#1237, d_date_id#1238, d_date#1239, d_month_seq#1240, d_week_seq#1241, d_quarter_seq#1242, d_year#1243, d_dow#1244, d_moy#1245, d_dom#1246, d_qoy#1247, d_fy_year#1248, d_fy_quarter_seq#1249, d_fy_week_seq#1250, d_day_name#1251, d_quarter_name#1252, d_holiday#1253, d_weekend#1254, d_following_holiday#1255, d_first_dom#1256, d_last_dom#1257, d_same_day_ly#1258, d_same_day_lq#1259, d_current_day#1260, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "30" : {
            "sign" : 1668181847,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 6028994137760,
            "rowCount" : 301449706888,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#69 = d_date_sk#70) "
          },
          "7" : {
            "sign" : -292159423,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 11490316840,
            "rowCount" : 287257921,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_item_sk#1053 = i_item_sk#1075) "
          },
          "97" : {
            "sign" : -1689547051,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(d_week_seq#1174) AND (d_week_seq#1174 = scalar-subquery#740 [])) AND isnotnull(d_date_sk#1170)) "
          },
          "130" : {
            "sign" : -1598386866,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1057344,
            "rowCount" : 1096,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#70], BroadcastQueryStage 36 "
          },
          "114" : {
            "sign" : 1549878865,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 8125760,
            "rowCount" : 203144,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_item_sk#755, i_brand_id#762, i_class_id#764, i_category_id#766], ShuffleQueryStage 25 "
          },
          "129" : {
            "sign" : 1894575332,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 6028994137760,
            "rowCount" : 301449706888,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#69 = d_date_sk#70) "
          },
          "29" : {
            "sign" : -1722842562,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 3617396482656,
            "rowCount" : 301449706888,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#48] "
          },
          "41" : {
            "sign" : -365671366,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1379777760,
            "rowCount" : 43118055,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_brand_id#834, i_class_id#836, i_category_id#838], ShuffleQueryStage 48 "
          },
          "105" : {
            "sign" : -1787425591,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 1224753985121117440,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [brand_id#742, class_id#743, category_id#744], [brand_id#742, class_id#743, category_id#744] "
          },
          "63" : {
            "sign" : -1804794945,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 7435136380,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#899 = d_date_sk#900) "
          },
          "3" : {
            "sign" : 327734412,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 19722240,
            "rowCount" : 136960,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (((i_brand_id#1082 = i_brand_id#1155) AND (i_class_id#1084 = i_class_id#1157)) AND (i_category_id#1086 = i_category_id#1159)) "
          },
          "74" : {
            "sign" : -70077436,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 29800787536,
            "rowCount" : 143273017,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [cs_sold_time_sk#928, cs_ship_date_sk#929, cs_bill_customer_sk#930, cs_bill_cdemo_sk#931, cs_bill_hdemo_sk#932, cs_bill_addr_sk#933, cs_ship_customer_sk#934, cs_ship_cdemo_sk#935, cs_ship_hdemo_sk#936, cs_ship_addr_sk#937, cs_call_center_sk#938, cs_catalog_page_sk#939, cs_ship_mode_sk#940, cs_warehouse_sk#941, cs_item_sk#942, cs_promo_sk#943, cs_order_number#944L, cs_quantity#945, cs_wholesale_cost#946, cs_list_price#947, cs_sales_price#948, cs_ext_discount_amt#949, cs_ext_sales_price#950, cs_ext_wholesale_cost#951, ... 10 more fields], `spark_catalog`.`tpcds_100`.`catalog_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "91" : {
            "sign" : 787262118,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 61610159072,
            "rowCount" : 1925317471,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#1147 = d_date_sk#1170) "
          },
          "52" : {
            "sign" : -604531872,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 1714655579169564416,
            "rowCount" : 61237699256055872,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_item_sk#48 = i_item_sk#755) "
          },
          "85" : {
            "sign" : -502763688,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#1024, d_date_id#1025, d_date#1026, d_month_seq#1027, d_week_seq#1028, d_quarter_seq#1029, d_year#1030, d_dow#1031, d_moy#1032, d_dom#1033, d_qoy#1034, d_fy_year#1035, d_fy_quarter_seq#1036, d_fy_week_seq#1037, d_day_name#1038, d_quarter_name#1039, d_holiday#1040, d_weekend#1041, d_following_holiday#1042, d_first_dom#1043, d_last_dom#1044, d_same_day_ly#1045, d_same_day_lq#1046, d_current_day#1047, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "131" : {
            "sign" : 743407568,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 4875456,
            "rowCount" : 203144,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (((i_brand_id#762 <=> i_brand_id#784) AND (i_class_id#764 <=> i_class_id#786)) AND (i_category_id#766 <=> i_category_id#788)) "
          },
          "28" : {
            "sign" : -672276879,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 1714655579169564416,
            "rowCount" : 61237699256055872,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_item_sk#48 = i_item_sk#755) "
          },
          "119" : {
            "sign" : -1062759686,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 4860984,
            "rowCount" : 202541,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_item_sk#1148, i_brand_id#1155, i_class_id#1157, i_category_id#1159] "
          }
        },
        "links" : [ {
          "fromId" : 13,
          "fromName" : "LogicalRelation",
          "toId" : 12,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 16,
          "fromName" : "LogicalRelation",
          "toId" : 15,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 19,
          "fromName" : "LogicalRelation",
          "toId" : 18,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 18,
          "fromName" : "Filter",
          "toId" : 17,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 17,
          "fromName" : "Project",
          "toId" : 15,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 15,
          "fromName" : "Filter",
          "toId" : 14,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 14,
          "fromName" : "Project",
          "toId" : 12,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 12,
          "fromName" : "Filter",
          "toId" : 11,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "Project",
          "toId" : 10,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 24,
          "fromName" : "LogicalRelation",
          "toId" : 23,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 23,
          "fromName" : "Filter",
          "toId" : 22,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 22,
          "fromName" : "Project",
          "toId" : 21,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 33,
          "fromName" : "LogicalRelation",
          "toId" : 32,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 36,
          "fromName" : "LogicalRelation",
          "toId" : 35,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 35,
          "fromName" : "Filter",
          "toId" : 34,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 34,
          "fromName" : "Project",
          "toId" : 32,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 32,
          "fromName" : "Filter",
          "toId" : 31,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 31,
          "fromName" : "Project",
          "toId" : 30,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 37,
          "fromName" : "LogicalQueryStage",
          "toId" : 30,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 30,
          "fromName" : "Join",
          "toId" : 29,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 29,
          "fromName" : "Project",
          "toId" : 28,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 39,
          "fromName" : "LogicalQueryStage",
          "toId" : 38,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 40,
          "fromName" : "LogicalQueryStage",
          "toId" : 38,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 38,
          "fromName" : "Join",
          "toId" : 28,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 28,
          "fromName" : "Join",
          "toId" : 27,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 27,
          "fromName" : "Project",
          "toId" : 26,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 26,
          "fromName" : "Aggregate",
          "toId" : 25,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 41,
          "fromName" : "LogicalQueryStage",
          "toId" : 25,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 25,
          "fromName" : "Join",
          "toId" : 21,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 21,
          "fromName" : "Join",
          "toId" : 20,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 20,
          "fromName" : "Project",
          "toId" : 10,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "Join",
          "toId" : 9,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 42,
          "fromName" : "LogicalQueryStage",
          "toId" : 9,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "Join",
          "toId" : 8,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "Project",
          "toId" : 7,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 46,
          "fromName" : "LogicalRelation",
          "toId" : 45,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 45,
          "fromName" : "Filter",
          "toId" : 44,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 44,
          "fromName" : "Project",
          "toId" : 43,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 22,
          "fromName" : "Project",
          "toId" : 48,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 31,
          "fromName" : "Project",
          "toId" : 54,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 55,
          "fromName" : "LogicalQueryStage",
          "toId" : 54,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 54,
          "fromName" : "Join",
          "toId" : 53,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 53,
          "fromName" : "Project",
          "toId" : 52,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 57,
          "fromName" : "LogicalQueryStage",
          "toId" : 56,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 58,
          "fromName" : "LogicalQueryStage",
          "toId" : 56,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 56,
          "fromName" : "Join",
          "toId" : 52,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 52,
          "fromName" : "Join",
          "toId" : 51,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 51,
          "fromName" : "Project",
          "toId" : 50,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 50,
          "fromName" : "Aggregate",
          "toId" : 49,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 59,
          "fromName" : "LogicalQueryStage",
          "toId" : 49,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 49,
          "fromName" : "Join",
          "toId" : 48,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 48,
          "fromName" : "Join",
          "toId" : 47,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 47,
          "fromName" : "Project",
          "toId" : 43,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 43,
          "fromName" : "Join",
          "toId" : 7,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Join",
          "toId" : 6,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Project",
          "toId" : 5,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Aggregate",
          "toId" : 4,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 66,
          "fromName" : "LogicalRelation",
          "toId" : 65,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 69,
          "fromName" : "LogicalRelation",
          "toId" : 68,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 68,
          "fromName" : "Filter",
          "toId" : 67,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 67,
          "fromName" : "Project",
          "toId" : 65,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 65,
          "fromName" : "Filter",
          "toId" : 64,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 64,
          "fromName" : "Project",
          "toId" : 63,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 67,
          "fromName" : "Project",
          "toId" : 63,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 63,
          "fromName" : "Join",
          "toId" : 62,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 62,
          "fromName" : "Project",
          "toId" : 61,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 74,
          "fromName" : "LogicalRelation",
          "toId" : 73,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 77,
          "fromName" : "LogicalRelation",
          "toId" : 76,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 76,
          "fromName" : "Filter",
          "toId" : 75,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 75,
          "fromName" : "Project",
          "toId" : 73,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 73,
          "fromName" : "Filter",
          "toId" : 72,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 72,
          "fromName" : "Project",
          "toId" : 71,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 75,
          "fromName" : "Project",
          "toId" : 71,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 71,
          "fromName" : "Join",
          "toId" : 70,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 70,
          "fromName" : "Project",
          "toId" : 61,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 82,
          "fromName" : "LogicalRelation",
          "toId" : 81,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 85,
          "fromName" : "LogicalRelation",
          "toId" : 84,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 84,
          "fromName" : "Filter",
          "toId" : 83,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 83,
          "fromName" : "Project",
          "toId" : 81,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 81,
          "fromName" : "Filter",
          "toId" : 80,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 80,
          "fromName" : "Project",
          "toId" : 79,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 83,
          "fromName" : "Project",
          "toId" : 79,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 79,
          "fromName" : "Join",
          "toId" : 78,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 78,
          "fromName" : "Project",
          "toId" : 61,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 61,
          "fromName" : "Union",
          "toId" : 60,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 60,
          "fromName" : "Aggregate",
          "toId" : 4,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 4,
          "fromName" : "Filter",
          "toId" : 3,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 95,
          "fromName" : "LogicalRelation",
          "toId" : 94,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 98,
          "fromName" : "LogicalRelation",
          "toId" : 97,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 101,
          "fromName" : "LogicalRelation",
          "toId" : 100,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 100,
          "fromName" : "Filter",
          "toId" : 99,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 99,
          "fromName" : "Project",
          "toId" : 97,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 97,
          "fromName" : "Filter",
          "toId" : 96,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 96,
          "fromName" : "Project",
          "toId" : 94,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 94,
          "fromName" : "Filter",
          "toId" : 93,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 93,
          "fromName" : "Project",
          "toId" : 92,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 22,
          "fromName" : "Project",
          "toId" : 103,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 33,
          "fromName" : "LogicalRelation",
          "toId" : 111,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 34,
          "fromName" : "Project",
          "toId" : 111,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 111,
          "fromName" : "Filter",
          "toId" : 110,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 110,
          "fromName" : "Project",
          "toId" : 109,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 112,
          "fromName" : "LogicalQueryStage",
          "toId" : 109,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 109,
          "fromName" : "Join",
          "toId" : 108,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 108,
          "fromName" : "Project",
          "toId" : 107,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 114,
          "fromName" : "LogicalQueryStage",
          "toId" : 113,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 115,
          "fromName" : "LogicalQueryStage",
          "toId" : 113,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 113,
          "fromName" : "Join",
          "toId" : 107,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 107,
          "fromName" : "Join",
          "toId" : 106,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 106,
          "fromName" : "Project",
          "toId" : 105,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 105,
          "fromName" : "Aggregate",
          "toId" : 104,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 116,
          "fromName" : "LogicalQueryStage",
          "toId" : 104,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 104,
          "fromName" : "Join",
          "toId" : 103,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 103,
          "fromName" : "Join",
          "toId" : 102,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 102,
          "fromName" : "Project",
          "toId" : 92,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 92,
          "fromName" : "Join",
          "toId" : 91,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 117,
          "fromName" : "LogicalQueryStage",
          "toId" : 91,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 91,
          "fromName" : "Join",
          "toId" : 90,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 90,
          "fromName" : "Project",
          "toId" : 89,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 121,
          "fromName" : "LogicalRelation",
          "toId" : 120,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 120,
          "fromName" : "Filter",
          "toId" : 119,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 119,
          "fromName" : "Project",
          "toId" : 118,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 22,
          "fromName" : "Project",
          "toId" : 123,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 110,
          "fromName" : "Project",
          "toId" : 129,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 130,
          "fromName" : "LogicalQueryStage",
          "toId" : 129,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 129,
          "fromName" : "Join",
          "toId" : 128,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 128,
          "fromName" : "Project",
          "toId" : 127,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 132,
          "fromName" : "LogicalQueryStage",
          "toId" : 131,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 133,
          "fromName" : "LogicalQueryStage",
          "toId" : 131,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 131,
          "fromName" : "Join",
          "toId" : 127,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 127,
          "fromName" : "Join",
          "toId" : 126,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 126,
          "fromName" : "Project",
          "toId" : 125,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 125,
          "fromName" : "Aggregate",
          "toId" : 124,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 134,
          "fromName" : "LogicalQueryStage",
          "toId" : 124,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 124,
          "fromName" : "Join",
          "toId" : 123,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 123,
          "fromName" : "Join",
          "toId" : 122,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 122,
          "fromName" : "Project",
          "toId" : 118,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 118,
          "fromName" : "Join",
          "toId" : 89,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 89,
          "fromName" : "Join",
          "toId" : 88,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 88,
          "fromName" : "Project",
          "toId" : 87,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 87,
          "fromName" : "Aggregate",
          "toId" : 86,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 60,
          "fromName" : "Aggregate",
          "toId" : 86,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 86,
          "fromName" : "Filter",
          "toId" : 3,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Join",
          "toId" : 2,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "LocalLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "LocalLimit",
          "toId" : 0,
          "toName" : "GlobalLimit",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [i_brand_id#1082 ASC NULLS FIRST, i_class_id#1084 ASC NULLS FIRST, i_category_id#1086 ASC NULLS FIRST], true\n      +- Join Inner, (((i_brand_id#1082 = i_brand_id#1155) AND (i_class_id#1084 = i_class_id#1157)) AND (i_category_id#1086 = i_category_id#1159))\n         :- Filter (isnotnull(sales#731) AND (cast(sales#731 as decimal(32,6)) > cast(scalar-subquery#735 [] as decimal(32,6))))\n         :  :  +- Aggregate [avg((cast(quantity#746 as decimal(10,0)) * list_price#747)) AS average_sales#752]\n         :  :     +- Union false, false\n         :  :        :- Project [ss_quantity#886 AS quantity#746, ss_list_price#888 AS list_price#747]\n         :  :        :  +- Join Inner, (ss_sold_date_sk#899 = d_date_sk#900)\n         :  :        :     :- Project [ss_quantity#886, ss_list_price#888, ss_sold_date_sk#899]\n         :  :        :     :  +- Filter (isnotnull(ss_sold_date_sk#899) AND dynamicpruning#1288 [ss_sold_date_sk#899])\n         :  :        :     :     :  +- Project [d_date_sk#900]\n         :  :        :     :     :     +- Filter ((isnotnull(d_year#906) AND ((d_year#906 >= 1998) AND (d_year#906 <= 2000))) AND isnotnull(d_date_sk#900))\n         :  :        :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#900,d_date_id#901,d_date#902,d_month_seq#903,d_week_seq#904,d_quarter_seq#905,d_year#906,d_dow#907,d_moy#908,d_dom#909,d_qoy#910,d_fy_year#911,d_fy_quarter_seq#912,d_fy_week_seq#913,d_day_name#914,d_quarter_name#915,d_holiday#916,d_weekend#917,d_following_holiday#918,d_first_dom#919,d_last_dom#920,d_same_day_ly#921,d_same_day_lq#922,d_current_day#923,... 4 more fields] parquet\n         :  :        :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#877,ss_item_sk#878,ss_customer_sk#879,ss_cdemo_sk#880,ss_hdemo_sk#881,ss_addr_sk#882,ss_store_sk#883,ss_promo_sk#884,ss_ticket_number#885L,ss_quantity#886,ss_wholesale_cost#887,ss_list_price#888,ss_sales_price#889,ss_ext_discount_amt#890,ss_ext_sales_price#891,ss_ext_wholesale_cost#892,ss_ext_list_price#893,ss_ext_tax#894,ss_coupon_amt#895,ss_net_paid#896,ss_net_paid_inc_tax#897,ss_net_profit#898,ss_sold_date_sk#899] parquet\n         :  :        :     +- Project [d_date_sk#900]\n         :  :        :        +- Filter ((isnotnull(d_year#906) AND ((d_year#906 >= 1998) AND (d_year#906 <= 2000))) AND isnotnull(d_date_sk#900))\n         :  :        :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#900,d_date_id#901,d_date#902,d_month_seq#903,d_week_seq#904,d_quarter_seq#905,d_year#906,d_dow#907,d_moy#908,d_dom#909,d_qoy#910,d_fy_year#911,d_fy_quarter_seq#912,d_fy_week_seq#913,d_day_name#914,d_quarter_name#915,d_holiday#916,d_weekend#917,d_following_holiday#918,d_first_dom#919,d_last_dom#920,d_same_day_ly#921,d_same_day_lq#922,d_current_day#923,... 4 more fields] parquet\n         :  :        :- Project [cs_quantity#945 AS quantity#748, cs_list_price#947 AS list_price#749]\n         :  :        :  +- Join Inner, (cs_sold_date_sk#961 = d_date_sk#962)\n         :  :        :     :- Project [cs_quantity#945, cs_list_price#947, cs_sold_date_sk#961]\n         :  :        :     :  +- Filter (isnotnull(cs_sold_date_sk#961) AND dynamicpruning#1289 [cs_sold_date_sk#961])\n         :  :        :     :     :  +- Project [d_date_sk#962]\n         :  :        :     :     :     +- Filter ((isnotnull(d_year#968) AND ((d_year#968 >= 1998) AND (d_year#968 <= 2000))) AND isnotnull(d_date_sk#962))\n         :  :        :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#962,d_date_id#963,d_date#964,d_month_seq#965,d_week_seq#966,d_quarter_seq#967,d_year#968,d_dow#969,d_moy#970,d_dom#971,d_qoy#972,d_fy_year#973,d_fy_quarter_seq#974,d_fy_week_seq#975,d_day_name#976,d_quarter_name#977,d_holiday#978,d_weekend#979,d_following_holiday#980,d_first_dom#981,d_last_dom#982,d_same_day_ly#983,d_same_day_lq#984,d_current_day#985,... 4 more fields] parquet\n         :  :        :     :     +- Relation spark_catalog.tpcds_100.catalog_sales[cs_sold_time_sk#928,cs_ship_date_sk#929,cs_bill_customer_sk#930,cs_bill_cdemo_sk#931,cs_bill_hdemo_sk#932,cs_bill_addr_sk#933,cs_ship_customer_sk#934,cs_ship_cdemo_sk#935,cs_ship_hdemo_sk#936,cs_ship_addr_sk#937,cs_call_center_sk#938,cs_catalog_page_sk#939,cs_ship_mode_sk#940,cs_warehouse_sk#941,cs_item_sk#942,cs_promo_sk#943,cs_order_number#944L,cs_quantity#945,cs_wholesale_cost#946,cs_list_price#947,cs_sales_price#948,cs_ext_discount_amt#949,cs_ext_sales_price#950,cs_ext_wholesale_cost#951,... 10 more fields] parquet\n         :  :        :     +- Project [d_date_sk#962]\n         :  :        :        +- Filter ((isnotnull(d_year#968) AND ((d_year#968 >= 1998) AND (d_year#968 <= 2000))) AND isnotnull(d_date_sk#962))\n         :  :        :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#962,d_date_id#963,d_date#964,d_month_seq#965,d_week_seq#966,d_quarter_seq#967,d_year#968,d_dow#969,d_moy#970,d_dom#971,d_qoy#972,d_fy_year#973,d_fy_quarter_seq#974,d_fy_week_seq#975,d_day_name#976,d_quarter_name#977,d_holiday#978,d_weekend#979,d_following_holiday#980,d_first_dom#981,d_last_dom#982,d_same_day_ly#983,d_same_day_lq#984,d_current_day#985,... 4 more fields] parquet\n         :  :        +- Project [ws_quantity#1007 AS quantity#750, ws_list_price#1009 AS list_price#751]\n         :  :           +- Join Inner, (ws_sold_date_sk#1023 = d_date_sk#1024)\n         :  :              :- Project [ws_quantity#1007, ws_list_price#1009, ws_sold_date_sk#1023]\n         :  :              :  +- Filter (isnotnull(ws_sold_date_sk#1023) AND dynamicpruning#1290 [ws_sold_date_sk#1023])\n         :  :              :     :  +- Project [d_date_sk#1024]\n         :  :              :     :     +- Filter ((isnotnull(d_year#1030) AND ((d_year#1030 >= 1998) AND (d_year#1030 <= 2000))) AND isnotnull(d_date_sk#1024))\n         :  :              :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#1024,d_date_id#1025,d_date#1026,d_month_seq#1027,d_week_seq#1028,d_quarter_seq#1029,d_year#1030,d_dow#1031,d_moy#1032,d_dom#1033,d_qoy#1034,d_fy_year#1035,d_fy_quarter_seq#1036,d_fy_week_seq#1037,d_day_name#1038,d_quarter_name#1039,d_holiday#1040,d_weekend#1041,d_following_holiday#1042,d_first_dom#1043,d_last_dom#1044,d_same_day_ly#1045,d_same_day_lq#1046,d_current_day#1047,... 4 more fields] parquet\n         :  :              :     +- Relation spark_catalog.tpcds_100.web_sales[ws_sold_time_sk#990,ws_ship_date_sk#991,ws_item_sk#992,ws_bill_customer_sk#993,ws_bill_cdemo_sk#994,ws_bill_hdemo_sk#995,ws_bill_addr_sk#996,ws_ship_customer_sk#997,ws_ship_cdemo_sk#998,ws_ship_hdemo_sk#999,ws_ship_addr_sk#1000,ws_web_page_sk#1001,ws_web_site_sk#1002,ws_ship_mode_sk#1003,ws_warehouse_sk#1004,ws_promo_sk#1005,ws_order_number#1006L,ws_quantity#1007,ws_wholesale_cost#1008,ws_list_price#1009,ws_sales_price#1010,ws_ext_discount_amt#1011,ws_ext_sales_price#1012,ws_ext_wholesale_cost#1013,... 10 more fields] parquet\n         :  :              +- Project [d_date_sk#1024]\n         :  :                 +- Filter ((isnotnull(d_year#1030) AND ((d_year#1030 >= 1998) AND (d_year#1030 <= 2000))) AND isnotnull(d_date_sk#1024))\n         :  :                    +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#1024,d_date_id#1025,d_date#1026,d_month_seq#1027,d_week_seq#1028,d_quarter_seq#1029,d_year#1030,d_dow#1031,d_moy#1032,d_dom#1033,d_qoy#1034,d_fy_year#1035,d_fy_quarter_seq#1036,d_fy_week_seq#1037,d_day_name#1038,d_quarter_name#1039,d_holiday#1040,d_weekend#1041,d_following_holiday#1042,d_first_dom#1043,d_last_dom#1044,d_same_day_ly#1045,d_same_day_lq#1046,d_current_day#1047,... 4 more fields] parquet\n         :  +- Aggregate [i_brand_id#1082, i_class_id#1084, i_category_id#1086], [store AS channel#730, i_brand_id#1082, i_class_id#1084, i_category_id#1086, sum((cast(ss_quantity#1061 as decimal(10,0)) * ss_list_price#1063)) AS sales#731, count(1) AS number_sales#732L]\n         :     +- Project [ss_quantity#1061, ss_list_price#1063, i_brand_id#1082, i_class_id#1084, i_category_id#1086]\n         :        +- Join Inner, (ss_item_sk#1053 = i_item_sk#1075)\n         :           :- Project [ss_item_sk#1053, ss_quantity#1061, ss_list_price#1063]\n         :           :  +- Join Inner, (ss_sold_date_sk#1074 = d_date_sk#1097)\n         :           :     :- Join LeftSemi, (ss_item_sk#1053 = ss_item_sk#745)\n         :           :     :  :- Project [ss_item_sk#1053, ss_quantity#1061, ss_list_price#1063, ss_sold_date_sk#1074]\n         :           :     :  :  +- Filter ((isnotnull(ss_item_sk#1053) AND isnotnull(ss_sold_date_sk#1074)) AND dynamicpruning#1303 [ss_sold_date_sk#1074])\n         :           :     :  :     :  +- Project [d_date_sk#1097]\n         :           :     :  :     :     +- Filter ((isnotnull(d_week_seq#1101) AND (d_week_seq#1101 = scalar-subquery#734 [])) AND isnotnull(d_date_sk#1097))\n         :           :     :  :     :        :  +- Project [d_week_seq#1213]\n         :           :     :  :     :        :     +- Filter (((isnotnull(d_year#1215) AND isnotnull(d_moy#1217)) AND isnotnull(d_dom#1218)) AND (((d_year#1215 = 1999) AND (d_moy#1217 = 12)) AND (d_dom#1218 = 16)))\n         :           :     :  :     :        :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#1209,d_date_id#1210,d_date#1211,d_month_seq#1212,d_week_seq#1213,d_quarter_seq#1214,d_year#1215,d_dow#1216,d_moy#1217,d_dom#1218,d_qoy#1219,d_fy_year#1220,d_fy_quarter_seq#1221,d_fy_week_seq#1222,d_day_name#1223,d_quarter_name#1224,d_holiday#1225,d_weekend#1226,d_following_holiday#1227,d_first_dom#1228,d_last_dom#1229,d_same_day_ly#1230,d_same_day_lq#1231,d_current_day#1232,... 4 more fields] parquet\n         :           :     :  :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#1097,d_date_id#1098,d_date#1099,d_month_seq#1100,d_week_seq#1101,d_quarter_seq#1102,d_year#1103,d_dow#1104,d_moy#1105,d_dom#1106,d_qoy#1107,d_fy_year#1108,d_fy_quarter_seq#1109,d_fy_week_seq#1110,d_day_name#1111,d_quarter_name#1112,d_holiday#1113,d_weekend#1114,d_following_holiday#1115,d_first_dom#1116,d_last_dom#1117,d_same_day_ly#1118,d_same_day_lq#1119,d_current_day#1120,... 4 more fields] parquet\n         :           :     :  :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#1052,ss_item_sk#1053,ss_customer_sk#1054,ss_cdemo_sk#1055,ss_hdemo_sk#1056,ss_addr_sk#1057,ss_store_sk#1058,ss_promo_sk#1059,ss_ticket_number#1060L,ss_quantity#1061,ss_wholesale_cost#1062,ss_list_price#1063,ss_sales_price#1064,ss_ext_discount_amt#1065,ss_ext_sales_price#1066,ss_ext_wholesale_cost#1067,ss_ext_list_price#1068,ss_ext_tax#1069,ss_coupon_amt#1070,ss_net_paid#1071,ss_net_paid_inc_tax#1072,ss_net_profit#1073,ss_sold_date_sk#1074] parquet\n         :           :     :  +- Project [i_item_sk#25 AS ss_item_sk#745]\n         :           :     :     +- Join Inner, (((i_brand_id#32 = brand_id#742) AND (i_class_id#34 = class_id#743)) AND (i_category_id#36 = category_id#744))\n         :           :     :        :- Project [i_item_sk#25, i_brand_id#32, i_class_id#34, i_category_id#36]\n         :           :     :        :  +- Filter ((isnotnull(i_brand_id#32) AND isnotnull(i_class_id#34)) AND isnotnull(i_category_id#36))\n         :           :     :        :     +- Relation spark_catalog.tpcds_100.item[i_item_sk#25,i_item_id#26,i_rec_start_date#27,i_rec_end_date#28,i_item_desc#29,i_current_price#30,i_wholesale_cost#31,i_brand_id#32,i_brand#33,i_class_id#34,i_class#35,i_category_id#36,i_category#37,i_manufact_id#38,i_manufact#39,i_size#40,i_formulation#41,i_color#42,i_units#43,i_container#44,i_manager_id#45,i_product_name#46] parquet\n         :           :     :        +- Join LeftSemi, (((brand_id#742 <=> i_brand_id#834) AND (class_id#743 <=> i_class_id#836)) AND (category_id#744 <=> i_category_id#838))\n         :           :     :           :- Aggregate [brand_id#742, class_id#743, category_id#744], [brand_id#742, class_id#743, category_id#744]\n         :           :     :           :  +- Project [i_brand_id#762 AS brand_id#742, i_class_id#764 AS class_id#743, i_category_id#766 AS category_id#744]\n         :           :     :           :     +- Join Inner, (ss_item_sk#48 = i_item_sk#755)\n         :           :     :           :        :- Project [ss_item_sk#48]\n         :           :     :           :        :  +- Join Inner, (ss_sold_date_sk#69 = d_date_sk#70)\n         :           :     :           :        :     :- Project [ss_item_sk#48, ss_sold_date_sk#69]\n         :           :     :           :        :     :  +- Filter ((isnotnull(ss_item_sk#48) AND isnotnull(ss_sold_date_sk#69)) AND dynamicpruning#1291 [ss_sold_date_sk#69])\n         :           :     :           :        :     :     :  +- Project [d_date_sk#70]\n         :           :     :           :        :     :     :     +- Filter ((isnotnull(d_year#76) AND ((d_year#76 >= 1998) AND (d_year#76 <= 2000))) AND isnotnull(d_date_sk#70))\n         :           :     :           :        :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#70,d_date_id#71,d_date#72,d_month_seq#73,d_week_seq#74,d_quarter_seq#75,d_year#76,d_dow#77,d_moy#78,d_dom#79,d_qoy#80,d_fy_year#81,d_fy_quarter_seq#82,d_fy_week_seq#83,d_day_name#84,d_quarter_name#85,d_holiday#86,d_weekend#87,d_following_holiday#88,d_first_dom#89,d_last_dom#90,d_same_day_ly#91,d_same_day_lq#92,d_current_day#93,... 4 more fields] parquet\n         :           :     :           :        :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#47,ss_item_sk#48,ss_customer_sk#49,ss_cdemo_sk#50,ss_hdemo_sk#51,ss_addr_sk#52,ss_store_sk#53,ss_promo_sk#54,ss_ticket_number#55L,ss_quantity#56,ss_wholesale_cost#57,ss_list_price#58,ss_sales_price#59,ss_ext_discount_amt#60,ss_ext_sales_price#61,ss_ext_wholesale_cost#62,ss_ext_list_price#63,ss_ext_tax#64,ss_coupon_amt#65,ss_net_paid#66,ss_net_paid_inc_tax#67,ss_net_profit#68,ss_sold_date_sk#69] parquet\n         :           :     :           :        :     +- LogicalQueryStage Project [d_date_sk#70], BroadcastQueryStage 0\n         :           :     :           :        +- Join LeftSemi, (((i_brand_id#762 <=> i_brand_id#784) AND (i_class_id#764 <=> i_class_id#786)) AND (i_category_id#766 <=> i_category_id#788))\n         :           :     :           :           :- LogicalQueryStage Project [i_item_sk#755, i_brand_id#762, i_class_id#764, i_category_id#766], ShuffleQueryStage 1\n         :           :     :           :           +- LogicalQueryStage Project [i_brand_id#784, i_class_id#786, i_category_id#788], ShuffleQueryStage 47\n         :           :     :           +- LogicalQueryStage Project [i_brand_id#834, i_class_id#836, i_category_id#838], ShuffleQueryStage 48\n         :           :     +- LogicalQueryStage Project [d_date_sk#1097], BroadcastQueryStage 9\n         :           +- Join LeftSemi, (i_item_sk#1075 = ss_item_sk#745)\n         :              :- Project [i_item_sk#1075, i_brand_id#1082, i_class_id#1084, i_category_id#1086]\n         :              :  +- Filter (((isnotnull(i_item_sk#1075) AND isnotnull(i_brand_id#1082)) AND isnotnull(i_class_id#1084)) AND isnotnull(i_category_id#1086))\n         :              :     +- Relation spark_catalog.tpcds_100.item[i_item_sk#1075,i_item_id#1076,i_rec_start_date#1077,i_rec_end_date#1078,i_item_desc#1079,i_current_price#1080,i_wholesale_cost#1081,i_brand_id#1082,i_brand#1083,i_class_id#1084,i_class#1085,i_category_id#1086,i_category#1087,i_manufact_id#1088,i_manufact#1089,i_size#1090,i_formulation#1091,i_color#1092,i_units#1093,i_container#1094,i_manager_id#1095,i_product_name#1096] parquet\n         :              +- Project [i_item_sk#25 AS ss_item_sk#745]\n         :                 +- Join Inner, (((i_brand_id#32 = brand_id#742) AND (i_class_id#34 = class_id#743)) AND (i_category_id#36 = category_id#744))\n         :                    :- Project [i_item_sk#25, i_brand_id#32, i_class_id#34, i_category_id#36]\n         :                    :  +- Filter ((isnotnull(i_brand_id#32) AND isnotnull(i_class_id#34)) AND isnotnull(i_category_id#36))\n         :                    :     +- Relation spark_catalog.tpcds_100.item[i_item_sk#25,i_item_id#26,i_rec_start_date#27,i_rec_end_date#28,i_item_desc#29,i_current_price#30,i_wholesale_cost#31,i_brand_id#32,i_brand#33,i_class_id#34,i_class#35,i_category_id#36,i_category#37,i_manufact_id#38,i_manufact#39,i_size#40,i_formulation#41,i_color#42,i_units#43,i_container#44,i_manager_id#45,i_product_name#46] parquet\n         :                    +- Join LeftSemi, (((brand_id#742 <=> i_brand_id#834) AND (class_id#743 <=> i_class_id#836)) AND (category_id#744 <=> i_category_id#838))\n         :                       :- Aggregate [brand_id#742, class_id#743, category_id#744], [brand_id#742, class_id#743, category_id#744]\n         :                       :  +- Project [i_brand_id#762 AS brand_id#742, i_class_id#764 AS class_id#743, i_category_id#766 AS category_id#744]\n         :                       :     +- Join Inner, (ss_item_sk#48 = i_item_sk#755)\n         :                       :        :- Project [ss_item_sk#48]\n         :                       :        :  +- Join Inner, (ss_sold_date_sk#69 = d_date_sk#70)\n         :                       :        :     :- Project [ss_item_sk#48, ss_sold_date_sk#69]\n         :                       :        :     :  +- Filter ((isnotnull(ss_item_sk#48) AND isnotnull(ss_sold_date_sk#69)) AND dynamicpruning#1291 [ss_sold_date_sk#69])\n         :                       :        :     :     :  +- Project [d_date_sk#70]\n         :                       :        :     :     :     +- Filter ((isnotnull(d_year#76) AND ((d_year#76 >= 1998) AND (d_year#76 <= 2000))) AND isnotnull(d_date_sk#70))\n         :                       :        :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#70,d_date_id#71,d_date#72,d_month_seq#73,d_week_seq#74,d_quarter_seq#75,d_year#76,d_dow#77,d_moy#78,d_dom#79,d_qoy#80,d_fy_year#81,d_fy_quarter_seq#82,d_fy_week_seq#83,d_day_name#84,d_quarter_name#85,d_holiday#86,d_weekend#87,d_following_holiday#88,d_first_dom#89,d_last_dom#90,d_same_day_ly#91,d_same_day_lq#92,d_current_day#93,... 4 more fields] parquet\n         :                       :        :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#47,ss_item_sk#48,ss_customer_sk#49,ss_cdemo_sk#50,ss_hdemo_sk#51,ss_addr_sk#52,ss_store_sk#53,ss_promo_sk#54,ss_ticket_number#55L,ss_quantity#56,ss_wholesale_cost#57,ss_list_price#58,ss_sales_price#59,ss_ext_discount_amt#60,ss_ext_sales_price#61,ss_ext_wholesale_cost#62,ss_ext_list_price#63,ss_ext_tax#64,ss_coupon_amt#65,ss_net_paid#66,ss_net_paid_inc_tax#67,ss_net_profit#68,ss_sold_date_sk#69] parquet\n         :                       :        :     +- LogicalQueryStage Project [d_date_sk#70], BroadcastQueryStage 11\n         :                       :        +- Join LeftSemi, (((i_brand_id#762 <=> i_brand_id#784) AND (i_class_id#764 <=> i_class_id#786)) AND (i_category_id#766 <=> i_category_id#788))\n         :                       :           :- LogicalQueryStage Project [i_item_sk#755, i_brand_id#762, i_class_id#764, i_category_id#766], ShuffleQueryStage 13\n         :                       :           +- LogicalQueryStage Project [i_brand_id#784, i_class_id#786, i_category_id#788], ShuffleQueryStage 50\n         :                       +- LogicalQueryStage Project [i_brand_id#834, i_class_id#836, i_category_id#838], ShuffleQueryStage 52\n         +- Filter (isnotnull(sales#737) AND (cast(sales#737 as decimal(32,6)) > cast(scalar-subquery#741 [] as decimal(32,6))))\n            :  +- Aggregate [avg((cast(quantity#746 as decimal(10,0)) * list_price#747)) AS average_sales#752]\n            :     +- Union false, false\n            :        :- Project [ss_quantity#886 AS quantity#746, ss_list_price#888 AS list_price#747]\n            :        :  +- Join Inner, (ss_sold_date_sk#899 = d_date_sk#900)\n            :        :     :- Project [ss_quantity#886, ss_list_price#888, ss_sold_date_sk#899]\n            :        :     :  +- Filter (isnotnull(ss_sold_date_sk#899) AND dynamicpruning#1288 [ss_sold_date_sk#899])\n            :        :     :     :  +- Project [d_date_sk#900]\n            :        :     :     :     +- Filter ((isnotnull(d_year#906) AND ((d_year#906 >= 1998) AND (d_year#906 <= 2000))) AND isnotnull(d_date_sk#900))\n            :        :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#900,d_date_id#901,d_date#902,d_month_seq#903,d_week_seq#904,d_quarter_seq#905,d_year#906,d_dow#907,d_moy#908,d_dom#909,d_qoy#910,d_fy_year#911,d_fy_quarter_seq#912,d_fy_week_seq#913,d_day_name#914,d_quarter_name#915,d_holiday#916,d_weekend#917,d_following_holiday#918,d_first_dom#919,d_last_dom#920,d_same_day_ly#921,d_same_day_lq#922,d_current_day#923,... 4 more fields] parquet\n            :        :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#877,ss_item_sk#878,ss_customer_sk#879,ss_cdemo_sk#880,ss_hdemo_sk#881,ss_addr_sk#882,ss_store_sk#883,ss_promo_sk#884,ss_ticket_number#885L,ss_quantity#886,ss_wholesale_cost#887,ss_list_price#888,ss_sales_price#889,ss_ext_discount_amt#890,ss_ext_sales_price#891,ss_ext_wholesale_cost#892,ss_ext_list_price#893,ss_ext_tax#894,ss_coupon_amt#895,ss_net_paid#896,ss_net_paid_inc_tax#897,ss_net_profit#898,ss_sold_date_sk#899] parquet\n            :        :     +- Project [d_date_sk#900]\n            :        :        +- Filter ((isnotnull(d_year#906) AND ((d_year#906 >= 1998) AND (d_year#906 <= 2000))) AND isnotnull(d_date_sk#900))\n            :        :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#900,d_date_id#901,d_date#902,d_month_seq#903,d_week_seq#904,d_quarter_seq#905,d_year#906,d_dow#907,d_moy#908,d_dom#909,d_qoy#910,d_fy_year#911,d_fy_quarter_seq#912,d_fy_week_seq#913,d_day_name#914,d_quarter_name#915,d_holiday#916,d_weekend#917,d_following_holiday#918,d_first_dom#919,d_last_dom#920,d_same_day_ly#921,d_same_day_lq#922,d_current_day#923,... 4 more fields] parquet\n            :        :- Project [cs_quantity#945 AS quantity#748, cs_list_price#947 AS list_price#749]\n            :        :  +- Join Inner, (cs_sold_date_sk#961 = d_date_sk#962)\n            :        :     :- Project [cs_quantity#945, cs_list_price#947, cs_sold_date_sk#961]\n            :        :     :  +- Filter (isnotnull(cs_sold_date_sk#961) AND dynamicpruning#1289 [cs_sold_date_sk#961])\n            :        :     :     :  +- Project [d_date_sk#962]\n            :        :     :     :     +- Filter ((isnotnull(d_year#968) AND ((d_year#968 >= 1998) AND (d_year#968 <= 2000))) AND isnotnull(d_date_sk#962))\n            :        :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#962,d_date_id#963,d_date#964,d_month_seq#965,d_week_seq#966,d_quarter_seq#967,d_year#968,d_dow#969,d_moy#970,d_dom#971,d_qoy#972,d_fy_year#973,d_fy_quarter_seq#974,d_fy_week_seq#975,d_day_name#976,d_quarter_name#977,d_holiday#978,d_weekend#979,d_following_holiday#980,d_first_dom#981,d_last_dom#982,d_same_day_ly#983,d_same_day_lq#984,d_current_day#985,... 4 more fields] parquet\n            :        :     :     +- Relation spark_catalog.tpcds_100.catalog_sales[cs_sold_time_sk#928,cs_ship_date_sk#929,cs_bill_customer_sk#930,cs_bill_cdemo_sk#931,cs_bill_hdemo_sk#932,cs_bill_addr_sk#933,cs_ship_customer_sk#934,cs_ship_cdemo_sk#935,cs_ship_hdemo_sk#936,cs_ship_addr_sk#937,cs_call_center_sk#938,cs_catalog_page_sk#939,cs_ship_mode_sk#940,cs_warehouse_sk#941,cs_item_sk#942,cs_promo_sk#943,cs_order_number#944L,cs_quantity#945,cs_wholesale_cost#946,cs_list_price#947,cs_sales_price#948,cs_ext_discount_amt#949,cs_ext_sales_price#950,cs_ext_wholesale_cost#951,... 10 more fields] parquet\n            :        :     +- Project [d_date_sk#962]\n            :        :        +- Filter ((isnotnull(d_year#968) AND ((d_year#968 >= 1998) AND (d_year#968 <= 2000))) AND isnotnull(d_date_sk#962))\n            :        :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#962,d_date_id#963,d_date#964,d_month_seq#965,d_week_seq#966,d_quarter_seq#967,d_year#968,d_dow#969,d_moy#970,d_dom#971,d_qoy#972,d_fy_year#973,d_fy_quarter_seq#974,d_fy_week_seq#975,d_day_name#976,d_quarter_name#977,d_holiday#978,d_weekend#979,d_following_holiday#980,d_first_dom#981,d_last_dom#982,d_same_day_ly#983,d_same_day_lq#984,d_current_day#985,... 4 more fields] parquet\n            :        +- Project [ws_quantity#1007 AS quantity#750, ws_list_price#1009 AS list_price#751]\n            :           +- Join Inner, (ws_sold_date_sk#1023 = d_date_sk#1024)\n            :              :- Project [ws_quantity#1007, ws_list_price#1009, ws_sold_date_sk#1023]\n            :              :  +- Filter (isnotnull(ws_sold_date_sk#1023) AND dynamicpruning#1290 [ws_sold_date_sk#1023])\n            :              :     :  +- Project [d_date_sk#1024]\n            :              :     :     +- Filter ((isnotnull(d_year#1030) AND ((d_year#1030 >= 1998) AND (d_year#1030 <= 2000))) AND isnotnull(d_date_sk#1024))\n            :              :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#1024,d_date_id#1025,d_date#1026,d_month_seq#1027,d_week_seq#1028,d_quarter_seq#1029,d_year#1030,d_dow#1031,d_moy#1032,d_dom#1033,d_qoy#1034,d_fy_year#1035,d_fy_quarter_seq#1036,d_fy_week_seq#1037,d_day_name#1038,d_quarter_name#1039,d_holiday#1040,d_weekend#1041,d_following_holiday#1042,d_first_dom#1043,d_last_dom#1044,d_same_day_ly#1045,d_same_day_lq#1046,d_current_day#1047,... 4 more fields] parquet\n            :              :     +- Relation spark_catalog.tpcds_100.web_sales[ws_sold_time_sk#990,ws_ship_date_sk#991,ws_item_sk#992,ws_bill_customer_sk#993,ws_bill_cdemo_sk#994,ws_bill_hdemo_sk#995,ws_bill_addr_sk#996,ws_ship_customer_sk#997,ws_ship_cdemo_sk#998,ws_ship_hdemo_sk#999,ws_ship_addr_sk#1000,ws_web_page_sk#1001,ws_web_site_sk#1002,ws_ship_mode_sk#1003,ws_warehouse_sk#1004,ws_promo_sk#1005,ws_order_number#1006L,ws_quantity#1007,ws_wholesale_cost#1008,ws_list_price#1009,ws_sales_price#1010,ws_ext_discount_amt#1011,ws_ext_sales_price#1012,ws_ext_wholesale_cost#1013,... 10 more fields] parquet\n            :              +- Project [d_date_sk#1024]\n            :                 +- Filter ((isnotnull(d_year#1030) AND ((d_year#1030 >= 1998) AND (d_year#1030 <= 2000))) AND isnotnull(d_date_sk#1024))\n            :                    +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#1024,d_date_id#1025,d_date#1026,d_month_seq#1027,d_week_seq#1028,d_quarter_seq#1029,d_year#1030,d_dow#1031,d_moy#1032,d_dom#1033,d_qoy#1034,d_fy_year#1035,d_fy_quarter_seq#1036,d_fy_week_seq#1037,d_day_name#1038,d_quarter_name#1039,d_holiday#1040,d_weekend#1041,d_following_holiday#1042,d_first_dom#1043,d_last_dom#1044,d_same_day_ly#1045,d_same_day_lq#1046,d_current_day#1047,... 4 more fields] parquet\n            +- Aggregate [i_brand_id#1155, i_class_id#1157, i_category_id#1159], [store AS channel#736, i_brand_id#1155, i_class_id#1157, i_category_id#1159, sum((cast(ss_quantity#1134 as decimal(10,0)) * ss_list_price#1136)) AS sales#737, count(1) AS number_sales#738L]\n               +- Project [ss_quantity#1134, ss_list_price#1136, i_brand_id#1155, i_class_id#1157, i_category_id#1159]\n                  +- Join Inner, (ss_item_sk#1126 = i_item_sk#1148)\n                     :- Project [ss_item_sk#1126, ss_quantity#1134, ss_list_price#1136]\n                     :  +- Join Inner, (ss_sold_date_sk#1147 = d_date_sk#1170)\n                     :     :- Join LeftSemi, (ss_item_sk#1126 = ss_item_sk#745)\n                     :     :  :- Project [ss_item_sk#1126, ss_quantity#1134, ss_list_price#1136, ss_sold_date_sk#1147]\n                     :     :  :  +- Filter ((isnotnull(ss_item_sk#1126) AND isnotnull(ss_sold_date_sk#1147)) AND dynamicpruning#1310 [ss_sold_date_sk#1147])\n                     :     :  :     :  +- Project [d_date_sk#1170]\n                     :     :  :     :     +- Filter ((isnotnull(d_week_seq#1174) AND (d_week_seq#1174 = scalar-subquery#740 [])) AND isnotnull(d_date_sk#1170))\n                     :     :  :     :        :  +- Project [d_week_seq#1241]\n                     :     :  :     :        :     +- Filter (((isnotnull(d_year#1243) AND isnotnull(d_moy#1245)) AND isnotnull(d_dom#1246)) AND (((d_year#1243 = 1998) AND (d_moy#1245 = 12)) AND (d_dom#1246 = 16)))\n                     :     :  :     :        :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#1237,d_date_id#1238,d_date#1239,d_month_seq#1240,d_week_seq#1241,d_quarter_seq#1242,d_year#1243,d_dow#1244,d_moy#1245,d_dom#1246,d_qoy#1247,d_fy_year#1248,d_fy_quarter_seq#1249,d_fy_week_seq#1250,d_day_name#1251,d_quarter_name#1252,d_holiday#1253,d_weekend#1254,d_following_holiday#1255,d_first_dom#1256,d_last_dom#1257,d_same_day_ly#1258,d_same_day_lq#1259,d_current_day#1260,... 4 more fields] parquet\n                     :     :  :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#1170,d_date_id#1171,d_date#1172,d_month_seq#1173,d_week_seq#1174,d_quarter_seq#1175,d_year#1176,d_dow#1177,d_moy#1178,d_dom#1179,d_qoy#1180,d_fy_year#1181,d_fy_quarter_seq#1182,d_fy_week_seq#1183,d_day_name#1184,d_quarter_name#1185,d_holiday#1186,d_weekend#1187,d_following_holiday#1188,d_first_dom#1189,d_last_dom#1190,d_same_day_ly#1191,d_same_day_lq#1192,d_current_day#1193,... 4 more fields] parquet\n                     :     :  :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#1125,ss_item_sk#1126,ss_customer_sk#1127,ss_cdemo_sk#1128,ss_hdemo_sk#1129,ss_addr_sk#1130,ss_store_sk#1131,ss_promo_sk#1132,ss_ticket_number#1133L,ss_quantity#1134,ss_wholesale_cost#1135,ss_list_price#1136,ss_sales_price#1137,ss_ext_discount_amt#1138,ss_ext_sales_price#1139,ss_ext_wholesale_cost#1140,ss_ext_list_price#1141,ss_ext_tax#1142,ss_coupon_amt#1143,ss_net_paid#1144,ss_net_paid_inc_tax#1145,ss_net_profit#1146,ss_sold_date_sk#1147] parquet\n                     :     :  +- Project [i_item_sk#25 AS ss_item_sk#745]\n                     :     :     +- Join Inner, (((i_brand_id#32 = brand_id#742) AND (i_class_id#34 = class_id#743)) AND (i_category_id#36 = category_id#744))\n                     :     :        :- Project [i_item_sk#25, i_brand_id#32, i_class_id#34, i_category_id#36]\n                     :     :        :  +- Filter ((isnotnull(i_brand_id#32) AND isnotnull(i_class_id#34)) AND isnotnull(i_category_id#36))\n                     :     :        :     +- Relation spark_catalog.tpcds_100.item[i_item_sk#25,i_item_id#26,i_rec_start_date#27,i_rec_end_date#28,i_item_desc#29,i_current_price#30,i_wholesale_cost#31,i_brand_id#32,i_brand#33,i_class_id#34,i_class#35,i_category_id#36,i_category#37,i_manufact_id#38,i_manufact#39,i_size#40,i_formulation#41,i_color#42,i_units#43,i_container#44,i_manager_id#45,i_product_name#46] parquet\n                     :     :        +- Join LeftSemi, (((brand_id#742 <=> i_brand_id#834) AND (class_id#743 <=> i_class_id#836)) AND (category_id#744 <=> i_category_id#838))\n                     :     :           :- Aggregate [brand_id#742, class_id#743, category_id#744], [brand_id#742, class_id#743, category_id#744]\n                     :     :           :  +- Project [i_brand_id#762 AS brand_id#742, i_class_id#764 AS class_id#743, i_category_id#766 AS category_id#744]\n                     :     :           :     +- Join Inner, (ss_item_sk#48 = i_item_sk#755)\n                     :     :           :        :- Project [ss_item_sk#48]\n                     :     :           :        :  +- Join Inner, (ss_sold_date_sk#69 = d_date_sk#70)\n                     :     :           :        :     :- Project [ss_item_sk#48, ss_sold_date_sk#69]\n                     :     :           :        :     :  +- Filter ((isnotnull(ss_item_sk#48) AND isnotnull(ss_sold_date_sk#69)) AND dynamicpruning#1297 [ss_sold_date_sk#69])\n                     :     :           :        :     :     :  +- Project [d_date_sk#70]\n                     :     :           :        :     :     :     +- Filter ((isnotnull(d_year#76) AND ((d_year#76 >= 1998) AND (d_year#76 <= 2000))) AND isnotnull(d_date_sk#70))\n                     :     :           :        :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#70,d_date_id#71,d_date#72,d_month_seq#73,d_week_seq#74,d_quarter_seq#75,d_year#76,d_dow#77,d_moy#78,d_dom#79,d_qoy#80,d_fy_year#81,d_fy_quarter_seq#82,d_fy_week_seq#83,d_day_name#84,d_quarter_name#85,d_holiday#86,d_weekend#87,d_following_holiday#88,d_first_dom#89,d_last_dom#90,d_same_day_ly#91,d_same_day_lq#92,d_current_day#93,... 4 more fields] parquet\n                     :     :           :        :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#47,ss_item_sk#48,ss_customer_sk#49,ss_cdemo_sk#50,ss_hdemo_sk#51,ss_addr_sk#52,ss_store_sk#53,ss_promo_sk#54,ss_ticket_number#55L,ss_quantity#56,ss_wholesale_cost#57,ss_list_price#58,ss_sales_price#59,ss_ext_discount_amt#60,ss_ext_sales_price#61,ss_ext_wholesale_cost#62,ss_ext_list_price#63,ss_ext_tax#64,ss_coupon_amt#65,ss_net_paid#66,ss_net_paid_inc_tax#67,ss_net_profit#68,ss_sold_date_sk#69] parquet\n                     :     :           :        :     +- LogicalQueryStage Project [d_date_sk#70], BroadcastQueryStage 23\n                     :     :           :        +- Join LeftSemi, (((i_brand_id#762 <=> i_brand_id#784) AND (i_class_id#764 <=> i_class_id#786)) AND (i_category_id#766 <=> i_category_id#788))\n                     :     :           :           :- LogicalQueryStage Project [i_item_sk#755, i_brand_id#762, i_class_id#764, i_category_id#766], ShuffleQueryStage 25\n                     :     :           :           +- LogicalQueryStage Project [i_brand_id#784, i_class_id#786, i_category_id#788], ShuffleQueryStage 54\n                     :     :           +- LogicalQueryStage Project [i_brand_id#834, i_class_id#836, i_category_id#838], ShuffleQueryStage 56\n                     :     +- LogicalQueryStage Project [d_date_sk#1170], BroadcastQueryStage 34\n                     +- Join LeftSemi, (i_item_sk#1148 = ss_item_sk#745)\n                        :- Project [i_item_sk#1148, i_brand_id#1155, i_class_id#1157, i_category_id#1159]\n                        :  +- Filter (((isnotnull(i_item_sk#1148) AND isnotnull(i_brand_id#1155)) AND isnotnull(i_class_id#1157)) AND isnotnull(i_category_id#1159))\n                        :     +- Relation spark_catalog.tpcds_100.item[i_item_sk#1148,i_item_id#1149,i_rec_start_date#1150,i_rec_end_date#1151,i_item_desc#1152,i_current_price#1153,i_wholesale_cost#1154,i_brand_id#1155,i_brand#1156,i_class_id#1157,i_class#1158,i_category_id#1159,i_category#1160,i_manufact_id#1161,i_manufact#1162,i_size#1163,i_formulation#1164,i_color#1165,i_units#1166,i_container#1167,i_manager_id#1168,i_product_name#1169] parquet\n                        +- Project [i_item_sk#25 AS ss_item_sk#745]\n                           +- Join Inner, (((i_brand_id#32 = brand_id#742) AND (i_class_id#34 = class_id#743)) AND (i_category_id#36 = category_id#744))\n                              :- Project [i_item_sk#25, i_brand_id#32, i_class_id#34, i_category_id#36]\n                              :  +- Filter ((isnotnull(i_brand_id#32) AND isnotnull(i_class_id#34)) AND isnotnull(i_category_id#36))\n                              :     +- Relation spark_catalog.tpcds_100.item[i_item_sk#25,i_item_id#26,i_rec_start_date#27,i_rec_end_date#28,i_item_desc#29,i_current_price#30,i_wholesale_cost#31,i_brand_id#32,i_brand#33,i_class_id#34,i_class#35,i_category_id#36,i_category#37,i_manufact_id#38,i_manufact#39,i_size#40,i_formulation#41,i_color#42,i_units#43,i_container#44,i_manager_id#45,i_product_name#46] parquet\n                              +- Join LeftSemi, (((brand_id#742 <=> i_brand_id#834) AND (class_id#743 <=> i_class_id#836)) AND (category_id#744 <=> i_category_id#838))\n                                 :- Aggregate [brand_id#742, class_id#743, category_id#744], [brand_id#742, class_id#743, category_id#744]\n                                 :  +- Project [i_brand_id#762 AS brand_id#742, i_class_id#764 AS class_id#743, i_category_id#766 AS category_id#744]\n                                 :     +- Join Inner, (ss_item_sk#48 = i_item_sk#755)\n                                 :        :- Project [ss_item_sk#48]\n                                 :        :  +- Join Inner, (ss_sold_date_sk#69 = d_date_sk#70)\n                                 :        :     :- Project [ss_item_sk#48, ss_sold_date_sk#69]\n                                 :        :     :  +- Filter ((isnotnull(ss_item_sk#48) AND isnotnull(ss_sold_date_sk#69)) AND dynamicpruning#1297 [ss_sold_date_sk#69])\n                                 :        :     :     :  +- Project [d_date_sk#70]\n                                 :        :     :     :     +- Filter ((isnotnull(d_year#76) AND ((d_year#76 >= 1998) AND (d_year#76 <= 2000))) AND isnotnull(d_date_sk#70))\n                                 :        :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#70,d_date_id#71,d_date#72,d_month_seq#73,d_week_seq#74,d_quarter_seq#75,d_year#76,d_dow#77,d_moy#78,d_dom#79,d_qoy#80,d_fy_year#81,d_fy_quarter_seq#82,d_fy_week_seq#83,d_day_name#84,d_quarter_name#85,d_holiday#86,d_weekend#87,d_following_holiday#88,d_first_dom#89,d_last_dom#90,d_same_day_ly#91,d_same_day_lq#92,d_current_day#93,... 4 more fields] parquet\n                                 :        :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#47,ss_item_sk#48,ss_customer_sk#49,ss_cdemo_sk#50,ss_hdemo_sk#51,ss_addr_sk#52,ss_store_sk#53,ss_promo_sk#54,ss_ticket_number#55L,ss_quantity#56,ss_wholesale_cost#57,ss_list_price#58,ss_sales_price#59,ss_ext_discount_amt#60,ss_ext_sales_price#61,ss_ext_wholesale_cost#62,ss_ext_list_price#63,ss_ext_tax#64,ss_coupon_amt#65,ss_net_paid#66,ss_net_paid_inc_tax#67,ss_net_profit#68,ss_sold_date_sk#69] parquet\n                                 :        :     +- LogicalQueryStage Project [d_date_sk#70], BroadcastQueryStage 36\n                                 :        +- Join LeftSemi, (((i_brand_id#762 <=> i_brand_id#784) AND (i_class_id#764 <=> i_class_id#786)) AND (i_category_id#766 <=> i_category_id#788))\n                                 :           :- LogicalQueryStage Project [i_item_sk#755, i_brand_id#762, i_class_id#764, i_category_id#766], ShuffleQueryStage 38\n                                 :           +- LogicalQueryStage Project [i_brand_id#784, i_class_id#786, i_category_id#788], ShuffleQueryStage 58\n                                 +- LogicalQueryStage Project [i_brand_id#834, i_class_id#836, i_category_id#838], ShuffleQueryStage 60\n"
      },
      "IM" : {
        "inputSizeInBytes" : 268430682896,
        "inputRowCount" : 2400283124
      },
      "PD" : {
        "2" : [ 177962, 455930, 415323, 324034, 407180, 578113, 259800, 210766, 416594, 365097, 722932, 430581, 737269, 1031975, 1514187, 472059, 101032, 459828, 347329, 114427, 94836, 1079666, 1326142, 383040, 175045, 486302, 702614, 800093, 2890585, 749715, 100494, 720165, 530316, 795278, 705228, 310364, 730188, 287903, 255104, 608403, 493741, 197579, 98211, 1196389, 851488, 408258, 740122, 162471, 235750, 429841, 280551, 434095, 986907, 459535, 521411, 444089, 345779, 644089, 1511511, 259033, 857504, 440487, 655905, 522602, 1260769, 704242, 355941, 572333, 482841, 779237, 447588, 350687, 323737, 1316494, 306270, 639573, 819553, 701140, 669174, 780010, 675042, 476951, 636674, 322479, 897583, 280582, 223958, 573984, 561763, 119797, 430493, 121994, 311747, 117433, 377765, 318296, 740667, 431248, 547706, 508009, 414691, 367457, 723737, 442906, 583473, 347572, 1269089, 287286, 380605, 786487, 704711, 1465276, 758753, 673171, 160802, 291861, 864733, 186361, 546087, 1459274, 1695574, 115478, 421893, 386121, 312819, 164972, 1072990, 214957, 152503, 420284, 300056, 868375, 940076, 349342, 205208, 928322, 195265, 461329, 359228, 419971, 560162, 326400, 702646, 957888, 320780, 321516, 414771, 187523, 870857, 1055493, 342091, 506784, 282728, 1045719, 262333, 128426, 495313, 750638, 98964, 1366471, 574893, 319167, 147634, 1547306, 890810, 507583, 261595, 408664, 943050, 676186, 857526, 578999, 449016, 240998, 433603, 682640, 120305, 912938, 1129760, 525413, 547769, 609464, 611740, 324072, 206504, 2926245, 295669, 919509, 366206, 535787, 794086, 708510, 622156, 383847, 1071951, 677651, 914990, 923202, 596798, 344327 ],
        "0" : [ 5844, 9412, 7071, 5313, 7071, 8556, 7071, 5844, 7071, 5313, 9412, 7071, 9412, 20176, 20176, 7778, 5844, 7778, 6428, 4830, 4390, 18341, 20176, 7071, 5844, 8556, 16674, 10353, 32493, 9412, 3628, 16674, 9412, 8556, 9412, 6428, 8556, 6428, 5844, 16674, 7778, 5313, 4830, 22193, 10353, 6428, 18341, 5844, 7071, 7071, 5844, 7778, 10353, 7071, 7071, 6428, 6428, 9412, 20176, 6428, 16674, 7071, 10353, 8556, 22193, 16674, 6428, 9412, 7778, 9412, 6428, 5844, 6428, 18341, 6428, 9412, 11388, 10353, 20176, 10353, 9412, 6428, 8556, 5844, 9412, 5844, 5844, 18341, 8556, 4390, 13780, 4830, 7071, 4830, 7071, 6428, 20176, 7071, 7778, 7778, 5844, 7071, 11388, 7778, 8556, 6428, 18341, 6428, 6428, 10353, 8556, 22193, 9412, 7778, 5844, 6428, 20176, 5313, 7071, 20176, 24413, 4390, 7071, 7071, 7071, 6428, 20176, 6428, 5844, 10353, 5844, 10353, 15158, 7071, 5844, 20176, 4830, 7778, 5844, 8556, 9412, 7071, 9412, 11388, 5313, 6428, 13780, 4830, 16674, 11388, 6428, 15158, 6428, 20176, 6428, 5313, 7778, 8556, 4390, 22193, 8556, 7778, 5844, 22193, 9412, 7778, 6428, 6428, 11388, 9412, 9412, 7778, 7778, 5313, 6428, 9412, 4830, 11388, 18341, 7778, 7778, 8556, 8556, 6428, 5313, 35743, 6428, 20176, 7778, 10353, 9412, 11388, 20176, 6428, 22193, 10353, 10353, 11388, 7778, 6428 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 4,
        "FinishedTasksNum" : 80,
        "FinishedTasksTotalTimeInMs" : 116849.0,
        "FinishedTasksDistributionInMs" : [ 130.0, 783.0, 856.0, 1195.0, 8584.0 ]
      },
      "StartTimeInMs" : 1702226642961,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 68537,
        "IOBytes" : {
          "Total" : 3121844247,
          "Details" : {
            "IR" : 2545366284,
            "IW" : 0,
            "SR" : 344431542,
            "SW" : 232046421
          }
        }
      }
    },
    "10" : {
      "LQP" : {
        "operators" : {
          "45" : {
            "sign" : -2071970095,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 353748,
            "rowCount" : 1438,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(d_year#906) AND ((d_year#906 >= 1998) AND (d_year#906 <= 2000))) AND isnotnull(d_date_sk#900)) "
          },
          "34" : {
            "sign" : -111220512,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 16332372468,
            "rowCount" : 453677013,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (((i_brand_id#32 = brand_id#742) AND (i_class_id#34 = class_id#743)) AND (i_category_id#36 = category_id#744)) "
          },
          "67" : {
            "sign" : 609930370,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 46207619304,
            "rowCount" : 1925317471,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#1126, ss_quantity#1134, ss_list_price#1136] "
          },
          "12" : {
            "sign" : 571393713,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(ss_item_sk#1053) AND isnotnull(ss_sold_date_sk#1074)) AND dynamicpruning#1303 [ss_sold_date_sk#1074]) "
          },
          "66" : {
            "sign" : -400959281,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 11490316840,
            "rowCount" : 287257921,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_item_sk#1126 = i_item_sk#1148) "
          },
          "89" : {
            "sign" : -111219613,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 16332372468,
            "rowCount" : 453677013,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (((i_brand_id#32 = brand_id#742) AND (i_class_id#34 = class_id#743)) AND (i_category_id#36 = category_id#744)) "
          },
          "51" : {
            "sign" : -70077436,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 29800787536,
            "rowCount" : 143273017,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [cs_sold_time_sk#928, cs_ship_date_sk#929, cs_bill_customer_sk#930, cs_bill_cdemo_sk#931, cs_bill_hdemo_sk#932, cs_bill_addr_sk#933, cs_ship_customer_sk#934, cs_ship_cdemo_sk#935, cs_ship_hdemo_sk#936, cs_ship_addr_sk#937, cs_call_center_sk#938, cs_catalog_page_sk#939, cs_ship_mode_sk#940, cs_warehouse_sk#941, cs_item_sk#942, cs_promo_sk#943, cs_order_number#944L, cs_quantity#945, cs_wholesale_cost#946, cs_list_price#947, cs_sales_price#948, cs_ext_discount_amt#949, cs_ext_sales_price#950, cs_ext_wholesale_cost#951, ... 10 more fields], `spark_catalog`.`tpcds_100`.`catalog_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "84" : {
            "sign" : 1244416893,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 4860984,
            "rowCount" : 202541,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (i_item_sk#1148 = ss_item_sk#745) "
          },
          "8" : {
            "sign" : 2120175417,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 46207619304,
            "rowCount" : 1925317471,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#1053, ss_quantity#1061, ss_list_price#1063] "
          },
          "73" : {
            "sign" : 1096234976,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 876588,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#1170] "
          },
          "78" : {
            "sign" : 813769211,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#1237, d_date_id#1238, d_date#1239, d_month_seq#1240, d_week_seq#1241, d_quarter_seq#1242, d_year#1243, d_dow#1244, d_moy#1245, d_dom#1246, d_qoy#1247, d_fy_year#1248, d_fy_quarter_seq#1249, d_fy_week_seq#1250, d_day_name#1251, d_quarter_name#1252, d_holiday#1253, d_weekend#1254, d_following_holiday#1255, d_first_dom#1256, d_last_dom#1257, d_same_day_ly#1258, d_same_day_lq#1259, d_current_day#1260, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "19" : {
            "sign" : -1755539215,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#1209, d_date_id#1210, d_date#1211, d_month_seq#1212, d_week_seq#1213, d_quarter_seq#1214, d_year#1215, d_dow#1216, d_moy#1217, d_dom#1218, d_qoy#1219, d_fy_year#1220, d_fy_quarter_seq#1221, d_fy_week_seq#1222, d_day_name#1223, d_quarter_name#1224, d_holiday#1225, d_weekend#1226, d_following_holiday#1227, d_first_dom#1228, d_last_dom#1229, d_same_day_ly#1230, d_same_day_lq#1231, d_current_day#1232, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "23" : {
            "sign" : -1756391561,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 86282466,
            "rowCount" : 202541,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(i_brand_id#32) AND isnotnull(i_class_id#34)) AND isnotnull(i_category_id#36)) "
          },
          "62" : {
            "sign" : -502763688,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#1024, d_date_id#1025, d_date#1026, d_month_seq#1027, d_week_seq#1028, d_quarter_seq#1029, d_year#1030, d_dow#1031, d_moy#1032, d_dom#1033, d_qoy#1034, d_fy_year#1035, d_fy_quarter_seq#1036, d_fy_week_seq#1037, d_day_name#1038, d_quarter_name#1039, d_holiday#1040, d_weekend#1041, d_following_holiday#1042, d_first_dom#1043, d_last_dom#1044, d_same_day_ly#1045, d_same_day_lq#1046, d_current_day#1047, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "4" : {
            "sign" : 1843205480,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 10408960,
            "rowCount" : 136960,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(sales#731) AND (cast(sales#731 as decimal(32,6)) > cast(scalar-subquery#735 [] as decimal(32,6)))) "
          },
          "88" : {
            "sign" : -877530092,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 5444124156,
            "rowCount" : 453677013,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_item_sk#25 AS ss_item_sk#745] "
          },
          "77" : {
            "sign" : 1734827371,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 492,
            "rowCount" : 2,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(d_year#1243) AND isnotnull(d_moy#1245)) AND isnotnull(d_dom#1246)) AND (((d_year#1243 = 1998) AND (d_moy#1245 = 12)) AND (d_dom#1246 = 16))) "
          },
          "40" : {
            "sign" : -1804794945,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 7435136380,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#899 = d_date_sk#900) "
          },
          "15" : {
            "sign" : 1866012666,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(d_week_seq#1101) AND (d_week_seq#1101 = scalar-subquery#734 [])) AND isnotnull(d_date_sk#1097)) "
          },
          "11" : {
            "sign" : 1222696026,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 7701269884,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#1053, ss_quantity#1061, ss_list_price#1063, ss_sold_date_sk#1074] "
          },
          "90" : {
            "sign" : 674494984,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 2739200,
            "rowCount" : 136960,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (((brand_id#742 <=> i_brand_id#834) AND (class_id#743 <=> i_class_id#836)) AND (category_id#744 <=> i_category_id#838)) "
          },
          "9" : {
            "sign" : 2077626158,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 61610159072,
            "rowCount" : 1925317471,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#1074 = d_date_sk#1097) "
          },
          "44" : {
            "sign" : 2019201408,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 17256,
            "rowCount" : 1438,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#900] "
          },
          "33" : {
            "sign" : -877530991,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 5444124156,
            "rowCount" : 453677013,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_item_sk#25 AS ss_item_sk#745] "
          },
          "22" : {
            "sign" : 2089743597,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 4860984,
            "rowCount" : 202541,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_item_sk#25, i_brand_id#32, i_class_id#34, i_category_id#36] "
          },
          "56" : {
            "sign" : 1503367439,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 1945876940,
            "rowCount" : 69495605,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ws_sold_date_sk#1023 = d_date_sk#1024) "
          },
          "55" : {
            "sign" : 17831375,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 1389912100,
            "rowCount" : 69495605,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_quantity#1007 AS quantity#750, ws_list_price#1009 AS list_price#751] "
          },
          "26" : {
            "sign" : 2085872115,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 2739200,
            "rowCount" : 136960,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [brand_id#742, class_id#743, category_id#744], [brand_id#742, class_id#743, category_id#744], HashAggregate(keys=[brand_id#742, class_id#743, category_id#744], functions=[]) "
          },
          "50" : {
            "sign" : 1500374164,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 29800787536,
            "rowCount" : 143273017,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(cs_sold_date_sk#961) AND dynamicpruning#1289 [cs_sold_date_sk#961]) "
          },
          "37" : {
            "sign" : -1809172647,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 24,
            "rowCount" : 1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [avg((cast(quantity#746 as decimal(10,0)) * list_price#747)) AS average_sales#752] "
          },
          "68" : {
            "sign" : 1961765640,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 61610159072,
            "rowCount" : 1925317471,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#1147 = d_date_sk#1170) "
          },
          "61" : {
            "sign" : -626435234,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 353748,
            "rowCount" : 1438,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(d_year#1030) AND ((d_year#1030 >= 1998) AND (d_year#1030 <= 2000))) AND isnotnull(d_date_sk#1024)) "
          },
          "13" : {
            "sign" : 913239237,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#1052, ss_item_sk#1053, ss_customer_sk#1054, ss_cdemo_sk#1055, ss_hdemo_sk#1056, ss_addr_sk#1057, ss_store_sk#1058, ss_promo_sk#1059, ss_ticket_number#1060L, ss_quantity#1061, ss_wholesale_cost#1062, ss_list_price#1063, ss_sales_price#1064, ss_ext_discount_amt#1065, ss_ext_sales_price#1066, ss_ext_wholesale_cost#1067, ss_ext_list_price#1068, ss_ext_tax#1069, ss_coupon_amt#1070, ss_net_paid#1071, ss_net_paid_inc_tax#1072, ss_net_profit#1073, ss_sold_date_sk#1074], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "46" : {
            "sign" : -820074406,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#900, d_date_id#901, d_date#902, d_month_seq#903, d_week_seq#904, d_quarter_seq#905, d_year#906, d_dow#907, d_moy#908, d_dom#909, d_qoy#910, d_fy_year#911, d_fy_quarter_seq#912, d_fy_week_seq#913, d_day_name#914, d_quarter_name#915, d_holiday#916, d_weekend#917, d_following_holiday#918, d_first_dom#919, d_last_dom#920, d_same_day_ly#921, d_same_day_lq#922, d_current_day#923, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "24" : {
            "sign" : 2096275601,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 86904000,
            "rowCount" : 204000,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [i_item_sk#25, i_item_id#26, i_rec_start_date#27, i_rec_end_date#28, i_item_desc#29, i_current_price#30, i_wholesale_cost#31, i_brand_id#32, i_brand#33, i_class_id#34, i_class#35, i_category_id#36, i_category#37, i_manufact_id#38, i_manufact#39, i_size#40, i_formulation#41, i_color#42, i_units#43, i_container#44, i_manager_id#45, i_product_name#46], `spark_catalog`.`tpcds_100`.`item`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "83" : {
            "sign" : -1902204624,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1048632,
            "rowCount" : 7,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#1170], BroadcastQueryStage 34 "
          },
          "35" : {
            "sign" : 674494085,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 2739200,
            "rowCount" : 136960,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (((brand_id#742 <=> i_brand_id#834) AND (class_id#743 <=> i_class_id#836)) AND (category_id#744 <=> i_category_id#838)) "
          },
          "16" : {
            "sign" : 682718368,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#1097, d_date_id#1098, d_date#1099, d_month_seq#1100, d_week_seq#1101, d_quarter_seq#1102, d_year#1103, d_dow#1104, d_moy#1105, d_dom#1106, d_qoy#1107, d_fy_year#1108, d_fy_quarter_seq#1109, d_fy_week_seq#1110, d_day_name#1111, d_quarter_name#1112, d_holiday#1113, d_weekend#1114, d_following_holiday#1115, d_first_dom#1116, d_last_dom#1117, d_same_day_ly#1118, d_same_day_lq#1119, d_current_day#1120, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "79" : {
            "sign" : -877530867,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 5444124156,
            "rowCount" : 453677013,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_item_sk#25 AS ss_item_sk#745] "
          },
          "5" : {
            "sign" : 921867656,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 10408960,
            "rowCount" : 136960,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [i_brand_id#1082, i_class_id#1084, i_category_id#1086], [store AS channel#730, i_brand_id#1082, i_class_id#1084, i_category_id#1086, sum((cast(ss_quantity#1061 as decimal(10,0)) * ss_list_price#1063)) AS sales#731, count(1) AS number_sales#732L] "
          },
          "72" : {
            "sign" : 1179432008,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#1125, ss_item_sk#1126, ss_customer_sk#1127, ss_cdemo_sk#1128, ss_hdemo_sk#1129, ss_addr_sk#1130, ss_store_sk#1131, ss_promo_sk#1132, ss_ticket_number#1133L, ss_quantity#1134, ss_wholesale_cost#1135, ss_list_price#1136, ss_sales_price#1137, ss_ext_discount_amt#1138, ss_ext_sales_price#1139, ss_ext_wholesale_cost#1140, ss_ext_list_price#1141, ss_ext_tax#1142, ss_coupon_amt#1143, ss_net_paid#1144, ss_net_paid_inc_tax#1145, ss_net_profit#1146, ss_sold_date_sk#1147], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "10" : {
            "sign" : 2018775951,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 7701269884,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (ss_item_sk#1053 = ss_item_sk#745) "
          },
          "59" : {
            "sign" : 1698660872,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 14972593792,
            "rowCount" : 71983624,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ws_sold_time_sk#990, ws_ship_date_sk#991, ws_item_sk#992, ws_bill_customer_sk#993, ws_bill_cdemo_sk#994, ws_bill_hdemo_sk#995, ws_bill_addr_sk#996, ws_ship_customer_sk#997, ws_ship_cdemo_sk#998, ws_ship_hdemo_sk#999, ws_ship_addr_sk#1000, ws_web_page_sk#1001, ws_web_site_sk#1002, ws_ship_mode_sk#1003, ws_warehouse_sk#1004, ws_promo_sk#1005, ws_order_number#1006L, ws_quantity#1007, ws_wholesale_cost#1008, ws_list_price#1009, ws_sales_price#1010, ws_ext_discount_amt#1011, ws_ext_sales_price#1012, ws_ext_wholesale_cost#1013, ... 10 more fields], `spark_catalog`.`tpcds_100`.`web_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "87" : {
            "sign" : -1752719423,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 86904000,
            "rowCount" : 204000,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [i_item_sk#1148, i_item_id#1149, i_rec_start_date#1150, i_rec_end_date#1151, i_item_desc#1152, i_current_price#1153, i_wholesale_cost#1154, i_brand_id#1155, i_brand#1156, i_class_id#1157, i_class#1158, i_category_id#1159, i_category#1160, i_manufact_id#1161, i_manufact#1162, i_size#1163, i_formulation#1164, i_color#1165, i_units#1166, i_container#1167, i_manager_id#1168, i_product_name#1169], `spark_catalog`.`tpcds_100`.`item`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "48" : {
            "sign" : 824386657,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 3878455336,
            "rowCount" : 138516262,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cs_sold_date_sk#961 = d_date_sk#962) "
          },
          "21" : {
            "sign" : -111221287,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 16332372468,
            "rowCount" : 453677013,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (((i_brand_id#32 = brand_id#742) AND (i_class_id#34 = class_id#743)) AND (i_category_id#36 = category_id#744)) "
          },
          "76" : {
            "sign" : -79282860,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 24,
            "rowCount" : 2,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_week_seq#1241] "
          },
          "54" : {
            "sign" : -169490734,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#962, d_date_id#963, d_date#964, d_month_seq#965, d_week_seq#966, d_quarter_seq#967, d_year#968, d_dow#969, d_moy#970, d_dom#971, d_qoy#972, d_fy_year#973, d_fy_quarter_seq#974, d_fy_week_seq#975, d_day_name#976, d_quarter_name#977, d_holiday#978, d_weekend#979, d_following_holiday#980, d_first_dom#981, d_last_dom#982, d_same_day_ly#983, d_same_day_lq#984, d_current_day#985, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "43" : {
            "sign" : -1972788865,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#877, ss_item_sk#878, ss_customer_sk#879, ss_cdemo_sk#880, ss_hdemo_sk#881, ss_addr_sk#882, ss_store_sk#883, ss_promo_sk#884, ss_ticket_number#885L, ss_quantity#886, ss_wholesale_cost#887, ss_list_price#888, ss_sales_price#889, ss_ext_discount_amt#890, ss_ext_sales_price#891, ss_ext_wholesale_cost#892, ss_ext_list_price#893, ss_ext_tax#894, ss_coupon_amt#895, ss_net_paid#896, ss_net_paid_inc_tax#897, ss_net_profit#898, ss_sold_date_sk#899], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "65" : {
            "sign" : 144049429,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 9192253472,
            "rowCount" : 287257921,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_quantity#1134, ss_list_price#1136, i_brand_id#1155, i_class_id#1157, i_category_id#1159] "
          },
          "71" : {
            "sign" : -604473204,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(ss_item_sk#1126) AND isnotnull(ss_sold_date_sk#1147)) AND dynamicpruning#1310 [ss_sold_date_sk#1147]) "
          },
          "57" : {
            "sign" : 49678577,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 1727606976,
            "rowCount" : 71983624,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_quantity#1007, ws_list_price#1009, ws_sold_date_sk#1023] "
          },
          "32" : {
            "sign" : 73332589,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 86904000,
            "rowCount" : 204000,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [i_item_sk#1075, i_item_id#1076, i_rec_start_date#1077, i_rec_end_date#1078, i_item_desc#1079, i_current_price#1080, i_wholesale_cost#1081, i_brand_id#1082, i_brand#1083, i_class_id#1084, i_class#1085, i_category_id#1086, i_category#1087, i_manufact_id#1088, i_manufact#1089, i_size#1090, i_formulation#1091, i_color#1092, i_units#1093, i_container#1094, i_manager_id#1095, i_product_name#1096], `spark_catalog`.`tpcds_100`.`item`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "80" : {
            "sign" : -111220388,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 16332372468,
            "rowCount" : 453677013,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (((i_brand_id#32 = brand_id#742) AND (i_class_id#34 = class_id#743)) AND (i_category_id#36 = category_id#744)) "
          },
          "82" : {
            "sign" : -365670467,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1379777760,
            "rowCount" : 43118055,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_brand_id#834, i_class_id#836, i_category_id#838], ShuffleQueryStage 56 "
          },
          "49" : {
            "sign" : 1942236716,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 3438552408,
            "rowCount" : 143273017,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_quantity#945, cs_list_price#947, cs_sold_date_sk#961] "
          },
          "6" : {
            "sign" : 1118516257,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 9192253472,
            "rowCount" : 287257921,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_quantity#1061, ss_list_price#1063, i_brand_id#1082, i_class_id#1084, i_category_id#1086] "
          },
          "36" : {
            "sign" : -365670591,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1379777760,
            "rowCount" : 43118055,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_brand_id#834, i_class_id#836, i_category_id#838], ShuffleQueryStage 52 "
          },
          "1" : {
            "sign" : -1563674126,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
            "sizeInBytes" : 19722240,
            "rowCount" : 136960,
            "isRuntime" : false,
            "predicate" : " (unknown) LocalLimit Arguments: 100 "
          },
          "39" : {
            "sign" : 869525063,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 5310811700,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_quantity#886 AS quantity#746, ss_list_price#888 AS list_price#747] "
          },
          "17" : {
            "sign" : -2061501032,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 36,
            "rowCount" : 3,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_week_seq#1213] "
          },
          "25" : {
            "sign" : 674493310,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 2739200,
            "rowCount" : 136960,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (((brand_id#742 <=> i_brand_id#834) AND (class_id#743 <=> i_class_id#836)) AND (category_id#744 <=> i_category_id#838)) "
          },
          "60" : {
            "sign" : -1100969675,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 17256,
            "rowCount" : 1438,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#1024] "
          },
          "14" : {
            "sign" : 707519831,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 876588,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#1097] "
          },
          "47" : {
            "sign" : 825651901,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 2770325240,
            "rowCount" : 138516262,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_quantity#945 AS quantity#748, cs_list_price#947 AS list_price#749] "
          },
          "31" : {
            "sign" : 579430964,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 86282466,
            "rowCount" : 202541,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(i_item_sk#1075) AND isnotnull(i_brand_id#1082)) AND isnotnull(i_class_id#1084)) AND isnotnull(i_category_id#1086)) "
          },
          "69" : {
            "sign" : -1907808118,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 7701269884,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (ss_item_sk#1126 = ss_item_sk#745) "
          },
          "58" : {
            "sign" : -1902449141,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 14972593792,
            "rowCount" : 71983624,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(ws_sold_date_sk#1023) AND dynamicpruning#1290 [ws_sold_date_sk#1023]) "
          },
          "64" : {
            "sign" : -1932050276,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 10408960,
            "rowCount" : 136960,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [i_brand_id#1155, i_class_id#1157, i_category_id#1159], [store AS channel#736, i_brand_id#1155, i_class_id#1157, i_category_id#1159, sum((cast(ss_quantity#1134 as decimal(10,0)) * ss_list_price#1136)) AS sales#737, count(1) AS number_sales#738L] "
          },
          "53" : {
            "sign" : -1695423935,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 353748,
            "rowCount" : 1438,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(d_year#968) AND ((d_year#968 >= 1998) AND (d_year#968 <= 2000))) AND isnotnull(d_date_sk#962)) "
          },
          "42" : {
            "sign" : 1377797290,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(ss_sold_date_sk#899) AND dynamicpruning#1288 [ss_sold_date_sk#899]) "
          },
          "75" : {
            "sign" : 683629544,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#1170, d_date_id#1171, d_date#1172, d_month_seq#1173, d_week_seq#1174, d_quarter_seq#1175, d_year#1176, d_dow#1177, d_moy#1178, d_dom#1179, d_qoy#1180, d_fy_year#1181, d_fy_quarter_seq#1182, d_fy_week_seq#1183, d_day_name#1184, d_quarter_name#1185, d_holiday#1186, d_weekend#1187, d_following_holiday#1188, d_first_dom#1189, d_last_dom#1190, d_same_day_ly#1191, d_same_day_lq#1192, d_current_day#1193, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "0" : {
            "sign" : -2070380729,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
            "sizeInBytes" : 12000,
            "rowCount" : 100,
            "isRuntime" : false,
            "predicate" : " (unknown) GlobalLimit Arguments: 100 "
          },
          "20" : {
            "sign" : -877531766,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 5444124156,
            "rowCount" : 453677013,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_item_sk#25 AS ss_item_sk#745] "
          },
          "27" : {
            "sign" : -365671366,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1379777760,
            "rowCount" : 43118055,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_brand_id#834, i_class_id#836, i_category_id#838], ShuffleQueryStage 48 "
          },
          "70" : {
            "sign" : -303911461,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 7701269884,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#1126, ss_quantity#1134, ss_list_price#1136, ss_sold_date_sk#1147] "
          },
          "2" : {
            "sign" : 49162845,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 19722240,
            "rowCount" : 136960,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [i_brand_id#1082 ASC NULLS FIRST, i_class_id#1084 ASC NULLS FIRST, i_category_id#1086 ASC NULLS FIRST], true "
          },
          "86" : {
            "sign" : -1448453368,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 86282466,
            "rowCount" : 202541,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(i_item_sk#1148) AND isnotnull(i_brand_id#1155)) AND isnotnull(i_class_id#1157)) AND isnotnull(i_category_id#1159)) "
          },
          "38" : {
            "sign" : -1298322270,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Union",
            "sizeInBytes" : 9471049040,
            "rowCount" : 473552452,
            "isRuntime" : false,
            "predicate" : " (unknown) Union Arguments: false, false "
          },
          "81" : {
            "sign" : 674494209,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 2739200,
            "rowCount" : 136960,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (((brand_id#742 <=> i_brand_id#834) AND (class_id#743 <=> i_class_id#836)) AND (category_id#744 <=> i_category_id#838)) "
          },
          "18" : {
            "sign" : -1305353512,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 738,
            "rowCount" : 3,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(d_year#1215) AND isnotnull(d_moy#1217)) AND isnotnull(d_dom#1218)) AND (((d_year#1215 = 1999) AND (d_moy#1217 = 12)) AND (d_dom#1218 = 16))) "
          },
          "30" : {
            "sign" : 1540331732,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 4860984,
            "rowCount" : 202541,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_item_sk#1075, i_brand_id#1082, i_class_id#1084, i_category_id#1086] "
          },
          "7" : {
            "sign" : -1504880320,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 11490316840,
            "rowCount" : 287257921,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_item_sk#1053 = i_item_sk#1075) "
          },
          "29" : {
            "sign" : 1990259437,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 4860984,
            "rowCount" : 202541,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (i_item_sk#1075 = ss_item_sk#745) "
          },
          "41" : {
            "sign" : 1776873494,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 6601088472,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_quantity#886, ss_list_price#888, ss_sold_date_sk#899] "
          },
          "63" : {
            "sign" : -831896269,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 10408960,
            "rowCount" : 136960,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(sales#737) AND (cast(sales#737 as decimal(32,6)) > cast(scalar-subquery#741 [] as decimal(32,6)))) "
          },
          "3" : {
            "sign" : 1243852067,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 19722240,
            "rowCount" : 136960,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (((i_brand_id#1082 = i_brand_id#1155) AND (i_class_id#1084 = i_class_id#1157)) AND (i_category_id#1086 = i_category_id#1159)) "
          },
          "74" : {
            "sign" : -1689547051,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(d_week_seq#1174) AND (d_week_seq#1174 = scalar-subquery#740 [])) AND isnotnull(d_date_sk#1170)) "
          },
          "91" : {
            "sign" : -365669692,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1379777760,
            "rowCount" : 43118055,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_brand_id#834, i_class_id#836, i_category_id#838], ShuffleQueryStage 60 "
          },
          "52" : {
            "sign" : 406087876,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 17256,
            "rowCount" : 1438,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#962] "
          },
          "85" : {
            "sign" : -1062759686,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 4860984,
            "rowCount" : 202541,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_item_sk#1148, i_brand_id#1155, i_class_id#1157, i_category_id#1159] "
          },
          "28" : {
            "sign" : -21562714,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1048632,
            "rowCount" : 7,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#1097], BroadcastQueryStage 9 "
          }
        },
        "links" : [ {
          "fromId" : 13,
          "fromName" : "LogicalRelation",
          "toId" : 12,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 16,
          "fromName" : "LogicalRelation",
          "toId" : 15,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 19,
          "fromName" : "LogicalRelation",
          "toId" : 18,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 18,
          "fromName" : "Filter",
          "toId" : 17,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 17,
          "fromName" : "Project",
          "toId" : 15,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 15,
          "fromName" : "Filter",
          "toId" : 14,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 14,
          "fromName" : "Project",
          "toId" : 12,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 12,
          "fromName" : "Filter",
          "toId" : 11,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "Project",
          "toId" : 10,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 24,
          "fromName" : "LogicalRelation",
          "toId" : 23,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 23,
          "fromName" : "Filter",
          "toId" : 22,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 22,
          "fromName" : "Project",
          "toId" : 21,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 26,
          "fromName" : "LogicalQueryStage",
          "toId" : 25,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 27,
          "fromName" : "LogicalQueryStage",
          "toId" : 25,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 25,
          "fromName" : "Join",
          "toId" : 21,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 21,
          "fromName" : "Join",
          "toId" : 20,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 20,
          "fromName" : "Project",
          "toId" : 10,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "Join",
          "toId" : 9,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 28,
          "fromName" : "LogicalQueryStage",
          "toId" : 9,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "Join",
          "toId" : 8,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "Project",
          "toId" : 7,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 32,
          "fromName" : "LogicalRelation",
          "toId" : 31,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 31,
          "fromName" : "Filter",
          "toId" : 30,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 30,
          "fromName" : "Project",
          "toId" : 29,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 22,
          "fromName" : "Project",
          "toId" : 34,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 26,
          "fromName" : "LogicalQueryStage",
          "toId" : 35,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 36,
          "fromName" : "LogicalQueryStage",
          "toId" : 35,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 35,
          "fromName" : "Join",
          "toId" : 34,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 34,
          "fromName" : "Join",
          "toId" : 33,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 33,
          "fromName" : "Project",
          "toId" : 29,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 29,
          "fromName" : "Join",
          "toId" : 7,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Join",
          "toId" : 6,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Project",
          "toId" : 5,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Aggregate",
          "toId" : 4,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 43,
          "fromName" : "LogicalRelation",
          "toId" : 42,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 46,
          "fromName" : "LogicalRelation",
          "toId" : 45,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 45,
          "fromName" : "Filter",
          "toId" : 44,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 44,
          "fromName" : "Project",
          "toId" : 42,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 42,
          "fromName" : "Filter",
          "toId" : 41,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 41,
          "fromName" : "Project",
          "toId" : 40,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 44,
          "fromName" : "Project",
          "toId" : 40,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 40,
          "fromName" : "Join",
          "toId" : 39,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 39,
          "fromName" : "Project",
          "toId" : 38,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 51,
          "fromName" : "LogicalRelation",
          "toId" : 50,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 54,
          "fromName" : "LogicalRelation",
          "toId" : 53,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 53,
          "fromName" : "Filter",
          "toId" : 52,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 52,
          "fromName" : "Project",
          "toId" : 50,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 50,
          "fromName" : "Filter",
          "toId" : 49,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 49,
          "fromName" : "Project",
          "toId" : 48,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 52,
          "fromName" : "Project",
          "toId" : 48,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 48,
          "fromName" : "Join",
          "toId" : 47,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 47,
          "fromName" : "Project",
          "toId" : 38,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 59,
          "fromName" : "LogicalRelation",
          "toId" : 58,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 62,
          "fromName" : "LogicalRelation",
          "toId" : 61,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 61,
          "fromName" : "Filter",
          "toId" : 60,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 60,
          "fromName" : "Project",
          "toId" : 58,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 58,
          "fromName" : "Filter",
          "toId" : 57,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 57,
          "fromName" : "Project",
          "toId" : 56,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 60,
          "fromName" : "Project",
          "toId" : 56,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 56,
          "fromName" : "Join",
          "toId" : 55,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 55,
          "fromName" : "Project",
          "toId" : 38,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 38,
          "fromName" : "Union",
          "toId" : 37,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 37,
          "fromName" : "Aggregate",
          "toId" : 4,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 4,
          "fromName" : "Filter",
          "toId" : 3,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 72,
          "fromName" : "LogicalRelation",
          "toId" : 71,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 75,
          "fromName" : "LogicalRelation",
          "toId" : 74,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 78,
          "fromName" : "LogicalRelation",
          "toId" : 77,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 77,
          "fromName" : "Filter",
          "toId" : 76,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 76,
          "fromName" : "Project",
          "toId" : 74,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 74,
          "fromName" : "Filter",
          "toId" : 73,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 73,
          "fromName" : "Project",
          "toId" : 71,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 71,
          "fromName" : "Filter",
          "toId" : 70,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 70,
          "fromName" : "Project",
          "toId" : 69,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 22,
          "fromName" : "Project",
          "toId" : 80,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 26,
          "fromName" : "LogicalQueryStage",
          "toId" : 81,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 82,
          "fromName" : "LogicalQueryStage",
          "toId" : 81,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 81,
          "fromName" : "Join",
          "toId" : 80,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 80,
          "fromName" : "Join",
          "toId" : 79,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 79,
          "fromName" : "Project",
          "toId" : 69,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 69,
          "fromName" : "Join",
          "toId" : 68,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 83,
          "fromName" : "LogicalQueryStage",
          "toId" : 68,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 68,
          "fromName" : "Join",
          "toId" : 67,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 67,
          "fromName" : "Project",
          "toId" : 66,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 87,
          "fromName" : "LogicalRelation",
          "toId" : 86,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 86,
          "fromName" : "Filter",
          "toId" : 85,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 85,
          "fromName" : "Project",
          "toId" : 84,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 22,
          "fromName" : "Project",
          "toId" : 89,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 26,
          "fromName" : "LogicalQueryStage",
          "toId" : 90,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 91,
          "fromName" : "LogicalQueryStage",
          "toId" : 90,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 90,
          "fromName" : "Join",
          "toId" : 89,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 89,
          "fromName" : "Join",
          "toId" : 88,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 88,
          "fromName" : "Project",
          "toId" : 84,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 84,
          "fromName" : "Join",
          "toId" : 66,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 66,
          "fromName" : "Join",
          "toId" : 65,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 65,
          "fromName" : "Project",
          "toId" : 64,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 64,
          "fromName" : "Aggregate",
          "toId" : 63,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 37,
          "fromName" : "Aggregate",
          "toId" : 63,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 63,
          "fromName" : "Filter",
          "toId" : 3,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Join",
          "toId" : 2,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "LocalLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "LocalLimit",
          "toId" : 0,
          "toName" : "GlobalLimit",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [i_brand_id#1082 ASC NULLS FIRST, i_class_id#1084 ASC NULLS FIRST, i_category_id#1086 ASC NULLS FIRST], true\n      +- Join Inner, (((i_brand_id#1082 = i_brand_id#1155) AND (i_class_id#1084 = i_class_id#1157)) AND (i_category_id#1086 = i_category_id#1159))\n         :- Filter (isnotnull(sales#731) AND (cast(sales#731 as decimal(32,6)) > cast(scalar-subquery#735 [] as decimal(32,6))))\n         :  :  +- Aggregate [avg((cast(quantity#746 as decimal(10,0)) * list_price#747)) AS average_sales#752]\n         :  :     +- Union false, false\n         :  :        :- Project [ss_quantity#886 AS quantity#746, ss_list_price#888 AS list_price#747]\n         :  :        :  +- Join Inner, (ss_sold_date_sk#899 = d_date_sk#900)\n         :  :        :     :- Project [ss_quantity#886, ss_list_price#888, ss_sold_date_sk#899]\n         :  :        :     :  +- Filter (isnotnull(ss_sold_date_sk#899) AND dynamicpruning#1288 [ss_sold_date_sk#899])\n         :  :        :     :     :  +- Project [d_date_sk#900]\n         :  :        :     :     :     +- Filter ((isnotnull(d_year#906) AND ((d_year#906 >= 1998) AND (d_year#906 <= 2000))) AND isnotnull(d_date_sk#900))\n         :  :        :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#900,d_date_id#901,d_date#902,d_month_seq#903,d_week_seq#904,d_quarter_seq#905,d_year#906,d_dow#907,d_moy#908,d_dom#909,d_qoy#910,d_fy_year#911,d_fy_quarter_seq#912,d_fy_week_seq#913,d_day_name#914,d_quarter_name#915,d_holiday#916,d_weekend#917,d_following_holiday#918,d_first_dom#919,d_last_dom#920,d_same_day_ly#921,d_same_day_lq#922,d_current_day#923,... 4 more fields] parquet\n         :  :        :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#877,ss_item_sk#878,ss_customer_sk#879,ss_cdemo_sk#880,ss_hdemo_sk#881,ss_addr_sk#882,ss_store_sk#883,ss_promo_sk#884,ss_ticket_number#885L,ss_quantity#886,ss_wholesale_cost#887,ss_list_price#888,ss_sales_price#889,ss_ext_discount_amt#890,ss_ext_sales_price#891,ss_ext_wholesale_cost#892,ss_ext_list_price#893,ss_ext_tax#894,ss_coupon_amt#895,ss_net_paid#896,ss_net_paid_inc_tax#897,ss_net_profit#898,ss_sold_date_sk#899] parquet\n         :  :        :     +- Project [d_date_sk#900]\n         :  :        :        +- Filter ((isnotnull(d_year#906) AND ((d_year#906 >= 1998) AND (d_year#906 <= 2000))) AND isnotnull(d_date_sk#900))\n         :  :        :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#900,d_date_id#901,d_date#902,d_month_seq#903,d_week_seq#904,d_quarter_seq#905,d_year#906,d_dow#907,d_moy#908,d_dom#909,d_qoy#910,d_fy_year#911,d_fy_quarter_seq#912,d_fy_week_seq#913,d_day_name#914,d_quarter_name#915,d_holiday#916,d_weekend#917,d_following_holiday#918,d_first_dom#919,d_last_dom#920,d_same_day_ly#921,d_same_day_lq#922,d_current_day#923,... 4 more fields] parquet\n         :  :        :- Project [cs_quantity#945 AS quantity#748, cs_list_price#947 AS list_price#749]\n         :  :        :  +- Join Inner, (cs_sold_date_sk#961 = d_date_sk#962)\n         :  :        :     :- Project [cs_quantity#945, cs_list_price#947, cs_sold_date_sk#961]\n         :  :        :     :  +- Filter (isnotnull(cs_sold_date_sk#961) AND dynamicpruning#1289 [cs_sold_date_sk#961])\n         :  :        :     :     :  +- Project [d_date_sk#962]\n         :  :        :     :     :     +- Filter ((isnotnull(d_year#968) AND ((d_year#968 >= 1998) AND (d_year#968 <= 2000))) AND isnotnull(d_date_sk#962))\n         :  :        :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#962,d_date_id#963,d_date#964,d_month_seq#965,d_week_seq#966,d_quarter_seq#967,d_year#968,d_dow#969,d_moy#970,d_dom#971,d_qoy#972,d_fy_year#973,d_fy_quarter_seq#974,d_fy_week_seq#975,d_day_name#976,d_quarter_name#977,d_holiday#978,d_weekend#979,d_following_holiday#980,d_first_dom#981,d_last_dom#982,d_same_day_ly#983,d_same_day_lq#984,d_current_day#985,... 4 more fields] parquet\n         :  :        :     :     +- Relation spark_catalog.tpcds_100.catalog_sales[cs_sold_time_sk#928,cs_ship_date_sk#929,cs_bill_customer_sk#930,cs_bill_cdemo_sk#931,cs_bill_hdemo_sk#932,cs_bill_addr_sk#933,cs_ship_customer_sk#934,cs_ship_cdemo_sk#935,cs_ship_hdemo_sk#936,cs_ship_addr_sk#937,cs_call_center_sk#938,cs_catalog_page_sk#939,cs_ship_mode_sk#940,cs_warehouse_sk#941,cs_item_sk#942,cs_promo_sk#943,cs_order_number#944L,cs_quantity#945,cs_wholesale_cost#946,cs_list_price#947,cs_sales_price#948,cs_ext_discount_amt#949,cs_ext_sales_price#950,cs_ext_wholesale_cost#951,... 10 more fields] parquet\n         :  :        :     +- Project [d_date_sk#962]\n         :  :        :        +- Filter ((isnotnull(d_year#968) AND ((d_year#968 >= 1998) AND (d_year#968 <= 2000))) AND isnotnull(d_date_sk#962))\n         :  :        :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#962,d_date_id#963,d_date#964,d_month_seq#965,d_week_seq#966,d_quarter_seq#967,d_year#968,d_dow#969,d_moy#970,d_dom#971,d_qoy#972,d_fy_year#973,d_fy_quarter_seq#974,d_fy_week_seq#975,d_day_name#976,d_quarter_name#977,d_holiday#978,d_weekend#979,d_following_holiday#980,d_first_dom#981,d_last_dom#982,d_same_day_ly#983,d_same_day_lq#984,d_current_day#985,... 4 more fields] parquet\n         :  :        +- Project [ws_quantity#1007 AS quantity#750, ws_list_price#1009 AS list_price#751]\n         :  :           +- Join Inner, (ws_sold_date_sk#1023 = d_date_sk#1024)\n         :  :              :- Project [ws_quantity#1007, ws_list_price#1009, ws_sold_date_sk#1023]\n         :  :              :  +- Filter (isnotnull(ws_sold_date_sk#1023) AND dynamicpruning#1290 [ws_sold_date_sk#1023])\n         :  :              :     :  +- Project [d_date_sk#1024]\n         :  :              :     :     +- Filter ((isnotnull(d_year#1030) AND ((d_year#1030 >= 1998) AND (d_year#1030 <= 2000))) AND isnotnull(d_date_sk#1024))\n         :  :              :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#1024,d_date_id#1025,d_date#1026,d_month_seq#1027,d_week_seq#1028,d_quarter_seq#1029,d_year#1030,d_dow#1031,d_moy#1032,d_dom#1033,d_qoy#1034,d_fy_year#1035,d_fy_quarter_seq#1036,d_fy_week_seq#1037,d_day_name#1038,d_quarter_name#1039,d_holiday#1040,d_weekend#1041,d_following_holiday#1042,d_first_dom#1043,d_last_dom#1044,d_same_day_ly#1045,d_same_day_lq#1046,d_current_day#1047,... 4 more fields] parquet\n         :  :              :     +- Relation spark_catalog.tpcds_100.web_sales[ws_sold_time_sk#990,ws_ship_date_sk#991,ws_item_sk#992,ws_bill_customer_sk#993,ws_bill_cdemo_sk#994,ws_bill_hdemo_sk#995,ws_bill_addr_sk#996,ws_ship_customer_sk#997,ws_ship_cdemo_sk#998,ws_ship_hdemo_sk#999,ws_ship_addr_sk#1000,ws_web_page_sk#1001,ws_web_site_sk#1002,ws_ship_mode_sk#1003,ws_warehouse_sk#1004,ws_promo_sk#1005,ws_order_number#1006L,ws_quantity#1007,ws_wholesale_cost#1008,ws_list_price#1009,ws_sales_price#1010,ws_ext_discount_amt#1011,ws_ext_sales_price#1012,ws_ext_wholesale_cost#1013,... 10 more fields] parquet\n         :  :              +- Project [d_date_sk#1024]\n         :  :                 +- Filter ((isnotnull(d_year#1030) AND ((d_year#1030 >= 1998) AND (d_year#1030 <= 2000))) AND isnotnull(d_date_sk#1024))\n         :  :                    +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#1024,d_date_id#1025,d_date#1026,d_month_seq#1027,d_week_seq#1028,d_quarter_seq#1029,d_year#1030,d_dow#1031,d_moy#1032,d_dom#1033,d_qoy#1034,d_fy_year#1035,d_fy_quarter_seq#1036,d_fy_week_seq#1037,d_day_name#1038,d_quarter_name#1039,d_holiday#1040,d_weekend#1041,d_following_holiday#1042,d_first_dom#1043,d_last_dom#1044,d_same_day_ly#1045,d_same_day_lq#1046,d_current_day#1047,... 4 more fields] parquet\n         :  +- Aggregate [i_brand_id#1082, i_class_id#1084, i_category_id#1086], [store AS channel#730, i_brand_id#1082, i_class_id#1084, i_category_id#1086, sum((cast(ss_quantity#1061 as decimal(10,0)) * ss_list_price#1063)) AS sales#731, count(1) AS number_sales#732L]\n         :     +- Project [ss_quantity#1061, ss_list_price#1063, i_brand_id#1082, i_class_id#1084, i_category_id#1086]\n         :        +- Join Inner, (ss_item_sk#1053 = i_item_sk#1075)\n         :           :- Project [ss_item_sk#1053, ss_quantity#1061, ss_list_price#1063]\n         :           :  +- Join Inner, (ss_sold_date_sk#1074 = d_date_sk#1097)\n         :           :     :- Join LeftSemi, (ss_item_sk#1053 = ss_item_sk#745)\n         :           :     :  :- Project [ss_item_sk#1053, ss_quantity#1061, ss_list_price#1063, ss_sold_date_sk#1074]\n         :           :     :  :  +- Filter ((isnotnull(ss_item_sk#1053) AND isnotnull(ss_sold_date_sk#1074)) AND dynamicpruning#1303 [ss_sold_date_sk#1074])\n         :           :     :  :     :  +- Project [d_date_sk#1097]\n         :           :     :  :     :     +- Filter ((isnotnull(d_week_seq#1101) AND (d_week_seq#1101 = scalar-subquery#734 [])) AND isnotnull(d_date_sk#1097))\n         :           :     :  :     :        :  +- Project [d_week_seq#1213]\n         :           :     :  :     :        :     +- Filter (((isnotnull(d_year#1215) AND isnotnull(d_moy#1217)) AND isnotnull(d_dom#1218)) AND (((d_year#1215 = 1999) AND (d_moy#1217 = 12)) AND (d_dom#1218 = 16)))\n         :           :     :  :     :        :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#1209,d_date_id#1210,d_date#1211,d_month_seq#1212,d_week_seq#1213,d_quarter_seq#1214,d_year#1215,d_dow#1216,d_moy#1217,d_dom#1218,d_qoy#1219,d_fy_year#1220,d_fy_quarter_seq#1221,d_fy_week_seq#1222,d_day_name#1223,d_quarter_name#1224,d_holiday#1225,d_weekend#1226,d_following_holiday#1227,d_first_dom#1228,d_last_dom#1229,d_same_day_ly#1230,d_same_day_lq#1231,d_current_day#1232,... 4 more fields] parquet\n         :           :     :  :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#1097,d_date_id#1098,d_date#1099,d_month_seq#1100,d_week_seq#1101,d_quarter_seq#1102,d_year#1103,d_dow#1104,d_moy#1105,d_dom#1106,d_qoy#1107,d_fy_year#1108,d_fy_quarter_seq#1109,d_fy_week_seq#1110,d_day_name#1111,d_quarter_name#1112,d_holiday#1113,d_weekend#1114,d_following_holiday#1115,d_first_dom#1116,d_last_dom#1117,d_same_day_ly#1118,d_same_day_lq#1119,d_current_day#1120,... 4 more fields] parquet\n         :           :     :  :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#1052,ss_item_sk#1053,ss_customer_sk#1054,ss_cdemo_sk#1055,ss_hdemo_sk#1056,ss_addr_sk#1057,ss_store_sk#1058,ss_promo_sk#1059,ss_ticket_number#1060L,ss_quantity#1061,ss_wholesale_cost#1062,ss_list_price#1063,ss_sales_price#1064,ss_ext_discount_amt#1065,ss_ext_sales_price#1066,ss_ext_wholesale_cost#1067,ss_ext_list_price#1068,ss_ext_tax#1069,ss_coupon_amt#1070,ss_net_paid#1071,ss_net_paid_inc_tax#1072,ss_net_profit#1073,ss_sold_date_sk#1074] parquet\n         :           :     :  +- Project [i_item_sk#25 AS ss_item_sk#745]\n         :           :     :     +- Join Inner, (((i_brand_id#32 = brand_id#742) AND (i_class_id#34 = class_id#743)) AND (i_category_id#36 = category_id#744))\n         :           :     :        :- Project [i_item_sk#25, i_brand_id#32, i_class_id#34, i_category_id#36]\n         :           :     :        :  +- Filter ((isnotnull(i_brand_id#32) AND isnotnull(i_class_id#34)) AND isnotnull(i_category_id#36))\n         :           :     :        :     +- Relation spark_catalog.tpcds_100.item[i_item_sk#25,i_item_id#26,i_rec_start_date#27,i_rec_end_date#28,i_item_desc#29,i_current_price#30,i_wholesale_cost#31,i_brand_id#32,i_brand#33,i_class_id#34,i_class#35,i_category_id#36,i_category#37,i_manufact_id#38,i_manufact#39,i_size#40,i_formulation#41,i_color#42,i_units#43,i_container#44,i_manager_id#45,i_product_name#46] parquet\n         :           :     :        +- Join LeftSemi, (((brand_id#742 <=> i_brand_id#834) AND (class_id#743 <=> i_class_id#836)) AND (category_id#744 <=> i_category_id#838))\n         :           :     :           :- LogicalQueryStage Aggregate [brand_id#742, class_id#743, category_id#744], [brand_id#742, class_id#743, category_id#744], HashAggregate(keys=[brand_id#742, class_id#743, category_id#744], functions=[])\n         :           :     :           +- LogicalQueryStage Project [i_brand_id#834, i_class_id#836, i_category_id#838], ShuffleQueryStage 48\n         :           :     +- LogicalQueryStage Project [d_date_sk#1097], BroadcastQueryStage 9\n         :           +- Join LeftSemi, (i_item_sk#1075 = ss_item_sk#745)\n         :              :- Project [i_item_sk#1075, i_brand_id#1082, i_class_id#1084, i_category_id#1086]\n         :              :  +- Filter (((isnotnull(i_item_sk#1075) AND isnotnull(i_brand_id#1082)) AND isnotnull(i_class_id#1084)) AND isnotnull(i_category_id#1086))\n         :              :     +- Relation spark_catalog.tpcds_100.item[i_item_sk#1075,i_item_id#1076,i_rec_start_date#1077,i_rec_end_date#1078,i_item_desc#1079,i_current_price#1080,i_wholesale_cost#1081,i_brand_id#1082,i_brand#1083,i_class_id#1084,i_class#1085,i_category_id#1086,i_category#1087,i_manufact_id#1088,i_manufact#1089,i_size#1090,i_formulation#1091,i_color#1092,i_units#1093,i_container#1094,i_manager_id#1095,i_product_name#1096] parquet\n         :              +- Project [i_item_sk#25 AS ss_item_sk#745]\n         :                 +- Join Inner, (((i_brand_id#32 = brand_id#742) AND (i_class_id#34 = class_id#743)) AND (i_category_id#36 = category_id#744))\n         :                    :- Project [i_item_sk#25, i_brand_id#32, i_class_id#34, i_category_id#36]\n         :                    :  +- Filter ((isnotnull(i_brand_id#32) AND isnotnull(i_class_id#34)) AND isnotnull(i_category_id#36))\n         :                    :     +- Relation spark_catalog.tpcds_100.item[i_item_sk#25,i_item_id#26,i_rec_start_date#27,i_rec_end_date#28,i_item_desc#29,i_current_price#30,i_wholesale_cost#31,i_brand_id#32,i_brand#33,i_class_id#34,i_class#35,i_category_id#36,i_category#37,i_manufact_id#38,i_manufact#39,i_size#40,i_formulation#41,i_color#42,i_units#43,i_container#44,i_manager_id#45,i_product_name#46] parquet\n         :                    +- Join LeftSemi, (((brand_id#742 <=> i_brand_id#834) AND (class_id#743 <=> i_class_id#836)) AND (category_id#744 <=> i_category_id#838))\n         :                       :- LogicalQueryStage Aggregate [brand_id#742, class_id#743, category_id#744], [brand_id#742, class_id#743, category_id#744], HashAggregate(keys=[brand_id#742, class_id#743, category_id#744], functions=[])\n         :                       +- LogicalQueryStage Project [i_brand_id#834, i_class_id#836, i_category_id#838], ShuffleQueryStage 52\n         +- Filter (isnotnull(sales#737) AND (cast(sales#737 as decimal(32,6)) > cast(scalar-subquery#741 [] as decimal(32,6))))\n            :  +- Aggregate [avg((cast(quantity#746 as decimal(10,0)) * list_price#747)) AS average_sales#752]\n            :     +- Union false, false\n            :        :- Project [ss_quantity#886 AS quantity#746, ss_list_price#888 AS list_price#747]\n            :        :  +- Join Inner, (ss_sold_date_sk#899 = d_date_sk#900)\n            :        :     :- Project [ss_quantity#886, ss_list_price#888, ss_sold_date_sk#899]\n            :        :     :  +- Filter (isnotnull(ss_sold_date_sk#899) AND dynamicpruning#1288 [ss_sold_date_sk#899])\n            :        :     :     :  +- Project [d_date_sk#900]\n            :        :     :     :     +- Filter ((isnotnull(d_year#906) AND ((d_year#906 >= 1998) AND (d_year#906 <= 2000))) AND isnotnull(d_date_sk#900))\n            :        :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#900,d_date_id#901,d_date#902,d_month_seq#903,d_week_seq#904,d_quarter_seq#905,d_year#906,d_dow#907,d_moy#908,d_dom#909,d_qoy#910,d_fy_year#911,d_fy_quarter_seq#912,d_fy_week_seq#913,d_day_name#914,d_quarter_name#915,d_holiday#916,d_weekend#917,d_following_holiday#918,d_first_dom#919,d_last_dom#920,d_same_day_ly#921,d_same_day_lq#922,d_current_day#923,... 4 more fields] parquet\n            :        :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#877,ss_item_sk#878,ss_customer_sk#879,ss_cdemo_sk#880,ss_hdemo_sk#881,ss_addr_sk#882,ss_store_sk#883,ss_promo_sk#884,ss_ticket_number#885L,ss_quantity#886,ss_wholesale_cost#887,ss_list_price#888,ss_sales_price#889,ss_ext_discount_amt#890,ss_ext_sales_price#891,ss_ext_wholesale_cost#892,ss_ext_list_price#893,ss_ext_tax#894,ss_coupon_amt#895,ss_net_paid#896,ss_net_paid_inc_tax#897,ss_net_profit#898,ss_sold_date_sk#899] parquet\n            :        :     +- Project [d_date_sk#900]\n            :        :        +- Filter ((isnotnull(d_year#906) AND ((d_year#906 >= 1998) AND (d_year#906 <= 2000))) AND isnotnull(d_date_sk#900))\n            :        :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#900,d_date_id#901,d_date#902,d_month_seq#903,d_week_seq#904,d_quarter_seq#905,d_year#906,d_dow#907,d_moy#908,d_dom#909,d_qoy#910,d_fy_year#911,d_fy_quarter_seq#912,d_fy_week_seq#913,d_day_name#914,d_quarter_name#915,d_holiday#916,d_weekend#917,d_following_holiday#918,d_first_dom#919,d_last_dom#920,d_same_day_ly#921,d_same_day_lq#922,d_current_day#923,... 4 more fields] parquet\n            :        :- Project [cs_quantity#945 AS quantity#748, cs_list_price#947 AS list_price#749]\n            :        :  +- Join Inner, (cs_sold_date_sk#961 = d_date_sk#962)\n            :        :     :- Project [cs_quantity#945, cs_list_price#947, cs_sold_date_sk#961]\n            :        :     :  +- Filter (isnotnull(cs_sold_date_sk#961) AND dynamicpruning#1289 [cs_sold_date_sk#961])\n            :        :     :     :  +- Project [d_date_sk#962]\n            :        :     :     :     +- Filter ((isnotnull(d_year#968) AND ((d_year#968 >= 1998) AND (d_year#968 <= 2000))) AND isnotnull(d_date_sk#962))\n            :        :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#962,d_date_id#963,d_date#964,d_month_seq#965,d_week_seq#966,d_quarter_seq#967,d_year#968,d_dow#969,d_moy#970,d_dom#971,d_qoy#972,d_fy_year#973,d_fy_quarter_seq#974,d_fy_week_seq#975,d_day_name#976,d_quarter_name#977,d_holiday#978,d_weekend#979,d_following_holiday#980,d_first_dom#981,d_last_dom#982,d_same_day_ly#983,d_same_day_lq#984,d_current_day#985,... 4 more fields] parquet\n            :        :     :     +- Relation spark_catalog.tpcds_100.catalog_sales[cs_sold_time_sk#928,cs_ship_date_sk#929,cs_bill_customer_sk#930,cs_bill_cdemo_sk#931,cs_bill_hdemo_sk#932,cs_bill_addr_sk#933,cs_ship_customer_sk#934,cs_ship_cdemo_sk#935,cs_ship_hdemo_sk#936,cs_ship_addr_sk#937,cs_call_center_sk#938,cs_catalog_page_sk#939,cs_ship_mode_sk#940,cs_warehouse_sk#941,cs_item_sk#942,cs_promo_sk#943,cs_order_number#944L,cs_quantity#945,cs_wholesale_cost#946,cs_list_price#947,cs_sales_price#948,cs_ext_discount_amt#949,cs_ext_sales_price#950,cs_ext_wholesale_cost#951,... 10 more fields] parquet\n            :        :     +- Project [d_date_sk#962]\n            :        :        +- Filter ((isnotnull(d_year#968) AND ((d_year#968 >= 1998) AND (d_year#968 <= 2000))) AND isnotnull(d_date_sk#962))\n            :        :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#962,d_date_id#963,d_date#964,d_month_seq#965,d_week_seq#966,d_quarter_seq#967,d_year#968,d_dow#969,d_moy#970,d_dom#971,d_qoy#972,d_fy_year#973,d_fy_quarter_seq#974,d_fy_week_seq#975,d_day_name#976,d_quarter_name#977,d_holiday#978,d_weekend#979,d_following_holiday#980,d_first_dom#981,d_last_dom#982,d_same_day_ly#983,d_same_day_lq#984,d_current_day#985,... 4 more fields] parquet\n            :        +- Project [ws_quantity#1007 AS quantity#750, ws_list_price#1009 AS list_price#751]\n            :           +- Join Inner, (ws_sold_date_sk#1023 = d_date_sk#1024)\n            :              :- Project [ws_quantity#1007, ws_list_price#1009, ws_sold_date_sk#1023]\n            :              :  +- Filter (isnotnull(ws_sold_date_sk#1023) AND dynamicpruning#1290 [ws_sold_date_sk#1023])\n            :              :     :  +- Project [d_date_sk#1024]\n            :              :     :     +- Filter ((isnotnull(d_year#1030) AND ((d_year#1030 >= 1998) AND (d_year#1030 <= 2000))) AND isnotnull(d_date_sk#1024))\n            :              :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#1024,d_date_id#1025,d_date#1026,d_month_seq#1027,d_week_seq#1028,d_quarter_seq#1029,d_year#1030,d_dow#1031,d_moy#1032,d_dom#1033,d_qoy#1034,d_fy_year#1035,d_fy_quarter_seq#1036,d_fy_week_seq#1037,d_day_name#1038,d_quarter_name#1039,d_holiday#1040,d_weekend#1041,d_following_holiday#1042,d_first_dom#1043,d_last_dom#1044,d_same_day_ly#1045,d_same_day_lq#1046,d_current_day#1047,... 4 more fields] parquet\n            :              :     +- Relation spark_catalog.tpcds_100.web_sales[ws_sold_time_sk#990,ws_ship_date_sk#991,ws_item_sk#992,ws_bill_customer_sk#993,ws_bill_cdemo_sk#994,ws_bill_hdemo_sk#995,ws_bill_addr_sk#996,ws_ship_customer_sk#997,ws_ship_cdemo_sk#998,ws_ship_hdemo_sk#999,ws_ship_addr_sk#1000,ws_web_page_sk#1001,ws_web_site_sk#1002,ws_ship_mode_sk#1003,ws_warehouse_sk#1004,ws_promo_sk#1005,ws_order_number#1006L,ws_quantity#1007,ws_wholesale_cost#1008,ws_list_price#1009,ws_sales_price#1010,ws_ext_discount_amt#1011,ws_ext_sales_price#1012,ws_ext_wholesale_cost#1013,... 10 more fields] parquet\n            :              +- Project [d_date_sk#1024]\n            :                 +- Filter ((isnotnull(d_year#1030) AND ((d_year#1030 >= 1998) AND (d_year#1030 <= 2000))) AND isnotnull(d_date_sk#1024))\n            :                    +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#1024,d_date_id#1025,d_date#1026,d_month_seq#1027,d_week_seq#1028,d_quarter_seq#1029,d_year#1030,d_dow#1031,d_moy#1032,d_dom#1033,d_qoy#1034,d_fy_year#1035,d_fy_quarter_seq#1036,d_fy_week_seq#1037,d_day_name#1038,d_quarter_name#1039,d_holiday#1040,d_weekend#1041,d_following_holiday#1042,d_first_dom#1043,d_last_dom#1044,d_same_day_ly#1045,d_same_day_lq#1046,d_current_day#1047,... 4 more fields] parquet\n            +- Aggregate [i_brand_id#1155, i_class_id#1157, i_category_id#1159], [store AS channel#736, i_brand_id#1155, i_class_id#1157, i_category_id#1159, sum((cast(ss_quantity#1134 as decimal(10,0)) * ss_list_price#1136)) AS sales#737, count(1) AS number_sales#738L]\n               +- Project [ss_quantity#1134, ss_list_price#1136, i_brand_id#1155, i_class_id#1157, i_category_id#1159]\n                  +- Join Inner, (ss_item_sk#1126 = i_item_sk#1148)\n                     :- Project [ss_item_sk#1126, ss_quantity#1134, ss_list_price#1136]\n                     :  +- Join Inner, (ss_sold_date_sk#1147 = d_date_sk#1170)\n                     :     :- Join LeftSemi, (ss_item_sk#1126 = ss_item_sk#745)\n                     :     :  :- Project [ss_item_sk#1126, ss_quantity#1134, ss_list_price#1136, ss_sold_date_sk#1147]\n                     :     :  :  +- Filter ((isnotnull(ss_item_sk#1126) AND isnotnull(ss_sold_date_sk#1147)) AND dynamicpruning#1310 [ss_sold_date_sk#1147])\n                     :     :  :     :  +- Project [d_date_sk#1170]\n                     :     :  :     :     +- Filter ((isnotnull(d_week_seq#1174) AND (d_week_seq#1174 = scalar-subquery#740 [])) AND isnotnull(d_date_sk#1170))\n                     :     :  :     :        :  +- Project [d_week_seq#1241]\n                     :     :  :     :        :     +- Filter (((isnotnull(d_year#1243) AND isnotnull(d_moy#1245)) AND isnotnull(d_dom#1246)) AND (((d_year#1243 = 1998) AND (d_moy#1245 = 12)) AND (d_dom#1246 = 16)))\n                     :     :  :     :        :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#1237,d_date_id#1238,d_date#1239,d_month_seq#1240,d_week_seq#1241,d_quarter_seq#1242,d_year#1243,d_dow#1244,d_moy#1245,d_dom#1246,d_qoy#1247,d_fy_year#1248,d_fy_quarter_seq#1249,d_fy_week_seq#1250,d_day_name#1251,d_quarter_name#1252,d_holiday#1253,d_weekend#1254,d_following_holiday#1255,d_first_dom#1256,d_last_dom#1257,d_same_day_ly#1258,d_same_day_lq#1259,d_current_day#1260,... 4 more fields] parquet\n                     :     :  :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#1170,d_date_id#1171,d_date#1172,d_month_seq#1173,d_week_seq#1174,d_quarter_seq#1175,d_year#1176,d_dow#1177,d_moy#1178,d_dom#1179,d_qoy#1180,d_fy_year#1181,d_fy_quarter_seq#1182,d_fy_week_seq#1183,d_day_name#1184,d_quarter_name#1185,d_holiday#1186,d_weekend#1187,d_following_holiday#1188,d_first_dom#1189,d_last_dom#1190,d_same_day_ly#1191,d_same_day_lq#1192,d_current_day#1193,... 4 more fields] parquet\n                     :     :  :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#1125,ss_item_sk#1126,ss_customer_sk#1127,ss_cdemo_sk#1128,ss_hdemo_sk#1129,ss_addr_sk#1130,ss_store_sk#1131,ss_promo_sk#1132,ss_ticket_number#1133L,ss_quantity#1134,ss_wholesale_cost#1135,ss_list_price#1136,ss_sales_price#1137,ss_ext_discount_amt#1138,ss_ext_sales_price#1139,ss_ext_wholesale_cost#1140,ss_ext_list_price#1141,ss_ext_tax#1142,ss_coupon_amt#1143,ss_net_paid#1144,ss_net_paid_inc_tax#1145,ss_net_profit#1146,ss_sold_date_sk#1147] parquet\n                     :     :  +- Project [i_item_sk#25 AS ss_item_sk#745]\n                     :     :     +- Join Inner, (((i_brand_id#32 = brand_id#742) AND (i_class_id#34 = class_id#743)) AND (i_category_id#36 = category_id#744))\n                     :     :        :- Project [i_item_sk#25, i_brand_id#32, i_class_id#34, i_category_id#36]\n                     :     :        :  +- Filter ((isnotnull(i_brand_id#32) AND isnotnull(i_class_id#34)) AND isnotnull(i_category_id#36))\n                     :     :        :     +- Relation spark_catalog.tpcds_100.item[i_item_sk#25,i_item_id#26,i_rec_start_date#27,i_rec_end_date#28,i_item_desc#29,i_current_price#30,i_wholesale_cost#31,i_brand_id#32,i_brand#33,i_class_id#34,i_class#35,i_category_id#36,i_category#37,i_manufact_id#38,i_manufact#39,i_size#40,i_formulation#41,i_color#42,i_units#43,i_container#44,i_manager_id#45,i_product_name#46] parquet\n                     :     :        +- Join LeftSemi, (((brand_id#742 <=> i_brand_id#834) AND (class_id#743 <=> i_class_id#836)) AND (category_id#744 <=> i_category_id#838))\n                     :     :           :- LogicalQueryStage Aggregate [brand_id#742, class_id#743, category_id#744], [brand_id#742, class_id#743, category_id#744], HashAggregate(keys=[brand_id#742, class_id#743, category_id#744], functions=[])\n                     :     :           +- LogicalQueryStage Project [i_brand_id#834, i_class_id#836, i_category_id#838], ShuffleQueryStage 56\n                     :     +- LogicalQueryStage Project [d_date_sk#1170], BroadcastQueryStage 34\n                     +- Join LeftSemi, (i_item_sk#1148 = ss_item_sk#745)\n                        :- Project [i_item_sk#1148, i_brand_id#1155, i_class_id#1157, i_category_id#1159]\n                        :  +- Filter (((isnotnull(i_item_sk#1148) AND isnotnull(i_brand_id#1155)) AND isnotnull(i_class_id#1157)) AND isnotnull(i_category_id#1159))\n                        :     +- Relation spark_catalog.tpcds_100.item[i_item_sk#1148,i_item_id#1149,i_rec_start_date#1150,i_rec_end_date#1151,i_item_desc#1152,i_current_price#1153,i_wholesale_cost#1154,i_brand_id#1155,i_brand#1156,i_class_id#1157,i_class#1158,i_category_id#1159,i_category#1160,i_manufact_id#1161,i_manufact#1162,i_size#1163,i_formulation#1164,i_color#1165,i_units#1166,i_container#1167,i_manager_id#1168,i_product_name#1169] parquet\n                        +- Project [i_item_sk#25 AS ss_item_sk#745]\n                           +- Join Inner, (((i_brand_id#32 = brand_id#742) AND (i_class_id#34 = class_id#743)) AND (i_category_id#36 = category_id#744))\n                              :- Project [i_item_sk#25, i_brand_id#32, i_class_id#34, i_category_id#36]\n                              :  +- Filter ((isnotnull(i_brand_id#32) AND isnotnull(i_class_id#34)) AND isnotnull(i_category_id#36))\n                              :     +- Relation spark_catalog.tpcds_100.item[i_item_sk#25,i_item_id#26,i_rec_start_date#27,i_rec_end_date#28,i_item_desc#29,i_current_price#30,i_wholesale_cost#31,i_brand_id#32,i_brand#33,i_class_id#34,i_class#35,i_category_id#36,i_category#37,i_manufact_id#38,i_manufact#39,i_size#40,i_formulation#41,i_color#42,i_units#43,i_container#44,i_manager_id#45,i_product_name#46] parquet\n                              +- Join LeftSemi, (((brand_id#742 <=> i_brand_id#834) AND (class_id#743 <=> i_class_id#836)) AND (category_id#744 <=> i_category_id#838))\n                                 :- LogicalQueryStage Aggregate [brand_id#742, class_id#743, category_id#744], [brand_id#742, class_id#743, category_id#744], HashAggregate(keys=[brand_id#742, class_id#743, category_id#744], functions=[])\n                                 +- LogicalQueryStage Project [i_brand_id#834, i_class_id#836, i_category_id#838], ShuffleQueryStage 60\n"
      },
      "IM" : {
        "inputSizeInBytes" : 89667376416,
        "inputRowCount" : 724334780
      },
      "PD" : {
        "2" : [ 177962, 455930, 415323, 324034, 407180, 578113, 259800, 210766, 416594, 365097, 722932, 430581, 737269, 1031975, 1514187, 472059, 101032, 459828, 347329, 114427, 94836, 1079666, 1326142, 383040, 175045, 486302, 702614, 800093, 2890585, 749715, 100494, 720165, 530316, 795278, 705228, 310364, 730188, 287903, 255104, 608403, 493741, 197579, 98211, 1196389, 851488, 408258, 740122, 162471, 235750, 429841, 280551, 434095, 986907, 459535, 521411, 444089, 345779, 644089, 1511511, 259033, 857504, 440487, 655905, 522602, 1260769, 704242, 355941, 572333, 482841, 779237, 447588, 350687, 323737, 1316494, 306270, 639573, 819553, 701140, 669174, 780010, 675042, 476951, 636674, 322479, 897583, 280582, 223958, 573984, 561763, 119797, 430493, 121994, 311747, 117433, 377765, 318296, 740667, 431248, 547706, 508009, 414691, 367457, 723737, 442906, 583473, 347572, 1269089, 287286, 380605, 786487, 704711, 1465276, 758753, 673171, 160802, 291861, 864733, 186361, 546087, 1459274, 1695574, 115478, 421893, 386121, 312819, 164972, 1072990, 214957, 152503, 420284, 300056, 868375, 940076, 349342, 205208, 928322, 195265, 461329, 359228, 419971, 560162, 326400, 702646, 957888, 320780, 321516, 414771, 187523, 870857, 1055493, 342091, 506784, 282728, 1045719, 262333, 128426, 495313, 750638, 98964, 1366471, 574893, 319167, 147634, 1547306, 890810, 507583, 261595, 408664, 943050, 676186, 857526, 578999, 449016, 240998, 433603, 682640, 120305, 912938, 1129760, 525413, 547769, 609464, 611740, 324072, 206504, 2926245, 295669, 919509, 366206, 535787, 794086, 708510, 622156, 383847, 1071951, 677651, 914990, 923202, 596798, 344327 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 16,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "StartTimeInMs" : 1702226670995,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 40503,
        "IOBytes" : {
          "Total" : 2327736575,
          "Details" : {
            "IR" : 2186334353,
            "IW" : 0,
            "SR" : 125951502,
            "SW" : 15450720
          }
        }
      }
    },
    "21" : {
      "LQP" : {
        "operators" : {
          "12" : {
            "sign" : 1377797290,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(ss_sold_date_sk#899) AND dynamicpruning#1288 [ss_sold_date_sk#899]) "
          },
          "8" : {
            "sign" : -1298322270,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Union",
            "sizeInBytes" : 9471049040,
            "rowCount" : 473552452,
            "isRuntime" : false,
            "predicate" : " (unknown) Union Arguments: false, false "
          },
          "19" : {
            "sign" : 1942236716,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 3438552408,
            "rowCount" : 143273017,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_quantity#945, cs_list_price#947, cs_sold_date_sk#961] "
          },
          "23" : {
            "sign" : -1695423935,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 353748,
            "rowCount" : 1438,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(d_year#968) AND ((d_year#968 >= 1998) AND (d_year#968 <= 2000))) AND isnotnull(d_date_sk#962)) "
          },
          "4" : {
            "sign" : -184003501,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 383488,
            "rowCount" : 5992,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Filter (isnotnull(sales#731) AND (cast(sales#731 as decimal(32,6)) > cast(scalar-subquery#735 [] as decimal(32,6)))), BroadcastQueryStage 101 "
          },
          "15" : {
            "sign" : -2071970095,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 353748,
            "rowCount" : 1438,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(d_year#906) AND ((d_year#906 >= 1998) AND (d_year#906 <= 2000))) AND isnotnull(d_date_sk#900)) "
          },
          "11" : {
            "sign" : 1776873494,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 6601088472,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_quantity#886, ss_list_price#888, ss_sold_date_sk#899] "
          },
          "9" : {
            "sign" : 869525063,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 5310811700,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_quantity#886 AS quantity#746, ss_list_price#888 AS list_price#747] "
          },
          "22" : {
            "sign" : 406087876,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 17256,
            "rowCount" : 1438,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#962] "
          },
          "26" : {
            "sign" : 1503367439,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 1945876940,
            "rowCount" : 69495605,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ws_sold_date_sk#1023 = d_date_sk#1024) "
          },
          "13" : {
            "sign" : -1972788865,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#877, ss_item_sk#878, ss_customer_sk#879, ss_cdemo_sk#880, ss_hdemo_sk#881, ss_addr_sk#882, ss_store_sk#883, ss_promo_sk#884, ss_ticket_number#885L, ss_quantity#886, ss_wholesale_cost#887, ss_list_price#888, ss_sales_price#889, ss_ext_discount_amt#890, ss_ext_sales_price#891, ss_ext_wholesale_cost#892, ss_ext_list_price#893, ss_ext_tax#894, ss_coupon_amt#895, ss_net_paid#896, ss_net_paid_inc_tax#897, ss_net_profit#898, ss_sold_date_sk#899], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "24" : {
            "sign" : -169490734,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#962, d_date_id#963, d_date#964, d_month_seq#965, d_week_seq#966, d_quarter_seq#967, d_year#968, d_dow#969, d_moy#970, d_dom#971, d_qoy#972, d_fy_year#973, d_fy_quarter_seq#974, d_fy_week_seq#975, d_day_name#976, d_quarter_name#977, d_holiday#978, d_weekend#979, d_following_holiday#980, d_first_dom#981, d_last_dom#982, d_same_day_ly#983, d_same_day_lq#984, d_current_day#985, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "16" : {
            "sign" : -820074406,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#900, d_date_id#901, d_date#902, d_month_seq#903, d_week_seq#904, d_quarter_seq#905, d_year#906, d_dow#907, d_moy#908, d_dom#909, d_qoy#910, d_fy_year#911, d_fy_quarter_seq#912, d_fy_week_seq#913, d_day_name#914, d_quarter_name#915, d_holiday#916, d_weekend#917, d_following_holiday#918, d_first_dom#919, d_last_dom#920, d_same_day_ly#921, d_same_day_lq#922, d_current_day#923, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "5" : {
            "sign" : -1109463710,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 383488,
            "rowCount" : 5992,
            "isRuntime" : true,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(sales#737) AND (cast(sales#737 as decimal(32,6)) > cast(scalar-subquery#741 [] as decimal(32,6)))) "
          },
          "10" : {
            "sign" : -1804794945,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 7435136380,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#899 = d_date_sk#900) "
          },
          "21" : {
            "sign" : -70077436,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 29800787536,
            "rowCount" : 143273017,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [cs_sold_time_sk#928, cs_ship_date_sk#929, cs_bill_customer_sk#930, cs_bill_cdemo_sk#931, cs_bill_hdemo_sk#932, cs_bill_addr_sk#933, cs_ship_customer_sk#934, cs_ship_cdemo_sk#935, cs_ship_hdemo_sk#936, cs_ship_addr_sk#937, cs_call_center_sk#938, cs_catalog_page_sk#939, cs_ship_mode_sk#940, cs_warehouse_sk#941, cs_item_sk#942, cs_promo_sk#943, cs_order_number#944L, cs_quantity#945, cs_wholesale_cost#946, cs_list_price#947, cs_sales_price#948, cs_ext_discount_amt#949, cs_ext_sales_price#950, cs_ext_wholesale_cost#951, ... 10 more fields], `spark_catalog`.`tpcds_100`.`catalog_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "32" : {
            "sign" : -502763688,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#1024, d_date_id#1025, d_date#1026, d_month_seq#1027, d_week_seq#1028, d_quarter_seq#1029, d_year#1030, d_dow#1031, d_moy#1032, d_dom#1033, d_qoy#1034, d_fy_year#1035, d_fy_quarter_seq#1036, d_fy_week_seq#1037, d_day_name#1038, d_quarter_name#1039, d_holiday#1040, d_weekend#1041, d_following_holiday#1042, d_first_dom#1043, d_last_dom#1044, d_same_day_ly#1045, d_same_day_lq#1046, d_current_day#1047, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "6" : {
            "sign" : -303166545,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 431424,
            "rowCount" : 5992,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [i_brand_id#1155, i_class_id#1157, i_category_id#1159], [store AS channel#736, i_brand_id#1155, i_class_id#1157, i_category_id#1159, sum((cast(ss_quantity#1134 as decimal(10,0)) * ss_list_price#1136)) AS sales#737, count(1) AS number_sales#738L], HashAggregate(keys=[i_brand_id#1155, i_class_id#1157, i_category_id#1159], functions=[sum((cast(ss_quantity#1134 as decimal(10,0)) * ss_list_price#1136)), count(1)]) "
          },
          "1" : {
            "sign" : -471306006,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
            "sizeInBytes" : 4308487680,
            "rowCount" : 35904064,
            "isRuntime" : false,
            "predicate" : " (unknown) LocalLimit Arguments: 100 "
          },
          "17" : {
            "sign" : 825651901,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 2770325240,
            "rowCount" : 138516262,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_quantity#945 AS quantity#748, cs_list_price#947 AS list_price#749] "
          },
          "25" : {
            "sign" : 17831375,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 1389912100,
            "rowCount" : 69495605,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_quantity#1007 AS quantity#750, ws_list_price#1009 AS list_price#751] "
          },
          "14" : {
            "sign" : 2019201408,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 17256,
            "rowCount" : 1438,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#900] "
          },
          "31" : {
            "sign" : -626435234,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 353748,
            "rowCount" : 1438,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(d_year#1030) AND ((d_year#1030 >= 1998) AND (d_year#1030 <= 2000))) AND isnotnull(d_date_sk#1024)) "
          },
          "0" : {
            "sign" : -158106733,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
            "sizeInBytes" : 12000,
            "rowCount" : 100,
            "isRuntime" : false,
            "predicate" : " (unknown) GlobalLimit Arguments: 100 "
          },
          "20" : {
            "sign" : 1500374164,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 29800787536,
            "rowCount" : 143273017,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(cs_sold_date_sk#961) AND dynamicpruning#1289 [cs_sold_date_sk#961]) "
          },
          "27" : {
            "sign" : 49678577,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 1727606976,
            "rowCount" : 71983624,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_quantity#1007, ws_list_price#1009, ws_sold_date_sk#1023] "
          },
          "2" : {
            "sign" : 1739259005,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 4308487680,
            "rowCount" : 35904064,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [i_brand_id#1082 ASC NULLS FIRST, i_class_id#1084 ASC NULLS FIRST, i_category_id#1086 ASC NULLS FIRST], true "
          },
          "18" : {
            "sign" : 824386657,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 3878455336,
            "rowCount" : 138516262,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cs_sold_date_sk#961 = d_date_sk#962) "
          },
          "30" : {
            "sign" : -1100969675,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 17256,
            "rowCount" : 1438,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#1024] "
          },
          "7" : {
            "sign" : -1809172647,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 24,
            "rowCount" : 1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [avg((cast(quantity#746 as decimal(10,0)) * list_price#747)) AS average_sales#752] "
          },
          "29" : {
            "sign" : 1698660872,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 14972593792,
            "rowCount" : 71983624,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ws_sold_time_sk#990, ws_ship_date_sk#991, ws_item_sk#992, ws_bill_customer_sk#993, ws_bill_cdemo_sk#994, ws_bill_hdemo_sk#995, ws_bill_addr_sk#996, ws_ship_customer_sk#997, ws_ship_cdemo_sk#998, ws_ship_hdemo_sk#999, ws_ship_addr_sk#1000, ws_web_page_sk#1001, ws_web_site_sk#1002, ws_ship_mode_sk#1003, ws_warehouse_sk#1004, ws_promo_sk#1005, ws_order_number#1006L, ws_quantity#1007, ws_wholesale_cost#1008, ws_list_price#1009, ws_sales_price#1010, ws_ext_discount_amt#1011, ws_ext_sales_price#1012, ws_ext_wholesale_cost#1013, ... 10 more fields], `spark_catalog`.`tpcds_100`.`web_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "3" : {
            "sign" : -702797607,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 4308487680,
            "rowCount" : 35904064,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (((i_brand_id#1082 = i_brand_id#1155) AND (i_class_id#1084 = i_class_id#1157)) AND (i_category_id#1086 = i_category_id#1159)) "
          },
          "28" : {
            "sign" : -1902449141,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 14972593792,
            "rowCount" : 71983624,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(ws_sold_date_sk#1023) AND dynamicpruning#1290 [ws_sold_date_sk#1023]) "
          }
        },
        "links" : [ {
          "fromId" : 4,
          "fromName" : "LogicalQueryStage",
          "toId" : 3,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "LogicalQueryStage",
          "toId" : 5,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 13,
          "fromName" : "LogicalRelation",
          "toId" : 12,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 16,
          "fromName" : "LogicalRelation",
          "toId" : 15,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 15,
          "fromName" : "Filter",
          "toId" : 14,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 14,
          "fromName" : "Project",
          "toId" : 12,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 12,
          "fromName" : "Filter",
          "toId" : 11,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "Project",
          "toId" : 10,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 14,
          "fromName" : "Project",
          "toId" : 10,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "Join",
          "toId" : 9,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "Project",
          "toId" : 8,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 21,
          "fromName" : "LogicalRelation",
          "toId" : 20,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 24,
          "fromName" : "LogicalRelation",
          "toId" : 23,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 23,
          "fromName" : "Filter",
          "toId" : 22,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 22,
          "fromName" : "Project",
          "toId" : 20,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 20,
          "fromName" : "Filter",
          "toId" : 19,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 19,
          "fromName" : "Project",
          "toId" : 18,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 22,
          "fromName" : "Project",
          "toId" : 18,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 18,
          "fromName" : "Join",
          "toId" : 17,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 17,
          "fromName" : "Project",
          "toId" : 8,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 29,
          "fromName" : "LogicalRelation",
          "toId" : 28,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 32,
          "fromName" : "LogicalRelation",
          "toId" : 31,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 31,
          "fromName" : "Filter",
          "toId" : 30,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 30,
          "fromName" : "Project",
          "toId" : 28,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 28,
          "fromName" : "Filter",
          "toId" : 27,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 27,
          "fromName" : "Project",
          "toId" : 26,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 30,
          "fromName" : "Project",
          "toId" : 26,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 26,
          "fromName" : "Join",
          "toId" : 25,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 25,
          "fromName" : "Project",
          "toId" : 8,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "Union",
          "toId" : 7,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Aggregate",
          "toId" : 5,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 5,
          "fromName" : "Filter",
          "toId" : 3,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Join",
          "toId" : 2,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "LocalLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "LocalLimit",
          "toId" : 0,
          "toName" : "GlobalLimit",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [i_brand_id#1082 ASC NULLS FIRST, i_class_id#1084 ASC NULLS FIRST, i_category_id#1086 ASC NULLS FIRST], true\n      +- Join Inner, (((i_brand_id#1082 = i_brand_id#1155) AND (i_class_id#1084 = i_class_id#1157)) AND (i_category_id#1086 = i_category_id#1159))\n         :- LogicalQueryStage Filter (isnotnull(sales#731) AND (cast(sales#731 as decimal(32,6)) > cast(scalar-subquery#735 [] as decimal(32,6)))), BroadcastQueryStage 101\n         +- Filter (isnotnull(sales#737) AND (cast(sales#737 as decimal(32,6)) > cast(scalar-subquery#741 [] as decimal(32,6))))\n            :  +- Aggregate [avg((cast(quantity#746 as decimal(10,0)) * list_price#747)) AS average_sales#752]\n            :     +- Union false, false\n            :        :- Project [ss_quantity#886 AS quantity#746, ss_list_price#888 AS list_price#747]\n            :        :  +- Join Inner, (ss_sold_date_sk#899 = d_date_sk#900)\n            :        :     :- Project [ss_quantity#886, ss_list_price#888, ss_sold_date_sk#899]\n            :        :     :  +- Filter (isnotnull(ss_sold_date_sk#899) AND dynamicpruning#1288 [ss_sold_date_sk#899])\n            :        :     :     :  +- Project [d_date_sk#900]\n            :        :     :     :     +- Filter ((isnotnull(d_year#906) AND ((d_year#906 >= 1998) AND (d_year#906 <= 2000))) AND isnotnull(d_date_sk#900))\n            :        :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#900,d_date_id#901,d_date#902,d_month_seq#903,d_week_seq#904,d_quarter_seq#905,d_year#906,d_dow#907,d_moy#908,d_dom#909,d_qoy#910,d_fy_year#911,d_fy_quarter_seq#912,d_fy_week_seq#913,d_day_name#914,d_quarter_name#915,d_holiday#916,d_weekend#917,d_following_holiday#918,d_first_dom#919,d_last_dom#920,d_same_day_ly#921,d_same_day_lq#922,d_current_day#923,... 4 more fields] parquet\n            :        :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#877,ss_item_sk#878,ss_customer_sk#879,ss_cdemo_sk#880,ss_hdemo_sk#881,ss_addr_sk#882,ss_store_sk#883,ss_promo_sk#884,ss_ticket_number#885L,ss_quantity#886,ss_wholesale_cost#887,ss_list_price#888,ss_sales_price#889,ss_ext_discount_amt#890,ss_ext_sales_price#891,ss_ext_wholesale_cost#892,ss_ext_list_price#893,ss_ext_tax#894,ss_coupon_amt#895,ss_net_paid#896,ss_net_paid_inc_tax#897,ss_net_profit#898,ss_sold_date_sk#899] parquet\n            :        :     +- Project [d_date_sk#900]\n            :        :        +- Filter ((isnotnull(d_year#906) AND ((d_year#906 >= 1998) AND (d_year#906 <= 2000))) AND isnotnull(d_date_sk#900))\n            :        :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#900,d_date_id#901,d_date#902,d_month_seq#903,d_week_seq#904,d_quarter_seq#905,d_year#906,d_dow#907,d_moy#908,d_dom#909,d_qoy#910,d_fy_year#911,d_fy_quarter_seq#912,d_fy_week_seq#913,d_day_name#914,d_quarter_name#915,d_holiday#916,d_weekend#917,d_following_holiday#918,d_first_dom#919,d_last_dom#920,d_same_day_ly#921,d_same_day_lq#922,d_current_day#923,... 4 more fields] parquet\n            :        :- Project [cs_quantity#945 AS quantity#748, cs_list_price#947 AS list_price#749]\n            :        :  +- Join Inner, (cs_sold_date_sk#961 = d_date_sk#962)\n            :        :     :- Project [cs_quantity#945, cs_list_price#947, cs_sold_date_sk#961]\n            :        :     :  +- Filter (isnotnull(cs_sold_date_sk#961) AND dynamicpruning#1289 [cs_sold_date_sk#961])\n            :        :     :     :  +- Project [d_date_sk#962]\n            :        :     :     :     +- Filter ((isnotnull(d_year#968) AND ((d_year#968 >= 1998) AND (d_year#968 <= 2000))) AND isnotnull(d_date_sk#962))\n            :        :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#962,d_date_id#963,d_date#964,d_month_seq#965,d_week_seq#966,d_quarter_seq#967,d_year#968,d_dow#969,d_moy#970,d_dom#971,d_qoy#972,d_fy_year#973,d_fy_quarter_seq#974,d_fy_week_seq#975,d_day_name#976,d_quarter_name#977,d_holiday#978,d_weekend#979,d_following_holiday#980,d_first_dom#981,d_last_dom#982,d_same_day_ly#983,d_same_day_lq#984,d_current_day#985,... 4 more fields] parquet\n            :        :     :     +- Relation spark_catalog.tpcds_100.catalog_sales[cs_sold_time_sk#928,cs_ship_date_sk#929,cs_bill_customer_sk#930,cs_bill_cdemo_sk#931,cs_bill_hdemo_sk#932,cs_bill_addr_sk#933,cs_ship_customer_sk#934,cs_ship_cdemo_sk#935,cs_ship_hdemo_sk#936,cs_ship_addr_sk#937,cs_call_center_sk#938,cs_catalog_page_sk#939,cs_ship_mode_sk#940,cs_warehouse_sk#941,cs_item_sk#942,cs_promo_sk#943,cs_order_number#944L,cs_quantity#945,cs_wholesale_cost#946,cs_list_price#947,cs_sales_price#948,cs_ext_discount_amt#949,cs_ext_sales_price#950,cs_ext_wholesale_cost#951,... 10 more fields] parquet\n            :        :     +- Project [d_date_sk#962]\n            :        :        +- Filter ((isnotnull(d_year#968) AND ((d_year#968 >= 1998) AND (d_year#968 <= 2000))) AND isnotnull(d_date_sk#962))\n            :        :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#962,d_date_id#963,d_date#964,d_month_seq#965,d_week_seq#966,d_quarter_seq#967,d_year#968,d_dow#969,d_moy#970,d_dom#971,d_qoy#972,d_fy_year#973,d_fy_quarter_seq#974,d_fy_week_seq#975,d_day_name#976,d_quarter_name#977,d_holiday#978,d_weekend#979,d_following_holiday#980,d_first_dom#981,d_last_dom#982,d_same_day_ly#983,d_same_day_lq#984,d_current_day#985,... 4 more fields] parquet\n            :        +- Project [ws_quantity#1007 AS quantity#750, ws_list_price#1009 AS list_price#751]\n            :           +- Join Inner, (ws_sold_date_sk#1023 = d_date_sk#1024)\n            :              :- Project [ws_quantity#1007, ws_list_price#1009, ws_sold_date_sk#1023]\n            :              :  +- Filter (isnotnull(ws_sold_date_sk#1023) AND dynamicpruning#1290 [ws_sold_date_sk#1023])\n            :              :     :  +- Project [d_date_sk#1024]\n            :              :     :     +- Filter ((isnotnull(d_year#1030) AND ((d_year#1030 >= 1998) AND (d_year#1030 <= 2000))) AND isnotnull(d_date_sk#1024))\n            :              :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#1024,d_date_id#1025,d_date#1026,d_month_seq#1027,d_week_seq#1028,d_quarter_seq#1029,d_year#1030,d_dow#1031,d_moy#1032,d_dom#1033,d_qoy#1034,d_fy_year#1035,d_fy_quarter_seq#1036,d_fy_week_seq#1037,d_day_name#1038,d_quarter_name#1039,d_holiday#1040,d_weekend#1041,d_following_holiday#1042,d_first_dom#1043,d_last_dom#1044,d_same_day_ly#1045,d_same_day_lq#1046,d_current_day#1047,... 4 more fields] parquet\n            :              :     +- Relation spark_catalog.tpcds_100.web_sales[ws_sold_time_sk#990,ws_ship_date_sk#991,ws_item_sk#992,ws_bill_customer_sk#993,ws_bill_cdemo_sk#994,ws_bill_hdemo_sk#995,ws_bill_addr_sk#996,ws_ship_customer_sk#997,ws_ship_cdemo_sk#998,ws_ship_hdemo_sk#999,ws_ship_addr_sk#1000,ws_web_page_sk#1001,ws_web_site_sk#1002,ws_ship_mode_sk#1003,ws_warehouse_sk#1004,ws_promo_sk#1005,ws_order_number#1006L,ws_quantity#1007,ws_wholesale_cost#1008,ws_list_price#1009,ws_sales_price#1010,ws_ext_discount_amt#1011,ws_ext_sales_price#1012,ws_ext_wholesale_cost#1013,... 10 more fields] parquet\n            :              +- Project [d_date_sk#1024]\n            :                 +- Filter ((isnotnull(d_year#1030) AND ((d_year#1030 >= 1998) AND (d_year#1030 <= 2000))) AND isnotnull(d_date_sk#1024))\n            :                    +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#1024,d_date_id#1025,d_date#1026,d_month_seq#1027,d_week_seq#1028,d_quarter_seq#1029,d_year#1030,d_dow#1031,d_moy#1032,d_dom#1033,d_qoy#1034,d_fy_year#1035,d_fy_quarter_seq#1036,d_fy_week_seq#1037,d_day_name#1038,d_quarter_name#1039,d_holiday#1040,d_weekend#1041,d_following_holiday#1042,d_first_dom#1043,d_last_dom#1044,d_same_day_ly#1045,d_same_day_lq#1046,d_current_day#1047,... 4 more fields] parquet\n            +- LogicalQueryStage Aggregate [i_brand_id#1155, i_class_id#1157, i_category_id#1159], [store AS channel#736, i_brand_id#1155, i_class_id#1157, i_category_id#1159, sum((cast(ss_quantity#1134 as decimal(10,0)) * ss_list_price#1136)) AS sales#737, count(1) AS number_sales#738L], HashAggregate(keys=[i_brand_id#1155, i_class_id#1157, i_category_id#1159], functions=[sum((cast(ss_quantity#1134 as decimal(10,0)) * ss_list_price#1136)), count(1)])\n"
      },
      "IM" : {
        "inputSizeInBytes" : 814912,
        "inputRowCount" : 11984
      },
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "StartTimeInMs" : 1702226700156,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 11342,
        "IOBytes" : {
          "Total" : 1476345255,
          "Details" : {
            "IR" : 1475721016,
            "IW" : 0,
            "SR" : 605091,
            "SW" : 19148
          }
        }
      }
    },
    "6" : {
      "LQP" : {
        "operators" : {
          "45" : {
            "sign" : 579430964,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 86282466,
            "rowCount" : 202541,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(i_item_sk#1075) AND isnotnull(i_brand_id#1082)) AND isnotnull(i_class_id#1084)) AND isnotnull(i_category_id#1086)) "
          },
          "98" : {
            "sign" : 683629544,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#1170, d_date_id#1171, d_date#1172, d_month_seq#1173, d_week_seq#1174, d_quarter_seq#1175, d_year#1176, d_dow#1177, d_moy#1178, d_dom#1179, d_qoy#1180, d_fy_year#1181, d_fy_quarter_seq#1182, d_fy_week_seq#1183, d_day_name#1184, d_quarter_name#1185, d_holiday#1186, d_weekend#1187, d_following_holiday#1188, d_first_dom#1189, d_last_dom#1190, d_same_day_ly#1191, d_same_day_lq#1192, d_current_day#1193, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "113" : {
            "sign" : -1270097614,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 4875456,
            "rowCount" : 203144,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (((i_brand_id#762 <=> i_brand_id#784) AND (i_class_id#764 <=> i_class_id#786)) AND (i_category_id#766 <=> i_category_id#788)) "
          },
          "34" : {
            "sign" : -117080718,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 17256,
            "rowCount" : 1438,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#70] "
          },
          "67" : {
            "sign" : 2019201408,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 17256,
            "rowCount" : 1438,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#900] "
          },
          "120" : {
            "sign" : -1448453368,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 86282466,
            "rowCount" : 202541,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(i_item_sk#1148) AND isnotnull(i_brand_id#1155)) AND isnotnull(i_class_id#1157)) AND isnotnull(i_category_id#1159)) "
          },
          "93" : {
            "sign" : -303911461,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 7701269884,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#1126, ss_quantity#1134, ss_list_price#1136, ss_sold_date_sk#1147] "
          },
          "12" : {
            "sign" : 571393713,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(ss_item_sk#1053) AND isnotnull(ss_sold_date_sk#1074)) AND dynamicpruning#1303 [ss_sold_date_sk#1074]) "
          },
          "66" : {
            "sign" : -1972788865,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#877, ss_item_sk#878, ss_customer_sk#879, ss_cdemo_sk#880, ss_hdemo_sk#881, ss_addr_sk#882, ss_store_sk#883, ss_promo_sk#884, ss_ticket_number#885L, ss_quantity#886, ss_wholesale_cost#887, ss_list_price#888, ss_sales_price#889, ss_ext_discount_amt#890, ss_ext_sales_price#891, ss_ext_wholesale_cost#892, ss_ext_list_price#893, ss_ext_tax#894, ss_coupon_amt#895, ss_net_paid#896, ss_net_paid_inc_tax#897, ss_net_profit#898, ss_sold_date_sk#899], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "89" : {
            "sign" : -309843437,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 11490316840,
            "rowCount" : 287257921,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_item_sk#1126 = i_item_sk#1148) "
          },
          "51" : {
            "sign" : -1922967392,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 1224753985121117440,
            "rowCount" : 61237699256055872,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_brand_id#762 AS brand_id#742, i_class_id#764 AS class_id#743, i_category_id#766 AS category_id#744] "
          },
          "124" : {
            "sign" : -14482712,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 1224753985121117440,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (((brand_id#742 <=> i_brand_id#834) AND (class_id#743 <=> i_class_id#836)) AND (category_id#744 <=> i_category_id#838)) "
          },
          "84" : {
            "sign" : -626435234,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 353748,
            "rowCount" : 1438,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(d_year#1030) AND ((d_year#1030 >= 1998) AND (d_year#1030 <= 2000))) AND isnotnull(d_date_sk#1024)) "
          },
          "8" : {
            "sign" : 139041030,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 46207619304,
            "rowCount" : 1925317471,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#1053, ss_quantity#1061, ss_list_price#1063] "
          },
          "73" : {
            "sign" : 1500374164,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 29800787536,
            "rowCount" : 143273017,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(cs_sold_date_sk#961) AND dynamicpruning#1289 [cs_sold_date_sk#961]) "
          },
          "78" : {
            "sign" : 17831375,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 1389912100,
            "rowCount" : 69495605,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_quantity#1007 AS quantity#750, ws_list_price#1009 AS list_price#751] "
          },
          "19" : {
            "sign" : -1755539215,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#1209, d_date_id#1210, d_date#1211, d_month_seq#1212, d_week_seq#1213, d_quarter_seq#1214, d_year#1215, d_dow#1216, d_moy#1217, d_dom#1218, d_qoy#1219, d_fy_year#1220, d_fy_quarter_seq#1221, d_fy_week_seq#1222, d_day_name#1223, d_quarter_name#1224, d_holiday#1225, d_weekend#1226, d_following_holiday#1227, d_first_dom#1228, d_last_dom#1229, d_same_day_ly#1230, d_same_day_lq#1231, d_current_day#1232, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "100" : {
            "sign" : 1734827371,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 492,
            "rowCount" : 2,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(d_year#1243) AND isnotnull(d_moy#1245)) AND isnotnull(d_dom#1246)) AND (((d_year#1243 = 1998) AND (d_moy#1245 = 12)) AND (d_dom#1246 = 16))) "
          },
          "23" : {
            "sign" : -1756391561,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 86282466,
            "rowCount" : 202541,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(i_brand_id#32) AND isnotnull(i_class_id#34)) AND isnotnull(i_category_id#36)) "
          },
          "62" : {
            "sign" : 869525063,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 5310811700,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_quantity#886 AS quantity#746, ss_list_price#888 AS list_price#747] "
          },
          "128" : {
            "sign" : 899852841,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 3617396482656,
            "rowCount" : 301449706888,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#48] "
          },
          "4" : {
            "sign" : 1357304059,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 10408960,
            "rowCount" : 136960,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(sales#731) AND (cast(sales#731 as decimal(32,6)) > cast(scalar-subquery#735 [] as decimal(32,6)))) "
          },
          "121" : {
            "sign" : -1752719423,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 86904000,
            "rowCount" : 204000,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [i_item_sk#1148, i_item_id#1149, i_rec_start_date#1150, i_rec_end_date#1151, i_item_desc#1152, i_current_price#1153, i_wholesale_cost#1154, i_brand_id#1155, i_brand#1156, i_class_id#1157, i_class#1158, i_category_id#1159, i_category#1160, i_manufact_id#1161, i_manufact#1162, i_size#1163, i_formulation#1164, i_color#1165, i_units#1166, i_container#1167, i_manager_id#1168, i_product_name#1169], `spark_catalog`.`tpcds_100`.`item`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "88" : {
            "sign" : -1250291275,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 9192253472,
            "rowCount" : 287257921,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_quantity#1134, ss_list_price#1136, i_brand_id#1155, i_class_id#1157, i_category_id#1159] "
          },
          "77" : {
            "sign" : -169490734,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#962, d_date_id#963, d_date#964, d_month_seq#965, d_week_seq#966, d_quarter_seq#967, d_year#968, d_dow#969, d_moy#970, d_dom#971, d_qoy#972, d_fy_year#973, d_fy_quarter_seq#974, d_fy_week_seq#975, d_day_name#976, d_quarter_name#977, d_holiday#978, d_weekend#979, d_following_holiday#980, d_first_dom#981, d_last_dom#982, d_same_day_ly#983, d_same_day_lq#984, d_current_day#985, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "40" : {
            "sign" : 366726337,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 2877489060,
            "rowCount" : 143874453,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_brand_id#784, i_class_id#786, i_category_id#788], ShuffleQueryStage 47 "
          },
          "110" : {
            "sign" : 2101479604,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 4400725648,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#48, ss_sold_date_sk#69] "
          },
          "15" : {
            "sign" : 1866012666,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(d_week_seq#1101) AND (d_week_seq#1101 = scalar-subquery#734 [])) AND isnotnull(d_date_sk#1097)) "
          },
          "11" : {
            "sign" : 1222696026,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 7701269884,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#1053, ss_quantity#1061, ss_list_price#1063, ss_sold_date_sk#1074] "
          },
          "104" : {
            "sign" : -876321123,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 1224753985121117440,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (((brand_id#742 <=> i_brand_id#834) AND (class_id#743 <=> i_class_id#836)) AND (category_id#744 <=> i_category_id#838)) "
          },
          "90" : {
            "sign" : -2676572,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 46207619304,
            "rowCount" : 1925317471,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#1126, ss_quantity#1134, ss_list_price#1136] "
          },
          "9" : {
            "sign" : -1944592689,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 61610159072,
            "rowCount" : 1925317471,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#1074 = d_date_sk#1097) "
          },
          "132" : {
            "sign" : 1549879919,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 8125760,
            "rowCount" : 203144,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_item_sk#755, i_brand_id#762, i_class_id#764, i_category_id#766], ShuffleQueryStage 38 "
          },
          "44" : {
            "sign" : 1540331732,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 4860984,
            "rowCount" : 202541,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_item_sk#1075, i_brand_id#1082, i_class_id#1084, i_category_id#1086] "
          },
          "33" : {
            "sign" : 1104597854,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#47, ss_item_sk#48, ss_customer_sk#49, ss_cdemo_sk#50, ss_hdemo_sk#51, ss_addr_sk#52, ss_store_sk#53, ss_promo_sk#54, ss_ticket_number#55L, ss_quantity#56, ss_wholesale_cost#57, ss_list_price#58, ss_sales_price#59, ss_ext_discount_amt#60, ss_ext_sales_price#61, ss_ext_wholesale_cost#62, ss_ext_list_price#63, ss_ext_tax#64, ss_coupon_amt#65, ss_net_paid#66, ss_net_paid_inc_tax#67, ss_net_profit#68, ss_sold_date_sk#69], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "117" : {
            "sign" : -1902204624,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1048632,
            "rowCount" : 7,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#1170], BroadcastQueryStage 34 "
          },
          "22" : {
            "sign" : 2089743597,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 4860984,
            "rowCount" : 202541,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_item_sk#25, i_brand_id#32, i_class_id#34, i_category_id#36] "
          },
          "56" : {
            "sign" : 1070585237,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 4875456,
            "rowCount" : 203144,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (((i_brand_id#762 <=> i_brand_id#784) AND (i_class_id#764 <=> i_class_id#786)) AND (i_category_id#766 <=> i_category_id#788)) "
          },
          "55" : {
            "sign" : -1598388943,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1057344,
            "rowCount" : 1096,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#70], BroadcastQueryStage 11 "
          },
          "26" : {
            "sign" : -1989347848,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 1224753985121117440,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [brand_id#742, class_id#743, category_id#744], [brand_id#742, class_id#743, category_id#744] "
          },
          "134" : {
            "sign" : -365669692,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1379777760,
            "rowCount" : 43118055,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_brand_id#834, i_class_id#836, i_category_id#838], ShuffleQueryStage 60 "
          },
          "50" : {
            "sign" : -1608368025,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 1224753985121117440,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [brand_id#742, class_id#743, category_id#744], [brand_id#742, class_id#743, category_id#744] "
          },
          "123" : {
            "sign" : -1382179355,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 1224753985125978424,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (((i_brand_id#32 = brand_id#742) AND (i_class_id#34 = class_id#743)) AND (i_category_id#36 = category_id#744)) "
          },
          "37" : {
            "sign" : -1159939661,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1057344,
            "rowCount" : 1096,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#70], BroadcastQueryStage 0 "
          },
          "68" : {
            "sign" : -2071970095,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 353748,
            "rowCount" : 1438,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(d_year#906) AND ((d_year#906 >= 1998) AND (d_year#906 <= 2000))) AND isnotnull(d_date_sk#900)) "
          },
          "61" : {
            "sign" : -1298322270,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Union",
            "sizeInBytes" : 9471049040,
            "rowCount" : 473552452,
            "isRuntime" : false,
            "predicate" : " (unknown) Union Arguments: false, false "
          },
          "107" : {
            "sign" : -105466558,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 1714655579169564416,
            "rowCount" : 61237699256055872,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_item_sk#48 = i_item_sk#755) "
          },
          "13" : {
            "sign" : 913239237,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#1052, ss_item_sk#1053, ss_customer_sk#1054, ss_cdemo_sk#1055, ss_hdemo_sk#1056, ss_addr_sk#1057, ss_store_sk#1058, ss_promo_sk#1059, ss_ticket_number#1060L, ss_quantity#1061, ss_wholesale_cost#1062, ss_list_price#1063, ss_sales_price#1064, ss_ext_discount_amt#1065, ss_ext_sales_price#1066, ss_ext_wholesale_cost#1067, ss_ext_list_price#1068, ss_ext_tax#1069, ss_coupon_amt#1070, ss_net_paid#1071, ss_net_paid_inc_tax#1072, ss_net_profit#1073, ss_sold_date_sk#1074], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "46" : {
            "sign" : 73332589,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 86904000,
            "rowCount" : 204000,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [i_item_sk#1075, i_item_id#1076, i_rec_start_date#1077, i_rec_end_date#1078, i_item_desc#1079, i_current_price#1080, i_wholesale_cost#1081, i_brand_id#1082, i_brand#1083, i_class_id#1084, i_class#1085, i_category_id#1086, i_category#1087, i_manufact_id#1088, i_manufact#1089, i_size#1090, i_formulation#1091, i_color#1092, i_units#1093, i_container#1094, i_manager_id#1095, i_product_name#1096], `spark_catalog`.`tpcds_100`.`item`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "99" : {
            "sign" : -79282860,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 24,
            "rowCount" : 2,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_week_seq#1241] "
          },
          "24" : {
            "sign" : 2096275601,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 86904000,
            "rowCount" : 204000,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [i_item_sk#25, i_item_id#26, i_rec_start_date#27, i_rec_end_date#28, i_item_desc#29, i_current_price#30, i_wholesale_cost#31, i_brand_id#32, i_brand#33, i_class_id#34, i_class#35, i_category_id#36, i_category#37, i_manufact_id#38, i_manufact#39, i_size#40, i_formulation#41, i_color#42, i_units#43, i_container#44, i_manager_id#45, i_product_name#46], `spark_catalog`.`tpcds_100`.`item`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "94" : {
            "sign" : -604473204,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(ss_item_sk#1126) AND isnotnull(ss_sold_date_sk#1147)) AND dynamicpruning#1310 [ss_sold_date_sk#1147]) "
          },
          "83" : {
            "sign" : -1100969675,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 17256,
            "rowCount" : 1438,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#1024] "
          },
          "35" : {
            "sign" : 1340377833,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 353748,
            "rowCount" : 1438,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(d_year#76) AND ((d_year#76 >= 1998) AND (d_year#76 <= 2000))) AND isnotnull(d_date_sk#70)) "
          },
          "16" : {
            "sign" : 682718368,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#1097, d_date_id#1098, d_date#1099, d_month_seq#1100, d_week_seq#1101, d_quarter_seq#1102, d_year#1103, d_dow#1104, d_moy#1105, d_dom#1106, d_qoy#1107, d_fy_year#1108, d_fy_quarter_seq#1109, d_fy_week_seq#1110, d_day_name#1111, d_quarter_name#1112, d_holiday#1113, d_weekend#1114, d_following_holiday#1115, d_first_dom#1116, d_last_dom#1117, d_same_day_ly#1118, d_same_day_lq#1119, d_current_day#1120, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "79" : {
            "sign" : 1503367439,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 1945876940,
            "rowCount" : 69495605,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ws_sold_date_sk#1023 = d_date_sk#1024) "
          },
          "5" : {
            "sign" : -1173314487,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 10408960,
            "rowCount" : 136960,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [i_brand_id#1082, i_class_id#1084, i_category_id#1086], [store AS channel#730, i_brand_id#1082, i_class_id#1084, i_category_id#1086, sum((cast(ss_quantity#1061 as decimal(10,0)) * ss_list_price#1063)) AS sales#731, count(1) AS number_sales#732L] "
          },
          "103" : {
            "sign" : 1717410210,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 1224753985125978424,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (((i_brand_id#32 = brand_id#742) AND (i_class_id#34 = class_id#743)) AND (i_category_id#36 = category_id#744)) "
          },
          "112" : {
            "sign" : -1598387920,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1057344,
            "rowCount" : 1096,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#70], BroadcastQueryStage 23 "
          },
          "72" : {
            "sign" : 1942236716,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 3438552408,
            "rowCount" : 143273017,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_quantity#945, cs_list_price#947, cs_sold_date_sk#961] "
          },
          "10" : {
            "sign" : 1073081792,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 7701269884,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (ss_item_sk#1053 = ss_item_sk#745) "
          },
          "59" : {
            "sign" : -365670591,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1379777760,
            "rowCount" : 43118055,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_brand_id#834, i_class_id#836, i_category_id#838], ShuffleQueryStage 52 "
          },
          "87" : {
            "sign" : 778880288,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 10408960,
            "rowCount" : 136960,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [i_brand_id#1155, i_class_id#1157, i_category_id#1159], [store AS channel#736, i_brand_id#1155, i_class_id#1157, i_category_id#1159, sum((cast(ss_quantity#1134 as decimal(10,0)) * ss_list_price#1136)) AS sales#737, count(1) AS number_sales#738L] "
          },
          "48" : {
            "sign" : 1987472580,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 1224753985125978424,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (((i_brand_id#32 = brand_id#742) AND (i_class_id#34 = class_id#743)) AND (i_category_id#36 = category_id#744)) "
          },
          "21" : {
            "sign" : -1061891914,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 1224753985125978424,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (((i_brand_id#32 = brand_id#742) AND (i_class_id#34 = class_id#743)) AND (i_category_id#36 = category_id#744)) "
          },
          "116" : {
            "sign" : -365670467,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1379777760,
            "rowCount" : 43118055,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_brand_id#834, i_class_id#836, i_category_id#838], ShuffleQueryStage 56 "
          },
          "76" : {
            "sign" : -1695423935,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 353748,
            "rowCount" : 1438,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(d_year#968) AND ((d_year#968 >= 1998) AND (d_year#968 <= 2000))) AND isnotnull(d_date_sk#962)) "
          },
          "54" : {
            "sign" : 174031885,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 6028994137760,
            "rowCount" : 301449706888,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#69 = d_date_sk#70) "
          },
          "43" : {
            "sign" : -917424425,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 4860984,
            "rowCount" : 202541,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (i_item_sk#1075 = ss_item_sk#745) "
          },
          "127" : {
            "sign" : -2083387522,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 1714655579169564416,
            "rowCount" : 61237699256055872,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_item_sk#48 = i_item_sk#755) "
          },
          "65" : {
            "sign" : 1377797290,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(ss_sold_date_sk#899) AND dynamicpruning#1288 [ss_sold_date_sk#899]) "
          },
          "71" : {
            "sign" : 824386657,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 3878455336,
            "rowCount" : 138516262,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cs_sold_date_sk#961 = d_date_sk#962) "
          },
          "57" : {
            "sign" : 1549877842,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 8125760,
            "rowCount" : 203144,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_item_sk#755, i_brand_id#762, i_class_id#764, i_category_id#766], ShuffleQueryStage 13 "
          },
          "108" : {
            "sign" : 899851787,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 3617396482656,
            "rowCount" : 301449706888,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#48] "
          },
          "32" : {
            "sign" : -1052942334,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(ss_item_sk#48) AND isnotnull(ss_sold_date_sk#69)) AND dynamicpruning#1291 [ss_sold_date_sk#69]) "
          },
          "80" : {
            "sign" : 49678577,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 1727606976,
            "rowCount" : 71983624,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_quantity#1007, ws_list_price#1009, ws_sold_date_sk#1023] "
          },
          "106" : {
            "sign" : -694393982,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 1224753985121117440,
            "rowCount" : 61237699256055872,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_brand_id#762 AS brand_id#742, i_class_id#764 AS class_id#743, i_category_id#766 AS category_id#744] "
          },
          "82" : {
            "sign" : 1698660872,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 14972593792,
            "rowCount" : 71983624,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ws_sold_time_sk#990, ws_ship_date_sk#991, ws_item_sk#992, ws_bill_customer_sk#993, ws_bill_cdemo_sk#994, ws_bill_hdemo_sk#995, ws_bill_addr_sk#996, ws_ship_customer_sk#997, ws_ship_cdemo_sk#998, ws_ship_hdemo_sk#999, ws_ship_addr_sk#1000, ws_web_page_sk#1001, ws_web_site_sk#1002, ws_ship_mode_sk#1003, ws_warehouse_sk#1004, ws_promo_sk#1005, ws_order_number#1006L, ws_quantity#1007, ws_wholesale_cost#1008, ws_list_price#1009, ws_sales_price#1010, ws_ext_discount_amt#1011, ws_ext_sales_price#1012, ws_ext_wholesale_cost#1013, ... 10 more fields], `spark_catalog`.`tpcds_100`.`web_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "49" : {
            "sign" : 967702723,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 1224753985121117440,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (((brand_id#742 <=> i_brand_id#834) AND (class_id#743 <=> i_class_id#836)) AND (category_id#744 <=> i_category_id#838)) "
          },
          "6" : {
            "sign" : -2124690956,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 9192253472,
            "rowCount" : 287257921,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_quantity#1061, ss_list_price#1063, i_brand_id#1082, i_class_id#1084, i_category_id#1086] "
          },
          "126" : {
            "sign" : 979536830,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 1224753985121117440,
            "rowCount" : 61237699256055872,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_brand_id#762 AS brand_id#742, i_class_id#764 AS class_id#743, i_category_id#766 AS category_id#744] "
          },
          "36" : {
            "sign" : -232749464,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#70, d_date_id#71, d_date#72, d_month_seq#73, d_week_seq#74, d_quarter_seq#75, d_year#76, d_dow#77, d_moy#78, d_dom#79, d_qoy#80, d_fy_year#81, d_fy_quarter_seq#82, d_fy_week_seq#83, d_day_name#84, d_quarter_name#85, d_holiday#86, d_weekend#87, d_following_holiday#88, d_first_dom#89, d_last_dom#90, d_same_day_ly#91, d_same_day_lq#92, d_current_day#93, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "1" : {
            "sign" : -393757989,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
            "sizeInBytes" : 19722240,
            "rowCount" : 136960,
            "isRuntime" : false,
            "predicate" : " (unknown) LocalLimit Arguments: 100 "
          },
          "39" : {
            "sign" : 1019827343,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 8125760,
            "rowCount" : 203144,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_item_sk#755, i_brand_id#762, i_class_id#764, i_category_id#766], ShuffleQueryStage 1 "
          },
          "17" : {
            "sign" : -2061501032,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 36,
            "rowCount" : 3,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_week_seq#1213] "
          },
          "25" : {
            "sign" : -929833631,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 1224753985121117440,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (((brand_id#742 <=> i_brand_id#834) AND (class_id#743 <=> i_class_id#836)) AND (category_id#744 <=> i_category_id#838)) "
          },
          "60" : {
            "sign" : -1809172647,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 24,
            "rowCount" : 1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [avg((cast(quantity#746 as decimal(10,0)) * list_price#747)) AS average_sales#752] "
          },
          "14" : {
            "sign" : 707519831,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 876588,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#1097] "
          },
          "133" : {
            "sign" : 366727329,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 2877489060,
            "rowCount" : 143874453,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_brand_id#784, i_class_id#786, i_category_id#788], ShuffleQueryStage 58 "
          },
          "47" : {
            "sign" : 23707703,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 408251328375326141,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_item_sk#25 AS ss_item_sk#745] "
          },
          "122" : {
            "sign" : -1413048228,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 408251328375326141,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_item_sk#25 AS ss_item_sk#745] "
          },
          "111" : {
            "sign" : -109048900,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(ss_item_sk#48) AND isnotnull(ss_sold_date_sk#69)) AND dynamicpruning#1297 [ss_sold_date_sk#69]) "
          },
          "102" : {
            "sign" : 1324241425,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 408251328375326141,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_item_sk#25 AS ss_item_sk#745] "
          },
          "31" : {
            "sign" : -948624390,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 4400725648,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#48, ss_sold_date_sk#69] "
          },
          "96" : {
            "sign" : 1096234976,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 876588,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#1170] "
          },
          "69" : {
            "sign" : -820074406,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#900, d_date_id#901, d_date#902, d_month_seq#903, d_week_seq#904, d_quarter_seq#905, d_year#906, d_dow#907, d_moy#908, d_dom#909, d_qoy#910, d_fy_year#911, d_fy_quarter_seq#912, d_fy_week_seq#913, d_day_name#914, d_quarter_name#915, d_holiday#916, d_weekend#917, d_following_holiday#918, d_first_dom#919, d_last_dom#920, d_same_day_ly#921, d_same_day_lq#922, d_current_day#923, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "95" : {
            "sign" : 1179432008,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#1125, ss_item_sk#1126, ss_customer_sk#1127, ss_cdemo_sk#1128, ss_hdemo_sk#1129, ss_addr_sk#1130, ss_store_sk#1131, ss_promo_sk#1132, ss_ticket_number#1133L, ss_quantity#1134, ss_wholesale_cost#1135, ss_list_price#1136, ss_sales_price#1137, ss_ext_discount_amt#1138, ss_ext_sales_price#1139, ss_ext_wholesale_cost#1140, ss_ext_list_price#1141, ss_ext_tax#1142, ss_coupon_amt#1143, ss_net_paid#1144, ss_net_paid_inc_tax#1145, ss_net_profit#1146, ss_sold_date_sk#1147], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "58" : {
            "sign" : 366727081,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 2877489060,
            "rowCount" : 143874453,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_brand_id#784, i_class_id#786, i_category_id#788], ShuffleQueryStage 50 "
          },
          "64" : {
            "sign" : 1776873494,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 6601088472,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_quantity#886, ss_list_price#888, ss_sold_date_sk#899] "
          },
          "53" : {
            "sign" : -1868509690,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 3617396482656,
            "rowCount" : 301449706888,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#48] "
          },
          "42" : {
            "sign" : -21562714,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1048632,
            "rowCount" : 7,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#1097], BroadcastQueryStage 9 "
          },
          "75" : {
            "sign" : 406087876,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 17256,
            "rowCount" : 1438,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#962] "
          },
          "115" : {
            "sign" : 366727205,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 2877489060,
            "rowCount" : 143874453,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_brand_id#784, i_class_id#786, i_category_id#788], ShuffleQueryStage 54 "
          },
          "109" : {
            "sign" : 1894574278,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 6028994137760,
            "rowCount" : 301449706888,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#69 = d_date_sk#70) "
          },
          "0" : {
            "sign" : -1382183986,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
            "sizeInBytes" : 12000,
            "rowCount" : 100,
            "isRuntime" : false,
            "predicate" : " (unknown) GlobalLimit Arguments: 100 "
          },
          "20" : {
            "sign" : 1675872213,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 408251328375326141,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_item_sk#25 AS ss_item_sk#745] "
          },
          "27" : {
            "sign" : 1543581019,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 1224753985121117440,
            "rowCount" : 61237699256055872,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_brand_id#762 AS brand_id#742, i_class_id#764 AS class_id#743, i_category_id#766 AS category_id#744] "
          },
          "70" : {
            "sign" : 825651901,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 2770325240,
            "rowCount" : 138516262,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_quantity#945 AS quantity#748, cs_list_price#947 AS list_price#749] "
          },
          "2" : {
            "sign" : 1709700516,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 19722240,
            "rowCount" : 136960,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [i_brand_id#1082 ASC NULLS FIRST, i_class_id#1084 ASC NULLS FIRST, i_category_id#1086 ASC NULLS FIRST], true "
          },
          "86" : {
            "sign" : -799736365,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 10408960,
            "rowCount" : 136960,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(sales#737) AND (cast(sales#737 as decimal(32,6)) > cast(scalar-subquery#741 [] as decimal(32,6)))) "
          },
          "38" : {
            "sign" : -1412645680,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 4875456,
            "rowCount" : 203144,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (((i_brand_id#762 <=> i_brand_id#784) AND (i_class_id#764 <=> i_class_id#786)) AND (i_category_id#766 <=> i_category_id#788)) "
          },
          "81" : {
            "sign" : -1902449141,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 14972593792,
            "rowCount" : 71983624,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(ws_sold_date_sk#1023) AND dynamicpruning#1290 [ws_sold_date_sk#1023]) "
          },
          "118" : {
            "sign" : -1455297653,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 4860984,
            "rowCount" : 202541,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (i_item_sk#1148 = ss_item_sk#745) "
          },
          "92" : {
            "sign" : 500470196,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 7701269884,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (ss_item_sk#1126 = ss_item_sk#745) "
          },
          "125" : {
            "sign" : -1218597883,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 1224753985121117440,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [brand_id#742, class_id#743, category_id#744], [brand_id#742, class_id#743, category_id#744] "
          },
          "18" : {
            "sign" : -1305353512,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 738,
            "rowCount" : 3,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(d_year#1215) AND isnotnull(d_moy#1217)) AND isnotnull(d_dom#1218)) AND (((d_year#1215 = 1999) AND (d_moy#1217 = 12)) AND (d_dom#1218 = 16))) "
          },
          "101" : {
            "sign" : 813769211,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#1237, d_date_id#1238, d_date#1239, d_month_seq#1240, d_week_seq#1241, d_quarter_seq#1242, d_year#1243, d_dow#1244, d_moy#1245, d_dom#1246, d_qoy#1247, d_fy_year#1248, d_fy_quarter_seq#1249, d_fy_week_seq#1250, d_day_name#1251, d_quarter_name#1252, d_holiday#1253, d_weekend#1254, d_following_holiday#1255, d_first_dom#1256, d_last_dom#1257, d_same_day_ly#1258, d_same_day_lq#1259, d_current_day#1260, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "30" : {
            "sign" : 1668181847,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 6028994137760,
            "rowCount" : 301449706888,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#69 = d_date_sk#70) "
          },
          "7" : {
            "sign" : -292159423,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 11490316840,
            "rowCount" : 287257921,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_item_sk#1053 = i_item_sk#1075) "
          },
          "97" : {
            "sign" : -1689547051,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(d_week_seq#1174) AND (d_week_seq#1174 = scalar-subquery#740 [])) AND isnotnull(d_date_sk#1170)) "
          },
          "130" : {
            "sign" : -1598386866,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1057344,
            "rowCount" : 1096,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#70], BroadcastQueryStage 36 "
          },
          "114" : {
            "sign" : 1549878865,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 8125760,
            "rowCount" : 203144,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_item_sk#755, i_brand_id#762, i_class_id#764, i_category_id#766], ShuffleQueryStage 25 "
          },
          "129" : {
            "sign" : 1894575332,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 6028994137760,
            "rowCount" : 301449706888,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#69 = d_date_sk#70) "
          },
          "29" : {
            "sign" : -1722842562,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 3617396482656,
            "rowCount" : 301449706888,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#48] "
          },
          "41" : {
            "sign" : -365671366,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1379777760,
            "rowCount" : 43118055,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_brand_id#834, i_class_id#836, i_category_id#838], ShuffleQueryStage 48 "
          },
          "105" : {
            "sign" : -1787425591,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 1224753985121117440,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [brand_id#742, class_id#743, category_id#744], [brand_id#742, class_id#743, category_id#744] "
          },
          "63" : {
            "sign" : -1804794945,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 7435136380,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#899 = d_date_sk#900) "
          },
          "3" : {
            "sign" : 327734412,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 19722240,
            "rowCount" : 136960,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (((i_brand_id#1082 = i_brand_id#1155) AND (i_class_id#1084 = i_class_id#1157)) AND (i_category_id#1086 = i_category_id#1159)) "
          },
          "74" : {
            "sign" : -70077436,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 29800787536,
            "rowCount" : 143273017,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [cs_sold_time_sk#928, cs_ship_date_sk#929, cs_bill_customer_sk#930, cs_bill_cdemo_sk#931, cs_bill_hdemo_sk#932, cs_bill_addr_sk#933, cs_ship_customer_sk#934, cs_ship_cdemo_sk#935, cs_ship_hdemo_sk#936, cs_ship_addr_sk#937, cs_call_center_sk#938, cs_catalog_page_sk#939, cs_ship_mode_sk#940, cs_warehouse_sk#941, cs_item_sk#942, cs_promo_sk#943, cs_order_number#944L, cs_quantity#945, cs_wholesale_cost#946, cs_list_price#947, cs_sales_price#948, cs_ext_discount_amt#949, cs_ext_sales_price#950, cs_ext_wholesale_cost#951, ... 10 more fields], `spark_catalog`.`tpcds_100`.`catalog_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "91" : {
            "sign" : 787262118,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 61610159072,
            "rowCount" : 1925317471,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#1147 = d_date_sk#1170) "
          },
          "52" : {
            "sign" : -604531872,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 1714655579169564416,
            "rowCount" : 61237699256055872,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_item_sk#48 = i_item_sk#755) "
          },
          "85" : {
            "sign" : -502763688,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#1024, d_date_id#1025, d_date#1026, d_month_seq#1027, d_week_seq#1028, d_quarter_seq#1029, d_year#1030, d_dow#1031, d_moy#1032, d_dom#1033, d_qoy#1034, d_fy_year#1035, d_fy_quarter_seq#1036, d_fy_week_seq#1037, d_day_name#1038, d_quarter_name#1039, d_holiday#1040, d_weekend#1041, d_following_holiday#1042, d_first_dom#1043, d_last_dom#1044, d_same_day_ly#1045, d_same_day_lq#1046, d_current_day#1047, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "131" : {
            "sign" : 743407568,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 4875456,
            "rowCount" : 203144,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (((i_brand_id#762 <=> i_brand_id#784) AND (i_class_id#764 <=> i_class_id#786)) AND (i_category_id#766 <=> i_category_id#788)) "
          },
          "28" : {
            "sign" : -672276879,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 1714655579169564416,
            "rowCount" : 61237699256055872,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_item_sk#48 = i_item_sk#755) "
          },
          "119" : {
            "sign" : -1062759686,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 4860984,
            "rowCount" : 202541,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_item_sk#1148, i_brand_id#1155, i_class_id#1157, i_category_id#1159] "
          }
        },
        "links" : [ {
          "fromId" : 13,
          "fromName" : "LogicalRelation",
          "toId" : 12,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 16,
          "fromName" : "LogicalRelation",
          "toId" : 15,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 19,
          "fromName" : "LogicalRelation",
          "toId" : 18,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 18,
          "fromName" : "Filter",
          "toId" : 17,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 17,
          "fromName" : "Project",
          "toId" : 15,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 15,
          "fromName" : "Filter",
          "toId" : 14,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 14,
          "fromName" : "Project",
          "toId" : 12,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 12,
          "fromName" : "Filter",
          "toId" : 11,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "Project",
          "toId" : 10,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 24,
          "fromName" : "LogicalRelation",
          "toId" : 23,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 23,
          "fromName" : "Filter",
          "toId" : 22,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 22,
          "fromName" : "Project",
          "toId" : 21,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 33,
          "fromName" : "LogicalRelation",
          "toId" : 32,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 36,
          "fromName" : "LogicalRelation",
          "toId" : 35,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 35,
          "fromName" : "Filter",
          "toId" : 34,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 34,
          "fromName" : "Project",
          "toId" : 32,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 32,
          "fromName" : "Filter",
          "toId" : 31,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 31,
          "fromName" : "Project",
          "toId" : 30,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 37,
          "fromName" : "LogicalQueryStage",
          "toId" : 30,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 30,
          "fromName" : "Join",
          "toId" : 29,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 29,
          "fromName" : "Project",
          "toId" : 28,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 39,
          "fromName" : "LogicalQueryStage",
          "toId" : 38,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 40,
          "fromName" : "LogicalQueryStage",
          "toId" : 38,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 38,
          "fromName" : "Join",
          "toId" : 28,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 28,
          "fromName" : "Join",
          "toId" : 27,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 27,
          "fromName" : "Project",
          "toId" : 26,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 26,
          "fromName" : "Aggregate",
          "toId" : 25,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 41,
          "fromName" : "LogicalQueryStage",
          "toId" : 25,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 25,
          "fromName" : "Join",
          "toId" : 21,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 21,
          "fromName" : "Join",
          "toId" : 20,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 20,
          "fromName" : "Project",
          "toId" : 10,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "Join",
          "toId" : 9,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 42,
          "fromName" : "LogicalQueryStage",
          "toId" : 9,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "Join",
          "toId" : 8,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "Project",
          "toId" : 7,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 46,
          "fromName" : "LogicalRelation",
          "toId" : 45,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 45,
          "fromName" : "Filter",
          "toId" : 44,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 44,
          "fromName" : "Project",
          "toId" : 43,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 22,
          "fromName" : "Project",
          "toId" : 48,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 31,
          "fromName" : "Project",
          "toId" : 54,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 55,
          "fromName" : "LogicalQueryStage",
          "toId" : 54,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 54,
          "fromName" : "Join",
          "toId" : 53,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 53,
          "fromName" : "Project",
          "toId" : 52,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 57,
          "fromName" : "LogicalQueryStage",
          "toId" : 56,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 58,
          "fromName" : "LogicalQueryStage",
          "toId" : 56,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 56,
          "fromName" : "Join",
          "toId" : 52,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 52,
          "fromName" : "Join",
          "toId" : 51,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 51,
          "fromName" : "Project",
          "toId" : 50,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 50,
          "fromName" : "Aggregate",
          "toId" : 49,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 59,
          "fromName" : "LogicalQueryStage",
          "toId" : 49,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 49,
          "fromName" : "Join",
          "toId" : 48,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 48,
          "fromName" : "Join",
          "toId" : 47,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 47,
          "fromName" : "Project",
          "toId" : 43,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 43,
          "fromName" : "Join",
          "toId" : 7,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Join",
          "toId" : 6,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Project",
          "toId" : 5,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Aggregate",
          "toId" : 4,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 66,
          "fromName" : "LogicalRelation",
          "toId" : 65,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 69,
          "fromName" : "LogicalRelation",
          "toId" : 68,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 68,
          "fromName" : "Filter",
          "toId" : 67,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 67,
          "fromName" : "Project",
          "toId" : 65,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 65,
          "fromName" : "Filter",
          "toId" : 64,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 64,
          "fromName" : "Project",
          "toId" : 63,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 67,
          "fromName" : "Project",
          "toId" : 63,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 63,
          "fromName" : "Join",
          "toId" : 62,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 62,
          "fromName" : "Project",
          "toId" : 61,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 74,
          "fromName" : "LogicalRelation",
          "toId" : 73,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 77,
          "fromName" : "LogicalRelation",
          "toId" : 76,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 76,
          "fromName" : "Filter",
          "toId" : 75,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 75,
          "fromName" : "Project",
          "toId" : 73,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 73,
          "fromName" : "Filter",
          "toId" : 72,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 72,
          "fromName" : "Project",
          "toId" : 71,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 75,
          "fromName" : "Project",
          "toId" : 71,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 71,
          "fromName" : "Join",
          "toId" : 70,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 70,
          "fromName" : "Project",
          "toId" : 61,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 82,
          "fromName" : "LogicalRelation",
          "toId" : 81,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 85,
          "fromName" : "LogicalRelation",
          "toId" : 84,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 84,
          "fromName" : "Filter",
          "toId" : 83,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 83,
          "fromName" : "Project",
          "toId" : 81,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 81,
          "fromName" : "Filter",
          "toId" : 80,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 80,
          "fromName" : "Project",
          "toId" : 79,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 83,
          "fromName" : "Project",
          "toId" : 79,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 79,
          "fromName" : "Join",
          "toId" : 78,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 78,
          "fromName" : "Project",
          "toId" : 61,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 61,
          "fromName" : "Union",
          "toId" : 60,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 60,
          "fromName" : "Aggregate",
          "toId" : 4,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 4,
          "fromName" : "Filter",
          "toId" : 3,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 95,
          "fromName" : "LogicalRelation",
          "toId" : 94,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 98,
          "fromName" : "LogicalRelation",
          "toId" : 97,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 101,
          "fromName" : "LogicalRelation",
          "toId" : 100,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 100,
          "fromName" : "Filter",
          "toId" : 99,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 99,
          "fromName" : "Project",
          "toId" : 97,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 97,
          "fromName" : "Filter",
          "toId" : 96,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 96,
          "fromName" : "Project",
          "toId" : 94,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 94,
          "fromName" : "Filter",
          "toId" : 93,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 93,
          "fromName" : "Project",
          "toId" : 92,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 22,
          "fromName" : "Project",
          "toId" : 103,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 33,
          "fromName" : "LogicalRelation",
          "toId" : 111,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 34,
          "fromName" : "Project",
          "toId" : 111,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 111,
          "fromName" : "Filter",
          "toId" : 110,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 110,
          "fromName" : "Project",
          "toId" : 109,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 112,
          "fromName" : "LogicalQueryStage",
          "toId" : 109,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 109,
          "fromName" : "Join",
          "toId" : 108,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 108,
          "fromName" : "Project",
          "toId" : 107,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 114,
          "fromName" : "LogicalQueryStage",
          "toId" : 113,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 115,
          "fromName" : "LogicalQueryStage",
          "toId" : 113,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 113,
          "fromName" : "Join",
          "toId" : 107,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 107,
          "fromName" : "Join",
          "toId" : 106,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 106,
          "fromName" : "Project",
          "toId" : 105,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 105,
          "fromName" : "Aggregate",
          "toId" : 104,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 116,
          "fromName" : "LogicalQueryStage",
          "toId" : 104,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 104,
          "fromName" : "Join",
          "toId" : 103,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 103,
          "fromName" : "Join",
          "toId" : 102,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 102,
          "fromName" : "Project",
          "toId" : 92,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 92,
          "fromName" : "Join",
          "toId" : 91,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 117,
          "fromName" : "LogicalQueryStage",
          "toId" : 91,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 91,
          "fromName" : "Join",
          "toId" : 90,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 90,
          "fromName" : "Project",
          "toId" : 89,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 121,
          "fromName" : "LogicalRelation",
          "toId" : 120,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 120,
          "fromName" : "Filter",
          "toId" : 119,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 119,
          "fromName" : "Project",
          "toId" : 118,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 22,
          "fromName" : "Project",
          "toId" : 123,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 110,
          "fromName" : "Project",
          "toId" : 129,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 130,
          "fromName" : "LogicalQueryStage",
          "toId" : 129,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 129,
          "fromName" : "Join",
          "toId" : 128,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 128,
          "fromName" : "Project",
          "toId" : 127,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 132,
          "fromName" : "LogicalQueryStage",
          "toId" : 131,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 133,
          "fromName" : "LogicalQueryStage",
          "toId" : 131,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 131,
          "fromName" : "Join",
          "toId" : 127,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 127,
          "fromName" : "Join",
          "toId" : 126,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 126,
          "fromName" : "Project",
          "toId" : 125,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 125,
          "fromName" : "Aggregate",
          "toId" : 124,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 134,
          "fromName" : "LogicalQueryStage",
          "toId" : 124,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 124,
          "fromName" : "Join",
          "toId" : 123,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 123,
          "fromName" : "Join",
          "toId" : 122,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 122,
          "fromName" : "Project",
          "toId" : 118,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 118,
          "fromName" : "Join",
          "toId" : 89,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 89,
          "fromName" : "Join",
          "toId" : 88,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 88,
          "fromName" : "Project",
          "toId" : 87,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 87,
          "fromName" : "Aggregate",
          "toId" : 86,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 60,
          "fromName" : "Aggregate",
          "toId" : 86,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 86,
          "fromName" : "Filter",
          "toId" : 3,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Join",
          "toId" : 2,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "LocalLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "LocalLimit",
          "toId" : 0,
          "toName" : "GlobalLimit",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [i_brand_id#1082 ASC NULLS FIRST, i_class_id#1084 ASC NULLS FIRST, i_category_id#1086 ASC NULLS FIRST], true\n      +- Join Inner, (((i_brand_id#1082 = i_brand_id#1155) AND (i_class_id#1084 = i_class_id#1157)) AND (i_category_id#1086 = i_category_id#1159))\n         :- Filter (isnotnull(sales#731) AND (cast(sales#731 as decimal(32,6)) > cast(scalar-subquery#735 [] as decimal(32,6))))\n         :  :  +- Aggregate [avg((cast(quantity#746 as decimal(10,0)) * list_price#747)) AS average_sales#752]\n         :  :     +- Union false, false\n         :  :        :- Project [ss_quantity#886 AS quantity#746, ss_list_price#888 AS list_price#747]\n         :  :        :  +- Join Inner, (ss_sold_date_sk#899 = d_date_sk#900)\n         :  :        :     :- Project [ss_quantity#886, ss_list_price#888, ss_sold_date_sk#899]\n         :  :        :     :  +- Filter (isnotnull(ss_sold_date_sk#899) AND dynamicpruning#1288 [ss_sold_date_sk#899])\n         :  :        :     :     :  +- Project [d_date_sk#900]\n         :  :        :     :     :     +- Filter ((isnotnull(d_year#906) AND ((d_year#906 >= 1998) AND (d_year#906 <= 2000))) AND isnotnull(d_date_sk#900))\n         :  :        :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#900,d_date_id#901,d_date#902,d_month_seq#903,d_week_seq#904,d_quarter_seq#905,d_year#906,d_dow#907,d_moy#908,d_dom#909,d_qoy#910,d_fy_year#911,d_fy_quarter_seq#912,d_fy_week_seq#913,d_day_name#914,d_quarter_name#915,d_holiday#916,d_weekend#917,d_following_holiday#918,d_first_dom#919,d_last_dom#920,d_same_day_ly#921,d_same_day_lq#922,d_current_day#923,... 4 more fields] parquet\n         :  :        :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#877,ss_item_sk#878,ss_customer_sk#879,ss_cdemo_sk#880,ss_hdemo_sk#881,ss_addr_sk#882,ss_store_sk#883,ss_promo_sk#884,ss_ticket_number#885L,ss_quantity#886,ss_wholesale_cost#887,ss_list_price#888,ss_sales_price#889,ss_ext_discount_amt#890,ss_ext_sales_price#891,ss_ext_wholesale_cost#892,ss_ext_list_price#893,ss_ext_tax#894,ss_coupon_amt#895,ss_net_paid#896,ss_net_paid_inc_tax#897,ss_net_profit#898,ss_sold_date_sk#899] parquet\n         :  :        :     +- Project [d_date_sk#900]\n         :  :        :        +- Filter ((isnotnull(d_year#906) AND ((d_year#906 >= 1998) AND (d_year#906 <= 2000))) AND isnotnull(d_date_sk#900))\n         :  :        :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#900,d_date_id#901,d_date#902,d_month_seq#903,d_week_seq#904,d_quarter_seq#905,d_year#906,d_dow#907,d_moy#908,d_dom#909,d_qoy#910,d_fy_year#911,d_fy_quarter_seq#912,d_fy_week_seq#913,d_day_name#914,d_quarter_name#915,d_holiday#916,d_weekend#917,d_following_holiday#918,d_first_dom#919,d_last_dom#920,d_same_day_ly#921,d_same_day_lq#922,d_current_day#923,... 4 more fields] parquet\n         :  :        :- Project [cs_quantity#945 AS quantity#748, cs_list_price#947 AS list_price#749]\n         :  :        :  +- Join Inner, (cs_sold_date_sk#961 = d_date_sk#962)\n         :  :        :     :- Project [cs_quantity#945, cs_list_price#947, cs_sold_date_sk#961]\n         :  :        :     :  +- Filter (isnotnull(cs_sold_date_sk#961) AND dynamicpruning#1289 [cs_sold_date_sk#961])\n         :  :        :     :     :  +- Project [d_date_sk#962]\n         :  :        :     :     :     +- Filter ((isnotnull(d_year#968) AND ((d_year#968 >= 1998) AND (d_year#968 <= 2000))) AND isnotnull(d_date_sk#962))\n         :  :        :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#962,d_date_id#963,d_date#964,d_month_seq#965,d_week_seq#966,d_quarter_seq#967,d_year#968,d_dow#969,d_moy#970,d_dom#971,d_qoy#972,d_fy_year#973,d_fy_quarter_seq#974,d_fy_week_seq#975,d_day_name#976,d_quarter_name#977,d_holiday#978,d_weekend#979,d_following_holiday#980,d_first_dom#981,d_last_dom#982,d_same_day_ly#983,d_same_day_lq#984,d_current_day#985,... 4 more fields] parquet\n         :  :        :     :     +- Relation spark_catalog.tpcds_100.catalog_sales[cs_sold_time_sk#928,cs_ship_date_sk#929,cs_bill_customer_sk#930,cs_bill_cdemo_sk#931,cs_bill_hdemo_sk#932,cs_bill_addr_sk#933,cs_ship_customer_sk#934,cs_ship_cdemo_sk#935,cs_ship_hdemo_sk#936,cs_ship_addr_sk#937,cs_call_center_sk#938,cs_catalog_page_sk#939,cs_ship_mode_sk#940,cs_warehouse_sk#941,cs_item_sk#942,cs_promo_sk#943,cs_order_number#944L,cs_quantity#945,cs_wholesale_cost#946,cs_list_price#947,cs_sales_price#948,cs_ext_discount_amt#949,cs_ext_sales_price#950,cs_ext_wholesale_cost#951,... 10 more fields] parquet\n         :  :        :     +- Project [d_date_sk#962]\n         :  :        :        +- Filter ((isnotnull(d_year#968) AND ((d_year#968 >= 1998) AND (d_year#968 <= 2000))) AND isnotnull(d_date_sk#962))\n         :  :        :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#962,d_date_id#963,d_date#964,d_month_seq#965,d_week_seq#966,d_quarter_seq#967,d_year#968,d_dow#969,d_moy#970,d_dom#971,d_qoy#972,d_fy_year#973,d_fy_quarter_seq#974,d_fy_week_seq#975,d_day_name#976,d_quarter_name#977,d_holiday#978,d_weekend#979,d_following_holiday#980,d_first_dom#981,d_last_dom#982,d_same_day_ly#983,d_same_day_lq#984,d_current_day#985,... 4 more fields] parquet\n         :  :        +- Project [ws_quantity#1007 AS quantity#750, ws_list_price#1009 AS list_price#751]\n         :  :           +- Join Inner, (ws_sold_date_sk#1023 = d_date_sk#1024)\n         :  :              :- Project [ws_quantity#1007, ws_list_price#1009, ws_sold_date_sk#1023]\n         :  :              :  +- Filter (isnotnull(ws_sold_date_sk#1023) AND dynamicpruning#1290 [ws_sold_date_sk#1023])\n         :  :              :     :  +- Project [d_date_sk#1024]\n         :  :              :     :     +- Filter ((isnotnull(d_year#1030) AND ((d_year#1030 >= 1998) AND (d_year#1030 <= 2000))) AND isnotnull(d_date_sk#1024))\n         :  :              :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#1024,d_date_id#1025,d_date#1026,d_month_seq#1027,d_week_seq#1028,d_quarter_seq#1029,d_year#1030,d_dow#1031,d_moy#1032,d_dom#1033,d_qoy#1034,d_fy_year#1035,d_fy_quarter_seq#1036,d_fy_week_seq#1037,d_day_name#1038,d_quarter_name#1039,d_holiday#1040,d_weekend#1041,d_following_holiday#1042,d_first_dom#1043,d_last_dom#1044,d_same_day_ly#1045,d_same_day_lq#1046,d_current_day#1047,... 4 more fields] parquet\n         :  :              :     +- Relation spark_catalog.tpcds_100.web_sales[ws_sold_time_sk#990,ws_ship_date_sk#991,ws_item_sk#992,ws_bill_customer_sk#993,ws_bill_cdemo_sk#994,ws_bill_hdemo_sk#995,ws_bill_addr_sk#996,ws_ship_customer_sk#997,ws_ship_cdemo_sk#998,ws_ship_hdemo_sk#999,ws_ship_addr_sk#1000,ws_web_page_sk#1001,ws_web_site_sk#1002,ws_ship_mode_sk#1003,ws_warehouse_sk#1004,ws_promo_sk#1005,ws_order_number#1006L,ws_quantity#1007,ws_wholesale_cost#1008,ws_list_price#1009,ws_sales_price#1010,ws_ext_discount_amt#1011,ws_ext_sales_price#1012,ws_ext_wholesale_cost#1013,... 10 more fields] parquet\n         :  :              +- Project [d_date_sk#1024]\n         :  :                 +- Filter ((isnotnull(d_year#1030) AND ((d_year#1030 >= 1998) AND (d_year#1030 <= 2000))) AND isnotnull(d_date_sk#1024))\n         :  :                    +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#1024,d_date_id#1025,d_date#1026,d_month_seq#1027,d_week_seq#1028,d_quarter_seq#1029,d_year#1030,d_dow#1031,d_moy#1032,d_dom#1033,d_qoy#1034,d_fy_year#1035,d_fy_quarter_seq#1036,d_fy_week_seq#1037,d_day_name#1038,d_quarter_name#1039,d_holiday#1040,d_weekend#1041,d_following_holiday#1042,d_first_dom#1043,d_last_dom#1044,d_same_day_ly#1045,d_same_day_lq#1046,d_current_day#1047,... 4 more fields] parquet\n         :  +- Aggregate [i_brand_id#1082, i_class_id#1084, i_category_id#1086], [store AS channel#730, i_brand_id#1082, i_class_id#1084, i_category_id#1086, sum((cast(ss_quantity#1061 as decimal(10,0)) * ss_list_price#1063)) AS sales#731, count(1) AS number_sales#732L]\n         :     +- Project [ss_quantity#1061, ss_list_price#1063, i_brand_id#1082, i_class_id#1084, i_category_id#1086]\n         :        +- Join Inner, (ss_item_sk#1053 = i_item_sk#1075)\n         :           :- Project [ss_item_sk#1053, ss_quantity#1061, ss_list_price#1063]\n         :           :  +- Join Inner, (ss_sold_date_sk#1074 = d_date_sk#1097)\n         :           :     :- Join LeftSemi, (ss_item_sk#1053 = ss_item_sk#745)\n         :           :     :  :- Project [ss_item_sk#1053, ss_quantity#1061, ss_list_price#1063, ss_sold_date_sk#1074]\n         :           :     :  :  +- Filter ((isnotnull(ss_item_sk#1053) AND isnotnull(ss_sold_date_sk#1074)) AND dynamicpruning#1303 [ss_sold_date_sk#1074])\n         :           :     :  :     :  +- Project [d_date_sk#1097]\n         :           :     :  :     :     +- Filter ((isnotnull(d_week_seq#1101) AND (d_week_seq#1101 = scalar-subquery#734 [])) AND isnotnull(d_date_sk#1097))\n         :           :     :  :     :        :  +- Project [d_week_seq#1213]\n         :           :     :  :     :        :     +- Filter (((isnotnull(d_year#1215) AND isnotnull(d_moy#1217)) AND isnotnull(d_dom#1218)) AND (((d_year#1215 = 1999) AND (d_moy#1217 = 12)) AND (d_dom#1218 = 16)))\n         :           :     :  :     :        :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#1209,d_date_id#1210,d_date#1211,d_month_seq#1212,d_week_seq#1213,d_quarter_seq#1214,d_year#1215,d_dow#1216,d_moy#1217,d_dom#1218,d_qoy#1219,d_fy_year#1220,d_fy_quarter_seq#1221,d_fy_week_seq#1222,d_day_name#1223,d_quarter_name#1224,d_holiday#1225,d_weekend#1226,d_following_holiday#1227,d_first_dom#1228,d_last_dom#1229,d_same_day_ly#1230,d_same_day_lq#1231,d_current_day#1232,... 4 more fields] parquet\n         :           :     :  :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#1097,d_date_id#1098,d_date#1099,d_month_seq#1100,d_week_seq#1101,d_quarter_seq#1102,d_year#1103,d_dow#1104,d_moy#1105,d_dom#1106,d_qoy#1107,d_fy_year#1108,d_fy_quarter_seq#1109,d_fy_week_seq#1110,d_day_name#1111,d_quarter_name#1112,d_holiday#1113,d_weekend#1114,d_following_holiday#1115,d_first_dom#1116,d_last_dom#1117,d_same_day_ly#1118,d_same_day_lq#1119,d_current_day#1120,... 4 more fields] parquet\n         :           :     :  :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#1052,ss_item_sk#1053,ss_customer_sk#1054,ss_cdemo_sk#1055,ss_hdemo_sk#1056,ss_addr_sk#1057,ss_store_sk#1058,ss_promo_sk#1059,ss_ticket_number#1060L,ss_quantity#1061,ss_wholesale_cost#1062,ss_list_price#1063,ss_sales_price#1064,ss_ext_discount_amt#1065,ss_ext_sales_price#1066,ss_ext_wholesale_cost#1067,ss_ext_list_price#1068,ss_ext_tax#1069,ss_coupon_amt#1070,ss_net_paid#1071,ss_net_paid_inc_tax#1072,ss_net_profit#1073,ss_sold_date_sk#1074] parquet\n         :           :     :  +- Project [i_item_sk#25 AS ss_item_sk#745]\n         :           :     :     +- Join Inner, (((i_brand_id#32 = brand_id#742) AND (i_class_id#34 = class_id#743)) AND (i_category_id#36 = category_id#744))\n         :           :     :        :- Project [i_item_sk#25, i_brand_id#32, i_class_id#34, i_category_id#36]\n         :           :     :        :  +- Filter ((isnotnull(i_brand_id#32) AND isnotnull(i_class_id#34)) AND isnotnull(i_category_id#36))\n         :           :     :        :     +- Relation spark_catalog.tpcds_100.item[i_item_sk#25,i_item_id#26,i_rec_start_date#27,i_rec_end_date#28,i_item_desc#29,i_current_price#30,i_wholesale_cost#31,i_brand_id#32,i_brand#33,i_class_id#34,i_class#35,i_category_id#36,i_category#37,i_manufact_id#38,i_manufact#39,i_size#40,i_formulation#41,i_color#42,i_units#43,i_container#44,i_manager_id#45,i_product_name#46] parquet\n         :           :     :        +- Join LeftSemi, (((brand_id#742 <=> i_brand_id#834) AND (class_id#743 <=> i_class_id#836)) AND (category_id#744 <=> i_category_id#838))\n         :           :     :           :- Aggregate [brand_id#742, class_id#743, category_id#744], [brand_id#742, class_id#743, category_id#744]\n         :           :     :           :  +- Project [i_brand_id#762 AS brand_id#742, i_class_id#764 AS class_id#743, i_category_id#766 AS category_id#744]\n         :           :     :           :     +- Join Inner, (ss_item_sk#48 = i_item_sk#755)\n         :           :     :           :        :- Project [ss_item_sk#48]\n         :           :     :           :        :  +- Join Inner, (ss_sold_date_sk#69 = d_date_sk#70)\n         :           :     :           :        :     :- Project [ss_item_sk#48, ss_sold_date_sk#69]\n         :           :     :           :        :     :  +- Filter ((isnotnull(ss_item_sk#48) AND isnotnull(ss_sold_date_sk#69)) AND dynamicpruning#1291 [ss_sold_date_sk#69])\n         :           :     :           :        :     :     :  +- Project [d_date_sk#70]\n         :           :     :           :        :     :     :     +- Filter ((isnotnull(d_year#76) AND ((d_year#76 >= 1998) AND (d_year#76 <= 2000))) AND isnotnull(d_date_sk#70))\n         :           :     :           :        :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#70,d_date_id#71,d_date#72,d_month_seq#73,d_week_seq#74,d_quarter_seq#75,d_year#76,d_dow#77,d_moy#78,d_dom#79,d_qoy#80,d_fy_year#81,d_fy_quarter_seq#82,d_fy_week_seq#83,d_day_name#84,d_quarter_name#85,d_holiday#86,d_weekend#87,d_following_holiday#88,d_first_dom#89,d_last_dom#90,d_same_day_ly#91,d_same_day_lq#92,d_current_day#93,... 4 more fields] parquet\n         :           :     :           :        :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#47,ss_item_sk#48,ss_customer_sk#49,ss_cdemo_sk#50,ss_hdemo_sk#51,ss_addr_sk#52,ss_store_sk#53,ss_promo_sk#54,ss_ticket_number#55L,ss_quantity#56,ss_wholesale_cost#57,ss_list_price#58,ss_sales_price#59,ss_ext_discount_amt#60,ss_ext_sales_price#61,ss_ext_wholesale_cost#62,ss_ext_list_price#63,ss_ext_tax#64,ss_coupon_amt#65,ss_net_paid#66,ss_net_paid_inc_tax#67,ss_net_profit#68,ss_sold_date_sk#69] parquet\n         :           :     :           :        :     +- LogicalQueryStage Project [d_date_sk#70], BroadcastQueryStage 0\n         :           :     :           :        +- Join LeftSemi, (((i_brand_id#762 <=> i_brand_id#784) AND (i_class_id#764 <=> i_class_id#786)) AND (i_category_id#766 <=> i_category_id#788))\n         :           :     :           :           :- LogicalQueryStage Project [i_item_sk#755, i_brand_id#762, i_class_id#764, i_category_id#766], ShuffleQueryStage 1\n         :           :     :           :           +- LogicalQueryStage Project [i_brand_id#784, i_class_id#786, i_category_id#788], ShuffleQueryStage 47\n         :           :     :           +- LogicalQueryStage Project [i_brand_id#834, i_class_id#836, i_category_id#838], ShuffleQueryStage 48\n         :           :     +- LogicalQueryStage Project [d_date_sk#1097], BroadcastQueryStage 9\n         :           +- Join LeftSemi, (i_item_sk#1075 = ss_item_sk#745)\n         :              :- Project [i_item_sk#1075, i_brand_id#1082, i_class_id#1084, i_category_id#1086]\n         :              :  +- Filter (((isnotnull(i_item_sk#1075) AND isnotnull(i_brand_id#1082)) AND isnotnull(i_class_id#1084)) AND isnotnull(i_category_id#1086))\n         :              :     +- Relation spark_catalog.tpcds_100.item[i_item_sk#1075,i_item_id#1076,i_rec_start_date#1077,i_rec_end_date#1078,i_item_desc#1079,i_current_price#1080,i_wholesale_cost#1081,i_brand_id#1082,i_brand#1083,i_class_id#1084,i_class#1085,i_category_id#1086,i_category#1087,i_manufact_id#1088,i_manufact#1089,i_size#1090,i_formulation#1091,i_color#1092,i_units#1093,i_container#1094,i_manager_id#1095,i_product_name#1096] parquet\n         :              +- Project [i_item_sk#25 AS ss_item_sk#745]\n         :                 +- Join Inner, (((i_brand_id#32 = brand_id#742) AND (i_class_id#34 = class_id#743)) AND (i_category_id#36 = category_id#744))\n         :                    :- Project [i_item_sk#25, i_brand_id#32, i_class_id#34, i_category_id#36]\n         :                    :  +- Filter ((isnotnull(i_brand_id#32) AND isnotnull(i_class_id#34)) AND isnotnull(i_category_id#36))\n         :                    :     +- Relation spark_catalog.tpcds_100.item[i_item_sk#25,i_item_id#26,i_rec_start_date#27,i_rec_end_date#28,i_item_desc#29,i_current_price#30,i_wholesale_cost#31,i_brand_id#32,i_brand#33,i_class_id#34,i_class#35,i_category_id#36,i_category#37,i_manufact_id#38,i_manufact#39,i_size#40,i_formulation#41,i_color#42,i_units#43,i_container#44,i_manager_id#45,i_product_name#46] parquet\n         :                    +- Join LeftSemi, (((brand_id#742 <=> i_brand_id#834) AND (class_id#743 <=> i_class_id#836)) AND (category_id#744 <=> i_category_id#838))\n         :                       :- Aggregate [brand_id#742, class_id#743, category_id#744], [brand_id#742, class_id#743, category_id#744]\n         :                       :  +- Project [i_brand_id#762 AS brand_id#742, i_class_id#764 AS class_id#743, i_category_id#766 AS category_id#744]\n         :                       :     +- Join Inner, (ss_item_sk#48 = i_item_sk#755)\n         :                       :        :- Project [ss_item_sk#48]\n         :                       :        :  +- Join Inner, (ss_sold_date_sk#69 = d_date_sk#70)\n         :                       :        :     :- Project [ss_item_sk#48, ss_sold_date_sk#69]\n         :                       :        :     :  +- Filter ((isnotnull(ss_item_sk#48) AND isnotnull(ss_sold_date_sk#69)) AND dynamicpruning#1291 [ss_sold_date_sk#69])\n         :                       :        :     :     :  +- Project [d_date_sk#70]\n         :                       :        :     :     :     +- Filter ((isnotnull(d_year#76) AND ((d_year#76 >= 1998) AND (d_year#76 <= 2000))) AND isnotnull(d_date_sk#70))\n         :                       :        :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#70,d_date_id#71,d_date#72,d_month_seq#73,d_week_seq#74,d_quarter_seq#75,d_year#76,d_dow#77,d_moy#78,d_dom#79,d_qoy#80,d_fy_year#81,d_fy_quarter_seq#82,d_fy_week_seq#83,d_day_name#84,d_quarter_name#85,d_holiday#86,d_weekend#87,d_following_holiday#88,d_first_dom#89,d_last_dom#90,d_same_day_ly#91,d_same_day_lq#92,d_current_day#93,... 4 more fields] parquet\n         :                       :        :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#47,ss_item_sk#48,ss_customer_sk#49,ss_cdemo_sk#50,ss_hdemo_sk#51,ss_addr_sk#52,ss_store_sk#53,ss_promo_sk#54,ss_ticket_number#55L,ss_quantity#56,ss_wholesale_cost#57,ss_list_price#58,ss_sales_price#59,ss_ext_discount_amt#60,ss_ext_sales_price#61,ss_ext_wholesale_cost#62,ss_ext_list_price#63,ss_ext_tax#64,ss_coupon_amt#65,ss_net_paid#66,ss_net_paid_inc_tax#67,ss_net_profit#68,ss_sold_date_sk#69] parquet\n         :                       :        :     +- LogicalQueryStage Project [d_date_sk#70], BroadcastQueryStage 11\n         :                       :        +- Join LeftSemi, (((i_brand_id#762 <=> i_brand_id#784) AND (i_class_id#764 <=> i_class_id#786)) AND (i_category_id#766 <=> i_category_id#788))\n         :                       :           :- LogicalQueryStage Project [i_item_sk#755, i_brand_id#762, i_class_id#764, i_category_id#766], ShuffleQueryStage 13\n         :                       :           +- LogicalQueryStage Project [i_brand_id#784, i_class_id#786, i_category_id#788], ShuffleQueryStage 50\n         :                       +- LogicalQueryStage Project [i_brand_id#834, i_class_id#836, i_category_id#838], ShuffleQueryStage 52\n         +- Filter (isnotnull(sales#737) AND (cast(sales#737 as decimal(32,6)) > cast(scalar-subquery#741 [] as decimal(32,6))))\n            :  +- Aggregate [avg((cast(quantity#746 as decimal(10,0)) * list_price#747)) AS average_sales#752]\n            :     +- Union false, false\n            :        :- Project [ss_quantity#886 AS quantity#746, ss_list_price#888 AS list_price#747]\n            :        :  +- Join Inner, (ss_sold_date_sk#899 = d_date_sk#900)\n            :        :     :- Project [ss_quantity#886, ss_list_price#888, ss_sold_date_sk#899]\n            :        :     :  +- Filter (isnotnull(ss_sold_date_sk#899) AND dynamicpruning#1288 [ss_sold_date_sk#899])\n            :        :     :     :  +- Project [d_date_sk#900]\n            :        :     :     :     +- Filter ((isnotnull(d_year#906) AND ((d_year#906 >= 1998) AND (d_year#906 <= 2000))) AND isnotnull(d_date_sk#900))\n            :        :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#900,d_date_id#901,d_date#902,d_month_seq#903,d_week_seq#904,d_quarter_seq#905,d_year#906,d_dow#907,d_moy#908,d_dom#909,d_qoy#910,d_fy_year#911,d_fy_quarter_seq#912,d_fy_week_seq#913,d_day_name#914,d_quarter_name#915,d_holiday#916,d_weekend#917,d_following_holiday#918,d_first_dom#919,d_last_dom#920,d_same_day_ly#921,d_same_day_lq#922,d_current_day#923,... 4 more fields] parquet\n            :        :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#877,ss_item_sk#878,ss_customer_sk#879,ss_cdemo_sk#880,ss_hdemo_sk#881,ss_addr_sk#882,ss_store_sk#883,ss_promo_sk#884,ss_ticket_number#885L,ss_quantity#886,ss_wholesale_cost#887,ss_list_price#888,ss_sales_price#889,ss_ext_discount_amt#890,ss_ext_sales_price#891,ss_ext_wholesale_cost#892,ss_ext_list_price#893,ss_ext_tax#894,ss_coupon_amt#895,ss_net_paid#896,ss_net_paid_inc_tax#897,ss_net_profit#898,ss_sold_date_sk#899] parquet\n            :        :     +- Project [d_date_sk#900]\n            :        :        +- Filter ((isnotnull(d_year#906) AND ((d_year#906 >= 1998) AND (d_year#906 <= 2000))) AND isnotnull(d_date_sk#900))\n            :        :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#900,d_date_id#901,d_date#902,d_month_seq#903,d_week_seq#904,d_quarter_seq#905,d_year#906,d_dow#907,d_moy#908,d_dom#909,d_qoy#910,d_fy_year#911,d_fy_quarter_seq#912,d_fy_week_seq#913,d_day_name#914,d_quarter_name#915,d_holiday#916,d_weekend#917,d_following_holiday#918,d_first_dom#919,d_last_dom#920,d_same_day_ly#921,d_same_day_lq#922,d_current_day#923,... 4 more fields] parquet\n            :        :- Project [cs_quantity#945 AS quantity#748, cs_list_price#947 AS list_price#749]\n            :        :  +- Join Inner, (cs_sold_date_sk#961 = d_date_sk#962)\n            :        :     :- Project [cs_quantity#945, cs_list_price#947, cs_sold_date_sk#961]\n            :        :     :  +- Filter (isnotnull(cs_sold_date_sk#961) AND dynamicpruning#1289 [cs_sold_date_sk#961])\n            :        :     :     :  +- Project [d_date_sk#962]\n            :        :     :     :     +- Filter ((isnotnull(d_year#968) AND ((d_year#968 >= 1998) AND (d_year#968 <= 2000))) AND isnotnull(d_date_sk#962))\n            :        :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#962,d_date_id#963,d_date#964,d_month_seq#965,d_week_seq#966,d_quarter_seq#967,d_year#968,d_dow#969,d_moy#970,d_dom#971,d_qoy#972,d_fy_year#973,d_fy_quarter_seq#974,d_fy_week_seq#975,d_day_name#976,d_quarter_name#977,d_holiday#978,d_weekend#979,d_following_holiday#980,d_first_dom#981,d_last_dom#982,d_same_day_ly#983,d_same_day_lq#984,d_current_day#985,... 4 more fields] parquet\n            :        :     :     +- Relation spark_catalog.tpcds_100.catalog_sales[cs_sold_time_sk#928,cs_ship_date_sk#929,cs_bill_customer_sk#930,cs_bill_cdemo_sk#931,cs_bill_hdemo_sk#932,cs_bill_addr_sk#933,cs_ship_customer_sk#934,cs_ship_cdemo_sk#935,cs_ship_hdemo_sk#936,cs_ship_addr_sk#937,cs_call_center_sk#938,cs_catalog_page_sk#939,cs_ship_mode_sk#940,cs_warehouse_sk#941,cs_item_sk#942,cs_promo_sk#943,cs_order_number#944L,cs_quantity#945,cs_wholesale_cost#946,cs_list_price#947,cs_sales_price#948,cs_ext_discount_amt#949,cs_ext_sales_price#950,cs_ext_wholesale_cost#951,... 10 more fields] parquet\n            :        :     +- Project [d_date_sk#962]\n            :        :        +- Filter ((isnotnull(d_year#968) AND ((d_year#968 >= 1998) AND (d_year#968 <= 2000))) AND isnotnull(d_date_sk#962))\n            :        :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#962,d_date_id#963,d_date#964,d_month_seq#965,d_week_seq#966,d_quarter_seq#967,d_year#968,d_dow#969,d_moy#970,d_dom#971,d_qoy#972,d_fy_year#973,d_fy_quarter_seq#974,d_fy_week_seq#975,d_day_name#976,d_quarter_name#977,d_holiday#978,d_weekend#979,d_following_holiday#980,d_first_dom#981,d_last_dom#982,d_same_day_ly#983,d_same_day_lq#984,d_current_day#985,... 4 more fields] parquet\n            :        +- Project [ws_quantity#1007 AS quantity#750, ws_list_price#1009 AS list_price#751]\n            :           +- Join Inner, (ws_sold_date_sk#1023 = d_date_sk#1024)\n            :              :- Project [ws_quantity#1007, ws_list_price#1009, ws_sold_date_sk#1023]\n            :              :  +- Filter (isnotnull(ws_sold_date_sk#1023) AND dynamicpruning#1290 [ws_sold_date_sk#1023])\n            :              :     :  +- Project [d_date_sk#1024]\n            :              :     :     +- Filter ((isnotnull(d_year#1030) AND ((d_year#1030 >= 1998) AND (d_year#1030 <= 2000))) AND isnotnull(d_date_sk#1024))\n            :              :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#1024,d_date_id#1025,d_date#1026,d_month_seq#1027,d_week_seq#1028,d_quarter_seq#1029,d_year#1030,d_dow#1031,d_moy#1032,d_dom#1033,d_qoy#1034,d_fy_year#1035,d_fy_quarter_seq#1036,d_fy_week_seq#1037,d_day_name#1038,d_quarter_name#1039,d_holiday#1040,d_weekend#1041,d_following_holiday#1042,d_first_dom#1043,d_last_dom#1044,d_same_day_ly#1045,d_same_day_lq#1046,d_current_day#1047,... 4 more fields] parquet\n            :              :     +- Relation spark_catalog.tpcds_100.web_sales[ws_sold_time_sk#990,ws_ship_date_sk#991,ws_item_sk#992,ws_bill_customer_sk#993,ws_bill_cdemo_sk#994,ws_bill_hdemo_sk#995,ws_bill_addr_sk#996,ws_ship_customer_sk#997,ws_ship_cdemo_sk#998,ws_ship_hdemo_sk#999,ws_ship_addr_sk#1000,ws_web_page_sk#1001,ws_web_site_sk#1002,ws_ship_mode_sk#1003,ws_warehouse_sk#1004,ws_promo_sk#1005,ws_order_number#1006L,ws_quantity#1007,ws_wholesale_cost#1008,ws_list_price#1009,ws_sales_price#1010,ws_ext_discount_amt#1011,ws_ext_sales_price#1012,ws_ext_wholesale_cost#1013,... 10 more fields] parquet\n            :              +- Project [d_date_sk#1024]\n            :                 +- Filter ((isnotnull(d_year#1030) AND ((d_year#1030 >= 1998) AND (d_year#1030 <= 2000))) AND isnotnull(d_date_sk#1024))\n            :                    +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#1024,d_date_id#1025,d_date#1026,d_month_seq#1027,d_week_seq#1028,d_quarter_seq#1029,d_year#1030,d_dow#1031,d_moy#1032,d_dom#1033,d_qoy#1034,d_fy_year#1035,d_fy_quarter_seq#1036,d_fy_week_seq#1037,d_day_name#1038,d_quarter_name#1039,d_holiday#1040,d_weekend#1041,d_following_holiday#1042,d_first_dom#1043,d_last_dom#1044,d_same_day_ly#1045,d_same_day_lq#1046,d_current_day#1047,... 4 more fields] parquet\n            +- Aggregate [i_brand_id#1155, i_class_id#1157, i_category_id#1159], [store AS channel#736, i_brand_id#1155, i_class_id#1157, i_category_id#1159, sum((cast(ss_quantity#1134 as decimal(10,0)) * ss_list_price#1136)) AS sales#737, count(1) AS number_sales#738L]\n               +- Project [ss_quantity#1134, ss_list_price#1136, i_brand_id#1155, i_class_id#1157, i_category_id#1159]\n                  +- Join Inner, (ss_item_sk#1126 = i_item_sk#1148)\n                     :- Project [ss_item_sk#1126, ss_quantity#1134, ss_list_price#1136]\n                     :  +- Join Inner, (ss_sold_date_sk#1147 = d_date_sk#1170)\n                     :     :- Join LeftSemi, (ss_item_sk#1126 = ss_item_sk#745)\n                     :     :  :- Project [ss_item_sk#1126, ss_quantity#1134, ss_list_price#1136, ss_sold_date_sk#1147]\n                     :     :  :  +- Filter ((isnotnull(ss_item_sk#1126) AND isnotnull(ss_sold_date_sk#1147)) AND dynamicpruning#1310 [ss_sold_date_sk#1147])\n                     :     :  :     :  +- Project [d_date_sk#1170]\n                     :     :  :     :     +- Filter ((isnotnull(d_week_seq#1174) AND (d_week_seq#1174 = scalar-subquery#740 [])) AND isnotnull(d_date_sk#1170))\n                     :     :  :     :        :  +- Project [d_week_seq#1241]\n                     :     :  :     :        :     +- Filter (((isnotnull(d_year#1243) AND isnotnull(d_moy#1245)) AND isnotnull(d_dom#1246)) AND (((d_year#1243 = 1998) AND (d_moy#1245 = 12)) AND (d_dom#1246 = 16)))\n                     :     :  :     :        :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#1237,d_date_id#1238,d_date#1239,d_month_seq#1240,d_week_seq#1241,d_quarter_seq#1242,d_year#1243,d_dow#1244,d_moy#1245,d_dom#1246,d_qoy#1247,d_fy_year#1248,d_fy_quarter_seq#1249,d_fy_week_seq#1250,d_day_name#1251,d_quarter_name#1252,d_holiday#1253,d_weekend#1254,d_following_holiday#1255,d_first_dom#1256,d_last_dom#1257,d_same_day_ly#1258,d_same_day_lq#1259,d_current_day#1260,... 4 more fields] parquet\n                     :     :  :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#1170,d_date_id#1171,d_date#1172,d_month_seq#1173,d_week_seq#1174,d_quarter_seq#1175,d_year#1176,d_dow#1177,d_moy#1178,d_dom#1179,d_qoy#1180,d_fy_year#1181,d_fy_quarter_seq#1182,d_fy_week_seq#1183,d_day_name#1184,d_quarter_name#1185,d_holiday#1186,d_weekend#1187,d_following_holiday#1188,d_first_dom#1189,d_last_dom#1190,d_same_day_ly#1191,d_same_day_lq#1192,d_current_day#1193,... 4 more fields] parquet\n                     :     :  :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#1125,ss_item_sk#1126,ss_customer_sk#1127,ss_cdemo_sk#1128,ss_hdemo_sk#1129,ss_addr_sk#1130,ss_store_sk#1131,ss_promo_sk#1132,ss_ticket_number#1133L,ss_quantity#1134,ss_wholesale_cost#1135,ss_list_price#1136,ss_sales_price#1137,ss_ext_discount_amt#1138,ss_ext_sales_price#1139,ss_ext_wholesale_cost#1140,ss_ext_list_price#1141,ss_ext_tax#1142,ss_coupon_amt#1143,ss_net_paid#1144,ss_net_paid_inc_tax#1145,ss_net_profit#1146,ss_sold_date_sk#1147] parquet\n                     :     :  +- Project [i_item_sk#25 AS ss_item_sk#745]\n                     :     :     +- Join Inner, (((i_brand_id#32 = brand_id#742) AND (i_class_id#34 = class_id#743)) AND (i_category_id#36 = category_id#744))\n                     :     :        :- Project [i_item_sk#25, i_brand_id#32, i_class_id#34, i_category_id#36]\n                     :     :        :  +- Filter ((isnotnull(i_brand_id#32) AND isnotnull(i_class_id#34)) AND isnotnull(i_category_id#36))\n                     :     :        :     +- Relation spark_catalog.tpcds_100.item[i_item_sk#25,i_item_id#26,i_rec_start_date#27,i_rec_end_date#28,i_item_desc#29,i_current_price#30,i_wholesale_cost#31,i_brand_id#32,i_brand#33,i_class_id#34,i_class#35,i_category_id#36,i_category#37,i_manufact_id#38,i_manufact#39,i_size#40,i_formulation#41,i_color#42,i_units#43,i_container#44,i_manager_id#45,i_product_name#46] parquet\n                     :     :        +- Join LeftSemi, (((brand_id#742 <=> i_brand_id#834) AND (class_id#743 <=> i_class_id#836)) AND (category_id#744 <=> i_category_id#838))\n                     :     :           :- Aggregate [brand_id#742, class_id#743, category_id#744], [brand_id#742, class_id#743, category_id#744]\n                     :     :           :  +- Project [i_brand_id#762 AS brand_id#742, i_class_id#764 AS class_id#743, i_category_id#766 AS category_id#744]\n                     :     :           :     +- Join Inner, (ss_item_sk#48 = i_item_sk#755)\n                     :     :           :        :- Project [ss_item_sk#48]\n                     :     :           :        :  +- Join Inner, (ss_sold_date_sk#69 = d_date_sk#70)\n                     :     :           :        :     :- Project [ss_item_sk#48, ss_sold_date_sk#69]\n                     :     :           :        :     :  +- Filter ((isnotnull(ss_item_sk#48) AND isnotnull(ss_sold_date_sk#69)) AND dynamicpruning#1297 [ss_sold_date_sk#69])\n                     :     :           :        :     :     :  +- Project [d_date_sk#70]\n                     :     :           :        :     :     :     +- Filter ((isnotnull(d_year#76) AND ((d_year#76 >= 1998) AND (d_year#76 <= 2000))) AND isnotnull(d_date_sk#70))\n                     :     :           :        :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#70,d_date_id#71,d_date#72,d_month_seq#73,d_week_seq#74,d_quarter_seq#75,d_year#76,d_dow#77,d_moy#78,d_dom#79,d_qoy#80,d_fy_year#81,d_fy_quarter_seq#82,d_fy_week_seq#83,d_day_name#84,d_quarter_name#85,d_holiday#86,d_weekend#87,d_following_holiday#88,d_first_dom#89,d_last_dom#90,d_same_day_ly#91,d_same_day_lq#92,d_current_day#93,... 4 more fields] parquet\n                     :     :           :        :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#47,ss_item_sk#48,ss_customer_sk#49,ss_cdemo_sk#50,ss_hdemo_sk#51,ss_addr_sk#52,ss_store_sk#53,ss_promo_sk#54,ss_ticket_number#55L,ss_quantity#56,ss_wholesale_cost#57,ss_list_price#58,ss_sales_price#59,ss_ext_discount_amt#60,ss_ext_sales_price#61,ss_ext_wholesale_cost#62,ss_ext_list_price#63,ss_ext_tax#64,ss_coupon_amt#65,ss_net_paid#66,ss_net_paid_inc_tax#67,ss_net_profit#68,ss_sold_date_sk#69] parquet\n                     :     :           :        :     +- LogicalQueryStage Project [d_date_sk#70], BroadcastQueryStage 23\n                     :     :           :        +- Join LeftSemi, (((i_brand_id#762 <=> i_brand_id#784) AND (i_class_id#764 <=> i_class_id#786)) AND (i_category_id#766 <=> i_category_id#788))\n                     :     :           :           :- LogicalQueryStage Project [i_item_sk#755, i_brand_id#762, i_class_id#764, i_category_id#766], ShuffleQueryStage 25\n                     :     :           :           +- LogicalQueryStage Project [i_brand_id#784, i_class_id#786, i_category_id#788], ShuffleQueryStage 54\n                     :     :           +- LogicalQueryStage Project [i_brand_id#834, i_class_id#836, i_category_id#838], ShuffleQueryStage 56\n                     :     +- LogicalQueryStage Project [d_date_sk#1170], BroadcastQueryStage 34\n                     +- Join LeftSemi, (i_item_sk#1148 = ss_item_sk#745)\n                        :- Project [i_item_sk#1148, i_brand_id#1155, i_class_id#1157, i_category_id#1159]\n                        :  +- Filter (((isnotnull(i_item_sk#1148) AND isnotnull(i_brand_id#1155)) AND isnotnull(i_class_id#1157)) AND isnotnull(i_category_id#1159))\n                        :     +- Relation spark_catalog.tpcds_100.item[i_item_sk#1148,i_item_id#1149,i_rec_start_date#1150,i_rec_end_date#1151,i_item_desc#1152,i_current_price#1153,i_wholesale_cost#1154,i_brand_id#1155,i_brand#1156,i_class_id#1157,i_class#1158,i_category_id#1159,i_category#1160,i_manufact_id#1161,i_manufact#1162,i_size#1163,i_formulation#1164,i_color#1165,i_units#1166,i_container#1167,i_manager_id#1168,i_product_name#1169] parquet\n                        +- Project [i_item_sk#25 AS ss_item_sk#745]\n                           +- Join Inner, (((i_brand_id#32 = brand_id#742) AND (i_class_id#34 = class_id#743)) AND (i_category_id#36 = category_id#744))\n                              :- Project [i_item_sk#25, i_brand_id#32, i_class_id#34, i_category_id#36]\n                              :  +- Filter ((isnotnull(i_brand_id#32) AND isnotnull(i_class_id#34)) AND isnotnull(i_category_id#36))\n                              :     +- Relation spark_catalog.tpcds_100.item[i_item_sk#25,i_item_id#26,i_rec_start_date#27,i_rec_end_date#28,i_item_desc#29,i_current_price#30,i_wholesale_cost#31,i_brand_id#32,i_brand#33,i_class_id#34,i_class#35,i_category_id#36,i_category#37,i_manufact_id#38,i_manufact#39,i_size#40,i_formulation#41,i_color#42,i_units#43,i_container#44,i_manager_id#45,i_product_name#46] parquet\n                              +- Join LeftSemi, (((brand_id#742 <=> i_brand_id#834) AND (class_id#743 <=> i_class_id#836)) AND (category_id#744 <=> i_category_id#838))\n                                 :- Aggregate [brand_id#742, class_id#743, category_id#744], [brand_id#742, class_id#743, category_id#744]\n                                 :  +- Project [i_brand_id#762 AS brand_id#742, i_class_id#764 AS class_id#743, i_category_id#766 AS category_id#744]\n                                 :     +- Join Inner, (ss_item_sk#48 = i_item_sk#755)\n                                 :        :- Project [ss_item_sk#48]\n                                 :        :  +- Join Inner, (ss_sold_date_sk#69 = d_date_sk#70)\n                                 :        :     :- Project [ss_item_sk#48, ss_sold_date_sk#69]\n                                 :        :     :  +- Filter ((isnotnull(ss_item_sk#48) AND isnotnull(ss_sold_date_sk#69)) AND dynamicpruning#1297 [ss_sold_date_sk#69])\n                                 :        :     :     :  +- Project [d_date_sk#70]\n                                 :        :     :     :     +- Filter ((isnotnull(d_year#76) AND ((d_year#76 >= 1998) AND (d_year#76 <= 2000))) AND isnotnull(d_date_sk#70))\n                                 :        :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#70,d_date_id#71,d_date#72,d_month_seq#73,d_week_seq#74,d_quarter_seq#75,d_year#76,d_dow#77,d_moy#78,d_dom#79,d_qoy#80,d_fy_year#81,d_fy_quarter_seq#82,d_fy_week_seq#83,d_day_name#84,d_quarter_name#85,d_holiday#86,d_weekend#87,d_following_holiday#88,d_first_dom#89,d_last_dom#90,d_same_day_ly#91,d_same_day_lq#92,d_current_day#93,... 4 more fields] parquet\n                                 :        :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#47,ss_item_sk#48,ss_customer_sk#49,ss_cdemo_sk#50,ss_hdemo_sk#51,ss_addr_sk#52,ss_store_sk#53,ss_promo_sk#54,ss_ticket_number#55L,ss_quantity#56,ss_wholesale_cost#57,ss_list_price#58,ss_sales_price#59,ss_ext_discount_amt#60,ss_ext_sales_price#61,ss_ext_wholesale_cost#62,ss_ext_list_price#63,ss_ext_tax#64,ss_coupon_amt#65,ss_net_paid#66,ss_net_paid_inc_tax#67,ss_net_profit#68,ss_sold_date_sk#69] parquet\n                                 :        :     +- LogicalQueryStage Project [d_date_sk#70], BroadcastQueryStage 36\n                                 :        +- Join LeftSemi, (((i_brand_id#762 <=> i_brand_id#784) AND (i_class_id#764 <=> i_class_id#786)) AND (i_category_id#766 <=> i_category_id#788))\n                                 :           :- LogicalQueryStage Project [i_item_sk#755, i_brand_id#762, i_class_id#764, i_category_id#766], ShuffleQueryStage 38\n                                 :           +- LogicalQueryStage Project [i_brand_id#784, i_class_id#786, i_category_id#788], ShuffleQueryStage 58\n                                 +- LogicalQueryStage Project [i_brand_id#834, i_class_id#836, i_category_id#838], ShuffleQueryStage 60\n"
      },
      "IM" : {
        "inputSizeInBytes" : 268430682896,
        "inputRowCount" : 2400283124
      },
      "PD" : {
        "2" : [ 177962, 455930, 415323, 324034, 407180, 578113, 259800, 210766, 416594, 365097, 722932, 430581, 737269, 1031975, 1514187, 472059, 101032, 459828, 347329, 114427, 94836, 1079666, 1326142, 383040, 175045, 486302, 702614, 800093, 2890585, 749715, 100494, 720165, 530316, 795278, 705228, 310364, 730188, 287903, 255104, 608403, 493741, 197579, 98211, 1196389, 851488, 408258, 740122, 162471, 235750, 429841, 280551, 434095, 986907, 459535, 521411, 444089, 345779, 644089, 1511511, 259033, 857504, 440487, 655905, 522602, 1260769, 704242, 355941, 572333, 482841, 779237, 447588, 350687, 323737, 1316494, 306270, 639573, 819553, 701140, 669174, 780010, 675042, 476951, 636674, 322479, 897583, 280582, 223958, 573984, 561763, 119797, 430493, 121994, 311747, 117433, 377765, 318296, 740667, 431248, 547706, 508009, 414691, 367457, 723737, 442906, 583473, 347572, 1269089, 287286, 380605, 786487, 704711, 1465276, 758753, 673171, 160802, 291861, 864733, 186361, 546087, 1459274, 1695574, 115478, 421893, 386121, 312819, 164972, 1072990, 214957, 152503, 420284, 300056, 868375, 940076, 349342, 205208, 928322, 195265, 461329, 359228, 419971, 560162, 326400, 702646, 957888, 320780, 321516, 414771, 187523, 870857, 1055493, 342091, 506784, 282728, 1045719, 262333, 128426, 495313, 750638, 98964, 1366471, 574893, 319167, 147634, 1547306, 890810, 507583, 261595, 408664, 943050, 676186, 857526, 578999, 449016, 240998, 433603, 682640, 120305, 912938, 1129760, 525413, 547769, 609464, 611740, 324072, 206504, 2926245, 295669, 919509, 366206, 535787, 794086, 708510, 622156, 383847, 1071951, 677651, 914990, 923202, 596798, 344327 ],
        "0" : [ 5844, 9412, 7071, 5313, 7071, 8556, 7071, 5844, 7071, 5313, 9412, 7071, 9412, 20176, 20176, 7778, 5844, 7778, 6428, 4830, 4390, 18341, 20176, 7071, 5844, 8556, 16674, 10353, 32493, 9412, 3628, 16674, 9412, 8556, 9412, 6428, 8556, 6428, 5844, 16674, 7778, 5313, 4830, 22193, 10353, 6428, 18341, 5844, 7071, 7071, 5844, 7778, 10353, 7071, 7071, 6428, 6428, 9412, 20176, 6428, 16674, 7071, 10353, 8556, 22193, 16674, 6428, 9412, 7778, 9412, 6428, 5844, 6428, 18341, 6428, 9412, 11388, 10353, 20176, 10353, 9412, 6428, 8556, 5844, 9412, 5844, 5844, 18341, 8556, 4390, 13780, 4830, 7071, 4830, 7071, 6428, 20176, 7071, 7778, 7778, 5844, 7071, 11388, 7778, 8556, 6428, 18341, 6428, 6428, 10353, 8556, 22193, 9412, 7778, 5844, 6428, 20176, 5313, 7071, 20176, 24413, 4390, 7071, 7071, 7071, 6428, 20176, 6428, 5844, 10353, 5844, 10353, 15158, 7071, 5844, 20176, 4830, 7778, 5844, 8556, 9412, 7071, 9412, 11388, 5313, 6428, 13780, 4830, 16674, 11388, 6428, 15158, 6428, 20176, 6428, 5313, 7778, 8556, 4390, 22193, 8556, 7778, 5844, 22193, 9412, 7778, 6428, 6428, 11388, 9412, 9412, 7778, 7778, 5313, 6428, 9412, 4830, 11388, 18341, 7778, 7778, 8556, 8556, 6428, 5313, 35743, 6428, 20176, 7778, 10353, 9412, 11388, 20176, 6428, 22193, 10353, 10353, 11388, 7778, 6428 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 4,
        "FinishedTasksNum" : 80,
        "FinishedTasksTotalTimeInMs" : 116849.0,
        "FinishedTasksDistributionInMs" : [ 130.0, 783.0, 856.0, 1195.0, 8584.0 ]
      },
      "StartTimeInMs" : 1702226643126,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 68372,
        "IOBytes" : {
          "Total" : 3121844247,
          "Details" : {
            "IR" : 2545366284,
            "IW" : 0,
            "SR" : 344431542,
            "SW" : 232046421
          }
        }
      }
    },
    "1" : {
      "LQP" : {
        "operators" : {
          "45" : {
            "sign" : -651341917,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 29800787536,
            "rowCount" : 143273017,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(cs_item_sk#112) AND isnotnull(cs_sold_date_sk#131)) AND dynamicpruning#1292 [cs_sold_date_sk#131]) "
          },
          "98" : {
            "sign" : -1972788865,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#877, ss_item_sk#878, ss_customer_sk#879, ss_cdemo_sk#880, ss_hdemo_sk#881, ss_addr_sk#882, ss_store_sk#883, ss_promo_sk#884, ss_ticket_number#885L, ss_quantity#886, ss_wholesale_cost#887, ss_list_price#888, ss_sales_price#889, ss_ext_discount_amt#890, ss_ext_sales_price#891, ss_ext_wholesale_cost#892, ss_ext_list_price#893, ss_ext_tax#894, ss_coupon_amt#895, ss_net_paid#896, ss_net_paid_inc_tax#897, ss_net_profit#898, ss_sold_date_sk#899], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "113" : {
            "sign" : -1902449141,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 14972593792,
            "rowCount" : 71983624,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(ws_sold_date_sk#1023) AND dynamicpruning#1290 [ws_sold_date_sk#1023]) "
          },
          "34" : {
            "sign" : -117080718,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 17256,
            "rowCount" : 1438,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#70] "
          },
          "67" : {
            "sign" : 579430964,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 86282466,
            "rowCount" : 202541,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(i_item_sk#1075) AND isnotnull(i_brand_id#1082)) AND isnotnull(i_class_id#1084)) AND isnotnull(i_category_id#1086)) "
          },
          "169" : {
            "sign" : 268592763,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 7291476,
            "rowCount" : 202541,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (((i_brand_id#32 = brand_id#742) AND (i_class_id#34 = class_id#743)) AND (i_category_id#36 = category_id#744)) "
          },
          "120" : {
            "sign" : -94739066,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 9192253472,
            "rowCount" : 287257921,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_quantity#1134, ss_list_price#1136, i_brand_id#1155, i_class_id#1157, i_category_id#1159] "
          },
          "153" : {
            "sign" : -41637094,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1057344,
            "rowCount" : 1096,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#799], BroadcastQueryStage 27 "
          },
          "93" : {
            "sign" : -1298322270,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Union",
            "sizeInBytes" : 9471049040,
            "rowCount" : 473552452,
            "isRuntime" : false,
            "predicate" : " (unknown) Union Arguments: false, false "
          },
          "158" : {
            "sign" : 1047357953,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 1577881038080,
            "rowCount" : 78894051904,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ws_sold_date_sk#165 = d_date_sk#849) "
          },
          "142" : {
            "sign" : 2101479604,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 4400725648,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#48, ss_sold_date_sk#69] "
          },
          "182" : {
            "sign" : -2085338542,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 3140544532640,
            "rowCount" : 157027226632,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cs_sold_date_sk#131 = d_date_sk#799) "
          },
          "147" : {
            "sign" : -1257988508,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 2877489060,
            "rowCount" : 143874453,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_brand_id#784, i_class_id#786, i_category_id#788] "
          },
          "12" : {
            "sign" : 571393713,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(ss_item_sk#1053) AND isnotnull(ss_sold_date_sk#1074)) AND dynamicpruning#1303 [ss_sold_date_sk#1074]) "
          },
          "66" : {
            "sign" : 1540331732,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 4860984,
            "rowCount" : 202541,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_item_sk#1075, i_brand_id#1082, i_class_id#1084, i_category_id#1086] "
          },
          "89" : {
            "sign" : 313580017,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 1577881038080,
            "rowCount" : 78894051904,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ws_sold_date_sk#165 = d_date_sk#849) "
          },
          "51" : {
            "sign" : -1343085724,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 4896000,
            "rowCount" : 204000,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_item_sk#777, i_brand_id#784, i_class_id#786, i_category_id#788], BroadcastQueryStage 4 "
          },
          "124" : {
            "sign" : 1235555785,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 7701269884,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (ss_item_sk#1126 = ss_item_sk#745) "
          },
          "84" : {
            "sign" : -41638117,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1057344,
            "rowCount" : 1096,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#799], BroadcastQueryStage 15 "
          },
          "8" : {
            "sign" : 773515021,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 6372974040,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#1053, ss_quantity#1061, ss_list_price#1063] "
          },
          "73" : {
            "sign" : -100914599,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 5745158420,
            "rowCount" : 287257921,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_brand_id#762 AS brand_id#742, i_class_id#764 AS class_id#743, i_category_id#766 AS category_id#744] "
          },
          "164" : {
            "sign" : 317362133,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 4860984,
            "rowCount" : 202541,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (i_item_sk#1148 = ss_item_sk#745) "
          },
          "170" : {
            "sign" : 1187328974,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 2739200,
            "rowCount" : 136960,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (((brand_id#742 <=> i_brand_id#834) AND (class_id#743 <=> i_class_id#836)) AND (category_id#744 <=> i_category_id#838)) "
          },
          "78" : {
            "sign" : 1902271876,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 4860984,
            "rowCount" : 202541,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (((i_brand_id#762 <=> i_brand_id#784) AND (i_class_id#764 <=> i_class_id#786)) AND (i_category_id#766 <=> i_category_id#788)) "
          },
          "175" : {
            "sign" : 1894575332,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 6028994137760,
            "rowCount" : 301449706888,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#69 = d_date_sk#70) "
          },
          "19" : {
            "sign" : -1755539215,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#1209, d_date_id#1210, d_date#1211, d_month_seq#1212, d_week_seq#1213, d_quarter_seq#1214, d_year#1215, d_dow#1216, d_moy#1217, d_dom#1218, d_qoy#1219, d_fy_year#1220, d_fy_quarter_seq#1221, d_fy_week_seq#1222, d_day_name#1223, d_quarter_name#1224, d_holiday#1225, d_weekend#1226, d_following_holiday#1227, d_first_dom#1228, d_last_dom#1229, d_same_day_ly#1230, d_same_day_lq#1231, d_current_day#1232, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "100" : {
            "sign" : -2071970095,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 353748,
            "rowCount" : 1438,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(d_year#906) AND ((d_year#906 >= 1998) AND (d_year#906 <= 2000))) AND isnotnull(d_date_sk#900)) "
          },
          "23" : {
            "sign" : -1756391561,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 86282466,
            "rowCount" : 202541,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(i_brand_id#32) AND isnotnull(i_class_id#34)) AND isnotnull(i_category_id#36)) "
          },
          "62" : {
            "sign" : -353540391,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1057344,
            "rowCount" : 1096,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#849], BroadcastQueryStage 6 "
          },
          "135" : {
            "sign" : 2106213659,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 7291476,
            "rowCount" : 202541,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (((i_brand_id#32 = brand_id#742) AND (i_class_id#34 = class_id#743)) AND (i_category_id#36 = category_id#744)) "
          },
          "128" : {
            "sign" : 1096234976,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 876588,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#1170] "
          },
          "4" : {
            "sign" : -1346981704,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 10408960,
            "rowCount" : 136960,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(sales#731) AND (cast(sales#731 as decimal(32,6)) > cast(scalar-subquery#735 [] as decimal(32,6)))) "
          },
          "121" : {
            "sign" : 462098736,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 11490316840,
            "rowCount" : 287257921,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_item_sk#1126 = i_item_sk#1148) "
          },
          "88" : {
            "sign" : 1041545286,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 946728622848,
            "rowCount" : 78894051904,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_item_sk#134] "
          },
          "77" : {
            "sign" : -1598388943,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1057344,
            "rowCount" : 1096,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#70], BroadcastQueryStage 11 "
          },
          "40" : {
            "sign" : -1203051983,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 2877489060,
            "rowCount" : 143874453,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_brand_id#784, i_class_id#786, i_category_id#788] "
          },
          "110" : {
            "sign" : 17831375,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 1389912100,
            "rowCount" : 69495605,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_quantity#1007 AS quantity#750, ws_list_price#1009 AS list_price#751] "
          },
          "15" : {
            "sign" : 1866012666,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(d_week_seq#1101) AND (d_week_seq#1101 = scalar-subquery#734 [])) AND isnotnull(d_date_sk#1097)) "
          },
          "11" : {
            "sign" : 1222696026,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 7701269884,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#1053, ss_quantity#1061, ss_list_price#1063, ss_sold_date_sk#1074] "
          },
          "104" : {
            "sign" : 1942236716,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 3438552408,
            "rowCount" : 143273017,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_quantity#945, cs_list_price#947, cs_sold_date_sk#961] "
          },
          "90" : {
            "sign" : 1925146429,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1057344,
            "rowCount" : 1096,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#849], BroadcastQueryStage 19 "
          },
          "9" : {
            "sign" : -1260439034,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 8497298720,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#1074 = d_date_sk#1097) "
          },
          "141" : {
            "sign" : 1894574278,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 6028994137760,
            "rowCount" : 301449706888,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#69 = d_date_sk#70) "
          },
          "139" : {
            "sign" : 2131203265,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 8043221788,
            "rowCount" : 287257921,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_item_sk#48 = i_item_sk#755) "
          },
          "181" : {
            "sign" : -1489163381,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 1884326719584,
            "rowCount" : 157027226632,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_item_sk#112] "
          },
          "132" : {
            "sign" : 1734827371,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 492,
            "rowCount" : 2,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(d_year#1243) AND isnotnull(d_moy#1245)) AND isnotnull(d_dom#1246)) AND (((d_year#1243 = 1998) AND (d_moy#1245 = 12)) AND (d_dom#1246 = 16))) "
          },
          "44" : {
            "sign" : 2058802089,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 2292368272,
            "rowCount" : 143273017,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_item_sk#112, cs_sold_date_sk#131] "
          },
          "33" : {
            "sign" : 1104597854,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#47, ss_item_sk#48, ss_customer_sk#49, ss_cdemo_sk#50, ss_hdemo_sk#51, ss_addr_sk#52, ss_store_sk#53, ss_promo_sk#54, ss_ticket_number#55L, ss_quantity#56, ss_wholesale_cost#57, ss_list_price#58, ss_sales_price#59, ss_ext_discount_amt#60, ss_ext_sales_price#61, ss_ext_wholesale_cost#62, ss_ext_list_price#63, ss_ext_tax#64, ss_coupon_amt#65, ss_net_paid#66, ss_net_paid_inc_tax#67, ss_net_profit#68, ss_sold_date_sk#69], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "117" : {
            "sign" : -502763688,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#1024, d_date_id#1025, d_date#1026, d_month_seq#1027, d_week_seq#1028, d_quarter_seq#1029, d_year#1030, d_dow#1031, d_moy#1032, d_dom#1033, d_qoy#1034, d_fy_year#1035, d_fy_quarter_seq#1036, d_fy_week_seq#1037, d_day_name#1038, d_quarter_name#1039, d_holiday#1040, d_weekend#1041, d_following_holiday#1042, d_first_dom#1043, d_last_dom#1044, d_same_day_ly#1045, d_same_day_lq#1046, d_current_day#1047, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "186" : {
            "sign" : 1556882039,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 2013673340,
            "rowCount" : 71916905,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ws_item_sk#134 = i_item_sk#827) "
          },
          "22" : {
            "sign" : 2089743597,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 4860984,
            "rowCount" : 202541,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_item_sk#25, i_brand_id#32, i_class_id#34, i_category_id#36] "
          },
          "56" : {
            "sign" : -1744486121,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 1151737984,
            "rowCount" : 71983624,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_item_sk#134, ws_sold_date_sk#165] "
          },
          "55" : {
            "sign" : 979946917,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 1577881038080,
            "rowCount" : 78894051904,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ws_sold_date_sk#165 = d_date_sk#849) "
          },
          "163" : {
            "sign" : -1902204624,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 876588,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#1170], BroadcastQueryStage 34 "
          },
          "26" : {
            "sign" : 425826216,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 2739200,
            "rowCount" : 136960,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [brand_id#742, class_id#743, category_id#744], [brand_id#742, class_id#743, category_id#744] "
          },
          "134" : {
            "sign" : -420665808,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 2430492,
            "rowCount" : 202541,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_item_sk#25 AS ss_item_sk#745] "
          },
          "50" : {
            "sign" : 414298850,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1057344,
            "rowCount" : 1096,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#799], BroadcastQueryStage 3 "
          },
          "123" : {
            "sign" : -1082464953,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 8497298720,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#1147 = d_date_sk#1170) "
          },
          "174" : {
            "sign" : 899852841,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 3617396482656,
            "rowCount" : 301449706888,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#48] "
          },
          "37" : {
            "sign" : -1159939661,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1057344,
            "rowCount" : 1096,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#70], BroadcastQueryStage 0 "
          },
          "68" : {
            "sign" : 73332589,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 86904000,
            "rowCount" : 204000,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [i_item_sk#1075, i_item_id#1076, i_rec_start_date#1077, i_rec_end_date#1078, i_item_desc#1079, i_current_price#1080, i_wholesale_cost#1081, i_brand_id#1082, i_brand#1083, i_class_id#1084, i_class#1085, i_category_id#1086, i_category#1087, i_manufact_id#1088, i_manufact#1089, i_size#1090, i_formulation#1091, i_color#1092, i_units#1093, i_container#1094, i_manager_id#1095, i_product_name#1096], `spark_catalog`.`tpcds_100`.`item`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "166" : {
            "sign" : -1448453368,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 86282466,
            "rowCount" : 202541,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(i_item_sk#1148) AND isnotnull(i_brand_id#1155)) AND isnotnull(i_class_id#1157)) AND isnotnull(i_category_id#1159)) "
          },
          "61" : {
            "sign" : 1394482487,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#849, d_date_id#850, d_date#851, d_month_seq#852, d_week_seq#853, d_quarter_seq#854, d_year#855, d_dow#856, d_moy#857, d_dom#858, d_qoy#859, d_fy_year#860, d_fy_quarter_seq#861, d_fy_week_seq#862, d_day_name#863, d_quarter_name#864, d_holiday#865, d_weekend#866, d_following_holiday#867, d_first_dom#868, d_last_dom#869, d_same_day_ly#870, d_same_day_lq#871, d_current_day#872, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "107" : {
            "sign" : 406087876,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 17256,
            "rowCount" : 1438,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#962] "
          },
          "13" : {
            "sign" : 913239237,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#1052, ss_item_sk#1053, ss_customer_sk#1054, ss_cdemo_sk#1055, ss_hdemo_sk#1056, ss_addr_sk#1057, ss_store_sk#1058, ss_promo_sk#1059, ss_ticket_number#1060L, ss_quantity#1061, ss_wholesale_cost#1062, ss_list_price#1063, ss_sales_price#1064, ss_ext_discount_amt#1065, ss_ext_sales_price#1066, ss_ext_wholesale_cost#1067, ss_ext_list_price#1068, ss_ext_tax#1069, ss_coupon_amt#1070, ss_net_paid#1071, ss_net_paid_inc_tax#1072, ss_net_profit#1073, ss_sold_date_sk#1074], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "46" : {
            "sign" : -1958078640,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 29800787536,
            "rowCount" : 143273017,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [cs_sold_time_sk#98, cs_ship_date_sk#99, cs_bill_customer_sk#100, cs_bill_cdemo_sk#101, cs_bill_hdemo_sk#102, cs_bill_addr_sk#103, cs_ship_customer_sk#104, cs_ship_cdemo_sk#105, cs_ship_hdemo_sk#106, cs_ship_addr_sk#107, cs_call_center_sk#108, cs_catalog_page_sk#109, cs_ship_mode_sk#110, cs_warehouse_sk#111, cs_item_sk#112, cs_promo_sk#113, cs_order_number#114L, cs_quantity#115, cs_wholesale_cost#116, cs_list_price#117, cs_sales_price#118, cs_ext_discount_amt#119, cs_ext_sales_price#120, cs_ext_wholesale_cost#121, ... 10 more fields], `spark_catalog`.`tpcds_100`.`catalog_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "99" : {
            "sign" : 2019201408,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 17256,
            "rowCount" : 1438,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#900] "
          },
          "177" : {
            "sign" : -1809642069,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 4860984,
            "rowCount" : 202541,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (((i_brand_id#762 <=> i_brand_id#784) AND (i_class_id#764 <=> i_class_id#786)) AND (i_category_id#766 <=> i_category_id#788)) "
          },
          "24" : {
            "sign" : 2096275601,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 86904000,
            "rowCount" : 204000,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [i_item_sk#25, i_item_id#26, i_rec_start_date#27, i_rec_end_date#28, i_item_desc#29, i_current_price#30, i_wholesale_cost#31, i_brand_id#32, i_brand#33, i_class_id#34, i_class#35, i_category_id#36, i_category#37, i_manufact_id#38, i_manufact#39, i_size#40, i_formulation#41, i_color#42, i_units#43, i_container#44, i_manager_id#45, i_product_name#46], `spark_catalog`.`tpcds_100`.`item`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "155" : {
            "sign" : -905361319,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 1438338100,
            "rowCount" : 71916905,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_brand_id#834, i_class_id#836, i_category_id#838] "
          },
          "94" : {
            "sign" : 869525063,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 5310811700,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_quantity#886 AS quantity#746, ss_list_price#888 AS list_price#747] "
          },
          "83" : {
            "sign" : 267741808,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 3140544532640,
            "rowCount" : 157027226632,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cs_sold_date_sk#131 = d_date_sk#799) "
          },
          "35" : {
            "sign" : 1340377833,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 353748,
            "rowCount" : 1438,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(d_year#76) AND ((d_year#76 >= 1998) AND (d_year#76 <= 2000))) AND isnotnull(d_date_sk#70)) "
          },
          "16" : {
            "sign" : 682718368,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#1097, d_date_id#1098, d_date#1099, d_month_seq#1100, d_week_seq#1101, d_quarter_seq#1102, d_year#1103, d_dow#1104, d_moy#1105, d_dom#1106, d_qoy#1107, d_fy_year#1108, d_fy_quarter_seq#1109, d_fy_week_seq#1110, d_day_name#1111, d_quarter_name#1112, d_holiday#1113, d_weekend#1114, d_following_holiday#1115, d_first_dom#1116, d_last_dom#1117, d_same_day_ly#1118, d_same_day_lq#1119, d_current_day#1120, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "79" : {
            "sign" : 1549877842,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 4860984,
            "rowCount" : 202541,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_item_sk#755, i_brand_id#762, i_class_id#764, i_category_id#766], ShuffleQueryStage 13 "
          },
          "152" : {
            "sign" : -927692759,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 29800787536,
            "rowCount" : 143273017,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(cs_item_sk#112) AND isnotnull(cs_sold_date_sk#131)) AND dynamicpruning#1298 [cs_sold_date_sk#131]) "
          },
          "5" : {
            "sign" : -1885483354,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 10408960,
            "rowCount" : 136960,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [i_brand_id#1082, i_class_id#1084, i_category_id#1086], [store AS channel#730, i_brand_id#1082, i_class_id#1084, i_category_id#1086, sum((cast(ss_quantity#1061 as decimal(10,0)) * ss_list_price#1063)) AS sales#731, count(1) AS number_sales#732L] "
          },
          "103" : {
            "sign" : 824386657,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 3878455336,
            "rowCount" : 138516262,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cs_sold_date_sk#961 = d_date_sk#962) "
          },
          "112" : {
            "sign" : 49678577,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 1727606976,
            "rowCount" : 71983624,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_quantity#1007, ws_list_price#1009, ws_sold_date_sk#1023] "
          },
          "72" : {
            "sign" : 1287829704,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 2739200,
            "rowCount" : 136960,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [brand_id#742, class_id#743, category_id#744], [brand_id#742, class_id#743, category_id#744] "
          },
          "10" : {
            "sign" : 1732891687,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 7701269884,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (ss_item_sk#1053 = ss_item_sk#745) "
          },
          "159" : {
            "sign" : -1060113711,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 1151737984,
            "rowCount" : 71983624,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_item_sk#134, ws_sold_date_sk#165] "
          },
          "59" : {
            "sign" : 43276156,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 17256,
            "rowCount" : 1438,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#849] "
          },
          "144" : {
            "sign" : -1598387920,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1057344,
            "rowCount" : 1096,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#70], BroadcastQueryStage 23 "
          },
          "87" : {
            "sign" : -787102036,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 2013673340,
            "rowCount" : 71916905,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ws_item_sk#134 = i_item_sk#827) "
          },
          "48" : {
            "sign" : -1702477857,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 353748,
            "rowCount" : 1438,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(d_year#805) AND ((d_year#805 >= 1998) AND (d_year#805 <= 2000))) AND isnotnull(d_date_sk#799)) "
          },
          "21" : {
            "sign" : -1550482447,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 7291476,
            "rowCount" : 202541,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (((i_brand_id#32 = brand_id#742) AND (i_class_id#34 = class_id#743)) AND (i_category_id#36 = category_id#744)) "
          },
          "116" : {
            "sign" : -626435234,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 353748,
            "rowCount" : 1438,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(d_year#1030) AND ((d_year#1030 >= 1998) AND (d_year#1030 <= 2000))) AND isnotnull(d_date_sk#1024)) "
          },
          "76" : {
            "sign" : 174031885,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 6028994137760,
            "rowCount" : 301449706888,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#69 = d_date_sk#70) "
          },
          "138" : {
            "sign" : -5665685,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 5745158420,
            "rowCount" : 287257921,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_brand_id#762 AS brand_id#742, i_class_id#764 AS class_id#743, i_category_id#766 AS category_id#744] "
          },
          "54" : {
            "sign" : 1419071664,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 946728622848,
            "rowCount" : 78894051904,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_item_sk#134] "
          },
          "188" : {
            "sign" : 1047359007,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 1577881038080,
            "rowCount" : 78894051904,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ws_sold_date_sk#165 = d_date_sk#849) "
          },
          "43" : {
            "sign" : 1948299501,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 3140544532640,
            "rowCount" : 157027226632,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cs_sold_date_sk#131 = d_date_sk#799) "
          },
          "148" : {
            "sign" : 93782990,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 4028484684,
            "rowCount" : 143874453,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cs_item_sk#112 = i_item_sk#777) "
          },
          "127" : {
            "sign" : 1179432008,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#1125, ss_item_sk#1126, ss_customer_sk#1127, ss_cdemo_sk#1128, ss_hdemo_sk#1129, ss_addr_sk#1130, ss_store_sk#1131, ss_promo_sk#1132, ss_ticket_number#1133L, ss_quantity#1134, ss_wholesale_cost#1135, ss_list_price#1136, ss_sales_price#1137, ss_ext_discount_amt#1138, ss_ext_sales_price#1139, ss_ext_wholesale_cost#1140, ss_ext_list_price#1141, ss_ext_tax#1142, ss_coupon_amt#1143, ss_net_paid#1144, ss_net_paid_inc_tax#1145, ss_net_profit#1146, ss_sold_date_sk#1147], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "65" : {
            "sign" : -296635603,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 4860984,
            "rowCount" : 202541,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (i_item_sk#1075 = ss_item_sk#745) "
          },
          "71" : {
            "sign" : -2141566297,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 2739200,
            "rowCount" : 136960,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (((brand_id#742 <=> i_brand_id#834) AND (class_id#743 <=> i_class_id#836)) AND (category_id#744 <=> i_category_id#838)) "
          },
          "57" : {
            "sign" : -899561730,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 14972593792,
            "rowCount" : 71983624,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(ws_item_sk#134) AND isnotnull(ws_sold_date_sk#165)) AND dynamicpruning#1293 [ws_sold_date_sk#165]) "
          },
          "108" : {
            "sign" : -1695423935,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 353748,
            "rowCount" : 1438,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(d_year#968) AND ((d_year#968 >= 1998) AND (d_year#968 <= 2000))) AND isnotnull(d_date_sk#962)) "
          },
          "32" : {
            "sign" : -1052942334,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(ss_item_sk#48) AND isnotnull(ss_sold_date_sk#69)) AND dynamicpruning#1291 [ss_sold_date_sk#69]) "
          },
          "185" : {
            "sign" : -32600679,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 1438338100,
            "rowCount" : 71916905,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_brand_id#834, i_class_id#836, i_category_id#838] "
          },
          "80" : {
            "sign" : -1712945526,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 2877489060,
            "rowCount" : 143874453,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_brand_id#784, i_class_id#786, i_category_id#788] "
          },
          "106" : {
            "sign" : -70077436,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 29800787536,
            "rowCount" : 143273017,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [cs_sold_time_sk#928, cs_ship_date_sk#929, cs_bill_customer_sk#930, cs_bill_cdemo_sk#931, cs_bill_hdemo_sk#932, cs_bill_addr_sk#933, cs_ship_customer_sk#934, cs_ship_cdemo_sk#935, cs_ship_hdemo_sk#936, cs_ship_addr_sk#937, cs_call_center_sk#938, cs_catalog_page_sk#939, cs_ship_mode_sk#940, cs_warehouse_sk#941, cs_item_sk#942, cs_promo_sk#943, cs_order_number#944L, cs_quantity#945, cs_wholesale_cost#946, cs_list_price#947, cs_sales_price#948, cs_ext_discount_amt#949, cs_ext_sales_price#950, cs_ext_wholesale_cost#951, ... 10 more fields], `spark_catalog`.`tpcds_100`.`catalog_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "137" : {
            "sign" : -2143978488,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 2739200,
            "rowCount" : 136960,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [brand_id#742, class_id#743, category_id#744], [brand_id#742, class_id#743, category_id#744] "
          },
          "82" : {
            "sign" : -452769443,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 1884326719584,
            "rowCount" : 157027226632,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_item_sk#112] "
          },
          "49" : {
            "sign" : -724542004,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#799, d_date_id#800, d_date#801, d_month_seq#802, d_week_seq#803, d_quarter_seq#804, d_year#805, d_dow#806, d_moy#807, d_dom#808, d_qoy#809, d_fy_year#810, d_fy_quarter_seq#811, d_fy_week_seq#812, d_day_name#813, d_quarter_name#814, d_holiday#815, d_weekend#816, d_following_holiday#817, d_first_dom#818, d_last_dom#819, d_same_day_ly#820, d_same_day_lq#821, d_current_day#822, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "6" : {
            "sign" : 84519409,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 9192253472,
            "rowCount" : 287257921,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_quantity#1061, ss_list_price#1063, i_brand_id#1082, i_class_id#1084, i_category_id#1086] "
          },
          "126" : {
            "sign" : -604473204,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(ss_item_sk#1126) AND isnotnull(ss_sold_date_sk#1147)) AND dynamicpruning#1310 [ss_sold_date_sk#1147]) "
          },
          "36" : {
            "sign" : -232749464,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#70, d_date_id#71, d_date#72, d_month_seq#73, d_week_seq#74, d_quarter_seq#75, d_year#76, d_dow#77, d_moy#78, d_dom#79, d_qoy#80, d_fy_year#81, d_fy_quarter_seq#82, d_fy_week_seq#83, d_day_name#84, d_quarter_name#85, d_holiday#86, d_weekend#87, d_following_holiday#88, d_first_dom#89, d_last_dom#90, d_same_day_ly#91, d_same_day_lq#92, d_current_day#93, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "1" : {
            "sign" : 262950065,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
            "sizeInBytes" : 19722240,
            "rowCount" : 136960,
            "isRuntime" : false,
            "predicate" : " (unknown) LocalLimit Arguments: 100 "
          },
          "39" : {
            "sign" : 1019827343,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 4860984,
            "rowCount" : 202541,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_item_sk#755, i_brand_id#762, i_class_id#764, i_category_id#766], ShuffleQueryStage 1 "
          },
          "140" : {
            "sign" : 899851787,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 3617396482656,
            "rowCount" : 301449706888,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#48] "
          },
          "173" : {
            "sign" : -364012639,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 8043221788,
            "rowCount" : 287257921,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_item_sk#48 = i_item_sk#755) "
          },
          "17" : {
            "sign" : -2061501032,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 36,
            "rowCount" : 3,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_week_seq#1213] "
          },
          "180" : {
            "sign" : 1689598496,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 4028484684,
            "rowCount" : 143874453,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cs_item_sk#112 = i_item_sk#777) "
          },
          "25" : {
            "sign" : 860974026,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 2739200,
            "rowCount" : 136960,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (((brand_id#742 <=> i_brand_id#834) AND (class_id#743 <=> i_class_id#836)) AND (category_id#744 <=> i_category_id#838)) "
          },
          "60" : {
            "sign" : 2026129195,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 353748,
            "rowCount" : 1438,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(d_year#855) AND ((d_year#855 >= 1998) AND (d_year#855 <= 2000))) AND isnotnull(d_date_sk#849)) "
          },
          "14" : {
            "sign" : 707519831,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 876588,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#1097] "
          },
          "133" : {
            "sign" : 813769211,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#1237, d_date_id#1238, d_date#1239, d_month_seq#1240, d_week_seq#1241, d_quarter_seq#1242, d_year#1243, d_dow#1244, d_moy#1245, d_dom#1246, d_qoy#1247, d_fy_year#1248, d_fy_quarter_seq#1249, d_fy_week_seq#1250, d_day_name#1251, d_quarter_name#1252, d_holiday#1253, d_weekend#1254, d_following_holiday#1255, d_first_dom#1256, d_last_dom#1257, d_same_day_ly#1258, d_same_day_lq#1259, d_current_day#1260, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "47" : {
            "sign" : 2083558648,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 17256,
            "rowCount" : 1438,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#799] "
          },
          "122" : {
            "sign" : -392156417,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 6372974040,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#1126, ss_quantity#1134, ss_list_price#1136] "
          },
          "111" : {
            "sign" : 1503367439,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 1945876940,
            "rowCount" : 69495605,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ws_sold_date_sk#1023 = d_date_sk#1024) "
          },
          "102" : {
            "sign" : 825651901,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 2770325240,
            "rowCount" : 138516262,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_quantity#945 AS quantity#748, cs_list_price#947 AS list_price#749] "
          },
          "31" : {
            "sign" : -948624390,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 4400725648,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#48, ss_sold_date_sk#69] "
          },
          "96" : {
            "sign" : 1776873494,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 6601088472,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_quantity#886, ss_list_price#888, ss_sold_date_sk#899] "
          },
          "69" : {
            "sign" : 2089449843,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 2430492,
            "rowCount" : 202541,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_item_sk#25 AS ss_item_sk#745] "
          },
          "162" : {
            "sign" : 682579408,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 4896000,
            "rowCount" : 204000,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_item_sk#827, i_brand_id#834, i_class_id#836, i_category_id#838], BroadcastQueryStage 33 "
          },
          "151" : {
            "sign" : -641764561,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 2292368272,
            "rowCount" : 143273017,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_item_sk#112, cs_sold_date_sk#131] "
          },
          "95" : {
            "sign" : -1804794945,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 7435136380,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#899 = d_date_sk#900) "
          },
          "190" : {
            "sign" : 682580462,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 4896000,
            "rowCount" : 204000,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_item_sk#827, i_brand_id#834, i_class_id#836, i_category_id#838], BroadcastQueryStage 46 "
          },
          "58" : {
            "sign" : 1159919426,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 14972593792,
            "rowCount" : 71983624,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ws_sold_time_sk#132, ws_ship_date_sk#133, ws_item_sk#134, ws_bill_customer_sk#135, ws_bill_cdemo_sk#136, ws_bill_hdemo_sk#137, ws_bill_addr_sk#138, ws_ship_customer_sk#139, ws_ship_cdemo_sk#140, ws_ship_hdemo_sk#141, ws_ship_addr_sk#142, ws_web_page_sk#143, ws_web_site_sk#144, ws_ship_mode_sk#145, ws_warehouse_sk#146, ws_promo_sk#147, ws_order_number#148L, ws_quantity#149, ws_wholesale_cost#150, ws_list_price#151, ws_sales_price#152, ws_ext_discount_amt#153, ws_ext_sales_price#154, ws_ext_wholesale_cost#155, ... 10 more fields], `spark_catalog`.`tpcds_100`.`web_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "145" : {
            "sign" : -761977349,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 4860984,
            "rowCount" : 202541,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (((i_brand_id#762 <=> i_brand_id#784) AND (i_class_id#764 <=> i_class_id#786)) AND (i_category_id#766 <=> i_category_id#788)) "
          },
          "184" : {
            "sign" : 1314016766,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 4896000,
            "rowCount" : 204000,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_item_sk#777, i_brand_id#784, i_class_id#786, i_category_id#788], BroadcastQueryStage 42 "
          },
          "64" : {
            "sign" : -21562714,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 876588,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#1097], BroadcastQueryStage 9 "
          },
          "53" : {
            "sign" : -1288357171,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 2013673340,
            "rowCount" : 71916905,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ws_item_sk#134 = i_item_sk#827) "
          },
          "42" : {
            "sign" : -845889440,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 1884326719584,
            "rowCount" : 157027226632,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_item_sk#112] "
          },
          "75" : {
            "sign" : -1868509690,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 3617396482656,
            "rowCount" : 301449706888,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#48] "
          },
          "115" : {
            "sign" : -1100969675,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 17256,
            "rowCount" : 1438,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#1024] "
          },
          "156" : {
            "sign" : 2054093883,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 2013673340,
            "rowCount" : 71916905,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ws_item_sk#134 = i_item_sk#827) "
          },
          "109" : {
            "sign" : -169490734,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#962, d_date_id#963, d_date#964, d_month_seq#965, d_week_seq#966, d_quarter_seq#967, d_year#968, d_dow#969, d_moy#970, d_dom#971, d_qoy#972, d_fy_year#973, d_fy_quarter_seq#974, d_fy_week_seq#975, d_day_name#976, d_quarter_name#977, d_holiday#978, d_weekend#979, d_following_holiday#980, d_first_dom#981, d_last_dom#982, d_same_day_ly#983, d_same_day_lq#984, d_current_day#985, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "189" : {
            "sign" : 1925149157,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1057344,
            "rowCount" : 1096,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#849], BroadcastQueryStage 44 "
          },
          "0" : {
            "sign" : -85517976,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
            "sizeInBytes" : 12000,
            "rowCount" : 100,
            "isRuntime" : false,
            "predicate" : " (unknown) GlobalLimit Arguments: 100 "
          },
          "149" : {
            "sign" : -1489165086,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 1884326719584,
            "rowCount" : 157027226632,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_item_sk#112] "
          },
          "20" : {
            "sign" : -1211030058,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 2430492,
            "rowCount" : 202541,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_item_sk#25 AS ss_item_sk#745] "
          },
          "178" : {
            "sign" : 1549879919,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 4860984,
            "rowCount" : 202541,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_item_sk#755, i_brand_id#762, i_class_id#764, i_category_id#766], ShuffleQueryStage 38 "
          },
          "27" : {
            "sign" : 2037269027,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 5745158420,
            "rowCount" : 287257921,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_brand_id#762 AS brand_id#742, i_class_id#764 AS class_id#743, i_category_id#766 AS category_id#744] "
          },
          "70" : {
            "sign" : 1632014432,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 7291476,
            "rowCount" : 202541,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (((i_brand_id#32 = brand_id#742) AND (i_class_id#34 = class_id#743)) AND (i_category_id#36 = category_id#744)) "
          },
          "2" : {
            "sign" : -338500930,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 19722240,
            "rowCount" : 136960,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [i_brand_id#1082 ASC NULLS FIRST, i_class_id#1084 ASC NULLS FIRST, i_category_id#1086 ASC NULLS FIRST], true "
          },
          "86" : {
            "sign" : 508980638,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 1438338100,
            "rowCount" : 71916905,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_brand_id#834, i_class_id#836, i_category_id#838] "
          },
          "38" : {
            "sign" : -609531122,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 4860984,
            "rowCount" : 202541,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (((i_brand_id#762 <=> i_brand_id#784) AND (i_class_id#764 <=> i_class_id#786)) AND (i_category_id#766 <=> i_category_id#788)) "
          },
          "81" : {
            "sign" : -1233103082,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 4028484684,
            "rowCount" : 143874453,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cs_item_sk#112 = i_item_sk#777) "
          },
          "167" : {
            "sign" : -1752719423,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 86904000,
            "rowCount" : 204000,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [i_item_sk#1148, i_item_id#1149, i_rec_start_date#1150, i_rec_end_date#1151, i_item_desc#1152, i_current_price#1153, i_wholesale_cost#1154, i_brand_id#1155, i_brand#1156, i_class_id#1157, i_class#1158, i_category_id#1159, i_category#1160, i_manufact_id#1161, i_manufact#1162, i_size#1163, i_formulation#1164, i_color#1165, i_units#1166, i_container#1167, i_manager_id#1168, i_product_name#1169], `spark_catalog`.`tpcds_100`.`item`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "160" : {
            "sign" : 304988088,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 14972593792,
            "rowCount" : 71983624,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(ws_item_sk#134) AND isnotnull(ws_sold_date_sk#165)) AND dynamicpruning#1299 [ws_sold_date_sk#165]) "
          },
          "118" : {
            "sign" : 1937420196,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 10408960,
            "rowCount" : 136960,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(sales#737) AND (cast(sales#737 as decimal(32,6)) > cast(scalar-subquery#741 [] as decimal(32,6)))) "
          },
          "187" : {
            "sign" : -990954328,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 946728622848,
            "rowCount" : 78894051904,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_item_sk#134] "
          },
          "171" : {
            "sign" : 1806035624,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 2739200,
            "rowCount" : 136960,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [brand_id#742, class_id#743, category_id#744], [brand_id#742, class_id#743, category_id#744] "
          },
          "165" : {
            "sign" : -1062759686,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 4860984,
            "rowCount" : 202541,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_item_sk#1148, i_brand_id#1155, i_class_id#1157, i_category_id#1159] "
          },
          "92" : {
            "sign" : -1809172647,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 24,
            "rowCount" : 1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [avg((cast(quantity#746 as decimal(10,0)) * list_price#747)) AS average_sales#752] "
          },
          "125" : {
            "sign" : -303911461,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 7701269884,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#1126, ss_quantity#1134, ss_list_price#1136, ss_sold_date_sk#1147] "
          },
          "18" : {
            "sign" : -1305353512,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 738,
            "rowCount" : 3,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(d_year#1215) AND isnotnull(d_moy#1217)) AND isnotnull(d_dom#1218)) AND (((d_year#1215 = 1999) AND (d_moy#1217 = 12)) AND (d_dom#1218 = 16))) "
          },
          "101" : {
            "sign" : -820074406,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#900, d_date_id#901, d_date#902, d_month_seq#903, d_week_seq#904, d_quarter_seq#905, d_year#906, d_dow#907, d_moy#908, d_dom#909, d_qoy#910, d_fy_year#911, d_fy_quarter_seq#912, d_fy_week_seq#913, d_day_name#914, d_quarter_name#915, d_holiday#916, d_weekend#917, d_following_holiday#918, d_first_dom#919, d_last_dom#920, d_same_day_ly#921, d_same_day_lq#922, d_current_day#923, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "154" : {
            "sign" : 1314015061,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 4896000,
            "rowCount" : 204000,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_item_sk#777, i_brand_id#784, i_class_id#786, i_category_id#788], BroadcastQueryStage 29 "
          },
          "183" : {
            "sign" : -41635389,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1057344,
            "rowCount" : 1096,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#799], BroadcastQueryStage 40 "
          },
          "30" : {
            "sign" : 1668181847,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 6028994137760,
            "rowCount" : 301449706888,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#69 = d_date_sk#70) "
          },
          "7" : {
            "sign" : -412414562,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 11490316840,
            "rowCount" : 287257921,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_item_sk#1053 = i_item_sk#1075) "
          },
          "143" : {
            "sign" : -109048900,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(ss_item_sk#48) AND isnotnull(ss_sold_date_sk#69)) AND dynamicpruning#1297 [ss_sold_date_sk#69]) "
          },
          "97" : {
            "sign" : 1377797290,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(ss_sold_date_sk#899) AND dynamicpruning#1288 [ss_sold_date_sk#899]) "
          },
          "130" : {
            "sign" : 683629544,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#1170, d_date_id#1171, d_date#1172, d_month_seq#1173, d_week_seq#1174, d_quarter_seq#1175, d_year#1176, d_dow#1177, d_moy#1178, d_dom#1179, d_qoy#1180, d_fy_year#1181, d_fy_quarter_seq#1182, d_fy_week_seq#1183, d_day_name#1184, d_quarter_name#1185, d_holiday#1186, d_weekend#1187, d_following_holiday#1188, d_first_dom#1189, d_last_dom#1190, d_same_day_ly#1191, d_same_day_lq#1192, d_current_day#1193, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "179" : {
            "sign" : -1362040636,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 2877489060,
            "rowCount" : 143874453,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_brand_id#784, i_class_id#786, i_category_id#788] "
          },
          "114" : {
            "sign" : 1698660872,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 14972593792,
            "rowCount" : 71983624,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ws_sold_time_sk#990, ws_ship_date_sk#991, ws_item_sk#992, ws_bill_customer_sk#993, ws_bill_cdemo_sk#994, ws_bill_hdemo_sk#995, ws_bill_addr_sk#996, ws_ship_customer_sk#997, ws_ship_cdemo_sk#998, ws_ship_hdemo_sk#999, ws_ship_addr_sk#1000, ws_web_page_sk#1001, ws_web_site_sk#1002, ws_ship_mode_sk#1003, ws_warehouse_sk#1004, ws_promo_sk#1005, ws_order_number#1006L, ws_quantity#1007, ws_wholesale_cost#1008, ws_list_price#1009, ws_sales_price#1010, ws_ext_discount_amt#1011, ws_ext_sales_price#1012, ws_ext_wholesale_cost#1013, ... 10 more fields], `spark_catalog`.`tpcds_100`.`web_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "129" : {
            "sign" : -1689547051,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(d_week_seq#1174) AND (d_week_seq#1174 = scalar-subquery#740 [])) AND isnotnull(d_date_sk#1170)) "
          },
          "29" : {
            "sign" : -1722842562,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 3617396482656,
            "rowCount" : 301449706888,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#48] "
          },
          "41" : {
            "sign" : -1292599069,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 4028484684,
            "rowCount" : 143874453,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cs_item_sk#112 = i_item_sk#777) "
          },
          "168" : {
            "sign" : 1424371610,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 2430492,
            "rowCount" : 202541,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_item_sk#25 AS ss_item_sk#745] "
          },
          "105" : {
            "sign" : 1500374164,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 29800787536,
            "rowCount" : 143273017,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(cs_sold_date_sk#961) AND dynamicpruning#1289 [cs_sold_date_sk#961]) "
          },
          "63" : {
            "sign" : -255075860,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 4896000,
            "rowCount" : 204000,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_item_sk#827, i_brand_id#834, i_class_id#836, i_category_id#838], BroadcastQueryStage 8 "
          },
          "150" : {
            "sign" : -2085340247,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 3140544532640,
            "rowCount" : 157027226632,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cs_sold_date_sk#131 = d_date_sk#799) "
          },
          "3" : {
            "sign" : -1128280094,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 19722240,
            "rowCount" : 136960,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (((i_brand_id#1082 = i_brand_id#1155) AND (i_class_id#1084 = i_class_id#1157)) AND (i_category_id#1086 = i_category_id#1159)) "
          },
          "74" : {
            "sign" : -1971885887,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 8043221788,
            "rowCount" : 287257921,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_item_sk#48 = i_item_sk#755) "
          },
          "91" : {
            "sign" : 682578385,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 4896000,
            "rowCount" : 204000,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_item_sk#827, i_brand_id#834, i_class_id#836, i_category_id#838], BroadcastQueryStage 21 "
          },
          "52" : {
            "sign" : 1157999275,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 1438338100,
            "rowCount" : 71916905,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_brand_id#834, i_class_id#836, i_category_id#838] "
          },
          "85" : {
            "sign" : 1314014038,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 4896000,
            "rowCount" : 204000,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_item_sk#777, i_brand_id#784, i_class_id#786, i_category_id#788], BroadcastQueryStage 17 "
          },
          "172" : {
            "sign" : -971010691,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 5745158420,
            "rowCount" : 287257921,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_brand_id#762 AS brand_id#742, i_class_id#764 AS class_id#743, i_category_id#766 AS category_id#744] "
          },
          "131" : {
            "sign" : -79282860,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 24,
            "rowCount" : 2,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_week_seq#1241] "
          },
          "28" : {
            "sign" : -347247775,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 8043221788,
            "rowCount" : 287257921,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_item_sk#48 = i_item_sk#755) "
          },
          "119" : {
            "sign" : 2075978237,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 10408960,
            "rowCount" : 136960,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [i_brand_id#1155, i_class_id#1157, i_category_id#1159], [store AS channel#736, i_brand_id#1155, i_class_id#1157, i_category_id#1159, sum((cast(ss_quantity#1134 as decimal(10,0)) * ss_list_price#1136)) AS sales#737, count(1) AS number_sales#738L] "
          },
          "161" : {
            "sign" : 1925148103,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1057344,
            "rowCount" : 1096,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#849], BroadcastQueryStage 31 "
          },
          "136" : {
            "sign" : 704990116,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 2739200,
            "rowCount" : 136960,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (((brand_id#742 <=> i_brand_id#834) AND (class_id#743 <=> i_class_id#836)) AND (category_id#744 <=> i_category_id#838)) "
          },
          "157" : {
            "sign" : -990955382,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 946728622848,
            "rowCount" : 78894051904,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_item_sk#134] "
          },
          "146" : {
            "sign" : 1549878865,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 4860984,
            "rowCount" : 202541,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_item_sk#755, i_brand_id#762, i_class_id#764, i_category_id#766], ShuffleQueryStage 25 "
          },
          "176" : {
            "sign" : -1598386866,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1057344,
            "rowCount" : 1096,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#70], BroadcastQueryStage 36 "
          }
        },
        "links" : [ {
          "fromId" : 13,
          "fromName" : "LogicalRelation",
          "toId" : 12,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 16,
          "fromName" : "LogicalRelation",
          "toId" : 15,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 19,
          "fromName" : "LogicalRelation",
          "toId" : 18,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 18,
          "fromName" : "Filter",
          "toId" : 17,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 17,
          "fromName" : "Project",
          "toId" : 15,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 15,
          "fromName" : "Filter",
          "toId" : 14,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 14,
          "fromName" : "Project",
          "toId" : 12,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 12,
          "fromName" : "Filter",
          "toId" : 11,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "Project",
          "toId" : 10,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 24,
          "fromName" : "LogicalRelation",
          "toId" : 23,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 23,
          "fromName" : "Filter",
          "toId" : 22,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 22,
          "fromName" : "Project",
          "toId" : 21,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 33,
          "fromName" : "LogicalRelation",
          "toId" : 32,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 36,
          "fromName" : "LogicalRelation",
          "toId" : 35,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 35,
          "fromName" : "Filter",
          "toId" : 34,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 34,
          "fromName" : "Project",
          "toId" : 32,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 32,
          "fromName" : "Filter",
          "toId" : 31,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 31,
          "fromName" : "Project",
          "toId" : 30,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 37,
          "fromName" : "LogicalQueryStage",
          "toId" : 30,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 30,
          "fromName" : "Join",
          "toId" : 29,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 29,
          "fromName" : "Project",
          "toId" : 28,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 39,
          "fromName" : "LogicalQueryStage",
          "toId" : 38,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 46,
          "fromName" : "LogicalRelation",
          "toId" : 45,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 49,
          "fromName" : "LogicalRelation",
          "toId" : 48,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 48,
          "fromName" : "Filter",
          "toId" : 47,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 47,
          "fromName" : "Project",
          "toId" : 45,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 45,
          "fromName" : "Filter",
          "toId" : 44,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 44,
          "fromName" : "Project",
          "toId" : 43,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 50,
          "fromName" : "LogicalQueryStage",
          "toId" : 43,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 43,
          "fromName" : "Join",
          "toId" : 42,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 42,
          "fromName" : "Project",
          "toId" : 41,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 51,
          "fromName" : "LogicalQueryStage",
          "toId" : 41,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 41,
          "fromName" : "Join",
          "toId" : 40,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 40,
          "fromName" : "Project",
          "toId" : 38,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 38,
          "fromName" : "Join",
          "toId" : 28,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 28,
          "fromName" : "Join",
          "toId" : 27,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 27,
          "fromName" : "Project",
          "toId" : 26,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 26,
          "fromName" : "Aggregate",
          "toId" : 25,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 58,
          "fromName" : "LogicalRelation",
          "toId" : 57,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 61,
          "fromName" : "LogicalRelation",
          "toId" : 60,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 60,
          "fromName" : "Filter",
          "toId" : 59,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 59,
          "fromName" : "Project",
          "toId" : 57,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 57,
          "fromName" : "Filter",
          "toId" : 56,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 56,
          "fromName" : "Project",
          "toId" : 55,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 62,
          "fromName" : "LogicalQueryStage",
          "toId" : 55,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 55,
          "fromName" : "Join",
          "toId" : 54,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 54,
          "fromName" : "Project",
          "toId" : 53,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 63,
          "fromName" : "LogicalQueryStage",
          "toId" : 53,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 53,
          "fromName" : "Join",
          "toId" : 52,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 52,
          "fromName" : "Project",
          "toId" : 25,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 25,
          "fromName" : "Join",
          "toId" : 21,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 21,
          "fromName" : "Join",
          "toId" : 20,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 20,
          "fromName" : "Project",
          "toId" : 10,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "Join",
          "toId" : 9,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 64,
          "fromName" : "LogicalQueryStage",
          "toId" : 9,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "Join",
          "toId" : 8,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "Project",
          "toId" : 7,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 68,
          "fromName" : "LogicalRelation",
          "toId" : 67,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 67,
          "fromName" : "Filter",
          "toId" : 66,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 66,
          "fromName" : "Project",
          "toId" : 65,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 22,
          "fromName" : "Project",
          "toId" : 70,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 31,
          "fromName" : "Project",
          "toId" : 76,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 77,
          "fromName" : "LogicalQueryStage",
          "toId" : 76,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 76,
          "fromName" : "Join",
          "toId" : 75,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 75,
          "fromName" : "Project",
          "toId" : 74,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 79,
          "fromName" : "LogicalQueryStage",
          "toId" : 78,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 44,
          "fromName" : "Project",
          "toId" : 83,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 84,
          "fromName" : "LogicalQueryStage",
          "toId" : 83,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 83,
          "fromName" : "Join",
          "toId" : 82,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 82,
          "fromName" : "Project",
          "toId" : 81,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 85,
          "fromName" : "LogicalQueryStage",
          "toId" : 81,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 81,
          "fromName" : "Join",
          "toId" : 80,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 80,
          "fromName" : "Project",
          "toId" : 78,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 78,
          "fromName" : "Join",
          "toId" : 74,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 74,
          "fromName" : "Join",
          "toId" : 73,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 73,
          "fromName" : "Project",
          "toId" : 72,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 72,
          "fromName" : "Aggregate",
          "toId" : 71,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 56,
          "fromName" : "Project",
          "toId" : 89,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 90,
          "fromName" : "LogicalQueryStage",
          "toId" : 89,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 89,
          "fromName" : "Join",
          "toId" : 88,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 88,
          "fromName" : "Project",
          "toId" : 87,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 91,
          "fromName" : "LogicalQueryStage",
          "toId" : 87,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 87,
          "fromName" : "Join",
          "toId" : 86,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 86,
          "fromName" : "Project",
          "toId" : 71,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 71,
          "fromName" : "Join",
          "toId" : 70,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 70,
          "fromName" : "Join",
          "toId" : 69,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 69,
          "fromName" : "Project",
          "toId" : 65,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 65,
          "fromName" : "Join",
          "toId" : 7,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Join",
          "toId" : 6,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Project",
          "toId" : 5,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Aggregate",
          "toId" : 4,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 98,
          "fromName" : "LogicalRelation",
          "toId" : 97,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 101,
          "fromName" : "LogicalRelation",
          "toId" : 100,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 100,
          "fromName" : "Filter",
          "toId" : 99,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 99,
          "fromName" : "Project",
          "toId" : 97,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 97,
          "fromName" : "Filter",
          "toId" : 96,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 96,
          "fromName" : "Project",
          "toId" : 95,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 99,
          "fromName" : "Project",
          "toId" : 95,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 95,
          "fromName" : "Join",
          "toId" : 94,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 94,
          "fromName" : "Project",
          "toId" : 93,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 106,
          "fromName" : "LogicalRelation",
          "toId" : 105,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 109,
          "fromName" : "LogicalRelation",
          "toId" : 108,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 108,
          "fromName" : "Filter",
          "toId" : 107,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 107,
          "fromName" : "Project",
          "toId" : 105,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 105,
          "fromName" : "Filter",
          "toId" : 104,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 104,
          "fromName" : "Project",
          "toId" : 103,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 107,
          "fromName" : "Project",
          "toId" : 103,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 103,
          "fromName" : "Join",
          "toId" : 102,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 102,
          "fromName" : "Project",
          "toId" : 93,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 114,
          "fromName" : "LogicalRelation",
          "toId" : 113,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 117,
          "fromName" : "LogicalRelation",
          "toId" : 116,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 116,
          "fromName" : "Filter",
          "toId" : 115,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 115,
          "fromName" : "Project",
          "toId" : 113,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 113,
          "fromName" : "Filter",
          "toId" : 112,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 112,
          "fromName" : "Project",
          "toId" : 111,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 115,
          "fromName" : "Project",
          "toId" : 111,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 111,
          "fromName" : "Join",
          "toId" : 110,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 110,
          "fromName" : "Project",
          "toId" : 93,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 93,
          "fromName" : "Union",
          "toId" : 92,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 92,
          "fromName" : "Aggregate",
          "toId" : 4,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 4,
          "fromName" : "Filter",
          "toId" : 3,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 127,
          "fromName" : "LogicalRelation",
          "toId" : 126,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 130,
          "fromName" : "LogicalRelation",
          "toId" : 129,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 133,
          "fromName" : "LogicalRelation",
          "toId" : 132,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 132,
          "fromName" : "Filter",
          "toId" : 131,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 131,
          "fromName" : "Project",
          "toId" : 129,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 129,
          "fromName" : "Filter",
          "toId" : 128,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 128,
          "fromName" : "Project",
          "toId" : 126,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 126,
          "fromName" : "Filter",
          "toId" : 125,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 125,
          "fromName" : "Project",
          "toId" : 124,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 22,
          "fromName" : "Project",
          "toId" : 135,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 33,
          "fromName" : "LogicalRelation",
          "toId" : 143,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 34,
          "fromName" : "Project",
          "toId" : 143,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 143,
          "fromName" : "Filter",
          "toId" : 142,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 142,
          "fromName" : "Project",
          "toId" : 141,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 144,
          "fromName" : "LogicalQueryStage",
          "toId" : 141,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 141,
          "fromName" : "Join",
          "toId" : 140,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 140,
          "fromName" : "Project",
          "toId" : 139,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 146,
          "fromName" : "LogicalQueryStage",
          "toId" : 145,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 46,
          "fromName" : "LogicalRelation",
          "toId" : 152,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 47,
          "fromName" : "Project",
          "toId" : 152,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 152,
          "fromName" : "Filter",
          "toId" : 151,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 151,
          "fromName" : "Project",
          "toId" : 150,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 153,
          "fromName" : "LogicalQueryStage",
          "toId" : 150,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 150,
          "fromName" : "Join",
          "toId" : 149,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 149,
          "fromName" : "Project",
          "toId" : 148,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 154,
          "fromName" : "LogicalQueryStage",
          "toId" : 148,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 148,
          "fromName" : "Join",
          "toId" : 147,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 147,
          "fromName" : "Project",
          "toId" : 145,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 145,
          "fromName" : "Join",
          "toId" : 139,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 139,
          "fromName" : "Join",
          "toId" : 138,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 138,
          "fromName" : "Project",
          "toId" : 137,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 137,
          "fromName" : "Aggregate",
          "toId" : 136,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 58,
          "fromName" : "LogicalRelation",
          "toId" : 160,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 59,
          "fromName" : "Project",
          "toId" : 160,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 160,
          "fromName" : "Filter",
          "toId" : 159,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 159,
          "fromName" : "Project",
          "toId" : 158,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 161,
          "fromName" : "LogicalQueryStage",
          "toId" : 158,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 158,
          "fromName" : "Join",
          "toId" : 157,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 157,
          "fromName" : "Project",
          "toId" : 156,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 162,
          "fromName" : "LogicalQueryStage",
          "toId" : 156,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 156,
          "fromName" : "Join",
          "toId" : 155,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 155,
          "fromName" : "Project",
          "toId" : 136,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 136,
          "fromName" : "Join",
          "toId" : 135,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 135,
          "fromName" : "Join",
          "toId" : 134,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 134,
          "fromName" : "Project",
          "toId" : 124,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 124,
          "fromName" : "Join",
          "toId" : 123,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 163,
          "fromName" : "LogicalQueryStage",
          "toId" : 123,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 123,
          "fromName" : "Join",
          "toId" : 122,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 122,
          "fromName" : "Project",
          "toId" : 121,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 167,
          "fromName" : "LogicalRelation",
          "toId" : 166,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 166,
          "fromName" : "Filter",
          "toId" : 165,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 165,
          "fromName" : "Project",
          "toId" : 164,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 22,
          "fromName" : "Project",
          "toId" : 169,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 142,
          "fromName" : "Project",
          "toId" : 175,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 176,
          "fromName" : "LogicalQueryStage",
          "toId" : 175,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 175,
          "fromName" : "Join",
          "toId" : 174,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 174,
          "fromName" : "Project",
          "toId" : 173,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 178,
          "fromName" : "LogicalQueryStage",
          "toId" : 177,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 151,
          "fromName" : "Project",
          "toId" : 182,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 183,
          "fromName" : "LogicalQueryStage",
          "toId" : 182,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 182,
          "fromName" : "Join",
          "toId" : 181,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 181,
          "fromName" : "Project",
          "toId" : 180,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 184,
          "fromName" : "LogicalQueryStage",
          "toId" : 180,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 180,
          "fromName" : "Join",
          "toId" : 179,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 179,
          "fromName" : "Project",
          "toId" : 177,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 177,
          "fromName" : "Join",
          "toId" : 173,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 173,
          "fromName" : "Join",
          "toId" : 172,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 172,
          "fromName" : "Project",
          "toId" : 171,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 171,
          "fromName" : "Aggregate",
          "toId" : 170,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 159,
          "fromName" : "Project",
          "toId" : 188,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 189,
          "fromName" : "LogicalQueryStage",
          "toId" : 188,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 188,
          "fromName" : "Join",
          "toId" : 187,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 187,
          "fromName" : "Project",
          "toId" : 186,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 190,
          "fromName" : "LogicalQueryStage",
          "toId" : 186,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 186,
          "fromName" : "Join",
          "toId" : 185,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 185,
          "fromName" : "Project",
          "toId" : 170,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 170,
          "fromName" : "Join",
          "toId" : 169,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 169,
          "fromName" : "Join",
          "toId" : 168,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 168,
          "fromName" : "Project",
          "toId" : 164,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 164,
          "fromName" : "Join",
          "toId" : 121,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 121,
          "fromName" : "Join",
          "toId" : 120,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 120,
          "fromName" : "Project",
          "toId" : 119,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 119,
          "fromName" : "Aggregate",
          "toId" : 118,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 92,
          "fromName" : "Aggregate",
          "toId" : 118,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 118,
          "fromName" : "Filter",
          "toId" : 3,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Join",
          "toId" : 2,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "LocalLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "LocalLimit",
          "toId" : 0,
          "toName" : "GlobalLimit",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [i_brand_id#1082 ASC NULLS FIRST, i_class_id#1084 ASC NULLS FIRST, i_category_id#1086 ASC NULLS FIRST], true\n      +- Join Inner, (((i_brand_id#1082 = i_brand_id#1155) AND (i_class_id#1084 = i_class_id#1157)) AND (i_category_id#1086 = i_category_id#1159))\n         :- Filter (isnotnull(sales#731) AND (cast(sales#731 as decimal(32,6)) > cast(scalar-subquery#735 [] as decimal(32,6))))\n         :  :  +- Aggregate [avg((cast(quantity#746 as decimal(10,0)) * list_price#747)) AS average_sales#752]\n         :  :     +- Union false, false\n         :  :        :- Project [ss_quantity#886 AS quantity#746, ss_list_price#888 AS list_price#747]\n         :  :        :  +- Join Inner, (ss_sold_date_sk#899 = d_date_sk#900)\n         :  :        :     :- Project [ss_quantity#886, ss_list_price#888, ss_sold_date_sk#899]\n         :  :        :     :  +- Filter (isnotnull(ss_sold_date_sk#899) AND dynamicpruning#1288 [ss_sold_date_sk#899])\n         :  :        :     :     :  +- Project [d_date_sk#900]\n         :  :        :     :     :     +- Filter ((isnotnull(d_year#906) AND ((d_year#906 >= 1998) AND (d_year#906 <= 2000))) AND isnotnull(d_date_sk#900))\n         :  :        :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#900,d_date_id#901,d_date#902,d_month_seq#903,d_week_seq#904,d_quarter_seq#905,d_year#906,d_dow#907,d_moy#908,d_dom#909,d_qoy#910,d_fy_year#911,d_fy_quarter_seq#912,d_fy_week_seq#913,d_day_name#914,d_quarter_name#915,d_holiday#916,d_weekend#917,d_following_holiday#918,d_first_dom#919,d_last_dom#920,d_same_day_ly#921,d_same_day_lq#922,d_current_day#923,... 4 more fields] parquet\n         :  :        :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#877,ss_item_sk#878,ss_customer_sk#879,ss_cdemo_sk#880,ss_hdemo_sk#881,ss_addr_sk#882,ss_store_sk#883,ss_promo_sk#884,ss_ticket_number#885L,ss_quantity#886,ss_wholesale_cost#887,ss_list_price#888,ss_sales_price#889,ss_ext_discount_amt#890,ss_ext_sales_price#891,ss_ext_wholesale_cost#892,ss_ext_list_price#893,ss_ext_tax#894,ss_coupon_amt#895,ss_net_paid#896,ss_net_paid_inc_tax#897,ss_net_profit#898,ss_sold_date_sk#899] parquet\n         :  :        :     +- Project [d_date_sk#900]\n         :  :        :        +- Filter ((isnotnull(d_year#906) AND ((d_year#906 >= 1998) AND (d_year#906 <= 2000))) AND isnotnull(d_date_sk#900))\n         :  :        :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#900,d_date_id#901,d_date#902,d_month_seq#903,d_week_seq#904,d_quarter_seq#905,d_year#906,d_dow#907,d_moy#908,d_dom#909,d_qoy#910,d_fy_year#911,d_fy_quarter_seq#912,d_fy_week_seq#913,d_day_name#914,d_quarter_name#915,d_holiday#916,d_weekend#917,d_following_holiday#918,d_first_dom#919,d_last_dom#920,d_same_day_ly#921,d_same_day_lq#922,d_current_day#923,... 4 more fields] parquet\n         :  :        :- Project [cs_quantity#945 AS quantity#748, cs_list_price#947 AS list_price#749]\n         :  :        :  +- Join Inner, (cs_sold_date_sk#961 = d_date_sk#962)\n         :  :        :     :- Project [cs_quantity#945, cs_list_price#947, cs_sold_date_sk#961]\n         :  :        :     :  +- Filter (isnotnull(cs_sold_date_sk#961) AND dynamicpruning#1289 [cs_sold_date_sk#961])\n         :  :        :     :     :  +- Project [d_date_sk#962]\n         :  :        :     :     :     +- Filter ((isnotnull(d_year#968) AND ((d_year#968 >= 1998) AND (d_year#968 <= 2000))) AND isnotnull(d_date_sk#962))\n         :  :        :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#962,d_date_id#963,d_date#964,d_month_seq#965,d_week_seq#966,d_quarter_seq#967,d_year#968,d_dow#969,d_moy#970,d_dom#971,d_qoy#972,d_fy_year#973,d_fy_quarter_seq#974,d_fy_week_seq#975,d_day_name#976,d_quarter_name#977,d_holiday#978,d_weekend#979,d_following_holiday#980,d_first_dom#981,d_last_dom#982,d_same_day_ly#983,d_same_day_lq#984,d_current_day#985,... 4 more fields] parquet\n         :  :        :     :     +- Relation spark_catalog.tpcds_100.catalog_sales[cs_sold_time_sk#928,cs_ship_date_sk#929,cs_bill_customer_sk#930,cs_bill_cdemo_sk#931,cs_bill_hdemo_sk#932,cs_bill_addr_sk#933,cs_ship_customer_sk#934,cs_ship_cdemo_sk#935,cs_ship_hdemo_sk#936,cs_ship_addr_sk#937,cs_call_center_sk#938,cs_catalog_page_sk#939,cs_ship_mode_sk#940,cs_warehouse_sk#941,cs_item_sk#942,cs_promo_sk#943,cs_order_number#944L,cs_quantity#945,cs_wholesale_cost#946,cs_list_price#947,cs_sales_price#948,cs_ext_discount_amt#949,cs_ext_sales_price#950,cs_ext_wholesale_cost#951,... 10 more fields] parquet\n         :  :        :     +- Project [d_date_sk#962]\n         :  :        :        +- Filter ((isnotnull(d_year#968) AND ((d_year#968 >= 1998) AND (d_year#968 <= 2000))) AND isnotnull(d_date_sk#962))\n         :  :        :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#962,d_date_id#963,d_date#964,d_month_seq#965,d_week_seq#966,d_quarter_seq#967,d_year#968,d_dow#969,d_moy#970,d_dom#971,d_qoy#972,d_fy_year#973,d_fy_quarter_seq#974,d_fy_week_seq#975,d_day_name#976,d_quarter_name#977,d_holiday#978,d_weekend#979,d_following_holiday#980,d_first_dom#981,d_last_dom#982,d_same_day_ly#983,d_same_day_lq#984,d_current_day#985,... 4 more fields] parquet\n         :  :        +- Project [ws_quantity#1007 AS quantity#750, ws_list_price#1009 AS list_price#751]\n         :  :           +- Join Inner, (ws_sold_date_sk#1023 = d_date_sk#1024)\n         :  :              :- Project [ws_quantity#1007, ws_list_price#1009, ws_sold_date_sk#1023]\n         :  :              :  +- Filter (isnotnull(ws_sold_date_sk#1023) AND dynamicpruning#1290 [ws_sold_date_sk#1023])\n         :  :              :     :  +- Project [d_date_sk#1024]\n         :  :              :     :     +- Filter ((isnotnull(d_year#1030) AND ((d_year#1030 >= 1998) AND (d_year#1030 <= 2000))) AND isnotnull(d_date_sk#1024))\n         :  :              :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#1024,d_date_id#1025,d_date#1026,d_month_seq#1027,d_week_seq#1028,d_quarter_seq#1029,d_year#1030,d_dow#1031,d_moy#1032,d_dom#1033,d_qoy#1034,d_fy_year#1035,d_fy_quarter_seq#1036,d_fy_week_seq#1037,d_day_name#1038,d_quarter_name#1039,d_holiday#1040,d_weekend#1041,d_following_holiday#1042,d_first_dom#1043,d_last_dom#1044,d_same_day_ly#1045,d_same_day_lq#1046,d_current_day#1047,... 4 more fields] parquet\n         :  :              :     +- Relation spark_catalog.tpcds_100.web_sales[ws_sold_time_sk#990,ws_ship_date_sk#991,ws_item_sk#992,ws_bill_customer_sk#993,ws_bill_cdemo_sk#994,ws_bill_hdemo_sk#995,ws_bill_addr_sk#996,ws_ship_customer_sk#997,ws_ship_cdemo_sk#998,ws_ship_hdemo_sk#999,ws_ship_addr_sk#1000,ws_web_page_sk#1001,ws_web_site_sk#1002,ws_ship_mode_sk#1003,ws_warehouse_sk#1004,ws_promo_sk#1005,ws_order_number#1006L,ws_quantity#1007,ws_wholesale_cost#1008,ws_list_price#1009,ws_sales_price#1010,ws_ext_discount_amt#1011,ws_ext_sales_price#1012,ws_ext_wholesale_cost#1013,... 10 more fields] parquet\n         :  :              +- Project [d_date_sk#1024]\n         :  :                 +- Filter ((isnotnull(d_year#1030) AND ((d_year#1030 >= 1998) AND (d_year#1030 <= 2000))) AND isnotnull(d_date_sk#1024))\n         :  :                    +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#1024,d_date_id#1025,d_date#1026,d_month_seq#1027,d_week_seq#1028,d_quarter_seq#1029,d_year#1030,d_dow#1031,d_moy#1032,d_dom#1033,d_qoy#1034,d_fy_year#1035,d_fy_quarter_seq#1036,d_fy_week_seq#1037,d_day_name#1038,d_quarter_name#1039,d_holiday#1040,d_weekend#1041,d_following_holiday#1042,d_first_dom#1043,d_last_dom#1044,d_same_day_ly#1045,d_same_day_lq#1046,d_current_day#1047,... 4 more fields] parquet\n         :  +- Aggregate [i_brand_id#1082, i_class_id#1084, i_category_id#1086], [store AS channel#730, i_brand_id#1082, i_class_id#1084, i_category_id#1086, sum((cast(ss_quantity#1061 as decimal(10,0)) * ss_list_price#1063)) AS sales#731, count(1) AS number_sales#732L]\n         :     +- Project [ss_quantity#1061, ss_list_price#1063, i_brand_id#1082, i_class_id#1084, i_category_id#1086]\n         :        +- Join Inner, (ss_item_sk#1053 = i_item_sk#1075)\n         :           :- Project [ss_item_sk#1053, ss_quantity#1061, ss_list_price#1063]\n         :           :  +- Join Inner, (ss_sold_date_sk#1074 = d_date_sk#1097)\n         :           :     :- Join LeftSemi, (ss_item_sk#1053 = ss_item_sk#745)\n         :           :     :  :- Project [ss_item_sk#1053, ss_quantity#1061, ss_list_price#1063, ss_sold_date_sk#1074]\n         :           :     :  :  +- Filter ((isnotnull(ss_item_sk#1053) AND isnotnull(ss_sold_date_sk#1074)) AND dynamicpruning#1303 [ss_sold_date_sk#1074])\n         :           :     :  :     :  +- Project [d_date_sk#1097]\n         :           :     :  :     :     +- Filter ((isnotnull(d_week_seq#1101) AND (d_week_seq#1101 = scalar-subquery#734 [])) AND isnotnull(d_date_sk#1097))\n         :           :     :  :     :        :  +- Project [d_week_seq#1213]\n         :           :     :  :     :        :     +- Filter (((isnotnull(d_year#1215) AND isnotnull(d_moy#1217)) AND isnotnull(d_dom#1218)) AND (((d_year#1215 = 1999) AND (d_moy#1217 = 12)) AND (d_dom#1218 = 16)))\n         :           :     :  :     :        :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#1209,d_date_id#1210,d_date#1211,d_month_seq#1212,d_week_seq#1213,d_quarter_seq#1214,d_year#1215,d_dow#1216,d_moy#1217,d_dom#1218,d_qoy#1219,d_fy_year#1220,d_fy_quarter_seq#1221,d_fy_week_seq#1222,d_day_name#1223,d_quarter_name#1224,d_holiday#1225,d_weekend#1226,d_following_holiday#1227,d_first_dom#1228,d_last_dom#1229,d_same_day_ly#1230,d_same_day_lq#1231,d_current_day#1232,... 4 more fields] parquet\n         :           :     :  :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#1097,d_date_id#1098,d_date#1099,d_month_seq#1100,d_week_seq#1101,d_quarter_seq#1102,d_year#1103,d_dow#1104,d_moy#1105,d_dom#1106,d_qoy#1107,d_fy_year#1108,d_fy_quarter_seq#1109,d_fy_week_seq#1110,d_day_name#1111,d_quarter_name#1112,d_holiday#1113,d_weekend#1114,d_following_holiday#1115,d_first_dom#1116,d_last_dom#1117,d_same_day_ly#1118,d_same_day_lq#1119,d_current_day#1120,... 4 more fields] parquet\n         :           :     :  :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#1052,ss_item_sk#1053,ss_customer_sk#1054,ss_cdemo_sk#1055,ss_hdemo_sk#1056,ss_addr_sk#1057,ss_store_sk#1058,ss_promo_sk#1059,ss_ticket_number#1060L,ss_quantity#1061,ss_wholesale_cost#1062,ss_list_price#1063,ss_sales_price#1064,ss_ext_discount_amt#1065,ss_ext_sales_price#1066,ss_ext_wholesale_cost#1067,ss_ext_list_price#1068,ss_ext_tax#1069,ss_coupon_amt#1070,ss_net_paid#1071,ss_net_paid_inc_tax#1072,ss_net_profit#1073,ss_sold_date_sk#1074] parquet\n         :           :     :  +- Project [i_item_sk#25 AS ss_item_sk#745]\n         :           :     :     +- Join Inner, (((i_brand_id#32 = brand_id#742) AND (i_class_id#34 = class_id#743)) AND (i_category_id#36 = category_id#744))\n         :           :     :        :- Project [i_item_sk#25, i_brand_id#32, i_class_id#34, i_category_id#36]\n         :           :     :        :  +- Filter ((isnotnull(i_brand_id#32) AND isnotnull(i_class_id#34)) AND isnotnull(i_category_id#36))\n         :           :     :        :     +- Relation spark_catalog.tpcds_100.item[i_item_sk#25,i_item_id#26,i_rec_start_date#27,i_rec_end_date#28,i_item_desc#29,i_current_price#30,i_wholesale_cost#31,i_brand_id#32,i_brand#33,i_class_id#34,i_class#35,i_category_id#36,i_category#37,i_manufact_id#38,i_manufact#39,i_size#40,i_formulation#41,i_color#42,i_units#43,i_container#44,i_manager_id#45,i_product_name#46] parquet\n         :           :     :        +- Join LeftSemi, (((brand_id#742 <=> i_brand_id#834) AND (class_id#743 <=> i_class_id#836)) AND (category_id#744 <=> i_category_id#838))\n         :           :     :           :- Aggregate [brand_id#742, class_id#743, category_id#744], [brand_id#742, class_id#743, category_id#744]\n         :           :     :           :  +- Project [i_brand_id#762 AS brand_id#742, i_class_id#764 AS class_id#743, i_category_id#766 AS category_id#744]\n         :           :     :           :     +- Join Inner, (ss_item_sk#48 = i_item_sk#755)\n         :           :     :           :        :- Project [ss_item_sk#48]\n         :           :     :           :        :  +- Join Inner, (ss_sold_date_sk#69 = d_date_sk#70)\n         :           :     :           :        :     :- Project [ss_item_sk#48, ss_sold_date_sk#69]\n         :           :     :           :        :     :  +- Filter ((isnotnull(ss_item_sk#48) AND isnotnull(ss_sold_date_sk#69)) AND dynamicpruning#1291 [ss_sold_date_sk#69])\n         :           :     :           :        :     :     :  +- Project [d_date_sk#70]\n         :           :     :           :        :     :     :     +- Filter ((isnotnull(d_year#76) AND ((d_year#76 >= 1998) AND (d_year#76 <= 2000))) AND isnotnull(d_date_sk#70))\n         :           :     :           :        :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#70,d_date_id#71,d_date#72,d_month_seq#73,d_week_seq#74,d_quarter_seq#75,d_year#76,d_dow#77,d_moy#78,d_dom#79,d_qoy#80,d_fy_year#81,d_fy_quarter_seq#82,d_fy_week_seq#83,d_day_name#84,d_quarter_name#85,d_holiday#86,d_weekend#87,d_following_holiday#88,d_first_dom#89,d_last_dom#90,d_same_day_ly#91,d_same_day_lq#92,d_current_day#93,... 4 more fields] parquet\n         :           :     :           :        :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#47,ss_item_sk#48,ss_customer_sk#49,ss_cdemo_sk#50,ss_hdemo_sk#51,ss_addr_sk#52,ss_store_sk#53,ss_promo_sk#54,ss_ticket_number#55L,ss_quantity#56,ss_wholesale_cost#57,ss_list_price#58,ss_sales_price#59,ss_ext_discount_amt#60,ss_ext_sales_price#61,ss_ext_wholesale_cost#62,ss_ext_list_price#63,ss_ext_tax#64,ss_coupon_amt#65,ss_net_paid#66,ss_net_paid_inc_tax#67,ss_net_profit#68,ss_sold_date_sk#69] parquet\n         :           :     :           :        :     +- LogicalQueryStage Project [d_date_sk#70], BroadcastQueryStage 0\n         :           :     :           :        +- Join LeftSemi, (((i_brand_id#762 <=> i_brand_id#784) AND (i_class_id#764 <=> i_class_id#786)) AND (i_category_id#766 <=> i_category_id#788))\n         :           :     :           :           :- LogicalQueryStage Project [i_item_sk#755, i_brand_id#762, i_class_id#764, i_category_id#766], ShuffleQueryStage 1\n         :           :     :           :           +- Project [i_brand_id#784, i_class_id#786, i_category_id#788]\n         :           :     :           :              +- Join Inner, (cs_item_sk#112 = i_item_sk#777)\n         :           :     :           :                 :- Project [cs_item_sk#112]\n         :           :     :           :                 :  +- Join Inner, (cs_sold_date_sk#131 = d_date_sk#799)\n         :           :     :           :                 :     :- Project [cs_item_sk#112, cs_sold_date_sk#131]\n         :           :     :           :                 :     :  +- Filter ((isnotnull(cs_item_sk#112) AND isnotnull(cs_sold_date_sk#131)) AND dynamicpruning#1292 [cs_sold_date_sk#131])\n         :           :     :           :                 :     :     :  +- Project [d_date_sk#799]\n         :           :     :           :                 :     :     :     +- Filter ((isnotnull(d_year#805) AND ((d_year#805 >= 1998) AND (d_year#805 <= 2000))) AND isnotnull(d_date_sk#799))\n         :           :     :           :                 :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#799,d_date_id#800,d_date#801,d_month_seq#802,d_week_seq#803,d_quarter_seq#804,d_year#805,d_dow#806,d_moy#807,d_dom#808,d_qoy#809,d_fy_year#810,d_fy_quarter_seq#811,d_fy_week_seq#812,d_day_name#813,d_quarter_name#814,d_holiday#815,d_weekend#816,d_following_holiday#817,d_first_dom#818,d_last_dom#819,d_same_day_ly#820,d_same_day_lq#821,d_current_day#822,... 4 more fields] parquet\n         :           :     :           :                 :     :     +- Relation spark_catalog.tpcds_100.catalog_sales[cs_sold_time_sk#98,cs_ship_date_sk#99,cs_bill_customer_sk#100,cs_bill_cdemo_sk#101,cs_bill_hdemo_sk#102,cs_bill_addr_sk#103,cs_ship_customer_sk#104,cs_ship_cdemo_sk#105,cs_ship_hdemo_sk#106,cs_ship_addr_sk#107,cs_call_center_sk#108,cs_catalog_page_sk#109,cs_ship_mode_sk#110,cs_warehouse_sk#111,cs_item_sk#112,cs_promo_sk#113,cs_order_number#114L,cs_quantity#115,cs_wholesale_cost#116,cs_list_price#117,cs_sales_price#118,cs_ext_discount_amt#119,cs_ext_sales_price#120,cs_ext_wholesale_cost#121,... 10 more fields] parquet\n         :           :     :           :                 :     +- LogicalQueryStage Project [d_date_sk#799], BroadcastQueryStage 3\n         :           :     :           :                 +- LogicalQueryStage Project [i_item_sk#777, i_brand_id#784, i_class_id#786, i_category_id#788], BroadcastQueryStage 4\n         :           :     :           +- Project [i_brand_id#834, i_class_id#836, i_category_id#838]\n         :           :     :              +- Join Inner, (ws_item_sk#134 = i_item_sk#827)\n         :           :     :                 :- Project [ws_item_sk#134]\n         :           :     :                 :  +- Join Inner, (ws_sold_date_sk#165 = d_date_sk#849)\n         :           :     :                 :     :- Project [ws_item_sk#134, ws_sold_date_sk#165]\n         :           :     :                 :     :  +- Filter ((isnotnull(ws_item_sk#134) AND isnotnull(ws_sold_date_sk#165)) AND dynamicpruning#1293 [ws_sold_date_sk#165])\n         :           :     :                 :     :     :  +- Project [d_date_sk#849]\n         :           :     :                 :     :     :     +- Filter ((isnotnull(d_year#855) AND ((d_year#855 >= 1998) AND (d_year#855 <= 2000))) AND isnotnull(d_date_sk#849))\n         :           :     :                 :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#849,d_date_id#850,d_date#851,d_month_seq#852,d_week_seq#853,d_quarter_seq#854,d_year#855,d_dow#856,d_moy#857,d_dom#858,d_qoy#859,d_fy_year#860,d_fy_quarter_seq#861,d_fy_week_seq#862,d_day_name#863,d_quarter_name#864,d_holiday#865,d_weekend#866,d_following_holiday#867,d_first_dom#868,d_last_dom#869,d_same_day_ly#870,d_same_day_lq#871,d_current_day#872,... 4 more fields] parquet\n         :           :     :                 :     :     +- Relation spark_catalog.tpcds_100.web_sales[ws_sold_time_sk#132,ws_ship_date_sk#133,ws_item_sk#134,ws_bill_customer_sk#135,ws_bill_cdemo_sk#136,ws_bill_hdemo_sk#137,ws_bill_addr_sk#138,ws_ship_customer_sk#139,ws_ship_cdemo_sk#140,ws_ship_hdemo_sk#141,ws_ship_addr_sk#142,ws_web_page_sk#143,ws_web_site_sk#144,ws_ship_mode_sk#145,ws_warehouse_sk#146,ws_promo_sk#147,ws_order_number#148L,ws_quantity#149,ws_wholesale_cost#150,ws_list_price#151,ws_sales_price#152,ws_ext_discount_amt#153,ws_ext_sales_price#154,ws_ext_wholesale_cost#155,... 10 more fields] parquet\n         :           :     :                 :     +- LogicalQueryStage Project [d_date_sk#849], BroadcastQueryStage 6\n         :           :     :                 +- LogicalQueryStage Project [i_item_sk#827, i_brand_id#834, i_class_id#836, i_category_id#838], BroadcastQueryStage 8\n         :           :     +- LogicalQueryStage Project [d_date_sk#1097], BroadcastQueryStage 9\n         :           +- Join LeftSemi, (i_item_sk#1075 = ss_item_sk#745)\n         :              :- Project [i_item_sk#1075, i_brand_id#1082, i_class_id#1084, i_category_id#1086]\n         :              :  +- Filter (((isnotnull(i_item_sk#1075) AND isnotnull(i_brand_id#1082)) AND isnotnull(i_class_id#1084)) AND isnotnull(i_category_id#1086))\n         :              :     +- Relation spark_catalog.tpcds_100.item[i_item_sk#1075,i_item_id#1076,i_rec_start_date#1077,i_rec_end_date#1078,i_item_desc#1079,i_current_price#1080,i_wholesale_cost#1081,i_brand_id#1082,i_brand#1083,i_class_id#1084,i_class#1085,i_category_id#1086,i_category#1087,i_manufact_id#1088,i_manufact#1089,i_size#1090,i_formulation#1091,i_color#1092,i_units#1093,i_container#1094,i_manager_id#1095,i_product_name#1096] parquet\n         :              +- Project [i_item_sk#25 AS ss_item_sk#745]\n         :                 +- Join Inner, (((i_brand_id#32 = brand_id#742) AND (i_class_id#34 = class_id#743)) AND (i_category_id#36 = category_id#744))\n         :                    :- Project [i_item_sk#25, i_brand_id#32, i_class_id#34, i_category_id#36]\n         :                    :  +- Filter ((isnotnull(i_brand_id#32) AND isnotnull(i_class_id#34)) AND isnotnull(i_category_id#36))\n         :                    :     +- Relation spark_catalog.tpcds_100.item[i_item_sk#25,i_item_id#26,i_rec_start_date#27,i_rec_end_date#28,i_item_desc#29,i_current_price#30,i_wholesale_cost#31,i_brand_id#32,i_brand#33,i_class_id#34,i_class#35,i_category_id#36,i_category#37,i_manufact_id#38,i_manufact#39,i_size#40,i_formulation#41,i_color#42,i_units#43,i_container#44,i_manager_id#45,i_product_name#46] parquet\n         :                    +- Join LeftSemi, (((brand_id#742 <=> i_brand_id#834) AND (class_id#743 <=> i_class_id#836)) AND (category_id#744 <=> i_category_id#838))\n         :                       :- Aggregate [brand_id#742, class_id#743, category_id#744], [brand_id#742, class_id#743, category_id#744]\n         :                       :  +- Project [i_brand_id#762 AS brand_id#742, i_class_id#764 AS class_id#743, i_category_id#766 AS category_id#744]\n         :                       :     +- Join Inner, (ss_item_sk#48 = i_item_sk#755)\n         :                       :        :- Project [ss_item_sk#48]\n         :                       :        :  +- Join Inner, (ss_sold_date_sk#69 = d_date_sk#70)\n         :                       :        :     :- Project [ss_item_sk#48, ss_sold_date_sk#69]\n         :                       :        :     :  +- Filter ((isnotnull(ss_item_sk#48) AND isnotnull(ss_sold_date_sk#69)) AND dynamicpruning#1291 [ss_sold_date_sk#69])\n         :                       :        :     :     :  +- Project [d_date_sk#70]\n         :                       :        :     :     :     +- Filter ((isnotnull(d_year#76) AND ((d_year#76 >= 1998) AND (d_year#76 <= 2000))) AND isnotnull(d_date_sk#70))\n         :                       :        :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#70,d_date_id#71,d_date#72,d_month_seq#73,d_week_seq#74,d_quarter_seq#75,d_year#76,d_dow#77,d_moy#78,d_dom#79,d_qoy#80,d_fy_year#81,d_fy_quarter_seq#82,d_fy_week_seq#83,d_day_name#84,d_quarter_name#85,d_holiday#86,d_weekend#87,d_following_holiday#88,d_first_dom#89,d_last_dom#90,d_same_day_ly#91,d_same_day_lq#92,d_current_day#93,... 4 more fields] parquet\n         :                       :        :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#47,ss_item_sk#48,ss_customer_sk#49,ss_cdemo_sk#50,ss_hdemo_sk#51,ss_addr_sk#52,ss_store_sk#53,ss_promo_sk#54,ss_ticket_number#55L,ss_quantity#56,ss_wholesale_cost#57,ss_list_price#58,ss_sales_price#59,ss_ext_discount_amt#60,ss_ext_sales_price#61,ss_ext_wholesale_cost#62,ss_ext_list_price#63,ss_ext_tax#64,ss_coupon_amt#65,ss_net_paid#66,ss_net_paid_inc_tax#67,ss_net_profit#68,ss_sold_date_sk#69] parquet\n         :                       :        :     +- LogicalQueryStage Project [d_date_sk#70], BroadcastQueryStage 11\n         :                       :        +- Join LeftSemi, (((i_brand_id#762 <=> i_brand_id#784) AND (i_class_id#764 <=> i_class_id#786)) AND (i_category_id#766 <=> i_category_id#788))\n         :                       :           :- LogicalQueryStage Project [i_item_sk#755, i_brand_id#762, i_class_id#764, i_category_id#766], ShuffleQueryStage 13\n         :                       :           +- Project [i_brand_id#784, i_class_id#786, i_category_id#788]\n         :                       :              +- Join Inner, (cs_item_sk#112 = i_item_sk#777)\n         :                       :                 :- Project [cs_item_sk#112]\n         :                       :                 :  +- Join Inner, (cs_sold_date_sk#131 = d_date_sk#799)\n         :                       :                 :     :- Project [cs_item_sk#112, cs_sold_date_sk#131]\n         :                       :                 :     :  +- Filter ((isnotnull(cs_item_sk#112) AND isnotnull(cs_sold_date_sk#131)) AND dynamicpruning#1292 [cs_sold_date_sk#131])\n         :                       :                 :     :     :  +- Project [d_date_sk#799]\n         :                       :                 :     :     :     +- Filter ((isnotnull(d_year#805) AND ((d_year#805 >= 1998) AND (d_year#805 <= 2000))) AND isnotnull(d_date_sk#799))\n         :                       :                 :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#799,d_date_id#800,d_date#801,d_month_seq#802,d_week_seq#803,d_quarter_seq#804,d_year#805,d_dow#806,d_moy#807,d_dom#808,d_qoy#809,d_fy_year#810,d_fy_quarter_seq#811,d_fy_week_seq#812,d_day_name#813,d_quarter_name#814,d_holiday#815,d_weekend#816,d_following_holiday#817,d_first_dom#818,d_last_dom#819,d_same_day_ly#820,d_same_day_lq#821,d_current_day#822,... 4 more fields] parquet\n         :                       :                 :     :     +- Relation spark_catalog.tpcds_100.catalog_sales[cs_sold_time_sk#98,cs_ship_date_sk#99,cs_bill_customer_sk#100,cs_bill_cdemo_sk#101,cs_bill_hdemo_sk#102,cs_bill_addr_sk#103,cs_ship_customer_sk#104,cs_ship_cdemo_sk#105,cs_ship_hdemo_sk#106,cs_ship_addr_sk#107,cs_call_center_sk#108,cs_catalog_page_sk#109,cs_ship_mode_sk#110,cs_warehouse_sk#111,cs_item_sk#112,cs_promo_sk#113,cs_order_number#114L,cs_quantity#115,cs_wholesale_cost#116,cs_list_price#117,cs_sales_price#118,cs_ext_discount_amt#119,cs_ext_sales_price#120,cs_ext_wholesale_cost#121,... 10 more fields] parquet\n         :                       :                 :     +- LogicalQueryStage Project [d_date_sk#799], BroadcastQueryStage 15\n         :                       :                 +- LogicalQueryStage Project [i_item_sk#777, i_brand_id#784, i_class_id#786, i_category_id#788], BroadcastQueryStage 17\n         :                       +- Project [i_brand_id#834, i_class_id#836, i_category_id#838]\n         :                          +- Join Inner, (ws_item_sk#134 = i_item_sk#827)\n         :                             :- Project [ws_item_sk#134]\n         :                             :  +- Join Inner, (ws_sold_date_sk#165 = d_date_sk#849)\n         :                             :     :- Project [ws_item_sk#134, ws_sold_date_sk#165]\n         :                             :     :  +- Filter ((isnotnull(ws_item_sk#134) AND isnotnull(ws_sold_date_sk#165)) AND dynamicpruning#1293 [ws_sold_date_sk#165])\n         :                             :     :     :  +- Project [d_date_sk#849]\n         :                             :     :     :     +- Filter ((isnotnull(d_year#855) AND ((d_year#855 >= 1998) AND (d_year#855 <= 2000))) AND isnotnull(d_date_sk#849))\n         :                             :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#849,d_date_id#850,d_date#851,d_month_seq#852,d_week_seq#853,d_quarter_seq#854,d_year#855,d_dow#856,d_moy#857,d_dom#858,d_qoy#859,d_fy_year#860,d_fy_quarter_seq#861,d_fy_week_seq#862,d_day_name#863,d_quarter_name#864,d_holiday#865,d_weekend#866,d_following_holiday#867,d_first_dom#868,d_last_dom#869,d_same_day_ly#870,d_same_day_lq#871,d_current_day#872,... 4 more fields] parquet\n         :                             :     :     +- Relation spark_catalog.tpcds_100.web_sales[ws_sold_time_sk#132,ws_ship_date_sk#133,ws_item_sk#134,ws_bill_customer_sk#135,ws_bill_cdemo_sk#136,ws_bill_hdemo_sk#137,ws_bill_addr_sk#138,ws_ship_customer_sk#139,ws_ship_cdemo_sk#140,ws_ship_hdemo_sk#141,ws_ship_addr_sk#142,ws_web_page_sk#143,ws_web_site_sk#144,ws_ship_mode_sk#145,ws_warehouse_sk#146,ws_promo_sk#147,ws_order_number#148L,ws_quantity#149,ws_wholesale_cost#150,ws_list_price#151,ws_sales_price#152,ws_ext_discount_amt#153,ws_ext_sales_price#154,ws_ext_wholesale_cost#155,... 10 more fields] parquet\n         :                             :     +- LogicalQueryStage Project [d_date_sk#849], BroadcastQueryStage 19\n         :                             +- LogicalQueryStage Project [i_item_sk#827, i_brand_id#834, i_class_id#836, i_category_id#838], BroadcastQueryStage 21\n         +- Filter (isnotnull(sales#737) AND (cast(sales#737 as decimal(32,6)) > cast(scalar-subquery#741 [] as decimal(32,6))))\n            :  +- Aggregate [avg((cast(quantity#746 as decimal(10,0)) * list_price#747)) AS average_sales#752]\n            :     +- Union false, false\n            :        :- Project [ss_quantity#886 AS quantity#746, ss_list_price#888 AS list_price#747]\n            :        :  +- Join Inner, (ss_sold_date_sk#899 = d_date_sk#900)\n            :        :     :- Project [ss_quantity#886, ss_list_price#888, ss_sold_date_sk#899]\n            :        :     :  +- Filter (isnotnull(ss_sold_date_sk#899) AND dynamicpruning#1288 [ss_sold_date_sk#899])\n            :        :     :     :  +- Project [d_date_sk#900]\n            :        :     :     :     +- Filter ((isnotnull(d_year#906) AND ((d_year#906 >= 1998) AND (d_year#906 <= 2000))) AND isnotnull(d_date_sk#900))\n            :        :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#900,d_date_id#901,d_date#902,d_month_seq#903,d_week_seq#904,d_quarter_seq#905,d_year#906,d_dow#907,d_moy#908,d_dom#909,d_qoy#910,d_fy_year#911,d_fy_quarter_seq#912,d_fy_week_seq#913,d_day_name#914,d_quarter_name#915,d_holiday#916,d_weekend#917,d_following_holiday#918,d_first_dom#919,d_last_dom#920,d_same_day_ly#921,d_same_day_lq#922,d_current_day#923,... 4 more fields] parquet\n            :        :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#877,ss_item_sk#878,ss_customer_sk#879,ss_cdemo_sk#880,ss_hdemo_sk#881,ss_addr_sk#882,ss_store_sk#883,ss_promo_sk#884,ss_ticket_number#885L,ss_quantity#886,ss_wholesale_cost#887,ss_list_price#888,ss_sales_price#889,ss_ext_discount_amt#890,ss_ext_sales_price#891,ss_ext_wholesale_cost#892,ss_ext_list_price#893,ss_ext_tax#894,ss_coupon_amt#895,ss_net_paid#896,ss_net_paid_inc_tax#897,ss_net_profit#898,ss_sold_date_sk#899] parquet\n            :        :     +- Project [d_date_sk#900]\n            :        :        +- Filter ((isnotnull(d_year#906) AND ((d_year#906 >= 1998) AND (d_year#906 <= 2000))) AND isnotnull(d_date_sk#900))\n            :        :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#900,d_date_id#901,d_date#902,d_month_seq#903,d_week_seq#904,d_quarter_seq#905,d_year#906,d_dow#907,d_moy#908,d_dom#909,d_qoy#910,d_fy_year#911,d_fy_quarter_seq#912,d_fy_week_seq#913,d_day_name#914,d_quarter_name#915,d_holiday#916,d_weekend#917,d_following_holiday#918,d_first_dom#919,d_last_dom#920,d_same_day_ly#921,d_same_day_lq#922,d_current_day#923,... 4 more fields] parquet\n            :        :- Project [cs_quantity#945 AS quantity#748, cs_list_price#947 AS list_price#749]\n            :        :  +- Join Inner, (cs_sold_date_sk#961 = d_date_sk#962)\n            :        :     :- Project [cs_quantity#945, cs_list_price#947, cs_sold_date_sk#961]\n            :        :     :  +- Filter (isnotnull(cs_sold_date_sk#961) AND dynamicpruning#1289 [cs_sold_date_sk#961])\n            :        :     :     :  +- Project [d_date_sk#962]\n            :        :     :     :     +- Filter ((isnotnull(d_year#968) AND ((d_year#968 >= 1998) AND (d_year#968 <= 2000))) AND isnotnull(d_date_sk#962))\n            :        :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#962,d_date_id#963,d_date#964,d_month_seq#965,d_week_seq#966,d_quarter_seq#967,d_year#968,d_dow#969,d_moy#970,d_dom#971,d_qoy#972,d_fy_year#973,d_fy_quarter_seq#974,d_fy_week_seq#975,d_day_name#976,d_quarter_name#977,d_holiday#978,d_weekend#979,d_following_holiday#980,d_first_dom#981,d_last_dom#982,d_same_day_ly#983,d_same_day_lq#984,d_current_day#985,... 4 more fields] parquet\n            :        :     :     +- Relation spark_catalog.tpcds_100.catalog_sales[cs_sold_time_sk#928,cs_ship_date_sk#929,cs_bill_customer_sk#930,cs_bill_cdemo_sk#931,cs_bill_hdemo_sk#932,cs_bill_addr_sk#933,cs_ship_customer_sk#934,cs_ship_cdemo_sk#935,cs_ship_hdemo_sk#936,cs_ship_addr_sk#937,cs_call_center_sk#938,cs_catalog_page_sk#939,cs_ship_mode_sk#940,cs_warehouse_sk#941,cs_item_sk#942,cs_promo_sk#943,cs_order_number#944L,cs_quantity#945,cs_wholesale_cost#946,cs_list_price#947,cs_sales_price#948,cs_ext_discount_amt#949,cs_ext_sales_price#950,cs_ext_wholesale_cost#951,... 10 more fields] parquet\n            :        :     +- Project [d_date_sk#962]\n            :        :        +- Filter ((isnotnull(d_year#968) AND ((d_year#968 >= 1998) AND (d_year#968 <= 2000))) AND isnotnull(d_date_sk#962))\n            :        :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#962,d_date_id#963,d_date#964,d_month_seq#965,d_week_seq#966,d_quarter_seq#967,d_year#968,d_dow#969,d_moy#970,d_dom#971,d_qoy#972,d_fy_year#973,d_fy_quarter_seq#974,d_fy_week_seq#975,d_day_name#976,d_quarter_name#977,d_holiday#978,d_weekend#979,d_following_holiday#980,d_first_dom#981,d_last_dom#982,d_same_day_ly#983,d_same_day_lq#984,d_current_day#985,... 4 more fields] parquet\n            :        +- Project [ws_quantity#1007 AS quantity#750, ws_list_price#1009 AS list_price#751]\n            :           +- Join Inner, (ws_sold_date_sk#1023 = d_date_sk#1024)\n            :              :- Project [ws_quantity#1007, ws_list_price#1009, ws_sold_date_sk#1023]\n            :              :  +- Filter (isnotnull(ws_sold_date_sk#1023) AND dynamicpruning#1290 [ws_sold_date_sk#1023])\n            :              :     :  +- Project [d_date_sk#1024]\n            :              :     :     +- Filter ((isnotnull(d_year#1030) AND ((d_year#1030 >= 1998) AND (d_year#1030 <= 2000))) AND isnotnull(d_date_sk#1024))\n            :              :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#1024,d_date_id#1025,d_date#1026,d_month_seq#1027,d_week_seq#1028,d_quarter_seq#1029,d_year#1030,d_dow#1031,d_moy#1032,d_dom#1033,d_qoy#1034,d_fy_year#1035,d_fy_quarter_seq#1036,d_fy_week_seq#1037,d_day_name#1038,d_quarter_name#1039,d_holiday#1040,d_weekend#1041,d_following_holiday#1042,d_first_dom#1043,d_last_dom#1044,d_same_day_ly#1045,d_same_day_lq#1046,d_current_day#1047,... 4 more fields] parquet\n            :              :     +- Relation spark_catalog.tpcds_100.web_sales[ws_sold_time_sk#990,ws_ship_date_sk#991,ws_item_sk#992,ws_bill_customer_sk#993,ws_bill_cdemo_sk#994,ws_bill_hdemo_sk#995,ws_bill_addr_sk#996,ws_ship_customer_sk#997,ws_ship_cdemo_sk#998,ws_ship_hdemo_sk#999,ws_ship_addr_sk#1000,ws_web_page_sk#1001,ws_web_site_sk#1002,ws_ship_mode_sk#1003,ws_warehouse_sk#1004,ws_promo_sk#1005,ws_order_number#1006L,ws_quantity#1007,ws_wholesale_cost#1008,ws_list_price#1009,ws_sales_price#1010,ws_ext_discount_amt#1011,ws_ext_sales_price#1012,ws_ext_wholesale_cost#1013,... 10 more fields] parquet\n            :              +- Project [d_date_sk#1024]\n            :                 +- Filter ((isnotnull(d_year#1030) AND ((d_year#1030 >= 1998) AND (d_year#1030 <= 2000))) AND isnotnull(d_date_sk#1024))\n            :                    +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#1024,d_date_id#1025,d_date#1026,d_month_seq#1027,d_week_seq#1028,d_quarter_seq#1029,d_year#1030,d_dow#1031,d_moy#1032,d_dom#1033,d_qoy#1034,d_fy_year#1035,d_fy_quarter_seq#1036,d_fy_week_seq#1037,d_day_name#1038,d_quarter_name#1039,d_holiday#1040,d_weekend#1041,d_following_holiday#1042,d_first_dom#1043,d_last_dom#1044,d_same_day_ly#1045,d_same_day_lq#1046,d_current_day#1047,... 4 more fields] parquet\n            +- Aggregate [i_brand_id#1155, i_class_id#1157, i_category_id#1159], [store AS channel#736, i_brand_id#1155, i_class_id#1157, i_category_id#1159, sum((cast(ss_quantity#1134 as decimal(10,0)) * ss_list_price#1136)) AS sales#737, count(1) AS number_sales#738L]\n               +- Project [ss_quantity#1134, ss_list_price#1136, i_brand_id#1155, i_class_id#1157, i_category_id#1159]\n                  +- Join Inner, (ss_item_sk#1126 = i_item_sk#1148)\n                     :- Project [ss_item_sk#1126, ss_quantity#1134, ss_list_price#1136]\n                     :  +- Join Inner, (ss_sold_date_sk#1147 = d_date_sk#1170)\n                     :     :- Join LeftSemi, (ss_item_sk#1126 = ss_item_sk#745)\n                     :     :  :- Project [ss_item_sk#1126, ss_quantity#1134, ss_list_price#1136, ss_sold_date_sk#1147]\n                     :     :  :  +- Filter ((isnotnull(ss_item_sk#1126) AND isnotnull(ss_sold_date_sk#1147)) AND dynamicpruning#1310 [ss_sold_date_sk#1147])\n                     :     :  :     :  +- Project [d_date_sk#1170]\n                     :     :  :     :     +- Filter ((isnotnull(d_week_seq#1174) AND (d_week_seq#1174 = scalar-subquery#740 [])) AND isnotnull(d_date_sk#1170))\n                     :     :  :     :        :  +- Project [d_week_seq#1241]\n                     :     :  :     :        :     +- Filter (((isnotnull(d_year#1243) AND isnotnull(d_moy#1245)) AND isnotnull(d_dom#1246)) AND (((d_year#1243 = 1998) AND (d_moy#1245 = 12)) AND (d_dom#1246 = 16)))\n                     :     :  :     :        :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#1237,d_date_id#1238,d_date#1239,d_month_seq#1240,d_week_seq#1241,d_quarter_seq#1242,d_year#1243,d_dow#1244,d_moy#1245,d_dom#1246,d_qoy#1247,d_fy_year#1248,d_fy_quarter_seq#1249,d_fy_week_seq#1250,d_day_name#1251,d_quarter_name#1252,d_holiday#1253,d_weekend#1254,d_following_holiday#1255,d_first_dom#1256,d_last_dom#1257,d_same_day_ly#1258,d_same_day_lq#1259,d_current_day#1260,... 4 more fields] parquet\n                     :     :  :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#1170,d_date_id#1171,d_date#1172,d_month_seq#1173,d_week_seq#1174,d_quarter_seq#1175,d_year#1176,d_dow#1177,d_moy#1178,d_dom#1179,d_qoy#1180,d_fy_year#1181,d_fy_quarter_seq#1182,d_fy_week_seq#1183,d_day_name#1184,d_quarter_name#1185,d_holiday#1186,d_weekend#1187,d_following_holiday#1188,d_first_dom#1189,d_last_dom#1190,d_same_day_ly#1191,d_same_day_lq#1192,d_current_day#1193,... 4 more fields] parquet\n                     :     :  :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#1125,ss_item_sk#1126,ss_customer_sk#1127,ss_cdemo_sk#1128,ss_hdemo_sk#1129,ss_addr_sk#1130,ss_store_sk#1131,ss_promo_sk#1132,ss_ticket_number#1133L,ss_quantity#1134,ss_wholesale_cost#1135,ss_list_price#1136,ss_sales_price#1137,ss_ext_discount_amt#1138,ss_ext_sales_price#1139,ss_ext_wholesale_cost#1140,ss_ext_list_price#1141,ss_ext_tax#1142,ss_coupon_amt#1143,ss_net_paid#1144,ss_net_paid_inc_tax#1145,ss_net_profit#1146,ss_sold_date_sk#1147] parquet\n                     :     :  +- Project [i_item_sk#25 AS ss_item_sk#745]\n                     :     :     +- Join Inner, (((i_brand_id#32 = brand_id#742) AND (i_class_id#34 = class_id#743)) AND (i_category_id#36 = category_id#744))\n                     :     :        :- Project [i_item_sk#25, i_brand_id#32, i_class_id#34, i_category_id#36]\n                     :     :        :  +- Filter ((isnotnull(i_brand_id#32) AND isnotnull(i_class_id#34)) AND isnotnull(i_category_id#36))\n                     :     :        :     +- Relation spark_catalog.tpcds_100.item[i_item_sk#25,i_item_id#26,i_rec_start_date#27,i_rec_end_date#28,i_item_desc#29,i_current_price#30,i_wholesale_cost#31,i_brand_id#32,i_brand#33,i_class_id#34,i_class#35,i_category_id#36,i_category#37,i_manufact_id#38,i_manufact#39,i_size#40,i_formulation#41,i_color#42,i_units#43,i_container#44,i_manager_id#45,i_product_name#46] parquet\n                     :     :        +- Join LeftSemi, (((brand_id#742 <=> i_brand_id#834) AND (class_id#743 <=> i_class_id#836)) AND (category_id#744 <=> i_category_id#838))\n                     :     :           :- Aggregate [brand_id#742, class_id#743, category_id#744], [brand_id#742, class_id#743, category_id#744]\n                     :     :           :  +- Project [i_brand_id#762 AS brand_id#742, i_class_id#764 AS class_id#743, i_category_id#766 AS category_id#744]\n                     :     :           :     +- Join Inner, (ss_item_sk#48 = i_item_sk#755)\n                     :     :           :        :- Project [ss_item_sk#48]\n                     :     :           :        :  +- Join Inner, (ss_sold_date_sk#69 = d_date_sk#70)\n                     :     :           :        :     :- Project [ss_item_sk#48, ss_sold_date_sk#69]\n                     :     :           :        :     :  +- Filter ((isnotnull(ss_item_sk#48) AND isnotnull(ss_sold_date_sk#69)) AND dynamicpruning#1297 [ss_sold_date_sk#69])\n                     :     :           :        :     :     :  +- Project [d_date_sk#70]\n                     :     :           :        :     :     :     +- Filter ((isnotnull(d_year#76) AND ((d_year#76 >= 1998) AND (d_year#76 <= 2000))) AND isnotnull(d_date_sk#70))\n                     :     :           :        :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#70,d_date_id#71,d_date#72,d_month_seq#73,d_week_seq#74,d_quarter_seq#75,d_year#76,d_dow#77,d_moy#78,d_dom#79,d_qoy#80,d_fy_year#81,d_fy_quarter_seq#82,d_fy_week_seq#83,d_day_name#84,d_quarter_name#85,d_holiday#86,d_weekend#87,d_following_holiday#88,d_first_dom#89,d_last_dom#90,d_same_day_ly#91,d_same_day_lq#92,d_current_day#93,... 4 more fields] parquet\n                     :     :           :        :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#47,ss_item_sk#48,ss_customer_sk#49,ss_cdemo_sk#50,ss_hdemo_sk#51,ss_addr_sk#52,ss_store_sk#53,ss_promo_sk#54,ss_ticket_number#55L,ss_quantity#56,ss_wholesale_cost#57,ss_list_price#58,ss_sales_price#59,ss_ext_discount_amt#60,ss_ext_sales_price#61,ss_ext_wholesale_cost#62,ss_ext_list_price#63,ss_ext_tax#64,ss_coupon_amt#65,ss_net_paid#66,ss_net_paid_inc_tax#67,ss_net_profit#68,ss_sold_date_sk#69] parquet\n                     :     :           :        :     +- LogicalQueryStage Project [d_date_sk#70], BroadcastQueryStage 23\n                     :     :           :        +- Join LeftSemi, (((i_brand_id#762 <=> i_brand_id#784) AND (i_class_id#764 <=> i_class_id#786)) AND (i_category_id#766 <=> i_category_id#788))\n                     :     :           :           :- LogicalQueryStage Project [i_item_sk#755, i_brand_id#762, i_class_id#764, i_category_id#766], ShuffleQueryStage 25\n                     :     :           :           +- Project [i_brand_id#784, i_class_id#786, i_category_id#788]\n                     :     :           :              +- Join Inner, (cs_item_sk#112 = i_item_sk#777)\n                     :     :           :                 :- Project [cs_item_sk#112]\n                     :     :           :                 :  +- Join Inner, (cs_sold_date_sk#131 = d_date_sk#799)\n                     :     :           :                 :     :- Project [cs_item_sk#112, cs_sold_date_sk#131]\n                     :     :           :                 :     :  +- Filter ((isnotnull(cs_item_sk#112) AND isnotnull(cs_sold_date_sk#131)) AND dynamicpruning#1298 [cs_sold_date_sk#131])\n                     :     :           :                 :     :     :  +- Project [d_date_sk#799]\n                     :     :           :                 :     :     :     +- Filter ((isnotnull(d_year#805) AND ((d_year#805 >= 1998) AND (d_year#805 <= 2000))) AND isnotnull(d_date_sk#799))\n                     :     :           :                 :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#799,d_date_id#800,d_date#801,d_month_seq#802,d_week_seq#803,d_quarter_seq#804,d_year#805,d_dow#806,d_moy#807,d_dom#808,d_qoy#809,d_fy_year#810,d_fy_quarter_seq#811,d_fy_week_seq#812,d_day_name#813,d_quarter_name#814,d_holiday#815,d_weekend#816,d_following_holiday#817,d_first_dom#818,d_last_dom#819,d_same_day_ly#820,d_same_day_lq#821,d_current_day#822,... 4 more fields] parquet\n                     :     :           :                 :     :     +- Relation spark_catalog.tpcds_100.catalog_sales[cs_sold_time_sk#98,cs_ship_date_sk#99,cs_bill_customer_sk#100,cs_bill_cdemo_sk#101,cs_bill_hdemo_sk#102,cs_bill_addr_sk#103,cs_ship_customer_sk#104,cs_ship_cdemo_sk#105,cs_ship_hdemo_sk#106,cs_ship_addr_sk#107,cs_call_center_sk#108,cs_catalog_page_sk#109,cs_ship_mode_sk#110,cs_warehouse_sk#111,cs_item_sk#112,cs_promo_sk#113,cs_order_number#114L,cs_quantity#115,cs_wholesale_cost#116,cs_list_price#117,cs_sales_price#118,cs_ext_discount_amt#119,cs_ext_sales_price#120,cs_ext_wholesale_cost#121,... 10 more fields] parquet\n                     :     :           :                 :     +- LogicalQueryStage Project [d_date_sk#799], BroadcastQueryStage 27\n                     :     :           :                 +- LogicalQueryStage Project [i_item_sk#777, i_brand_id#784, i_class_id#786, i_category_id#788], BroadcastQueryStage 29\n                     :     :           +- Project [i_brand_id#834, i_class_id#836, i_category_id#838]\n                     :     :              +- Join Inner, (ws_item_sk#134 = i_item_sk#827)\n                     :     :                 :- Project [ws_item_sk#134]\n                     :     :                 :  +- Join Inner, (ws_sold_date_sk#165 = d_date_sk#849)\n                     :     :                 :     :- Project [ws_item_sk#134, ws_sold_date_sk#165]\n                     :     :                 :     :  +- Filter ((isnotnull(ws_item_sk#134) AND isnotnull(ws_sold_date_sk#165)) AND dynamicpruning#1299 [ws_sold_date_sk#165])\n                     :     :                 :     :     :  +- Project [d_date_sk#849]\n                     :     :                 :     :     :     +- Filter ((isnotnull(d_year#855) AND ((d_year#855 >= 1998) AND (d_year#855 <= 2000))) AND isnotnull(d_date_sk#849))\n                     :     :                 :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#849,d_date_id#850,d_date#851,d_month_seq#852,d_week_seq#853,d_quarter_seq#854,d_year#855,d_dow#856,d_moy#857,d_dom#858,d_qoy#859,d_fy_year#860,d_fy_quarter_seq#861,d_fy_week_seq#862,d_day_name#863,d_quarter_name#864,d_holiday#865,d_weekend#866,d_following_holiday#867,d_first_dom#868,d_last_dom#869,d_same_day_ly#870,d_same_day_lq#871,d_current_day#872,... 4 more fields] parquet\n                     :     :                 :     :     +- Relation spark_catalog.tpcds_100.web_sales[ws_sold_time_sk#132,ws_ship_date_sk#133,ws_item_sk#134,ws_bill_customer_sk#135,ws_bill_cdemo_sk#136,ws_bill_hdemo_sk#137,ws_bill_addr_sk#138,ws_ship_customer_sk#139,ws_ship_cdemo_sk#140,ws_ship_hdemo_sk#141,ws_ship_addr_sk#142,ws_web_page_sk#143,ws_web_site_sk#144,ws_ship_mode_sk#145,ws_warehouse_sk#146,ws_promo_sk#147,ws_order_number#148L,ws_quantity#149,ws_wholesale_cost#150,ws_list_price#151,ws_sales_price#152,ws_ext_discount_amt#153,ws_ext_sales_price#154,ws_ext_wholesale_cost#155,... 10 more fields] parquet\n                     :     :                 :     +- LogicalQueryStage Project [d_date_sk#849], BroadcastQueryStage 31\n                     :     :                 +- LogicalQueryStage Project [i_item_sk#827, i_brand_id#834, i_class_id#836, i_category_id#838], BroadcastQueryStage 33\n                     :     +- LogicalQueryStage Project [d_date_sk#1170], BroadcastQueryStage 34\n                     +- Join LeftSemi, (i_item_sk#1148 = ss_item_sk#745)\n                        :- Project [i_item_sk#1148, i_brand_id#1155, i_class_id#1157, i_category_id#1159]\n                        :  +- Filter (((isnotnull(i_item_sk#1148) AND isnotnull(i_brand_id#1155)) AND isnotnull(i_class_id#1157)) AND isnotnull(i_category_id#1159))\n                        :     +- Relation spark_catalog.tpcds_100.item[i_item_sk#1148,i_item_id#1149,i_rec_start_date#1150,i_rec_end_date#1151,i_item_desc#1152,i_current_price#1153,i_wholesale_cost#1154,i_brand_id#1155,i_brand#1156,i_class_id#1157,i_class#1158,i_category_id#1159,i_category#1160,i_manufact_id#1161,i_manufact#1162,i_size#1163,i_formulation#1164,i_color#1165,i_units#1166,i_container#1167,i_manager_id#1168,i_product_name#1169] parquet\n                        +- Project [i_item_sk#25 AS ss_item_sk#745]\n                           +- Join Inner, (((i_brand_id#32 = brand_id#742) AND (i_class_id#34 = class_id#743)) AND (i_category_id#36 = category_id#744))\n                              :- Project [i_item_sk#25, i_brand_id#32, i_class_id#34, i_category_id#36]\n                              :  +- Filter ((isnotnull(i_brand_id#32) AND isnotnull(i_class_id#34)) AND isnotnull(i_category_id#36))\n                              :     +- Relation spark_catalog.tpcds_100.item[i_item_sk#25,i_item_id#26,i_rec_start_date#27,i_rec_end_date#28,i_item_desc#29,i_current_price#30,i_wholesale_cost#31,i_brand_id#32,i_brand#33,i_class_id#34,i_class#35,i_category_id#36,i_category#37,i_manufact_id#38,i_manufact#39,i_size#40,i_formulation#41,i_color#42,i_units#43,i_container#44,i_manager_id#45,i_product_name#46] parquet\n                              +- Join LeftSemi, (((brand_id#742 <=> i_brand_id#834) AND (class_id#743 <=> i_class_id#836)) AND (category_id#744 <=> i_category_id#838))\n                                 :- Aggregate [brand_id#742, class_id#743, category_id#744], [brand_id#742, class_id#743, category_id#744]\n                                 :  +- Project [i_brand_id#762 AS brand_id#742, i_class_id#764 AS class_id#743, i_category_id#766 AS category_id#744]\n                                 :     +- Join Inner, (ss_item_sk#48 = i_item_sk#755)\n                                 :        :- Project [ss_item_sk#48]\n                                 :        :  +- Join Inner, (ss_sold_date_sk#69 = d_date_sk#70)\n                                 :        :     :- Project [ss_item_sk#48, ss_sold_date_sk#69]\n                                 :        :     :  +- Filter ((isnotnull(ss_item_sk#48) AND isnotnull(ss_sold_date_sk#69)) AND dynamicpruning#1297 [ss_sold_date_sk#69])\n                                 :        :     :     :  +- Project [d_date_sk#70]\n                                 :        :     :     :     +- Filter ((isnotnull(d_year#76) AND ((d_year#76 >= 1998) AND (d_year#76 <= 2000))) AND isnotnull(d_date_sk#70))\n                                 :        :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#70,d_date_id#71,d_date#72,d_month_seq#73,d_week_seq#74,d_quarter_seq#75,d_year#76,d_dow#77,d_moy#78,d_dom#79,d_qoy#80,d_fy_year#81,d_fy_quarter_seq#82,d_fy_week_seq#83,d_day_name#84,d_quarter_name#85,d_holiday#86,d_weekend#87,d_following_holiday#88,d_first_dom#89,d_last_dom#90,d_same_day_ly#91,d_same_day_lq#92,d_current_day#93,... 4 more fields] parquet\n                                 :        :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#47,ss_item_sk#48,ss_customer_sk#49,ss_cdemo_sk#50,ss_hdemo_sk#51,ss_addr_sk#52,ss_store_sk#53,ss_promo_sk#54,ss_ticket_number#55L,ss_quantity#56,ss_wholesale_cost#57,ss_list_price#58,ss_sales_price#59,ss_ext_discount_amt#60,ss_ext_sales_price#61,ss_ext_wholesale_cost#62,ss_ext_list_price#63,ss_ext_tax#64,ss_coupon_amt#65,ss_net_paid#66,ss_net_paid_inc_tax#67,ss_net_profit#68,ss_sold_date_sk#69] parquet\n                                 :        :     +- LogicalQueryStage Project [d_date_sk#70], BroadcastQueryStage 36\n                                 :        +- Join LeftSemi, (((i_brand_id#762 <=> i_brand_id#784) AND (i_class_id#764 <=> i_class_id#786)) AND (i_category_id#766 <=> i_category_id#788))\n                                 :           :- LogicalQueryStage Project [i_item_sk#755, i_brand_id#762, i_class_id#764, i_category_id#766], ShuffleQueryStage 38\n                                 :           +- Project [i_brand_id#784, i_class_id#786, i_category_id#788]\n                                 :              +- Join Inner, (cs_item_sk#112 = i_item_sk#777)\n                                 :                 :- Project [cs_item_sk#112]\n                                 :                 :  +- Join Inner, (cs_sold_date_sk#131 = d_date_sk#799)\n                                 :                 :     :- Project [cs_item_sk#112, cs_sold_date_sk#131]\n                                 :                 :     :  +- Filter ((isnotnull(cs_item_sk#112) AND isnotnull(cs_sold_date_sk#131)) AND dynamicpruning#1298 [cs_sold_date_sk#131])\n                                 :                 :     :     :  +- Project [d_date_sk#799]\n                                 :                 :     :     :     +- Filter ((isnotnull(d_year#805) AND ((d_year#805 >= 1998) AND (d_year#805 <= 2000))) AND isnotnull(d_date_sk#799))\n                                 :                 :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#799,d_date_id#800,d_date#801,d_month_seq#802,d_week_seq#803,d_quarter_seq#804,d_year#805,d_dow#806,d_moy#807,d_dom#808,d_qoy#809,d_fy_year#810,d_fy_quarter_seq#811,d_fy_week_seq#812,d_day_name#813,d_quarter_name#814,d_holiday#815,d_weekend#816,d_following_holiday#817,d_first_dom#818,d_last_dom#819,d_same_day_ly#820,d_same_day_lq#821,d_current_day#822,... 4 more fields] parquet\n                                 :                 :     :     +- Relation spark_catalog.tpcds_100.catalog_sales[cs_sold_time_sk#98,cs_ship_date_sk#99,cs_bill_customer_sk#100,cs_bill_cdemo_sk#101,cs_bill_hdemo_sk#102,cs_bill_addr_sk#103,cs_ship_customer_sk#104,cs_ship_cdemo_sk#105,cs_ship_hdemo_sk#106,cs_ship_addr_sk#107,cs_call_center_sk#108,cs_catalog_page_sk#109,cs_ship_mode_sk#110,cs_warehouse_sk#111,cs_item_sk#112,cs_promo_sk#113,cs_order_number#114L,cs_quantity#115,cs_wholesale_cost#116,cs_list_price#117,cs_sales_price#118,cs_ext_discount_amt#119,cs_ext_sales_price#120,cs_ext_wholesale_cost#121,... 10 more fields] parquet\n                                 :                 :     +- LogicalQueryStage Project [d_date_sk#799], BroadcastQueryStage 40\n                                 :                 +- LogicalQueryStage Project [i_item_sk#777, i_brand_id#784, i_class_id#786, i_category_id#788], BroadcastQueryStage 42\n                                 +- Project [i_brand_id#834, i_class_id#836, i_category_id#838]\n                                    +- Join Inner, (ws_item_sk#134 = i_item_sk#827)\n                                       :- Project [ws_item_sk#134]\n                                       :  +- Join Inner, (ws_sold_date_sk#165 = d_date_sk#849)\n                                       :     :- Project [ws_item_sk#134, ws_sold_date_sk#165]\n                                       :     :  +- Filter ((isnotnull(ws_item_sk#134) AND isnotnull(ws_sold_date_sk#165)) AND dynamicpruning#1299 [ws_sold_date_sk#165])\n                                       :     :     :  +- Project [d_date_sk#849]\n                                       :     :     :     +- Filter ((isnotnull(d_year#855) AND ((d_year#855 >= 1998) AND (d_year#855 <= 2000))) AND isnotnull(d_date_sk#849))\n                                       :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#849,d_date_id#850,d_date#851,d_month_seq#852,d_week_seq#853,d_quarter_seq#854,d_year#855,d_dow#856,d_moy#857,d_dom#858,d_qoy#859,d_fy_year#860,d_fy_quarter_seq#861,d_fy_week_seq#862,d_day_name#863,d_quarter_name#864,d_holiday#865,d_weekend#866,d_following_holiday#867,d_first_dom#868,d_last_dom#869,d_same_day_ly#870,d_same_day_lq#871,d_current_day#872,... 4 more fields] parquet\n                                       :     :     +- Relation spark_catalog.tpcds_100.web_sales[ws_sold_time_sk#132,ws_ship_date_sk#133,ws_item_sk#134,ws_bill_customer_sk#135,ws_bill_cdemo_sk#136,ws_bill_hdemo_sk#137,ws_bill_addr_sk#138,ws_ship_customer_sk#139,ws_ship_cdemo_sk#140,ws_ship_hdemo_sk#141,ws_ship_addr_sk#142,ws_web_page_sk#143,ws_web_site_sk#144,ws_ship_mode_sk#145,ws_warehouse_sk#146,ws_promo_sk#147,ws_order_number#148L,ws_quantity#149,ws_wholesale_cost#150,ws_list_price#151,ws_sales_price#152,ws_ext_discount_amt#153,ws_ext_sales_price#154,ws_ext_wholesale_cost#155,... 10 more fields] parquet\n                                       :     +- LogicalQueryStage Project [d_date_sk#849], BroadcastQueryStage 44\n                                       +- LogicalQueryStage Project [i_item_sk#827, i_brand_id#834, i_class_id#836, i_category_id#838], BroadcastQueryStage 46\n"
      },
      "IM" : {
        "inputSizeInBytes" : 430529364488,
        "inputRowCount" : 2515124096
      },
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 2,
        "FinishedTasksNum" : 4,
        "FinishedTasksTotalTimeInMs" : 5035.0,
        "FinishedTasksDistributionInMs" : [ 1225.0, 1262.0, 1266.0, 1282.0, 1282.0 ]
      },
      "StartTimeInMs" : 1702226626473,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 85025,
        "IOBytes" : {
          "Total" : 3424550809,
          "Details" : {
            "IR" : 2735687725,
            "IW" : 0,
            "SR" : 344431542,
            "SW" : 344431542
          }
        }
      }
    },
    "17" : {
      "LQP" : {
        "operators" : {
          "45" : {
            "sign" : 1698660872,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 14972593792,
            "rowCount" : 71983624,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ws_sold_time_sk#990, ws_ship_date_sk#991, ws_item_sk#992, ws_bill_customer_sk#993, ws_bill_cdemo_sk#994, ws_bill_hdemo_sk#995, ws_bill_addr_sk#996, ws_ship_customer_sk#997, ws_ship_cdemo_sk#998, ws_ship_hdemo_sk#999, ws_ship_addr_sk#1000, ws_web_page_sk#1001, ws_web_site_sk#1002, ws_ship_mode_sk#1003, ws_warehouse_sk#1004, ws_promo_sk#1005, ws_order_number#1006L, ws_quantity#1007, ws_wholesale_cost#1008, ws_list_price#1009, ws_sales_price#1010, ws_ext_discount_amt#1011, ws_ext_sales_price#1012, ws_ext_wholesale_cost#1013, ... 10 more fields], `spark_catalog`.`tpcds_100`.`web_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "34" : {
            "sign" : 824386657,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 3878455336,
            "rowCount" : 138516262,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cs_sold_date_sk#961 = d_date_sk#962) "
          },
          "67" : {
            "sign" : 2017469727,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 4860984,
            "rowCount" : 202541,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Join LeftSemi, (i_item_sk#1148 = ss_item_sk#745), BroadcastQueryStage 98 "
          },
          "12" : {
            "sign" : 571393713,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(ss_item_sk#1053) AND isnotnull(ss_sold_date_sk#1074)) AND dynamicpruning#1303 [ss_sold_date_sk#1074]) "
          },
          "66" : {
            "sign" : -1902204624,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1048632,
            "rowCount" : 7,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#1170], BroadcastQueryStage 34 "
          },
          "51" : {
            "sign" : -668019303,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 9192253472,
            "rowCount" : 287257921,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_quantity#1134, ss_list_price#1136, i_brand_id#1155, i_class_id#1157, i_category_id#1159] "
          },
          "8" : {
            "sign" : 447227797,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 46207619304,
            "rowCount" : 1925317471,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#1053, ss_quantity#1061, ss_list_price#1063] "
          },
          "19" : {
            "sign" : -1755539215,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#1209, d_date_id#1210, d_date#1211, d_month_seq#1212, d_week_seq#1213, d_quarter_seq#1214, d_year#1215, d_dow#1216, d_moy#1217, d_dom#1218, d_qoy#1219, d_fy_year#1220, d_fy_quarter_seq#1221, d_fy_week_seq#1222, d_day_name#1223, d_quarter_name#1224, d_holiday#1225, d_weekend#1226, d_following_holiday#1227, d_first_dom#1228, d_last_dom#1229, d_same_day_ly#1230, d_same_day_lq#1231, d_current_day#1232, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "23" : {
            "sign" : -1809172647,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 24,
            "rowCount" : 1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [avg((cast(quantity#746 as decimal(10,0)) * list_price#747)) AS average_sales#752] "
          },
          "62" : {
            "sign" : -79282860,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 24,
            "rowCount" : 2,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_week_seq#1241] "
          },
          "4" : {
            "sign" : -142739905,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 10408960,
            "rowCount" : 136960,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(sales#731) AND (cast(sales#731 as decimal(32,6)) > cast(scalar-subquery#735 [] as decimal(32,6)))) "
          },
          "40" : {
            "sign" : -169490734,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#962, d_date_id#963, d_date#964, d_month_seq#965, d_week_seq#966, d_quarter_seq#967, d_year#968, d_dow#969, d_moy#970, d_dom#971, d_qoy#972, d_fy_year#973, d_fy_quarter_seq#974, d_fy_week_seq#975, d_day_name#976, d_quarter_name#977, d_holiday#978, d_weekend#979, d_following_holiday#980, d_first_dom#981, d_last_dom#982, d_same_day_ly#983, d_same_day_lq#984, d_current_day#985, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "15" : {
            "sign" : 1866012666,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(d_week_seq#1101) AND (d_week_seq#1101 = scalar-subquery#734 [])) AND isnotnull(d_date_sk#1097)) "
          },
          "11" : {
            "sign" : 1222696026,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 7701269884,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#1053, ss_quantity#1061, ss_list_price#1063, ss_sold_date_sk#1074] "
          },
          "9" : {
            "sign" : 178119988,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 61610159072,
            "rowCount" : 1925317471,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#1074 = d_date_sk#1097) "
          },
          "44" : {
            "sign" : -1902449141,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 14972593792,
            "rowCount" : 71983624,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(ws_sold_date_sk#1023) AND dynamicpruning#1290 [ws_sold_date_sk#1023]) "
          },
          "33" : {
            "sign" : 825651901,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 2770325240,
            "rowCount" : 138516262,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_quantity#945 AS quantity#748, cs_list_price#947 AS list_price#749] "
          },
          "22" : {
            "sign" : 1172677288,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 4860984,
            "rowCount" : 202541,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Join LeftSemi, (i_item_sk#1075 = ss_item_sk#745), BroadcastQueryStage 96 "
          },
          "56" : {
            "sign" : -303911461,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 7701269884,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#1126, ss_quantity#1134, ss_list_price#1136, ss_sold_date_sk#1147] "
          },
          "55" : {
            "sign" : 1957680440,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 7701269884,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (ss_item_sk#1126 = ss_item_sk#745) "
          },
          "26" : {
            "sign" : -1804794945,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 7435136380,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#899 = d_date_sk#900) "
          },
          "50" : {
            "sign" : 1167992322,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 10408960,
            "rowCount" : 136960,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [i_brand_id#1155, i_class_id#1157, i_category_id#1159], [store AS channel#736, i_brand_id#1155, i_class_id#1157, i_category_id#1159, sum((cast(ss_quantity#1134 as decimal(10,0)) * ss_list_price#1136)) AS sales#737, count(1) AS number_sales#738L] "
          },
          "37" : {
            "sign" : -70077436,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 29800787536,
            "rowCount" : 143273017,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [cs_sold_time_sk#928, cs_ship_date_sk#929, cs_bill_customer_sk#930, cs_bill_cdemo_sk#931, cs_bill_hdemo_sk#932, cs_bill_addr_sk#933, cs_ship_customer_sk#934, cs_ship_cdemo_sk#935, cs_ship_hdemo_sk#936, cs_ship_addr_sk#937, cs_call_center_sk#938, cs_catalog_page_sk#939, cs_ship_mode_sk#940, cs_warehouse_sk#941, cs_item_sk#942, cs_promo_sk#943, cs_order_number#944L, cs_quantity#945, cs_wholesale_cost#946, cs_list_price#947, cs_sales_price#948, cs_ext_discount_amt#949, cs_ext_sales_price#950, cs_ext_wholesale_cost#951, ... 10 more fields], `spark_catalog`.`tpcds_100`.`catalog_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "61" : {
            "sign" : 683629544,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#1170, d_date_id#1171, d_date#1172, d_month_seq#1173, d_week_seq#1174, d_quarter_seq#1175, d_year#1176, d_dow#1177, d_moy#1178, d_dom#1179, d_qoy#1180, d_fy_year#1181, d_fy_quarter_seq#1182, d_fy_week_seq#1183, d_day_name#1184, d_quarter_name#1185, d_holiday#1186, d_weekend#1187, d_following_holiday#1188, d_first_dom#1189, d_last_dom#1190, d_same_day_ly#1191, d_same_day_lq#1192, d_current_day#1193, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "13" : {
            "sign" : 913239237,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#1052, ss_item_sk#1053, ss_customer_sk#1054, ss_cdemo_sk#1055, ss_hdemo_sk#1056, ss_addr_sk#1057, ss_store_sk#1058, ss_promo_sk#1059, ss_ticket_number#1060L, ss_quantity#1061, ss_wholesale_cost#1062, ss_list_price#1063, ss_sales_price#1064, ss_ext_discount_amt#1065, ss_ext_sales_price#1066, ss_ext_wholesale_cost#1067, ss_ext_list_price#1068, ss_ext_tax#1069, ss_coupon_amt#1070, ss_net_paid#1071, ss_net_paid_inc_tax#1072, ss_net_profit#1073, ss_sold_date_sk#1074], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "46" : {
            "sign" : -1100969675,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 17256,
            "rowCount" : 1438,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#1024] "
          },
          "24" : {
            "sign" : -1298322270,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Union",
            "sizeInBytes" : 9471049040,
            "rowCount" : 473552452,
            "isRuntime" : false,
            "predicate" : " (unknown) Union Arguments: false, false "
          },
          "35" : {
            "sign" : 1942236716,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 3438552408,
            "rowCount" : 143273017,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_quantity#945, cs_list_price#947, cs_sold_date_sk#961] "
          },
          "16" : {
            "sign" : 682718368,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#1097, d_date_id#1098, d_date#1099, d_month_seq#1100, d_week_seq#1101, d_quarter_seq#1102, d_year#1103, d_dow#1104, d_moy#1105, d_dom#1106, d_qoy#1107, d_fy_year#1108, d_fy_quarter_seq#1109, d_fy_week_seq#1110, d_day_name#1111, d_quarter_name#1112, d_holiday#1113, d_weekend#1114, d_following_holiday#1115, d_first_dom#1116, d_last_dom#1117, d_same_day_ly#1118, d_same_day_lq#1119, d_current_day#1120, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "5" : {
            "sign" : -1843308769,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 10408960,
            "rowCount" : 136960,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [i_brand_id#1082, i_class_id#1084, i_category_id#1086], [store AS channel#730, i_brand_id#1082, i_class_id#1084, i_category_id#1086, sum((cast(ss_quantity#1061 as decimal(10,0)) * ss_list_price#1063)) AS sales#731, count(1) AS number_sales#732L] "
          },
          "10" : {
            "sign" : 1532047545,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 7701269884,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (ss_item_sk#1053 = ss_item_sk#745) "
          },
          "59" : {
            "sign" : 1096234976,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 876588,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#1170] "
          },
          "48" : {
            "sign" : -502763688,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#1024, d_date_id#1025, d_date#1026, d_month_seq#1027, d_week_seq#1028, d_quarter_seq#1029, d_year#1030, d_dow#1031, d_moy#1032, d_dom#1033, d_qoy#1034, d_fy_year#1035, d_fy_quarter_seq#1036, d_fy_week_seq#1037, d_day_name#1038, d_quarter_name#1039, d_holiday#1040, d_weekend#1041, d_following_holiday#1042, d_first_dom#1043, d_last_dom#1044, d_same_day_ly#1045, d_same_day_lq#1046, d_current_day#1047, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "21" : {
            "sign" : -21562714,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1048632,
            "rowCount" : 7,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#1097], BroadcastQueryStage 9 "
          },
          "54" : {
            "sign" : -508787732,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 61610159072,
            "rowCount" : 1925317471,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#1147 = d_date_sk#1170) "
          },
          "43" : {
            "sign" : 49678577,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 1727606976,
            "rowCount" : 71983624,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_quantity#1007, ws_list_price#1009, ws_sold_date_sk#1023] "
          },
          "65" : {
            "sign" : 1108483913,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 10020600,
            "rowCount" : 176814,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_item_sk#25 AS ss_item_sk#745], BroadcastQueryStage 93 "
          },
          "57" : {
            "sign" : -604473204,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(ss_item_sk#1126) AND isnotnull(ss_sold_date_sk#1147)) AND dynamicpruning#1310 [ss_sold_date_sk#1147]) "
          },
          "32" : {
            "sign" : -820074406,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#900, d_date_id#901, d_date#902, d_month_seq#903, d_week_seq#904, d_quarter_seq#905, d_year#906, d_dow#907, d_moy#908, d_dom#909, d_qoy#910, d_fy_year#911, d_fy_quarter_seq#912, d_fy_week_seq#913, d_day_name#914, d_quarter_name#915, d_holiday#916, d_weekend#917, d_following_holiday#918, d_first_dom#919, d_last_dom#920, d_same_day_ly#921, d_same_day_lq#922, d_current_day#923, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "49" : {
            "sign" : -15821381,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 10408960,
            "rowCount" : 136960,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(sales#737) AND (cast(sales#737 as decimal(32,6)) > cast(scalar-subquery#741 [] as decimal(32,6)))) "
          },
          "6" : {
            "sign" : -1211649306,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 9192253472,
            "rowCount" : 287257921,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_quantity#1061, ss_list_price#1063, i_brand_id#1082, i_class_id#1084, i_category_id#1086] "
          },
          "36" : {
            "sign" : 1500374164,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 29800787536,
            "rowCount" : 143273017,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(cs_sold_date_sk#961) AND dynamicpruning#1289 [cs_sold_date_sk#961]) "
          },
          "1" : {
            "sign" : 1145641227,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
            "sizeInBytes" : 19722240,
            "rowCount" : 136960,
            "isRuntime" : false,
            "predicate" : " (unknown) LocalLimit Arguments: 100 "
          },
          "39" : {
            "sign" : -1695423935,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 353748,
            "rowCount" : 1438,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(d_year#968) AND ((d_year#968 >= 1998) AND (d_year#968 <= 2000))) AND isnotnull(d_date_sk#962)) "
          },
          "17" : {
            "sign" : -2061501032,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 36,
            "rowCount" : 3,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_week_seq#1213] "
          },
          "25" : {
            "sign" : 869525063,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 5310811700,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_quantity#886 AS quantity#746, ss_list_price#888 AS list_price#747] "
          },
          "60" : {
            "sign" : -1689547051,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(d_week_seq#1174) AND (d_week_seq#1174 = scalar-subquery#740 [])) AND isnotnull(d_date_sk#1170)) "
          },
          "14" : {
            "sign" : 707519831,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 876588,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#1097] "
          },
          "47" : {
            "sign" : -626435234,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 353748,
            "rowCount" : 1438,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(d_year#1030) AND ((d_year#1030 >= 1998) AND (d_year#1030 <= 2000))) AND isnotnull(d_date_sk#1024)) "
          },
          "31" : {
            "sign" : -2071970095,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 353748,
            "rowCount" : 1438,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(d_year#906) AND ((d_year#906 >= 1998) AND (d_year#906 <= 2000))) AND isnotnull(d_date_sk#900)) "
          },
          "58" : {
            "sign" : 1179432008,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#1125, ss_item_sk#1126, ss_customer_sk#1127, ss_cdemo_sk#1128, ss_hdemo_sk#1129, ss_addr_sk#1130, ss_store_sk#1131, ss_promo_sk#1132, ss_ticket_number#1133L, ss_quantity#1134, ss_wholesale_cost#1135, ss_list_price#1136, ss_sales_price#1137, ss_ext_discount_amt#1138, ss_ext_sales_price#1139, ss_ext_wholesale_cost#1140, ss_ext_list_price#1141, ss_ext_tax#1142, ss_coupon_amt#1143, ss_net_paid#1144, ss_net_paid_inc_tax#1145, ss_net_profit#1146, ss_sold_date_sk#1147], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "64" : {
            "sign" : 813769211,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#1237, d_date_id#1238, d_date#1239, d_month_seq#1240, d_week_seq#1241, d_quarter_seq#1242, d_year#1243, d_dow#1244, d_moy#1245, d_dom#1246, d_qoy#1247, d_fy_year#1248, d_fy_quarter_seq#1249, d_fy_week_seq#1250, d_day_name#1251, d_quarter_name#1252, d_holiday#1253, d_weekend#1254, d_following_holiday#1255, d_first_dom#1256, d_last_dom#1257, d_same_day_ly#1258, d_same_day_lq#1259, d_current_day#1260, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "53" : {
            "sign" : 342660770,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 46207619304,
            "rowCount" : 1925317471,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#1126, ss_quantity#1134, ss_list_price#1136] "
          },
          "42" : {
            "sign" : 1503367439,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 1945876940,
            "rowCount" : 69495605,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ws_sold_date_sk#1023 = d_date_sk#1024) "
          },
          "0" : {
            "sign" : 449474544,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
            "sizeInBytes" : 12000,
            "rowCount" : 100,
            "isRuntime" : false,
            "predicate" : " (unknown) GlobalLimit Arguments: 100 "
          },
          "20" : {
            "sign" : 1108483138,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 10020600,
            "rowCount" : 176814,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_item_sk#25 AS ss_item_sk#745], BroadcastQueryStage 89 "
          },
          "27" : {
            "sign" : 1776873494,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 6601088472,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_quantity#886, ss_list_price#888, ss_sold_date_sk#899] "
          },
          "2" : {
            "sign" : -444489466,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 19722240,
            "rowCount" : 136960,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [i_brand_id#1082 ASC NULLS FIRST, i_class_id#1084 ASC NULLS FIRST, i_category_id#1086 ASC NULLS FIRST], true "
          },
          "38" : {
            "sign" : 406087876,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 17256,
            "rowCount" : 1438,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#962] "
          },
          "18" : {
            "sign" : -1305353512,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 738,
            "rowCount" : 3,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(d_year#1215) AND isnotnull(d_moy#1217)) AND isnotnull(d_dom#1218)) AND (((d_year#1215 = 1999) AND (d_moy#1217 = 12)) AND (d_dom#1218 = 16))) "
          },
          "30" : {
            "sign" : 2019201408,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 17256,
            "rowCount" : 1438,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#900] "
          },
          "7" : {
            "sign" : 223171687,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 11490316840,
            "rowCount" : 287257921,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_item_sk#1053 = i_item_sk#1075) "
          },
          "29" : {
            "sign" : -1972788865,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#877, ss_item_sk#878, ss_customer_sk#879, ss_cdemo_sk#880, ss_hdemo_sk#881, ss_addr_sk#882, ss_store_sk#883, ss_promo_sk#884, ss_ticket_number#885L, ss_quantity#886, ss_wholesale_cost#887, ss_list_price#888, ss_sales_price#889, ss_ext_discount_amt#890, ss_ext_sales_price#891, ss_ext_wholesale_cost#892, ss_ext_list_price#893, ss_ext_tax#894, ss_coupon_amt#895, ss_net_paid#896, ss_net_paid_inc_tax#897, ss_net_profit#898, ss_sold_date_sk#899], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "41" : {
            "sign" : 17831375,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 1389912100,
            "rowCount" : 69495605,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_quantity#1007 AS quantity#750, ws_list_price#1009 AS list_price#751] "
          },
          "63" : {
            "sign" : 1734827371,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 492,
            "rowCount" : 2,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(d_year#1243) AND isnotnull(d_moy#1245)) AND isnotnull(d_dom#1246)) AND (((d_year#1243 = 1998) AND (d_moy#1245 = 12)) AND (d_dom#1246 = 16))) "
          },
          "3" : {
            "sign" : -275318404,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 19722240,
            "rowCount" : 136960,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (((i_brand_id#1082 = i_brand_id#1155) AND (i_class_id#1084 = i_class_id#1157)) AND (i_category_id#1086 = i_category_id#1159)) "
          },
          "52" : {
            "sign" : -41597265,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 11490316840,
            "rowCount" : 287257921,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_item_sk#1126 = i_item_sk#1148) "
          },
          "28" : {
            "sign" : 1377797290,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(ss_sold_date_sk#899) AND dynamicpruning#1288 [ss_sold_date_sk#899]) "
          }
        },
        "links" : [ {
          "fromId" : 13,
          "fromName" : "LogicalRelation",
          "toId" : 12,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 16,
          "fromName" : "LogicalRelation",
          "toId" : 15,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 19,
          "fromName" : "LogicalRelation",
          "toId" : 18,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 18,
          "fromName" : "Filter",
          "toId" : 17,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 17,
          "fromName" : "Project",
          "toId" : 15,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 15,
          "fromName" : "Filter",
          "toId" : 14,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 14,
          "fromName" : "Project",
          "toId" : 12,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 12,
          "fromName" : "Filter",
          "toId" : 11,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "Project",
          "toId" : 10,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 20,
          "fromName" : "LogicalQueryStage",
          "toId" : 10,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "Join",
          "toId" : 9,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 21,
          "fromName" : "LogicalQueryStage",
          "toId" : 9,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "Join",
          "toId" : 8,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "Project",
          "toId" : 7,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 22,
          "fromName" : "LogicalQueryStage",
          "toId" : 7,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Join",
          "toId" : 6,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Project",
          "toId" : 5,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Aggregate",
          "toId" : 4,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 29,
          "fromName" : "LogicalRelation",
          "toId" : 28,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 32,
          "fromName" : "LogicalRelation",
          "toId" : 31,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 31,
          "fromName" : "Filter",
          "toId" : 30,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 30,
          "fromName" : "Project",
          "toId" : 28,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 28,
          "fromName" : "Filter",
          "toId" : 27,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 27,
          "fromName" : "Project",
          "toId" : 26,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 30,
          "fromName" : "Project",
          "toId" : 26,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 26,
          "fromName" : "Join",
          "toId" : 25,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 25,
          "fromName" : "Project",
          "toId" : 24,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 37,
          "fromName" : "LogicalRelation",
          "toId" : 36,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 40,
          "fromName" : "LogicalRelation",
          "toId" : 39,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 39,
          "fromName" : "Filter",
          "toId" : 38,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 38,
          "fromName" : "Project",
          "toId" : 36,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 36,
          "fromName" : "Filter",
          "toId" : 35,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 35,
          "fromName" : "Project",
          "toId" : 34,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 38,
          "fromName" : "Project",
          "toId" : 34,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 34,
          "fromName" : "Join",
          "toId" : 33,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 33,
          "fromName" : "Project",
          "toId" : 24,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 45,
          "fromName" : "LogicalRelation",
          "toId" : 44,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 48,
          "fromName" : "LogicalRelation",
          "toId" : 47,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 47,
          "fromName" : "Filter",
          "toId" : 46,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 46,
          "fromName" : "Project",
          "toId" : 44,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 44,
          "fromName" : "Filter",
          "toId" : 43,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 43,
          "fromName" : "Project",
          "toId" : 42,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 46,
          "fromName" : "Project",
          "toId" : 42,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 42,
          "fromName" : "Join",
          "toId" : 41,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 41,
          "fromName" : "Project",
          "toId" : 24,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 24,
          "fromName" : "Union",
          "toId" : 23,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 23,
          "fromName" : "Aggregate",
          "toId" : 4,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 4,
          "fromName" : "Filter",
          "toId" : 3,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 58,
          "fromName" : "LogicalRelation",
          "toId" : 57,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 61,
          "fromName" : "LogicalRelation",
          "toId" : 60,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 64,
          "fromName" : "LogicalRelation",
          "toId" : 63,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 63,
          "fromName" : "Filter",
          "toId" : 62,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 62,
          "fromName" : "Project",
          "toId" : 60,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 60,
          "fromName" : "Filter",
          "toId" : 59,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 59,
          "fromName" : "Project",
          "toId" : 57,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 57,
          "fromName" : "Filter",
          "toId" : 56,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 56,
          "fromName" : "Project",
          "toId" : 55,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 65,
          "fromName" : "LogicalQueryStage",
          "toId" : 55,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 55,
          "fromName" : "Join",
          "toId" : 54,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 66,
          "fromName" : "LogicalQueryStage",
          "toId" : 54,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 54,
          "fromName" : "Join",
          "toId" : 53,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 53,
          "fromName" : "Project",
          "toId" : 52,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 67,
          "fromName" : "LogicalQueryStage",
          "toId" : 52,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 52,
          "fromName" : "Join",
          "toId" : 51,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 51,
          "fromName" : "Project",
          "toId" : 50,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 50,
          "fromName" : "Aggregate",
          "toId" : 49,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 23,
          "fromName" : "Aggregate",
          "toId" : 49,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 49,
          "fromName" : "Filter",
          "toId" : 3,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Join",
          "toId" : 2,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "LocalLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "LocalLimit",
          "toId" : 0,
          "toName" : "GlobalLimit",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [i_brand_id#1082 ASC NULLS FIRST, i_class_id#1084 ASC NULLS FIRST, i_category_id#1086 ASC NULLS FIRST], true\n      +- Join Inner, (((i_brand_id#1082 = i_brand_id#1155) AND (i_class_id#1084 = i_class_id#1157)) AND (i_category_id#1086 = i_category_id#1159))\n         :- Filter (isnotnull(sales#731) AND (cast(sales#731 as decimal(32,6)) > cast(scalar-subquery#735 [] as decimal(32,6))))\n         :  :  +- Aggregate [avg((cast(quantity#746 as decimal(10,0)) * list_price#747)) AS average_sales#752]\n         :  :     +- Union false, false\n         :  :        :- Project [ss_quantity#886 AS quantity#746, ss_list_price#888 AS list_price#747]\n         :  :        :  +- Join Inner, (ss_sold_date_sk#899 = d_date_sk#900)\n         :  :        :     :- Project [ss_quantity#886, ss_list_price#888, ss_sold_date_sk#899]\n         :  :        :     :  +- Filter (isnotnull(ss_sold_date_sk#899) AND dynamicpruning#1288 [ss_sold_date_sk#899])\n         :  :        :     :     :  +- Project [d_date_sk#900]\n         :  :        :     :     :     +- Filter ((isnotnull(d_year#906) AND ((d_year#906 >= 1998) AND (d_year#906 <= 2000))) AND isnotnull(d_date_sk#900))\n         :  :        :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#900,d_date_id#901,d_date#902,d_month_seq#903,d_week_seq#904,d_quarter_seq#905,d_year#906,d_dow#907,d_moy#908,d_dom#909,d_qoy#910,d_fy_year#911,d_fy_quarter_seq#912,d_fy_week_seq#913,d_day_name#914,d_quarter_name#915,d_holiday#916,d_weekend#917,d_following_holiday#918,d_first_dom#919,d_last_dom#920,d_same_day_ly#921,d_same_day_lq#922,d_current_day#923,... 4 more fields] parquet\n         :  :        :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#877,ss_item_sk#878,ss_customer_sk#879,ss_cdemo_sk#880,ss_hdemo_sk#881,ss_addr_sk#882,ss_store_sk#883,ss_promo_sk#884,ss_ticket_number#885L,ss_quantity#886,ss_wholesale_cost#887,ss_list_price#888,ss_sales_price#889,ss_ext_discount_amt#890,ss_ext_sales_price#891,ss_ext_wholesale_cost#892,ss_ext_list_price#893,ss_ext_tax#894,ss_coupon_amt#895,ss_net_paid#896,ss_net_paid_inc_tax#897,ss_net_profit#898,ss_sold_date_sk#899] parquet\n         :  :        :     +- Project [d_date_sk#900]\n         :  :        :        +- Filter ((isnotnull(d_year#906) AND ((d_year#906 >= 1998) AND (d_year#906 <= 2000))) AND isnotnull(d_date_sk#900))\n         :  :        :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#900,d_date_id#901,d_date#902,d_month_seq#903,d_week_seq#904,d_quarter_seq#905,d_year#906,d_dow#907,d_moy#908,d_dom#909,d_qoy#910,d_fy_year#911,d_fy_quarter_seq#912,d_fy_week_seq#913,d_day_name#914,d_quarter_name#915,d_holiday#916,d_weekend#917,d_following_holiday#918,d_first_dom#919,d_last_dom#920,d_same_day_ly#921,d_same_day_lq#922,d_current_day#923,... 4 more fields] parquet\n         :  :        :- Project [cs_quantity#945 AS quantity#748, cs_list_price#947 AS list_price#749]\n         :  :        :  +- Join Inner, (cs_sold_date_sk#961 = d_date_sk#962)\n         :  :        :     :- Project [cs_quantity#945, cs_list_price#947, cs_sold_date_sk#961]\n         :  :        :     :  +- Filter (isnotnull(cs_sold_date_sk#961) AND dynamicpruning#1289 [cs_sold_date_sk#961])\n         :  :        :     :     :  +- Project [d_date_sk#962]\n         :  :        :     :     :     +- Filter ((isnotnull(d_year#968) AND ((d_year#968 >= 1998) AND (d_year#968 <= 2000))) AND isnotnull(d_date_sk#962))\n         :  :        :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#962,d_date_id#963,d_date#964,d_month_seq#965,d_week_seq#966,d_quarter_seq#967,d_year#968,d_dow#969,d_moy#970,d_dom#971,d_qoy#972,d_fy_year#973,d_fy_quarter_seq#974,d_fy_week_seq#975,d_day_name#976,d_quarter_name#977,d_holiday#978,d_weekend#979,d_following_holiday#980,d_first_dom#981,d_last_dom#982,d_same_day_ly#983,d_same_day_lq#984,d_current_day#985,... 4 more fields] parquet\n         :  :        :     :     +- Relation spark_catalog.tpcds_100.catalog_sales[cs_sold_time_sk#928,cs_ship_date_sk#929,cs_bill_customer_sk#930,cs_bill_cdemo_sk#931,cs_bill_hdemo_sk#932,cs_bill_addr_sk#933,cs_ship_customer_sk#934,cs_ship_cdemo_sk#935,cs_ship_hdemo_sk#936,cs_ship_addr_sk#937,cs_call_center_sk#938,cs_catalog_page_sk#939,cs_ship_mode_sk#940,cs_warehouse_sk#941,cs_item_sk#942,cs_promo_sk#943,cs_order_number#944L,cs_quantity#945,cs_wholesale_cost#946,cs_list_price#947,cs_sales_price#948,cs_ext_discount_amt#949,cs_ext_sales_price#950,cs_ext_wholesale_cost#951,... 10 more fields] parquet\n         :  :        :     +- Project [d_date_sk#962]\n         :  :        :        +- Filter ((isnotnull(d_year#968) AND ((d_year#968 >= 1998) AND (d_year#968 <= 2000))) AND isnotnull(d_date_sk#962))\n         :  :        :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#962,d_date_id#963,d_date#964,d_month_seq#965,d_week_seq#966,d_quarter_seq#967,d_year#968,d_dow#969,d_moy#970,d_dom#971,d_qoy#972,d_fy_year#973,d_fy_quarter_seq#974,d_fy_week_seq#975,d_day_name#976,d_quarter_name#977,d_holiday#978,d_weekend#979,d_following_holiday#980,d_first_dom#981,d_last_dom#982,d_same_day_ly#983,d_same_day_lq#984,d_current_day#985,... 4 more fields] parquet\n         :  :        +- Project [ws_quantity#1007 AS quantity#750, ws_list_price#1009 AS list_price#751]\n         :  :           +- Join Inner, (ws_sold_date_sk#1023 = d_date_sk#1024)\n         :  :              :- Project [ws_quantity#1007, ws_list_price#1009, ws_sold_date_sk#1023]\n         :  :              :  +- Filter (isnotnull(ws_sold_date_sk#1023) AND dynamicpruning#1290 [ws_sold_date_sk#1023])\n         :  :              :     :  +- Project [d_date_sk#1024]\n         :  :              :     :     +- Filter ((isnotnull(d_year#1030) AND ((d_year#1030 >= 1998) AND (d_year#1030 <= 2000))) AND isnotnull(d_date_sk#1024))\n         :  :              :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#1024,d_date_id#1025,d_date#1026,d_month_seq#1027,d_week_seq#1028,d_quarter_seq#1029,d_year#1030,d_dow#1031,d_moy#1032,d_dom#1033,d_qoy#1034,d_fy_year#1035,d_fy_quarter_seq#1036,d_fy_week_seq#1037,d_day_name#1038,d_quarter_name#1039,d_holiday#1040,d_weekend#1041,d_following_holiday#1042,d_first_dom#1043,d_last_dom#1044,d_same_day_ly#1045,d_same_day_lq#1046,d_current_day#1047,... 4 more fields] parquet\n         :  :              :     +- Relation spark_catalog.tpcds_100.web_sales[ws_sold_time_sk#990,ws_ship_date_sk#991,ws_item_sk#992,ws_bill_customer_sk#993,ws_bill_cdemo_sk#994,ws_bill_hdemo_sk#995,ws_bill_addr_sk#996,ws_ship_customer_sk#997,ws_ship_cdemo_sk#998,ws_ship_hdemo_sk#999,ws_ship_addr_sk#1000,ws_web_page_sk#1001,ws_web_site_sk#1002,ws_ship_mode_sk#1003,ws_warehouse_sk#1004,ws_promo_sk#1005,ws_order_number#1006L,ws_quantity#1007,ws_wholesale_cost#1008,ws_list_price#1009,ws_sales_price#1010,ws_ext_discount_amt#1011,ws_ext_sales_price#1012,ws_ext_wholesale_cost#1013,... 10 more fields] parquet\n         :  :              +- Project [d_date_sk#1024]\n         :  :                 +- Filter ((isnotnull(d_year#1030) AND ((d_year#1030 >= 1998) AND (d_year#1030 <= 2000))) AND isnotnull(d_date_sk#1024))\n         :  :                    +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#1024,d_date_id#1025,d_date#1026,d_month_seq#1027,d_week_seq#1028,d_quarter_seq#1029,d_year#1030,d_dow#1031,d_moy#1032,d_dom#1033,d_qoy#1034,d_fy_year#1035,d_fy_quarter_seq#1036,d_fy_week_seq#1037,d_day_name#1038,d_quarter_name#1039,d_holiday#1040,d_weekend#1041,d_following_holiday#1042,d_first_dom#1043,d_last_dom#1044,d_same_day_ly#1045,d_same_day_lq#1046,d_current_day#1047,... 4 more fields] parquet\n         :  +- Aggregate [i_brand_id#1082, i_class_id#1084, i_category_id#1086], [store AS channel#730, i_brand_id#1082, i_class_id#1084, i_category_id#1086, sum((cast(ss_quantity#1061 as decimal(10,0)) * ss_list_price#1063)) AS sales#731, count(1) AS number_sales#732L]\n         :     +- Project [ss_quantity#1061, ss_list_price#1063, i_brand_id#1082, i_class_id#1084, i_category_id#1086]\n         :        +- Join Inner, (ss_item_sk#1053 = i_item_sk#1075)\n         :           :- Project [ss_item_sk#1053, ss_quantity#1061, ss_list_price#1063]\n         :           :  +- Join Inner, (ss_sold_date_sk#1074 = d_date_sk#1097)\n         :           :     :- Join LeftSemi, (ss_item_sk#1053 = ss_item_sk#745)\n         :           :     :  :- Project [ss_item_sk#1053, ss_quantity#1061, ss_list_price#1063, ss_sold_date_sk#1074]\n         :           :     :  :  +- Filter ((isnotnull(ss_item_sk#1053) AND isnotnull(ss_sold_date_sk#1074)) AND dynamicpruning#1303 [ss_sold_date_sk#1074])\n         :           :     :  :     :  +- Project [d_date_sk#1097]\n         :           :     :  :     :     +- Filter ((isnotnull(d_week_seq#1101) AND (d_week_seq#1101 = scalar-subquery#734 [])) AND isnotnull(d_date_sk#1097))\n         :           :     :  :     :        :  +- Project [d_week_seq#1213]\n         :           :     :  :     :        :     +- Filter (((isnotnull(d_year#1215) AND isnotnull(d_moy#1217)) AND isnotnull(d_dom#1218)) AND (((d_year#1215 = 1999) AND (d_moy#1217 = 12)) AND (d_dom#1218 = 16)))\n         :           :     :  :     :        :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#1209,d_date_id#1210,d_date#1211,d_month_seq#1212,d_week_seq#1213,d_quarter_seq#1214,d_year#1215,d_dow#1216,d_moy#1217,d_dom#1218,d_qoy#1219,d_fy_year#1220,d_fy_quarter_seq#1221,d_fy_week_seq#1222,d_day_name#1223,d_quarter_name#1224,d_holiday#1225,d_weekend#1226,d_following_holiday#1227,d_first_dom#1228,d_last_dom#1229,d_same_day_ly#1230,d_same_day_lq#1231,d_current_day#1232,... 4 more fields] parquet\n         :           :     :  :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#1097,d_date_id#1098,d_date#1099,d_month_seq#1100,d_week_seq#1101,d_quarter_seq#1102,d_year#1103,d_dow#1104,d_moy#1105,d_dom#1106,d_qoy#1107,d_fy_year#1108,d_fy_quarter_seq#1109,d_fy_week_seq#1110,d_day_name#1111,d_quarter_name#1112,d_holiday#1113,d_weekend#1114,d_following_holiday#1115,d_first_dom#1116,d_last_dom#1117,d_same_day_ly#1118,d_same_day_lq#1119,d_current_day#1120,... 4 more fields] parquet\n         :           :     :  :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#1052,ss_item_sk#1053,ss_customer_sk#1054,ss_cdemo_sk#1055,ss_hdemo_sk#1056,ss_addr_sk#1057,ss_store_sk#1058,ss_promo_sk#1059,ss_ticket_number#1060L,ss_quantity#1061,ss_wholesale_cost#1062,ss_list_price#1063,ss_sales_price#1064,ss_ext_discount_amt#1065,ss_ext_sales_price#1066,ss_ext_wholesale_cost#1067,ss_ext_list_price#1068,ss_ext_tax#1069,ss_coupon_amt#1070,ss_net_paid#1071,ss_net_paid_inc_tax#1072,ss_net_profit#1073,ss_sold_date_sk#1074] parquet\n         :           :     :  +- LogicalQueryStage Project [i_item_sk#25 AS ss_item_sk#745], BroadcastQueryStage 89\n         :           :     +- LogicalQueryStage Project [d_date_sk#1097], BroadcastQueryStage 9\n         :           +- LogicalQueryStage Join LeftSemi, (i_item_sk#1075 = ss_item_sk#745), BroadcastQueryStage 96\n         +- Filter (isnotnull(sales#737) AND (cast(sales#737 as decimal(32,6)) > cast(scalar-subquery#741 [] as decimal(32,6))))\n            :  +- Aggregate [avg((cast(quantity#746 as decimal(10,0)) * list_price#747)) AS average_sales#752]\n            :     +- Union false, false\n            :        :- Project [ss_quantity#886 AS quantity#746, ss_list_price#888 AS list_price#747]\n            :        :  +- Join Inner, (ss_sold_date_sk#899 = d_date_sk#900)\n            :        :     :- Project [ss_quantity#886, ss_list_price#888, ss_sold_date_sk#899]\n            :        :     :  +- Filter (isnotnull(ss_sold_date_sk#899) AND dynamicpruning#1288 [ss_sold_date_sk#899])\n            :        :     :     :  +- Project [d_date_sk#900]\n            :        :     :     :     +- Filter ((isnotnull(d_year#906) AND ((d_year#906 >= 1998) AND (d_year#906 <= 2000))) AND isnotnull(d_date_sk#900))\n            :        :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#900,d_date_id#901,d_date#902,d_month_seq#903,d_week_seq#904,d_quarter_seq#905,d_year#906,d_dow#907,d_moy#908,d_dom#909,d_qoy#910,d_fy_year#911,d_fy_quarter_seq#912,d_fy_week_seq#913,d_day_name#914,d_quarter_name#915,d_holiday#916,d_weekend#917,d_following_holiday#918,d_first_dom#919,d_last_dom#920,d_same_day_ly#921,d_same_day_lq#922,d_current_day#923,... 4 more fields] parquet\n            :        :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#877,ss_item_sk#878,ss_customer_sk#879,ss_cdemo_sk#880,ss_hdemo_sk#881,ss_addr_sk#882,ss_store_sk#883,ss_promo_sk#884,ss_ticket_number#885L,ss_quantity#886,ss_wholesale_cost#887,ss_list_price#888,ss_sales_price#889,ss_ext_discount_amt#890,ss_ext_sales_price#891,ss_ext_wholesale_cost#892,ss_ext_list_price#893,ss_ext_tax#894,ss_coupon_amt#895,ss_net_paid#896,ss_net_paid_inc_tax#897,ss_net_profit#898,ss_sold_date_sk#899] parquet\n            :        :     +- Project [d_date_sk#900]\n            :        :        +- Filter ((isnotnull(d_year#906) AND ((d_year#906 >= 1998) AND (d_year#906 <= 2000))) AND isnotnull(d_date_sk#900))\n            :        :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#900,d_date_id#901,d_date#902,d_month_seq#903,d_week_seq#904,d_quarter_seq#905,d_year#906,d_dow#907,d_moy#908,d_dom#909,d_qoy#910,d_fy_year#911,d_fy_quarter_seq#912,d_fy_week_seq#913,d_day_name#914,d_quarter_name#915,d_holiday#916,d_weekend#917,d_following_holiday#918,d_first_dom#919,d_last_dom#920,d_same_day_ly#921,d_same_day_lq#922,d_current_day#923,... 4 more fields] parquet\n            :        :- Project [cs_quantity#945 AS quantity#748, cs_list_price#947 AS list_price#749]\n            :        :  +- Join Inner, (cs_sold_date_sk#961 = d_date_sk#962)\n            :        :     :- Project [cs_quantity#945, cs_list_price#947, cs_sold_date_sk#961]\n            :        :     :  +- Filter (isnotnull(cs_sold_date_sk#961) AND dynamicpruning#1289 [cs_sold_date_sk#961])\n            :        :     :     :  +- Project [d_date_sk#962]\n            :        :     :     :     +- Filter ((isnotnull(d_year#968) AND ((d_year#968 >= 1998) AND (d_year#968 <= 2000))) AND isnotnull(d_date_sk#962))\n            :        :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#962,d_date_id#963,d_date#964,d_month_seq#965,d_week_seq#966,d_quarter_seq#967,d_year#968,d_dow#969,d_moy#970,d_dom#971,d_qoy#972,d_fy_year#973,d_fy_quarter_seq#974,d_fy_week_seq#975,d_day_name#976,d_quarter_name#977,d_holiday#978,d_weekend#979,d_following_holiday#980,d_first_dom#981,d_last_dom#982,d_same_day_ly#983,d_same_day_lq#984,d_current_day#985,... 4 more fields] parquet\n            :        :     :     +- Relation spark_catalog.tpcds_100.catalog_sales[cs_sold_time_sk#928,cs_ship_date_sk#929,cs_bill_customer_sk#930,cs_bill_cdemo_sk#931,cs_bill_hdemo_sk#932,cs_bill_addr_sk#933,cs_ship_customer_sk#934,cs_ship_cdemo_sk#935,cs_ship_hdemo_sk#936,cs_ship_addr_sk#937,cs_call_center_sk#938,cs_catalog_page_sk#939,cs_ship_mode_sk#940,cs_warehouse_sk#941,cs_item_sk#942,cs_promo_sk#943,cs_order_number#944L,cs_quantity#945,cs_wholesale_cost#946,cs_list_price#947,cs_sales_price#948,cs_ext_discount_amt#949,cs_ext_sales_price#950,cs_ext_wholesale_cost#951,... 10 more fields] parquet\n            :        :     +- Project [d_date_sk#962]\n            :        :        +- Filter ((isnotnull(d_year#968) AND ((d_year#968 >= 1998) AND (d_year#968 <= 2000))) AND isnotnull(d_date_sk#962))\n            :        :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#962,d_date_id#963,d_date#964,d_month_seq#965,d_week_seq#966,d_quarter_seq#967,d_year#968,d_dow#969,d_moy#970,d_dom#971,d_qoy#972,d_fy_year#973,d_fy_quarter_seq#974,d_fy_week_seq#975,d_day_name#976,d_quarter_name#977,d_holiday#978,d_weekend#979,d_following_holiday#980,d_first_dom#981,d_last_dom#982,d_same_day_ly#983,d_same_day_lq#984,d_current_day#985,... 4 more fields] parquet\n            :        +- Project [ws_quantity#1007 AS quantity#750, ws_list_price#1009 AS list_price#751]\n            :           +- Join Inner, (ws_sold_date_sk#1023 = d_date_sk#1024)\n            :              :- Project [ws_quantity#1007, ws_list_price#1009, ws_sold_date_sk#1023]\n            :              :  +- Filter (isnotnull(ws_sold_date_sk#1023) AND dynamicpruning#1290 [ws_sold_date_sk#1023])\n            :              :     :  +- Project [d_date_sk#1024]\n            :              :     :     +- Filter ((isnotnull(d_year#1030) AND ((d_year#1030 >= 1998) AND (d_year#1030 <= 2000))) AND isnotnull(d_date_sk#1024))\n            :              :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#1024,d_date_id#1025,d_date#1026,d_month_seq#1027,d_week_seq#1028,d_quarter_seq#1029,d_year#1030,d_dow#1031,d_moy#1032,d_dom#1033,d_qoy#1034,d_fy_year#1035,d_fy_quarter_seq#1036,d_fy_week_seq#1037,d_day_name#1038,d_quarter_name#1039,d_holiday#1040,d_weekend#1041,d_following_holiday#1042,d_first_dom#1043,d_last_dom#1044,d_same_day_ly#1045,d_same_day_lq#1046,d_current_day#1047,... 4 more fields] parquet\n            :              :     +- Relation spark_catalog.tpcds_100.web_sales[ws_sold_time_sk#990,ws_ship_date_sk#991,ws_item_sk#992,ws_bill_customer_sk#993,ws_bill_cdemo_sk#994,ws_bill_hdemo_sk#995,ws_bill_addr_sk#996,ws_ship_customer_sk#997,ws_ship_cdemo_sk#998,ws_ship_hdemo_sk#999,ws_ship_addr_sk#1000,ws_web_page_sk#1001,ws_web_site_sk#1002,ws_ship_mode_sk#1003,ws_warehouse_sk#1004,ws_promo_sk#1005,ws_order_number#1006L,ws_quantity#1007,ws_wholesale_cost#1008,ws_list_price#1009,ws_sales_price#1010,ws_ext_discount_amt#1011,ws_ext_sales_price#1012,ws_ext_wholesale_cost#1013,... 10 more fields] parquet\n            :              +- Project [d_date_sk#1024]\n            :                 +- Filter ((isnotnull(d_year#1030) AND ((d_year#1030 >= 1998) AND (d_year#1030 <= 2000))) AND isnotnull(d_date_sk#1024))\n            :                    +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#1024,d_date_id#1025,d_date#1026,d_month_seq#1027,d_week_seq#1028,d_quarter_seq#1029,d_year#1030,d_dow#1031,d_moy#1032,d_dom#1033,d_qoy#1034,d_fy_year#1035,d_fy_quarter_seq#1036,d_fy_week_seq#1037,d_day_name#1038,d_quarter_name#1039,d_holiday#1040,d_weekend#1041,d_following_holiday#1042,d_first_dom#1043,d_last_dom#1044,d_same_day_ly#1045,d_same_day_lq#1046,d_current_day#1047,... 4 more fields] parquet\n            +- Aggregate [i_brand_id#1155, i_class_id#1157, i_category_id#1159], [store AS channel#736, i_brand_id#1155, i_class_id#1157, i_category_id#1159, sum((cast(ss_quantity#1134 as decimal(10,0)) * ss_list_price#1136)) AS sales#737, count(1) AS number_sales#738L]\n               +- Project [ss_quantity#1134, ss_list_price#1136, i_brand_id#1155, i_class_id#1157, i_category_id#1159]\n                  +- Join Inner, (ss_item_sk#1126 = i_item_sk#1148)\n                     :- Project [ss_item_sk#1126, ss_quantity#1134, ss_list_price#1136]\n                     :  +- Join Inner, (ss_sold_date_sk#1147 = d_date_sk#1170)\n                     :     :- Join LeftSemi, (ss_item_sk#1126 = ss_item_sk#745)\n                     :     :  :- Project [ss_item_sk#1126, ss_quantity#1134, ss_list_price#1136, ss_sold_date_sk#1147]\n                     :     :  :  +- Filter ((isnotnull(ss_item_sk#1126) AND isnotnull(ss_sold_date_sk#1147)) AND dynamicpruning#1310 [ss_sold_date_sk#1147])\n                     :     :  :     :  +- Project [d_date_sk#1170]\n                     :     :  :     :     +- Filter ((isnotnull(d_week_seq#1174) AND (d_week_seq#1174 = scalar-subquery#740 [])) AND isnotnull(d_date_sk#1170))\n                     :     :  :     :        :  +- Project [d_week_seq#1241]\n                     :     :  :     :        :     +- Filter (((isnotnull(d_year#1243) AND isnotnull(d_moy#1245)) AND isnotnull(d_dom#1246)) AND (((d_year#1243 = 1998) AND (d_moy#1245 = 12)) AND (d_dom#1246 = 16)))\n                     :     :  :     :        :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#1237,d_date_id#1238,d_date#1239,d_month_seq#1240,d_week_seq#1241,d_quarter_seq#1242,d_year#1243,d_dow#1244,d_moy#1245,d_dom#1246,d_qoy#1247,d_fy_year#1248,d_fy_quarter_seq#1249,d_fy_week_seq#1250,d_day_name#1251,d_quarter_name#1252,d_holiday#1253,d_weekend#1254,d_following_holiday#1255,d_first_dom#1256,d_last_dom#1257,d_same_day_ly#1258,d_same_day_lq#1259,d_current_day#1260,... 4 more fields] parquet\n                     :     :  :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#1170,d_date_id#1171,d_date#1172,d_month_seq#1173,d_week_seq#1174,d_quarter_seq#1175,d_year#1176,d_dow#1177,d_moy#1178,d_dom#1179,d_qoy#1180,d_fy_year#1181,d_fy_quarter_seq#1182,d_fy_week_seq#1183,d_day_name#1184,d_quarter_name#1185,d_holiday#1186,d_weekend#1187,d_following_holiday#1188,d_first_dom#1189,d_last_dom#1190,d_same_day_ly#1191,d_same_day_lq#1192,d_current_day#1193,... 4 more fields] parquet\n                     :     :  :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#1125,ss_item_sk#1126,ss_customer_sk#1127,ss_cdemo_sk#1128,ss_hdemo_sk#1129,ss_addr_sk#1130,ss_store_sk#1131,ss_promo_sk#1132,ss_ticket_number#1133L,ss_quantity#1134,ss_wholesale_cost#1135,ss_list_price#1136,ss_sales_price#1137,ss_ext_discount_amt#1138,ss_ext_sales_price#1139,ss_ext_wholesale_cost#1140,ss_ext_list_price#1141,ss_ext_tax#1142,ss_coupon_amt#1143,ss_net_paid#1144,ss_net_paid_inc_tax#1145,ss_net_profit#1146,ss_sold_date_sk#1147] parquet\n                     :     :  +- LogicalQueryStage Project [i_item_sk#25 AS ss_item_sk#745], BroadcastQueryStage 93\n                     :     +- LogicalQueryStage Project [d_date_sk#1170], BroadcastQueryStage 34\n                     +- LogicalQueryStage Join LeftSemi, (i_item_sk#1148 = ss_item_sk#745), BroadcastQueryStage 98\n"
      },
      "IM" : {
        "inputSizeInBytes" : 83645647744,
        "inputRowCount" : 550849430
      },
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 5,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "StartTimeInMs" : 1702226697325,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 14173,
        "IOBytes" : {
          "Total" : 1515839893,
          "Details" : {
            "IR" : 1514629711,
            "IW" : 0,
            "SR" : 605091,
            "SW" : 605091
          }
        }
      }
    },
    "14" : {
      "LQP" : {
        "operators" : {
          "45" : {
            "sign" : 824386657,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 3878455336,
            "rowCount" : 138516262,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cs_sold_date_sk#961 = d_date_sk#962) "
          },
          "34" : {
            "sign" : -1809172647,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 24,
            "rowCount" : 1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [avg((cast(quantity#746 as decimal(10,0)) * list_price#747)) AS average_sales#752] "
          },
          "67" : {
            "sign" : -303911461,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 7701269884,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#1126, ss_quantity#1134, ss_list_price#1136, ss_sold_date_sk#1147] "
          },
          "12" : {
            "sign" : 571393713,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(ss_item_sk#1053) AND isnotnull(ss_sold_date_sk#1074)) AND dynamicpruning#1303 [ss_sold_date_sk#1074]) "
          },
          "66" : {
            "sign" : 570569619,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 7701269884,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (ss_item_sk#1126 = ss_item_sk#745) "
          },
          "51" : {
            "sign" : -169490734,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#962, d_date_id#963, d_date#964, d_month_seq#965, d_week_seq#966, d_quarter_seq#967, d_year#968, d_dow#969, d_moy#970, d_dom#971, d_qoy#972, d_fy_year#973, d_fy_quarter_seq#974, d_fy_week_seq#975, d_day_name#976, d_quarter_name#977, d_holiday#978, d_weekend#979, d_following_holiday#980, d_first_dom#981, d_last_dom#982, d_same_day_ly#983, d_same_day_lq#984, d_current_day#985, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "84" : {
            "sign" : 567423764,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 27547196328,
            "rowCount" : 2295599694,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_item_sk#25 AS ss_item_sk#745] "
          },
          "8" : {
            "sign" : 1686036885,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 46207619304,
            "rowCount" : 1925317471,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#1053, ss_quantity#1061, ss_list_price#1063] "
          },
          "73" : {
            "sign" : -79282860,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 24,
            "rowCount" : 2,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_week_seq#1241] "
          },
          "78" : {
            "sign" : -2067140918,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 34078720,
            "rowCount" : 11334,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Join LeftSemi, (((brand_id#742 <=> i_brand_id#834) AND (class_id#743 <=> i_class_id#836)) AND (category_id#744 <=> i_category_id#838)), BroadcastQueryStage 86 "
          },
          "19" : {
            "sign" : -1755539215,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#1209, d_date_id#1210, d_date#1211, d_month_seq#1212, d_week_seq#1213, d_quarter_seq#1214, d_year#1215, d_dow#1216, d_moy#1217, d_dom#1218, d_qoy#1219, d_fy_year#1220, d_fy_quarter_seq#1221, d_fy_week_seq#1222, d_day_name#1223, d_quarter_name#1224, d_holiday#1225, d_weekend#1226, d_following_holiday#1227, d_first_dom#1228, d_last_dom#1229, d_same_day_ly#1230, d_same_day_lq#1231, d_current_day#1232, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "23" : {
            "sign" : -1756391561,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 86282466,
            "rowCount" : 202541,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(i_brand_id#32) AND isnotnull(i_class_id#34)) AND isnotnull(i_category_id#36)) "
          },
          "62" : {
            "sign" : 825056852,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 9192253472,
            "rowCount" : 287257921,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_quantity#1134, ss_list_price#1136, i_brand_id#1155, i_class_id#1157, i_category_id#1159] "
          },
          "4" : {
            "sign" : -1830970665,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 10408960,
            "rowCount" : 136960,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(sales#731) AND (cast(sales#731 as decimal(32,6)) > cast(scalar-subquery#735 [] as decimal(32,6)))) "
          },
          "77" : {
            "sign" : -1382503963,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 82641588984,
            "rowCount" : 2295599694,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (((i_brand_id#32 = brand_id#742) AND (i_class_id#34 = class_id#743)) AND (i_category_id#36 = category_id#744)) "
          },
          "40" : {
            "sign" : -1972788865,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#877, ss_item_sk#878, ss_customer_sk#879, ss_cdemo_sk#880, ss_hdemo_sk#881, ss_addr_sk#882, ss_store_sk#883, ss_promo_sk#884, ss_ticket_number#885L, ss_quantity#886, ss_wholesale_cost#887, ss_list_price#888, ss_sales_price#889, ss_ext_discount_amt#890, ss_ext_sales_price#891, ss_ext_wholesale_cost#892, ss_ext_list_price#893, ss_ext_tax#894, ss_coupon_amt#895, ss_net_paid#896, ss_net_paid_inc_tax#897, ss_net_profit#898, ss_sold_date_sk#899], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "15" : {
            "sign" : 1866012666,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(d_week_seq#1101) AND (d_week_seq#1101 = scalar-subquery#734 [])) AND isnotnull(d_date_sk#1097)) "
          },
          "11" : {
            "sign" : 1222696026,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 7701269884,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#1053, ss_quantity#1061, ss_list_price#1063, ss_sold_date_sk#1074] "
          },
          "9" : {
            "sign" : -730484834,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 61610159072,
            "rowCount" : 1925317471,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#1074 = d_date_sk#1097) "
          },
          "44" : {
            "sign" : 825651901,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 2770325240,
            "rowCount" : 138516262,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_quantity#945 AS quantity#748, cs_list_price#947 AS list_price#749] "
          },
          "33" : {
            "sign" : -2067140980,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 34078720,
            "rowCount" : 11334,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Join LeftSemi, (((brand_id#742 <=> i_brand_id#834) AND (class_id#743 <=> i_class_id#836)) AND (category_id#744 <=> i_category_id#838)), BroadcastQueryStage 84 "
          },
          "22" : {
            "sign" : 2089743597,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 4860984,
            "rowCount" : 202541,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_item_sk#25, i_brand_id#32, i_class_id#34, i_category_id#36] "
          },
          "56" : {
            "sign" : 1698660872,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 14972593792,
            "rowCount" : 71983624,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ws_sold_time_sk#990, ws_ship_date_sk#991, ws_item_sk#992, ws_bill_customer_sk#993, ws_bill_cdemo_sk#994, ws_bill_hdemo_sk#995, ws_bill_addr_sk#996, ws_ship_customer_sk#997, ws_ship_cdemo_sk#998, ws_ship_hdemo_sk#999, ws_ship_addr_sk#1000, ws_web_page_sk#1001, ws_web_site_sk#1002, ws_ship_mode_sk#1003, ws_warehouse_sk#1004, ws_promo_sk#1005, ws_order_number#1006L, ws_quantity#1007, ws_wholesale_cost#1008, ws_list_price#1009, ws_sales_price#1010, ws_ext_discount_amt#1011, ws_ext_sales_price#1012, ws_ext_wholesale_cost#1013, ... 10 more fields], `spark_catalog`.`tpcds_100`.`web_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "55" : {
            "sign" : -1902449141,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 14972593792,
            "rowCount" : 71983624,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(ws_sold_date_sk#1023) AND dynamicpruning#1290 [ws_sold_date_sk#1023]) "
          },
          "26" : {
            "sign" : -21562714,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1048632,
            "rowCount" : 7,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#1097], BroadcastQueryStage 9 "
          },
          "50" : {
            "sign" : -1695423935,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 353748,
            "rowCount" : 1438,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(d_year#968) AND ((d_year#968 >= 1998) AND (d_year#968 <= 2000))) AND isnotnull(d_date_sk#962)) "
          },
          "37" : {
            "sign" : -1804794945,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 7435136380,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#899 = d_date_sk#900) "
          },
          "68" : {
            "sign" : -604473204,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(ss_item_sk#1126) AND isnotnull(ss_sold_date_sk#1147)) AND dynamicpruning#1310 [ss_sold_date_sk#1147]) "
          },
          "61" : {
            "sign" : -1950482779,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 10408960,
            "rowCount" : 136960,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [i_brand_id#1155, i_class_id#1157, i_category_id#1159], [store AS channel#736, i_brand_id#1155, i_class_id#1157, i_category_id#1159, sum((cast(ss_quantity#1134 as decimal(10,0)) * ss_list_price#1136)) AS sales#737, count(1) AS number_sales#738L] "
          },
          "13" : {
            "sign" : 913239237,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#1052, ss_item_sk#1053, ss_customer_sk#1054, ss_cdemo_sk#1055, ss_hdemo_sk#1056, ss_addr_sk#1057, ss_store_sk#1058, ss_promo_sk#1059, ss_ticket_number#1060L, ss_quantity#1061, ss_wholesale_cost#1062, ss_list_price#1063, ss_sales_price#1064, ss_ext_discount_amt#1065, ss_ext_sales_price#1066, ss_ext_wholesale_cost#1067, ss_ext_list_price#1068, ss_ext_tax#1069, ss_coupon_amt#1070, ss_net_paid#1071, ss_net_paid_inc_tax#1072, ss_net_profit#1073, ss_sold_date_sk#1074], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "46" : {
            "sign" : 1942236716,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 3438552408,
            "rowCount" : 143273017,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_quantity#945, cs_list_price#947, cs_sold_date_sk#961] "
          },
          "24" : {
            "sign" : 2096275601,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 86904000,
            "rowCount" : 204000,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [i_item_sk#25, i_item_id#26, i_rec_start_date#27, i_rec_end_date#28, i_item_desc#29, i_current_price#30, i_wholesale_cost#31, i_brand_id#32, i_brand#33, i_class_id#34, i_class#35, i_category_id#36, i_category#37, i_manufact_id#38, i_manufact#39, i_size#40, i_formulation#41, i_color#42, i_units#43, i_container#44, i_manager_id#45, i_product_name#46], `spark_catalog`.`tpcds_100`.`item`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "83" : {
            "sign" : -1752719423,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 86904000,
            "rowCount" : 204000,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [i_item_sk#1148, i_item_id#1149, i_rec_start_date#1150, i_rec_end_date#1151, i_item_desc#1152, i_current_price#1153, i_wholesale_cost#1154, i_brand_id#1155, i_brand#1156, i_class_id#1157, i_class#1158, i_category_id#1159, i_category#1160, i_manufact_id#1161, i_manufact#1162, i_size#1163, i_formulation#1164, i_color#1165, i_units#1166, i_container#1167, i_manager_id#1168, i_product_name#1169], `spark_catalog`.`tpcds_100`.`item`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "35" : {
            "sign" : -1298322270,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Union",
            "sizeInBytes" : 9471049040,
            "rowCount" : 473552452,
            "isRuntime" : false,
            "predicate" : " (unknown) Union Arguments: false, false "
          },
          "16" : {
            "sign" : 682718368,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#1097, d_date_id#1098, d_date#1099, d_month_seq#1100, d_week_seq#1101, d_quarter_seq#1102, d_year#1103, d_dow#1104, d_moy#1105, d_dom#1106, d_qoy#1107, d_fy_year#1108, d_fy_quarter_seq#1109, d_fy_week_seq#1110, d_day_name#1111, d_quarter_name#1112, d_holiday#1113, d_weekend#1114, d_following_holiday#1115, d_first_dom#1116, d_last_dom#1117, d_same_day_ly#1118, d_same_day_lq#1119, d_current_day#1120, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "79" : {
            "sign" : -1902204624,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1048632,
            "rowCount" : 7,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#1170], BroadcastQueryStage 34 "
          },
          "5" : {
            "sign" : -1327112129,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 10408960,
            "rowCount" : 136960,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [i_brand_id#1082, i_class_id#1084, i_category_id#1086], [store AS channel#730, i_brand_id#1082, i_class_id#1084, i_category_id#1086, sum((cast(ss_quantity#1061 as decimal(10,0)) * ss_list_price#1063)) AS sales#731, count(1) AS number_sales#732L] "
          },
          "72" : {
            "sign" : 683629544,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#1170, d_date_id#1171, d_date#1172, d_month_seq#1173, d_week_seq#1174, d_quarter_seq#1175, d_year#1176, d_dow#1177, d_moy#1178, d_dom#1179, d_qoy#1180, d_fy_year#1181, d_fy_quarter_seq#1182, d_fy_week_seq#1183, d_day_name#1184, d_quarter_name#1185, d_holiday#1186, d_weekend#1187, d_following_holiday#1188, d_first_dom#1189, d_last_dom#1190, d_same_day_ly#1191, d_same_day_lq#1192, d_current_day#1193, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "10" : {
            "sign" : -456147553,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 7701269884,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (ss_item_sk#1053 = ss_item_sk#745) "
          },
          "59" : {
            "sign" : -502763688,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#1024, d_date_id#1025, d_date#1026, d_month_seq#1027, d_week_seq#1028, d_quarter_seq#1029, d_year#1030, d_dow#1031, d_moy#1032, d_dom#1033, d_qoy#1034, d_fy_year#1035, d_fy_quarter_seq#1036, d_fy_week_seq#1037, d_day_name#1038, d_quarter_name#1039, d_holiday#1040, d_weekend#1041, d_following_holiday#1042, d_first_dom#1043, d_last_dom#1044, d_same_day_ly#1045, d_same_day_lq#1046, d_current_day#1047, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "48" : {
            "sign" : -70077436,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 29800787536,
            "rowCount" : 143273017,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [cs_sold_time_sk#928, cs_ship_date_sk#929, cs_bill_customer_sk#930, cs_bill_cdemo_sk#931, cs_bill_hdemo_sk#932, cs_bill_addr_sk#933, cs_ship_customer_sk#934, cs_ship_cdemo_sk#935, cs_ship_hdemo_sk#936, cs_ship_addr_sk#937, cs_call_center_sk#938, cs_catalog_page_sk#939, cs_ship_mode_sk#940, cs_warehouse_sk#941, cs_item_sk#942, cs_promo_sk#943, cs_order_number#944L, cs_quantity#945, cs_wholesale_cost#946, cs_list_price#947, cs_sales_price#948, cs_ext_discount_amt#949, cs_ext_sales_price#950, cs_ext_wholesale_cost#951, ... 10 more fields], `spark_catalog`.`tpcds_100`.`catalog_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "21" : {
            "sign" : -1382504087,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 82641588984,
            "rowCount" : 2295599694,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (((i_brand_id#32 = brand_id#742) AND (i_class_id#34 = class_id#743)) AND (i_category_id#36 = category_id#744)) "
          },
          "76" : {
            "sign" : 567423702,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 27547196328,
            "rowCount" : 2295599694,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_item_sk#25 AS ss_item_sk#745] "
          },
          "54" : {
            "sign" : 49678577,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 1727606976,
            "rowCount" : 71983624,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_quantity#1007, ws_list_price#1009, ws_sold_date_sk#1023] "
          },
          "43" : {
            "sign" : -820074406,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#900, d_date_id#901, d_date#902, d_month_seq#903, d_week_seq#904, d_quarter_seq#905, d_year#906, d_dow#907, d_moy#908, d_dom#909, d_qoy#910, d_fy_year#911, d_fy_quarter_seq#912, d_fy_week_seq#913, d_day_name#914, d_quarter_name#915, d_holiday#916, d_weekend#917, d_following_holiday#918, d_first_dom#919, d_last_dom#920, d_same_day_ly#921, d_same_day_lq#922, d_current_day#923, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "65" : {
            "sign" : -1425627631,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 61610159072,
            "rowCount" : 1925317471,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#1147 = d_date_sk#1170) "
          },
          "71" : {
            "sign" : -1689547051,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(d_week_seq#1174) AND (d_week_seq#1174 = scalar-subquery#740 [])) AND isnotnull(d_date_sk#1170)) "
          },
          "57" : {
            "sign" : -1100969675,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 17256,
            "rowCount" : 1438,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#1024] "
          },
          "32" : {
            "sign" : -1382504025,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 82641588984,
            "rowCount" : 2295599694,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (((i_brand_id#32 = brand_id#742) AND (i_class_id#34 = class_id#743)) AND (i_category_id#36 = category_id#744)) "
          },
          "80" : {
            "sign" : 378777021,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 4860984,
            "rowCount" : 202541,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (i_item_sk#1148 = ss_item_sk#745) "
          },
          "82" : {
            "sign" : -1448453368,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 86282466,
            "rowCount" : 202541,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(i_item_sk#1148) AND isnotnull(i_brand_id#1155)) AND isnotnull(i_class_id#1157)) AND isnotnull(i_category_id#1159)) "
          },
          "49" : {
            "sign" : 406087876,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 17256,
            "rowCount" : 1438,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#962] "
          },
          "6" : {
            "sign" : 1576511504,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 9192253472,
            "rowCount" : 287257921,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_quantity#1061, ss_list_price#1063, i_brand_id#1082, i_class_id#1084, i_category_id#1086] "
          },
          "36" : {
            "sign" : 869525063,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 5310811700,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_quantity#886 AS quantity#746, ss_list_price#888 AS list_price#747] "
          },
          "1" : {
            "sign" : 1958916210,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
            "sizeInBytes" : 19722240,
            "rowCount" : 136960,
            "isRuntime" : false,
            "predicate" : " (unknown) LocalLimit Arguments: 100 "
          },
          "39" : {
            "sign" : 1377797290,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(ss_sold_date_sk#899) AND dynamicpruning#1288 [ss_sold_date_sk#899]) "
          },
          "17" : {
            "sign" : -2061501032,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 36,
            "rowCount" : 3,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_week_seq#1213] "
          },
          "25" : {
            "sign" : -2067141042,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 34078720,
            "rowCount" : 11334,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Join LeftSemi, (((brand_id#742 <=> i_brand_id#834) AND (class_id#743 <=> i_class_id#836)) AND (category_id#744 <=> i_category_id#838)), BroadcastQueryStage 82 "
          },
          "60" : {
            "sign" : 454439602,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 10408960,
            "rowCount" : 136960,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(sales#737) AND (cast(sales#737 as decimal(32,6)) > cast(scalar-subquery#741 [] as decimal(32,6)))) "
          },
          "14" : {
            "sign" : 707519831,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 876588,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#1097] "
          },
          "47" : {
            "sign" : 1500374164,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 29800787536,
            "rowCount" : 143273017,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(cs_sold_date_sk#961) AND dynamicpruning#1289 [cs_sold_date_sk#961]) "
          },
          "31" : {
            "sign" : 567423640,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 27547196328,
            "rowCount" : 2295599694,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_item_sk#25 AS ss_item_sk#745] "
          },
          "69" : {
            "sign" : 1179432008,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#1125, ss_item_sk#1126, ss_customer_sk#1127, ss_cdemo_sk#1128, ss_hdemo_sk#1129, ss_addr_sk#1130, ss_store_sk#1131, ss_promo_sk#1132, ss_ticket_number#1133L, ss_quantity#1134, ss_wholesale_cost#1135, ss_list_price#1136, ss_sales_price#1137, ss_ext_discount_amt#1138, ss_ext_sales_price#1139, ss_ext_wholesale_cost#1140, ss_ext_list_price#1141, ss_ext_tax#1142, ss_coupon_amt#1143, ss_net_paid#1144, ss_net_paid_inc_tax#1145, ss_net_profit#1146, ss_sold_date_sk#1147], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "58" : {
            "sign" : -626435234,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 353748,
            "rowCount" : 1438,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(d_year#1030) AND ((d_year#1030 >= 1998) AND (d_year#1030 <= 2000))) AND isnotnull(d_date_sk#1024)) "
          },
          "64" : {
            "sign" : -1303568179,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 46207619304,
            "rowCount" : 1925317471,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#1126, ss_quantity#1134, ss_list_price#1136] "
          },
          "53" : {
            "sign" : 1503367439,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 1945876940,
            "rowCount" : 69495605,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ws_sold_date_sk#1023 = d_date_sk#1024) "
          },
          "42" : {
            "sign" : -2071970095,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 353748,
            "rowCount" : 1438,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(d_year#906) AND ((d_year#906 >= 1998) AND (d_year#906 <= 2000))) AND isnotnull(d_date_sk#900)) "
          },
          "75" : {
            "sign" : 813769211,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#1237, d_date_id#1238, d_date#1239, d_month_seq#1240, d_week_seq#1241, d_quarter_seq#1242, d_year#1243, d_dow#1244, d_moy#1245, d_dom#1246, d_qoy#1247, d_fy_year#1248, d_fy_quarter_seq#1249, d_fy_week_seq#1250, d_day_name#1251, d_quarter_name#1252, d_holiday#1253, d_weekend#1254, d_following_holiday#1255, d_first_dom#1256, d_last_dom#1257, d_same_day_ly#1258, d_same_day_lq#1259, d_current_day#1260, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "0" : {
            "sign" : 1308993421,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
            "sizeInBytes" : 12000,
            "rowCount" : 100,
            "isRuntime" : false,
            "predicate" : " (unknown) GlobalLimit Arguments: 100 "
          },
          "20" : {
            "sign" : 567423578,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 27547196328,
            "rowCount" : 2295599694,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_item_sk#25 AS ss_item_sk#745] "
          },
          "27" : {
            "sign" : 1401066164,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 4860984,
            "rowCount" : 202541,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (i_item_sk#1075 = ss_item_sk#745) "
          },
          "70" : {
            "sign" : 1096234976,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 876588,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#1170] "
          },
          "2" : {
            "sign" : -857949597,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 19722240,
            "rowCount" : 136960,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [i_brand_id#1082 ASC NULLS FIRST, i_class_id#1084 ASC NULLS FIRST, i_category_id#1086 ASC NULLS FIRST], true "
          },
          "86" : {
            "sign" : -2067140856,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 34078720,
            "rowCount" : 11334,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Join LeftSemi, (((brand_id#742 <=> i_brand_id#834) AND (class_id#743 <=> i_class_id#836)) AND (category_id#744 <=> i_category_id#838)), BroadcastQueryStage 88 "
          },
          "38" : {
            "sign" : 1776873494,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 6601088472,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_quantity#886, ss_list_price#888, ss_sold_date_sk#899] "
          },
          "81" : {
            "sign" : -1062759686,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 4860984,
            "rowCount" : 202541,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_item_sk#1148, i_brand_id#1155, i_class_id#1157, i_category_id#1159] "
          },
          "18" : {
            "sign" : -1305353512,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 738,
            "rowCount" : 3,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(d_year#1215) AND isnotnull(d_moy#1217)) AND isnotnull(d_dom#1218)) AND (((d_year#1215 = 1999) AND (d_moy#1217 = 12)) AND (d_dom#1218 = 16))) "
          },
          "30" : {
            "sign" : 73332589,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 86904000,
            "rowCount" : 204000,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [i_item_sk#1075, i_item_id#1076, i_rec_start_date#1077, i_rec_end_date#1078, i_item_desc#1079, i_current_price#1080, i_wholesale_cost#1081, i_brand_id#1082, i_brand#1083, i_class_id#1084, i_class#1085, i_category_id#1086, i_category#1087, i_manufact_id#1088, i_manufact#1089, i_size#1090, i_formulation#1091, i_color#1092, i_units#1093, i_container#1094, i_manager_id#1095, i_product_name#1096], `spark_catalog`.`tpcds_100`.`item`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "7" : {
            "sign" : -573371913,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 11490316840,
            "rowCount" : 287257921,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_item_sk#1053 = i_item_sk#1075) "
          },
          "29" : {
            "sign" : 579430964,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 86282466,
            "rowCount" : 202541,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(i_item_sk#1075) AND isnotnull(i_brand_id#1082)) AND isnotnull(i_class_id#1084)) AND isnotnull(i_category_id#1086)) "
          },
          "41" : {
            "sign" : 2019201408,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 17256,
            "rowCount" : 1438,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#900] "
          },
          "63" : {
            "sign" : 270983704,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 11490316840,
            "rowCount" : 287257921,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_item_sk#1126 = i_item_sk#1148) "
          },
          "3" : {
            "sign" : 1547313123,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 19722240,
            "rowCount" : 136960,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (((i_brand_id#1082 = i_brand_id#1155) AND (i_class_id#1084 = i_class_id#1157)) AND (i_category_id#1086 = i_category_id#1159)) "
          },
          "74" : {
            "sign" : 1734827371,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 492,
            "rowCount" : 2,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(d_year#1243) AND isnotnull(d_moy#1245)) AND isnotnull(d_dom#1246)) AND (((d_year#1243 = 1998) AND (d_moy#1245 = 12)) AND (d_dom#1246 = 16))) "
          },
          "52" : {
            "sign" : 17831375,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 1389912100,
            "rowCount" : 69495605,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_quantity#1007 AS quantity#750, ws_list_price#1009 AS list_price#751] "
          },
          "85" : {
            "sign" : -1382503901,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 82641588984,
            "rowCount" : 2295599694,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (((i_brand_id#32 = brand_id#742) AND (i_class_id#34 = class_id#743)) AND (i_category_id#36 = category_id#744)) "
          },
          "28" : {
            "sign" : 1540331732,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 4860984,
            "rowCount" : 202541,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_item_sk#1075, i_brand_id#1082, i_class_id#1084, i_category_id#1086] "
          }
        },
        "links" : [ {
          "fromId" : 13,
          "fromName" : "LogicalRelation",
          "toId" : 12,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 16,
          "fromName" : "LogicalRelation",
          "toId" : 15,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 19,
          "fromName" : "LogicalRelation",
          "toId" : 18,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 18,
          "fromName" : "Filter",
          "toId" : 17,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 17,
          "fromName" : "Project",
          "toId" : 15,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 15,
          "fromName" : "Filter",
          "toId" : 14,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 14,
          "fromName" : "Project",
          "toId" : 12,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 12,
          "fromName" : "Filter",
          "toId" : 11,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "Project",
          "toId" : 10,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 24,
          "fromName" : "LogicalRelation",
          "toId" : 23,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 23,
          "fromName" : "Filter",
          "toId" : 22,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 22,
          "fromName" : "Project",
          "toId" : 21,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 25,
          "fromName" : "LogicalQueryStage",
          "toId" : 21,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 21,
          "fromName" : "Join",
          "toId" : 20,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 20,
          "fromName" : "Project",
          "toId" : 10,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "Join",
          "toId" : 9,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 26,
          "fromName" : "LogicalQueryStage",
          "toId" : 9,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "Join",
          "toId" : 8,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "Project",
          "toId" : 7,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 30,
          "fromName" : "LogicalRelation",
          "toId" : 29,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 29,
          "fromName" : "Filter",
          "toId" : 28,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 28,
          "fromName" : "Project",
          "toId" : 27,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 22,
          "fromName" : "Project",
          "toId" : 32,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 33,
          "fromName" : "LogicalQueryStage",
          "toId" : 32,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 32,
          "fromName" : "Join",
          "toId" : 31,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 31,
          "fromName" : "Project",
          "toId" : 27,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 27,
          "fromName" : "Join",
          "toId" : 7,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Join",
          "toId" : 6,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Project",
          "toId" : 5,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Aggregate",
          "toId" : 4,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 40,
          "fromName" : "LogicalRelation",
          "toId" : 39,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 43,
          "fromName" : "LogicalRelation",
          "toId" : 42,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 42,
          "fromName" : "Filter",
          "toId" : 41,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 41,
          "fromName" : "Project",
          "toId" : 39,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 39,
          "fromName" : "Filter",
          "toId" : 38,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 38,
          "fromName" : "Project",
          "toId" : 37,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 41,
          "fromName" : "Project",
          "toId" : 37,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 37,
          "fromName" : "Join",
          "toId" : 36,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 36,
          "fromName" : "Project",
          "toId" : 35,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 48,
          "fromName" : "LogicalRelation",
          "toId" : 47,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 51,
          "fromName" : "LogicalRelation",
          "toId" : 50,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 50,
          "fromName" : "Filter",
          "toId" : 49,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 49,
          "fromName" : "Project",
          "toId" : 47,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 47,
          "fromName" : "Filter",
          "toId" : 46,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 46,
          "fromName" : "Project",
          "toId" : 45,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 49,
          "fromName" : "Project",
          "toId" : 45,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 45,
          "fromName" : "Join",
          "toId" : 44,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 44,
          "fromName" : "Project",
          "toId" : 35,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 56,
          "fromName" : "LogicalRelation",
          "toId" : 55,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 59,
          "fromName" : "LogicalRelation",
          "toId" : 58,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 58,
          "fromName" : "Filter",
          "toId" : 57,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 57,
          "fromName" : "Project",
          "toId" : 55,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 55,
          "fromName" : "Filter",
          "toId" : 54,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 54,
          "fromName" : "Project",
          "toId" : 53,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 57,
          "fromName" : "Project",
          "toId" : 53,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 53,
          "fromName" : "Join",
          "toId" : 52,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 52,
          "fromName" : "Project",
          "toId" : 35,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 35,
          "fromName" : "Union",
          "toId" : 34,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 34,
          "fromName" : "Aggregate",
          "toId" : 4,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 4,
          "fromName" : "Filter",
          "toId" : 3,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 69,
          "fromName" : "LogicalRelation",
          "toId" : 68,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 72,
          "fromName" : "LogicalRelation",
          "toId" : 71,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 75,
          "fromName" : "LogicalRelation",
          "toId" : 74,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 74,
          "fromName" : "Filter",
          "toId" : 73,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 73,
          "fromName" : "Project",
          "toId" : 71,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 71,
          "fromName" : "Filter",
          "toId" : 70,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 70,
          "fromName" : "Project",
          "toId" : 68,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 68,
          "fromName" : "Filter",
          "toId" : 67,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 67,
          "fromName" : "Project",
          "toId" : 66,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 22,
          "fromName" : "Project",
          "toId" : 77,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 78,
          "fromName" : "LogicalQueryStage",
          "toId" : 77,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 77,
          "fromName" : "Join",
          "toId" : 76,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 76,
          "fromName" : "Project",
          "toId" : 66,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 66,
          "fromName" : "Join",
          "toId" : 65,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 79,
          "fromName" : "LogicalQueryStage",
          "toId" : 65,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 65,
          "fromName" : "Join",
          "toId" : 64,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 64,
          "fromName" : "Project",
          "toId" : 63,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 83,
          "fromName" : "LogicalRelation",
          "toId" : 82,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 82,
          "fromName" : "Filter",
          "toId" : 81,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 81,
          "fromName" : "Project",
          "toId" : 80,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 22,
          "fromName" : "Project",
          "toId" : 85,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 86,
          "fromName" : "LogicalQueryStage",
          "toId" : 85,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 85,
          "fromName" : "Join",
          "toId" : 84,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 84,
          "fromName" : "Project",
          "toId" : 80,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 80,
          "fromName" : "Join",
          "toId" : 63,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 63,
          "fromName" : "Join",
          "toId" : 62,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 62,
          "fromName" : "Project",
          "toId" : 61,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 61,
          "fromName" : "Aggregate",
          "toId" : 60,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 34,
          "fromName" : "Aggregate",
          "toId" : 60,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 60,
          "fromName" : "Filter",
          "toId" : 3,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Join",
          "toId" : 2,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "LocalLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "LocalLimit",
          "toId" : 0,
          "toName" : "GlobalLimit",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [i_brand_id#1082 ASC NULLS FIRST, i_class_id#1084 ASC NULLS FIRST, i_category_id#1086 ASC NULLS FIRST], true\n      +- Join Inner, (((i_brand_id#1082 = i_brand_id#1155) AND (i_class_id#1084 = i_class_id#1157)) AND (i_category_id#1086 = i_category_id#1159))\n         :- Filter (isnotnull(sales#731) AND (cast(sales#731 as decimal(32,6)) > cast(scalar-subquery#735 [] as decimal(32,6))))\n         :  :  +- Aggregate [avg((cast(quantity#746 as decimal(10,0)) * list_price#747)) AS average_sales#752]\n         :  :     +- Union false, false\n         :  :        :- Project [ss_quantity#886 AS quantity#746, ss_list_price#888 AS list_price#747]\n         :  :        :  +- Join Inner, (ss_sold_date_sk#899 = d_date_sk#900)\n         :  :        :     :- Project [ss_quantity#886, ss_list_price#888, ss_sold_date_sk#899]\n         :  :        :     :  +- Filter (isnotnull(ss_sold_date_sk#899) AND dynamicpruning#1288 [ss_sold_date_sk#899])\n         :  :        :     :     :  +- Project [d_date_sk#900]\n         :  :        :     :     :     +- Filter ((isnotnull(d_year#906) AND ((d_year#906 >= 1998) AND (d_year#906 <= 2000))) AND isnotnull(d_date_sk#900))\n         :  :        :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#900,d_date_id#901,d_date#902,d_month_seq#903,d_week_seq#904,d_quarter_seq#905,d_year#906,d_dow#907,d_moy#908,d_dom#909,d_qoy#910,d_fy_year#911,d_fy_quarter_seq#912,d_fy_week_seq#913,d_day_name#914,d_quarter_name#915,d_holiday#916,d_weekend#917,d_following_holiday#918,d_first_dom#919,d_last_dom#920,d_same_day_ly#921,d_same_day_lq#922,d_current_day#923,... 4 more fields] parquet\n         :  :        :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#877,ss_item_sk#878,ss_customer_sk#879,ss_cdemo_sk#880,ss_hdemo_sk#881,ss_addr_sk#882,ss_store_sk#883,ss_promo_sk#884,ss_ticket_number#885L,ss_quantity#886,ss_wholesale_cost#887,ss_list_price#888,ss_sales_price#889,ss_ext_discount_amt#890,ss_ext_sales_price#891,ss_ext_wholesale_cost#892,ss_ext_list_price#893,ss_ext_tax#894,ss_coupon_amt#895,ss_net_paid#896,ss_net_paid_inc_tax#897,ss_net_profit#898,ss_sold_date_sk#899] parquet\n         :  :        :     +- Project [d_date_sk#900]\n         :  :        :        +- Filter ((isnotnull(d_year#906) AND ((d_year#906 >= 1998) AND (d_year#906 <= 2000))) AND isnotnull(d_date_sk#900))\n         :  :        :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#900,d_date_id#901,d_date#902,d_month_seq#903,d_week_seq#904,d_quarter_seq#905,d_year#906,d_dow#907,d_moy#908,d_dom#909,d_qoy#910,d_fy_year#911,d_fy_quarter_seq#912,d_fy_week_seq#913,d_day_name#914,d_quarter_name#915,d_holiday#916,d_weekend#917,d_following_holiday#918,d_first_dom#919,d_last_dom#920,d_same_day_ly#921,d_same_day_lq#922,d_current_day#923,... 4 more fields] parquet\n         :  :        :- Project [cs_quantity#945 AS quantity#748, cs_list_price#947 AS list_price#749]\n         :  :        :  +- Join Inner, (cs_sold_date_sk#961 = d_date_sk#962)\n         :  :        :     :- Project [cs_quantity#945, cs_list_price#947, cs_sold_date_sk#961]\n         :  :        :     :  +- Filter (isnotnull(cs_sold_date_sk#961) AND dynamicpruning#1289 [cs_sold_date_sk#961])\n         :  :        :     :     :  +- Project [d_date_sk#962]\n         :  :        :     :     :     +- Filter ((isnotnull(d_year#968) AND ((d_year#968 >= 1998) AND (d_year#968 <= 2000))) AND isnotnull(d_date_sk#962))\n         :  :        :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#962,d_date_id#963,d_date#964,d_month_seq#965,d_week_seq#966,d_quarter_seq#967,d_year#968,d_dow#969,d_moy#970,d_dom#971,d_qoy#972,d_fy_year#973,d_fy_quarter_seq#974,d_fy_week_seq#975,d_day_name#976,d_quarter_name#977,d_holiday#978,d_weekend#979,d_following_holiday#980,d_first_dom#981,d_last_dom#982,d_same_day_ly#983,d_same_day_lq#984,d_current_day#985,... 4 more fields] parquet\n         :  :        :     :     +- Relation spark_catalog.tpcds_100.catalog_sales[cs_sold_time_sk#928,cs_ship_date_sk#929,cs_bill_customer_sk#930,cs_bill_cdemo_sk#931,cs_bill_hdemo_sk#932,cs_bill_addr_sk#933,cs_ship_customer_sk#934,cs_ship_cdemo_sk#935,cs_ship_hdemo_sk#936,cs_ship_addr_sk#937,cs_call_center_sk#938,cs_catalog_page_sk#939,cs_ship_mode_sk#940,cs_warehouse_sk#941,cs_item_sk#942,cs_promo_sk#943,cs_order_number#944L,cs_quantity#945,cs_wholesale_cost#946,cs_list_price#947,cs_sales_price#948,cs_ext_discount_amt#949,cs_ext_sales_price#950,cs_ext_wholesale_cost#951,... 10 more fields] parquet\n         :  :        :     +- Project [d_date_sk#962]\n         :  :        :        +- Filter ((isnotnull(d_year#968) AND ((d_year#968 >= 1998) AND (d_year#968 <= 2000))) AND isnotnull(d_date_sk#962))\n         :  :        :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#962,d_date_id#963,d_date#964,d_month_seq#965,d_week_seq#966,d_quarter_seq#967,d_year#968,d_dow#969,d_moy#970,d_dom#971,d_qoy#972,d_fy_year#973,d_fy_quarter_seq#974,d_fy_week_seq#975,d_day_name#976,d_quarter_name#977,d_holiday#978,d_weekend#979,d_following_holiday#980,d_first_dom#981,d_last_dom#982,d_same_day_ly#983,d_same_day_lq#984,d_current_day#985,... 4 more fields] parquet\n         :  :        +- Project [ws_quantity#1007 AS quantity#750, ws_list_price#1009 AS list_price#751]\n         :  :           +- Join Inner, (ws_sold_date_sk#1023 = d_date_sk#1024)\n         :  :              :- Project [ws_quantity#1007, ws_list_price#1009, ws_sold_date_sk#1023]\n         :  :              :  +- Filter (isnotnull(ws_sold_date_sk#1023) AND dynamicpruning#1290 [ws_sold_date_sk#1023])\n         :  :              :     :  +- Project [d_date_sk#1024]\n         :  :              :     :     +- Filter ((isnotnull(d_year#1030) AND ((d_year#1030 >= 1998) AND (d_year#1030 <= 2000))) AND isnotnull(d_date_sk#1024))\n         :  :              :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#1024,d_date_id#1025,d_date#1026,d_month_seq#1027,d_week_seq#1028,d_quarter_seq#1029,d_year#1030,d_dow#1031,d_moy#1032,d_dom#1033,d_qoy#1034,d_fy_year#1035,d_fy_quarter_seq#1036,d_fy_week_seq#1037,d_day_name#1038,d_quarter_name#1039,d_holiday#1040,d_weekend#1041,d_following_holiday#1042,d_first_dom#1043,d_last_dom#1044,d_same_day_ly#1045,d_same_day_lq#1046,d_current_day#1047,... 4 more fields] parquet\n         :  :              :     +- Relation spark_catalog.tpcds_100.web_sales[ws_sold_time_sk#990,ws_ship_date_sk#991,ws_item_sk#992,ws_bill_customer_sk#993,ws_bill_cdemo_sk#994,ws_bill_hdemo_sk#995,ws_bill_addr_sk#996,ws_ship_customer_sk#997,ws_ship_cdemo_sk#998,ws_ship_hdemo_sk#999,ws_ship_addr_sk#1000,ws_web_page_sk#1001,ws_web_site_sk#1002,ws_ship_mode_sk#1003,ws_warehouse_sk#1004,ws_promo_sk#1005,ws_order_number#1006L,ws_quantity#1007,ws_wholesale_cost#1008,ws_list_price#1009,ws_sales_price#1010,ws_ext_discount_amt#1011,ws_ext_sales_price#1012,ws_ext_wholesale_cost#1013,... 10 more fields] parquet\n         :  :              +- Project [d_date_sk#1024]\n         :  :                 +- Filter ((isnotnull(d_year#1030) AND ((d_year#1030 >= 1998) AND (d_year#1030 <= 2000))) AND isnotnull(d_date_sk#1024))\n         :  :                    +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#1024,d_date_id#1025,d_date#1026,d_month_seq#1027,d_week_seq#1028,d_quarter_seq#1029,d_year#1030,d_dow#1031,d_moy#1032,d_dom#1033,d_qoy#1034,d_fy_year#1035,d_fy_quarter_seq#1036,d_fy_week_seq#1037,d_day_name#1038,d_quarter_name#1039,d_holiday#1040,d_weekend#1041,d_following_holiday#1042,d_first_dom#1043,d_last_dom#1044,d_same_day_ly#1045,d_same_day_lq#1046,d_current_day#1047,... 4 more fields] parquet\n         :  +- Aggregate [i_brand_id#1082, i_class_id#1084, i_category_id#1086], [store AS channel#730, i_brand_id#1082, i_class_id#1084, i_category_id#1086, sum((cast(ss_quantity#1061 as decimal(10,0)) * ss_list_price#1063)) AS sales#731, count(1) AS number_sales#732L]\n         :     +- Project [ss_quantity#1061, ss_list_price#1063, i_brand_id#1082, i_class_id#1084, i_category_id#1086]\n         :        +- Join Inner, (ss_item_sk#1053 = i_item_sk#1075)\n         :           :- Project [ss_item_sk#1053, ss_quantity#1061, ss_list_price#1063]\n         :           :  +- Join Inner, (ss_sold_date_sk#1074 = d_date_sk#1097)\n         :           :     :- Join LeftSemi, (ss_item_sk#1053 = ss_item_sk#745)\n         :           :     :  :- Project [ss_item_sk#1053, ss_quantity#1061, ss_list_price#1063, ss_sold_date_sk#1074]\n         :           :     :  :  +- Filter ((isnotnull(ss_item_sk#1053) AND isnotnull(ss_sold_date_sk#1074)) AND dynamicpruning#1303 [ss_sold_date_sk#1074])\n         :           :     :  :     :  +- Project [d_date_sk#1097]\n         :           :     :  :     :     +- Filter ((isnotnull(d_week_seq#1101) AND (d_week_seq#1101 = scalar-subquery#734 [])) AND isnotnull(d_date_sk#1097))\n         :           :     :  :     :        :  +- Project [d_week_seq#1213]\n         :           :     :  :     :        :     +- Filter (((isnotnull(d_year#1215) AND isnotnull(d_moy#1217)) AND isnotnull(d_dom#1218)) AND (((d_year#1215 = 1999) AND (d_moy#1217 = 12)) AND (d_dom#1218 = 16)))\n         :           :     :  :     :        :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#1209,d_date_id#1210,d_date#1211,d_month_seq#1212,d_week_seq#1213,d_quarter_seq#1214,d_year#1215,d_dow#1216,d_moy#1217,d_dom#1218,d_qoy#1219,d_fy_year#1220,d_fy_quarter_seq#1221,d_fy_week_seq#1222,d_day_name#1223,d_quarter_name#1224,d_holiday#1225,d_weekend#1226,d_following_holiday#1227,d_first_dom#1228,d_last_dom#1229,d_same_day_ly#1230,d_same_day_lq#1231,d_current_day#1232,... 4 more fields] parquet\n         :           :     :  :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#1097,d_date_id#1098,d_date#1099,d_month_seq#1100,d_week_seq#1101,d_quarter_seq#1102,d_year#1103,d_dow#1104,d_moy#1105,d_dom#1106,d_qoy#1107,d_fy_year#1108,d_fy_quarter_seq#1109,d_fy_week_seq#1110,d_day_name#1111,d_quarter_name#1112,d_holiday#1113,d_weekend#1114,d_following_holiday#1115,d_first_dom#1116,d_last_dom#1117,d_same_day_ly#1118,d_same_day_lq#1119,d_current_day#1120,... 4 more fields] parquet\n         :           :     :  :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#1052,ss_item_sk#1053,ss_customer_sk#1054,ss_cdemo_sk#1055,ss_hdemo_sk#1056,ss_addr_sk#1057,ss_store_sk#1058,ss_promo_sk#1059,ss_ticket_number#1060L,ss_quantity#1061,ss_wholesale_cost#1062,ss_list_price#1063,ss_sales_price#1064,ss_ext_discount_amt#1065,ss_ext_sales_price#1066,ss_ext_wholesale_cost#1067,ss_ext_list_price#1068,ss_ext_tax#1069,ss_coupon_amt#1070,ss_net_paid#1071,ss_net_paid_inc_tax#1072,ss_net_profit#1073,ss_sold_date_sk#1074] parquet\n         :           :     :  +- Project [i_item_sk#25 AS ss_item_sk#745]\n         :           :     :     +- Join Inner, (((i_brand_id#32 = brand_id#742) AND (i_class_id#34 = class_id#743)) AND (i_category_id#36 = category_id#744))\n         :           :     :        :- Project [i_item_sk#25, i_brand_id#32, i_class_id#34, i_category_id#36]\n         :           :     :        :  +- Filter ((isnotnull(i_brand_id#32) AND isnotnull(i_class_id#34)) AND isnotnull(i_category_id#36))\n         :           :     :        :     +- Relation spark_catalog.tpcds_100.item[i_item_sk#25,i_item_id#26,i_rec_start_date#27,i_rec_end_date#28,i_item_desc#29,i_current_price#30,i_wholesale_cost#31,i_brand_id#32,i_brand#33,i_class_id#34,i_class#35,i_category_id#36,i_category#37,i_manufact_id#38,i_manufact#39,i_size#40,i_formulation#41,i_color#42,i_units#43,i_container#44,i_manager_id#45,i_product_name#46] parquet\n         :           :     :        +- LogicalQueryStage Join LeftSemi, (((brand_id#742 <=> i_brand_id#834) AND (class_id#743 <=> i_class_id#836)) AND (category_id#744 <=> i_category_id#838)), BroadcastQueryStage 82\n         :           :     +- LogicalQueryStage Project [d_date_sk#1097], BroadcastQueryStage 9\n         :           +- Join LeftSemi, (i_item_sk#1075 = ss_item_sk#745)\n         :              :- Project [i_item_sk#1075, i_brand_id#1082, i_class_id#1084, i_category_id#1086]\n         :              :  +- Filter (((isnotnull(i_item_sk#1075) AND isnotnull(i_brand_id#1082)) AND isnotnull(i_class_id#1084)) AND isnotnull(i_category_id#1086))\n         :              :     +- Relation spark_catalog.tpcds_100.item[i_item_sk#1075,i_item_id#1076,i_rec_start_date#1077,i_rec_end_date#1078,i_item_desc#1079,i_current_price#1080,i_wholesale_cost#1081,i_brand_id#1082,i_brand#1083,i_class_id#1084,i_class#1085,i_category_id#1086,i_category#1087,i_manufact_id#1088,i_manufact#1089,i_size#1090,i_formulation#1091,i_color#1092,i_units#1093,i_container#1094,i_manager_id#1095,i_product_name#1096] parquet\n         :              +- Project [i_item_sk#25 AS ss_item_sk#745]\n         :                 +- Join Inner, (((i_brand_id#32 = brand_id#742) AND (i_class_id#34 = class_id#743)) AND (i_category_id#36 = category_id#744))\n         :                    :- Project [i_item_sk#25, i_brand_id#32, i_class_id#34, i_category_id#36]\n         :                    :  +- Filter ((isnotnull(i_brand_id#32) AND isnotnull(i_class_id#34)) AND isnotnull(i_category_id#36))\n         :                    :     +- Relation spark_catalog.tpcds_100.item[i_item_sk#25,i_item_id#26,i_rec_start_date#27,i_rec_end_date#28,i_item_desc#29,i_current_price#30,i_wholesale_cost#31,i_brand_id#32,i_brand#33,i_class_id#34,i_class#35,i_category_id#36,i_category#37,i_manufact_id#38,i_manufact#39,i_size#40,i_formulation#41,i_color#42,i_units#43,i_container#44,i_manager_id#45,i_product_name#46] parquet\n         :                    +- LogicalQueryStage Join LeftSemi, (((brand_id#742 <=> i_brand_id#834) AND (class_id#743 <=> i_class_id#836)) AND (category_id#744 <=> i_category_id#838)), BroadcastQueryStage 84\n         +- Filter (isnotnull(sales#737) AND (cast(sales#737 as decimal(32,6)) > cast(scalar-subquery#741 [] as decimal(32,6))))\n            :  +- Aggregate [avg((cast(quantity#746 as decimal(10,0)) * list_price#747)) AS average_sales#752]\n            :     +- Union false, false\n            :        :- Project [ss_quantity#886 AS quantity#746, ss_list_price#888 AS list_price#747]\n            :        :  +- Join Inner, (ss_sold_date_sk#899 = d_date_sk#900)\n            :        :     :- Project [ss_quantity#886, ss_list_price#888, ss_sold_date_sk#899]\n            :        :     :  +- Filter (isnotnull(ss_sold_date_sk#899) AND dynamicpruning#1288 [ss_sold_date_sk#899])\n            :        :     :     :  +- Project [d_date_sk#900]\n            :        :     :     :     +- Filter ((isnotnull(d_year#906) AND ((d_year#906 >= 1998) AND (d_year#906 <= 2000))) AND isnotnull(d_date_sk#900))\n            :        :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#900,d_date_id#901,d_date#902,d_month_seq#903,d_week_seq#904,d_quarter_seq#905,d_year#906,d_dow#907,d_moy#908,d_dom#909,d_qoy#910,d_fy_year#911,d_fy_quarter_seq#912,d_fy_week_seq#913,d_day_name#914,d_quarter_name#915,d_holiday#916,d_weekend#917,d_following_holiday#918,d_first_dom#919,d_last_dom#920,d_same_day_ly#921,d_same_day_lq#922,d_current_day#923,... 4 more fields] parquet\n            :        :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#877,ss_item_sk#878,ss_customer_sk#879,ss_cdemo_sk#880,ss_hdemo_sk#881,ss_addr_sk#882,ss_store_sk#883,ss_promo_sk#884,ss_ticket_number#885L,ss_quantity#886,ss_wholesale_cost#887,ss_list_price#888,ss_sales_price#889,ss_ext_discount_amt#890,ss_ext_sales_price#891,ss_ext_wholesale_cost#892,ss_ext_list_price#893,ss_ext_tax#894,ss_coupon_amt#895,ss_net_paid#896,ss_net_paid_inc_tax#897,ss_net_profit#898,ss_sold_date_sk#899] parquet\n            :        :     +- Project [d_date_sk#900]\n            :        :        +- Filter ((isnotnull(d_year#906) AND ((d_year#906 >= 1998) AND (d_year#906 <= 2000))) AND isnotnull(d_date_sk#900))\n            :        :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#900,d_date_id#901,d_date#902,d_month_seq#903,d_week_seq#904,d_quarter_seq#905,d_year#906,d_dow#907,d_moy#908,d_dom#909,d_qoy#910,d_fy_year#911,d_fy_quarter_seq#912,d_fy_week_seq#913,d_day_name#914,d_quarter_name#915,d_holiday#916,d_weekend#917,d_following_holiday#918,d_first_dom#919,d_last_dom#920,d_same_day_ly#921,d_same_day_lq#922,d_current_day#923,... 4 more fields] parquet\n            :        :- Project [cs_quantity#945 AS quantity#748, cs_list_price#947 AS list_price#749]\n            :        :  +- Join Inner, (cs_sold_date_sk#961 = d_date_sk#962)\n            :        :     :- Project [cs_quantity#945, cs_list_price#947, cs_sold_date_sk#961]\n            :        :     :  +- Filter (isnotnull(cs_sold_date_sk#961) AND dynamicpruning#1289 [cs_sold_date_sk#961])\n            :        :     :     :  +- Project [d_date_sk#962]\n            :        :     :     :     +- Filter ((isnotnull(d_year#968) AND ((d_year#968 >= 1998) AND (d_year#968 <= 2000))) AND isnotnull(d_date_sk#962))\n            :        :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#962,d_date_id#963,d_date#964,d_month_seq#965,d_week_seq#966,d_quarter_seq#967,d_year#968,d_dow#969,d_moy#970,d_dom#971,d_qoy#972,d_fy_year#973,d_fy_quarter_seq#974,d_fy_week_seq#975,d_day_name#976,d_quarter_name#977,d_holiday#978,d_weekend#979,d_following_holiday#980,d_first_dom#981,d_last_dom#982,d_same_day_ly#983,d_same_day_lq#984,d_current_day#985,... 4 more fields] parquet\n            :        :     :     +- Relation spark_catalog.tpcds_100.catalog_sales[cs_sold_time_sk#928,cs_ship_date_sk#929,cs_bill_customer_sk#930,cs_bill_cdemo_sk#931,cs_bill_hdemo_sk#932,cs_bill_addr_sk#933,cs_ship_customer_sk#934,cs_ship_cdemo_sk#935,cs_ship_hdemo_sk#936,cs_ship_addr_sk#937,cs_call_center_sk#938,cs_catalog_page_sk#939,cs_ship_mode_sk#940,cs_warehouse_sk#941,cs_item_sk#942,cs_promo_sk#943,cs_order_number#944L,cs_quantity#945,cs_wholesale_cost#946,cs_list_price#947,cs_sales_price#948,cs_ext_discount_amt#949,cs_ext_sales_price#950,cs_ext_wholesale_cost#951,... 10 more fields] parquet\n            :        :     +- Project [d_date_sk#962]\n            :        :        +- Filter ((isnotnull(d_year#968) AND ((d_year#968 >= 1998) AND (d_year#968 <= 2000))) AND isnotnull(d_date_sk#962))\n            :        :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#962,d_date_id#963,d_date#964,d_month_seq#965,d_week_seq#966,d_quarter_seq#967,d_year#968,d_dow#969,d_moy#970,d_dom#971,d_qoy#972,d_fy_year#973,d_fy_quarter_seq#974,d_fy_week_seq#975,d_day_name#976,d_quarter_name#977,d_holiday#978,d_weekend#979,d_following_holiday#980,d_first_dom#981,d_last_dom#982,d_same_day_ly#983,d_same_day_lq#984,d_current_day#985,... 4 more fields] parquet\n            :        +- Project [ws_quantity#1007 AS quantity#750, ws_list_price#1009 AS list_price#751]\n            :           +- Join Inner, (ws_sold_date_sk#1023 = d_date_sk#1024)\n            :              :- Project [ws_quantity#1007, ws_list_price#1009, ws_sold_date_sk#1023]\n            :              :  +- Filter (isnotnull(ws_sold_date_sk#1023) AND dynamicpruning#1290 [ws_sold_date_sk#1023])\n            :              :     :  +- Project [d_date_sk#1024]\n            :              :     :     +- Filter ((isnotnull(d_year#1030) AND ((d_year#1030 >= 1998) AND (d_year#1030 <= 2000))) AND isnotnull(d_date_sk#1024))\n            :              :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#1024,d_date_id#1025,d_date#1026,d_month_seq#1027,d_week_seq#1028,d_quarter_seq#1029,d_year#1030,d_dow#1031,d_moy#1032,d_dom#1033,d_qoy#1034,d_fy_year#1035,d_fy_quarter_seq#1036,d_fy_week_seq#1037,d_day_name#1038,d_quarter_name#1039,d_holiday#1040,d_weekend#1041,d_following_holiday#1042,d_first_dom#1043,d_last_dom#1044,d_same_day_ly#1045,d_same_day_lq#1046,d_current_day#1047,... 4 more fields] parquet\n            :              :     +- Relation spark_catalog.tpcds_100.web_sales[ws_sold_time_sk#990,ws_ship_date_sk#991,ws_item_sk#992,ws_bill_customer_sk#993,ws_bill_cdemo_sk#994,ws_bill_hdemo_sk#995,ws_bill_addr_sk#996,ws_ship_customer_sk#997,ws_ship_cdemo_sk#998,ws_ship_hdemo_sk#999,ws_ship_addr_sk#1000,ws_web_page_sk#1001,ws_web_site_sk#1002,ws_ship_mode_sk#1003,ws_warehouse_sk#1004,ws_promo_sk#1005,ws_order_number#1006L,ws_quantity#1007,ws_wholesale_cost#1008,ws_list_price#1009,ws_sales_price#1010,ws_ext_discount_amt#1011,ws_ext_sales_price#1012,ws_ext_wholesale_cost#1013,... 10 more fields] parquet\n            :              +- Project [d_date_sk#1024]\n            :                 +- Filter ((isnotnull(d_year#1030) AND ((d_year#1030 >= 1998) AND (d_year#1030 <= 2000))) AND isnotnull(d_date_sk#1024))\n            :                    +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#1024,d_date_id#1025,d_date#1026,d_month_seq#1027,d_week_seq#1028,d_quarter_seq#1029,d_year#1030,d_dow#1031,d_moy#1032,d_dom#1033,d_qoy#1034,d_fy_year#1035,d_fy_quarter_seq#1036,d_fy_week_seq#1037,d_day_name#1038,d_quarter_name#1039,d_holiday#1040,d_weekend#1041,d_following_holiday#1042,d_first_dom#1043,d_last_dom#1044,d_same_day_ly#1045,d_same_day_lq#1046,d_current_day#1047,... 4 more fields] parquet\n            +- Aggregate [i_brand_id#1155, i_class_id#1157, i_category_id#1159], [store AS channel#736, i_brand_id#1155, i_class_id#1157, i_category_id#1159, sum((cast(ss_quantity#1134 as decimal(10,0)) * ss_list_price#1136)) AS sales#737, count(1) AS number_sales#738L]\n               +- Project [ss_quantity#1134, ss_list_price#1136, i_brand_id#1155, i_class_id#1157, i_category_id#1159]\n                  +- Join Inner, (ss_item_sk#1126 = i_item_sk#1148)\n                     :- Project [ss_item_sk#1126, ss_quantity#1134, ss_list_price#1136]\n                     :  +- Join Inner, (ss_sold_date_sk#1147 = d_date_sk#1170)\n                     :     :- Join LeftSemi, (ss_item_sk#1126 = ss_item_sk#745)\n                     :     :  :- Project [ss_item_sk#1126, ss_quantity#1134, ss_list_price#1136, ss_sold_date_sk#1147]\n                     :     :  :  +- Filter ((isnotnull(ss_item_sk#1126) AND isnotnull(ss_sold_date_sk#1147)) AND dynamicpruning#1310 [ss_sold_date_sk#1147])\n                     :     :  :     :  +- Project [d_date_sk#1170]\n                     :     :  :     :     +- Filter ((isnotnull(d_week_seq#1174) AND (d_week_seq#1174 = scalar-subquery#740 [])) AND isnotnull(d_date_sk#1170))\n                     :     :  :     :        :  +- Project [d_week_seq#1241]\n                     :     :  :     :        :     +- Filter (((isnotnull(d_year#1243) AND isnotnull(d_moy#1245)) AND isnotnull(d_dom#1246)) AND (((d_year#1243 = 1998) AND (d_moy#1245 = 12)) AND (d_dom#1246 = 16)))\n                     :     :  :     :        :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#1237,d_date_id#1238,d_date#1239,d_month_seq#1240,d_week_seq#1241,d_quarter_seq#1242,d_year#1243,d_dow#1244,d_moy#1245,d_dom#1246,d_qoy#1247,d_fy_year#1248,d_fy_quarter_seq#1249,d_fy_week_seq#1250,d_day_name#1251,d_quarter_name#1252,d_holiday#1253,d_weekend#1254,d_following_holiday#1255,d_first_dom#1256,d_last_dom#1257,d_same_day_ly#1258,d_same_day_lq#1259,d_current_day#1260,... 4 more fields] parquet\n                     :     :  :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#1170,d_date_id#1171,d_date#1172,d_month_seq#1173,d_week_seq#1174,d_quarter_seq#1175,d_year#1176,d_dow#1177,d_moy#1178,d_dom#1179,d_qoy#1180,d_fy_year#1181,d_fy_quarter_seq#1182,d_fy_week_seq#1183,d_day_name#1184,d_quarter_name#1185,d_holiday#1186,d_weekend#1187,d_following_holiday#1188,d_first_dom#1189,d_last_dom#1190,d_same_day_ly#1191,d_same_day_lq#1192,d_current_day#1193,... 4 more fields] parquet\n                     :     :  :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#1125,ss_item_sk#1126,ss_customer_sk#1127,ss_cdemo_sk#1128,ss_hdemo_sk#1129,ss_addr_sk#1130,ss_store_sk#1131,ss_promo_sk#1132,ss_ticket_number#1133L,ss_quantity#1134,ss_wholesale_cost#1135,ss_list_price#1136,ss_sales_price#1137,ss_ext_discount_amt#1138,ss_ext_sales_price#1139,ss_ext_wholesale_cost#1140,ss_ext_list_price#1141,ss_ext_tax#1142,ss_coupon_amt#1143,ss_net_paid#1144,ss_net_paid_inc_tax#1145,ss_net_profit#1146,ss_sold_date_sk#1147] parquet\n                     :     :  +- Project [i_item_sk#25 AS ss_item_sk#745]\n                     :     :     +- Join Inner, (((i_brand_id#32 = brand_id#742) AND (i_class_id#34 = class_id#743)) AND (i_category_id#36 = category_id#744))\n                     :     :        :- Project [i_item_sk#25, i_brand_id#32, i_class_id#34, i_category_id#36]\n                     :     :        :  +- Filter ((isnotnull(i_brand_id#32) AND isnotnull(i_class_id#34)) AND isnotnull(i_category_id#36))\n                     :     :        :     +- Relation spark_catalog.tpcds_100.item[i_item_sk#25,i_item_id#26,i_rec_start_date#27,i_rec_end_date#28,i_item_desc#29,i_current_price#30,i_wholesale_cost#31,i_brand_id#32,i_brand#33,i_class_id#34,i_class#35,i_category_id#36,i_category#37,i_manufact_id#38,i_manufact#39,i_size#40,i_formulation#41,i_color#42,i_units#43,i_container#44,i_manager_id#45,i_product_name#46] parquet\n                     :     :        +- LogicalQueryStage Join LeftSemi, (((brand_id#742 <=> i_brand_id#834) AND (class_id#743 <=> i_class_id#836)) AND (category_id#744 <=> i_category_id#838)), BroadcastQueryStage 86\n                     :     +- LogicalQueryStage Project [d_date_sk#1170], BroadcastQueryStage 34\n                     +- Join LeftSemi, (i_item_sk#1148 = ss_item_sk#745)\n                        :- Project [i_item_sk#1148, i_brand_id#1155, i_class_id#1157, i_category_id#1159]\n                        :  +- Filter (((isnotnull(i_item_sk#1148) AND isnotnull(i_brand_id#1155)) AND isnotnull(i_class_id#1157)) AND isnotnull(i_category_id#1159))\n                        :     +- Relation spark_catalog.tpcds_100.item[i_item_sk#1148,i_item_id#1149,i_rec_start_date#1150,i_rec_end_date#1151,i_item_desc#1152,i_current_price#1153,i_wholesale_cost#1154,i_brand_id#1155,i_brand#1156,i_class_id#1157,i_class#1158,i_category_id#1159,i_category#1160,i_manufact_id#1161,i_manufact#1162,i_size#1163,i_formulation#1164,i_color#1165,i_units#1166,i_container#1167,i_manager_id#1168,i_product_name#1169] parquet\n                        +- Project [i_item_sk#25 AS ss_item_sk#745]\n                           +- Join Inner, (((i_brand_id#32 = brand_id#742) AND (i_class_id#34 = class_id#743)) AND (i_category_id#36 = category_id#744))\n                              :- Project [i_item_sk#25, i_brand_id#32, i_class_id#34, i_category_id#36]\n                              :  +- Filter ((isnotnull(i_brand_id#32) AND isnotnull(i_class_id#34)) AND isnotnull(i_category_id#36))\n                              :     +- Relation spark_catalog.tpcds_100.item[i_item_sk#25,i_item_id#26,i_rec_start_date#27,i_rec_end_date#28,i_item_desc#29,i_current_price#30,i_wholesale_cost#31,i_brand_id#32,i_brand#33,i_class_id#34,i_class#35,i_category_id#36,i_category#37,i_manufact_id#38,i_manufact#39,i_size#40,i_formulation#41,i_color#42,i_units#43,i_container#44,i_manager_id#45,i_product_name#46] parquet\n                              +- LogicalQueryStage Join LeftSemi, (((brand_id#742 <=> i_brand_id#834) AND (class_id#743 <=> i_class_id#836)) AND (category_id#744 <=> i_category_id#838)), BroadcastQueryStage 88\n"
      },
      "IM" : {
        "inputSizeInBytes" : 84273623456,
        "inputRowCount" : 551360056
      },
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "StartTimeInMs" : 1702226696614,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 14884,
        "IOBytes" : {
          "Total" : 1517177579,
          "Details" : {
            "IR" : 1515967397,
            "IW" : 0,
            "SR" : 605091,
            "SW" : 605091
          }
        }
      }
    },
    "20" : {
      "LQP" : {
        "operators" : {
          "12" : {
            "sign" : -1972788865,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#877, ss_item_sk#878, ss_customer_sk#879, ss_cdemo_sk#880, ss_hdemo_sk#881, ss_addr_sk#882, ss_store_sk#883, ss_promo_sk#884, ss_ticket_number#885L, ss_quantity#886, ss_wholesale_cost#887, ss_list_price#888, ss_sales_price#889, ss_ext_discount_amt#890, ss_ext_sales_price#891, ss_ext_wholesale_cost#892, ss_ext_list_price#893, ss_ext_tax#894, ss_coupon_amt#895, ss_net_paid#896, ss_net_paid_inc_tax#897, ss_net_profit#898, ss_sold_date_sk#899], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "8" : {
            "sign" : 869525063,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 5310811700,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_quantity#886 AS quantity#746, ss_list_price#888 AS list_price#747] "
          },
          "19" : {
            "sign" : 1500374164,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 29800787536,
            "rowCount" : 143273017,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(cs_sold_date_sk#961) AND dynamicpruning#1289 [cs_sold_date_sk#961]) "
          },
          "23" : {
            "sign" : -169490734,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#962, d_date_id#963, d_date#964, d_month_seq#965, d_week_seq#966, d_quarter_seq#967, d_year#968, d_dow#969, d_moy#970, d_dom#971, d_qoy#972, d_fy_year#973, d_fy_quarter_seq#974, d_fy_week_seq#975, d_day_name#976, d_quarter_name#977, d_holiday#978, d_weekend#979, d_following_holiday#980, d_first_dom#981, d_last_dom#982, d_same_day_ly#983, d_same_day_lq#984, d_current_day#985, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "4" : {
            "sign" : -554368650,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 383488,
            "rowCount" : 5992,
            "isRuntime" : true,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(sales#731) AND (cast(sales#731 as decimal(32,6)) > cast(scalar-subquery#735 [] as decimal(32,6)))) "
          },
          "15" : {
            "sign" : -820074406,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#900, d_date_id#901, d_date#902, d_month_seq#903, d_week_seq#904, d_quarter_seq#905, d_year#906, d_dow#907, d_moy#908, d_dom#909, d_qoy#910, d_fy_year#911, d_fy_quarter_seq#912, d_fy_week_seq#913, d_day_name#914, d_quarter_name#915, d_holiday#916, d_weekend#917, d_following_holiday#918, d_first_dom#919, d_last_dom#920, d_same_day_ly#921, d_same_day_lq#922, d_current_day#923, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "11" : {
            "sign" : 1377797290,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(ss_sold_date_sk#899) AND dynamicpruning#1288 [ss_sold_date_sk#899]) "
          },
          "9" : {
            "sign" : -1804794945,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 7435136380,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#899 = d_date_sk#900) "
          },
          "33" : {
            "sign" : -303166545,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 21787077332313216,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [i_brand_id#1155, i_class_id#1157, i_category_id#1159], [store AS channel#736, i_brand_id#1155, i_class_id#1157, i_category_id#1159, sum((cast(ss_quantity#1134 as decimal(10,0)) * ss_list_price#1136)) AS sales#737, count(1) AS number_sales#738L], HashAggregate(keys=[i_brand_id#1155, i_class_id#1157, i_category_id#1159], functions=[sum((cast(ss_quantity#1134 as decimal(10,0)) * ss_list_price#1136)), count(1)]) "
          },
          "22" : {
            "sign" : -1695423935,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 353748,
            "rowCount" : 1438,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(d_year#968) AND ((d_year#968 >= 1998) AND (d_year#968 <= 2000))) AND isnotnull(d_date_sk#962)) "
          },
          "26" : {
            "sign" : 49678577,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 1727606976,
            "rowCount" : 71983624,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_quantity#1007, ws_list_price#1009, ws_sold_date_sk#1023] "
          },
          "13" : {
            "sign" : 2019201408,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 17256,
            "rowCount" : 1438,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#900] "
          },
          "24" : {
            "sign" : 17831375,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 1389912100,
            "rowCount" : 69495605,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_quantity#1007 AS quantity#750, ws_list_price#1009 AS list_price#751] "
          },
          "16" : {
            "sign" : 825651901,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 2770325240,
            "rowCount" : 138516262,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_quantity#945 AS quantity#748, cs_list_price#947 AS list_price#749] "
          },
          "5" : {
            "sign" : -1581118840,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 431424,
            "rowCount" : 5992,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [i_brand_id#1082, i_class_id#1084, i_category_id#1086], [store AS channel#730, i_brand_id#1082, i_class_id#1084, i_category_id#1086, sum((cast(ss_quantity#1061 as decimal(10,0)) * ss_list_price#1063)) AS sales#731, count(1) AS number_sales#732L], HashAggregate(keys=[i_brand_id#1082, i_class_id#1084, i_category_id#1086], functions=[sum((cast(ss_quantity#1061 as decimal(10,0)) * ss_list_price#1063)), count(1)]) "
          },
          "10" : {
            "sign" : 1776873494,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 6601088472,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_quantity#886, ss_list_price#888, ss_sold_date_sk#899] "
          },
          "21" : {
            "sign" : 406087876,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 17256,
            "rowCount" : 1438,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#962] "
          },
          "32" : {
            "sign" : -1109463710,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 21787077332313216,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(sales#737) AND (cast(sales#737 as decimal(32,6)) > cast(scalar-subquery#741 [] as decimal(32,6)))) "
          },
          "6" : {
            "sign" : -1809172647,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 24,
            "rowCount" : 1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [avg((cast(quantity#746 as decimal(10,0)) * list_price#747)) AS average_sales#752] "
          },
          "1" : {
            "sign" : 322006439,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
            "sizeInBytes" : 8355082712014130577408,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) LocalLimit Arguments: 100 "
          },
          "17" : {
            "sign" : 824386657,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 3878455336,
            "rowCount" : 138516262,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cs_sold_date_sk#961 = d_date_sk#962) "
          },
          "25" : {
            "sign" : 1503367439,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 1945876940,
            "rowCount" : 69495605,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ws_sold_date_sk#1023 = d_date_sk#1024) "
          },
          "14" : {
            "sign" : -2071970095,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 353748,
            "rowCount" : 1438,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(d_year#906) AND ((d_year#906 >= 1998) AND (d_year#906 <= 2000))) AND isnotnull(d_date_sk#900)) "
          },
          "31" : {
            "sign" : -502763688,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#1024, d_date_id#1025, d_date#1026, d_month_seq#1027, d_week_seq#1028, d_quarter_seq#1029, d_year#1030, d_dow#1031, d_moy#1032, d_dom#1033, d_qoy#1034, d_fy_year#1035, d_fy_quarter_seq#1036, d_fy_week_seq#1037, d_day_name#1038, d_quarter_name#1039, d_holiday#1040, d_weekend#1041, d_following_holiday#1042, d_first_dom#1043, d_last_dom#1044, d_same_day_ly#1045, d_same_day_lq#1046, d_current_day#1047, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "0" : {
            "sign" : 29737490,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
            "sizeInBytes" : 12000,
            "rowCount" : 100,
            "isRuntime" : false,
            "predicate" : " (unknown) GlobalLimit Arguments: 100 "
          },
          "20" : {
            "sign" : -70077436,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 29800787536,
            "rowCount" : 143273017,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [cs_sold_time_sk#928, cs_ship_date_sk#929, cs_bill_customer_sk#930, cs_bill_cdemo_sk#931, cs_bill_hdemo_sk#932, cs_bill_addr_sk#933, cs_ship_customer_sk#934, cs_ship_cdemo_sk#935, cs_ship_hdemo_sk#936, cs_ship_addr_sk#937, cs_call_center_sk#938, cs_catalog_page_sk#939, cs_ship_mode_sk#940, cs_warehouse_sk#941, cs_item_sk#942, cs_promo_sk#943, cs_order_number#944L, cs_quantity#945, cs_wholesale_cost#946, cs_list_price#947, cs_sales_price#948, cs_ext_discount_amt#949, cs_ext_sales_price#950, cs_ext_wholesale_cost#951, ... 10 more fields], `spark_catalog`.`tpcds_100`.`catalog_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "27" : {
            "sign" : -1902449141,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 14972593792,
            "rowCount" : 71983624,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(ws_sold_date_sk#1023) AND dynamicpruning#1290 [ws_sold_date_sk#1023]) "
          },
          "2" : {
            "sign" : 337351868,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 8355082712014130577408,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [i_brand_id#1082 ASC NULLS FIRST, i_class_id#1084 ASC NULLS FIRST, i_category_id#1086 ASC NULLS FIRST], true "
          },
          "18" : {
            "sign" : 1942236716,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 3438552408,
            "rowCount" : 143273017,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_quantity#945, cs_list_price#947, cs_sold_date_sk#961] "
          },
          "30" : {
            "sign" : -626435234,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 353748,
            "rowCount" : 1438,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(d_year#1030) AND ((d_year#1030 >= 1998) AND (d_year#1030 <= 2000))) AND isnotnull(d_date_sk#1024)) "
          },
          "7" : {
            "sign" : -1298322270,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Union",
            "sizeInBytes" : 9471049040,
            "rowCount" : 473552452,
            "isRuntime" : false,
            "predicate" : " (unknown) Union Arguments: false, false "
          },
          "29" : {
            "sign" : -1100969675,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 17256,
            "rowCount" : 1438,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#1024] "
          },
          "3" : {
            "sign" : 208564054,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 8355082712014130577408,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (((i_brand_id#1082 = i_brand_id#1155) AND (i_class_id#1084 = i_class_id#1157)) AND (i_category_id#1086 = i_category_id#1159)) "
          },
          "28" : {
            "sign" : 1698660872,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 14972593792,
            "rowCount" : 71983624,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ws_sold_time_sk#990, ws_ship_date_sk#991, ws_item_sk#992, ws_bill_customer_sk#993, ws_bill_cdemo_sk#994, ws_bill_hdemo_sk#995, ws_bill_addr_sk#996, ws_ship_customer_sk#997, ws_ship_cdemo_sk#998, ws_ship_hdemo_sk#999, ws_ship_addr_sk#1000, ws_web_page_sk#1001, ws_web_site_sk#1002, ws_ship_mode_sk#1003, ws_warehouse_sk#1004, ws_promo_sk#1005, ws_order_number#1006L, ws_quantity#1007, ws_wholesale_cost#1008, ws_list_price#1009, ws_sales_price#1010, ws_ext_discount_amt#1011, ws_ext_sales_price#1012, ws_ext_wholesale_cost#1013, ... 10 more fields], `spark_catalog`.`tpcds_100`.`web_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          }
        },
        "links" : [ {
          "fromId" : 5,
          "fromName" : "LogicalQueryStage",
          "toId" : 4,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 12,
          "fromName" : "LogicalRelation",
          "toId" : 11,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 15,
          "fromName" : "LogicalRelation",
          "toId" : 14,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 14,
          "fromName" : "Filter",
          "toId" : 13,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 13,
          "fromName" : "Project",
          "toId" : 11,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 11,
          "fromName" : "Filter",
          "toId" : 10,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "Project",
          "toId" : 9,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 13,
          "fromName" : "Project",
          "toId" : 9,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "Join",
          "toId" : 8,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "Project",
          "toId" : 7,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 20,
          "fromName" : "LogicalRelation",
          "toId" : 19,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 23,
          "fromName" : "LogicalRelation",
          "toId" : 22,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 22,
          "fromName" : "Filter",
          "toId" : 21,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 21,
          "fromName" : "Project",
          "toId" : 19,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 19,
          "fromName" : "Filter",
          "toId" : 18,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 18,
          "fromName" : "Project",
          "toId" : 17,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 21,
          "fromName" : "Project",
          "toId" : 17,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 17,
          "fromName" : "Join",
          "toId" : 16,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 16,
          "fromName" : "Project",
          "toId" : 7,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 28,
          "fromName" : "LogicalRelation",
          "toId" : 27,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 31,
          "fromName" : "LogicalRelation",
          "toId" : 30,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 30,
          "fromName" : "Filter",
          "toId" : 29,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 29,
          "fromName" : "Project",
          "toId" : 27,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 27,
          "fromName" : "Filter",
          "toId" : 26,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 26,
          "fromName" : "Project",
          "toId" : 25,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 29,
          "fromName" : "Project",
          "toId" : 25,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 25,
          "fromName" : "Join",
          "toId" : 24,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 24,
          "fromName" : "Project",
          "toId" : 7,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Union",
          "toId" : 6,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Aggregate",
          "toId" : 4,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 4,
          "fromName" : "Filter",
          "toId" : 3,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 33,
          "fromName" : "LogicalQueryStage",
          "toId" : 32,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Aggregate",
          "toId" : 32,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 32,
          "fromName" : "Filter",
          "toId" : 3,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Join",
          "toId" : 2,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "LocalLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "LocalLimit",
          "toId" : 0,
          "toName" : "GlobalLimit",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [i_brand_id#1082 ASC NULLS FIRST, i_class_id#1084 ASC NULLS FIRST, i_category_id#1086 ASC NULLS FIRST], true\n      +- Join Inner, (((i_brand_id#1082 = i_brand_id#1155) AND (i_class_id#1084 = i_class_id#1157)) AND (i_category_id#1086 = i_category_id#1159))\n         :- Filter (isnotnull(sales#731) AND (cast(sales#731 as decimal(32,6)) > cast(scalar-subquery#735 [] as decimal(32,6))))\n         :  :  +- Aggregate [avg((cast(quantity#746 as decimal(10,0)) * list_price#747)) AS average_sales#752]\n         :  :     +- Union false, false\n         :  :        :- Project [ss_quantity#886 AS quantity#746, ss_list_price#888 AS list_price#747]\n         :  :        :  +- Join Inner, (ss_sold_date_sk#899 = d_date_sk#900)\n         :  :        :     :- Project [ss_quantity#886, ss_list_price#888, ss_sold_date_sk#899]\n         :  :        :     :  +- Filter (isnotnull(ss_sold_date_sk#899) AND dynamicpruning#1288 [ss_sold_date_sk#899])\n         :  :        :     :     :  +- Project [d_date_sk#900]\n         :  :        :     :     :     +- Filter ((isnotnull(d_year#906) AND ((d_year#906 >= 1998) AND (d_year#906 <= 2000))) AND isnotnull(d_date_sk#900))\n         :  :        :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#900,d_date_id#901,d_date#902,d_month_seq#903,d_week_seq#904,d_quarter_seq#905,d_year#906,d_dow#907,d_moy#908,d_dom#909,d_qoy#910,d_fy_year#911,d_fy_quarter_seq#912,d_fy_week_seq#913,d_day_name#914,d_quarter_name#915,d_holiday#916,d_weekend#917,d_following_holiday#918,d_first_dom#919,d_last_dom#920,d_same_day_ly#921,d_same_day_lq#922,d_current_day#923,... 4 more fields] parquet\n         :  :        :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#877,ss_item_sk#878,ss_customer_sk#879,ss_cdemo_sk#880,ss_hdemo_sk#881,ss_addr_sk#882,ss_store_sk#883,ss_promo_sk#884,ss_ticket_number#885L,ss_quantity#886,ss_wholesale_cost#887,ss_list_price#888,ss_sales_price#889,ss_ext_discount_amt#890,ss_ext_sales_price#891,ss_ext_wholesale_cost#892,ss_ext_list_price#893,ss_ext_tax#894,ss_coupon_amt#895,ss_net_paid#896,ss_net_paid_inc_tax#897,ss_net_profit#898,ss_sold_date_sk#899] parquet\n         :  :        :     +- Project [d_date_sk#900]\n         :  :        :        +- Filter ((isnotnull(d_year#906) AND ((d_year#906 >= 1998) AND (d_year#906 <= 2000))) AND isnotnull(d_date_sk#900))\n         :  :        :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#900,d_date_id#901,d_date#902,d_month_seq#903,d_week_seq#904,d_quarter_seq#905,d_year#906,d_dow#907,d_moy#908,d_dom#909,d_qoy#910,d_fy_year#911,d_fy_quarter_seq#912,d_fy_week_seq#913,d_day_name#914,d_quarter_name#915,d_holiday#916,d_weekend#917,d_following_holiday#918,d_first_dom#919,d_last_dom#920,d_same_day_ly#921,d_same_day_lq#922,d_current_day#923,... 4 more fields] parquet\n         :  :        :- Project [cs_quantity#945 AS quantity#748, cs_list_price#947 AS list_price#749]\n         :  :        :  +- Join Inner, (cs_sold_date_sk#961 = d_date_sk#962)\n         :  :        :     :- Project [cs_quantity#945, cs_list_price#947, cs_sold_date_sk#961]\n         :  :        :     :  +- Filter (isnotnull(cs_sold_date_sk#961) AND dynamicpruning#1289 [cs_sold_date_sk#961])\n         :  :        :     :     :  +- Project [d_date_sk#962]\n         :  :        :     :     :     +- Filter ((isnotnull(d_year#968) AND ((d_year#968 >= 1998) AND (d_year#968 <= 2000))) AND isnotnull(d_date_sk#962))\n         :  :        :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#962,d_date_id#963,d_date#964,d_month_seq#965,d_week_seq#966,d_quarter_seq#967,d_year#968,d_dow#969,d_moy#970,d_dom#971,d_qoy#972,d_fy_year#973,d_fy_quarter_seq#974,d_fy_week_seq#975,d_day_name#976,d_quarter_name#977,d_holiday#978,d_weekend#979,d_following_holiday#980,d_first_dom#981,d_last_dom#982,d_same_day_ly#983,d_same_day_lq#984,d_current_day#985,... 4 more fields] parquet\n         :  :        :     :     +- Relation spark_catalog.tpcds_100.catalog_sales[cs_sold_time_sk#928,cs_ship_date_sk#929,cs_bill_customer_sk#930,cs_bill_cdemo_sk#931,cs_bill_hdemo_sk#932,cs_bill_addr_sk#933,cs_ship_customer_sk#934,cs_ship_cdemo_sk#935,cs_ship_hdemo_sk#936,cs_ship_addr_sk#937,cs_call_center_sk#938,cs_catalog_page_sk#939,cs_ship_mode_sk#940,cs_warehouse_sk#941,cs_item_sk#942,cs_promo_sk#943,cs_order_number#944L,cs_quantity#945,cs_wholesale_cost#946,cs_list_price#947,cs_sales_price#948,cs_ext_discount_amt#949,cs_ext_sales_price#950,cs_ext_wholesale_cost#951,... 10 more fields] parquet\n         :  :        :     +- Project [d_date_sk#962]\n         :  :        :        +- Filter ((isnotnull(d_year#968) AND ((d_year#968 >= 1998) AND (d_year#968 <= 2000))) AND isnotnull(d_date_sk#962))\n         :  :        :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#962,d_date_id#963,d_date#964,d_month_seq#965,d_week_seq#966,d_quarter_seq#967,d_year#968,d_dow#969,d_moy#970,d_dom#971,d_qoy#972,d_fy_year#973,d_fy_quarter_seq#974,d_fy_week_seq#975,d_day_name#976,d_quarter_name#977,d_holiday#978,d_weekend#979,d_following_holiday#980,d_first_dom#981,d_last_dom#982,d_same_day_ly#983,d_same_day_lq#984,d_current_day#985,... 4 more fields] parquet\n         :  :        +- Project [ws_quantity#1007 AS quantity#750, ws_list_price#1009 AS list_price#751]\n         :  :           +- Join Inner, (ws_sold_date_sk#1023 = d_date_sk#1024)\n         :  :              :- Project [ws_quantity#1007, ws_list_price#1009, ws_sold_date_sk#1023]\n         :  :              :  +- Filter (isnotnull(ws_sold_date_sk#1023) AND dynamicpruning#1290 [ws_sold_date_sk#1023])\n         :  :              :     :  +- Project [d_date_sk#1024]\n         :  :              :     :     +- Filter ((isnotnull(d_year#1030) AND ((d_year#1030 >= 1998) AND (d_year#1030 <= 2000))) AND isnotnull(d_date_sk#1024))\n         :  :              :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#1024,d_date_id#1025,d_date#1026,d_month_seq#1027,d_week_seq#1028,d_quarter_seq#1029,d_year#1030,d_dow#1031,d_moy#1032,d_dom#1033,d_qoy#1034,d_fy_year#1035,d_fy_quarter_seq#1036,d_fy_week_seq#1037,d_day_name#1038,d_quarter_name#1039,d_holiday#1040,d_weekend#1041,d_following_holiday#1042,d_first_dom#1043,d_last_dom#1044,d_same_day_ly#1045,d_same_day_lq#1046,d_current_day#1047,... 4 more fields] parquet\n         :  :              :     +- Relation spark_catalog.tpcds_100.web_sales[ws_sold_time_sk#990,ws_ship_date_sk#991,ws_item_sk#992,ws_bill_customer_sk#993,ws_bill_cdemo_sk#994,ws_bill_hdemo_sk#995,ws_bill_addr_sk#996,ws_ship_customer_sk#997,ws_ship_cdemo_sk#998,ws_ship_hdemo_sk#999,ws_ship_addr_sk#1000,ws_web_page_sk#1001,ws_web_site_sk#1002,ws_ship_mode_sk#1003,ws_warehouse_sk#1004,ws_promo_sk#1005,ws_order_number#1006L,ws_quantity#1007,ws_wholesale_cost#1008,ws_list_price#1009,ws_sales_price#1010,ws_ext_discount_amt#1011,ws_ext_sales_price#1012,ws_ext_wholesale_cost#1013,... 10 more fields] parquet\n         :  :              +- Project [d_date_sk#1024]\n         :  :                 +- Filter ((isnotnull(d_year#1030) AND ((d_year#1030 >= 1998) AND (d_year#1030 <= 2000))) AND isnotnull(d_date_sk#1024))\n         :  :                    +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#1024,d_date_id#1025,d_date#1026,d_month_seq#1027,d_week_seq#1028,d_quarter_seq#1029,d_year#1030,d_dow#1031,d_moy#1032,d_dom#1033,d_qoy#1034,d_fy_year#1035,d_fy_quarter_seq#1036,d_fy_week_seq#1037,d_day_name#1038,d_quarter_name#1039,d_holiday#1040,d_weekend#1041,d_following_holiday#1042,d_first_dom#1043,d_last_dom#1044,d_same_day_ly#1045,d_same_day_lq#1046,d_current_day#1047,... 4 more fields] parquet\n         :  +- LogicalQueryStage Aggregate [i_brand_id#1082, i_class_id#1084, i_category_id#1086], [store AS channel#730, i_brand_id#1082, i_class_id#1084, i_category_id#1086, sum((cast(ss_quantity#1061 as decimal(10,0)) * ss_list_price#1063)) AS sales#731, count(1) AS number_sales#732L], HashAggregate(keys=[i_brand_id#1082, i_class_id#1084, i_category_id#1086], functions=[sum((cast(ss_quantity#1061 as decimal(10,0)) * ss_list_price#1063)), count(1)])\n         +- Filter (isnotnull(sales#737) AND (cast(sales#737 as decimal(32,6)) > cast(scalar-subquery#741 [] as decimal(32,6))))\n            :  +- Aggregate [avg((cast(quantity#746 as decimal(10,0)) * list_price#747)) AS average_sales#752]\n            :     +- Union false, false\n            :        :- Project [ss_quantity#886 AS quantity#746, ss_list_price#888 AS list_price#747]\n            :        :  +- Join Inner, (ss_sold_date_sk#899 = d_date_sk#900)\n            :        :     :- Project [ss_quantity#886, ss_list_price#888, ss_sold_date_sk#899]\n            :        :     :  +- Filter (isnotnull(ss_sold_date_sk#899) AND dynamicpruning#1288 [ss_sold_date_sk#899])\n            :        :     :     :  +- Project [d_date_sk#900]\n            :        :     :     :     +- Filter ((isnotnull(d_year#906) AND ((d_year#906 >= 1998) AND (d_year#906 <= 2000))) AND isnotnull(d_date_sk#900))\n            :        :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#900,d_date_id#901,d_date#902,d_month_seq#903,d_week_seq#904,d_quarter_seq#905,d_year#906,d_dow#907,d_moy#908,d_dom#909,d_qoy#910,d_fy_year#911,d_fy_quarter_seq#912,d_fy_week_seq#913,d_day_name#914,d_quarter_name#915,d_holiday#916,d_weekend#917,d_following_holiday#918,d_first_dom#919,d_last_dom#920,d_same_day_ly#921,d_same_day_lq#922,d_current_day#923,... 4 more fields] parquet\n            :        :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#877,ss_item_sk#878,ss_customer_sk#879,ss_cdemo_sk#880,ss_hdemo_sk#881,ss_addr_sk#882,ss_store_sk#883,ss_promo_sk#884,ss_ticket_number#885L,ss_quantity#886,ss_wholesale_cost#887,ss_list_price#888,ss_sales_price#889,ss_ext_discount_amt#890,ss_ext_sales_price#891,ss_ext_wholesale_cost#892,ss_ext_list_price#893,ss_ext_tax#894,ss_coupon_amt#895,ss_net_paid#896,ss_net_paid_inc_tax#897,ss_net_profit#898,ss_sold_date_sk#899] parquet\n            :        :     +- Project [d_date_sk#900]\n            :        :        +- Filter ((isnotnull(d_year#906) AND ((d_year#906 >= 1998) AND (d_year#906 <= 2000))) AND isnotnull(d_date_sk#900))\n            :        :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#900,d_date_id#901,d_date#902,d_month_seq#903,d_week_seq#904,d_quarter_seq#905,d_year#906,d_dow#907,d_moy#908,d_dom#909,d_qoy#910,d_fy_year#911,d_fy_quarter_seq#912,d_fy_week_seq#913,d_day_name#914,d_quarter_name#915,d_holiday#916,d_weekend#917,d_following_holiday#918,d_first_dom#919,d_last_dom#920,d_same_day_ly#921,d_same_day_lq#922,d_current_day#923,... 4 more fields] parquet\n            :        :- Project [cs_quantity#945 AS quantity#748, cs_list_price#947 AS list_price#749]\n            :        :  +- Join Inner, (cs_sold_date_sk#961 = d_date_sk#962)\n            :        :     :- Project [cs_quantity#945, cs_list_price#947, cs_sold_date_sk#961]\n            :        :     :  +- Filter (isnotnull(cs_sold_date_sk#961) AND dynamicpruning#1289 [cs_sold_date_sk#961])\n            :        :     :     :  +- Project [d_date_sk#962]\n            :        :     :     :     +- Filter ((isnotnull(d_year#968) AND ((d_year#968 >= 1998) AND (d_year#968 <= 2000))) AND isnotnull(d_date_sk#962))\n            :        :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#962,d_date_id#963,d_date#964,d_month_seq#965,d_week_seq#966,d_quarter_seq#967,d_year#968,d_dow#969,d_moy#970,d_dom#971,d_qoy#972,d_fy_year#973,d_fy_quarter_seq#974,d_fy_week_seq#975,d_day_name#976,d_quarter_name#977,d_holiday#978,d_weekend#979,d_following_holiday#980,d_first_dom#981,d_last_dom#982,d_same_day_ly#983,d_same_day_lq#984,d_current_day#985,... 4 more fields] parquet\n            :        :     :     +- Relation spark_catalog.tpcds_100.catalog_sales[cs_sold_time_sk#928,cs_ship_date_sk#929,cs_bill_customer_sk#930,cs_bill_cdemo_sk#931,cs_bill_hdemo_sk#932,cs_bill_addr_sk#933,cs_ship_customer_sk#934,cs_ship_cdemo_sk#935,cs_ship_hdemo_sk#936,cs_ship_addr_sk#937,cs_call_center_sk#938,cs_catalog_page_sk#939,cs_ship_mode_sk#940,cs_warehouse_sk#941,cs_item_sk#942,cs_promo_sk#943,cs_order_number#944L,cs_quantity#945,cs_wholesale_cost#946,cs_list_price#947,cs_sales_price#948,cs_ext_discount_amt#949,cs_ext_sales_price#950,cs_ext_wholesale_cost#951,... 10 more fields] parquet\n            :        :     +- Project [d_date_sk#962]\n            :        :        +- Filter ((isnotnull(d_year#968) AND ((d_year#968 >= 1998) AND (d_year#968 <= 2000))) AND isnotnull(d_date_sk#962))\n            :        :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#962,d_date_id#963,d_date#964,d_month_seq#965,d_week_seq#966,d_quarter_seq#967,d_year#968,d_dow#969,d_moy#970,d_dom#971,d_qoy#972,d_fy_year#973,d_fy_quarter_seq#974,d_fy_week_seq#975,d_day_name#976,d_quarter_name#977,d_holiday#978,d_weekend#979,d_following_holiday#980,d_first_dom#981,d_last_dom#982,d_same_day_ly#983,d_same_day_lq#984,d_current_day#985,... 4 more fields] parquet\n            :        +- Project [ws_quantity#1007 AS quantity#750, ws_list_price#1009 AS list_price#751]\n            :           +- Join Inner, (ws_sold_date_sk#1023 = d_date_sk#1024)\n            :              :- Project [ws_quantity#1007, ws_list_price#1009, ws_sold_date_sk#1023]\n            :              :  +- Filter (isnotnull(ws_sold_date_sk#1023) AND dynamicpruning#1290 [ws_sold_date_sk#1023])\n            :              :     :  +- Project [d_date_sk#1024]\n            :              :     :     +- Filter ((isnotnull(d_year#1030) AND ((d_year#1030 >= 1998) AND (d_year#1030 <= 2000))) AND isnotnull(d_date_sk#1024))\n            :              :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#1024,d_date_id#1025,d_date#1026,d_month_seq#1027,d_week_seq#1028,d_quarter_seq#1029,d_year#1030,d_dow#1031,d_moy#1032,d_dom#1033,d_qoy#1034,d_fy_year#1035,d_fy_quarter_seq#1036,d_fy_week_seq#1037,d_day_name#1038,d_quarter_name#1039,d_holiday#1040,d_weekend#1041,d_following_holiday#1042,d_first_dom#1043,d_last_dom#1044,d_same_day_ly#1045,d_same_day_lq#1046,d_current_day#1047,... 4 more fields] parquet\n            :              :     +- Relation spark_catalog.tpcds_100.web_sales[ws_sold_time_sk#990,ws_ship_date_sk#991,ws_item_sk#992,ws_bill_customer_sk#993,ws_bill_cdemo_sk#994,ws_bill_hdemo_sk#995,ws_bill_addr_sk#996,ws_ship_customer_sk#997,ws_ship_cdemo_sk#998,ws_ship_hdemo_sk#999,ws_ship_addr_sk#1000,ws_web_page_sk#1001,ws_web_site_sk#1002,ws_ship_mode_sk#1003,ws_warehouse_sk#1004,ws_promo_sk#1005,ws_order_number#1006L,ws_quantity#1007,ws_wholesale_cost#1008,ws_list_price#1009,ws_sales_price#1010,ws_ext_discount_amt#1011,ws_ext_sales_price#1012,ws_ext_wholesale_cost#1013,... 10 more fields] parquet\n            :              +- Project [d_date_sk#1024]\n            :                 +- Filter ((isnotnull(d_year#1030) AND ((d_year#1030 >= 1998) AND (d_year#1030 <= 2000))) AND isnotnull(d_date_sk#1024))\n            :                    +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#1024,d_date_id#1025,d_date#1026,d_month_seq#1027,d_week_seq#1028,d_quarter_seq#1029,d_year#1030,d_dow#1031,d_moy#1032,d_dom#1033,d_qoy#1034,d_fy_year#1035,d_fy_quarter_seq#1036,d_fy_week_seq#1037,d_day_name#1038,d_quarter_name#1039,d_holiday#1040,d_weekend#1041,d_following_holiday#1042,d_first_dom#1043,d_last_dom#1044,d_same_day_ly#1045,d_same_day_lq#1046,d_current_day#1047,... 4 more fields] parquet\n            +- LogicalQueryStage Aggregate [i_brand_id#1155, i_class_id#1157, i_category_id#1159], [store AS channel#736, i_brand_id#1155, i_class_id#1157, i_category_id#1159, sum((cast(ss_quantity#1134 as decimal(10,0)) * ss_list_price#1136)) AS sales#737, count(1) AS number_sales#738L], HashAggregate(keys=[i_brand_id#1155, i_class_id#1157, i_category_id#1159], functions=[sum((cast(ss_quantity#1134 as decimal(10,0)) * ss_list_price#1136)), count(1)])\n"
      },
      "IM" : {
        "inputSizeInBytes" : 21787077332744640,
        "inputRowCount" : 5992
      },
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "StartTimeInMs" : 1702226700062,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 11436,
        "IOBytes" : {
          "Total" : 1476345255,
          "Details" : {
            "IR" : 1475721016,
            "IW" : 0,
            "SR" : 605091,
            "SW" : 19148
          }
        }
      }
    },
    "2" : {
      "LQP" : {
        "operators" : {
          "45" : {
            "sign" : -651341917,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 29800787536,
            "rowCount" : 143273017,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(cs_item_sk#112) AND isnotnull(cs_sold_date_sk#131)) AND dynamicpruning#1292 [cs_sold_date_sk#131]) "
          },
          "98" : {
            "sign" : -1972788865,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#877, ss_item_sk#878, ss_customer_sk#879, ss_cdemo_sk#880, ss_hdemo_sk#881, ss_addr_sk#882, ss_store_sk#883, ss_promo_sk#884, ss_ticket_number#885L, ss_quantity#886, ss_wholesale_cost#887, ss_list_price#888, ss_sales_price#889, ss_ext_discount_amt#890, ss_ext_sales_price#891, ss_ext_wholesale_cost#892, ss_ext_list_price#893, ss_ext_tax#894, ss_coupon_amt#895, ss_net_paid#896, ss_net_paid_inc_tax#897, ss_net_profit#898, ss_sold_date_sk#899], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "113" : {
            "sign" : -1902449141,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 14972593792,
            "rowCount" : 71983624,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(ws_sold_date_sk#1023) AND dynamicpruning#1290 [ws_sold_date_sk#1023]) "
          },
          "34" : {
            "sign" : -117080718,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 17256,
            "rowCount" : 1438,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#70] "
          },
          "67" : {
            "sign" : 579430964,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 86282466,
            "rowCount" : 202541,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(i_item_sk#1075) AND isnotnull(i_brand_id#1082)) AND isnotnull(i_class_id#1084)) AND isnotnull(i_category_id#1086)) "
          },
          "169" : {
            "sign" : 268592763,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 7291476,
            "rowCount" : 202541,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (((i_brand_id#32 = brand_id#742) AND (i_class_id#34 = class_id#743)) AND (i_category_id#36 = category_id#744)) "
          },
          "120" : {
            "sign" : -94739066,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 9192253472,
            "rowCount" : 287257921,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_quantity#1134, ss_list_price#1136, i_brand_id#1155, i_class_id#1157, i_category_id#1159] "
          },
          "153" : {
            "sign" : -41637094,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1057344,
            "rowCount" : 1096,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#799], BroadcastQueryStage 27 "
          },
          "93" : {
            "sign" : -1298322270,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Union",
            "sizeInBytes" : 9471049040,
            "rowCount" : 473552452,
            "isRuntime" : false,
            "predicate" : " (unknown) Union Arguments: false, false "
          },
          "158" : {
            "sign" : 1047357953,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 1577881038080,
            "rowCount" : 78894051904,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ws_sold_date_sk#165 = d_date_sk#849) "
          },
          "142" : {
            "sign" : 2101479604,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 4400725648,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#48, ss_sold_date_sk#69] "
          },
          "182" : {
            "sign" : -2085338542,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 3140544532640,
            "rowCount" : 157027226632,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cs_sold_date_sk#131 = d_date_sk#799) "
          },
          "147" : {
            "sign" : -1257988508,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 640671084658560000,
            "rowCount" : 32033554232928000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_brand_id#784, i_class_id#786, i_category_id#788] "
          },
          "12" : {
            "sign" : 571393713,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(ss_item_sk#1053) AND isnotnull(ss_sold_date_sk#1074)) AND dynamicpruning#1303 [ss_sold_date_sk#1074]) "
          },
          "66" : {
            "sign" : 1540331732,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 4860984,
            "rowCount" : 202541,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_item_sk#1075, i_brand_id#1082, i_class_id#1084, i_category_id#1086] "
          },
          "89" : {
            "sign" : 313580017,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 1577881038080,
            "rowCount" : 78894051904,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ws_sold_date_sk#165 = d_date_sk#849) "
          },
          "51" : {
            "sign" : -1343085724,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 18409216,
            "rowCount" : 204000,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_item_sk#777, i_brand_id#784, i_class_id#786, i_category_id#788], BroadcastQueryStage 4 "
          },
          "124" : {
            "sign" : 1235555785,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 7701269884,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (ss_item_sk#1126 = ss_item_sk#745) "
          },
          "84" : {
            "sign" : -41638117,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1057344,
            "rowCount" : 1096,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#799], BroadcastQueryStage 15 "
          },
          "8" : {
            "sign" : 773515021,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 46207619304,
            "rowCount" : 1925317471,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#1053, ss_quantity#1061, ss_list_price#1063] "
          },
          "73" : {
            "sign" : -100914599,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 5745158420,
            "rowCount" : 287257921,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_brand_id#762 AS brand_id#742, i_class_id#764 AS class_id#743, i_category_id#766 AS category_id#744] "
          },
          "164" : {
            "sign" : 317362133,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 4860984,
            "rowCount" : 202541,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (i_item_sk#1148 = ss_item_sk#745) "
          },
          "170" : {
            "sign" : 1187328974,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 2739200,
            "rowCount" : 136960,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (((brand_id#742 <=> i_brand_id#834) AND (class_id#743 <=> i_class_id#836)) AND (category_id#744 <=> i_category_id#838)) "
          },
          "78" : {
            "sign" : 1902271876,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 4860984,
            "rowCount" : 202541,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (((i_brand_id#762 <=> i_brand_id#784) AND (i_class_id#764 <=> i_class_id#786)) AND (i_category_id#766 <=> i_category_id#788)) "
          },
          "175" : {
            "sign" : 1894575332,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 6028994137760,
            "rowCount" : 301449706888,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#69 = d_date_sk#70) "
          },
          "19" : {
            "sign" : -1755539215,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#1209, d_date_id#1210, d_date#1211, d_month_seq#1212, d_week_seq#1213, d_quarter_seq#1214, d_year#1215, d_dow#1216, d_moy#1217, d_dom#1218, d_qoy#1219, d_fy_year#1220, d_fy_quarter_seq#1221, d_fy_week_seq#1222, d_day_name#1223, d_quarter_name#1224, d_holiday#1225, d_weekend#1226, d_following_holiday#1227, d_first_dom#1228, d_last_dom#1229, d_same_day_ly#1230, d_same_day_lq#1231, d_current_day#1232, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "100" : {
            "sign" : -2071970095,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 353748,
            "rowCount" : 1438,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(d_year#906) AND ((d_year#906 >= 1998) AND (d_year#906 <= 2000))) AND isnotnull(d_date_sk#900)) "
          },
          "23" : {
            "sign" : -1756391561,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 86282466,
            "rowCount" : 202541,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(i_brand_id#32) AND isnotnull(i_class_id#34)) AND isnotnull(i_category_id#36)) "
          },
          "62" : {
            "sign" : -353540391,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1057344,
            "rowCount" : 1096,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#849], BroadcastQueryStage 6 "
          },
          "135" : {
            "sign" : 2106213659,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 7291476,
            "rowCount" : 202541,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (((i_brand_id#32 = brand_id#742) AND (i_class_id#34 = class_id#743)) AND (i_category_id#36 = category_id#744)) "
          },
          "128" : {
            "sign" : 1096234976,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 876588,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#1170] "
          },
          "4" : {
            "sign" : -1346981704,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 10408960,
            "rowCount" : 136960,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(sales#731) AND (cast(sales#731 as decimal(32,6)) > cast(scalar-subquery#735 [] as decimal(32,6)))) "
          },
          "121" : {
            "sign" : 462098736,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 11490316840,
            "rowCount" : 287257921,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_item_sk#1126 = i_item_sk#1148) "
          },
          "88" : {
            "sign" : 1041545286,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 946728622848,
            "rowCount" : 78894051904,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_item_sk#134] "
          },
          "77" : {
            "sign" : -1598388943,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1057344,
            "rowCount" : 1096,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#70], BroadcastQueryStage 11 "
          },
          "40" : {
            "sign" : -1203051983,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 640671084658560000,
            "rowCount" : 32033554232928000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_brand_id#784, i_class_id#786, i_category_id#788] "
          },
          "110" : {
            "sign" : 17831375,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 1389912100,
            "rowCount" : 69495605,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_quantity#1007 AS quantity#750, ws_list_price#1009 AS list_price#751] "
          },
          "15" : {
            "sign" : 1866012666,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(d_week_seq#1101) AND (d_week_seq#1101 = scalar-subquery#734 [])) AND isnotnull(d_date_sk#1097)) "
          },
          "11" : {
            "sign" : 1222696026,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 7701269884,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#1053, ss_quantity#1061, ss_list_price#1063, ss_sold_date_sk#1074] "
          },
          "104" : {
            "sign" : 1942236716,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 3438552408,
            "rowCount" : 143273017,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_quantity#945, cs_list_price#947, cs_sold_date_sk#961] "
          },
          "90" : {
            "sign" : 1925146429,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1057344,
            "rowCount" : 1096,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#849], BroadcastQueryStage 19 "
          },
          "9" : {
            "sign" : -1260439034,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 61610159072,
            "rowCount" : 1925317471,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#1074 = d_date_sk#1097) "
          },
          "141" : {
            "sign" : 1894574278,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 6028994137760,
            "rowCount" : 301449706888,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#69 = d_date_sk#70) "
          },
          "139" : {
            "sign" : 2131203265,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 8043221788,
            "rowCount" : 287257921,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_item_sk#48 = i_item_sk#755) "
          },
          "181" : {
            "sign" : -1489163381,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 1884326719584,
            "rowCount" : 157027226632,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_item_sk#112] "
          },
          "132" : {
            "sign" : 1734827371,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 492,
            "rowCount" : 2,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(d_year#1243) AND isnotnull(d_moy#1245)) AND isnotnull(d_dom#1246)) AND (((d_year#1243 = 1998) AND (d_moy#1245 = 12)) AND (d_dom#1246 = 16))) "
          },
          "44" : {
            "sign" : 2058802089,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 2292368272,
            "rowCount" : 143273017,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_item_sk#112, cs_sold_date_sk#131] "
          },
          "33" : {
            "sign" : 1104597854,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#47, ss_item_sk#48, ss_customer_sk#49, ss_cdemo_sk#50, ss_hdemo_sk#51, ss_addr_sk#52, ss_store_sk#53, ss_promo_sk#54, ss_ticket_number#55L, ss_quantity#56, ss_wholesale_cost#57, ss_list_price#58, ss_sales_price#59, ss_ext_discount_amt#60, ss_ext_sales_price#61, ss_ext_wholesale_cost#62, ss_ext_list_price#63, ss_ext_tax#64, ss_coupon_amt#65, ss_net_paid#66, ss_net_paid_inc_tax#67, ss_net_profit#68, ss_sold_date_sk#69], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "117" : {
            "sign" : -502763688,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#1024, d_date_id#1025, d_date#1026, d_month_seq#1027, d_week_seq#1028, d_quarter_seq#1029, d_year#1030, d_dow#1031, d_moy#1032, d_dom#1033, d_qoy#1034, d_fy_year#1035, d_fy_quarter_seq#1036, d_fy_week_seq#1037, d_day_name#1038, d_quarter_name#1039, d_holiday#1040, d_weekend#1041, d_following_holiday#1042, d_first_dom#1043, d_last_dom#1044, d_same_day_ly#1045, d_same_day_lq#1046, d_current_day#1047, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "186" : {
            "sign" : 1556882039,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 450642824475648000,
            "rowCount" : 16094386588416000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ws_item_sk#134 = i_item_sk#827) "
          },
          "22" : {
            "sign" : 2089743597,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 4860984,
            "rowCount" : 202541,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_item_sk#25, i_brand_id#32, i_class_id#34, i_category_id#36] "
          },
          "56" : {
            "sign" : -1744486121,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 1151737984,
            "rowCount" : 71983624,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_item_sk#134, ws_sold_date_sk#165] "
          },
          "55" : {
            "sign" : 979946917,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 1577881038080,
            "rowCount" : 78894051904,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ws_sold_date_sk#165 = d_date_sk#849) "
          },
          "163" : {
            "sign" : -1902204624,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1048632,
            "rowCount" : 7,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#1170], BroadcastQueryStage 34 "
          },
          "26" : {
            "sign" : 425826216,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 2739200,
            "rowCount" : 136960,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [brand_id#742, class_id#743, category_id#744], [brand_id#742, class_id#743, category_id#744] "
          },
          "134" : {
            "sign" : -420665808,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 2430492,
            "rowCount" : 202541,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_item_sk#25 AS ss_item_sk#745] "
          },
          "50" : {
            "sign" : 414298850,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1057344,
            "rowCount" : 1096,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#799], BroadcastQueryStage 3 "
          },
          "123" : {
            "sign" : -1082464953,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 61610159072,
            "rowCount" : 1925317471,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#1147 = d_date_sk#1170) "
          },
          "174" : {
            "sign" : 899852841,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 3617396482656,
            "rowCount" : 301449706888,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#48] "
          },
          "37" : {
            "sign" : -1159939661,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1057344,
            "rowCount" : 1096,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#70], BroadcastQueryStage 0 "
          },
          "68" : {
            "sign" : 73332589,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 86904000,
            "rowCount" : 204000,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [i_item_sk#1075, i_item_id#1076, i_rec_start_date#1077, i_rec_end_date#1078, i_item_desc#1079, i_current_price#1080, i_wholesale_cost#1081, i_brand_id#1082, i_brand#1083, i_class_id#1084, i_class#1085, i_category_id#1086, i_category#1087, i_manufact_id#1088, i_manufact#1089, i_size#1090, i_formulation#1091, i_color#1092, i_units#1093, i_container#1094, i_manager_id#1095, i_product_name#1096], `spark_catalog`.`tpcds_100`.`item`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "166" : {
            "sign" : -1448453368,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 86282466,
            "rowCount" : 202541,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(i_item_sk#1148) AND isnotnull(i_brand_id#1155)) AND isnotnull(i_class_id#1157)) AND isnotnull(i_category_id#1159)) "
          },
          "61" : {
            "sign" : 1394482487,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#849, d_date_id#850, d_date#851, d_month_seq#852, d_week_seq#853, d_quarter_seq#854, d_year#855, d_dow#856, d_moy#857, d_dom#858, d_qoy#859, d_fy_year#860, d_fy_quarter_seq#861, d_fy_week_seq#862, d_day_name#863, d_quarter_name#864, d_holiday#865, d_weekend#866, d_following_holiday#867, d_first_dom#868, d_last_dom#869, d_same_day_ly#870, d_same_day_lq#871, d_current_day#872, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "107" : {
            "sign" : 406087876,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 17256,
            "rowCount" : 1438,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#962] "
          },
          "13" : {
            "sign" : 913239237,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#1052, ss_item_sk#1053, ss_customer_sk#1054, ss_cdemo_sk#1055, ss_hdemo_sk#1056, ss_addr_sk#1057, ss_store_sk#1058, ss_promo_sk#1059, ss_ticket_number#1060L, ss_quantity#1061, ss_wholesale_cost#1062, ss_list_price#1063, ss_sales_price#1064, ss_ext_discount_amt#1065, ss_ext_sales_price#1066, ss_ext_wholesale_cost#1067, ss_ext_list_price#1068, ss_ext_tax#1069, ss_coupon_amt#1070, ss_net_paid#1071, ss_net_paid_inc_tax#1072, ss_net_profit#1073, ss_sold_date_sk#1074], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "46" : {
            "sign" : -1958078640,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 29800787536,
            "rowCount" : 143273017,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [cs_sold_time_sk#98, cs_ship_date_sk#99, cs_bill_customer_sk#100, cs_bill_cdemo_sk#101, cs_bill_hdemo_sk#102, cs_bill_addr_sk#103, cs_ship_customer_sk#104, cs_ship_cdemo_sk#105, cs_ship_hdemo_sk#106, cs_ship_addr_sk#107, cs_call_center_sk#108, cs_catalog_page_sk#109, cs_ship_mode_sk#110, cs_warehouse_sk#111, cs_item_sk#112, cs_promo_sk#113, cs_order_number#114L, cs_quantity#115, cs_wholesale_cost#116, cs_list_price#117, cs_sales_price#118, cs_ext_discount_amt#119, cs_ext_sales_price#120, cs_ext_wholesale_cost#121, ... 10 more fields], `spark_catalog`.`tpcds_100`.`catalog_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "99" : {
            "sign" : 2019201408,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 17256,
            "rowCount" : 1438,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#900] "
          },
          "177" : {
            "sign" : -1809642069,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 4860984,
            "rowCount" : 202541,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (((i_brand_id#762 <=> i_brand_id#784) AND (i_class_id#764 <=> i_class_id#786)) AND (i_category_id#766 <=> i_category_id#788)) "
          },
          "24" : {
            "sign" : 2096275601,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 86904000,
            "rowCount" : 204000,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [i_item_sk#25, i_item_id#26, i_rec_start_date#27, i_rec_end_date#28, i_item_desc#29, i_current_price#30, i_wholesale_cost#31, i_brand_id#32, i_brand#33, i_class_id#34, i_class#35, i_category_id#36, i_category#37, i_manufact_id#38, i_manufact#39, i_size#40, i_formulation#41, i_color#42, i_units#43, i_container#44, i_manager_id#45, i_product_name#46], `spark_catalog`.`tpcds_100`.`item`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "155" : {
            "sign" : -905361319,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 321887731768320000,
            "rowCount" : 16094386588416000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_brand_id#834, i_class_id#836, i_category_id#838] "
          },
          "94" : {
            "sign" : 869525063,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 5310811700,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_quantity#886 AS quantity#746, ss_list_price#888 AS list_price#747] "
          },
          "83" : {
            "sign" : 267741808,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 3140544532640,
            "rowCount" : 157027226632,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cs_sold_date_sk#131 = d_date_sk#799) "
          },
          "35" : {
            "sign" : 1340377833,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 353748,
            "rowCount" : 1438,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(d_year#76) AND ((d_year#76 >= 1998) AND (d_year#76 <= 2000))) AND isnotnull(d_date_sk#70)) "
          },
          "16" : {
            "sign" : 682718368,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#1097, d_date_id#1098, d_date#1099, d_month_seq#1100, d_week_seq#1101, d_quarter_seq#1102, d_year#1103, d_dow#1104, d_moy#1105, d_dom#1106, d_qoy#1107, d_fy_year#1108, d_fy_quarter_seq#1109, d_fy_week_seq#1110, d_day_name#1111, d_quarter_name#1112, d_holiday#1113, d_weekend#1114, d_following_holiday#1115, d_first_dom#1116, d_last_dom#1117, d_same_day_ly#1118, d_same_day_lq#1119, d_current_day#1120, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "79" : {
            "sign" : 1549877842,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 4860984,
            "rowCount" : 202541,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_item_sk#755, i_brand_id#762, i_class_id#764, i_category_id#766], ShuffleQueryStage 13 "
          },
          "152" : {
            "sign" : -927692759,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 29800787536,
            "rowCount" : 143273017,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(cs_item_sk#112) AND isnotnull(cs_sold_date_sk#131)) AND dynamicpruning#1298 [cs_sold_date_sk#131]) "
          },
          "5" : {
            "sign" : -1885483354,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 10408960,
            "rowCount" : 136960,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [i_brand_id#1082, i_class_id#1084, i_category_id#1086], [store AS channel#730, i_brand_id#1082, i_class_id#1084, i_category_id#1086, sum((cast(ss_quantity#1061 as decimal(10,0)) * ss_list_price#1063)) AS sales#731, count(1) AS number_sales#732L] "
          },
          "103" : {
            "sign" : 824386657,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 3878455336,
            "rowCount" : 138516262,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cs_sold_date_sk#961 = d_date_sk#962) "
          },
          "112" : {
            "sign" : 49678577,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 1727606976,
            "rowCount" : 71983624,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_quantity#1007, ws_list_price#1009, ws_sold_date_sk#1023] "
          },
          "72" : {
            "sign" : 1287829704,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 2739200,
            "rowCount" : 136960,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [brand_id#742, class_id#743, category_id#744], [brand_id#742, class_id#743, category_id#744] "
          },
          "10" : {
            "sign" : 1732891687,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 7701269884,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (ss_item_sk#1053 = ss_item_sk#745) "
          },
          "159" : {
            "sign" : -1060113711,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 1151737984,
            "rowCount" : 71983624,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_item_sk#134, ws_sold_date_sk#165] "
          },
          "59" : {
            "sign" : 43276156,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 17256,
            "rowCount" : 1438,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#849] "
          },
          "144" : {
            "sign" : -1598387920,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1057344,
            "rowCount" : 1096,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#70], BroadcastQueryStage 23 "
          },
          "87" : {
            "sign" : -787102036,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 450642824475648000,
            "rowCount" : 16094386588416000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ws_item_sk#134 = i_item_sk#827) "
          },
          "48" : {
            "sign" : -1702477857,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 353748,
            "rowCount" : 1438,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(d_year#805) AND ((d_year#805 >= 1998) AND (d_year#805 <= 2000))) AND isnotnull(d_date_sk#799)) "
          },
          "21" : {
            "sign" : -1550482447,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 7291476,
            "rowCount" : 202541,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (((i_brand_id#32 = brand_id#742) AND (i_class_id#34 = class_id#743)) AND (i_category_id#36 = category_id#744)) "
          },
          "116" : {
            "sign" : -626435234,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 353748,
            "rowCount" : 1438,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(d_year#1030) AND ((d_year#1030 >= 1998) AND (d_year#1030 <= 2000))) AND isnotnull(d_date_sk#1024)) "
          },
          "76" : {
            "sign" : 174031885,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 6028994137760,
            "rowCount" : 301449706888,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#69 = d_date_sk#70) "
          },
          "138" : {
            "sign" : -5665685,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 5745158420,
            "rowCount" : 287257921,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_brand_id#762 AS brand_id#742, i_class_id#764 AS class_id#743, i_category_id#766 AS category_id#744] "
          },
          "54" : {
            "sign" : 1419071664,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 946728622848,
            "rowCount" : 78894051904,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_item_sk#134] "
          },
          "188" : {
            "sign" : 1047359007,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 1577881038080,
            "rowCount" : 78894051904,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ws_sold_date_sk#165 = d_date_sk#849) "
          },
          "43" : {
            "sign" : 1948299501,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 3140544532640,
            "rowCount" : 157027226632,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cs_sold_date_sk#131 = d_date_sk#799) "
          },
          "148" : {
            "sign" : 93782990,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 896939518521984000,
            "rowCount" : 32033554232928000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cs_item_sk#112 = i_item_sk#777) "
          },
          "127" : {
            "sign" : 1179432008,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#1125, ss_item_sk#1126, ss_customer_sk#1127, ss_cdemo_sk#1128, ss_hdemo_sk#1129, ss_addr_sk#1130, ss_store_sk#1131, ss_promo_sk#1132, ss_ticket_number#1133L, ss_quantity#1134, ss_wholesale_cost#1135, ss_list_price#1136, ss_sales_price#1137, ss_ext_discount_amt#1138, ss_ext_sales_price#1139, ss_ext_wholesale_cost#1140, ss_ext_list_price#1141, ss_ext_tax#1142, ss_coupon_amt#1143, ss_net_paid#1144, ss_net_paid_inc_tax#1145, ss_net_profit#1146, ss_sold_date_sk#1147], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "65" : {
            "sign" : -296635603,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 4860984,
            "rowCount" : 202541,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (i_item_sk#1075 = ss_item_sk#745) "
          },
          "71" : {
            "sign" : -2141566297,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 2739200,
            "rowCount" : 136960,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (((brand_id#742 <=> i_brand_id#834) AND (class_id#743 <=> i_class_id#836)) AND (category_id#744 <=> i_category_id#838)) "
          },
          "57" : {
            "sign" : -899561730,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 14972593792,
            "rowCount" : 71983624,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(ws_item_sk#134) AND isnotnull(ws_sold_date_sk#165)) AND dynamicpruning#1293 [ws_sold_date_sk#165]) "
          },
          "108" : {
            "sign" : -1695423935,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 353748,
            "rowCount" : 1438,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(d_year#968) AND ((d_year#968 >= 1998) AND (d_year#968 <= 2000))) AND isnotnull(d_date_sk#962)) "
          },
          "32" : {
            "sign" : -1052942334,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(ss_item_sk#48) AND isnotnull(ss_sold_date_sk#69)) AND dynamicpruning#1291 [ss_sold_date_sk#69]) "
          },
          "185" : {
            "sign" : -32600679,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 321887731768320000,
            "rowCount" : 16094386588416000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_brand_id#834, i_class_id#836, i_category_id#838] "
          },
          "80" : {
            "sign" : -1712945526,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 640671084658560000,
            "rowCount" : 32033554232928000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_brand_id#784, i_class_id#786, i_category_id#788] "
          },
          "106" : {
            "sign" : -70077436,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 29800787536,
            "rowCount" : 143273017,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [cs_sold_time_sk#928, cs_ship_date_sk#929, cs_bill_customer_sk#930, cs_bill_cdemo_sk#931, cs_bill_hdemo_sk#932, cs_bill_addr_sk#933, cs_ship_customer_sk#934, cs_ship_cdemo_sk#935, cs_ship_hdemo_sk#936, cs_ship_addr_sk#937, cs_call_center_sk#938, cs_catalog_page_sk#939, cs_ship_mode_sk#940, cs_warehouse_sk#941, cs_item_sk#942, cs_promo_sk#943, cs_order_number#944L, cs_quantity#945, cs_wholesale_cost#946, cs_list_price#947, cs_sales_price#948, cs_ext_discount_amt#949, cs_ext_sales_price#950, cs_ext_wholesale_cost#951, ... 10 more fields], `spark_catalog`.`tpcds_100`.`catalog_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "137" : {
            "sign" : -2143978488,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 2739200,
            "rowCount" : 136960,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [brand_id#742, class_id#743, category_id#744], [brand_id#742, class_id#743, category_id#744] "
          },
          "82" : {
            "sign" : -452769443,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 1884326719584,
            "rowCount" : 157027226632,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_item_sk#112] "
          },
          "49" : {
            "sign" : -724542004,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#799, d_date_id#800, d_date#801, d_month_seq#802, d_week_seq#803, d_quarter_seq#804, d_year#805, d_dow#806, d_moy#807, d_dom#808, d_qoy#809, d_fy_year#810, d_fy_quarter_seq#811, d_fy_week_seq#812, d_day_name#813, d_quarter_name#814, d_holiday#815, d_weekend#816, d_following_holiday#817, d_first_dom#818, d_last_dom#819, d_same_day_ly#820, d_same_day_lq#821, d_current_day#822, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "6" : {
            "sign" : 84519409,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 9192253472,
            "rowCount" : 287257921,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_quantity#1061, ss_list_price#1063, i_brand_id#1082, i_class_id#1084, i_category_id#1086] "
          },
          "126" : {
            "sign" : -604473204,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(ss_item_sk#1126) AND isnotnull(ss_sold_date_sk#1147)) AND dynamicpruning#1310 [ss_sold_date_sk#1147]) "
          },
          "36" : {
            "sign" : -232749464,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#70, d_date_id#71, d_date#72, d_month_seq#73, d_week_seq#74, d_quarter_seq#75, d_year#76, d_dow#77, d_moy#78, d_dom#79, d_qoy#80, d_fy_year#81, d_fy_quarter_seq#82, d_fy_week_seq#83, d_day_name#84, d_quarter_name#85, d_holiday#86, d_weekend#87, d_following_holiday#88, d_first_dom#89, d_last_dom#90, d_same_day_ly#91, d_same_day_lq#92, d_current_day#93, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "1" : {
            "sign" : 262950065,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
            "sizeInBytes" : 19722240,
            "rowCount" : 136960,
            "isRuntime" : false,
            "predicate" : " (unknown) LocalLimit Arguments: 100 "
          },
          "39" : {
            "sign" : 1019827343,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 4860984,
            "rowCount" : 202541,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_item_sk#755, i_brand_id#762, i_class_id#764, i_category_id#766], ShuffleQueryStage 1 "
          },
          "140" : {
            "sign" : 899851787,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 3617396482656,
            "rowCount" : 301449706888,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#48] "
          },
          "173" : {
            "sign" : -364012639,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 8043221788,
            "rowCount" : 287257921,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_item_sk#48 = i_item_sk#755) "
          },
          "17" : {
            "sign" : -2061501032,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 36,
            "rowCount" : 3,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_week_seq#1213] "
          },
          "180" : {
            "sign" : 1689598496,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 896939518521984000,
            "rowCount" : 32033554232928000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cs_item_sk#112 = i_item_sk#777) "
          },
          "25" : {
            "sign" : 860974026,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 2739200,
            "rowCount" : 136960,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (((brand_id#742 <=> i_brand_id#834) AND (class_id#743 <=> i_class_id#836)) AND (category_id#744 <=> i_category_id#838)) "
          },
          "60" : {
            "sign" : 2026129195,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 353748,
            "rowCount" : 1438,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(d_year#855) AND ((d_year#855 >= 1998) AND (d_year#855 <= 2000))) AND isnotnull(d_date_sk#849)) "
          },
          "14" : {
            "sign" : 707519831,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 876588,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#1097] "
          },
          "133" : {
            "sign" : 813769211,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#1237, d_date_id#1238, d_date#1239, d_month_seq#1240, d_week_seq#1241, d_quarter_seq#1242, d_year#1243, d_dow#1244, d_moy#1245, d_dom#1246, d_qoy#1247, d_fy_year#1248, d_fy_quarter_seq#1249, d_fy_week_seq#1250, d_day_name#1251, d_quarter_name#1252, d_holiday#1253, d_weekend#1254, d_following_holiday#1255, d_first_dom#1256, d_last_dom#1257, d_same_day_ly#1258, d_same_day_lq#1259, d_current_day#1260, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "47" : {
            "sign" : 2083558648,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 17256,
            "rowCount" : 1438,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#799] "
          },
          "122" : {
            "sign" : -392156417,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 46207619304,
            "rowCount" : 1925317471,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#1126, ss_quantity#1134, ss_list_price#1136] "
          },
          "111" : {
            "sign" : 1503367439,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 1945876940,
            "rowCount" : 69495605,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ws_sold_date_sk#1023 = d_date_sk#1024) "
          },
          "102" : {
            "sign" : 825651901,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 2770325240,
            "rowCount" : 138516262,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_quantity#945 AS quantity#748, cs_list_price#947 AS list_price#749] "
          },
          "31" : {
            "sign" : -948624390,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 4400725648,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#48, ss_sold_date_sk#69] "
          },
          "96" : {
            "sign" : 1776873494,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 6601088472,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_quantity#886, ss_list_price#888, ss_sold_date_sk#899] "
          },
          "69" : {
            "sign" : 2089449843,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 2430492,
            "rowCount" : 202541,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_item_sk#25 AS ss_item_sk#745] "
          },
          "162" : {
            "sign" : 682579408,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 18409216,
            "rowCount" : 204000,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_item_sk#827, i_brand_id#834, i_class_id#836, i_category_id#838], BroadcastQueryStage 33 "
          },
          "151" : {
            "sign" : -641764561,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 2292368272,
            "rowCount" : 143273017,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_item_sk#112, cs_sold_date_sk#131] "
          },
          "95" : {
            "sign" : -1804794945,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 7435136380,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#899 = d_date_sk#900) "
          },
          "190" : {
            "sign" : 682580462,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 18409216,
            "rowCount" : 204000,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_item_sk#827, i_brand_id#834, i_class_id#836, i_category_id#838], BroadcastQueryStage 46 "
          },
          "58" : {
            "sign" : 1159919426,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 14972593792,
            "rowCount" : 71983624,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ws_sold_time_sk#132, ws_ship_date_sk#133, ws_item_sk#134, ws_bill_customer_sk#135, ws_bill_cdemo_sk#136, ws_bill_hdemo_sk#137, ws_bill_addr_sk#138, ws_ship_customer_sk#139, ws_ship_cdemo_sk#140, ws_ship_hdemo_sk#141, ws_ship_addr_sk#142, ws_web_page_sk#143, ws_web_site_sk#144, ws_ship_mode_sk#145, ws_warehouse_sk#146, ws_promo_sk#147, ws_order_number#148L, ws_quantity#149, ws_wholesale_cost#150, ws_list_price#151, ws_sales_price#152, ws_ext_discount_amt#153, ws_ext_sales_price#154, ws_ext_wholesale_cost#155, ... 10 more fields], `spark_catalog`.`tpcds_100`.`web_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "145" : {
            "sign" : -761977349,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 4860984,
            "rowCount" : 202541,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (((i_brand_id#762 <=> i_brand_id#784) AND (i_class_id#764 <=> i_class_id#786)) AND (i_category_id#766 <=> i_category_id#788)) "
          },
          "184" : {
            "sign" : 1314016766,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 18409216,
            "rowCount" : 204000,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_item_sk#777, i_brand_id#784, i_class_id#786, i_category_id#788], BroadcastQueryStage 42 "
          },
          "64" : {
            "sign" : -21562714,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1048632,
            "rowCount" : 7,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#1097], BroadcastQueryStage 9 "
          },
          "53" : {
            "sign" : -1288357171,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 450642824475648000,
            "rowCount" : 16094386588416000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ws_item_sk#134 = i_item_sk#827) "
          },
          "42" : {
            "sign" : -845889440,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 1884326719584,
            "rowCount" : 157027226632,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_item_sk#112] "
          },
          "75" : {
            "sign" : -1868509690,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 3617396482656,
            "rowCount" : 301449706888,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#48] "
          },
          "115" : {
            "sign" : -1100969675,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 17256,
            "rowCount" : 1438,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#1024] "
          },
          "156" : {
            "sign" : 2054093883,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 450642824475648000,
            "rowCount" : 16094386588416000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ws_item_sk#134 = i_item_sk#827) "
          },
          "109" : {
            "sign" : -169490734,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#962, d_date_id#963, d_date#964, d_month_seq#965, d_week_seq#966, d_quarter_seq#967, d_year#968, d_dow#969, d_moy#970, d_dom#971, d_qoy#972, d_fy_year#973, d_fy_quarter_seq#974, d_fy_week_seq#975, d_day_name#976, d_quarter_name#977, d_holiday#978, d_weekend#979, d_following_holiday#980, d_first_dom#981, d_last_dom#982, d_same_day_ly#983, d_same_day_lq#984, d_current_day#985, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "189" : {
            "sign" : 1925149157,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1057344,
            "rowCount" : 1096,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#849], BroadcastQueryStage 44 "
          },
          "0" : {
            "sign" : -85517976,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
            "sizeInBytes" : 12000,
            "rowCount" : 100,
            "isRuntime" : false,
            "predicate" : " (unknown) GlobalLimit Arguments: 100 "
          },
          "149" : {
            "sign" : -1489165086,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 1884326719584,
            "rowCount" : 157027226632,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_item_sk#112] "
          },
          "20" : {
            "sign" : -1211030058,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 2430492,
            "rowCount" : 202541,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_item_sk#25 AS ss_item_sk#745] "
          },
          "178" : {
            "sign" : 1549879919,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 4860984,
            "rowCount" : 202541,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_item_sk#755, i_brand_id#762, i_class_id#764, i_category_id#766], ShuffleQueryStage 38 "
          },
          "27" : {
            "sign" : 2037269027,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 5745158420,
            "rowCount" : 287257921,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_brand_id#762 AS brand_id#742, i_class_id#764 AS class_id#743, i_category_id#766 AS category_id#744] "
          },
          "70" : {
            "sign" : 1632014432,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 7291476,
            "rowCount" : 202541,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (((i_brand_id#32 = brand_id#742) AND (i_class_id#34 = class_id#743)) AND (i_category_id#36 = category_id#744)) "
          },
          "2" : {
            "sign" : -338500930,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 19722240,
            "rowCount" : 136960,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [i_brand_id#1082 ASC NULLS FIRST, i_class_id#1084 ASC NULLS FIRST, i_category_id#1086 ASC NULLS FIRST], true "
          },
          "86" : {
            "sign" : 508980638,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 321887731768320000,
            "rowCount" : 16094386588416000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_brand_id#834, i_class_id#836, i_category_id#838] "
          },
          "38" : {
            "sign" : -609531122,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 4860984,
            "rowCount" : 202541,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (((i_brand_id#762 <=> i_brand_id#784) AND (i_class_id#764 <=> i_class_id#786)) AND (i_category_id#766 <=> i_category_id#788)) "
          },
          "81" : {
            "sign" : -1233103082,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 896939518521984000,
            "rowCount" : 32033554232928000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cs_item_sk#112 = i_item_sk#777) "
          },
          "167" : {
            "sign" : -1752719423,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 86904000,
            "rowCount" : 204000,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [i_item_sk#1148, i_item_id#1149, i_rec_start_date#1150, i_rec_end_date#1151, i_item_desc#1152, i_current_price#1153, i_wholesale_cost#1154, i_brand_id#1155, i_brand#1156, i_class_id#1157, i_class#1158, i_category_id#1159, i_category#1160, i_manufact_id#1161, i_manufact#1162, i_size#1163, i_formulation#1164, i_color#1165, i_units#1166, i_container#1167, i_manager_id#1168, i_product_name#1169], `spark_catalog`.`tpcds_100`.`item`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "160" : {
            "sign" : 304988088,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 14972593792,
            "rowCount" : 71983624,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(ws_item_sk#134) AND isnotnull(ws_sold_date_sk#165)) AND dynamicpruning#1299 [ws_sold_date_sk#165]) "
          },
          "118" : {
            "sign" : 1937420196,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 10408960,
            "rowCount" : 136960,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(sales#737) AND (cast(sales#737 as decimal(32,6)) > cast(scalar-subquery#741 [] as decimal(32,6)))) "
          },
          "187" : {
            "sign" : -990954328,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 946728622848,
            "rowCount" : 78894051904,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_item_sk#134] "
          },
          "171" : {
            "sign" : 1806035624,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 2739200,
            "rowCount" : 136960,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [brand_id#742, class_id#743, category_id#744], [brand_id#742, class_id#743, category_id#744] "
          },
          "165" : {
            "sign" : -1062759686,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 4860984,
            "rowCount" : 202541,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_item_sk#1148, i_brand_id#1155, i_class_id#1157, i_category_id#1159] "
          },
          "92" : {
            "sign" : -1809172647,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 24,
            "rowCount" : 1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [avg((cast(quantity#746 as decimal(10,0)) * list_price#747)) AS average_sales#752] "
          },
          "125" : {
            "sign" : -303911461,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 7701269884,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#1126, ss_quantity#1134, ss_list_price#1136, ss_sold_date_sk#1147] "
          },
          "18" : {
            "sign" : -1305353512,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 738,
            "rowCount" : 3,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(d_year#1215) AND isnotnull(d_moy#1217)) AND isnotnull(d_dom#1218)) AND (((d_year#1215 = 1999) AND (d_moy#1217 = 12)) AND (d_dom#1218 = 16))) "
          },
          "101" : {
            "sign" : -820074406,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#900, d_date_id#901, d_date#902, d_month_seq#903, d_week_seq#904, d_quarter_seq#905, d_year#906, d_dow#907, d_moy#908, d_dom#909, d_qoy#910, d_fy_year#911, d_fy_quarter_seq#912, d_fy_week_seq#913, d_day_name#914, d_quarter_name#915, d_holiday#916, d_weekend#917, d_following_holiday#918, d_first_dom#919, d_last_dom#920, d_same_day_ly#921, d_same_day_lq#922, d_current_day#923, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "154" : {
            "sign" : 1314015061,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 18409216,
            "rowCount" : 204000,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_item_sk#777, i_brand_id#784, i_class_id#786, i_category_id#788], BroadcastQueryStage 29 "
          },
          "183" : {
            "sign" : -41635389,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1057344,
            "rowCount" : 1096,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#799], BroadcastQueryStage 40 "
          },
          "30" : {
            "sign" : 1668181847,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 6028994137760,
            "rowCount" : 301449706888,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#69 = d_date_sk#70) "
          },
          "7" : {
            "sign" : -412414562,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 11490316840,
            "rowCount" : 287257921,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_item_sk#1053 = i_item_sk#1075) "
          },
          "143" : {
            "sign" : -109048900,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(ss_item_sk#48) AND isnotnull(ss_sold_date_sk#69)) AND dynamicpruning#1297 [ss_sold_date_sk#69]) "
          },
          "97" : {
            "sign" : 1377797290,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(ss_sold_date_sk#899) AND dynamicpruning#1288 [ss_sold_date_sk#899]) "
          },
          "130" : {
            "sign" : 683629544,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#1170, d_date_id#1171, d_date#1172, d_month_seq#1173, d_week_seq#1174, d_quarter_seq#1175, d_year#1176, d_dow#1177, d_moy#1178, d_dom#1179, d_qoy#1180, d_fy_year#1181, d_fy_quarter_seq#1182, d_fy_week_seq#1183, d_day_name#1184, d_quarter_name#1185, d_holiday#1186, d_weekend#1187, d_following_holiday#1188, d_first_dom#1189, d_last_dom#1190, d_same_day_ly#1191, d_same_day_lq#1192, d_current_day#1193, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "179" : {
            "sign" : -1362040636,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 640671084658560000,
            "rowCount" : 32033554232928000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_brand_id#784, i_class_id#786, i_category_id#788] "
          },
          "114" : {
            "sign" : 1698660872,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 14972593792,
            "rowCount" : 71983624,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ws_sold_time_sk#990, ws_ship_date_sk#991, ws_item_sk#992, ws_bill_customer_sk#993, ws_bill_cdemo_sk#994, ws_bill_hdemo_sk#995, ws_bill_addr_sk#996, ws_ship_customer_sk#997, ws_ship_cdemo_sk#998, ws_ship_hdemo_sk#999, ws_ship_addr_sk#1000, ws_web_page_sk#1001, ws_web_site_sk#1002, ws_ship_mode_sk#1003, ws_warehouse_sk#1004, ws_promo_sk#1005, ws_order_number#1006L, ws_quantity#1007, ws_wholesale_cost#1008, ws_list_price#1009, ws_sales_price#1010, ws_ext_discount_amt#1011, ws_ext_sales_price#1012, ws_ext_wholesale_cost#1013, ... 10 more fields], `spark_catalog`.`tpcds_100`.`web_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "129" : {
            "sign" : -1689547051,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(d_week_seq#1174) AND (d_week_seq#1174 = scalar-subquery#740 [])) AND isnotnull(d_date_sk#1170)) "
          },
          "29" : {
            "sign" : -1722842562,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 3617396482656,
            "rowCount" : 301449706888,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#48] "
          },
          "41" : {
            "sign" : -1292599069,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 896939518521984000,
            "rowCount" : 32033554232928000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cs_item_sk#112 = i_item_sk#777) "
          },
          "168" : {
            "sign" : 1424371610,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 2430492,
            "rowCount" : 202541,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_item_sk#25 AS ss_item_sk#745] "
          },
          "105" : {
            "sign" : 1500374164,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 29800787536,
            "rowCount" : 143273017,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(cs_sold_date_sk#961) AND dynamicpruning#1289 [cs_sold_date_sk#961]) "
          },
          "63" : {
            "sign" : -255075860,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 18409216,
            "rowCount" : 204000,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_item_sk#827, i_brand_id#834, i_class_id#836, i_category_id#838], BroadcastQueryStage 8 "
          },
          "150" : {
            "sign" : -2085340247,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 3140544532640,
            "rowCount" : 157027226632,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cs_sold_date_sk#131 = d_date_sk#799) "
          },
          "3" : {
            "sign" : -1128280094,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 19722240,
            "rowCount" : 136960,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (((i_brand_id#1082 = i_brand_id#1155) AND (i_class_id#1084 = i_class_id#1157)) AND (i_category_id#1086 = i_category_id#1159)) "
          },
          "74" : {
            "sign" : -1971885887,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 8043221788,
            "rowCount" : 287257921,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_item_sk#48 = i_item_sk#755) "
          },
          "91" : {
            "sign" : 682578385,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 18409216,
            "rowCount" : 204000,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_item_sk#827, i_brand_id#834, i_class_id#836, i_category_id#838], BroadcastQueryStage 21 "
          },
          "52" : {
            "sign" : 1157999275,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 321887731768320000,
            "rowCount" : 16094386588416000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_brand_id#834, i_class_id#836, i_category_id#838] "
          },
          "85" : {
            "sign" : 1314014038,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 18409216,
            "rowCount" : 204000,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_item_sk#777, i_brand_id#784, i_class_id#786, i_category_id#788], BroadcastQueryStage 17 "
          },
          "172" : {
            "sign" : -971010691,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 5745158420,
            "rowCount" : 287257921,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_brand_id#762 AS brand_id#742, i_class_id#764 AS class_id#743, i_category_id#766 AS category_id#744] "
          },
          "131" : {
            "sign" : -79282860,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 24,
            "rowCount" : 2,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_week_seq#1241] "
          },
          "28" : {
            "sign" : -347247775,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 8043221788,
            "rowCount" : 287257921,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_item_sk#48 = i_item_sk#755) "
          },
          "119" : {
            "sign" : 2075978237,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 10408960,
            "rowCount" : 136960,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [i_brand_id#1155, i_class_id#1157, i_category_id#1159], [store AS channel#736, i_brand_id#1155, i_class_id#1157, i_category_id#1159, sum((cast(ss_quantity#1134 as decimal(10,0)) * ss_list_price#1136)) AS sales#737, count(1) AS number_sales#738L] "
          },
          "161" : {
            "sign" : 1925148103,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1057344,
            "rowCount" : 1096,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#849], BroadcastQueryStage 31 "
          },
          "136" : {
            "sign" : 704990116,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 2739200,
            "rowCount" : 136960,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (((brand_id#742 <=> i_brand_id#834) AND (class_id#743 <=> i_class_id#836)) AND (category_id#744 <=> i_category_id#838)) "
          },
          "157" : {
            "sign" : -990955382,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 946728622848,
            "rowCount" : 78894051904,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_item_sk#134] "
          },
          "146" : {
            "sign" : 1549878865,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 4860984,
            "rowCount" : 202541,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_item_sk#755, i_brand_id#762, i_class_id#764, i_category_id#766], ShuffleQueryStage 25 "
          },
          "176" : {
            "sign" : -1598386866,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1057344,
            "rowCount" : 1096,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#70], BroadcastQueryStage 36 "
          }
        },
        "links" : [ {
          "fromId" : 13,
          "fromName" : "LogicalRelation",
          "toId" : 12,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 16,
          "fromName" : "LogicalRelation",
          "toId" : 15,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 19,
          "fromName" : "LogicalRelation",
          "toId" : 18,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 18,
          "fromName" : "Filter",
          "toId" : 17,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 17,
          "fromName" : "Project",
          "toId" : 15,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 15,
          "fromName" : "Filter",
          "toId" : 14,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 14,
          "fromName" : "Project",
          "toId" : 12,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 12,
          "fromName" : "Filter",
          "toId" : 11,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "Project",
          "toId" : 10,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 24,
          "fromName" : "LogicalRelation",
          "toId" : 23,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 23,
          "fromName" : "Filter",
          "toId" : 22,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 22,
          "fromName" : "Project",
          "toId" : 21,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 33,
          "fromName" : "LogicalRelation",
          "toId" : 32,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 36,
          "fromName" : "LogicalRelation",
          "toId" : 35,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 35,
          "fromName" : "Filter",
          "toId" : 34,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 34,
          "fromName" : "Project",
          "toId" : 32,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 32,
          "fromName" : "Filter",
          "toId" : 31,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 31,
          "fromName" : "Project",
          "toId" : 30,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 37,
          "fromName" : "LogicalQueryStage",
          "toId" : 30,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 30,
          "fromName" : "Join",
          "toId" : 29,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 29,
          "fromName" : "Project",
          "toId" : 28,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 39,
          "fromName" : "LogicalQueryStage",
          "toId" : 38,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 46,
          "fromName" : "LogicalRelation",
          "toId" : 45,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 49,
          "fromName" : "LogicalRelation",
          "toId" : 48,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 48,
          "fromName" : "Filter",
          "toId" : 47,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 47,
          "fromName" : "Project",
          "toId" : 45,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 45,
          "fromName" : "Filter",
          "toId" : 44,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 44,
          "fromName" : "Project",
          "toId" : 43,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 50,
          "fromName" : "LogicalQueryStage",
          "toId" : 43,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 43,
          "fromName" : "Join",
          "toId" : 42,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 42,
          "fromName" : "Project",
          "toId" : 41,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 51,
          "fromName" : "LogicalQueryStage",
          "toId" : 41,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 41,
          "fromName" : "Join",
          "toId" : 40,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 40,
          "fromName" : "Project",
          "toId" : 38,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 38,
          "fromName" : "Join",
          "toId" : 28,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 28,
          "fromName" : "Join",
          "toId" : 27,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 27,
          "fromName" : "Project",
          "toId" : 26,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 26,
          "fromName" : "Aggregate",
          "toId" : 25,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 58,
          "fromName" : "LogicalRelation",
          "toId" : 57,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 61,
          "fromName" : "LogicalRelation",
          "toId" : 60,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 60,
          "fromName" : "Filter",
          "toId" : 59,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 59,
          "fromName" : "Project",
          "toId" : 57,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 57,
          "fromName" : "Filter",
          "toId" : 56,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 56,
          "fromName" : "Project",
          "toId" : 55,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 62,
          "fromName" : "LogicalQueryStage",
          "toId" : 55,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 55,
          "fromName" : "Join",
          "toId" : 54,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 54,
          "fromName" : "Project",
          "toId" : 53,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 63,
          "fromName" : "LogicalQueryStage",
          "toId" : 53,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 53,
          "fromName" : "Join",
          "toId" : 52,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 52,
          "fromName" : "Project",
          "toId" : 25,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 25,
          "fromName" : "Join",
          "toId" : 21,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 21,
          "fromName" : "Join",
          "toId" : 20,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 20,
          "fromName" : "Project",
          "toId" : 10,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "Join",
          "toId" : 9,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 64,
          "fromName" : "LogicalQueryStage",
          "toId" : 9,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "Join",
          "toId" : 8,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "Project",
          "toId" : 7,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 68,
          "fromName" : "LogicalRelation",
          "toId" : 67,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 67,
          "fromName" : "Filter",
          "toId" : 66,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 66,
          "fromName" : "Project",
          "toId" : 65,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 22,
          "fromName" : "Project",
          "toId" : 70,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 31,
          "fromName" : "Project",
          "toId" : 76,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 77,
          "fromName" : "LogicalQueryStage",
          "toId" : 76,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 76,
          "fromName" : "Join",
          "toId" : 75,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 75,
          "fromName" : "Project",
          "toId" : 74,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 79,
          "fromName" : "LogicalQueryStage",
          "toId" : 78,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 44,
          "fromName" : "Project",
          "toId" : 83,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 84,
          "fromName" : "LogicalQueryStage",
          "toId" : 83,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 83,
          "fromName" : "Join",
          "toId" : 82,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 82,
          "fromName" : "Project",
          "toId" : 81,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 85,
          "fromName" : "LogicalQueryStage",
          "toId" : 81,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 81,
          "fromName" : "Join",
          "toId" : 80,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 80,
          "fromName" : "Project",
          "toId" : 78,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 78,
          "fromName" : "Join",
          "toId" : 74,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 74,
          "fromName" : "Join",
          "toId" : 73,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 73,
          "fromName" : "Project",
          "toId" : 72,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 72,
          "fromName" : "Aggregate",
          "toId" : 71,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 56,
          "fromName" : "Project",
          "toId" : 89,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 90,
          "fromName" : "LogicalQueryStage",
          "toId" : 89,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 89,
          "fromName" : "Join",
          "toId" : 88,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 88,
          "fromName" : "Project",
          "toId" : 87,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 91,
          "fromName" : "LogicalQueryStage",
          "toId" : 87,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 87,
          "fromName" : "Join",
          "toId" : 86,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 86,
          "fromName" : "Project",
          "toId" : 71,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 71,
          "fromName" : "Join",
          "toId" : 70,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 70,
          "fromName" : "Join",
          "toId" : 69,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 69,
          "fromName" : "Project",
          "toId" : 65,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 65,
          "fromName" : "Join",
          "toId" : 7,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Join",
          "toId" : 6,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Project",
          "toId" : 5,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Aggregate",
          "toId" : 4,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 98,
          "fromName" : "LogicalRelation",
          "toId" : 97,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 101,
          "fromName" : "LogicalRelation",
          "toId" : 100,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 100,
          "fromName" : "Filter",
          "toId" : 99,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 99,
          "fromName" : "Project",
          "toId" : 97,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 97,
          "fromName" : "Filter",
          "toId" : 96,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 96,
          "fromName" : "Project",
          "toId" : 95,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 99,
          "fromName" : "Project",
          "toId" : 95,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 95,
          "fromName" : "Join",
          "toId" : 94,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 94,
          "fromName" : "Project",
          "toId" : 93,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 106,
          "fromName" : "LogicalRelation",
          "toId" : 105,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 109,
          "fromName" : "LogicalRelation",
          "toId" : 108,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 108,
          "fromName" : "Filter",
          "toId" : 107,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 107,
          "fromName" : "Project",
          "toId" : 105,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 105,
          "fromName" : "Filter",
          "toId" : 104,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 104,
          "fromName" : "Project",
          "toId" : 103,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 107,
          "fromName" : "Project",
          "toId" : 103,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 103,
          "fromName" : "Join",
          "toId" : 102,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 102,
          "fromName" : "Project",
          "toId" : 93,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 114,
          "fromName" : "LogicalRelation",
          "toId" : 113,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 117,
          "fromName" : "LogicalRelation",
          "toId" : 116,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 116,
          "fromName" : "Filter",
          "toId" : 115,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 115,
          "fromName" : "Project",
          "toId" : 113,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 113,
          "fromName" : "Filter",
          "toId" : 112,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 112,
          "fromName" : "Project",
          "toId" : 111,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 115,
          "fromName" : "Project",
          "toId" : 111,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 111,
          "fromName" : "Join",
          "toId" : 110,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 110,
          "fromName" : "Project",
          "toId" : 93,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 93,
          "fromName" : "Union",
          "toId" : 92,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 92,
          "fromName" : "Aggregate",
          "toId" : 4,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 4,
          "fromName" : "Filter",
          "toId" : 3,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 127,
          "fromName" : "LogicalRelation",
          "toId" : 126,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 130,
          "fromName" : "LogicalRelation",
          "toId" : 129,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 133,
          "fromName" : "LogicalRelation",
          "toId" : 132,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 132,
          "fromName" : "Filter",
          "toId" : 131,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 131,
          "fromName" : "Project",
          "toId" : 129,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 129,
          "fromName" : "Filter",
          "toId" : 128,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 128,
          "fromName" : "Project",
          "toId" : 126,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 126,
          "fromName" : "Filter",
          "toId" : 125,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 125,
          "fromName" : "Project",
          "toId" : 124,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 22,
          "fromName" : "Project",
          "toId" : 135,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 33,
          "fromName" : "LogicalRelation",
          "toId" : 143,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 34,
          "fromName" : "Project",
          "toId" : 143,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 143,
          "fromName" : "Filter",
          "toId" : 142,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 142,
          "fromName" : "Project",
          "toId" : 141,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 144,
          "fromName" : "LogicalQueryStage",
          "toId" : 141,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 141,
          "fromName" : "Join",
          "toId" : 140,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 140,
          "fromName" : "Project",
          "toId" : 139,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 146,
          "fromName" : "LogicalQueryStage",
          "toId" : 145,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 46,
          "fromName" : "LogicalRelation",
          "toId" : 152,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 47,
          "fromName" : "Project",
          "toId" : 152,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 152,
          "fromName" : "Filter",
          "toId" : 151,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 151,
          "fromName" : "Project",
          "toId" : 150,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 153,
          "fromName" : "LogicalQueryStage",
          "toId" : 150,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 150,
          "fromName" : "Join",
          "toId" : 149,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 149,
          "fromName" : "Project",
          "toId" : 148,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 154,
          "fromName" : "LogicalQueryStage",
          "toId" : 148,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 148,
          "fromName" : "Join",
          "toId" : 147,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 147,
          "fromName" : "Project",
          "toId" : 145,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 145,
          "fromName" : "Join",
          "toId" : 139,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 139,
          "fromName" : "Join",
          "toId" : 138,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 138,
          "fromName" : "Project",
          "toId" : 137,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 137,
          "fromName" : "Aggregate",
          "toId" : 136,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 58,
          "fromName" : "LogicalRelation",
          "toId" : 160,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 59,
          "fromName" : "Project",
          "toId" : 160,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 160,
          "fromName" : "Filter",
          "toId" : 159,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 159,
          "fromName" : "Project",
          "toId" : 158,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 161,
          "fromName" : "LogicalQueryStage",
          "toId" : 158,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 158,
          "fromName" : "Join",
          "toId" : 157,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 157,
          "fromName" : "Project",
          "toId" : 156,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 162,
          "fromName" : "LogicalQueryStage",
          "toId" : 156,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 156,
          "fromName" : "Join",
          "toId" : 155,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 155,
          "fromName" : "Project",
          "toId" : 136,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 136,
          "fromName" : "Join",
          "toId" : 135,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 135,
          "fromName" : "Join",
          "toId" : 134,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 134,
          "fromName" : "Project",
          "toId" : 124,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 124,
          "fromName" : "Join",
          "toId" : 123,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 163,
          "fromName" : "LogicalQueryStage",
          "toId" : 123,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 123,
          "fromName" : "Join",
          "toId" : 122,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 122,
          "fromName" : "Project",
          "toId" : 121,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 167,
          "fromName" : "LogicalRelation",
          "toId" : 166,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 166,
          "fromName" : "Filter",
          "toId" : 165,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 165,
          "fromName" : "Project",
          "toId" : 164,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 22,
          "fromName" : "Project",
          "toId" : 169,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 142,
          "fromName" : "Project",
          "toId" : 175,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 176,
          "fromName" : "LogicalQueryStage",
          "toId" : 175,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 175,
          "fromName" : "Join",
          "toId" : 174,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 174,
          "fromName" : "Project",
          "toId" : 173,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 178,
          "fromName" : "LogicalQueryStage",
          "toId" : 177,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 151,
          "fromName" : "Project",
          "toId" : 182,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 183,
          "fromName" : "LogicalQueryStage",
          "toId" : 182,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 182,
          "fromName" : "Join",
          "toId" : 181,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 181,
          "fromName" : "Project",
          "toId" : 180,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 184,
          "fromName" : "LogicalQueryStage",
          "toId" : 180,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 180,
          "fromName" : "Join",
          "toId" : 179,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 179,
          "fromName" : "Project",
          "toId" : 177,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 177,
          "fromName" : "Join",
          "toId" : 173,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 173,
          "fromName" : "Join",
          "toId" : 172,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 172,
          "fromName" : "Project",
          "toId" : 171,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 171,
          "fromName" : "Aggregate",
          "toId" : 170,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 159,
          "fromName" : "Project",
          "toId" : 188,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 189,
          "fromName" : "LogicalQueryStage",
          "toId" : 188,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 188,
          "fromName" : "Join",
          "toId" : 187,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 187,
          "fromName" : "Project",
          "toId" : 186,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 190,
          "fromName" : "LogicalQueryStage",
          "toId" : 186,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 186,
          "fromName" : "Join",
          "toId" : 185,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 185,
          "fromName" : "Project",
          "toId" : 170,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 170,
          "fromName" : "Join",
          "toId" : 169,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 169,
          "fromName" : "Join",
          "toId" : 168,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 168,
          "fromName" : "Project",
          "toId" : 164,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 164,
          "fromName" : "Join",
          "toId" : 121,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 121,
          "fromName" : "Join",
          "toId" : 120,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 120,
          "fromName" : "Project",
          "toId" : 119,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 119,
          "fromName" : "Aggregate",
          "toId" : 118,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 92,
          "fromName" : "Aggregate",
          "toId" : 118,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 118,
          "fromName" : "Filter",
          "toId" : 3,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Join",
          "toId" : 2,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "LocalLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "LocalLimit",
          "toId" : 0,
          "toName" : "GlobalLimit",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [i_brand_id#1082 ASC NULLS FIRST, i_class_id#1084 ASC NULLS FIRST, i_category_id#1086 ASC NULLS FIRST], true\n      +- Join Inner, (((i_brand_id#1082 = i_brand_id#1155) AND (i_class_id#1084 = i_class_id#1157)) AND (i_category_id#1086 = i_category_id#1159))\n         :- Filter (isnotnull(sales#731) AND (cast(sales#731 as decimal(32,6)) > cast(scalar-subquery#735 [] as decimal(32,6))))\n         :  :  +- Aggregate [avg((cast(quantity#746 as decimal(10,0)) * list_price#747)) AS average_sales#752]\n         :  :     +- Union false, false\n         :  :        :- Project [ss_quantity#886 AS quantity#746, ss_list_price#888 AS list_price#747]\n         :  :        :  +- Join Inner, (ss_sold_date_sk#899 = d_date_sk#900)\n         :  :        :     :- Project [ss_quantity#886, ss_list_price#888, ss_sold_date_sk#899]\n         :  :        :     :  +- Filter (isnotnull(ss_sold_date_sk#899) AND dynamicpruning#1288 [ss_sold_date_sk#899])\n         :  :        :     :     :  +- Project [d_date_sk#900]\n         :  :        :     :     :     +- Filter ((isnotnull(d_year#906) AND ((d_year#906 >= 1998) AND (d_year#906 <= 2000))) AND isnotnull(d_date_sk#900))\n         :  :        :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#900,d_date_id#901,d_date#902,d_month_seq#903,d_week_seq#904,d_quarter_seq#905,d_year#906,d_dow#907,d_moy#908,d_dom#909,d_qoy#910,d_fy_year#911,d_fy_quarter_seq#912,d_fy_week_seq#913,d_day_name#914,d_quarter_name#915,d_holiday#916,d_weekend#917,d_following_holiday#918,d_first_dom#919,d_last_dom#920,d_same_day_ly#921,d_same_day_lq#922,d_current_day#923,... 4 more fields] parquet\n         :  :        :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#877,ss_item_sk#878,ss_customer_sk#879,ss_cdemo_sk#880,ss_hdemo_sk#881,ss_addr_sk#882,ss_store_sk#883,ss_promo_sk#884,ss_ticket_number#885L,ss_quantity#886,ss_wholesale_cost#887,ss_list_price#888,ss_sales_price#889,ss_ext_discount_amt#890,ss_ext_sales_price#891,ss_ext_wholesale_cost#892,ss_ext_list_price#893,ss_ext_tax#894,ss_coupon_amt#895,ss_net_paid#896,ss_net_paid_inc_tax#897,ss_net_profit#898,ss_sold_date_sk#899] parquet\n         :  :        :     +- Project [d_date_sk#900]\n         :  :        :        +- Filter ((isnotnull(d_year#906) AND ((d_year#906 >= 1998) AND (d_year#906 <= 2000))) AND isnotnull(d_date_sk#900))\n         :  :        :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#900,d_date_id#901,d_date#902,d_month_seq#903,d_week_seq#904,d_quarter_seq#905,d_year#906,d_dow#907,d_moy#908,d_dom#909,d_qoy#910,d_fy_year#911,d_fy_quarter_seq#912,d_fy_week_seq#913,d_day_name#914,d_quarter_name#915,d_holiday#916,d_weekend#917,d_following_holiday#918,d_first_dom#919,d_last_dom#920,d_same_day_ly#921,d_same_day_lq#922,d_current_day#923,... 4 more fields] parquet\n         :  :        :- Project [cs_quantity#945 AS quantity#748, cs_list_price#947 AS list_price#749]\n         :  :        :  +- Join Inner, (cs_sold_date_sk#961 = d_date_sk#962)\n         :  :        :     :- Project [cs_quantity#945, cs_list_price#947, cs_sold_date_sk#961]\n         :  :        :     :  +- Filter (isnotnull(cs_sold_date_sk#961) AND dynamicpruning#1289 [cs_sold_date_sk#961])\n         :  :        :     :     :  +- Project [d_date_sk#962]\n         :  :        :     :     :     +- Filter ((isnotnull(d_year#968) AND ((d_year#968 >= 1998) AND (d_year#968 <= 2000))) AND isnotnull(d_date_sk#962))\n         :  :        :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#962,d_date_id#963,d_date#964,d_month_seq#965,d_week_seq#966,d_quarter_seq#967,d_year#968,d_dow#969,d_moy#970,d_dom#971,d_qoy#972,d_fy_year#973,d_fy_quarter_seq#974,d_fy_week_seq#975,d_day_name#976,d_quarter_name#977,d_holiday#978,d_weekend#979,d_following_holiday#980,d_first_dom#981,d_last_dom#982,d_same_day_ly#983,d_same_day_lq#984,d_current_day#985,... 4 more fields] parquet\n         :  :        :     :     +- Relation spark_catalog.tpcds_100.catalog_sales[cs_sold_time_sk#928,cs_ship_date_sk#929,cs_bill_customer_sk#930,cs_bill_cdemo_sk#931,cs_bill_hdemo_sk#932,cs_bill_addr_sk#933,cs_ship_customer_sk#934,cs_ship_cdemo_sk#935,cs_ship_hdemo_sk#936,cs_ship_addr_sk#937,cs_call_center_sk#938,cs_catalog_page_sk#939,cs_ship_mode_sk#940,cs_warehouse_sk#941,cs_item_sk#942,cs_promo_sk#943,cs_order_number#944L,cs_quantity#945,cs_wholesale_cost#946,cs_list_price#947,cs_sales_price#948,cs_ext_discount_amt#949,cs_ext_sales_price#950,cs_ext_wholesale_cost#951,... 10 more fields] parquet\n         :  :        :     +- Project [d_date_sk#962]\n         :  :        :        +- Filter ((isnotnull(d_year#968) AND ((d_year#968 >= 1998) AND (d_year#968 <= 2000))) AND isnotnull(d_date_sk#962))\n         :  :        :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#962,d_date_id#963,d_date#964,d_month_seq#965,d_week_seq#966,d_quarter_seq#967,d_year#968,d_dow#969,d_moy#970,d_dom#971,d_qoy#972,d_fy_year#973,d_fy_quarter_seq#974,d_fy_week_seq#975,d_day_name#976,d_quarter_name#977,d_holiday#978,d_weekend#979,d_following_holiday#980,d_first_dom#981,d_last_dom#982,d_same_day_ly#983,d_same_day_lq#984,d_current_day#985,... 4 more fields] parquet\n         :  :        +- Project [ws_quantity#1007 AS quantity#750, ws_list_price#1009 AS list_price#751]\n         :  :           +- Join Inner, (ws_sold_date_sk#1023 = d_date_sk#1024)\n         :  :              :- Project [ws_quantity#1007, ws_list_price#1009, ws_sold_date_sk#1023]\n         :  :              :  +- Filter (isnotnull(ws_sold_date_sk#1023) AND dynamicpruning#1290 [ws_sold_date_sk#1023])\n         :  :              :     :  +- Project [d_date_sk#1024]\n         :  :              :     :     +- Filter ((isnotnull(d_year#1030) AND ((d_year#1030 >= 1998) AND (d_year#1030 <= 2000))) AND isnotnull(d_date_sk#1024))\n         :  :              :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#1024,d_date_id#1025,d_date#1026,d_month_seq#1027,d_week_seq#1028,d_quarter_seq#1029,d_year#1030,d_dow#1031,d_moy#1032,d_dom#1033,d_qoy#1034,d_fy_year#1035,d_fy_quarter_seq#1036,d_fy_week_seq#1037,d_day_name#1038,d_quarter_name#1039,d_holiday#1040,d_weekend#1041,d_following_holiday#1042,d_first_dom#1043,d_last_dom#1044,d_same_day_ly#1045,d_same_day_lq#1046,d_current_day#1047,... 4 more fields] parquet\n         :  :              :     +- Relation spark_catalog.tpcds_100.web_sales[ws_sold_time_sk#990,ws_ship_date_sk#991,ws_item_sk#992,ws_bill_customer_sk#993,ws_bill_cdemo_sk#994,ws_bill_hdemo_sk#995,ws_bill_addr_sk#996,ws_ship_customer_sk#997,ws_ship_cdemo_sk#998,ws_ship_hdemo_sk#999,ws_ship_addr_sk#1000,ws_web_page_sk#1001,ws_web_site_sk#1002,ws_ship_mode_sk#1003,ws_warehouse_sk#1004,ws_promo_sk#1005,ws_order_number#1006L,ws_quantity#1007,ws_wholesale_cost#1008,ws_list_price#1009,ws_sales_price#1010,ws_ext_discount_amt#1011,ws_ext_sales_price#1012,ws_ext_wholesale_cost#1013,... 10 more fields] parquet\n         :  :              +- Project [d_date_sk#1024]\n         :  :                 +- Filter ((isnotnull(d_year#1030) AND ((d_year#1030 >= 1998) AND (d_year#1030 <= 2000))) AND isnotnull(d_date_sk#1024))\n         :  :                    +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#1024,d_date_id#1025,d_date#1026,d_month_seq#1027,d_week_seq#1028,d_quarter_seq#1029,d_year#1030,d_dow#1031,d_moy#1032,d_dom#1033,d_qoy#1034,d_fy_year#1035,d_fy_quarter_seq#1036,d_fy_week_seq#1037,d_day_name#1038,d_quarter_name#1039,d_holiday#1040,d_weekend#1041,d_following_holiday#1042,d_first_dom#1043,d_last_dom#1044,d_same_day_ly#1045,d_same_day_lq#1046,d_current_day#1047,... 4 more fields] parquet\n         :  +- Aggregate [i_brand_id#1082, i_class_id#1084, i_category_id#1086], [store AS channel#730, i_brand_id#1082, i_class_id#1084, i_category_id#1086, sum((cast(ss_quantity#1061 as decimal(10,0)) * ss_list_price#1063)) AS sales#731, count(1) AS number_sales#732L]\n         :     +- Project [ss_quantity#1061, ss_list_price#1063, i_brand_id#1082, i_class_id#1084, i_category_id#1086]\n         :        +- Join Inner, (ss_item_sk#1053 = i_item_sk#1075)\n         :           :- Project [ss_item_sk#1053, ss_quantity#1061, ss_list_price#1063]\n         :           :  +- Join Inner, (ss_sold_date_sk#1074 = d_date_sk#1097)\n         :           :     :- Join LeftSemi, (ss_item_sk#1053 = ss_item_sk#745)\n         :           :     :  :- Project [ss_item_sk#1053, ss_quantity#1061, ss_list_price#1063, ss_sold_date_sk#1074]\n         :           :     :  :  +- Filter ((isnotnull(ss_item_sk#1053) AND isnotnull(ss_sold_date_sk#1074)) AND dynamicpruning#1303 [ss_sold_date_sk#1074])\n         :           :     :  :     :  +- Project [d_date_sk#1097]\n         :           :     :  :     :     +- Filter ((isnotnull(d_week_seq#1101) AND (d_week_seq#1101 = scalar-subquery#734 [])) AND isnotnull(d_date_sk#1097))\n         :           :     :  :     :        :  +- Project [d_week_seq#1213]\n         :           :     :  :     :        :     +- Filter (((isnotnull(d_year#1215) AND isnotnull(d_moy#1217)) AND isnotnull(d_dom#1218)) AND (((d_year#1215 = 1999) AND (d_moy#1217 = 12)) AND (d_dom#1218 = 16)))\n         :           :     :  :     :        :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#1209,d_date_id#1210,d_date#1211,d_month_seq#1212,d_week_seq#1213,d_quarter_seq#1214,d_year#1215,d_dow#1216,d_moy#1217,d_dom#1218,d_qoy#1219,d_fy_year#1220,d_fy_quarter_seq#1221,d_fy_week_seq#1222,d_day_name#1223,d_quarter_name#1224,d_holiday#1225,d_weekend#1226,d_following_holiday#1227,d_first_dom#1228,d_last_dom#1229,d_same_day_ly#1230,d_same_day_lq#1231,d_current_day#1232,... 4 more fields] parquet\n         :           :     :  :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#1097,d_date_id#1098,d_date#1099,d_month_seq#1100,d_week_seq#1101,d_quarter_seq#1102,d_year#1103,d_dow#1104,d_moy#1105,d_dom#1106,d_qoy#1107,d_fy_year#1108,d_fy_quarter_seq#1109,d_fy_week_seq#1110,d_day_name#1111,d_quarter_name#1112,d_holiday#1113,d_weekend#1114,d_following_holiday#1115,d_first_dom#1116,d_last_dom#1117,d_same_day_ly#1118,d_same_day_lq#1119,d_current_day#1120,... 4 more fields] parquet\n         :           :     :  :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#1052,ss_item_sk#1053,ss_customer_sk#1054,ss_cdemo_sk#1055,ss_hdemo_sk#1056,ss_addr_sk#1057,ss_store_sk#1058,ss_promo_sk#1059,ss_ticket_number#1060L,ss_quantity#1061,ss_wholesale_cost#1062,ss_list_price#1063,ss_sales_price#1064,ss_ext_discount_amt#1065,ss_ext_sales_price#1066,ss_ext_wholesale_cost#1067,ss_ext_list_price#1068,ss_ext_tax#1069,ss_coupon_amt#1070,ss_net_paid#1071,ss_net_paid_inc_tax#1072,ss_net_profit#1073,ss_sold_date_sk#1074] parquet\n         :           :     :  +- Project [i_item_sk#25 AS ss_item_sk#745]\n         :           :     :     +- Join Inner, (((i_brand_id#32 = brand_id#742) AND (i_class_id#34 = class_id#743)) AND (i_category_id#36 = category_id#744))\n         :           :     :        :- Project [i_item_sk#25, i_brand_id#32, i_class_id#34, i_category_id#36]\n         :           :     :        :  +- Filter ((isnotnull(i_brand_id#32) AND isnotnull(i_class_id#34)) AND isnotnull(i_category_id#36))\n         :           :     :        :     +- Relation spark_catalog.tpcds_100.item[i_item_sk#25,i_item_id#26,i_rec_start_date#27,i_rec_end_date#28,i_item_desc#29,i_current_price#30,i_wholesale_cost#31,i_brand_id#32,i_brand#33,i_class_id#34,i_class#35,i_category_id#36,i_category#37,i_manufact_id#38,i_manufact#39,i_size#40,i_formulation#41,i_color#42,i_units#43,i_container#44,i_manager_id#45,i_product_name#46] parquet\n         :           :     :        +- Join LeftSemi, (((brand_id#742 <=> i_brand_id#834) AND (class_id#743 <=> i_class_id#836)) AND (category_id#744 <=> i_category_id#838))\n         :           :     :           :- Aggregate [brand_id#742, class_id#743, category_id#744], [brand_id#742, class_id#743, category_id#744]\n         :           :     :           :  +- Project [i_brand_id#762 AS brand_id#742, i_class_id#764 AS class_id#743, i_category_id#766 AS category_id#744]\n         :           :     :           :     +- Join Inner, (ss_item_sk#48 = i_item_sk#755)\n         :           :     :           :        :- Project [ss_item_sk#48]\n         :           :     :           :        :  +- Join Inner, (ss_sold_date_sk#69 = d_date_sk#70)\n         :           :     :           :        :     :- Project [ss_item_sk#48, ss_sold_date_sk#69]\n         :           :     :           :        :     :  +- Filter ((isnotnull(ss_item_sk#48) AND isnotnull(ss_sold_date_sk#69)) AND dynamicpruning#1291 [ss_sold_date_sk#69])\n         :           :     :           :        :     :     :  +- Project [d_date_sk#70]\n         :           :     :           :        :     :     :     +- Filter ((isnotnull(d_year#76) AND ((d_year#76 >= 1998) AND (d_year#76 <= 2000))) AND isnotnull(d_date_sk#70))\n         :           :     :           :        :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#70,d_date_id#71,d_date#72,d_month_seq#73,d_week_seq#74,d_quarter_seq#75,d_year#76,d_dow#77,d_moy#78,d_dom#79,d_qoy#80,d_fy_year#81,d_fy_quarter_seq#82,d_fy_week_seq#83,d_day_name#84,d_quarter_name#85,d_holiday#86,d_weekend#87,d_following_holiday#88,d_first_dom#89,d_last_dom#90,d_same_day_ly#91,d_same_day_lq#92,d_current_day#93,... 4 more fields] parquet\n         :           :     :           :        :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#47,ss_item_sk#48,ss_customer_sk#49,ss_cdemo_sk#50,ss_hdemo_sk#51,ss_addr_sk#52,ss_store_sk#53,ss_promo_sk#54,ss_ticket_number#55L,ss_quantity#56,ss_wholesale_cost#57,ss_list_price#58,ss_sales_price#59,ss_ext_discount_amt#60,ss_ext_sales_price#61,ss_ext_wholesale_cost#62,ss_ext_list_price#63,ss_ext_tax#64,ss_coupon_amt#65,ss_net_paid#66,ss_net_paid_inc_tax#67,ss_net_profit#68,ss_sold_date_sk#69] parquet\n         :           :     :           :        :     +- LogicalQueryStage Project [d_date_sk#70], BroadcastQueryStage 0\n         :           :     :           :        +- Join LeftSemi, (((i_brand_id#762 <=> i_brand_id#784) AND (i_class_id#764 <=> i_class_id#786)) AND (i_category_id#766 <=> i_category_id#788))\n         :           :     :           :           :- LogicalQueryStage Project [i_item_sk#755, i_brand_id#762, i_class_id#764, i_category_id#766], ShuffleQueryStage 1\n         :           :     :           :           +- Project [i_brand_id#784, i_class_id#786, i_category_id#788]\n         :           :     :           :              +- Join Inner, (cs_item_sk#112 = i_item_sk#777)\n         :           :     :           :                 :- Project [cs_item_sk#112]\n         :           :     :           :                 :  +- Join Inner, (cs_sold_date_sk#131 = d_date_sk#799)\n         :           :     :           :                 :     :- Project [cs_item_sk#112, cs_sold_date_sk#131]\n         :           :     :           :                 :     :  +- Filter ((isnotnull(cs_item_sk#112) AND isnotnull(cs_sold_date_sk#131)) AND dynamicpruning#1292 [cs_sold_date_sk#131])\n         :           :     :           :                 :     :     :  +- Project [d_date_sk#799]\n         :           :     :           :                 :     :     :     +- Filter ((isnotnull(d_year#805) AND ((d_year#805 >= 1998) AND (d_year#805 <= 2000))) AND isnotnull(d_date_sk#799))\n         :           :     :           :                 :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#799,d_date_id#800,d_date#801,d_month_seq#802,d_week_seq#803,d_quarter_seq#804,d_year#805,d_dow#806,d_moy#807,d_dom#808,d_qoy#809,d_fy_year#810,d_fy_quarter_seq#811,d_fy_week_seq#812,d_day_name#813,d_quarter_name#814,d_holiday#815,d_weekend#816,d_following_holiday#817,d_first_dom#818,d_last_dom#819,d_same_day_ly#820,d_same_day_lq#821,d_current_day#822,... 4 more fields] parquet\n         :           :     :           :                 :     :     +- Relation spark_catalog.tpcds_100.catalog_sales[cs_sold_time_sk#98,cs_ship_date_sk#99,cs_bill_customer_sk#100,cs_bill_cdemo_sk#101,cs_bill_hdemo_sk#102,cs_bill_addr_sk#103,cs_ship_customer_sk#104,cs_ship_cdemo_sk#105,cs_ship_hdemo_sk#106,cs_ship_addr_sk#107,cs_call_center_sk#108,cs_catalog_page_sk#109,cs_ship_mode_sk#110,cs_warehouse_sk#111,cs_item_sk#112,cs_promo_sk#113,cs_order_number#114L,cs_quantity#115,cs_wholesale_cost#116,cs_list_price#117,cs_sales_price#118,cs_ext_discount_amt#119,cs_ext_sales_price#120,cs_ext_wholesale_cost#121,... 10 more fields] parquet\n         :           :     :           :                 :     +- LogicalQueryStage Project [d_date_sk#799], BroadcastQueryStage 3\n         :           :     :           :                 +- LogicalQueryStage Project [i_item_sk#777, i_brand_id#784, i_class_id#786, i_category_id#788], BroadcastQueryStage 4\n         :           :     :           +- Project [i_brand_id#834, i_class_id#836, i_category_id#838]\n         :           :     :              +- Join Inner, (ws_item_sk#134 = i_item_sk#827)\n         :           :     :                 :- Project [ws_item_sk#134]\n         :           :     :                 :  +- Join Inner, (ws_sold_date_sk#165 = d_date_sk#849)\n         :           :     :                 :     :- Project [ws_item_sk#134, ws_sold_date_sk#165]\n         :           :     :                 :     :  +- Filter ((isnotnull(ws_item_sk#134) AND isnotnull(ws_sold_date_sk#165)) AND dynamicpruning#1293 [ws_sold_date_sk#165])\n         :           :     :                 :     :     :  +- Project [d_date_sk#849]\n         :           :     :                 :     :     :     +- Filter ((isnotnull(d_year#855) AND ((d_year#855 >= 1998) AND (d_year#855 <= 2000))) AND isnotnull(d_date_sk#849))\n         :           :     :                 :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#849,d_date_id#850,d_date#851,d_month_seq#852,d_week_seq#853,d_quarter_seq#854,d_year#855,d_dow#856,d_moy#857,d_dom#858,d_qoy#859,d_fy_year#860,d_fy_quarter_seq#861,d_fy_week_seq#862,d_day_name#863,d_quarter_name#864,d_holiday#865,d_weekend#866,d_following_holiday#867,d_first_dom#868,d_last_dom#869,d_same_day_ly#870,d_same_day_lq#871,d_current_day#872,... 4 more fields] parquet\n         :           :     :                 :     :     +- Relation spark_catalog.tpcds_100.web_sales[ws_sold_time_sk#132,ws_ship_date_sk#133,ws_item_sk#134,ws_bill_customer_sk#135,ws_bill_cdemo_sk#136,ws_bill_hdemo_sk#137,ws_bill_addr_sk#138,ws_ship_customer_sk#139,ws_ship_cdemo_sk#140,ws_ship_hdemo_sk#141,ws_ship_addr_sk#142,ws_web_page_sk#143,ws_web_site_sk#144,ws_ship_mode_sk#145,ws_warehouse_sk#146,ws_promo_sk#147,ws_order_number#148L,ws_quantity#149,ws_wholesale_cost#150,ws_list_price#151,ws_sales_price#152,ws_ext_discount_amt#153,ws_ext_sales_price#154,ws_ext_wholesale_cost#155,... 10 more fields] parquet\n         :           :     :                 :     +- LogicalQueryStage Project [d_date_sk#849], BroadcastQueryStage 6\n         :           :     :                 +- LogicalQueryStage Project [i_item_sk#827, i_brand_id#834, i_class_id#836, i_category_id#838], BroadcastQueryStage 8\n         :           :     +- LogicalQueryStage Project [d_date_sk#1097], BroadcastQueryStage 9\n         :           +- Join LeftSemi, (i_item_sk#1075 = ss_item_sk#745)\n         :              :- Project [i_item_sk#1075, i_brand_id#1082, i_class_id#1084, i_category_id#1086]\n         :              :  +- Filter (((isnotnull(i_item_sk#1075) AND isnotnull(i_brand_id#1082)) AND isnotnull(i_class_id#1084)) AND isnotnull(i_category_id#1086))\n         :              :     +- Relation spark_catalog.tpcds_100.item[i_item_sk#1075,i_item_id#1076,i_rec_start_date#1077,i_rec_end_date#1078,i_item_desc#1079,i_current_price#1080,i_wholesale_cost#1081,i_brand_id#1082,i_brand#1083,i_class_id#1084,i_class#1085,i_category_id#1086,i_category#1087,i_manufact_id#1088,i_manufact#1089,i_size#1090,i_formulation#1091,i_color#1092,i_units#1093,i_container#1094,i_manager_id#1095,i_product_name#1096] parquet\n         :              +- Project [i_item_sk#25 AS ss_item_sk#745]\n         :                 +- Join Inner, (((i_brand_id#32 = brand_id#742) AND (i_class_id#34 = class_id#743)) AND (i_category_id#36 = category_id#744))\n         :                    :- Project [i_item_sk#25, i_brand_id#32, i_class_id#34, i_category_id#36]\n         :                    :  +- Filter ((isnotnull(i_brand_id#32) AND isnotnull(i_class_id#34)) AND isnotnull(i_category_id#36))\n         :                    :     +- Relation spark_catalog.tpcds_100.item[i_item_sk#25,i_item_id#26,i_rec_start_date#27,i_rec_end_date#28,i_item_desc#29,i_current_price#30,i_wholesale_cost#31,i_brand_id#32,i_brand#33,i_class_id#34,i_class#35,i_category_id#36,i_category#37,i_manufact_id#38,i_manufact#39,i_size#40,i_formulation#41,i_color#42,i_units#43,i_container#44,i_manager_id#45,i_product_name#46] parquet\n         :                    +- Join LeftSemi, (((brand_id#742 <=> i_brand_id#834) AND (class_id#743 <=> i_class_id#836)) AND (category_id#744 <=> i_category_id#838))\n         :                       :- Aggregate [brand_id#742, class_id#743, category_id#744], [brand_id#742, class_id#743, category_id#744]\n         :                       :  +- Project [i_brand_id#762 AS brand_id#742, i_class_id#764 AS class_id#743, i_category_id#766 AS category_id#744]\n         :                       :     +- Join Inner, (ss_item_sk#48 = i_item_sk#755)\n         :                       :        :- Project [ss_item_sk#48]\n         :                       :        :  +- Join Inner, (ss_sold_date_sk#69 = d_date_sk#70)\n         :                       :        :     :- Project [ss_item_sk#48, ss_sold_date_sk#69]\n         :                       :        :     :  +- Filter ((isnotnull(ss_item_sk#48) AND isnotnull(ss_sold_date_sk#69)) AND dynamicpruning#1291 [ss_sold_date_sk#69])\n         :                       :        :     :     :  +- Project [d_date_sk#70]\n         :                       :        :     :     :     +- Filter ((isnotnull(d_year#76) AND ((d_year#76 >= 1998) AND (d_year#76 <= 2000))) AND isnotnull(d_date_sk#70))\n         :                       :        :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#70,d_date_id#71,d_date#72,d_month_seq#73,d_week_seq#74,d_quarter_seq#75,d_year#76,d_dow#77,d_moy#78,d_dom#79,d_qoy#80,d_fy_year#81,d_fy_quarter_seq#82,d_fy_week_seq#83,d_day_name#84,d_quarter_name#85,d_holiday#86,d_weekend#87,d_following_holiday#88,d_first_dom#89,d_last_dom#90,d_same_day_ly#91,d_same_day_lq#92,d_current_day#93,... 4 more fields] parquet\n         :                       :        :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#47,ss_item_sk#48,ss_customer_sk#49,ss_cdemo_sk#50,ss_hdemo_sk#51,ss_addr_sk#52,ss_store_sk#53,ss_promo_sk#54,ss_ticket_number#55L,ss_quantity#56,ss_wholesale_cost#57,ss_list_price#58,ss_sales_price#59,ss_ext_discount_amt#60,ss_ext_sales_price#61,ss_ext_wholesale_cost#62,ss_ext_list_price#63,ss_ext_tax#64,ss_coupon_amt#65,ss_net_paid#66,ss_net_paid_inc_tax#67,ss_net_profit#68,ss_sold_date_sk#69] parquet\n         :                       :        :     +- LogicalQueryStage Project [d_date_sk#70], BroadcastQueryStage 11\n         :                       :        +- Join LeftSemi, (((i_brand_id#762 <=> i_brand_id#784) AND (i_class_id#764 <=> i_class_id#786)) AND (i_category_id#766 <=> i_category_id#788))\n         :                       :           :- LogicalQueryStage Project [i_item_sk#755, i_brand_id#762, i_class_id#764, i_category_id#766], ShuffleQueryStage 13\n         :                       :           +- Project [i_brand_id#784, i_class_id#786, i_category_id#788]\n         :                       :              +- Join Inner, (cs_item_sk#112 = i_item_sk#777)\n         :                       :                 :- Project [cs_item_sk#112]\n         :                       :                 :  +- Join Inner, (cs_sold_date_sk#131 = d_date_sk#799)\n         :                       :                 :     :- Project [cs_item_sk#112, cs_sold_date_sk#131]\n         :                       :                 :     :  +- Filter ((isnotnull(cs_item_sk#112) AND isnotnull(cs_sold_date_sk#131)) AND dynamicpruning#1292 [cs_sold_date_sk#131])\n         :                       :                 :     :     :  +- Project [d_date_sk#799]\n         :                       :                 :     :     :     +- Filter ((isnotnull(d_year#805) AND ((d_year#805 >= 1998) AND (d_year#805 <= 2000))) AND isnotnull(d_date_sk#799))\n         :                       :                 :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#799,d_date_id#800,d_date#801,d_month_seq#802,d_week_seq#803,d_quarter_seq#804,d_year#805,d_dow#806,d_moy#807,d_dom#808,d_qoy#809,d_fy_year#810,d_fy_quarter_seq#811,d_fy_week_seq#812,d_day_name#813,d_quarter_name#814,d_holiday#815,d_weekend#816,d_following_holiday#817,d_first_dom#818,d_last_dom#819,d_same_day_ly#820,d_same_day_lq#821,d_current_day#822,... 4 more fields] parquet\n         :                       :                 :     :     +- Relation spark_catalog.tpcds_100.catalog_sales[cs_sold_time_sk#98,cs_ship_date_sk#99,cs_bill_customer_sk#100,cs_bill_cdemo_sk#101,cs_bill_hdemo_sk#102,cs_bill_addr_sk#103,cs_ship_customer_sk#104,cs_ship_cdemo_sk#105,cs_ship_hdemo_sk#106,cs_ship_addr_sk#107,cs_call_center_sk#108,cs_catalog_page_sk#109,cs_ship_mode_sk#110,cs_warehouse_sk#111,cs_item_sk#112,cs_promo_sk#113,cs_order_number#114L,cs_quantity#115,cs_wholesale_cost#116,cs_list_price#117,cs_sales_price#118,cs_ext_discount_amt#119,cs_ext_sales_price#120,cs_ext_wholesale_cost#121,... 10 more fields] parquet\n         :                       :                 :     +- LogicalQueryStage Project [d_date_sk#799], BroadcastQueryStage 15\n         :                       :                 +- LogicalQueryStage Project [i_item_sk#777, i_brand_id#784, i_class_id#786, i_category_id#788], BroadcastQueryStage 17\n         :                       +- Project [i_brand_id#834, i_class_id#836, i_category_id#838]\n         :                          +- Join Inner, (ws_item_sk#134 = i_item_sk#827)\n         :                             :- Project [ws_item_sk#134]\n         :                             :  +- Join Inner, (ws_sold_date_sk#165 = d_date_sk#849)\n         :                             :     :- Project [ws_item_sk#134, ws_sold_date_sk#165]\n         :                             :     :  +- Filter ((isnotnull(ws_item_sk#134) AND isnotnull(ws_sold_date_sk#165)) AND dynamicpruning#1293 [ws_sold_date_sk#165])\n         :                             :     :     :  +- Project [d_date_sk#849]\n         :                             :     :     :     +- Filter ((isnotnull(d_year#855) AND ((d_year#855 >= 1998) AND (d_year#855 <= 2000))) AND isnotnull(d_date_sk#849))\n         :                             :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#849,d_date_id#850,d_date#851,d_month_seq#852,d_week_seq#853,d_quarter_seq#854,d_year#855,d_dow#856,d_moy#857,d_dom#858,d_qoy#859,d_fy_year#860,d_fy_quarter_seq#861,d_fy_week_seq#862,d_day_name#863,d_quarter_name#864,d_holiday#865,d_weekend#866,d_following_holiday#867,d_first_dom#868,d_last_dom#869,d_same_day_ly#870,d_same_day_lq#871,d_current_day#872,... 4 more fields] parquet\n         :                             :     :     +- Relation spark_catalog.tpcds_100.web_sales[ws_sold_time_sk#132,ws_ship_date_sk#133,ws_item_sk#134,ws_bill_customer_sk#135,ws_bill_cdemo_sk#136,ws_bill_hdemo_sk#137,ws_bill_addr_sk#138,ws_ship_customer_sk#139,ws_ship_cdemo_sk#140,ws_ship_hdemo_sk#141,ws_ship_addr_sk#142,ws_web_page_sk#143,ws_web_site_sk#144,ws_ship_mode_sk#145,ws_warehouse_sk#146,ws_promo_sk#147,ws_order_number#148L,ws_quantity#149,ws_wholesale_cost#150,ws_list_price#151,ws_sales_price#152,ws_ext_discount_amt#153,ws_ext_sales_price#154,ws_ext_wholesale_cost#155,... 10 more fields] parquet\n         :                             :     +- LogicalQueryStage Project [d_date_sk#849], BroadcastQueryStage 19\n         :                             +- LogicalQueryStage Project [i_item_sk#827, i_brand_id#834, i_class_id#836, i_category_id#838], BroadcastQueryStage 21\n         +- Filter (isnotnull(sales#737) AND (cast(sales#737 as decimal(32,6)) > cast(scalar-subquery#741 [] as decimal(32,6))))\n            :  +- Aggregate [avg((cast(quantity#746 as decimal(10,0)) * list_price#747)) AS average_sales#752]\n            :     +- Union false, false\n            :        :- Project [ss_quantity#886 AS quantity#746, ss_list_price#888 AS list_price#747]\n            :        :  +- Join Inner, (ss_sold_date_sk#899 = d_date_sk#900)\n            :        :     :- Project [ss_quantity#886, ss_list_price#888, ss_sold_date_sk#899]\n            :        :     :  +- Filter (isnotnull(ss_sold_date_sk#899) AND dynamicpruning#1288 [ss_sold_date_sk#899])\n            :        :     :     :  +- Project [d_date_sk#900]\n            :        :     :     :     +- Filter ((isnotnull(d_year#906) AND ((d_year#906 >= 1998) AND (d_year#906 <= 2000))) AND isnotnull(d_date_sk#900))\n            :        :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#900,d_date_id#901,d_date#902,d_month_seq#903,d_week_seq#904,d_quarter_seq#905,d_year#906,d_dow#907,d_moy#908,d_dom#909,d_qoy#910,d_fy_year#911,d_fy_quarter_seq#912,d_fy_week_seq#913,d_day_name#914,d_quarter_name#915,d_holiday#916,d_weekend#917,d_following_holiday#918,d_first_dom#919,d_last_dom#920,d_same_day_ly#921,d_same_day_lq#922,d_current_day#923,... 4 more fields] parquet\n            :        :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#877,ss_item_sk#878,ss_customer_sk#879,ss_cdemo_sk#880,ss_hdemo_sk#881,ss_addr_sk#882,ss_store_sk#883,ss_promo_sk#884,ss_ticket_number#885L,ss_quantity#886,ss_wholesale_cost#887,ss_list_price#888,ss_sales_price#889,ss_ext_discount_amt#890,ss_ext_sales_price#891,ss_ext_wholesale_cost#892,ss_ext_list_price#893,ss_ext_tax#894,ss_coupon_amt#895,ss_net_paid#896,ss_net_paid_inc_tax#897,ss_net_profit#898,ss_sold_date_sk#899] parquet\n            :        :     +- Project [d_date_sk#900]\n            :        :        +- Filter ((isnotnull(d_year#906) AND ((d_year#906 >= 1998) AND (d_year#906 <= 2000))) AND isnotnull(d_date_sk#900))\n            :        :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#900,d_date_id#901,d_date#902,d_month_seq#903,d_week_seq#904,d_quarter_seq#905,d_year#906,d_dow#907,d_moy#908,d_dom#909,d_qoy#910,d_fy_year#911,d_fy_quarter_seq#912,d_fy_week_seq#913,d_day_name#914,d_quarter_name#915,d_holiday#916,d_weekend#917,d_following_holiday#918,d_first_dom#919,d_last_dom#920,d_same_day_ly#921,d_same_day_lq#922,d_current_day#923,... 4 more fields] parquet\n            :        :- Project [cs_quantity#945 AS quantity#748, cs_list_price#947 AS list_price#749]\n            :        :  +- Join Inner, (cs_sold_date_sk#961 = d_date_sk#962)\n            :        :     :- Project [cs_quantity#945, cs_list_price#947, cs_sold_date_sk#961]\n            :        :     :  +- Filter (isnotnull(cs_sold_date_sk#961) AND dynamicpruning#1289 [cs_sold_date_sk#961])\n            :        :     :     :  +- Project [d_date_sk#962]\n            :        :     :     :     +- Filter ((isnotnull(d_year#968) AND ((d_year#968 >= 1998) AND (d_year#968 <= 2000))) AND isnotnull(d_date_sk#962))\n            :        :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#962,d_date_id#963,d_date#964,d_month_seq#965,d_week_seq#966,d_quarter_seq#967,d_year#968,d_dow#969,d_moy#970,d_dom#971,d_qoy#972,d_fy_year#973,d_fy_quarter_seq#974,d_fy_week_seq#975,d_day_name#976,d_quarter_name#977,d_holiday#978,d_weekend#979,d_following_holiday#980,d_first_dom#981,d_last_dom#982,d_same_day_ly#983,d_same_day_lq#984,d_current_day#985,... 4 more fields] parquet\n            :        :     :     +- Relation spark_catalog.tpcds_100.catalog_sales[cs_sold_time_sk#928,cs_ship_date_sk#929,cs_bill_customer_sk#930,cs_bill_cdemo_sk#931,cs_bill_hdemo_sk#932,cs_bill_addr_sk#933,cs_ship_customer_sk#934,cs_ship_cdemo_sk#935,cs_ship_hdemo_sk#936,cs_ship_addr_sk#937,cs_call_center_sk#938,cs_catalog_page_sk#939,cs_ship_mode_sk#940,cs_warehouse_sk#941,cs_item_sk#942,cs_promo_sk#943,cs_order_number#944L,cs_quantity#945,cs_wholesale_cost#946,cs_list_price#947,cs_sales_price#948,cs_ext_discount_amt#949,cs_ext_sales_price#950,cs_ext_wholesale_cost#951,... 10 more fields] parquet\n            :        :     +- Project [d_date_sk#962]\n            :        :        +- Filter ((isnotnull(d_year#968) AND ((d_year#968 >= 1998) AND (d_year#968 <= 2000))) AND isnotnull(d_date_sk#962))\n            :        :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#962,d_date_id#963,d_date#964,d_month_seq#965,d_week_seq#966,d_quarter_seq#967,d_year#968,d_dow#969,d_moy#970,d_dom#971,d_qoy#972,d_fy_year#973,d_fy_quarter_seq#974,d_fy_week_seq#975,d_day_name#976,d_quarter_name#977,d_holiday#978,d_weekend#979,d_following_holiday#980,d_first_dom#981,d_last_dom#982,d_same_day_ly#983,d_same_day_lq#984,d_current_day#985,... 4 more fields] parquet\n            :        +- Project [ws_quantity#1007 AS quantity#750, ws_list_price#1009 AS list_price#751]\n            :           +- Join Inner, (ws_sold_date_sk#1023 = d_date_sk#1024)\n            :              :- Project [ws_quantity#1007, ws_list_price#1009, ws_sold_date_sk#1023]\n            :              :  +- Filter (isnotnull(ws_sold_date_sk#1023) AND dynamicpruning#1290 [ws_sold_date_sk#1023])\n            :              :     :  +- Project [d_date_sk#1024]\n            :              :     :     +- Filter ((isnotnull(d_year#1030) AND ((d_year#1030 >= 1998) AND (d_year#1030 <= 2000))) AND isnotnull(d_date_sk#1024))\n            :              :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#1024,d_date_id#1025,d_date#1026,d_month_seq#1027,d_week_seq#1028,d_quarter_seq#1029,d_year#1030,d_dow#1031,d_moy#1032,d_dom#1033,d_qoy#1034,d_fy_year#1035,d_fy_quarter_seq#1036,d_fy_week_seq#1037,d_day_name#1038,d_quarter_name#1039,d_holiday#1040,d_weekend#1041,d_following_holiday#1042,d_first_dom#1043,d_last_dom#1044,d_same_day_ly#1045,d_same_day_lq#1046,d_current_day#1047,... 4 more fields] parquet\n            :              :     +- Relation spark_catalog.tpcds_100.web_sales[ws_sold_time_sk#990,ws_ship_date_sk#991,ws_item_sk#992,ws_bill_customer_sk#993,ws_bill_cdemo_sk#994,ws_bill_hdemo_sk#995,ws_bill_addr_sk#996,ws_ship_customer_sk#997,ws_ship_cdemo_sk#998,ws_ship_hdemo_sk#999,ws_ship_addr_sk#1000,ws_web_page_sk#1001,ws_web_site_sk#1002,ws_ship_mode_sk#1003,ws_warehouse_sk#1004,ws_promo_sk#1005,ws_order_number#1006L,ws_quantity#1007,ws_wholesale_cost#1008,ws_list_price#1009,ws_sales_price#1010,ws_ext_discount_amt#1011,ws_ext_sales_price#1012,ws_ext_wholesale_cost#1013,... 10 more fields] parquet\n            :              +- Project [d_date_sk#1024]\n            :                 +- Filter ((isnotnull(d_year#1030) AND ((d_year#1030 >= 1998) AND (d_year#1030 <= 2000))) AND isnotnull(d_date_sk#1024))\n            :                    +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#1024,d_date_id#1025,d_date#1026,d_month_seq#1027,d_week_seq#1028,d_quarter_seq#1029,d_year#1030,d_dow#1031,d_moy#1032,d_dom#1033,d_qoy#1034,d_fy_year#1035,d_fy_quarter_seq#1036,d_fy_week_seq#1037,d_day_name#1038,d_quarter_name#1039,d_holiday#1040,d_weekend#1041,d_following_holiday#1042,d_first_dom#1043,d_last_dom#1044,d_same_day_ly#1045,d_same_day_lq#1046,d_current_day#1047,... 4 more fields] parquet\n            +- Aggregate [i_brand_id#1155, i_class_id#1157, i_category_id#1159], [store AS channel#736, i_brand_id#1155, i_class_id#1157, i_category_id#1159, sum((cast(ss_quantity#1134 as decimal(10,0)) * ss_list_price#1136)) AS sales#737, count(1) AS number_sales#738L]\n               +- Project [ss_quantity#1134, ss_list_price#1136, i_brand_id#1155, i_class_id#1157, i_category_id#1159]\n                  +- Join Inner, (ss_item_sk#1126 = i_item_sk#1148)\n                     :- Project [ss_item_sk#1126, ss_quantity#1134, ss_list_price#1136]\n                     :  +- Join Inner, (ss_sold_date_sk#1147 = d_date_sk#1170)\n                     :     :- Join LeftSemi, (ss_item_sk#1126 = ss_item_sk#745)\n                     :     :  :- Project [ss_item_sk#1126, ss_quantity#1134, ss_list_price#1136, ss_sold_date_sk#1147]\n                     :     :  :  +- Filter ((isnotnull(ss_item_sk#1126) AND isnotnull(ss_sold_date_sk#1147)) AND dynamicpruning#1310 [ss_sold_date_sk#1147])\n                     :     :  :     :  +- Project [d_date_sk#1170]\n                     :     :  :     :     +- Filter ((isnotnull(d_week_seq#1174) AND (d_week_seq#1174 = scalar-subquery#740 [])) AND isnotnull(d_date_sk#1170))\n                     :     :  :     :        :  +- Project [d_week_seq#1241]\n                     :     :  :     :        :     +- Filter (((isnotnull(d_year#1243) AND isnotnull(d_moy#1245)) AND isnotnull(d_dom#1246)) AND (((d_year#1243 = 1998) AND (d_moy#1245 = 12)) AND (d_dom#1246 = 16)))\n                     :     :  :     :        :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#1237,d_date_id#1238,d_date#1239,d_month_seq#1240,d_week_seq#1241,d_quarter_seq#1242,d_year#1243,d_dow#1244,d_moy#1245,d_dom#1246,d_qoy#1247,d_fy_year#1248,d_fy_quarter_seq#1249,d_fy_week_seq#1250,d_day_name#1251,d_quarter_name#1252,d_holiday#1253,d_weekend#1254,d_following_holiday#1255,d_first_dom#1256,d_last_dom#1257,d_same_day_ly#1258,d_same_day_lq#1259,d_current_day#1260,... 4 more fields] parquet\n                     :     :  :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#1170,d_date_id#1171,d_date#1172,d_month_seq#1173,d_week_seq#1174,d_quarter_seq#1175,d_year#1176,d_dow#1177,d_moy#1178,d_dom#1179,d_qoy#1180,d_fy_year#1181,d_fy_quarter_seq#1182,d_fy_week_seq#1183,d_day_name#1184,d_quarter_name#1185,d_holiday#1186,d_weekend#1187,d_following_holiday#1188,d_first_dom#1189,d_last_dom#1190,d_same_day_ly#1191,d_same_day_lq#1192,d_current_day#1193,... 4 more fields] parquet\n                     :     :  :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#1125,ss_item_sk#1126,ss_customer_sk#1127,ss_cdemo_sk#1128,ss_hdemo_sk#1129,ss_addr_sk#1130,ss_store_sk#1131,ss_promo_sk#1132,ss_ticket_number#1133L,ss_quantity#1134,ss_wholesale_cost#1135,ss_list_price#1136,ss_sales_price#1137,ss_ext_discount_amt#1138,ss_ext_sales_price#1139,ss_ext_wholesale_cost#1140,ss_ext_list_price#1141,ss_ext_tax#1142,ss_coupon_amt#1143,ss_net_paid#1144,ss_net_paid_inc_tax#1145,ss_net_profit#1146,ss_sold_date_sk#1147] parquet\n                     :     :  +- Project [i_item_sk#25 AS ss_item_sk#745]\n                     :     :     +- Join Inner, (((i_brand_id#32 = brand_id#742) AND (i_class_id#34 = class_id#743)) AND (i_category_id#36 = category_id#744))\n                     :     :        :- Project [i_item_sk#25, i_brand_id#32, i_class_id#34, i_category_id#36]\n                     :     :        :  +- Filter ((isnotnull(i_brand_id#32) AND isnotnull(i_class_id#34)) AND isnotnull(i_category_id#36))\n                     :     :        :     +- Relation spark_catalog.tpcds_100.item[i_item_sk#25,i_item_id#26,i_rec_start_date#27,i_rec_end_date#28,i_item_desc#29,i_current_price#30,i_wholesale_cost#31,i_brand_id#32,i_brand#33,i_class_id#34,i_class#35,i_category_id#36,i_category#37,i_manufact_id#38,i_manufact#39,i_size#40,i_formulation#41,i_color#42,i_units#43,i_container#44,i_manager_id#45,i_product_name#46] parquet\n                     :     :        +- Join LeftSemi, (((brand_id#742 <=> i_brand_id#834) AND (class_id#743 <=> i_class_id#836)) AND (category_id#744 <=> i_category_id#838))\n                     :     :           :- Aggregate [brand_id#742, class_id#743, category_id#744], [brand_id#742, class_id#743, category_id#744]\n                     :     :           :  +- Project [i_brand_id#762 AS brand_id#742, i_class_id#764 AS class_id#743, i_category_id#766 AS category_id#744]\n                     :     :           :     +- Join Inner, (ss_item_sk#48 = i_item_sk#755)\n                     :     :           :        :- Project [ss_item_sk#48]\n                     :     :           :        :  +- Join Inner, (ss_sold_date_sk#69 = d_date_sk#70)\n                     :     :           :        :     :- Project [ss_item_sk#48, ss_sold_date_sk#69]\n                     :     :           :        :     :  +- Filter ((isnotnull(ss_item_sk#48) AND isnotnull(ss_sold_date_sk#69)) AND dynamicpruning#1297 [ss_sold_date_sk#69])\n                     :     :           :        :     :     :  +- Project [d_date_sk#70]\n                     :     :           :        :     :     :     +- Filter ((isnotnull(d_year#76) AND ((d_year#76 >= 1998) AND (d_year#76 <= 2000))) AND isnotnull(d_date_sk#70))\n                     :     :           :        :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#70,d_date_id#71,d_date#72,d_month_seq#73,d_week_seq#74,d_quarter_seq#75,d_year#76,d_dow#77,d_moy#78,d_dom#79,d_qoy#80,d_fy_year#81,d_fy_quarter_seq#82,d_fy_week_seq#83,d_day_name#84,d_quarter_name#85,d_holiday#86,d_weekend#87,d_following_holiday#88,d_first_dom#89,d_last_dom#90,d_same_day_ly#91,d_same_day_lq#92,d_current_day#93,... 4 more fields] parquet\n                     :     :           :        :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#47,ss_item_sk#48,ss_customer_sk#49,ss_cdemo_sk#50,ss_hdemo_sk#51,ss_addr_sk#52,ss_store_sk#53,ss_promo_sk#54,ss_ticket_number#55L,ss_quantity#56,ss_wholesale_cost#57,ss_list_price#58,ss_sales_price#59,ss_ext_discount_amt#60,ss_ext_sales_price#61,ss_ext_wholesale_cost#62,ss_ext_list_price#63,ss_ext_tax#64,ss_coupon_amt#65,ss_net_paid#66,ss_net_paid_inc_tax#67,ss_net_profit#68,ss_sold_date_sk#69] parquet\n                     :     :           :        :     +- LogicalQueryStage Project [d_date_sk#70], BroadcastQueryStage 23\n                     :     :           :        +- Join LeftSemi, (((i_brand_id#762 <=> i_brand_id#784) AND (i_class_id#764 <=> i_class_id#786)) AND (i_category_id#766 <=> i_category_id#788))\n                     :     :           :           :- LogicalQueryStage Project [i_item_sk#755, i_brand_id#762, i_class_id#764, i_category_id#766], ShuffleQueryStage 25\n                     :     :           :           +- Project [i_brand_id#784, i_class_id#786, i_category_id#788]\n                     :     :           :              +- Join Inner, (cs_item_sk#112 = i_item_sk#777)\n                     :     :           :                 :- Project [cs_item_sk#112]\n                     :     :           :                 :  +- Join Inner, (cs_sold_date_sk#131 = d_date_sk#799)\n                     :     :           :                 :     :- Project [cs_item_sk#112, cs_sold_date_sk#131]\n                     :     :           :                 :     :  +- Filter ((isnotnull(cs_item_sk#112) AND isnotnull(cs_sold_date_sk#131)) AND dynamicpruning#1298 [cs_sold_date_sk#131])\n                     :     :           :                 :     :     :  +- Project [d_date_sk#799]\n                     :     :           :                 :     :     :     +- Filter ((isnotnull(d_year#805) AND ((d_year#805 >= 1998) AND (d_year#805 <= 2000))) AND isnotnull(d_date_sk#799))\n                     :     :           :                 :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#799,d_date_id#800,d_date#801,d_month_seq#802,d_week_seq#803,d_quarter_seq#804,d_year#805,d_dow#806,d_moy#807,d_dom#808,d_qoy#809,d_fy_year#810,d_fy_quarter_seq#811,d_fy_week_seq#812,d_day_name#813,d_quarter_name#814,d_holiday#815,d_weekend#816,d_following_holiday#817,d_first_dom#818,d_last_dom#819,d_same_day_ly#820,d_same_day_lq#821,d_current_day#822,... 4 more fields] parquet\n                     :     :           :                 :     :     +- Relation spark_catalog.tpcds_100.catalog_sales[cs_sold_time_sk#98,cs_ship_date_sk#99,cs_bill_customer_sk#100,cs_bill_cdemo_sk#101,cs_bill_hdemo_sk#102,cs_bill_addr_sk#103,cs_ship_customer_sk#104,cs_ship_cdemo_sk#105,cs_ship_hdemo_sk#106,cs_ship_addr_sk#107,cs_call_center_sk#108,cs_catalog_page_sk#109,cs_ship_mode_sk#110,cs_warehouse_sk#111,cs_item_sk#112,cs_promo_sk#113,cs_order_number#114L,cs_quantity#115,cs_wholesale_cost#116,cs_list_price#117,cs_sales_price#118,cs_ext_discount_amt#119,cs_ext_sales_price#120,cs_ext_wholesale_cost#121,... 10 more fields] parquet\n                     :     :           :                 :     +- LogicalQueryStage Project [d_date_sk#799], BroadcastQueryStage 27\n                     :     :           :                 +- LogicalQueryStage Project [i_item_sk#777, i_brand_id#784, i_class_id#786, i_category_id#788], BroadcastQueryStage 29\n                     :     :           +- Project [i_brand_id#834, i_class_id#836, i_category_id#838]\n                     :     :              +- Join Inner, (ws_item_sk#134 = i_item_sk#827)\n                     :     :                 :- Project [ws_item_sk#134]\n                     :     :                 :  +- Join Inner, (ws_sold_date_sk#165 = d_date_sk#849)\n                     :     :                 :     :- Project [ws_item_sk#134, ws_sold_date_sk#165]\n                     :     :                 :     :  +- Filter ((isnotnull(ws_item_sk#134) AND isnotnull(ws_sold_date_sk#165)) AND dynamicpruning#1299 [ws_sold_date_sk#165])\n                     :     :                 :     :     :  +- Project [d_date_sk#849]\n                     :     :                 :     :     :     +- Filter ((isnotnull(d_year#855) AND ((d_year#855 >= 1998) AND (d_year#855 <= 2000))) AND isnotnull(d_date_sk#849))\n                     :     :                 :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#849,d_date_id#850,d_date#851,d_month_seq#852,d_week_seq#853,d_quarter_seq#854,d_year#855,d_dow#856,d_moy#857,d_dom#858,d_qoy#859,d_fy_year#860,d_fy_quarter_seq#861,d_fy_week_seq#862,d_day_name#863,d_quarter_name#864,d_holiday#865,d_weekend#866,d_following_holiday#867,d_first_dom#868,d_last_dom#869,d_same_day_ly#870,d_same_day_lq#871,d_current_day#872,... 4 more fields] parquet\n                     :     :                 :     :     +- Relation spark_catalog.tpcds_100.web_sales[ws_sold_time_sk#132,ws_ship_date_sk#133,ws_item_sk#134,ws_bill_customer_sk#135,ws_bill_cdemo_sk#136,ws_bill_hdemo_sk#137,ws_bill_addr_sk#138,ws_ship_customer_sk#139,ws_ship_cdemo_sk#140,ws_ship_hdemo_sk#141,ws_ship_addr_sk#142,ws_web_page_sk#143,ws_web_site_sk#144,ws_ship_mode_sk#145,ws_warehouse_sk#146,ws_promo_sk#147,ws_order_number#148L,ws_quantity#149,ws_wholesale_cost#150,ws_list_price#151,ws_sales_price#152,ws_ext_discount_amt#153,ws_ext_sales_price#154,ws_ext_wholesale_cost#155,... 10 more fields] parquet\n                     :     :                 :     +- LogicalQueryStage Project [d_date_sk#849], BroadcastQueryStage 31\n                     :     :                 +- LogicalQueryStage Project [i_item_sk#827, i_brand_id#834, i_class_id#836, i_category_id#838], BroadcastQueryStage 33\n                     :     +- LogicalQueryStage Project [d_date_sk#1170], BroadcastQueryStage 34\n                     +- Join LeftSemi, (i_item_sk#1148 = ss_item_sk#745)\n                        :- Project [i_item_sk#1148, i_brand_id#1155, i_class_id#1157, i_category_id#1159]\n                        :  +- Filter (((isnotnull(i_item_sk#1148) AND isnotnull(i_brand_id#1155)) AND isnotnull(i_class_id#1157)) AND isnotnull(i_category_id#1159))\n                        :     +- Relation spark_catalog.tpcds_100.item[i_item_sk#1148,i_item_id#1149,i_rec_start_date#1150,i_rec_end_date#1151,i_item_desc#1152,i_current_price#1153,i_wholesale_cost#1154,i_brand_id#1155,i_brand#1156,i_class_id#1157,i_class#1158,i_category_id#1159,i_category#1160,i_manufact_id#1161,i_manufact#1162,i_size#1163,i_formulation#1164,i_color#1165,i_units#1166,i_container#1167,i_manager_id#1168,i_product_name#1169] parquet\n                        +- Project [i_item_sk#25 AS ss_item_sk#745]\n                           +- Join Inner, (((i_brand_id#32 = brand_id#742) AND (i_class_id#34 = class_id#743)) AND (i_category_id#36 = category_id#744))\n                              :- Project [i_item_sk#25, i_brand_id#32, i_class_id#34, i_category_id#36]\n                              :  +- Filter ((isnotnull(i_brand_id#32) AND isnotnull(i_class_id#34)) AND isnotnull(i_category_id#36))\n                              :     +- Relation spark_catalog.tpcds_100.item[i_item_sk#25,i_item_id#26,i_rec_start_date#27,i_rec_end_date#28,i_item_desc#29,i_current_price#30,i_wholesale_cost#31,i_brand_id#32,i_brand#33,i_class_id#34,i_class#35,i_category_id#36,i_category#37,i_manufact_id#38,i_manufact#39,i_size#40,i_formulation#41,i_color#42,i_units#43,i_container#44,i_manager_id#45,i_product_name#46] parquet\n                              +- Join LeftSemi, (((brand_id#742 <=> i_brand_id#834) AND (class_id#743 <=> i_class_id#836)) AND (category_id#744 <=> i_category_id#838))\n                                 :- Aggregate [brand_id#742, class_id#743, category_id#744], [brand_id#742, class_id#743, category_id#744]\n                                 :  +- Project [i_brand_id#762 AS brand_id#742, i_class_id#764 AS class_id#743, i_category_id#766 AS category_id#744]\n                                 :     +- Join Inner, (ss_item_sk#48 = i_item_sk#755)\n                                 :        :- Project [ss_item_sk#48]\n                                 :        :  +- Join Inner, (ss_sold_date_sk#69 = d_date_sk#70)\n                                 :        :     :- Project [ss_item_sk#48, ss_sold_date_sk#69]\n                                 :        :     :  +- Filter ((isnotnull(ss_item_sk#48) AND isnotnull(ss_sold_date_sk#69)) AND dynamicpruning#1297 [ss_sold_date_sk#69])\n                                 :        :     :     :  +- Project [d_date_sk#70]\n                                 :        :     :     :     +- Filter ((isnotnull(d_year#76) AND ((d_year#76 >= 1998) AND (d_year#76 <= 2000))) AND isnotnull(d_date_sk#70))\n                                 :        :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#70,d_date_id#71,d_date#72,d_month_seq#73,d_week_seq#74,d_quarter_seq#75,d_year#76,d_dow#77,d_moy#78,d_dom#79,d_qoy#80,d_fy_year#81,d_fy_quarter_seq#82,d_fy_week_seq#83,d_day_name#84,d_quarter_name#85,d_holiday#86,d_weekend#87,d_following_holiday#88,d_first_dom#89,d_last_dom#90,d_same_day_ly#91,d_same_day_lq#92,d_current_day#93,... 4 more fields] parquet\n                                 :        :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#47,ss_item_sk#48,ss_customer_sk#49,ss_cdemo_sk#50,ss_hdemo_sk#51,ss_addr_sk#52,ss_store_sk#53,ss_promo_sk#54,ss_ticket_number#55L,ss_quantity#56,ss_wholesale_cost#57,ss_list_price#58,ss_sales_price#59,ss_ext_discount_amt#60,ss_ext_sales_price#61,ss_ext_wholesale_cost#62,ss_ext_list_price#63,ss_ext_tax#64,ss_coupon_amt#65,ss_net_paid#66,ss_net_paid_inc_tax#67,ss_net_profit#68,ss_sold_date_sk#69] parquet\n                                 :        :     +- LogicalQueryStage Project [d_date_sk#70], BroadcastQueryStage 36\n                                 :        +- Join LeftSemi, (((i_brand_id#762 <=> i_brand_id#784) AND (i_class_id#764 <=> i_class_id#786)) AND (i_category_id#766 <=> i_category_id#788))\n                                 :           :- LogicalQueryStage Project [i_item_sk#755, i_brand_id#762, i_class_id#764, i_category_id#766], ShuffleQueryStage 38\n                                 :           +- Project [i_brand_id#784, i_class_id#786, i_category_id#788]\n                                 :              +- Join Inner, (cs_item_sk#112 = i_item_sk#777)\n                                 :                 :- Project [cs_item_sk#112]\n                                 :                 :  +- Join Inner, (cs_sold_date_sk#131 = d_date_sk#799)\n                                 :                 :     :- Project [cs_item_sk#112, cs_sold_date_sk#131]\n                                 :                 :     :  +- Filter ((isnotnull(cs_item_sk#112) AND isnotnull(cs_sold_date_sk#131)) AND dynamicpruning#1298 [cs_sold_date_sk#131])\n                                 :                 :     :     :  +- Project [d_date_sk#799]\n                                 :                 :     :     :     +- Filter ((isnotnull(d_year#805) AND ((d_year#805 >= 1998) AND (d_year#805 <= 2000))) AND isnotnull(d_date_sk#799))\n                                 :                 :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#799,d_date_id#800,d_date#801,d_month_seq#802,d_week_seq#803,d_quarter_seq#804,d_year#805,d_dow#806,d_moy#807,d_dom#808,d_qoy#809,d_fy_year#810,d_fy_quarter_seq#811,d_fy_week_seq#812,d_day_name#813,d_quarter_name#814,d_holiday#815,d_weekend#816,d_following_holiday#817,d_first_dom#818,d_last_dom#819,d_same_day_ly#820,d_same_day_lq#821,d_current_day#822,... 4 more fields] parquet\n                                 :                 :     :     +- Relation spark_catalog.tpcds_100.catalog_sales[cs_sold_time_sk#98,cs_ship_date_sk#99,cs_bill_customer_sk#100,cs_bill_cdemo_sk#101,cs_bill_hdemo_sk#102,cs_bill_addr_sk#103,cs_ship_customer_sk#104,cs_ship_cdemo_sk#105,cs_ship_hdemo_sk#106,cs_ship_addr_sk#107,cs_call_center_sk#108,cs_catalog_page_sk#109,cs_ship_mode_sk#110,cs_warehouse_sk#111,cs_item_sk#112,cs_promo_sk#113,cs_order_number#114L,cs_quantity#115,cs_wholesale_cost#116,cs_list_price#117,cs_sales_price#118,cs_ext_discount_amt#119,cs_ext_sales_price#120,cs_ext_wholesale_cost#121,... 10 more fields] parquet\n                                 :                 :     +- LogicalQueryStage Project [d_date_sk#799], BroadcastQueryStage 40\n                                 :                 +- LogicalQueryStage Project [i_item_sk#777, i_brand_id#784, i_class_id#786, i_category_id#788], BroadcastQueryStage 42\n                                 +- Project [i_brand_id#834, i_class_id#836, i_category_id#838]\n                                    +- Join Inner, (ws_item_sk#134 = i_item_sk#827)\n                                       :- Project [ws_item_sk#134]\n                                       :  +- Join Inner, (ws_sold_date_sk#165 = d_date_sk#849)\n                                       :     :- Project [ws_item_sk#134, ws_sold_date_sk#165]\n                                       :     :  +- Filter ((isnotnull(ws_item_sk#134) AND isnotnull(ws_sold_date_sk#165)) AND dynamicpruning#1299 [ws_sold_date_sk#165])\n                                       :     :     :  +- Project [d_date_sk#849]\n                                       :     :     :     +- Filter ((isnotnull(d_year#855) AND ((d_year#855 >= 1998) AND (d_year#855 <= 2000))) AND isnotnull(d_date_sk#849))\n                                       :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#849,d_date_id#850,d_date#851,d_month_seq#852,d_week_seq#853,d_quarter_seq#854,d_year#855,d_dow#856,d_moy#857,d_dom#858,d_qoy#859,d_fy_year#860,d_fy_quarter_seq#861,d_fy_week_seq#862,d_day_name#863,d_quarter_name#864,d_holiday#865,d_weekend#866,d_following_holiday#867,d_first_dom#868,d_last_dom#869,d_same_day_ly#870,d_same_day_lq#871,d_current_day#872,... 4 more fields] parquet\n                                       :     :     +- Relation spark_catalog.tpcds_100.web_sales[ws_sold_time_sk#132,ws_ship_date_sk#133,ws_item_sk#134,ws_bill_customer_sk#135,ws_bill_cdemo_sk#136,ws_bill_hdemo_sk#137,ws_bill_addr_sk#138,ws_ship_customer_sk#139,ws_ship_cdemo_sk#140,ws_ship_hdemo_sk#141,ws_ship_addr_sk#142,ws_web_page_sk#143,ws_web_site_sk#144,ws_ship_mode_sk#145,ws_warehouse_sk#146,ws_promo_sk#147,ws_order_number#148L,ws_quantity#149,ws_wholesale_cost#150,ws_list_price#151,ws_sales_price#152,ws_ext_discount_amt#153,ws_ext_sales_price#154,ws_ext_wholesale_cost#155,... 10 more fields] parquet\n                                       :     +- LogicalQueryStage Project [d_date_sk#849], BroadcastQueryStage 44\n                                       +- LogicalQueryStage Project [i_item_sk#827, i_brand_id#834, i_class_id#836, i_category_id#838], BroadcastQueryStage 46\n"
      },
      "IM" : {
        "inputSizeInBytes" : 430637814304,
        "inputRowCount" : 2514978012
      },
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 1,
        "FinishedTasksNum" : 4,
        "FinishedTasksTotalTimeInMs" : 5035.0,
        "FinishedTasksDistributionInMs" : [ 1225.0, 1262.0, 1266.0, 1282.0, 1282.0 ]
      },
      "StartTimeInMs" : 1702226626896,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 84602,
        "IOBytes" : {
          "Total" : 3424125407,
          "Details" : {
            "IR" : 2735262323,
            "IW" : 0,
            "SR" : 344431542,
            "SW" : 344431542
          }
        }
      }
    },
    "18" : {
      "LQP" : {
        "operators" : {
          "45" : {
            "sign" : 1698660872,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 14972593792,
            "rowCount" : 71983624,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ws_sold_time_sk#990, ws_ship_date_sk#991, ws_item_sk#992, ws_bill_customer_sk#993, ws_bill_cdemo_sk#994, ws_bill_hdemo_sk#995, ws_bill_addr_sk#996, ws_ship_customer_sk#997, ws_ship_cdemo_sk#998, ws_ship_hdemo_sk#999, ws_ship_addr_sk#1000, ws_web_page_sk#1001, ws_web_site_sk#1002, ws_ship_mode_sk#1003, ws_warehouse_sk#1004, ws_promo_sk#1005, ws_order_number#1006L, ws_quantity#1007, ws_wholesale_cost#1008, ws_list_price#1009, ws_sales_price#1010, ws_ext_discount_amt#1011, ws_ext_sales_price#1012, ws_ext_wholesale_cost#1013, ... 10 more fields], `spark_catalog`.`tpcds_100`.`web_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "34" : {
            "sign" : 824386657,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 3878455336,
            "rowCount" : 138516262,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cs_sold_date_sk#961 = d_date_sk#962) "
          },
          "67" : {
            "sign" : 2017469727,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 18409208,
            "rowCount" : 176814,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Join LeftSemi, (i_item_sk#1148 = ss_item_sk#745), BroadcastQueryStage 98 "
          },
          "12" : {
            "sign" : 571393713,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(ss_item_sk#1053) AND isnotnull(ss_sold_date_sk#1074)) AND dynamicpruning#1303 [ss_sold_date_sk#1074]) "
          },
          "66" : {
            "sign" : -1902204624,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1048632,
            "rowCount" : 7,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#1170], BroadcastQueryStage 34 "
          },
          "51" : {
            "sign" : -668019303,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 10893538666156608,
            "rowCount" : 340423083317394,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_quantity#1134, ss_list_price#1136, i_brand_id#1155, i_class_id#1157, i_category_id#1159] "
          },
          "8" : {
            "sign" : 447227797,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 46207619304,
            "rowCount" : 1925317471,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#1053, ss_quantity#1061, ss_list_price#1063] "
          },
          "19" : {
            "sign" : -1755539215,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#1209, d_date_id#1210, d_date#1211, d_month_seq#1212, d_week_seq#1213, d_quarter_seq#1214, d_year#1215, d_dow#1216, d_moy#1217, d_dom#1218, d_qoy#1219, d_fy_year#1220, d_fy_quarter_seq#1221, d_fy_week_seq#1222, d_day_name#1223, d_quarter_name#1224, d_holiday#1225, d_weekend#1226, d_following_holiday#1227, d_first_dom#1228, d_last_dom#1229, d_same_day_ly#1230, d_same_day_lq#1231, d_current_day#1232, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "23" : {
            "sign" : -1809172647,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 24,
            "rowCount" : 1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [avg((cast(quantity#746 as decimal(10,0)) * list_price#747)) AS average_sales#752] "
          },
          "62" : {
            "sign" : -79282860,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 24,
            "rowCount" : 2,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_week_seq#1241] "
          },
          "4" : {
            "sign" : -142739905,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 21787077332313216,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(sales#731) AND (cast(sales#731 as decimal(32,6)) > cast(scalar-subquery#735 [] as decimal(32,6)))) "
          },
          "40" : {
            "sign" : -169490734,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#962, d_date_id#963, d_date#964, d_month_seq#965, d_week_seq#966, d_quarter_seq#967, d_year#968, d_dow#969, d_moy#970, d_dom#971, d_qoy#972, d_fy_year#973, d_fy_quarter_seq#974, d_fy_week_seq#975, d_day_name#976, d_quarter_name#977, d_holiday#978, d_weekend#979, d_following_holiday#980, d_first_dom#981, d_last_dom#982, d_same_day_ly#983, d_same_day_lq#984, d_current_day#985, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "15" : {
            "sign" : 1866012666,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(d_week_seq#1101) AND (d_week_seq#1101 = scalar-subquery#734 [])) AND isnotnull(d_date_sk#1097)) "
          },
          "11" : {
            "sign" : 1222696026,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 7701269884,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#1053, ss_quantity#1061, ss_list_price#1063, ss_sold_date_sk#1074] "
          },
          "9" : {
            "sign" : 178119988,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 61610159072,
            "rowCount" : 1925317471,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#1074 = d_date_sk#1097) "
          },
          "44" : {
            "sign" : -1902449141,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 14972593792,
            "rowCount" : 71983624,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(ws_sold_date_sk#1023) AND dynamicpruning#1290 [ws_sold_date_sk#1023]) "
          },
          "33" : {
            "sign" : 825651901,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 2770325240,
            "rowCount" : 138516262,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_quantity#945 AS quantity#748, cs_list_price#947 AS list_price#749] "
          },
          "22" : {
            "sign" : 1172677288,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 18409208,
            "rowCount" : 176814,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Join LeftSemi, (i_item_sk#1075 = ss_item_sk#745), BroadcastQueryStage 96 "
          },
          "56" : {
            "sign" : -303911461,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 7701269884,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#1126, ss_quantity#1134, ss_list_price#1136, ss_sold_date_sk#1147] "
          },
          "55" : {
            "sign" : 1957680440,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 7701269884,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (ss_item_sk#1126 = ss_item_sk#745) "
          },
          "26" : {
            "sign" : -1804794945,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 7435136380,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#899 = d_date_sk#900) "
          },
          "50" : {
            "sign" : 1167992322,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 21787077332313216,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [i_brand_id#1155, i_class_id#1157, i_category_id#1159], [store AS channel#736, i_brand_id#1155, i_class_id#1157, i_category_id#1159, sum((cast(ss_quantity#1134 as decimal(10,0)) * ss_list_price#1136)) AS sales#737, count(1) AS number_sales#738L] "
          },
          "37" : {
            "sign" : -70077436,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 29800787536,
            "rowCount" : 143273017,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [cs_sold_time_sk#928, cs_ship_date_sk#929, cs_bill_customer_sk#930, cs_bill_cdemo_sk#931, cs_bill_hdemo_sk#932, cs_bill_addr_sk#933, cs_ship_customer_sk#934, cs_ship_cdemo_sk#935, cs_ship_hdemo_sk#936, cs_ship_addr_sk#937, cs_call_center_sk#938, cs_catalog_page_sk#939, cs_ship_mode_sk#940, cs_warehouse_sk#941, cs_item_sk#942, cs_promo_sk#943, cs_order_number#944L, cs_quantity#945, cs_wholesale_cost#946, cs_list_price#947, cs_sales_price#948, cs_ext_discount_amt#949, cs_ext_sales_price#950, cs_ext_wholesale_cost#951, ... 10 more fields], `spark_catalog`.`tpcds_100`.`catalog_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "61" : {
            "sign" : 683629544,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#1170, d_date_id#1171, d_date#1172, d_month_seq#1173, d_week_seq#1174, d_quarter_seq#1175, d_year#1176, d_dow#1177, d_moy#1178, d_dom#1179, d_qoy#1180, d_fy_year#1181, d_fy_quarter_seq#1182, d_fy_week_seq#1183, d_day_name#1184, d_quarter_name#1185, d_holiday#1186, d_weekend#1187, d_following_holiday#1188, d_first_dom#1189, d_last_dom#1190, d_same_day_ly#1191, d_same_day_lq#1192, d_current_day#1193, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "13" : {
            "sign" : 913239237,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#1052, ss_item_sk#1053, ss_customer_sk#1054, ss_cdemo_sk#1055, ss_hdemo_sk#1056, ss_addr_sk#1057, ss_store_sk#1058, ss_promo_sk#1059, ss_ticket_number#1060L, ss_quantity#1061, ss_wholesale_cost#1062, ss_list_price#1063, ss_sales_price#1064, ss_ext_discount_amt#1065, ss_ext_sales_price#1066, ss_ext_wholesale_cost#1067, ss_ext_list_price#1068, ss_ext_tax#1069, ss_coupon_amt#1070, ss_net_paid#1071, ss_net_paid_inc_tax#1072, ss_net_profit#1073, ss_sold_date_sk#1074], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "46" : {
            "sign" : -1100969675,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 17256,
            "rowCount" : 1438,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#1024] "
          },
          "24" : {
            "sign" : -1298322270,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Union",
            "sizeInBytes" : 9471049040,
            "rowCount" : 473552452,
            "isRuntime" : false,
            "predicate" : " (unknown) Union Arguments: false, false "
          },
          "35" : {
            "sign" : 1942236716,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 3438552408,
            "rowCount" : 143273017,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_quantity#945, cs_list_price#947, cs_sold_date_sk#961] "
          },
          "16" : {
            "sign" : 682718368,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#1097, d_date_id#1098, d_date#1099, d_month_seq#1100, d_week_seq#1101, d_quarter_seq#1102, d_year#1103, d_dow#1104, d_moy#1105, d_dom#1106, d_qoy#1107, d_fy_year#1108, d_fy_quarter_seq#1109, d_fy_week_seq#1110, d_day_name#1111, d_quarter_name#1112, d_holiday#1113, d_weekend#1114, d_following_holiday#1115, d_first_dom#1116, d_last_dom#1117, d_same_day_ly#1118, d_same_day_lq#1119, d_current_day#1120, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "5" : {
            "sign" : -1843308769,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 21787077332313216,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [i_brand_id#1082, i_class_id#1084, i_category_id#1086], [store AS channel#730, i_brand_id#1082, i_class_id#1084, i_category_id#1086, sum((cast(ss_quantity#1061 as decimal(10,0)) * ss_list_price#1063)) AS sales#731, count(1) AS number_sales#732L] "
          },
          "10" : {
            "sign" : 1532047545,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 7701269884,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (ss_item_sk#1053 = ss_item_sk#745) "
          },
          "59" : {
            "sign" : 1096234976,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 876588,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#1170] "
          },
          "48" : {
            "sign" : -502763688,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#1024, d_date_id#1025, d_date#1026, d_month_seq#1027, d_week_seq#1028, d_quarter_seq#1029, d_year#1030, d_dow#1031, d_moy#1032, d_dom#1033, d_qoy#1034, d_fy_year#1035, d_fy_quarter_seq#1036, d_fy_week_seq#1037, d_day_name#1038, d_quarter_name#1039, d_holiday#1040, d_weekend#1041, d_following_holiday#1042, d_first_dom#1043, d_last_dom#1044, d_same_day_ly#1045, d_same_day_lq#1046, d_current_day#1047, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "21" : {
            "sign" : -21562714,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1048632,
            "rowCount" : 7,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#1097], BroadcastQueryStage 9 "
          },
          "54" : {
            "sign" : -508787732,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 61610159072,
            "rowCount" : 1925317471,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#1147 = d_date_sk#1170) "
          },
          "43" : {
            "sign" : 49678577,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 1727606976,
            "rowCount" : 71983624,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_quantity#1007, ws_list_price#1009, ws_sold_date_sk#1023] "
          },
          "65" : {
            "sign" : 1108483913,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 10020600,
            "rowCount" : 176814,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_item_sk#25 AS ss_item_sk#745], BroadcastQueryStage 93 "
          },
          "57" : {
            "sign" : -604473204,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(ss_item_sk#1126) AND isnotnull(ss_sold_date_sk#1147)) AND dynamicpruning#1310 [ss_sold_date_sk#1147]) "
          },
          "32" : {
            "sign" : -820074406,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#900, d_date_id#901, d_date#902, d_month_seq#903, d_week_seq#904, d_quarter_seq#905, d_year#906, d_dow#907, d_moy#908, d_dom#909, d_qoy#910, d_fy_year#911, d_fy_quarter_seq#912, d_fy_week_seq#913, d_day_name#914, d_quarter_name#915, d_holiday#916, d_weekend#917, d_following_holiday#918, d_first_dom#919, d_last_dom#920, d_same_day_ly#921, d_same_day_lq#922, d_current_day#923, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "49" : {
            "sign" : -15821381,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 21787077332313216,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(sales#737) AND (cast(sales#737 as decimal(32,6)) > cast(scalar-subquery#741 [] as decimal(32,6)))) "
          },
          "6" : {
            "sign" : -1211649306,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 10893538666156608,
            "rowCount" : 340423083317394,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_quantity#1061, ss_list_price#1063, i_brand_id#1082, i_class_id#1084, i_category_id#1086] "
          },
          "36" : {
            "sign" : 1500374164,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 29800787536,
            "rowCount" : 143273017,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(cs_sold_date_sk#961) AND dynamicpruning#1289 [cs_sold_date_sk#961]) "
          },
          "1" : {
            "sign" : 1145641227,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
            "sizeInBytes" : 43574154664626432,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) LocalLimit Arguments: 100 "
          },
          "39" : {
            "sign" : -1695423935,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 353748,
            "rowCount" : 1438,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(d_year#968) AND ((d_year#968 >= 1998) AND (d_year#968 <= 2000))) AND isnotnull(d_date_sk#962)) "
          },
          "17" : {
            "sign" : -2061501032,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 36,
            "rowCount" : 3,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_week_seq#1213] "
          },
          "25" : {
            "sign" : 869525063,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 5310811700,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_quantity#886 AS quantity#746, ss_list_price#888 AS list_price#747] "
          },
          "60" : {
            "sign" : -1689547051,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(d_week_seq#1174) AND (d_week_seq#1174 = scalar-subquery#740 [])) AND isnotnull(d_date_sk#1170)) "
          },
          "14" : {
            "sign" : 707519831,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 876588,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#1097] "
          },
          "47" : {
            "sign" : -626435234,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 353748,
            "rowCount" : 1438,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(d_year#1030) AND ((d_year#1030 >= 1998) AND (d_year#1030 <= 2000))) AND isnotnull(d_date_sk#1024)) "
          },
          "31" : {
            "sign" : -2071970095,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 353748,
            "rowCount" : 1438,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(d_year#906) AND ((d_year#906 >= 1998) AND (d_year#906 <= 2000))) AND isnotnull(d_date_sk#900)) "
          },
          "58" : {
            "sign" : 1179432008,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#1125, ss_item_sk#1126, ss_customer_sk#1127, ss_cdemo_sk#1128, ss_hdemo_sk#1129, ss_addr_sk#1130, ss_store_sk#1131, ss_promo_sk#1132, ss_ticket_number#1133L, ss_quantity#1134, ss_wholesale_cost#1135, ss_list_price#1136, ss_sales_price#1137, ss_ext_discount_amt#1138, ss_ext_sales_price#1139, ss_ext_wholesale_cost#1140, ss_ext_list_price#1141, ss_ext_tax#1142, ss_coupon_amt#1143, ss_net_paid#1144, ss_net_paid_inc_tax#1145, ss_net_profit#1146, ss_sold_date_sk#1147], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "64" : {
            "sign" : 813769211,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#1237, d_date_id#1238, d_date#1239, d_month_seq#1240, d_week_seq#1241, d_quarter_seq#1242, d_year#1243, d_dow#1244, d_moy#1245, d_dom#1246, d_qoy#1247, d_fy_year#1248, d_fy_quarter_seq#1249, d_fy_week_seq#1250, d_day_name#1251, d_quarter_name#1252, d_holiday#1253, d_weekend#1254, d_following_holiday#1255, d_first_dom#1256, d_last_dom#1257, d_same_day_ly#1258, d_same_day_lq#1259, d_current_day#1260, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "53" : {
            "sign" : 342660770,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 46207619304,
            "rowCount" : 1925317471,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#1126, ss_quantity#1134, ss_list_price#1136] "
          },
          "42" : {
            "sign" : 1503367439,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 1945876940,
            "rowCount" : 69495605,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ws_sold_date_sk#1023 = d_date_sk#1024) "
          },
          "0" : {
            "sign" : 449474544,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
            "sizeInBytes" : 12000,
            "rowCount" : 100,
            "isRuntime" : false,
            "predicate" : " (unknown) GlobalLimit Arguments: 100 "
          },
          "20" : {
            "sign" : 1108483138,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 10020600,
            "rowCount" : 176814,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_item_sk#25 AS ss_item_sk#745], BroadcastQueryStage 89 "
          },
          "27" : {
            "sign" : 1776873494,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 6601088472,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_quantity#886, ss_list_price#888, ss_sold_date_sk#899] "
          },
          "2" : {
            "sign" : -444489466,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 43574154664626432,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [i_brand_id#1082 ASC NULLS FIRST, i_class_id#1084 ASC NULLS FIRST, i_category_id#1086 ASC NULLS FIRST], true "
          },
          "38" : {
            "sign" : 406087876,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 17256,
            "rowCount" : 1438,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#962] "
          },
          "18" : {
            "sign" : -1305353512,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 738,
            "rowCount" : 3,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(d_year#1215) AND isnotnull(d_moy#1217)) AND isnotnull(d_dom#1218)) AND (((d_year#1215 = 1999) AND (d_moy#1217 = 12)) AND (d_dom#1218 = 16))) "
          },
          "30" : {
            "sign" : 2019201408,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 17256,
            "rowCount" : 1438,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#900] "
          },
          "7" : {
            "sign" : 223171687,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 13616923332695760,
            "rowCount" : 340423083317394,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_item_sk#1053 = i_item_sk#1075) "
          },
          "29" : {
            "sign" : -1972788865,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#877, ss_item_sk#878, ss_customer_sk#879, ss_cdemo_sk#880, ss_hdemo_sk#881, ss_addr_sk#882, ss_store_sk#883, ss_promo_sk#884, ss_ticket_number#885L, ss_quantity#886, ss_wholesale_cost#887, ss_list_price#888, ss_sales_price#889, ss_ext_discount_amt#890, ss_ext_sales_price#891, ss_ext_wholesale_cost#892, ss_ext_list_price#893, ss_ext_tax#894, ss_coupon_amt#895, ss_net_paid#896, ss_net_paid_inc_tax#897, ss_net_profit#898, ss_sold_date_sk#899], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "41" : {
            "sign" : 17831375,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 1389912100,
            "rowCount" : 69495605,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_quantity#1007 AS quantity#750, ws_list_price#1009 AS list_price#751] "
          },
          "63" : {
            "sign" : 1734827371,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 492,
            "rowCount" : 2,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(d_year#1243) AND isnotnull(d_moy#1245)) AND isnotnull(d_dom#1246)) AND (((d_year#1243 = 1998) AND (d_moy#1245 = 12)) AND (d_dom#1246 = 16))) "
          },
          "3" : {
            "sign" : -275318404,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 43574154664626432,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (((i_brand_id#1082 = i_brand_id#1155) AND (i_class_id#1084 = i_class_id#1157)) AND (i_category_id#1086 = i_category_id#1159)) "
          },
          "52" : {
            "sign" : -41597265,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 13616923332695760,
            "rowCount" : 340423083317394,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_item_sk#1126 = i_item_sk#1148) "
          },
          "28" : {
            "sign" : 1377797290,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(ss_sold_date_sk#899) AND dynamicpruning#1288 [ss_sold_date_sk#899]) "
          }
        },
        "links" : [ {
          "fromId" : 13,
          "fromName" : "LogicalRelation",
          "toId" : 12,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 16,
          "fromName" : "LogicalRelation",
          "toId" : 15,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 19,
          "fromName" : "LogicalRelation",
          "toId" : 18,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 18,
          "fromName" : "Filter",
          "toId" : 17,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 17,
          "fromName" : "Project",
          "toId" : 15,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 15,
          "fromName" : "Filter",
          "toId" : 14,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 14,
          "fromName" : "Project",
          "toId" : 12,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 12,
          "fromName" : "Filter",
          "toId" : 11,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "Project",
          "toId" : 10,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 20,
          "fromName" : "LogicalQueryStage",
          "toId" : 10,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "Join",
          "toId" : 9,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 21,
          "fromName" : "LogicalQueryStage",
          "toId" : 9,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "Join",
          "toId" : 8,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "Project",
          "toId" : 7,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 22,
          "fromName" : "LogicalQueryStage",
          "toId" : 7,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Join",
          "toId" : 6,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Project",
          "toId" : 5,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Aggregate",
          "toId" : 4,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 29,
          "fromName" : "LogicalRelation",
          "toId" : 28,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 32,
          "fromName" : "LogicalRelation",
          "toId" : 31,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 31,
          "fromName" : "Filter",
          "toId" : 30,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 30,
          "fromName" : "Project",
          "toId" : 28,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 28,
          "fromName" : "Filter",
          "toId" : 27,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 27,
          "fromName" : "Project",
          "toId" : 26,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 30,
          "fromName" : "Project",
          "toId" : 26,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 26,
          "fromName" : "Join",
          "toId" : 25,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 25,
          "fromName" : "Project",
          "toId" : 24,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 37,
          "fromName" : "LogicalRelation",
          "toId" : 36,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 40,
          "fromName" : "LogicalRelation",
          "toId" : 39,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 39,
          "fromName" : "Filter",
          "toId" : 38,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 38,
          "fromName" : "Project",
          "toId" : 36,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 36,
          "fromName" : "Filter",
          "toId" : 35,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 35,
          "fromName" : "Project",
          "toId" : 34,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 38,
          "fromName" : "Project",
          "toId" : 34,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 34,
          "fromName" : "Join",
          "toId" : 33,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 33,
          "fromName" : "Project",
          "toId" : 24,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 45,
          "fromName" : "LogicalRelation",
          "toId" : 44,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 48,
          "fromName" : "LogicalRelation",
          "toId" : 47,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 47,
          "fromName" : "Filter",
          "toId" : 46,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 46,
          "fromName" : "Project",
          "toId" : 44,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 44,
          "fromName" : "Filter",
          "toId" : 43,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 43,
          "fromName" : "Project",
          "toId" : 42,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 46,
          "fromName" : "Project",
          "toId" : 42,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 42,
          "fromName" : "Join",
          "toId" : 41,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 41,
          "fromName" : "Project",
          "toId" : 24,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 24,
          "fromName" : "Union",
          "toId" : 23,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 23,
          "fromName" : "Aggregate",
          "toId" : 4,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 4,
          "fromName" : "Filter",
          "toId" : 3,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 58,
          "fromName" : "LogicalRelation",
          "toId" : 57,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 61,
          "fromName" : "LogicalRelation",
          "toId" : 60,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 64,
          "fromName" : "LogicalRelation",
          "toId" : 63,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 63,
          "fromName" : "Filter",
          "toId" : 62,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 62,
          "fromName" : "Project",
          "toId" : 60,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 60,
          "fromName" : "Filter",
          "toId" : 59,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 59,
          "fromName" : "Project",
          "toId" : 57,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 57,
          "fromName" : "Filter",
          "toId" : 56,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 56,
          "fromName" : "Project",
          "toId" : 55,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 65,
          "fromName" : "LogicalQueryStage",
          "toId" : 55,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 55,
          "fromName" : "Join",
          "toId" : 54,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 66,
          "fromName" : "LogicalQueryStage",
          "toId" : 54,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 54,
          "fromName" : "Join",
          "toId" : 53,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 53,
          "fromName" : "Project",
          "toId" : 52,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 67,
          "fromName" : "LogicalQueryStage",
          "toId" : 52,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 52,
          "fromName" : "Join",
          "toId" : 51,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 51,
          "fromName" : "Project",
          "toId" : 50,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 50,
          "fromName" : "Aggregate",
          "toId" : 49,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 23,
          "fromName" : "Aggregate",
          "toId" : 49,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 49,
          "fromName" : "Filter",
          "toId" : 3,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Join",
          "toId" : 2,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "LocalLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "LocalLimit",
          "toId" : 0,
          "toName" : "GlobalLimit",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [i_brand_id#1082 ASC NULLS FIRST, i_class_id#1084 ASC NULLS FIRST, i_category_id#1086 ASC NULLS FIRST], true\n      +- Join Inner, (((i_brand_id#1082 = i_brand_id#1155) AND (i_class_id#1084 = i_class_id#1157)) AND (i_category_id#1086 = i_category_id#1159))\n         :- Filter (isnotnull(sales#731) AND (cast(sales#731 as decimal(32,6)) > cast(scalar-subquery#735 [] as decimal(32,6))))\n         :  :  +- Aggregate [avg((cast(quantity#746 as decimal(10,0)) * list_price#747)) AS average_sales#752]\n         :  :     +- Union false, false\n         :  :        :- Project [ss_quantity#886 AS quantity#746, ss_list_price#888 AS list_price#747]\n         :  :        :  +- Join Inner, (ss_sold_date_sk#899 = d_date_sk#900)\n         :  :        :     :- Project [ss_quantity#886, ss_list_price#888, ss_sold_date_sk#899]\n         :  :        :     :  +- Filter (isnotnull(ss_sold_date_sk#899) AND dynamicpruning#1288 [ss_sold_date_sk#899])\n         :  :        :     :     :  +- Project [d_date_sk#900]\n         :  :        :     :     :     +- Filter ((isnotnull(d_year#906) AND ((d_year#906 >= 1998) AND (d_year#906 <= 2000))) AND isnotnull(d_date_sk#900))\n         :  :        :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#900,d_date_id#901,d_date#902,d_month_seq#903,d_week_seq#904,d_quarter_seq#905,d_year#906,d_dow#907,d_moy#908,d_dom#909,d_qoy#910,d_fy_year#911,d_fy_quarter_seq#912,d_fy_week_seq#913,d_day_name#914,d_quarter_name#915,d_holiday#916,d_weekend#917,d_following_holiday#918,d_first_dom#919,d_last_dom#920,d_same_day_ly#921,d_same_day_lq#922,d_current_day#923,... 4 more fields] parquet\n         :  :        :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#877,ss_item_sk#878,ss_customer_sk#879,ss_cdemo_sk#880,ss_hdemo_sk#881,ss_addr_sk#882,ss_store_sk#883,ss_promo_sk#884,ss_ticket_number#885L,ss_quantity#886,ss_wholesale_cost#887,ss_list_price#888,ss_sales_price#889,ss_ext_discount_amt#890,ss_ext_sales_price#891,ss_ext_wholesale_cost#892,ss_ext_list_price#893,ss_ext_tax#894,ss_coupon_amt#895,ss_net_paid#896,ss_net_paid_inc_tax#897,ss_net_profit#898,ss_sold_date_sk#899] parquet\n         :  :        :     +- Project [d_date_sk#900]\n         :  :        :        +- Filter ((isnotnull(d_year#906) AND ((d_year#906 >= 1998) AND (d_year#906 <= 2000))) AND isnotnull(d_date_sk#900))\n         :  :        :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#900,d_date_id#901,d_date#902,d_month_seq#903,d_week_seq#904,d_quarter_seq#905,d_year#906,d_dow#907,d_moy#908,d_dom#909,d_qoy#910,d_fy_year#911,d_fy_quarter_seq#912,d_fy_week_seq#913,d_day_name#914,d_quarter_name#915,d_holiday#916,d_weekend#917,d_following_holiday#918,d_first_dom#919,d_last_dom#920,d_same_day_ly#921,d_same_day_lq#922,d_current_day#923,... 4 more fields] parquet\n         :  :        :- Project [cs_quantity#945 AS quantity#748, cs_list_price#947 AS list_price#749]\n         :  :        :  +- Join Inner, (cs_sold_date_sk#961 = d_date_sk#962)\n         :  :        :     :- Project [cs_quantity#945, cs_list_price#947, cs_sold_date_sk#961]\n         :  :        :     :  +- Filter (isnotnull(cs_sold_date_sk#961) AND dynamicpruning#1289 [cs_sold_date_sk#961])\n         :  :        :     :     :  +- Project [d_date_sk#962]\n         :  :        :     :     :     +- Filter ((isnotnull(d_year#968) AND ((d_year#968 >= 1998) AND (d_year#968 <= 2000))) AND isnotnull(d_date_sk#962))\n         :  :        :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#962,d_date_id#963,d_date#964,d_month_seq#965,d_week_seq#966,d_quarter_seq#967,d_year#968,d_dow#969,d_moy#970,d_dom#971,d_qoy#972,d_fy_year#973,d_fy_quarter_seq#974,d_fy_week_seq#975,d_day_name#976,d_quarter_name#977,d_holiday#978,d_weekend#979,d_following_holiday#980,d_first_dom#981,d_last_dom#982,d_same_day_ly#983,d_same_day_lq#984,d_current_day#985,... 4 more fields] parquet\n         :  :        :     :     +- Relation spark_catalog.tpcds_100.catalog_sales[cs_sold_time_sk#928,cs_ship_date_sk#929,cs_bill_customer_sk#930,cs_bill_cdemo_sk#931,cs_bill_hdemo_sk#932,cs_bill_addr_sk#933,cs_ship_customer_sk#934,cs_ship_cdemo_sk#935,cs_ship_hdemo_sk#936,cs_ship_addr_sk#937,cs_call_center_sk#938,cs_catalog_page_sk#939,cs_ship_mode_sk#940,cs_warehouse_sk#941,cs_item_sk#942,cs_promo_sk#943,cs_order_number#944L,cs_quantity#945,cs_wholesale_cost#946,cs_list_price#947,cs_sales_price#948,cs_ext_discount_amt#949,cs_ext_sales_price#950,cs_ext_wholesale_cost#951,... 10 more fields] parquet\n         :  :        :     +- Project [d_date_sk#962]\n         :  :        :        +- Filter ((isnotnull(d_year#968) AND ((d_year#968 >= 1998) AND (d_year#968 <= 2000))) AND isnotnull(d_date_sk#962))\n         :  :        :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#962,d_date_id#963,d_date#964,d_month_seq#965,d_week_seq#966,d_quarter_seq#967,d_year#968,d_dow#969,d_moy#970,d_dom#971,d_qoy#972,d_fy_year#973,d_fy_quarter_seq#974,d_fy_week_seq#975,d_day_name#976,d_quarter_name#977,d_holiday#978,d_weekend#979,d_following_holiday#980,d_first_dom#981,d_last_dom#982,d_same_day_ly#983,d_same_day_lq#984,d_current_day#985,... 4 more fields] parquet\n         :  :        +- Project [ws_quantity#1007 AS quantity#750, ws_list_price#1009 AS list_price#751]\n         :  :           +- Join Inner, (ws_sold_date_sk#1023 = d_date_sk#1024)\n         :  :              :- Project [ws_quantity#1007, ws_list_price#1009, ws_sold_date_sk#1023]\n         :  :              :  +- Filter (isnotnull(ws_sold_date_sk#1023) AND dynamicpruning#1290 [ws_sold_date_sk#1023])\n         :  :              :     :  +- Project [d_date_sk#1024]\n         :  :              :     :     +- Filter ((isnotnull(d_year#1030) AND ((d_year#1030 >= 1998) AND (d_year#1030 <= 2000))) AND isnotnull(d_date_sk#1024))\n         :  :              :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#1024,d_date_id#1025,d_date#1026,d_month_seq#1027,d_week_seq#1028,d_quarter_seq#1029,d_year#1030,d_dow#1031,d_moy#1032,d_dom#1033,d_qoy#1034,d_fy_year#1035,d_fy_quarter_seq#1036,d_fy_week_seq#1037,d_day_name#1038,d_quarter_name#1039,d_holiday#1040,d_weekend#1041,d_following_holiday#1042,d_first_dom#1043,d_last_dom#1044,d_same_day_ly#1045,d_same_day_lq#1046,d_current_day#1047,... 4 more fields] parquet\n         :  :              :     +- Relation spark_catalog.tpcds_100.web_sales[ws_sold_time_sk#990,ws_ship_date_sk#991,ws_item_sk#992,ws_bill_customer_sk#993,ws_bill_cdemo_sk#994,ws_bill_hdemo_sk#995,ws_bill_addr_sk#996,ws_ship_customer_sk#997,ws_ship_cdemo_sk#998,ws_ship_hdemo_sk#999,ws_ship_addr_sk#1000,ws_web_page_sk#1001,ws_web_site_sk#1002,ws_ship_mode_sk#1003,ws_warehouse_sk#1004,ws_promo_sk#1005,ws_order_number#1006L,ws_quantity#1007,ws_wholesale_cost#1008,ws_list_price#1009,ws_sales_price#1010,ws_ext_discount_amt#1011,ws_ext_sales_price#1012,ws_ext_wholesale_cost#1013,... 10 more fields] parquet\n         :  :              +- Project [d_date_sk#1024]\n         :  :                 +- Filter ((isnotnull(d_year#1030) AND ((d_year#1030 >= 1998) AND (d_year#1030 <= 2000))) AND isnotnull(d_date_sk#1024))\n         :  :                    +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#1024,d_date_id#1025,d_date#1026,d_month_seq#1027,d_week_seq#1028,d_quarter_seq#1029,d_year#1030,d_dow#1031,d_moy#1032,d_dom#1033,d_qoy#1034,d_fy_year#1035,d_fy_quarter_seq#1036,d_fy_week_seq#1037,d_day_name#1038,d_quarter_name#1039,d_holiday#1040,d_weekend#1041,d_following_holiday#1042,d_first_dom#1043,d_last_dom#1044,d_same_day_ly#1045,d_same_day_lq#1046,d_current_day#1047,... 4 more fields] parquet\n         :  +- Aggregate [i_brand_id#1082, i_class_id#1084, i_category_id#1086], [store AS channel#730, i_brand_id#1082, i_class_id#1084, i_category_id#1086, sum((cast(ss_quantity#1061 as decimal(10,0)) * ss_list_price#1063)) AS sales#731, count(1) AS number_sales#732L]\n         :     +- Project [ss_quantity#1061, ss_list_price#1063, i_brand_id#1082, i_class_id#1084, i_category_id#1086]\n         :        +- Join Inner, (ss_item_sk#1053 = i_item_sk#1075)\n         :           :- Project [ss_item_sk#1053, ss_quantity#1061, ss_list_price#1063]\n         :           :  +- Join Inner, (ss_sold_date_sk#1074 = d_date_sk#1097)\n         :           :     :- Join LeftSemi, (ss_item_sk#1053 = ss_item_sk#745)\n         :           :     :  :- Project [ss_item_sk#1053, ss_quantity#1061, ss_list_price#1063, ss_sold_date_sk#1074]\n         :           :     :  :  +- Filter ((isnotnull(ss_item_sk#1053) AND isnotnull(ss_sold_date_sk#1074)) AND dynamicpruning#1303 [ss_sold_date_sk#1074])\n         :           :     :  :     :  +- Project [d_date_sk#1097]\n         :           :     :  :     :     +- Filter ((isnotnull(d_week_seq#1101) AND (d_week_seq#1101 = scalar-subquery#734 [])) AND isnotnull(d_date_sk#1097))\n         :           :     :  :     :        :  +- Project [d_week_seq#1213]\n         :           :     :  :     :        :     +- Filter (((isnotnull(d_year#1215) AND isnotnull(d_moy#1217)) AND isnotnull(d_dom#1218)) AND (((d_year#1215 = 1999) AND (d_moy#1217 = 12)) AND (d_dom#1218 = 16)))\n         :           :     :  :     :        :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#1209,d_date_id#1210,d_date#1211,d_month_seq#1212,d_week_seq#1213,d_quarter_seq#1214,d_year#1215,d_dow#1216,d_moy#1217,d_dom#1218,d_qoy#1219,d_fy_year#1220,d_fy_quarter_seq#1221,d_fy_week_seq#1222,d_day_name#1223,d_quarter_name#1224,d_holiday#1225,d_weekend#1226,d_following_holiday#1227,d_first_dom#1228,d_last_dom#1229,d_same_day_ly#1230,d_same_day_lq#1231,d_current_day#1232,... 4 more fields] parquet\n         :           :     :  :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#1097,d_date_id#1098,d_date#1099,d_month_seq#1100,d_week_seq#1101,d_quarter_seq#1102,d_year#1103,d_dow#1104,d_moy#1105,d_dom#1106,d_qoy#1107,d_fy_year#1108,d_fy_quarter_seq#1109,d_fy_week_seq#1110,d_day_name#1111,d_quarter_name#1112,d_holiday#1113,d_weekend#1114,d_following_holiday#1115,d_first_dom#1116,d_last_dom#1117,d_same_day_ly#1118,d_same_day_lq#1119,d_current_day#1120,... 4 more fields] parquet\n         :           :     :  :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#1052,ss_item_sk#1053,ss_customer_sk#1054,ss_cdemo_sk#1055,ss_hdemo_sk#1056,ss_addr_sk#1057,ss_store_sk#1058,ss_promo_sk#1059,ss_ticket_number#1060L,ss_quantity#1061,ss_wholesale_cost#1062,ss_list_price#1063,ss_sales_price#1064,ss_ext_discount_amt#1065,ss_ext_sales_price#1066,ss_ext_wholesale_cost#1067,ss_ext_list_price#1068,ss_ext_tax#1069,ss_coupon_amt#1070,ss_net_paid#1071,ss_net_paid_inc_tax#1072,ss_net_profit#1073,ss_sold_date_sk#1074] parquet\n         :           :     :  +- LogicalQueryStage Project [i_item_sk#25 AS ss_item_sk#745], BroadcastQueryStage 89\n         :           :     +- LogicalQueryStage Project [d_date_sk#1097], BroadcastQueryStage 9\n         :           +- LogicalQueryStage Join LeftSemi, (i_item_sk#1075 = ss_item_sk#745), BroadcastQueryStage 96\n         +- Filter (isnotnull(sales#737) AND (cast(sales#737 as decimal(32,6)) > cast(scalar-subquery#741 [] as decimal(32,6))))\n            :  +- Aggregate [avg((cast(quantity#746 as decimal(10,0)) * list_price#747)) AS average_sales#752]\n            :     +- Union false, false\n            :        :- Project [ss_quantity#886 AS quantity#746, ss_list_price#888 AS list_price#747]\n            :        :  +- Join Inner, (ss_sold_date_sk#899 = d_date_sk#900)\n            :        :     :- Project [ss_quantity#886, ss_list_price#888, ss_sold_date_sk#899]\n            :        :     :  +- Filter (isnotnull(ss_sold_date_sk#899) AND dynamicpruning#1288 [ss_sold_date_sk#899])\n            :        :     :     :  +- Project [d_date_sk#900]\n            :        :     :     :     +- Filter ((isnotnull(d_year#906) AND ((d_year#906 >= 1998) AND (d_year#906 <= 2000))) AND isnotnull(d_date_sk#900))\n            :        :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#900,d_date_id#901,d_date#902,d_month_seq#903,d_week_seq#904,d_quarter_seq#905,d_year#906,d_dow#907,d_moy#908,d_dom#909,d_qoy#910,d_fy_year#911,d_fy_quarter_seq#912,d_fy_week_seq#913,d_day_name#914,d_quarter_name#915,d_holiday#916,d_weekend#917,d_following_holiday#918,d_first_dom#919,d_last_dom#920,d_same_day_ly#921,d_same_day_lq#922,d_current_day#923,... 4 more fields] parquet\n            :        :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#877,ss_item_sk#878,ss_customer_sk#879,ss_cdemo_sk#880,ss_hdemo_sk#881,ss_addr_sk#882,ss_store_sk#883,ss_promo_sk#884,ss_ticket_number#885L,ss_quantity#886,ss_wholesale_cost#887,ss_list_price#888,ss_sales_price#889,ss_ext_discount_amt#890,ss_ext_sales_price#891,ss_ext_wholesale_cost#892,ss_ext_list_price#893,ss_ext_tax#894,ss_coupon_amt#895,ss_net_paid#896,ss_net_paid_inc_tax#897,ss_net_profit#898,ss_sold_date_sk#899] parquet\n            :        :     +- Project [d_date_sk#900]\n            :        :        +- Filter ((isnotnull(d_year#906) AND ((d_year#906 >= 1998) AND (d_year#906 <= 2000))) AND isnotnull(d_date_sk#900))\n            :        :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#900,d_date_id#901,d_date#902,d_month_seq#903,d_week_seq#904,d_quarter_seq#905,d_year#906,d_dow#907,d_moy#908,d_dom#909,d_qoy#910,d_fy_year#911,d_fy_quarter_seq#912,d_fy_week_seq#913,d_day_name#914,d_quarter_name#915,d_holiday#916,d_weekend#917,d_following_holiday#918,d_first_dom#919,d_last_dom#920,d_same_day_ly#921,d_same_day_lq#922,d_current_day#923,... 4 more fields] parquet\n            :        :- Project [cs_quantity#945 AS quantity#748, cs_list_price#947 AS list_price#749]\n            :        :  +- Join Inner, (cs_sold_date_sk#961 = d_date_sk#962)\n            :        :     :- Project [cs_quantity#945, cs_list_price#947, cs_sold_date_sk#961]\n            :        :     :  +- Filter (isnotnull(cs_sold_date_sk#961) AND dynamicpruning#1289 [cs_sold_date_sk#961])\n            :        :     :     :  +- Project [d_date_sk#962]\n            :        :     :     :     +- Filter ((isnotnull(d_year#968) AND ((d_year#968 >= 1998) AND (d_year#968 <= 2000))) AND isnotnull(d_date_sk#962))\n            :        :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#962,d_date_id#963,d_date#964,d_month_seq#965,d_week_seq#966,d_quarter_seq#967,d_year#968,d_dow#969,d_moy#970,d_dom#971,d_qoy#972,d_fy_year#973,d_fy_quarter_seq#974,d_fy_week_seq#975,d_day_name#976,d_quarter_name#977,d_holiday#978,d_weekend#979,d_following_holiday#980,d_first_dom#981,d_last_dom#982,d_same_day_ly#983,d_same_day_lq#984,d_current_day#985,... 4 more fields] parquet\n            :        :     :     +- Relation spark_catalog.tpcds_100.catalog_sales[cs_sold_time_sk#928,cs_ship_date_sk#929,cs_bill_customer_sk#930,cs_bill_cdemo_sk#931,cs_bill_hdemo_sk#932,cs_bill_addr_sk#933,cs_ship_customer_sk#934,cs_ship_cdemo_sk#935,cs_ship_hdemo_sk#936,cs_ship_addr_sk#937,cs_call_center_sk#938,cs_catalog_page_sk#939,cs_ship_mode_sk#940,cs_warehouse_sk#941,cs_item_sk#942,cs_promo_sk#943,cs_order_number#944L,cs_quantity#945,cs_wholesale_cost#946,cs_list_price#947,cs_sales_price#948,cs_ext_discount_amt#949,cs_ext_sales_price#950,cs_ext_wholesale_cost#951,... 10 more fields] parquet\n            :        :     +- Project [d_date_sk#962]\n            :        :        +- Filter ((isnotnull(d_year#968) AND ((d_year#968 >= 1998) AND (d_year#968 <= 2000))) AND isnotnull(d_date_sk#962))\n            :        :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#962,d_date_id#963,d_date#964,d_month_seq#965,d_week_seq#966,d_quarter_seq#967,d_year#968,d_dow#969,d_moy#970,d_dom#971,d_qoy#972,d_fy_year#973,d_fy_quarter_seq#974,d_fy_week_seq#975,d_day_name#976,d_quarter_name#977,d_holiday#978,d_weekend#979,d_following_holiday#980,d_first_dom#981,d_last_dom#982,d_same_day_ly#983,d_same_day_lq#984,d_current_day#985,... 4 more fields] parquet\n            :        +- Project [ws_quantity#1007 AS quantity#750, ws_list_price#1009 AS list_price#751]\n            :           +- Join Inner, (ws_sold_date_sk#1023 = d_date_sk#1024)\n            :              :- Project [ws_quantity#1007, ws_list_price#1009, ws_sold_date_sk#1023]\n            :              :  +- Filter (isnotnull(ws_sold_date_sk#1023) AND dynamicpruning#1290 [ws_sold_date_sk#1023])\n            :              :     :  +- Project [d_date_sk#1024]\n            :              :     :     +- Filter ((isnotnull(d_year#1030) AND ((d_year#1030 >= 1998) AND (d_year#1030 <= 2000))) AND isnotnull(d_date_sk#1024))\n            :              :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#1024,d_date_id#1025,d_date#1026,d_month_seq#1027,d_week_seq#1028,d_quarter_seq#1029,d_year#1030,d_dow#1031,d_moy#1032,d_dom#1033,d_qoy#1034,d_fy_year#1035,d_fy_quarter_seq#1036,d_fy_week_seq#1037,d_day_name#1038,d_quarter_name#1039,d_holiday#1040,d_weekend#1041,d_following_holiday#1042,d_first_dom#1043,d_last_dom#1044,d_same_day_ly#1045,d_same_day_lq#1046,d_current_day#1047,... 4 more fields] parquet\n            :              :     +- Relation spark_catalog.tpcds_100.web_sales[ws_sold_time_sk#990,ws_ship_date_sk#991,ws_item_sk#992,ws_bill_customer_sk#993,ws_bill_cdemo_sk#994,ws_bill_hdemo_sk#995,ws_bill_addr_sk#996,ws_ship_customer_sk#997,ws_ship_cdemo_sk#998,ws_ship_hdemo_sk#999,ws_ship_addr_sk#1000,ws_web_page_sk#1001,ws_web_site_sk#1002,ws_ship_mode_sk#1003,ws_warehouse_sk#1004,ws_promo_sk#1005,ws_order_number#1006L,ws_quantity#1007,ws_wholesale_cost#1008,ws_list_price#1009,ws_sales_price#1010,ws_ext_discount_amt#1011,ws_ext_sales_price#1012,ws_ext_wholesale_cost#1013,... 10 more fields] parquet\n            :              +- Project [d_date_sk#1024]\n            :                 +- Filter ((isnotnull(d_year#1030) AND ((d_year#1030 >= 1998) AND (d_year#1030 <= 2000))) AND isnotnull(d_date_sk#1024))\n            :                    +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#1024,d_date_id#1025,d_date#1026,d_month_seq#1027,d_week_seq#1028,d_quarter_seq#1029,d_year#1030,d_dow#1031,d_moy#1032,d_dom#1033,d_qoy#1034,d_fy_year#1035,d_fy_quarter_seq#1036,d_fy_week_seq#1037,d_day_name#1038,d_quarter_name#1039,d_holiday#1040,d_weekend#1041,d_following_holiday#1042,d_first_dom#1043,d_last_dom#1044,d_same_day_ly#1045,d_same_day_lq#1046,d_current_day#1047,... 4 more fields] parquet\n            +- Aggregate [i_brand_id#1155, i_class_id#1157, i_category_id#1159], [store AS channel#736, i_brand_id#1155, i_class_id#1157, i_category_id#1159, sum((cast(ss_quantity#1134 as decimal(10,0)) * ss_list_price#1136)) AS sales#737, count(1) AS number_sales#738L]\n               +- Project [ss_quantity#1134, ss_list_price#1136, i_brand_id#1155, i_class_id#1157, i_category_id#1159]\n                  +- Join Inner, (ss_item_sk#1126 = i_item_sk#1148)\n                     :- Project [ss_item_sk#1126, ss_quantity#1134, ss_list_price#1136]\n                     :  +- Join Inner, (ss_sold_date_sk#1147 = d_date_sk#1170)\n                     :     :- Join LeftSemi, (ss_item_sk#1126 = ss_item_sk#745)\n                     :     :  :- Project [ss_item_sk#1126, ss_quantity#1134, ss_list_price#1136, ss_sold_date_sk#1147]\n                     :     :  :  +- Filter ((isnotnull(ss_item_sk#1126) AND isnotnull(ss_sold_date_sk#1147)) AND dynamicpruning#1310 [ss_sold_date_sk#1147])\n                     :     :  :     :  +- Project [d_date_sk#1170]\n                     :     :  :     :     +- Filter ((isnotnull(d_week_seq#1174) AND (d_week_seq#1174 = scalar-subquery#740 [])) AND isnotnull(d_date_sk#1170))\n                     :     :  :     :        :  +- Project [d_week_seq#1241]\n                     :     :  :     :        :     +- Filter (((isnotnull(d_year#1243) AND isnotnull(d_moy#1245)) AND isnotnull(d_dom#1246)) AND (((d_year#1243 = 1998) AND (d_moy#1245 = 12)) AND (d_dom#1246 = 16)))\n                     :     :  :     :        :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#1237,d_date_id#1238,d_date#1239,d_month_seq#1240,d_week_seq#1241,d_quarter_seq#1242,d_year#1243,d_dow#1244,d_moy#1245,d_dom#1246,d_qoy#1247,d_fy_year#1248,d_fy_quarter_seq#1249,d_fy_week_seq#1250,d_day_name#1251,d_quarter_name#1252,d_holiday#1253,d_weekend#1254,d_following_holiday#1255,d_first_dom#1256,d_last_dom#1257,d_same_day_ly#1258,d_same_day_lq#1259,d_current_day#1260,... 4 more fields] parquet\n                     :     :  :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#1170,d_date_id#1171,d_date#1172,d_month_seq#1173,d_week_seq#1174,d_quarter_seq#1175,d_year#1176,d_dow#1177,d_moy#1178,d_dom#1179,d_qoy#1180,d_fy_year#1181,d_fy_quarter_seq#1182,d_fy_week_seq#1183,d_day_name#1184,d_quarter_name#1185,d_holiday#1186,d_weekend#1187,d_following_holiday#1188,d_first_dom#1189,d_last_dom#1190,d_same_day_ly#1191,d_same_day_lq#1192,d_current_day#1193,... 4 more fields] parquet\n                     :     :  :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#1125,ss_item_sk#1126,ss_customer_sk#1127,ss_cdemo_sk#1128,ss_hdemo_sk#1129,ss_addr_sk#1130,ss_store_sk#1131,ss_promo_sk#1132,ss_ticket_number#1133L,ss_quantity#1134,ss_wholesale_cost#1135,ss_list_price#1136,ss_sales_price#1137,ss_ext_discount_amt#1138,ss_ext_sales_price#1139,ss_ext_wholesale_cost#1140,ss_ext_list_price#1141,ss_ext_tax#1142,ss_coupon_amt#1143,ss_net_paid#1144,ss_net_paid_inc_tax#1145,ss_net_profit#1146,ss_sold_date_sk#1147] parquet\n                     :     :  +- LogicalQueryStage Project [i_item_sk#25 AS ss_item_sk#745], BroadcastQueryStage 93\n                     :     +- LogicalQueryStage Project [d_date_sk#1170], BroadcastQueryStage 34\n                     +- LogicalQueryStage Join LeftSemi, (i_item_sk#1148 = ss_item_sk#745), BroadcastQueryStage 98\n"
      },
      "IM" : {
        "inputSizeInBytes" : 83672744192,
        "inputRowCount" : 550797976
      },
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "StartTimeInMs" : 1702226697665,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 13833,
        "IOBytes" : {
          "Total" : 1514502064,
          "Details" : {
            "IR" : 1513291882,
            "IW" : 0,
            "SR" : 605091,
            "SW" : 605091
          }
        }
      }
    },
    "7" : {
      "LQP" : {
        "operators" : {
          "45" : {
            "sign" : 579430964,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 86282466,
            "rowCount" : 202541,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(i_item_sk#1075) AND isnotnull(i_brand_id#1082)) AND isnotnull(i_class_id#1084)) AND isnotnull(i_category_id#1086)) "
          },
          "98" : {
            "sign" : 683629544,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#1170, d_date_id#1171, d_date#1172, d_month_seq#1173, d_week_seq#1174, d_quarter_seq#1175, d_year#1176, d_dow#1177, d_moy#1178, d_dom#1179, d_qoy#1180, d_fy_year#1181, d_fy_quarter_seq#1182, d_fy_week_seq#1183, d_day_name#1184, d_quarter_name#1185, d_holiday#1186, d_weekend#1187, d_following_holiday#1188, d_first_dom#1189, d_last_dom#1190, d_same_day_ly#1191, d_same_day_lq#1192, d_current_day#1193, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "113" : {
            "sign" : -1270097614,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 4875456,
            "rowCount" : 203144,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (((i_brand_id#762 <=> i_brand_id#784) AND (i_class_id#764 <=> i_class_id#786)) AND (i_category_id#766 <=> i_category_id#788)) "
          },
          "34" : {
            "sign" : -117080718,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 17256,
            "rowCount" : 1438,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#70] "
          },
          "67" : {
            "sign" : 2019201408,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 17256,
            "rowCount" : 1438,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#900] "
          },
          "120" : {
            "sign" : -1448453368,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 86282466,
            "rowCount" : 202541,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(i_item_sk#1148) AND isnotnull(i_brand_id#1155)) AND isnotnull(i_class_id#1157)) AND isnotnull(i_category_id#1159)) "
          },
          "93" : {
            "sign" : -303911461,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 7701269884,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#1126, ss_quantity#1134, ss_list_price#1136, ss_sold_date_sk#1147] "
          },
          "12" : {
            "sign" : 571393713,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(ss_item_sk#1053) AND isnotnull(ss_sold_date_sk#1074)) AND dynamicpruning#1303 [ss_sold_date_sk#1074]) "
          },
          "66" : {
            "sign" : -1972788865,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#877, ss_item_sk#878, ss_customer_sk#879, ss_cdemo_sk#880, ss_hdemo_sk#881, ss_addr_sk#882, ss_store_sk#883, ss_promo_sk#884, ss_ticket_number#885L, ss_quantity#886, ss_wholesale_cost#887, ss_list_price#888, ss_sales_price#889, ss_ext_discount_amt#890, ss_ext_sales_price#891, ss_ext_wholesale_cost#892, ss_ext_list_price#893, ss_ext_tax#894, ss_coupon_amt#895, ss_net_paid#896, ss_net_paid_inc_tax#897, ss_net_profit#898, ss_sold_date_sk#899], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "89" : {
            "sign" : -309843437,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 11490316840,
            "rowCount" : 287257921,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_item_sk#1126 = i_item_sk#1148) "
          },
          "51" : {
            "sign" : -1922967392,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 1224753985121117440,
            "rowCount" : 61237699256055872,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_brand_id#762 AS brand_id#742, i_class_id#764 AS class_id#743, i_category_id#766 AS category_id#744] "
          },
          "124" : {
            "sign" : -14482712,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 1224753985121117440,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (((brand_id#742 <=> i_brand_id#834) AND (class_id#743 <=> i_class_id#836)) AND (category_id#744 <=> i_category_id#838)) "
          },
          "84" : {
            "sign" : -626435234,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 353748,
            "rowCount" : 1438,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(d_year#1030) AND ((d_year#1030 >= 1998) AND (d_year#1030 <= 2000))) AND isnotnull(d_date_sk#1024)) "
          },
          "8" : {
            "sign" : 139041030,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 46207619304,
            "rowCount" : 1925317471,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#1053, ss_quantity#1061, ss_list_price#1063] "
          },
          "73" : {
            "sign" : 1500374164,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 29800787536,
            "rowCount" : 143273017,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(cs_sold_date_sk#961) AND dynamicpruning#1289 [cs_sold_date_sk#961]) "
          },
          "78" : {
            "sign" : 17831375,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 1389912100,
            "rowCount" : 69495605,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_quantity#1007 AS quantity#750, ws_list_price#1009 AS list_price#751] "
          },
          "19" : {
            "sign" : -1755539215,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#1209, d_date_id#1210, d_date#1211, d_month_seq#1212, d_week_seq#1213, d_quarter_seq#1214, d_year#1215, d_dow#1216, d_moy#1217, d_dom#1218, d_qoy#1219, d_fy_year#1220, d_fy_quarter_seq#1221, d_fy_week_seq#1222, d_day_name#1223, d_quarter_name#1224, d_holiday#1225, d_weekend#1226, d_following_holiday#1227, d_first_dom#1228, d_last_dom#1229, d_same_day_ly#1230, d_same_day_lq#1231, d_current_day#1232, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "100" : {
            "sign" : 1734827371,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 492,
            "rowCount" : 2,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(d_year#1243) AND isnotnull(d_moy#1245)) AND isnotnull(d_dom#1246)) AND (((d_year#1243 = 1998) AND (d_moy#1245 = 12)) AND (d_dom#1246 = 16))) "
          },
          "23" : {
            "sign" : -1756391561,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 86282466,
            "rowCount" : 202541,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(i_brand_id#32) AND isnotnull(i_class_id#34)) AND isnotnull(i_category_id#36)) "
          },
          "62" : {
            "sign" : 869525063,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 5310811700,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_quantity#886 AS quantity#746, ss_list_price#888 AS list_price#747] "
          },
          "128" : {
            "sign" : 899852841,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 3617396482656,
            "rowCount" : 301449706888,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#48] "
          },
          "4" : {
            "sign" : 1357304059,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 10408960,
            "rowCount" : 136960,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(sales#731) AND (cast(sales#731 as decimal(32,6)) > cast(scalar-subquery#735 [] as decimal(32,6)))) "
          },
          "121" : {
            "sign" : -1752719423,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 86904000,
            "rowCount" : 204000,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [i_item_sk#1148, i_item_id#1149, i_rec_start_date#1150, i_rec_end_date#1151, i_item_desc#1152, i_current_price#1153, i_wholesale_cost#1154, i_brand_id#1155, i_brand#1156, i_class_id#1157, i_class#1158, i_category_id#1159, i_category#1160, i_manufact_id#1161, i_manufact#1162, i_size#1163, i_formulation#1164, i_color#1165, i_units#1166, i_container#1167, i_manager_id#1168, i_product_name#1169], `spark_catalog`.`tpcds_100`.`item`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "88" : {
            "sign" : -1250291275,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 9192253472,
            "rowCount" : 287257921,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_quantity#1134, ss_list_price#1136, i_brand_id#1155, i_class_id#1157, i_category_id#1159] "
          },
          "77" : {
            "sign" : -169490734,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#962, d_date_id#963, d_date#964, d_month_seq#965, d_week_seq#966, d_quarter_seq#967, d_year#968, d_dow#969, d_moy#970, d_dom#971, d_qoy#972, d_fy_year#973, d_fy_quarter_seq#974, d_fy_week_seq#975, d_day_name#976, d_quarter_name#977, d_holiday#978, d_weekend#979, d_following_holiday#980, d_first_dom#981, d_last_dom#982, d_same_day_ly#983, d_same_day_lq#984, d_current_day#985, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "40" : {
            "sign" : 366726337,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 2740469632,
            "rowCount" : 85639676,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_brand_id#784, i_class_id#786, i_category_id#788], ShuffleQueryStage 47 "
          },
          "110" : {
            "sign" : 2101479604,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 4400725648,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#48, ss_sold_date_sk#69] "
          },
          "15" : {
            "sign" : 1866012666,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(d_week_seq#1101) AND (d_week_seq#1101 = scalar-subquery#734 [])) AND isnotnull(d_date_sk#1097)) "
          },
          "11" : {
            "sign" : 1222696026,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 7701269884,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#1053, ss_quantity#1061, ss_list_price#1063, ss_sold_date_sk#1074] "
          },
          "104" : {
            "sign" : -876321123,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 1224753985121117440,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (((brand_id#742 <=> i_brand_id#834) AND (class_id#743 <=> i_class_id#836)) AND (category_id#744 <=> i_category_id#838)) "
          },
          "90" : {
            "sign" : -2676572,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 46207619304,
            "rowCount" : 1925317471,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#1126, ss_quantity#1134, ss_list_price#1136] "
          },
          "9" : {
            "sign" : -1944592689,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 61610159072,
            "rowCount" : 1925317471,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#1074 = d_date_sk#1097) "
          },
          "132" : {
            "sign" : 1549879919,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 8125760,
            "rowCount" : 203144,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_item_sk#755, i_brand_id#762, i_class_id#764, i_category_id#766], ShuffleQueryStage 38 "
          },
          "44" : {
            "sign" : 1540331732,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 4860984,
            "rowCount" : 202541,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_item_sk#1075, i_brand_id#1082, i_class_id#1084, i_category_id#1086] "
          },
          "33" : {
            "sign" : 1104597854,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#47, ss_item_sk#48, ss_customer_sk#49, ss_cdemo_sk#50, ss_hdemo_sk#51, ss_addr_sk#52, ss_store_sk#53, ss_promo_sk#54, ss_ticket_number#55L, ss_quantity#56, ss_wholesale_cost#57, ss_list_price#58, ss_sales_price#59, ss_ext_discount_amt#60, ss_ext_sales_price#61, ss_ext_wholesale_cost#62, ss_ext_list_price#63, ss_ext_tax#64, ss_coupon_amt#65, ss_net_paid#66, ss_net_paid_inc_tax#67, ss_net_profit#68, ss_sold_date_sk#69], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "117" : {
            "sign" : -1902204624,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1048632,
            "rowCount" : 7,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#1170], BroadcastQueryStage 34 "
          },
          "22" : {
            "sign" : 2089743597,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 4860984,
            "rowCount" : 202541,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_item_sk#25, i_brand_id#32, i_class_id#34, i_category_id#36] "
          },
          "56" : {
            "sign" : 1070585237,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 4875456,
            "rowCount" : 203144,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (((i_brand_id#762 <=> i_brand_id#784) AND (i_class_id#764 <=> i_class_id#786)) AND (i_category_id#766 <=> i_category_id#788)) "
          },
          "55" : {
            "sign" : -1598388943,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1057344,
            "rowCount" : 1096,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#70], BroadcastQueryStage 11 "
          },
          "26" : {
            "sign" : -1989347848,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 1224753985121117440,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [brand_id#742, class_id#743, category_id#744], [brand_id#742, class_id#743, category_id#744] "
          },
          "134" : {
            "sign" : -365669692,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1379777760,
            "rowCount" : 43118055,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_brand_id#834, i_class_id#836, i_category_id#838], ShuffleQueryStage 60 "
          },
          "50" : {
            "sign" : -1608368025,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 1224753985121117440,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [brand_id#742, class_id#743, category_id#744], [brand_id#742, class_id#743, category_id#744] "
          },
          "123" : {
            "sign" : -1382179355,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 1224753985125978424,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (((i_brand_id#32 = brand_id#742) AND (i_class_id#34 = class_id#743)) AND (i_category_id#36 = category_id#744)) "
          },
          "37" : {
            "sign" : -1159939661,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1057344,
            "rowCount" : 1096,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#70], BroadcastQueryStage 0 "
          },
          "68" : {
            "sign" : -2071970095,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 353748,
            "rowCount" : 1438,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(d_year#906) AND ((d_year#906 >= 1998) AND (d_year#906 <= 2000))) AND isnotnull(d_date_sk#900)) "
          },
          "61" : {
            "sign" : -1298322270,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Union",
            "sizeInBytes" : 9471049040,
            "rowCount" : 473552452,
            "isRuntime" : false,
            "predicate" : " (unknown) Union Arguments: false, false "
          },
          "107" : {
            "sign" : -105466558,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 1714655579169564416,
            "rowCount" : 61237699256055872,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_item_sk#48 = i_item_sk#755) "
          },
          "13" : {
            "sign" : 913239237,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#1052, ss_item_sk#1053, ss_customer_sk#1054, ss_cdemo_sk#1055, ss_hdemo_sk#1056, ss_addr_sk#1057, ss_store_sk#1058, ss_promo_sk#1059, ss_ticket_number#1060L, ss_quantity#1061, ss_wholesale_cost#1062, ss_list_price#1063, ss_sales_price#1064, ss_ext_discount_amt#1065, ss_ext_sales_price#1066, ss_ext_wholesale_cost#1067, ss_ext_list_price#1068, ss_ext_tax#1069, ss_coupon_amt#1070, ss_net_paid#1071, ss_net_paid_inc_tax#1072, ss_net_profit#1073, ss_sold_date_sk#1074], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "46" : {
            "sign" : 73332589,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 86904000,
            "rowCount" : 204000,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [i_item_sk#1075, i_item_id#1076, i_rec_start_date#1077, i_rec_end_date#1078, i_item_desc#1079, i_current_price#1080, i_wholesale_cost#1081, i_brand_id#1082, i_brand#1083, i_class_id#1084, i_class#1085, i_category_id#1086, i_category#1087, i_manufact_id#1088, i_manufact#1089, i_size#1090, i_formulation#1091, i_color#1092, i_units#1093, i_container#1094, i_manager_id#1095, i_product_name#1096], `spark_catalog`.`tpcds_100`.`item`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "99" : {
            "sign" : -79282860,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 24,
            "rowCount" : 2,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_week_seq#1241] "
          },
          "24" : {
            "sign" : 2096275601,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 86904000,
            "rowCount" : 204000,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [i_item_sk#25, i_item_id#26, i_rec_start_date#27, i_rec_end_date#28, i_item_desc#29, i_current_price#30, i_wholesale_cost#31, i_brand_id#32, i_brand#33, i_class_id#34, i_class#35, i_category_id#36, i_category#37, i_manufact_id#38, i_manufact#39, i_size#40, i_formulation#41, i_color#42, i_units#43, i_container#44, i_manager_id#45, i_product_name#46], `spark_catalog`.`tpcds_100`.`item`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "94" : {
            "sign" : -604473204,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(ss_item_sk#1126) AND isnotnull(ss_sold_date_sk#1147)) AND dynamicpruning#1310 [ss_sold_date_sk#1147]) "
          },
          "83" : {
            "sign" : -1100969675,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 17256,
            "rowCount" : 1438,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#1024] "
          },
          "35" : {
            "sign" : 1340377833,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 353748,
            "rowCount" : 1438,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(d_year#76) AND ((d_year#76 >= 1998) AND (d_year#76 <= 2000))) AND isnotnull(d_date_sk#70)) "
          },
          "16" : {
            "sign" : 682718368,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#1097, d_date_id#1098, d_date#1099, d_month_seq#1100, d_week_seq#1101, d_quarter_seq#1102, d_year#1103, d_dow#1104, d_moy#1105, d_dom#1106, d_qoy#1107, d_fy_year#1108, d_fy_quarter_seq#1109, d_fy_week_seq#1110, d_day_name#1111, d_quarter_name#1112, d_holiday#1113, d_weekend#1114, d_following_holiday#1115, d_first_dom#1116, d_last_dom#1117, d_same_day_ly#1118, d_same_day_lq#1119, d_current_day#1120, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "79" : {
            "sign" : 1503367439,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 1945876940,
            "rowCount" : 69495605,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ws_sold_date_sk#1023 = d_date_sk#1024) "
          },
          "5" : {
            "sign" : -1173314487,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 10408960,
            "rowCount" : 136960,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [i_brand_id#1082, i_class_id#1084, i_category_id#1086], [store AS channel#730, i_brand_id#1082, i_class_id#1084, i_category_id#1086, sum((cast(ss_quantity#1061 as decimal(10,0)) * ss_list_price#1063)) AS sales#731, count(1) AS number_sales#732L] "
          },
          "103" : {
            "sign" : 1717410210,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 1224753985125978424,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (((i_brand_id#32 = brand_id#742) AND (i_class_id#34 = class_id#743)) AND (i_category_id#36 = category_id#744)) "
          },
          "112" : {
            "sign" : -1598387920,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1057344,
            "rowCount" : 1096,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#70], BroadcastQueryStage 23 "
          },
          "72" : {
            "sign" : 1942236716,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 3438552408,
            "rowCount" : 143273017,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_quantity#945, cs_list_price#947, cs_sold_date_sk#961] "
          },
          "10" : {
            "sign" : 1073081792,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 7701269884,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (ss_item_sk#1053 = ss_item_sk#745) "
          },
          "59" : {
            "sign" : -365670591,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1379777760,
            "rowCount" : 43118055,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_brand_id#834, i_class_id#836, i_category_id#838], ShuffleQueryStage 52 "
          },
          "87" : {
            "sign" : 778880288,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 10408960,
            "rowCount" : 136960,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [i_brand_id#1155, i_class_id#1157, i_category_id#1159], [store AS channel#736, i_brand_id#1155, i_class_id#1157, i_category_id#1159, sum((cast(ss_quantity#1134 as decimal(10,0)) * ss_list_price#1136)) AS sales#737, count(1) AS number_sales#738L] "
          },
          "48" : {
            "sign" : 1987472580,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 1224753985125978424,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (((i_brand_id#32 = brand_id#742) AND (i_class_id#34 = class_id#743)) AND (i_category_id#36 = category_id#744)) "
          },
          "21" : {
            "sign" : -1061891914,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 1224753985125978424,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (((i_brand_id#32 = brand_id#742) AND (i_class_id#34 = class_id#743)) AND (i_category_id#36 = category_id#744)) "
          },
          "116" : {
            "sign" : -365670467,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1379777760,
            "rowCount" : 43118055,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_brand_id#834, i_class_id#836, i_category_id#838], ShuffleQueryStage 56 "
          },
          "76" : {
            "sign" : -1695423935,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 353748,
            "rowCount" : 1438,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(d_year#968) AND ((d_year#968 >= 1998) AND (d_year#968 <= 2000))) AND isnotnull(d_date_sk#962)) "
          },
          "54" : {
            "sign" : 174031885,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 6028994137760,
            "rowCount" : 301449706888,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#69 = d_date_sk#70) "
          },
          "43" : {
            "sign" : -917424425,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 4860984,
            "rowCount" : 202541,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (i_item_sk#1075 = ss_item_sk#745) "
          },
          "127" : {
            "sign" : -2083387522,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 1714655579169564416,
            "rowCount" : 61237699256055872,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_item_sk#48 = i_item_sk#755) "
          },
          "65" : {
            "sign" : 1377797290,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(ss_sold_date_sk#899) AND dynamicpruning#1288 [ss_sold_date_sk#899]) "
          },
          "71" : {
            "sign" : 824386657,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 3878455336,
            "rowCount" : 138516262,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cs_sold_date_sk#961 = d_date_sk#962) "
          },
          "57" : {
            "sign" : 1549877842,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 8125760,
            "rowCount" : 203144,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_item_sk#755, i_brand_id#762, i_class_id#764, i_category_id#766], ShuffleQueryStage 13 "
          },
          "108" : {
            "sign" : 899851787,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 3617396482656,
            "rowCount" : 301449706888,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#48] "
          },
          "32" : {
            "sign" : -1052942334,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(ss_item_sk#48) AND isnotnull(ss_sold_date_sk#69)) AND dynamicpruning#1291 [ss_sold_date_sk#69]) "
          },
          "80" : {
            "sign" : 49678577,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 1727606976,
            "rowCount" : 71983624,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_quantity#1007, ws_list_price#1009, ws_sold_date_sk#1023] "
          },
          "106" : {
            "sign" : -694393982,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 1224753985121117440,
            "rowCount" : 61237699256055872,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_brand_id#762 AS brand_id#742, i_class_id#764 AS class_id#743, i_category_id#766 AS category_id#744] "
          },
          "82" : {
            "sign" : 1698660872,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 14972593792,
            "rowCount" : 71983624,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ws_sold_time_sk#990, ws_ship_date_sk#991, ws_item_sk#992, ws_bill_customer_sk#993, ws_bill_cdemo_sk#994, ws_bill_hdemo_sk#995, ws_bill_addr_sk#996, ws_ship_customer_sk#997, ws_ship_cdemo_sk#998, ws_ship_hdemo_sk#999, ws_ship_addr_sk#1000, ws_web_page_sk#1001, ws_web_site_sk#1002, ws_ship_mode_sk#1003, ws_warehouse_sk#1004, ws_promo_sk#1005, ws_order_number#1006L, ws_quantity#1007, ws_wholesale_cost#1008, ws_list_price#1009, ws_sales_price#1010, ws_ext_discount_amt#1011, ws_ext_sales_price#1012, ws_ext_wholesale_cost#1013, ... 10 more fields], `spark_catalog`.`tpcds_100`.`web_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "49" : {
            "sign" : 967702723,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 1224753985121117440,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (((brand_id#742 <=> i_brand_id#834) AND (class_id#743 <=> i_class_id#836)) AND (category_id#744 <=> i_category_id#838)) "
          },
          "6" : {
            "sign" : -2124690956,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 9192253472,
            "rowCount" : 287257921,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_quantity#1061, ss_list_price#1063, i_brand_id#1082, i_class_id#1084, i_category_id#1086] "
          },
          "126" : {
            "sign" : 979536830,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 1224753985121117440,
            "rowCount" : 61237699256055872,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_brand_id#762 AS brand_id#742, i_class_id#764 AS class_id#743, i_category_id#766 AS category_id#744] "
          },
          "36" : {
            "sign" : -232749464,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#70, d_date_id#71, d_date#72, d_month_seq#73, d_week_seq#74, d_quarter_seq#75, d_year#76, d_dow#77, d_moy#78, d_dom#79, d_qoy#80, d_fy_year#81, d_fy_quarter_seq#82, d_fy_week_seq#83, d_day_name#84, d_quarter_name#85, d_holiday#86, d_weekend#87, d_following_holiday#88, d_first_dom#89, d_last_dom#90, d_same_day_ly#91, d_same_day_lq#92, d_current_day#93, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "1" : {
            "sign" : -393757989,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
            "sizeInBytes" : 19722240,
            "rowCount" : 136960,
            "isRuntime" : false,
            "predicate" : " (unknown) LocalLimit Arguments: 100 "
          },
          "39" : {
            "sign" : 1019827343,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 8125760,
            "rowCount" : 203144,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_item_sk#755, i_brand_id#762, i_class_id#764, i_category_id#766], ShuffleQueryStage 1 "
          },
          "17" : {
            "sign" : -2061501032,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 36,
            "rowCount" : 3,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_week_seq#1213] "
          },
          "25" : {
            "sign" : -929833631,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 1224753985121117440,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (((brand_id#742 <=> i_brand_id#834) AND (class_id#743 <=> i_class_id#836)) AND (category_id#744 <=> i_category_id#838)) "
          },
          "60" : {
            "sign" : -1809172647,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 24,
            "rowCount" : 1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [avg((cast(quantity#746 as decimal(10,0)) * list_price#747)) AS average_sales#752] "
          },
          "14" : {
            "sign" : 707519831,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 876588,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#1097] "
          },
          "133" : {
            "sign" : 366727329,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 2740469632,
            "rowCount" : 85639676,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_brand_id#784, i_class_id#786, i_category_id#788], ShuffleQueryStage 58 "
          },
          "47" : {
            "sign" : 23707703,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 408251328375326141,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_item_sk#25 AS ss_item_sk#745] "
          },
          "122" : {
            "sign" : -1413048228,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 408251328375326141,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_item_sk#25 AS ss_item_sk#745] "
          },
          "111" : {
            "sign" : -109048900,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(ss_item_sk#48) AND isnotnull(ss_sold_date_sk#69)) AND dynamicpruning#1297 [ss_sold_date_sk#69]) "
          },
          "102" : {
            "sign" : 1324241425,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 408251328375326141,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_item_sk#25 AS ss_item_sk#745] "
          },
          "31" : {
            "sign" : -948624390,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 4400725648,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#48, ss_sold_date_sk#69] "
          },
          "96" : {
            "sign" : 1096234976,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 876588,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#1170] "
          },
          "69" : {
            "sign" : -820074406,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#900, d_date_id#901, d_date#902, d_month_seq#903, d_week_seq#904, d_quarter_seq#905, d_year#906, d_dow#907, d_moy#908, d_dom#909, d_qoy#910, d_fy_year#911, d_fy_quarter_seq#912, d_fy_week_seq#913, d_day_name#914, d_quarter_name#915, d_holiday#916, d_weekend#917, d_following_holiday#918, d_first_dom#919, d_last_dom#920, d_same_day_ly#921, d_same_day_lq#922, d_current_day#923, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "95" : {
            "sign" : 1179432008,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#1125, ss_item_sk#1126, ss_customer_sk#1127, ss_cdemo_sk#1128, ss_hdemo_sk#1129, ss_addr_sk#1130, ss_store_sk#1131, ss_promo_sk#1132, ss_ticket_number#1133L, ss_quantity#1134, ss_wholesale_cost#1135, ss_list_price#1136, ss_sales_price#1137, ss_ext_discount_amt#1138, ss_ext_sales_price#1139, ss_ext_wholesale_cost#1140, ss_ext_list_price#1141, ss_ext_tax#1142, ss_coupon_amt#1143, ss_net_paid#1144, ss_net_paid_inc_tax#1145, ss_net_profit#1146, ss_sold_date_sk#1147], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "58" : {
            "sign" : 366727081,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 2740469632,
            "rowCount" : 85639676,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_brand_id#784, i_class_id#786, i_category_id#788], ShuffleQueryStage 50 "
          },
          "64" : {
            "sign" : 1776873494,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 6601088472,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_quantity#886, ss_list_price#888, ss_sold_date_sk#899] "
          },
          "53" : {
            "sign" : -1868509690,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 3617396482656,
            "rowCount" : 301449706888,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#48] "
          },
          "42" : {
            "sign" : -21562714,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1048632,
            "rowCount" : 7,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#1097], BroadcastQueryStage 9 "
          },
          "75" : {
            "sign" : 406087876,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 17256,
            "rowCount" : 1438,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#962] "
          },
          "115" : {
            "sign" : 366727205,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 2740469632,
            "rowCount" : 85639676,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_brand_id#784, i_class_id#786, i_category_id#788], ShuffleQueryStage 54 "
          },
          "109" : {
            "sign" : 1894574278,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 6028994137760,
            "rowCount" : 301449706888,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#69 = d_date_sk#70) "
          },
          "0" : {
            "sign" : -1382183986,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
            "sizeInBytes" : 12000,
            "rowCount" : 100,
            "isRuntime" : false,
            "predicate" : " (unknown) GlobalLimit Arguments: 100 "
          },
          "20" : {
            "sign" : 1675872213,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 408251328375326141,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_item_sk#25 AS ss_item_sk#745] "
          },
          "27" : {
            "sign" : 1543581019,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 1224753985121117440,
            "rowCount" : 61237699256055872,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_brand_id#762 AS brand_id#742, i_class_id#764 AS class_id#743, i_category_id#766 AS category_id#744] "
          },
          "70" : {
            "sign" : 825651901,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 2770325240,
            "rowCount" : 138516262,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_quantity#945 AS quantity#748, cs_list_price#947 AS list_price#749] "
          },
          "2" : {
            "sign" : 1709700516,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 19722240,
            "rowCount" : 136960,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [i_brand_id#1082 ASC NULLS FIRST, i_class_id#1084 ASC NULLS FIRST, i_category_id#1086 ASC NULLS FIRST], true "
          },
          "86" : {
            "sign" : -799736365,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 10408960,
            "rowCount" : 136960,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(sales#737) AND (cast(sales#737 as decimal(32,6)) > cast(scalar-subquery#741 [] as decimal(32,6)))) "
          },
          "38" : {
            "sign" : -1412645680,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 4875456,
            "rowCount" : 203144,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (((i_brand_id#762 <=> i_brand_id#784) AND (i_class_id#764 <=> i_class_id#786)) AND (i_category_id#766 <=> i_category_id#788)) "
          },
          "81" : {
            "sign" : -1902449141,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 14972593792,
            "rowCount" : 71983624,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(ws_sold_date_sk#1023) AND dynamicpruning#1290 [ws_sold_date_sk#1023]) "
          },
          "118" : {
            "sign" : -1455297653,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 4860984,
            "rowCount" : 202541,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (i_item_sk#1148 = ss_item_sk#745) "
          },
          "92" : {
            "sign" : 500470196,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 7701269884,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (ss_item_sk#1126 = ss_item_sk#745) "
          },
          "125" : {
            "sign" : -1218597883,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 1224753985121117440,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [brand_id#742, class_id#743, category_id#744], [brand_id#742, class_id#743, category_id#744] "
          },
          "18" : {
            "sign" : -1305353512,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 738,
            "rowCount" : 3,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(d_year#1215) AND isnotnull(d_moy#1217)) AND isnotnull(d_dom#1218)) AND (((d_year#1215 = 1999) AND (d_moy#1217 = 12)) AND (d_dom#1218 = 16))) "
          },
          "101" : {
            "sign" : 813769211,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#1237, d_date_id#1238, d_date#1239, d_month_seq#1240, d_week_seq#1241, d_quarter_seq#1242, d_year#1243, d_dow#1244, d_moy#1245, d_dom#1246, d_qoy#1247, d_fy_year#1248, d_fy_quarter_seq#1249, d_fy_week_seq#1250, d_day_name#1251, d_quarter_name#1252, d_holiday#1253, d_weekend#1254, d_following_holiday#1255, d_first_dom#1256, d_last_dom#1257, d_same_day_ly#1258, d_same_day_lq#1259, d_current_day#1260, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "30" : {
            "sign" : 1668181847,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 6028994137760,
            "rowCount" : 301449706888,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#69 = d_date_sk#70) "
          },
          "7" : {
            "sign" : -292159423,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 11490316840,
            "rowCount" : 287257921,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_item_sk#1053 = i_item_sk#1075) "
          },
          "97" : {
            "sign" : -1689547051,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(d_week_seq#1174) AND (d_week_seq#1174 = scalar-subquery#740 [])) AND isnotnull(d_date_sk#1170)) "
          },
          "130" : {
            "sign" : -1598386866,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1057344,
            "rowCount" : 1096,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#70], BroadcastQueryStage 36 "
          },
          "114" : {
            "sign" : 1549878865,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 8125760,
            "rowCount" : 203144,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_item_sk#755, i_brand_id#762, i_class_id#764, i_category_id#766], ShuffleQueryStage 25 "
          },
          "129" : {
            "sign" : 1894575332,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 6028994137760,
            "rowCount" : 301449706888,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#69 = d_date_sk#70) "
          },
          "29" : {
            "sign" : -1722842562,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 3617396482656,
            "rowCount" : 301449706888,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#48] "
          },
          "41" : {
            "sign" : -365671366,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1379777760,
            "rowCount" : 43118055,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_brand_id#834, i_class_id#836, i_category_id#838], ShuffleQueryStage 48 "
          },
          "105" : {
            "sign" : -1787425591,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 1224753985121117440,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [brand_id#742, class_id#743, category_id#744], [brand_id#742, class_id#743, category_id#744] "
          },
          "63" : {
            "sign" : -1804794945,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 7435136380,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#899 = d_date_sk#900) "
          },
          "3" : {
            "sign" : 327734412,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 19722240,
            "rowCount" : 136960,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (((i_brand_id#1082 = i_brand_id#1155) AND (i_class_id#1084 = i_class_id#1157)) AND (i_category_id#1086 = i_category_id#1159)) "
          },
          "74" : {
            "sign" : -70077436,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 29800787536,
            "rowCount" : 143273017,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [cs_sold_time_sk#928, cs_ship_date_sk#929, cs_bill_customer_sk#930, cs_bill_cdemo_sk#931, cs_bill_hdemo_sk#932, cs_bill_addr_sk#933, cs_ship_customer_sk#934, cs_ship_cdemo_sk#935, cs_ship_hdemo_sk#936, cs_ship_addr_sk#937, cs_call_center_sk#938, cs_catalog_page_sk#939, cs_ship_mode_sk#940, cs_warehouse_sk#941, cs_item_sk#942, cs_promo_sk#943, cs_order_number#944L, cs_quantity#945, cs_wholesale_cost#946, cs_list_price#947, cs_sales_price#948, cs_ext_discount_amt#949, cs_ext_sales_price#950, cs_ext_wholesale_cost#951, ... 10 more fields], `spark_catalog`.`tpcds_100`.`catalog_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "91" : {
            "sign" : 787262118,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 61610159072,
            "rowCount" : 1925317471,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#1147 = d_date_sk#1170) "
          },
          "52" : {
            "sign" : -604531872,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 1714655579169564416,
            "rowCount" : 61237699256055872,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_item_sk#48 = i_item_sk#755) "
          },
          "85" : {
            "sign" : -502763688,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#1024, d_date_id#1025, d_date#1026, d_month_seq#1027, d_week_seq#1028, d_quarter_seq#1029, d_year#1030, d_dow#1031, d_moy#1032, d_dom#1033, d_qoy#1034, d_fy_year#1035, d_fy_quarter_seq#1036, d_fy_week_seq#1037, d_day_name#1038, d_quarter_name#1039, d_holiday#1040, d_weekend#1041, d_following_holiday#1042, d_first_dom#1043, d_last_dom#1044, d_same_day_ly#1045, d_same_day_lq#1046, d_current_day#1047, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "131" : {
            "sign" : 743407568,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 4875456,
            "rowCount" : 203144,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (((i_brand_id#762 <=> i_brand_id#784) AND (i_class_id#764 <=> i_class_id#786)) AND (i_category_id#766 <=> i_category_id#788)) "
          },
          "28" : {
            "sign" : -672276879,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 1714655579169564416,
            "rowCount" : 61237699256055872,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_item_sk#48 = i_item_sk#755) "
          },
          "119" : {
            "sign" : -1062759686,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 4860984,
            "rowCount" : 202541,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_item_sk#1148, i_brand_id#1155, i_class_id#1157, i_category_id#1159] "
          }
        },
        "links" : [ {
          "fromId" : 13,
          "fromName" : "LogicalRelation",
          "toId" : 12,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 16,
          "fromName" : "LogicalRelation",
          "toId" : 15,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 19,
          "fromName" : "LogicalRelation",
          "toId" : 18,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 18,
          "fromName" : "Filter",
          "toId" : 17,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 17,
          "fromName" : "Project",
          "toId" : 15,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 15,
          "fromName" : "Filter",
          "toId" : 14,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 14,
          "fromName" : "Project",
          "toId" : 12,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 12,
          "fromName" : "Filter",
          "toId" : 11,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "Project",
          "toId" : 10,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 24,
          "fromName" : "LogicalRelation",
          "toId" : 23,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 23,
          "fromName" : "Filter",
          "toId" : 22,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 22,
          "fromName" : "Project",
          "toId" : 21,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 33,
          "fromName" : "LogicalRelation",
          "toId" : 32,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 36,
          "fromName" : "LogicalRelation",
          "toId" : 35,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 35,
          "fromName" : "Filter",
          "toId" : 34,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 34,
          "fromName" : "Project",
          "toId" : 32,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 32,
          "fromName" : "Filter",
          "toId" : 31,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 31,
          "fromName" : "Project",
          "toId" : 30,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 37,
          "fromName" : "LogicalQueryStage",
          "toId" : 30,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 30,
          "fromName" : "Join",
          "toId" : 29,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 29,
          "fromName" : "Project",
          "toId" : 28,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 39,
          "fromName" : "LogicalQueryStage",
          "toId" : 38,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 40,
          "fromName" : "LogicalQueryStage",
          "toId" : 38,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 38,
          "fromName" : "Join",
          "toId" : 28,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 28,
          "fromName" : "Join",
          "toId" : 27,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 27,
          "fromName" : "Project",
          "toId" : 26,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 26,
          "fromName" : "Aggregate",
          "toId" : 25,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 41,
          "fromName" : "LogicalQueryStage",
          "toId" : 25,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 25,
          "fromName" : "Join",
          "toId" : 21,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 21,
          "fromName" : "Join",
          "toId" : 20,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 20,
          "fromName" : "Project",
          "toId" : 10,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "Join",
          "toId" : 9,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 42,
          "fromName" : "LogicalQueryStage",
          "toId" : 9,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "Join",
          "toId" : 8,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "Project",
          "toId" : 7,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 46,
          "fromName" : "LogicalRelation",
          "toId" : 45,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 45,
          "fromName" : "Filter",
          "toId" : 44,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 44,
          "fromName" : "Project",
          "toId" : 43,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 22,
          "fromName" : "Project",
          "toId" : 48,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 31,
          "fromName" : "Project",
          "toId" : 54,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 55,
          "fromName" : "LogicalQueryStage",
          "toId" : 54,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 54,
          "fromName" : "Join",
          "toId" : 53,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 53,
          "fromName" : "Project",
          "toId" : 52,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 57,
          "fromName" : "LogicalQueryStage",
          "toId" : 56,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 58,
          "fromName" : "LogicalQueryStage",
          "toId" : 56,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 56,
          "fromName" : "Join",
          "toId" : 52,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 52,
          "fromName" : "Join",
          "toId" : 51,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 51,
          "fromName" : "Project",
          "toId" : 50,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 50,
          "fromName" : "Aggregate",
          "toId" : 49,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 59,
          "fromName" : "LogicalQueryStage",
          "toId" : 49,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 49,
          "fromName" : "Join",
          "toId" : 48,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 48,
          "fromName" : "Join",
          "toId" : 47,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 47,
          "fromName" : "Project",
          "toId" : 43,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 43,
          "fromName" : "Join",
          "toId" : 7,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Join",
          "toId" : 6,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Project",
          "toId" : 5,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Aggregate",
          "toId" : 4,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 66,
          "fromName" : "LogicalRelation",
          "toId" : 65,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 69,
          "fromName" : "LogicalRelation",
          "toId" : 68,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 68,
          "fromName" : "Filter",
          "toId" : 67,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 67,
          "fromName" : "Project",
          "toId" : 65,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 65,
          "fromName" : "Filter",
          "toId" : 64,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 64,
          "fromName" : "Project",
          "toId" : 63,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 67,
          "fromName" : "Project",
          "toId" : 63,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 63,
          "fromName" : "Join",
          "toId" : 62,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 62,
          "fromName" : "Project",
          "toId" : 61,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 74,
          "fromName" : "LogicalRelation",
          "toId" : 73,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 77,
          "fromName" : "LogicalRelation",
          "toId" : 76,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 76,
          "fromName" : "Filter",
          "toId" : 75,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 75,
          "fromName" : "Project",
          "toId" : 73,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 73,
          "fromName" : "Filter",
          "toId" : 72,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 72,
          "fromName" : "Project",
          "toId" : 71,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 75,
          "fromName" : "Project",
          "toId" : 71,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 71,
          "fromName" : "Join",
          "toId" : 70,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 70,
          "fromName" : "Project",
          "toId" : 61,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 82,
          "fromName" : "LogicalRelation",
          "toId" : 81,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 85,
          "fromName" : "LogicalRelation",
          "toId" : 84,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 84,
          "fromName" : "Filter",
          "toId" : 83,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 83,
          "fromName" : "Project",
          "toId" : 81,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 81,
          "fromName" : "Filter",
          "toId" : 80,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 80,
          "fromName" : "Project",
          "toId" : 79,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 83,
          "fromName" : "Project",
          "toId" : 79,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 79,
          "fromName" : "Join",
          "toId" : 78,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 78,
          "fromName" : "Project",
          "toId" : 61,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 61,
          "fromName" : "Union",
          "toId" : 60,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 60,
          "fromName" : "Aggregate",
          "toId" : 4,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 4,
          "fromName" : "Filter",
          "toId" : 3,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 95,
          "fromName" : "LogicalRelation",
          "toId" : 94,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 98,
          "fromName" : "LogicalRelation",
          "toId" : 97,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 101,
          "fromName" : "LogicalRelation",
          "toId" : 100,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 100,
          "fromName" : "Filter",
          "toId" : 99,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 99,
          "fromName" : "Project",
          "toId" : 97,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 97,
          "fromName" : "Filter",
          "toId" : 96,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 96,
          "fromName" : "Project",
          "toId" : 94,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 94,
          "fromName" : "Filter",
          "toId" : 93,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 93,
          "fromName" : "Project",
          "toId" : 92,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 22,
          "fromName" : "Project",
          "toId" : 103,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 33,
          "fromName" : "LogicalRelation",
          "toId" : 111,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 34,
          "fromName" : "Project",
          "toId" : 111,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 111,
          "fromName" : "Filter",
          "toId" : 110,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 110,
          "fromName" : "Project",
          "toId" : 109,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 112,
          "fromName" : "LogicalQueryStage",
          "toId" : 109,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 109,
          "fromName" : "Join",
          "toId" : 108,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 108,
          "fromName" : "Project",
          "toId" : 107,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 114,
          "fromName" : "LogicalQueryStage",
          "toId" : 113,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 115,
          "fromName" : "LogicalQueryStage",
          "toId" : 113,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 113,
          "fromName" : "Join",
          "toId" : 107,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 107,
          "fromName" : "Join",
          "toId" : 106,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 106,
          "fromName" : "Project",
          "toId" : 105,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 105,
          "fromName" : "Aggregate",
          "toId" : 104,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 116,
          "fromName" : "LogicalQueryStage",
          "toId" : 104,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 104,
          "fromName" : "Join",
          "toId" : 103,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 103,
          "fromName" : "Join",
          "toId" : 102,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 102,
          "fromName" : "Project",
          "toId" : 92,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 92,
          "fromName" : "Join",
          "toId" : 91,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 117,
          "fromName" : "LogicalQueryStage",
          "toId" : 91,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 91,
          "fromName" : "Join",
          "toId" : 90,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 90,
          "fromName" : "Project",
          "toId" : 89,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 121,
          "fromName" : "LogicalRelation",
          "toId" : 120,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 120,
          "fromName" : "Filter",
          "toId" : 119,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 119,
          "fromName" : "Project",
          "toId" : 118,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 22,
          "fromName" : "Project",
          "toId" : 123,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 110,
          "fromName" : "Project",
          "toId" : 129,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 130,
          "fromName" : "LogicalQueryStage",
          "toId" : 129,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 129,
          "fromName" : "Join",
          "toId" : 128,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 128,
          "fromName" : "Project",
          "toId" : 127,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 132,
          "fromName" : "LogicalQueryStage",
          "toId" : 131,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 133,
          "fromName" : "LogicalQueryStage",
          "toId" : 131,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 131,
          "fromName" : "Join",
          "toId" : 127,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 127,
          "fromName" : "Join",
          "toId" : 126,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 126,
          "fromName" : "Project",
          "toId" : 125,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 125,
          "fromName" : "Aggregate",
          "toId" : 124,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 134,
          "fromName" : "LogicalQueryStage",
          "toId" : 124,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 124,
          "fromName" : "Join",
          "toId" : 123,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 123,
          "fromName" : "Join",
          "toId" : 122,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 122,
          "fromName" : "Project",
          "toId" : 118,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 118,
          "fromName" : "Join",
          "toId" : 89,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 89,
          "fromName" : "Join",
          "toId" : 88,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 88,
          "fromName" : "Project",
          "toId" : 87,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 87,
          "fromName" : "Aggregate",
          "toId" : 86,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 60,
          "fromName" : "Aggregate",
          "toId" : 86,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 86,
          "fromName" : "Filter",
          "toId" : 3,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Join",
          "toId" : 2,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "LocalLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "LocalLimit",
          "toId" : 0,
          "toName" : "GlobalLimit",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [i_brand_id#1082 ASC NULLS FIRST, i_class_id#1084 ASC NULLS FIRST, i_category_id#1086 ASC NULLS FIRST], true\n      +- Join Inner, (((i_brand_id#1082 = i_brand_id#1155) AND (i_class_id#1084 = i_class_id#1157)) AND (i_category_id#1086 = i_category_id#1159))\n         :- Filter (isnotnull(sales#731) AND (cast(sales#731 as decimal(32,6)) > cast(scalar-subquery#735 [] as decimal(32,6))))\n         :  :  +- Aggregate [avg((cast(quantity#746 as decimal(10,0)) * list_price#747)) AS average_sales#752]\n         :  :     +- Union false, false\n         :  :        :- Project [ss_quantity#886 AS quantity#746, ss_list_price#888 AS list_price#747]\n         :  :        :  +- Join Inner, (ss_sold_date_sk#899 = d_date_sk#900)\n         :  :        :     :- Project [ss_quantity#886, ss_list_price#888, ss_sold_date_sk#899]\n         :  :        :     :  +- Filter (isnotnull(ss_sold_date_sk#899) AND dynamicpruning#1288 [ss_sold_date_sk#899])\n         :  :        :     :     :  +- Project [d_date_sk#900]\n         :  :        :     :     :     +- Filter ((isnotnull(d_year#906) AND ((d_year#906 >= 1998) AND (d_year#906 <= 2000))) AND isnotnull(d_date_sk#900))\n         :  :        :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#900,d_date_id#901,d_date#902,d_month_seq#903,d_week_seq#904,d_quarter_seq#905,d_year#906,d_dow#907,d_moy#908,d_dom#909,d_qoy#910,d_fy_year#911,d_fy_quarter_seq#912,d_fy_week_seq#913,d_day_name#914,d_quarter_name#915,d_holiday#916,d_weekend#917,d_following_holiday#918,d_first_dom#919,d_last_dom#920,d_same_day_ly#921,d_same_day_lq#922,d_current_day#923,... 4 more fields] parquet\n         :  :        :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#877,ss_item_sk#878,ss_customer_sk#879,ss_cdemo_sk#880,ss_hdemo_sk#881,ss_addr_sk#882,ss_store_sk#883,ss_promo_sk#884,ss_ticket_number#885L,ss_quantity#886,ss_wholesale_cost#887,ss_list_price#888,ss_sales_price#889,ss_ext_discount_amt#890,ss_ext_sales_price#891,ss_ext_wholesale_cost#892,ss_ext_list_price#893,ss_ext_tax#894,ss_coupon_amt#895,ss_net_paid#896,ss_net_paid_inc_tax#897,ss_net_profit#898,ss_sold_date_sk#899] parquet\n         :  :        :     +- Project [d_date_sk#900]\n         :  :        :        +- Filter ((isnotnull(d_year#906) AND ((d_year#906 >= 1998) AND (d_year#906 <= 2000))) AND isnotnull(d_date_sk#900))\n         :  :        :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#900,d_date_id#901,d_date#902,d_month_seq#903,d_week_seq#904,d_quarter_seq#905,d_year#906,d_dow#907,d_moy#908,d_dom#909,d_qoy#910,d_fy_year#911,d_fy_quarter_seq#912,d_fy_week_seq#913,d_day_name#914,d_quarter_name#915,d_holiday#916,d_weekend#917,d_following_holiday#918,d_first_dom#919,d_last_dom#920,d_same_day_ly#921,d_same_day_lq#922,d_current_day#923,... 4 more fields] parquet\n         :  :        :- Project [cs_quantity#945 AS quantity#748, cs_list_price#947 AS list_price#749]\n         :  :        :  +- Join Inner, (cs_sold_date_sk#961 = d_date_sk#962)\n         :  :        :     :- Project [cs_quantity#945, cs_list_price#947, cs_sold_date_sk#961]\n         :  :        :     :  +- Filter (isnotnull(cs_sold_date_sk#961) AND dynamicpruning#1289 [cs_sold_date_sk#961])\n         :  :        :     :     :  +- Project [d_date_sk#962]\n         :  :        :     :     :     +- Filter ((isnotnull(d_year#968) AND ((d_year#968 >= 1998) AND (d_year#968 <= 2000))) AND isnotnull(d_date_sk#962))\n         :  :        :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#962,d_date_id#963,d_date#964,d_month_seq#965,d_week_seq#966,d_quarter_seq#967,d_year#968,d_dow#969,d_moy#970,d_dom#971,d_qoy#972,d_fy_year#973,d_fy_quarter_seq#974,d_fy_week_seq#975,d_day_name#976,d_quarter_name#977,d_holiday#978,d_weekend#979,d_following_holiday#980,d_first_dom#981,d_last_dom#982,d_same_day_ly#983,d_same_day_lq#984,d_current_day#985,... 4 more fields] parquet\n         :  :        :     :     +- Relation spark_catalog.tpcds_100.catalog_sales[cs_sold_time_sk#928,cs_ship_date_sk#929,cs_bill_customer_sk#930,cs_bill_cdemo_sk#931,cs_bill_hdemo_sk#932,cs_bill_addr_sk#933,cs_ship_customer_sk#934,cs_ship_cdemo_sk#935,cs_ship_hdemo_sk#936,cs_ship_addr_sk#937,cs_call_center_sk#938,cs_catalog_page_sk#939,cs_ship_mode_sk#940,cs_warehouse_sk#941,cs_item_sk#942,cs_promo_sk#943,cs_order_number#944L,cs_quantity#945,cs_wholesale_cost#946,cs_list_price#947,cs_sales_price#948,cs_ext_discount_amt#949,cs_ext_sales_price#950,cs_ext_wholesale_cost#951,... 10 more fields] parquet\n         :  :        :     +- Project [d_date_sk#962]\n         :  :        :        +- Filter ((isnotnull(d_year#968) AND ((d_year#968 >= 1998) AND (d_year#968 <= 2000))) AND isnotnull(d_date_sk#962))\n         :  :        :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#962,d_date_id#963,d_date#964,d_month_seq#965,d_week_seq#966,d_quarter_seq#967,d_year#968,d_dow#969,d_moy#970,d_dom#971,d_qoy#972,d_fy_year#973,d_fy_quarter_seq#974,d_fy_week_seq#975,d_day_name#976,d_quarter_name#977,d_holiday#978,d_weekend#979,d_following_holiday#980,d_first_dom#981,d_last_dom#982,d_same_day_ly#983,d_same_day_lq#984,d_current_day#985,... 4 more fields] parquet\n         :  :        +- Project [ws_quantity#1007 AS quantity#750, ws_list_price#1009 AS list_price#751]\n         :  :           +- Join Inner, (ws_sold_date_sk#1023 = d_date_sk#1024)\n         :  :              :- Project [ws_quantity#1007, ws_list_price#1009, ws_sold_date_sk#1023]\n         :  :              :  +- Filter (isnotnull(ws_sold_date_sk#1023) AND dynamicpruning#1290 [ws_sold_date_sk#1023])\n         :  :              :     :  +- Project [d_date_sk#1024]\n         :  :              :     :     +- Filter ((isnotnull(d_year#1030) AND ((d_year#1030 >= 1998) AND (d_year#1030 <= 2000))) AND isnotnull(d_date_sk#1024))\n         :  :              :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#1024,d_date_id#1025,d_date#1026,d_month_seq#1027,d_week_seq#1028,d_quarter_seq#1029,d_year#1030,d_dow#1031,d_moy#1032,d_dom#1033,d_qoy#1034,d_fy_year#1035,d_fy_quarter_seq#1036,d_fy_week_seq#1037,d_day_name#1038,d_quarter_name#1039,d_holiday#1040,d_weekend#1041,d_following_holiday#1042,d_first_dom#1043,d_last_dom#1044,d_same_day_ly#1045,d_same_day_lq#1046,d_current_day#1047,... 4 more fields] parquet\n         :  :              :     +- Relation spark_catalog.tpcds_100.web_sales[ws_sold_time_sk#990,ws_ship_date_sk#991,ws_item_sk#992,ws_bill_customer_sk#993,ws_bill_cdemo_sk#994,ws_bill_hdemo_sk#995,ws_bill_addr_sk#996,ws_ship_customer_sk#997,ws_ship_cdemo_sk#998,ws_ship_hdemo_sk#999,ws_ship_addr_sk#1000,ws_web_page_sk#1001,ws_web_site_sk#1002,ws_ship_mode_sk#1003,ws_warehouse_sk#1004,ws_promo_sk#1005,ws_order_number#1006L,ws_quantity#1007,ws_wholesale_cost#1008,ws_list_price#1009,ws_sales_price#1010,ws_ext_discount_amt#1011,ws_ext_sales_price#1012,ws_ext_wholesale_cost#1013,... 10 more fields] parquet\n         :  :              +- Project [d_date_sk#1024]\n         :  :                 +- Filter ((isnotnull(d_year#1030) AND ((d_year#1030 >= 1998) AND (d_year#1030 <= 2000))) AND isnotnull(d_date_sk#1024))\n         :  :                    +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#1024,d_date_id#1025,d_date#1026,d_month_seq#1027,d_week_seq#1028,d_quarter_seq#1029,d_year#1030,d_dow#1031,d_moy#1032,d_dom#1033,d_qoy#1034,d_fy_year#1035,d_fy_quarter_seq#1036,d_fy_week_seq#1037,d_day_name#1038,d_quarter_name#1039,d_holiday#1040,d_weekend#1041,d_following_holiday#1042,d_first_dom#1043,d_last_dom#1044,d_same_day_ly#1045,d_same_day_lq#1046,d_current_day#1047,... 4 more fields] parquet\n         :  +- Aggregate [i_brand_id#1082, i_class_id#1084, i_category_id#1086], [store AS channel#730, i_brand_id#1082, i_class_id#1084, i_category_id#1086, sum((cast(ss_quantity#1061 as decimal(10,0)) * ss_list_price#1063)) AS sales#731, count(1) AS number_sales#732L]\n         :     +- Project [ss_quantity#1061, ss_list_price#1063, i_brand_id#1082, i_class_id#1084, i_category_id#1086]\n         :        +- Join Inner, (ss_item_sk#1053 = i_item_sk#1075)\n         :           :- Project [ss_item_sk#1053, ss_quantity#1061, ss_list_price#1063]\n         :           :  +- Join Inner, (ss_sold_date_sk#1074 = d_date_sk#1097)\n         :           :     :- Join LeftSemi, (ss_item_sk#1053 = ss_item_sk#745)\n         :           :     :  :- Project [ss_item_sk#1053, ss_quantity#1061, ss_list_price#1063, ss_sold_date_sk#1074]\n         :           :     :  :  +- Filter ((isnotnull(ss_item_sk#1053) AND isnotnull(ss_sold_date_sk#1074)) AND dynamicpruning#1303 [ss_sold_date_sk#1074])\n         :           :     :  :     :  +- Project [d_date_sk#1097]\n         :           :     :  :     :     +- Filter ((isnotnull(d_week_seq#1101) AND (d_week_seq#1101 = scalar-subquery#734 [])) AND isnotnull(d_date_sk#1097))\n         :           :     :  :     :        :  +- Project [d_week_seq#1213]\n         :           :     :  :     :        :     +- Filter (((isnotnull(d_year#1215) AND isnotnull(d_moy#1217)) AND isnotnull(d_dom#1218)) AND (((d_year#1215 = 1999) AND (d_moy#1217 = 12)) AND (d_dom#1218 = 16)))\n         :           :     :  :     :        :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#1209,d_date_id#1210,d_date#1211,d_month_seq#1212,d_week_seq#1213,d_quarter_seq#1214,d_year#1215,d_dow#1216,d_moy#1217,d_dom#1218,d_qoy#1219,d_fy_year#1220,d_fy_quarter_seq#1221,d_fy_week_seq#1222,d_day_name#1223,d_quarter_name#1224,d_holiday#1225,d_weekend#1226,d_following_holiday#1227,d_first_dom#1228,d_last_dom#1229,d_same_day_ly#1230,d_same_day_lq#1231,d_current_day#1232,... 4 more fields] parquet\n         :           :     :  :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#1097,d_date_id#1098,d_date#1099,d_month_seq#1100,d_week_seq#1101,d_quarter_seq#1102,d_year#1103,d_dow#1104,d_moy#1105,d_dom#1106,d_qoy#1107,d_fy_year#1108,d_fy_quarter_seq#1109,d_fy_week_seq#1110,d_day_name#1111,d_quarter_name#1112,d_holiday#1113,d_weekend#1114,d_following_holiday#1115,d_first_dom#1116,d_last_dom#1117,d_same_day_ly#1118,d_same_day_lq#1119,d_current_day#1120,... 4 more fields] parquet\n         :           :     :  :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#1052,ss_item_sk#1053,ss_customer_sk#1054,ss_cdemo_sk#1055,ss_hdemo_sk#1056,ss_addr_sk#1057,ss_store_sk#1058,ss_promo_sk#1059,ss_ticket_number#1060L,ss_quantity#1061,ss_wholesale_cost#1062,ss_list_price#1063,ss_sales_price#1064,ss_ext_discount_amt#1065,ss_ext_sales_price#1066,ss_ext_wholesale_cost#1067,ss_ext_list_price#1068,ss_ext_tax#1069,ss_coupon_amt#1070,ss_net_paid#1071,ss_net_paid_inc_tax#1072,ss_net_profit#1073,ss_sold_date_sk#1074] parquet\n         :           :     :  +- Project [i_item_sk#25 AS ss_item_sk#745]\n         :           :     :     +- Join Inner, (((i_brand_id#32 = brand_id#742) AND (i_class_id#34 = class_id#743)) AND (i_category_id#36 = category_id#744))\n         :           :     :        :- Project [i_item_sk#25, i_brand_id#32, i_class_id#34, i_category_id#36]\n         :           :     :        :  +- Filter ((isnotnull(i_brand_id#32) AND isnotnull(i_class_id#34)) AND isnotnull(i_category_id#36))\n         :           :     :        :     +- Relation spark_catalog.tpcds_100.item[i_item_sk#25,i_item_id#26,i_rec_start_date#27,i_rec_end_date#28,i_item_desc#29,i_current_price#30,i_wholesale_cost#31,i_brand_id#32,i_brand#33,i_class_id#34,i_class#35,i_category_id#36,i_category#37,i_manufact_id#38,i_manufact#39,i_size#40,i_formulation#41,i_color#42,i_units#43,i_container#44,i_manager_id#45,i_product_name#46] parquet\n         :           :     :        +- Join LeftSemi, (((brand_id#742 <=> i_brand_id#834) AND (class_id#743 <=> i_class_id#836)) AND (category_id#744 <=> i_category_id#838))\n         :           :     :           :- Aggregate [brand_id#742, class_id#743, category_id#744], [brand_id#742, class_id#743, category_id#744]\n         :           :     :           :  +- Project [i_brand_id#762 AS brand_id#742, i_class_id#764 AS class_id#743, i_category_id#766 AS category_id#744]\n         :           :     :           :     +- Join Inner, (ss_item_sk#48 = i_item_sk#755)\n         :           :     :           :        :- Project [ss_item_sk#48]\n         :           :     :           :        :  +- Join Inner, (ss_sold_date_sk#69 = d_date_sk#70)\n         :           :     :           :        :     :- Project [ss_item_sk#48, ss_sold_date_sk#69]\n         :           :     :           :        :     :  +- Filter ((isnotnull(ss_item_sk#48) AND isnotnull(ss_sold_date_sk#69)) AND dynamicpruning#1291 [ss_sold_date_sk#69])\n         :           :     :           :        :     :     :  +- Project [d_date_sk#70]\n         :           :     :           :        :     :     :     +- Filter ((isnotnull(d_year#76) AND ((d_year#76 >= 1998) AND (d_year#76 <= 2000))) AND isnotnull(d_date_sk#70))\n         :           :     :           :        :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#70,d_date_id#71,d_date#72,d_month_seq#73,d_week_seq#74,d_quarter_seq#75,d_year#76,d_dow#77,d_moy#78,d_dom#79,d_qoy#80,d_fy_year#81,d_fy_quarter_seq#82,d_fy_week_seq#83,d_day_name#84,d_quarter_name#85,d_holiday#86,d_weekend#87,d_following_holiday#88,d_first_dom#89,d_last_dom#90,d_same_day_ly#91,d_same_day_lq#92,d_current_day#93,... 4 more fields] parquet\n         :           :     :           :        :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#47,ss_item_sk#48,ss_customer_sk#49,ss_cdemo_sk#50,ss_hdemo_sk#51,ss_addr_sk#52,ss_store_sk#53,ss_promo_sk#54,ss_ticket_number#55L,ss_quantity#56,ss_wholesale_cost#57,ss_list_price#58,ss_sales_price#59,ss_ext_discount_amt#60,ss_ext_sales_price#61,ss_ext_wholesale_cost#62,ss_ext_list_price#63,ss_ext_tax#64,ss_coupon_amt#65,ss_net_paid#66,ss_net_paid_inc_tax#67,ss_net_profit#68,ss_sold_date_sk#69] parquet\n         :           :     :           :        :     +- LogicalQueryStage Project [d_date_sk#70], BroadcastQueryStage 0\n         :           :     :           :        +- Join LeftSemi, (((i_brand_id#762 <=> i_brand_id#784) AND (i_class_id#764 <=> i_class_id#786)) AND (i_category_id#766 <=> i_category_id#788))\n         :           :     :           :           :- LogicalQueryStage Project [i_item_sk#755, i_brand_id#762, i_class_id#764, i_category_id#766], ShuffleQueryStage 1\n         :           :     :           :           +- LogicalQueryStage Project [i_brand_id#784, i_class_id#786, i_category_id#788], ShuffleQueryStage 47\n         :           :     :           +- LogicalQueryStage Project [i_brand_id#834, i_class_id#836, i_category_id#838], ShuffleQueryStage 48\n         :           :     +- LogicalQueryStage Project [d_date_sk#1097], BroadcastQueryStage 9\n         :           +- Join LeftSemi, (i_item_sk#1075 = ss_item_sk#745)\n         :              :- Project [i_item_sk#1075, i_brand_id#1082, i_class_id#1084, i_category_id#1086]\n         :              :  +- Filter (((isnotnull(i_item_sk#1075) AND isnotnull(i_brand_id#1082)) AND isnotnull(i_class_id#1084)) AND isnotnull(i_category_id#1086))\n         :              :     +- Relation spark_catalog.tpcds_100.item[i_item_sk#1075,i_item_id#1076,i_rec_start_date#1077,i_rec_end_date#1078,i_item_desc#1079,i_current_price#1080,i_wholesale_cost#1081,i_brand_id#1082,i_brand#1083,i_class_id#1084,i_class#1085,i_category_id#1086,i_category#1087,i_manufact_id#1088,i_manufact#1089,i_size#1090,i_formulation#1091,i_color#1092,i_units#1093,i_container#1094,i_manager_id#1095,i_product_name#1096] parquet\n         :              +- Project [i_item_sk#25 AS ss_item_sk#745]\n         :                 +- Join Inner, (((i_brand_id#32 = brand_id#742) AND (i_class_id#34 = class_id#743)) AND (i_category_id#36 = category_id#744))\n         :                    :- Project [i_item_sk#25, i_brand_id#32, i_class_id#34, i_category_id#36]\n         :                    :  +- Filter ((isnotnull(i_brand_id#32) AND isnotnull(i_class_id#34)) AND isnotnull(i_category_id#36))\n         :                    :     +- Relation spark_catalog.tpcds_100.item[i_item_sk#25,i_item_id#26,i_rec_start_date#27,i_rec_end_date#28,i_item_desc#29,i_current_price#30,i_wholesale_cost#31,i_brand_id#32,i_brand#33,i_class_id#34,i_class#35,i_category_id#36,i_category#37,i_manufact_id#38,i_manufact#39,i_size#40,i_formulation#41,i_color#42,i_units#43,i_container#44,i_manager_id#45,i_product_name#46] parquet\n         :                    +- Join LeftSemi, (((brand_id#742 <=> i_brand_id#834) AND (class_id#743 <=> i_class_id#836)) AND (category_id#744 <=> i_category_id#838))\n         :                       :- Aggregate [brand_id#742, class_id#743, category_id#744], [brand_id#742, class_id#743, category_id#744]\n         :                       :  +- Project [i_brand_id#762 AS brand_id#742, i_class_id#764 AS class_id#743, i_category_id#766 AS category_id#744]\n         :                       :     +- Join Inner, (ss_item_sk#48 = i_item_sk#755)\n         :                       :        :- Project [ss_item_sk#48]\n         :                       :        :  +- Join Inner, (ss_sold_date_sk#69 = d_date_sk#70)\n         :                       :        :     :- Project [ss_item_sk#48, ss_sold_date_sk#69]\n         :                       :        :     :  +- Filter ((isnotnull(ss_item_sk#48) AND isnotnull(ss_sold_date_sk#69)) AND dynamicpruning#1291 [ss_sold_date_sk#69])\n         :                       :        :     :     :  +- Project [d_date_sk#70]\n         :                       :        :     :     :     +- Filter ((isnotnull(d_year#76) AND ((d_year#76 >= 1998) AND (d_year#76 <= 2000))) AND isnotnull(d_date_sk#70))\n         :                       :        :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#70,d_date_id#71,d_date#72,d_month_seq#73,d_week_seq#74,d_quarter_seq#75,d_year#76,d_dow#77,d_moy#78,d_dom#79,d_qoy#80,d_fy_year#81,d_fy_quarter_seq#82,d_fy_week_seq#83,d_day_name#84,d_quarter_name#85,d_holiday#86,d_weekend#87,d_following_holiday#88,d_first_dom#89,d_last_dom#90,d_same_day_ly#91,d_same_day_lq#92,d_current_day#93,... 4 more fields] parquet\n         :                       :        :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#47,ss_item_sk#48,ss_customer_sk#49,ss_cdemo_sk#50,ss_hdemo_sk#51,ss_addr_sk#52,ss_store_sk#53,ss_promo_sk#54,ss_ticket_number#55L,ss_quantity#56,ss_wholesale_cost#57,ss_list_price#58,ss_sales_price#59,ss_ext_discount_amt#60,ss_ext_sales_price#61,ss_ext_wholesale_cost#62,ss_ext_list_price#63,ss_ext_tax#64,ss_coupon_amt#65,ss_net_paid#66,ss_net_paid_inc_tax#67,ss_net_profit#68,ss_sold_date_sk#69] parquet\n         :                       :        :     +- LogicalQueryStage Project [d_date_sk#70], BroadcastQueryStage 11\n         :                       :        +- Join LeftSemi, (((i_brand_id#762 <=> i_brand_id#784) AND (i_class_id#764 <=> i_class_id#786)) AND (i_category_id#766 <=> i_category_id#788))\n         :                       :           :- LogicalQueryStage Project [i_item_sk#755, i_brand_id#762, i_class_id#764, i_category_id#766], ShuffleQueryStage 13\n         :                       :           +- LogicalQueryStage Project [i_brand_id#784, i_class_id#786, i_category_id#788], ShuffleQueryStage 50\n         :                       +- LogicalQueryStage Project [i_brand_id#834, i_class_id#836, i_category_id#838], ShuffleQueryStage 52\n         +- Filter (isnotnull(sales#737) AND (cast(sales#737 as decimal(32,6)) > cast(scalar-subquery#741 [] as decimal(32,6))))\n            :  +- Aggregate [avg((cast(quantity#746 as decimal(10,0)) * list_price#747)) AS average_sales#752]\n            :     +- Union false, false\n            :        :- Project [ss_quantity#886 AS quantity#746, ss_list_price#888 AS list_price#747]\n            :        :  +- Join Inner, (ss_sold_date_sk#899 = d_date_sk#900)\n            :        :     :- Project [ss_quantity#886, ss_list_price#888, ss_sold_date_sk#899]\n            :        :     :  +- Filter (isnotnull(ss_sold_date_sk#899) AND dynamicpruning#1288 [ss_sold_date_sk#899])\n            :        :     :     :  +- Project [d_date_sk#900]\n            :        :     :     :     +- Filter ((isnotnull(d_year#906) AND ((d_year#906 >= 1998) AND (d_year#906 <= 2000))) AND isnotnull(d_date_sk#900))\n            :        :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#900,d_date_id#901,d_date#902,d_month_seq#903,d_week_seq#904,d_quarter_seq#905,d_year#906,d_dow#907,d_moy#908,d_dom#909,d_qoy#910,d_fy_year#911,d_fy_quarter_seq#912,d_fy_week_seq#913,d_day_name#914,d_quarter_name#915,d_holiday#916,d_weekend#917,d_following_holiday#918,d_first_dom#919,d_last_dom#920,d_same_day_ly#921,d_same_day_lq#922,d_current_day#923,... 4 more fields] parquet\n            :        :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#877,ss_item_sk#878,ss_customer_sk#879,ss_cdemo_sk#880,ss_hdemo_sk#881,ss_addr_sk#882,ss_store_sk#883,ss_promo_sk#884,ss_ticket_number#885L,ss_quantity#886,ss_wholesale_cost#887,ss_list_price#888,ss_sales_price#889,ss_ext_discount_amt#890,ss_ext_sales_price#891,ss_ext_wholesale_cost#892,ss_ext_list_price#893,ss_ext_tax#894,ss_coupon_amt#895,ss_net_paid#896,ss_net_paid_inc_tax#897,ss_net_profit#898,ss_sold_date_sk#899] parquet\n            :        :     +- Project [d_date_sk#900]\n            :        :        +- Filter ((isnotnull(d_year#906) AND ((d_year#906 >= 1998) AND (d_year#906 <= 2000))) AND isnotnull(d_date_sk#900))\n            :        :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#900,d_date_id#901,d_date#902,d_month_seq#903,d_week_seq#904,d_quarter_seq#905,d_year#906,d_dow#907,d_moy#908,d_dom#909,d_qoy#910,d_fy_year#911,d_fy_quarter_seq#912,d_fy_week_seq#913,d_day_name#914,d_quarter_name#915,d_holiday#916,d_weekend#917,d_following_holiday#918,d_first_dom#919,d_last_dom#920,d_same_day_ly#921,d_same_day_lq#922,d_current_day#923,... 4 more fields] parquet\n            :        :- Project [cs_quantity#945 AS quantity#748, cs_list_price#947 AS list_price#749]\n            :        :  +- Join Inner, (cs_sold_date_sk#961 = d_date_sk#962)\n            :        :     :- Project [cs_quantity#945, cs_list_price#947, cs_sold_date_sk#961]\n            :        :     :  +- Filter (isnotnull(cs_sold_date_sk#961) AND dynamicpruning#1289 [cs_sold_date_sk#961])\n            :        :     :     :  +- Project [d_date_sk#962]\n            :        :     :     :     +- Filter ((isnotnull(d_year#968) AND ((d_year#968 >= 1998) AND (d_year#968 <= 2000))) AND isnotnull(d_date_sk#962))\n            :        :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#962,d_date_id#963,d_date#964,d_month_seq#965,d_week_seq#966,d_quarter_seq#967,d_year#968,d_dow#969,d_moy#970,d_dom#971,d_qoy#972,d_fy_year#973,d_fy_quarter_seq#974,d_fy_week_seq#975,d_day_name#976,d_quarter_name#977,d_holiday#978,d_weekend#979,d_following_holiday#980,d_first_dom#981,d_last_dom#982,d_same_day_ly#983,d_same_day_lq#984,d_current_day#985,... 4 more fields] parquet\n            :        :     :     +- Relation spark_catalog.tpcds_100.catalog_sales[cs_sold_time_sk#928,cs_ship_date_sk#929,cs_bill_customer_sk#930,cs_bill_cdemo_sk#931,cs_bill_hdemo_sk#932,cs_bill_addr_sk#933,cs_ship_customer_sk#934,cs_ship_cdemo_sk#935,cs_ship_hdemo_sk#936,cs_ship_addr_sk#937,cs_call_center_sk#938,cs_catalog_page_sk#939,cs_ship_mode_sk#940,cs_warehouse_sk#941,cs_item_sk#942,cs_promo_sk#943,cs_order_number#944L,cs_quantity#945,cs_wholesale_cost#946,cs_list_price#947,cs_sales_price#948,cs_ext_discount_amt#949,cs_ext_sales_price#950,cs_ext_wholesale_cost#951,... 10 more fields] parquet\n            :        :     +- Project [d_date_sk#962]\n            :        :        +- Filter ((isnotnull(d_year#968) AND ((d_year#968 >= 1998) AND (d_year#968 <= 2000))) AND isnotnull(d_date_sk#962))\n            :        :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#962,d_date_id#963,d_date#964,d_month_seq#965,d_week_seq#966,d_quarter_seq#967,d_year#968,d_dow#969,d_moy#970,d_dom#971,d_qoy#972,d_fy_year#973,d_fy_quarter_seq#974,d_fy_week_seq#975,d_day_name#976,d_quarter_name#977,d_holiday#978,d_weekend#979,d_following_holiday#980,d_first_dom#981,d_last_dom#982,d_same_day_ly#983,d_same_day_lq#984,d_current_day#985,... 4 more fields] parquet\n            :        +- Project [ws_quantity#1007 AS quantity#750, ws_list_price#1009 AS list_price#751]\n            :           +- Join Inner, (ws_sold_date_sk#1023 = d_date_sk#1024)\n            :              :- Project [ws_quantity#1007, ws_list_price#1009, ws_sold_date_sk#1023]\n            :              :  +- Filter (isnotnull(ws_sold_date_sk#1023) AND dynamicpruning#1290 [ws_sold_date_sk#1023])\n            :              :     :  +- Project [d_date_sk#1024]\n            :              :     :     +- Filter ((isnotnull(d_year#1030) AND ((d_year#1030 >= 1998) AND (d_year#1030 <= 2000))) AND isnotnull(d_date_sk#1024))\n            :              :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#1024,d_date_id#1025,d_date#1026,d_month_seq#1027,d_week_seq#1028,d_quarter_seq#1029,d_year#1030,d_dow#1031,d_moy#1032,d_dom#1033,d_qoy#1034,d_fy_year#1035,d_fy_quarter_seq#1036,d_fy_week_seq#1037,d_day_name#1038,d_quarter_name#1039,d_holiday#1040,d_weekend#1041,d_following_holiday#1042,d_first_dom#1043,d_last_dom#1044,d_same_day_ly#1045,d_same_day_lq#1046,d_current_day#1047,... 4 more fields] parquet\n            :              :     +- Relation spark_catalog.tpcds_100.web_sales[ws_sold_time_sk#990,ws_ship_date_sk#991,ws_item_sk#992,ws_bill_customer_sk#993,ws_bill_cdemo_sk#994,ws_bill_hdemo_sk#995,ws_bill_addr_sk#996,ws_ship_customer_sk#997,ws_ship_cdemo_sk#998,ws_ship_hdemo_sk#999,ws_ship_addr_sk#1000,ws_web_page_sk#1001,ws_web_site_sk#1002,ws_ship_mode_sk#1003,ws_warehouse_sk#1004,ws_promo_sk#1005,ws_order_number#1006L,ws_quantity#1007,ws_wholesale_cost#1008,ws_list_price#1009,ws_sales_price#1010,ws_ext_discount_amt#1011,ws_ext_sales_price#1012,ws_ext_wholesale_cost#1013,... 10 more fields] parquet\n            :              +- Project [d_date_sk#1024]\n            :                 +- Filter ((isnotnull(d_year#1030) AND ((d_year#1030 >= 1998) AND (d_year#1030 <= 2000))) AND isnotnull(d_date_sk#1024))\n            :                    +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#1024,d_date_id#1025,d_date#1026,d_month_seq#1027,d_week_seq#1028,d_quarter_seq#1029,d_year#1030,d_dow#1031,d_moy#1032,d_dom#1033,d_qoy#1034,d_fy_year#1035,d_fy_quarter_seq#1036,d_fy_week_seq#1037,d_day_name#1038,d_quarter_name#1039,d_holiday#1040,d_weekend#1041,d_following_holiday#1042,d_first_dom#1043,d_last_dom#1044,d_same_day_ly#1045,d_same_day_lq#1046,d_current_day#1047,... 4 more fields] parquet\n            +- Aggregate [i_brand_id#1155, i_class_id#1157, i_category_id#1159], [store AS channel#736, i_brand_id#1155, i_class_id#1157, i_category_id#1159, sum((cast(ss_quantity#1134 as decimal(10,0)) * ss_list_price#1136)) AS sales#737, count(1) AS number_sales#738L]\n               +- Project [ss_quantity#1134, ss_list_price#1136, i_brand_id#1155, i_class_id#1157, i_category_id#1159]\n                  +- Join Inner, (ss_item_sk#1126 = i_item_sk#1148)\n                     :- Project [ss_item_sk#1126, ss_quantity#1134, ss_list_price#1136]\n                     :  +- Join Inner, (ss_sold_date_sk#1147 = d_date_sk#1170)\n                     :     :- Join LeftSemi, (ss_item_sk#1126 = ss_item_sk#745)\n                     :     :  :- Project [ss_item_sk#1126, ss_quantity#1134, ss_list_price#1136, ss_sold_date_sk#1147]\n                     :     :  :  +- Filter ((isnotnull(ss_item_sk#1126) AND isnotnull(ss_sold_date_sk#1147)) AND dynamicpruning#1310 [ss_sold_date_sk#1147])\n                     :     :  :     :  +- Project [d_date_sk#1170]\n                     :     :  :     :     +- Filter ((isnotnull(d_week_seq#1174) AND (d_week_seq#1174 = scalar-subquery#740 [])) AND isnotnull(d_date_sk#1170))\n                     :     :  :     :        :  +- Project [d_week_seq#1241]\n                     :     :  :     :        :     +- Filter (((isnotnull(d_year#1243) AND isnotnull(d_moy#1245)) AND isnotnull(d_dom#1246)) AND (((d_year#1243 = 1998) AND (d_moy#1245 = 12)) AND (d_dom#1246 = 16)))\n                     :     :  :     :        :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#1237,d_date_id#1238,d_date#1239,d_month_seq#1240,d_week_seq#1241,d_quarter_seq#1242,d_year#1243,d_dow#1244,d_moy#1245,d_dom#1246,d_qoy#1247,d_fy_year#1248,d_fy_quarter_seq#1249,d_fy_week_seq#1250,d_day_name#1251,d_quarter_name#1252,d_holiday#1253,d_weekend#1254,d_following_holiday#1255,d_first_dom#1256,d_last_dom#1257,d_same_day_ly#1258,d_same_day_lq#1259,d_current_day#1260,... 4 more fields] parquet\n                     :     :  :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#1170,d_date_id#1171,d_date#1172,d_month_seq#1173,d_week_seq#1174,d_quarter_seq#1175,d_year#1176,d_dow#1177,d_moy#1178,d_dom#1179,d_qoy#1180,d_fy_year#1181,d_fy_quarter_seq#1182,d_fy_week_seq#1183,d_day_name#1184,d_quarter_name#1185,d_holiday#1186,d_weekend#1187,d_following_holiday#1188,d_first_dom#1189,d_last_dom#1190,d_same_day_ly#1191,d_same_day_lq#1192,d_current_day#1193,... 4 more fields] parquet\n                     :     :  :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#1125,ss_item_sk#1126,ss_customer_sk#1127,ss_cdemo_sk#1128,ss_hdemo_sk#1129,ss_addr_sk#1130,ss_store_sk#1131,ss_promo_sk#1132,ss_ticket_number#1133L,ss_quantity#1134,ss_wholesale_cost#1135,ss_list_price#1136,ss_sales_price#1137,ss_ext_discount_amt#1138,ss_ext_sales_price#1139,ss_ext_wholesale_cost#1140,ss_ext_list_price#1141,ss_ext_tax#1142,ss_coupon_amt#1143,ss_net_paid#1144,ss_net_paid_inc_tax#1145,ss_net_profit#1146,ss_sold_date_sk#1147] parquet\n                     :     :  +- Project [i_item_sk#25 AS ss_item_sk#745]\n                     :     :     +- Join Inner, (((i_brand_id#32 = brand_id#742) AND (i_class_id#34 = class_id#743)) AND (i_category_id#36 = category_id#744))\n                     :     :        :- Project [i_item_sk#25, i_brand_id#32, i_class_id#34, i_category_id#36]\n                     :     :        :  +- Filter ((isnotnull(i_brand_id#32) AND isnotnull(i_class_id#34)) AND isnotnull(i_category_id#36))\n                     :     :        :     +- Relation spark_catalog.tpcds_100.item[i_item_sk#25,i_item_id#26,i_rec_start_date#27,i_rec_end_date#28,i_item_desc#29,i_current_price#30,i_wholesale_cost#31,i_brand_id#32,i_brand#33,i_class_id#34,i_class#35,i_category_id#36,i_category#37,i_manufact_id#38,i_manufact#39,i_size#40,i_formulation#41,i_color#42,i_units#43,i_container#44,i_manager_id#45,i_product_name#46] parquet\n                     :     :        +- Join LeftSemi, (((brand_id#742 <=> i_brand_id#834) AND (class_id#743 <=> i_class_id#836)) AND (category_id#744 <=> i_category_id#838))\n                     :     :           :- Aggregate [brand_id#742, class_id#743, category_id#744], [brand_id#742, class_id#743, category_id#744]\n                     :     :           :  +- Project [i_brand_id#762 AS brand_id#742, i_class_id#764 AS class_id#743, i_category_id#766 AS category_id#744]\n                     :     :           :     +- Join Inner, (ss_item_sk#48 = i_item_sk#755)\n                     :     :           :        :- Project [ss_item_sk#48]\n                     :     :           :        :  +- Join Inner, (ss_sold_date_sk#69 = d_date_sk#70)\n                     :     :           :        :     :- Project [ss_item_sk#48, ss_sold_date_sk#69]\n                     :     :           :        :     :  +- Filter ((isnotnull(ss_item_sk#48) AND isnotnull(ss_sold_date_sk#69)) AND dynamicpruning#1297 [ss_sold_date_sk#69])\n                     :     :           :        :     :     :  +- Project [d_date_sk#70]\n                     :     :           :        :     :     :     +- Filter ((isnotnull(d_year#76) AND ((d_year#76 >= 1998) AND (d_year#76 <= 2000))) AND isnotnull(d_date_sk#70))\n                     :     :           :        :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#70,d_date_id#71,d_date#72,d_month_seq#73,d_week_seq#74,d_quarter_seq#75,d_year#76,d_dow#77,d_moy#78,d_dom#79,d_qoy#80,d_fy_year#81,d_fy_quarter_seq#82,d_fy_week_seq#83,d_day_name#84,d_quarter_name#85,d_holiday#86,d_weekend#87,d_following_holiday#88,d_first_dom#89,d_last_dom#90,d_same_day_ly#91,d_same_day_lq#92,d_current_day#93,... 4 more fields] parquet\n                     :     :           :        :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#47,ss_item_sk#48,ss_customer_sk#49,ss_cdemo_sk#50,ss_hdemo_sk#51,ss_addr_sk#52,ss_store_sk#53,ss_promo_sk#54,ss_ticket_number#55L,ss_quantity#56,ss_wholesale_cost#57,ss_list_price#58,ss_sales_price#59,ss_ext_discount_amt#60,ss_ext_sales_price#61,ss_ext_wholesale_cost#62,ss_ext_list_price#63,ss_ext_tax#64,ss_coupon_amt#65,ss_net_paid#66,ss_net_paid_inc_tax#67,ss_net_profit#68,ss_sold_date_sk#69] parquet\n                     :     :           :        :     +- LogicalQueryStage Project [d_date_sk#70], BroadcastQueryStage 23\n                     :     :           :        +- Join LeftSemi, (((i_brand_id#762 <=> i_brand_id#784) AND (i_class_id#764 <=> i_class_id#786)) AND (i_category_id#766 <=> i_category_id#788))\n                     :     :           :           :- LogicalQueryStage Project [i_item_sk#755, i_brand_id#762, i_class_id#764, i_category_id#766], ShuffleQueryStage 25\n                     :     :           :           +- LogicalQueryStage Project [i_brand_id#784, i_class_id#786, i_category_id#788], ShuffleQueryStage 54\n                     :     :           +- LogicalQueryStage Project [i_brand_id#834, i_class_id#836, i_category_id#838], ShuffleQueryStage 56\n                     :     +- LogicalQueryStage Project [d_date_sk#1170], BroadcastQueryStage 34\n                     +- Join LeftSemi, (i_item_sk#1148 = ss_item_sk#745)\n                        :- Project [i_item_sk#1148, i_brand_id#1155, i_class_id#1157, i_category_id#1159]\n                        :  +- Filter (((isnotnull(i_item_sk#1148) AND isnotnull(i_brand_id#1155)) AND isnotnull(i_class_id#1157)) AND isnotnull(i_category_id#1159))\n                        :     +- Relation spark_catalog.tpcds_100.item[i_item_sk#1148,i_item_id#1149,i_rec_start_date#1150,i_rec_end_date#1151,i_item_desc#1152,i_current_price#1153,i_wholesale_cost#1154,i_brand_id#1155,i_brand#1156,i_class_id#1157,i_class#1158,i_category_id#1159,i_category#1160,i_manufact_id#1161,i_manufact#1162,i_size#1163,i_formulation#1164,i_color#1165,i_units#1166,i_container#1167,i_manager_id#1168,i_product_name#1169] parquet\n                        +- Project [i_item_sk#25 AS ss_item_sk#745]\n                           +- Join Inner, (((i_brand_id#32 = brand_id#742) AND (i_class_id#34 = class_id#743)) AND (i_category_id#36 = category_id#744))\n                              :- Project [i_item_sk#25, i_brand_id#32, i_class_id#34, i_category_id#36]\n                              :  +- Filter ((isnotnull(i_brand_id#32) AND isnotnull(i_class_id#34)) AND isnotnull(i_category_id#36))\n                              :     +- Relation spark_catalog.tpcds_100.item[i_item_sk#25,i_item_id#26,i_rec_start_date#27,i_rec_end_date#28,i_item_desc#29,i_current_price#30,i_wholesale_cost#31,i_brand_id#32,i_brand#33,i_class_id#34,i_class#35,i_category_id#36,i_category#37,i_manufact_id#38,i_manufact#39,i_size#40,i_formulation#41,i_color#42,i_units#43,i_container#44,i_manager_id#45,i_product_name#46] parquet\n                              +- Join LeftSemi, (((brand_id#742 <=> i_brand_id#834) AND (class_id#743 <=> i_class_id#836)) AND (category_id#744 <=> i_category_id#838))\n                                 :- Aggregate [brand_id#742, class_id#743, category_id#744], [brand_id#742, class_id#743, category_id#744]\n                                 :  +- Project [i_brand_id#762 AS brand_id#742, i_class_id#764 AS class_id#743, i_category_id#766 AS category_id#744]\n                                 :     +- Join Inner, (ss_item_sk#48 = i_item_sk#755)\n                                 :        :- Project [ss_item_sk#48]\n                                 :        :  +- Join Inner, (ss_sold_date_sk#69 = d_date_sk#70)\n                                 :        :     :- Project [ss_item_sk#48, ss_sold_date_sk#69]\n                                 :        :     :  +- Filter ((isnotnull(ss_item_sk#48) AND isnotnull(ss_sold_date_sk#69)) AND dynamicpruning#1297 [ss_sold_date_sk#69])\n                                 :        :     :     :  +- Project [d_date_sk#70]\n                                 :        :     :     :     +- Filter ((isnotnull(d_year#76) AND ((d_year#76 >= 1998) AND (d_year#76 <= 2000))) AND isnotnull(d_date_sk#70))\n                                 :        :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#70,d_date_id#71,d_date#72,d_month_seq#73,d_week_seq#74,d_quarter_seq#75,d_year#76,d_dow#77,d_moy#78,d_dom#79,d_qoy#80,d_fy_year#81,d_fy_quarter_seq#82,d_fy_week_seq#83,d_day_name#84,d_quarter_name#85,d_holiday#86,d_weekend#87,d_following_holiday#88,d_first_dom#89,d_last_dom#90,d_same_day_ly#91,d_same_day_lq#92,d_current_day#93,... 4 more fields] parquet\n                                 :        :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#47,ss_item_sk#48,ss_customer_sk#49,ss_cdemo_sk#50,ss_hdemo_sk#51,ss_addr_sk#52,ss_store_sk#53,ss_promo_sk#54,ss_ticket_number#55L,ss_quantity#56,ss_wholesale_cost#57,ss_list_price#58,ss_sales_price#59,ss_ext_discount_amt#60,ss_ext_sales_price#61,ss_ext_wholesale_cost#62,ss_ext_list_price#63,ss_ext_tax#64,ss_coupon_amt#65,ss_net_paid#66,ss_net_paid_inc_tax#67,ss_net_profit#68,ss_sold_date_sk#69] parquet\n                                 :        :     +- LogicalQueryStage Project [d_date_sk#70], BroadcastQueryStage 36\n                                 :        +- Join LeftSemi, (((i_brand_id#762 <=> i_brand_id#784) AND (i_class_id#764 <=> i_class_id#786)) AND (i_category_id#766 <=> i_category_id#788))\n                                 :           :- LogicalQueryStage Project [i_item_sk#755, i_brand_id#762, i_class_id#764, i_category_id#766], ShuffleQueryStage 38\n                                 :           +- LogicalQueryStage Project [i_brand_id#784, i_class_id#786, i_category_id#788], ShuffleQueryStage 58\n                                 +- LogicalQueryStage Project [i_brand_id#834, i_class_id#836, i_category_id#838], ShuffleQueryStage 60\n"
      },
      "IM" : {
        "inputSizeInBytes" : 267882605184,
        "inputRowCount" : 2167344016
      },
      "PD" : {
        "2" : [ 177962, 455930, 415323, 324034, 407180, 578113, 259800, 210766, 416594, 365097, 722932, 430581, 737269, 1031975, 1514187, 472059, 101032, 459828, 347329, 114427, 94836, 1079666, 1326142, 383040, 175045, 486302, 702614, 800093, 2890585, 749715, 100494, 720165, 530316, 795278, 705228, 310364, 730188, 287903, 255104, 608403, 493741, 197579, 98211, 1196389, 851488, 408258, 740122, 162471, 235750, 429841, 280551, 434095, 986907, 459535, 521411, 444089, 345779, 644089, 1511511, 259033, 857504, 440487, 655905, 522602, 1260769, 704242, 355941, 572333, 482841, 779237, 447588, 350687, 323737, 1316494, 306270, 639573, 819553, 701140, 669174, 780010, 675042, 476951, 636674, 322479, 897583, 280582, 223958, 573984, 561763, 119797, 430493, 121994, 311747, 117433, 377765, 318296, 740667, 431248, 547706, 508009, 414691, 367457, 723737, 442906, 583473, 347572, 1269089, 287286, 380605, 786487, 704711, 1465276, 758753, 673171, 160802, 291861, 864733, 186361, 546087, 1459274, 1695574, 115478, 421893, 386121, 312819, 164972, 1072990, 214957, 152503, 420284, 300056, 868375, 940076, 349342, 205208, 928322, 195265, 461329, 359228, 419971, 560162, 326400, 702646, 957888, 320780, 321516, 414771, 187523, 870857, 1055493, 342091, 506784, 282728, 1045719, 262333, 128426, 495313, 750638, 98964, 1366471, 574893, 319167, 147634, 1547306, 890810, 507583, 261595, 408664, 943050, 676186, 857526, 578999, 449016, 240998, 433603, 682640, 120305, 912938, 1129760, 525413, 547769, 609464, 611740, 324072, 206504, 2926245, 295669, 919509, 366206, 535787, 794086, 708510, 622156, 383847, 1071951, 677651, 914990, 923202, 596798, 344327 ],
        "1" : [ 343068, 890938, 800121, 628104, 787568, 1128386, 509727, 408115, 817949, 713729, 1406980, 836232, 1441636, 2036567, 2980160, 921216, 185945, 899840, 674681, 212928, 169511, 2143545, 2625499, 749371, 336595, 947008, 1365237, 1562554, 5747186, 1467821, 181708, 1412408, 1038539, 1570821, 1382826, 602361, 1426347, 560364, 499132, 1202472, 968505, 386327, 180840, 2401121, 1669829, 794530, 1447648, 314580, 464409, 832608, 554522, 863530, 1939290, 883612, 1026791, 870210, 672125, 1252889, 2982580, 509435, 1701837, 845580, 1295036, 1027911, 2474043, 1389519, 699153, 1121263, 957452, 1526673, 868057, 680216, 633426, 2589677, 598368, 1246638, 1596931, 1379938, 1312530, 1534566, 1328559, 936523, 1256801, 627052, 1776930, 550327, 433952, 1114425, 1097695, 224554, 834047, 233730, 594257, 222447, 738189, 609527, 1453966, 846610, 1058252, 1000168, 806129, 705647, 1420164, 855116, 1141005, 663831, 2468661, 557905, 749444, 1545663, 1390361, 2917725, 1496196, 1329127, 311414, 567859, 1709934, 358566, 1060034, 2911543, 3338041, 218205, 830305, 756494, 608921, 317624, 2088449, 425391, 288658, 810185, 579442, 1712914, 1860621, 678575, 403023, 1835190, 380061, 900102, 697482, 816826, 1080461, 645076, 1384643, 1867818, 622601, 627578, 808904, 367317, 1702418, 2064262, 660230, 981779, 557790, 2039999, 521555, 245233, 958892, 1472714, 179976, 2712606, 1130444, 621096, 282877, 3043481, 1755097, 992717, 520849, 794236, 1850933, 1322721, 1683394, 1130141, 870839, 468360, 852492, 1346739, 228472, 1801332, 2216494, 1028057, 1079078, 1176461, 1198045, 630763, 406056, 5823269, 574838, 1819966, 717960, 1044266, 1557480, 1391847, 1216460, 752076, 2096285, 1326889, 1817583, 1830574, 1173630, 668602 ],
        "0" : [ 5844, 9412, 7071, 5313, 7071, 8556, 7071, 5844, 7071, 5313, 9412, 7071, 9412, 20176, 20176, 7778, 5844, 7778, 6428, 4830, 4390, 18341, 20176, 7071, 5844, 8556, 16674, 10353, 32493, 9412, 3628, 16674, 9412, 8556, 9412, 6428, 8556, 6428, 5844, 16674, 7778, 5313, 4830, 22193, 10353, 6428, 18341, 5844, 7071, 7071, 5844, 7778, 10353, 7071, 7071, 6428, 6428, 9412, 20176, 6428, 16674, 7071, 10353, 8556, 22193, 16674, 6428, 9412, 7778, 9412, 6428, 5844, 6428, 18341, 6428, 9412, 11388, 10353, 20176, 10353, 9412, 6428, 8556, 5844, 9412, 5844, 5844, 18341, 8556, 4390, 13780, 4830, 7071, 4830, 7071, 6428, 20176, 7071, 7778, 7778, 5844, 7071, 11388, 7778, 8556, 6428, 18341, 6428, 6428, 10353, 8556, 22193, 9412, 7778, 5844, 6428, 20176, 5313, 7071, 20176, 24413, 4390, 7071, 7071, 7071, 6428, 20176, 6428, 5844, 10353, 5844, 10353, 15158, 7071, 5844, 20176, 4830, 7778, 5844, 8556, 9412, 7071, 9412, 11388, 5313, 6428, 13780, 4830, 16674, 11388, 6428, 15158, 6428, 20176, 6428, 5313, 7778, 8556, 4390, 22193, 8556, 7778, 5844, 22193, 9412, 7778, 6428, 6428, 11388, 9412, 9412, 7778, 7778, 5313, 6428, 9412, 4830, 11388, 18341, 7778, 7778, 8556, 8556, 6428, 5313, 35743, 6428, 20176, 7778, 10353, 9412, 11388, 20176, 6428, 22193, 10353, 10353, 11388, 7778, 6428 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "StartTimeInMs" : 1702226651422,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 60076,
        "IOBytes" : {
          "Total" : 2546216615,
          "Details" : {
            "IR" : 2186334353,
            "IW" : 0,
            "SR" : 344431542,
            "SW" : 15450720
          }
        }
      }
    },
    "3" : {
      "LQP" : {
        "operators" : {
          "45" : {
            "sign" : 579430964,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 86282466,
            "rowCount" : 202541,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(i_item_sk#1075) AND isnotnull(i_brand_id#1082)) AND isnotnull(i_class_id#1084)) AND isnotnull(i_category_id#1086)) "
          },
          "98" : {
            "sign" : 683629544,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#1170, d_date_id#1171, d_date#1172, d_month_seq#1173, d_week_seq#1174, d_quarter_seq#1175, d_year#1176, d_dow#1177, d_moy#1178, d_dom#1179, d_qoy#1180, d_fy_year#1181, d_fy_quarter_seq#1182, d_fy_week_seq#1183, d_day_name#1184, d_quarter_name#1185, d_holiday#1186, d_weekend#1187, d_following_holiday#1188, d_first_dom#1189, d_last_dom#1190, d_same_day_ly#1191, d_same_day_lq#1192, d_current_day#1193, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "113" : {
            "sign" : -1270097614,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 4875456,
            "rowCount" : 203144,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (((i_brand_id#762 <=> i_brand_id#784) AND (i_class_id#764 <=> i_class_id#786)) AND (i_category_id#766 <=> i_category_id#788)) "
          },
          "34" : {
            "sign" : -117080718,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 17256,
            "rowCount" : 1438,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#70] "
          },
          "67" : {
            "sign" : 2019201408,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 17256,
            "rowCount" : 1438,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#900] "
          },
          "120" : {
            "sign" : -1448453368,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 86282466,
            "rowCount" : 202541,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(i_item_sk#1148) AND isnotnull(i_brand_id#1155)) AND isnotnull(i_class_id#1157)) AND isnotnull(i_category_id#1159)) "
          },
          "93" : {
            "sign" : -303911461,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 7701269884,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#1126, ss_quantity#1134, ss_list_price#1136, ss_sold_date_sk#1147] "
          },
          "12" : {
            "sign" : 571393713,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(ss_item_sk#1053) AND isnotnull(ss_sold_date_sk#1074)) AND dynamicpruning#1303 [ss_sold_date_sk#1074]) "
          },
          "66" : {
            "sign" : -1972788865,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#877, ss_item_sk#878, ss_customer_sk#879, ss_cdemo_sk#880, ss_hdemo_sk#881, ss_addr_sk#882, ss_store_sk#883, ss_promo_sk#884, ss_ticket_number#885L, ss_quantity#886, ss_wholesale_cost#887, ss_list_price#888, ss_sales_price#889, ss_ext_discount_amt#890, ss_ext_sales_price#891, ss_ext_wholesale_cost#892, ss_ext_list_price#893, ss_ext_tax#894, ss_coupon_amt#895, ss_net_paid#896, ss_net_paid_inc_tax#897, ss_net_profit#898, ss_sold_date_sk#899], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "89" : {
            "sign" : -309843437,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 11490316840,
            "rowCount" : 287257921,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_item_sk#1126 = i_item_sk#1148) "
          },
          "51" : {
            "sign" : -1922967392,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 1224753985121117440,
            "rowCount" : 61237699256055872,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_brand_id#762 AS brand_id#742, i_class_id#764 AS class_id#743, i_category_id#766 AS category_id#744] "
          },
          "124" : {
            "sign" : -14482712,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 1224753985121117440,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (((brand_id#742 <=> i_brand_id#834) AND (class_id#743 <=> i_class_id#836)) AND (category_id#744 <=> i_category_id#838)) "
          },
          "84" : {
            "sign" : -626435234,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 353748,
            "rowCount" : 1438,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(d_year#1030) AND ((d_year#1030 >= 1998) AND (d_year#1030 <= 2000))) AND isnotnull(d_date_sk#1024)) "
          },
          "8" : {
            "sign" : 139041030,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 46207619304,
            "rowCount" : 1925317471,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#1053, ss_quantity#1061, ss_list_price#1063] "
          },
          "73" : {
            "sign" : 1500374164,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 29800787536,
            "rowCount" : 143273017,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(cs_sold_date_sk#961) AND dynamicpruning#1289 [cs_sold_date_sk#961]) "
          },
          "78" : {
            "sign" : 17831375,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 1389912100,
            "rowCount" : 69495605,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_quantity#1007 AS quantity#750, ws_list_price#1009 AS list_price#751] "
          },
          "19" : {
            "sign" : -1755539215,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#1209, d_date_id#1210, d_date#1211, d_month_seq#1212, d_week_seq#1213, d_quarter_seq#1214, d_year#1215, d_dow#1216, d_moy#1217, d_dom#1218, d_qoy#1219, d_fy_year#1220, d_fy_quarter_seq#1221, d_fy_week_seq#1222, d_day_name#1223, d_quarter_name#1224, d_holiday#1225, d_weekend#1226, d_following_holiday#1227, d_first_dom#1228, d_last_dom#1229, d_same_day_ly#1230, d_same_day_lq#1231, d_current_day#1232, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "100" : {
            "sign" : 1734827371,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 492,
            "rowCount" : 2,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(d_year#1243) AND isnotnull(d_moy#1245)) AND isnotnull(d_dom#1246)) AND (((d_year#1243 = 1998) AND (d_moy#1245 = 12)) AND (d_dom#1246 = 16))) "
          },
          "23" : {
            "sign" : -1756391561,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 86282466,
            "rowCount" : 202541,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(i_brand_id#32) AND isnotnull(i_class_id#34)) AND isnotnull(i_category_id#36)) "
          },
          "62" : {
            "sign" : 869525063,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 5310811700,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_quantity#886 AS quantity#746, ss_list_price#888 AS list_price#747] "
          },
          "128" : {
            "sign" : 899852841,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 3617396482656,
            "rowCount" : 301449706888,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#48] "
          },
          "4" : {
            "sign" : 1357304059,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 10408960,
            "rowCount" : 136960,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(sales#731) AND (cast(sales#731 as decimal(32,6)) > cast(scalar-subquery#735 [] as decimal(32,6)))) "
          },
          "121" : {
            "sign" : -1752719423,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 86904000,
            "rowCount" : 204000,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [i_item_sk#1148, i_item_id#1149, i_rec_start_date#1150, i_rec_end_date#1151, i_item_desc#1152, i_current_price#1153, i_wholesale_cost#1154, i_brand_id#1155, i_brand#1156, i_class_id#1157, i_class#1158, i_category_id#1159, i_category#1160, i_manufact_id#1161, i_manufact#1162, i_size#1163, i_formulation#1164, i_color#1165, i_units#1166, i_container#1167, i_manager_id#1168, i_product_name#1169], `spark_catalog`.`tpcds_100`.`item`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "88" : {
            "sign" : -1250291275,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 9192253472,
            "rowCount" : 287257921,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_quantity#1134, ss_list_price#1136, i_brand_id#1155, i_class_id#1157, i_category_id#1159] "
          },
          "77" : {
            "sign" : -169490734,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#962, d_date_id#963, d_date#964, d_month_seq#965, d_week_seq#966, d_quarter_seq#967, d_year#968, d_dow#969, d_moy#970, d_dom#971, d_qoy#972, d_fy_year#973, d_fy_quarter_seq#974, d_fy_week_seq#975, d_day_name#976, d_quarter_name#977, d_holiday#978, d_weekend#979, d_following_holiday#980, d_first_dom#981, d_last_dom#982, d_same_day_ly#983, d_same_day_lq#984, d_current_day#985, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "40" : {
            "sign" : 366726337,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 2877489060,
            "rowCount" : 143874453,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_brand_id#784, i_class_id#786, i_category_id#788], ShuffleQueryStage 47 "
          },
          "110" : {
            "sign" : 2101479604,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 4400725648,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#48, ss_sold_date_sk#69] "
          },
          "15" : {
            "sign" : 1866012666,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(d_week_seq#1101) AND (d_week_seq#1101 = scalar-subquery#734 [])) AND isnotnull(d_date_sk#1097)) "
          },
          "11" : {
            "sign" : 1222696026,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 7701269884,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#1053, ss_quantity#1061, ss_list_price#1063, ss_sold_date_sk#1074] "
          },
          "104" : {
            "sign" : -876321123,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 1224753985121117440,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (((brand_id#742 <=> i_brand_id#834) AND (class_id#743 <=> i_class_id#836)) AND (category_id#744 <=> i_category_id#838)) "
          },
          "90" : {
            "sign" : -2676572,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 46207619304,
            "rowCount" : 1925317471,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#1126, ss_quantity#1134, ss_list_price#1136] "
          },
          "9" : {
            "sign" : -1944592689,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 61610159072,
            "rowCount" : 1925317471,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#1074 = d_date_sk#1097) "
          },
          "132" : {
            "sign" : 1549879919,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 8125760,
            "rowCount" : 203144,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_item_sk#755, i_brand_id#762, i_class_id#764, i_category_id#766], ShuffleQueryStage 38 "
          },
          "44" : {
            "sign" : 1540331732,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 4860984,
            "rowCount" : 202541,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_item_sk#1075, i_brand_id#1082, i_class_id#1084, i_category_id#1086] "
          },
          "33" : {
            "sign" : 1104597854,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#47, ss_item_sk#48, ss_customer_sk#49, ss_cdemo_sk#50, ss_hdemo_sk#51, ss_addr_sk#52, ss_store_sk#53, ss_promo_sk#54, ss_ticket_number#55L, ss_quantity#56, ss_wholesale_cost#57, ss_list_price#58, ss_sales_price#59, ss_ext_discount_amt#60, ss_ext_sales_price#61, ss_ext_wholesale_cost#62, ss_ext_list_price#63, ss_ext_tax#64, ss_coupon_amt#65, ss_net_paid#66, ss_net_paid_inc_tax#67, ss_net_profit#68, ss_sold_date_sk#69], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "117" : {
            "sign" : -1902204624,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1048632,
            "rowCount" : 7,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#1170], BroadcastQueryStage 34 "
          },
          "22" : {
            "sign" : 2089743597,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 4860984,
            "rowCount" : 202541,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_item_sk#25, i_brand_id#32, i_class_id#34, i_category_id#36] "
          },
          "56" : {
            "sign" : 1070585237,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 4875456,
            "rowCount" : 203144,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (((i_brand_id#762 <=> i_brand_id#784) AND (i_class_id#764 <=> i_class_id#786)) AND (i_category_id#766 <=> i_category_id#788)) "
          },
          "55" : {
            "sign" : -1598388943,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1057344,
            "rowCount" : 1096,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#70], BroadcastQueryStage 11 "
          },
          "26" : {
            "sign" : -1989347848,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 1224753985121117440,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [brand_id#742, class_id#743, category_id#744], [brand_id#742, class_id#743, category_id#744] "
          },
          "134" : {
            "sign" : -365669692,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1438338100,
            "rowCount" : 71916905,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_brand_id#834, i_class_id#836, i_category_id#838], ShuffleQueryStage 60 "
          },
          "50" : {
            "sign" : -1608368025,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 1224753985121117440,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [brand_id#742, class_id#743, category_id#744], [brand_id#742, class_id#743, category_id#744] "
          },
          "123" : {
            "sign" : -1382179355,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 1224753985125978424,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (((i_brand_id#32 = brand_id#742) AND (i_class_id#34 = class_id#743)) AND (i_category_id#36 = category_id#744)) "
          },
          "37" : {
            "sign" : -1159939661,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1057344,
            "rowCount" : 1096,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#70], BroadcastQueryStage 0 "
          },
          "68" : {
            "sign" : -2071970095,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 353748,
            "rowCount" : 1438,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(d_year#906) AND ((d_year#906 >= 1998) AND (d_year#906 <= 2000))) AND isnotnull(d_date_sk#900)) "
          },
          "61" : {
            "sign" : -1298322270,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Union",
            "sizeInBytes" : 9471049040,
            "rowCount" : 473552452,
            "isRuntime" : false,
            "predicate" : " (unknown) Union Arguments: false, false "
          },
          "107" : {
            "sign" : -105466558,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 1714655579169564416,
            "rowCount" : 61237699256055872,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_item_sk#48 = i_item_sk#755) "
          },
          "13" : {
            "sign" : 913239237,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#1052, ss_item_sk#1053, ss_customer_sk#1054, ss_cdemo_sk#1055, ss_hdemo_sk#1056, ss_addr_sk#1057, ss_store_sk#1058, ss_promo_sk#1059, ss_ticket_number#1060L, ss_quantity#1061, ss_wholesale_cost#1062, ss_list_price#1063, ss_sales_price#1064, ss_ext_discount_amt#1065, ss_ext_sales_price#1066, ss_ext_wholesale_cost#1067, ss_ext_list_price#1068, ss_ext_tax#1069, ss_coupon_amt#1070, ss_net_paid#1071, ss_net_paid_inc_tax#1072, ss_net_profit#1073, ss_sold_date_sk#1074], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "46" : {
            "sign" : 73332589,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 86904000,
            "rowCount" : 204000,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [i_item_sk#1075, i_item_id#1076, i_rec_start_date#1077, i_rec_end_date#1078, i_item_desc#1079, i_current_price#1080, i_wholesale_cost#1081, i_brand_id#1082, i_brand#1083, i_class_id#1084, i_class#1085, i_category_id#1086, i_category#1087, i_manufact_id#1088, i_manufact#1089, i_size#1090, i_formulation#1091, i_color#1092, i_units#1093, i_container#1094, i_manager_id#1095, i_product_name#1096], `spark_catalog`.`tpcds_100`.`item`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "99" : {
            "sign" : -79282860,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 24,
            "rowCount" : 2,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_week_seq#1241] "
          },
          "24" : {
            "sign" : 2096275601,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 86904000,
            "rowCount" : 204000,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [i_item_sk#25, i_item_id#26, i_rec_start_date#27, i_rec_end_date#28, i_item_desc#29, i_current_price#30, i_wholesale_cost#31, i_brand_id#32, i_brand#33, i_class_id#34, i_class#35, i_category_id#36, i_category#37, i_manufact_id#38, i_manufact#39, i_size#40, i_formulation#41, i_color#42, i_units#43, i_container#44, i_manager_id#45, i_product_name#46], `spark_catalog`.`tpcds_100`.`item`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "94" : {
            "sign" : -604473204,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(ss_item_sk#1126) AND isnotnull(ss_sold_date_sk#1147)) AND dynamicpruning#1310 [ss_sold_date_sk#1147]) "
          },
          "83" : {
            "sign" : -1100969675,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 17256,
            "rowCount" : 1438,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#1024] "
          },
          "35" : {
            "sign" : 1340377833,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 353748,
            "rowCount" : 1438,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(d_year#76) AND ((d_year#76 >= 1998) AND (d_year#76 <= 2000))) AND isnotnull(d_date_sk#70)) "
          },
          "16" : {
            "sign" : 682718368,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#1097, d_date_id#1098, d_date#1099, d_month_seq#1100, d_week_seq#1101, d_quarter_seq#1102, d_year#1103, d_dow#1104, d_moy#1105, d_dom#1106, d_qoy#1107, d_fy_year#1108, d_fy_quarter_seq#1109, d_fy_week_seq#1110, d_day_name#1111, d_quarter_name#1112, d_holiday#1113, d_weekend#1114, d_following_holiday#1115, d_first_dom#1116, d_last_dom#1117, d_same_day_ly#1118, d_same_day_lq#1119, d_current_day#1120, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "79" : {
            "sign" : 1503367439,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 1945876940,
            "rowCount" : 69495605,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ws_sold_date_sk#1023 = d_date_sk#1024) "
          },
          "5" : {
            "sign" : -1173314487,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 10408960,
            "rowCount" : 136960,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [i_brand_id#1082, i_class_id#1084, i_category_id#1086], [store AS channel#730, i_brand_id#1082, i_class_id#1084, i_category_id#1086, sum((cast(ss_quantity#1061 as decimal(10,0)) * ss_list_price#1063)) AS sales#731, count(1) AS number_sales#732L] "
          },
          "103" : {
            "sign" : 1717410210,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 1224753985125978424,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (((i_brand_id#32 = brand_id#742) AND (i_class_id#34 = class_id#743)) AND (i_category_id#36 = category_id#744)) "
          },
          "112" : {
            "sign" : -1598387920,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1057344,
            "rowCount" : 1096,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#70], BroadcastQueryStage 23 "
          },
          "72" : {
            "sign" : 1942236716,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 3438552408,
            "rowCount" : 143273017,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_quantity#945, cs_list_price#947, cs_sold_date_sk#961] "
          },
          "10" : {
            "sign" : 1073081792,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 7701269884,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (ss_item_sk#1053 = ss_item_sk#745) "
          },
          "59" : {
            "sign" : -365670591,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1438338100,
            "rowCount" : 71916905,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_brand_id#834, i_class_id#836, i_category_id#838], ShuffleQueryStage 52 "
          },
          "87" : {
            "sign" : 778880288,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 10408960,
            "rowCount" : 136960,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [i_brand_id#1155, i_class_id#1157, i_category_id#1159], [store AS channel#736, i_brand_id#1155, i_class_id#1157, i_category_id#1159, sum((cast(ss_quantity#1134 as decimal(10,0)) * ss_list_price#1136)) AS sales#737, count(1) AS number_sales#738L] "
          },
          "48" : {
            "sign" : 1987472580,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 1224753985125978424,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (((i_brand_id#32 = brand_id#742) AND (i_class_id#34 = class_id#743)) AND (i_category_id#36 = category_id#744)) "
          },
          "21" : {
            "sign" : -1061891914,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 1224753985125978424,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (((i_brand_id#32 = brand_id#742) AND (i_class_id#34 = class_id#743)) AND (i_category_id#36 = category_id#744)) "
          },
          "116" : {
            "sign" : -365670467,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1438338100,
            "rowCount" : 71916905,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_brand_id#834, i_class_id#836, i_category_id#838], ShuffleQueryStage 56 "
          },
          "76" : {
            "sign" : -1695423935,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 353748,
            "rowCount" : 1438,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(d_year#968) AND ((d_year#968 >= 1998) AND (d_year#968 <= 2000))) AND isnotnull(d_date_sk#962)) "
          },
          "54" : {
            "sign" : 174031885,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 6028994137760,
            "rowCount" : 301449706888,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#69 = d_date_sk#70) "
          },
          "43" : {
            "sign" : -917424425,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 4860984,
            "rowCount" : 202541,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (i_item_sk#1075 = ss_item_sk#745) "
          },
          "127" : {
            "sign" : -2083387522,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 1714655579169564416,
            "rowCount" : 61237699256055872,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_item_sk#48 = i_item_sk#755) "
          },
          "65" : {
            "sign" : 1377797290,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(ss_sold_date_sk#899) AND dynamicpruning#1288 [ss_sold_date_sk#899]) "
          },
          "71" : {
            "sign" : 824386657,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 3878455336,
            "rowCount" : 138516262,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cs_sold_date_sk#961 = d_date_sk#962) "
          },
          "57" : {
            "sign" : 1549877842,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 8125760,
            "rowCount" : 203144,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_item_sk#755, i_brand_id#762, i_class_id#764, i_category_id#766], ShuffleQueryStage 13 "
          },
          "108" : {
            "sign" : 899851787,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 3617396482656,
            "rowCount" : 301449706888,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#48] "
          },
          "32" : {
            "sign" : -1052942334,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(ss_item_sk#48) AND isnotnull(ss_sold_date_sk#69)) AND dynamicpruning#1291 [ss_sold_date_sk#69]) "
          },
          "80" : {
            "sign" : 49678577,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 1727606976,
            "rowCount" : 71983624,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_quantity#1007, ws_list_price#1009, ws_sold_date_sk#1023] "
          },
          "106" : {
            "sign" : -694393982,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 1224753985121117440,
            "rowCount" : 61237699256055872,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_brand_id#762 AS brand_id#742, i_class_id#764 AS class_id#743, i_category_id#766 AS category_id#744] "
          },
          "82" : {
            "sign" : 1698660872,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 14972593792,
            "rowCount" : 71983624,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ws_sold_time_sk#990, ws_ship_date_sk#991, ws_item_sk#992, ws_bill_customer_sk#993, ws_bill_cdemo_sk#994, ws_bill_hdemo_sk#995, ws_bill_addr_sk#996, ws_ship_customer_sk#997, ws_ship_cdemo_sk#998, ws_ship_hdemo_sk#999, ws_ship_addr_sk#1000, ws_web_page_sk#1001, ws_web_site_sk#1002, ws_ship_mode_sk#1003, ws_warehouse_sk#1004, ws_promo_sk#1005, ws_order_number#1006L, ws_quantity#1007, ws_wholesale_cost#1008, ws_list_price#1009, ws_sales_price#1010, ws_ext_discount_amt#1011, ws_ext_sales_price#1012, ws_ext_wholesale_cost#1013, ... 10 more fields], `spark_catalog`.`tpcds_100`.`web_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "49" : {
            "sign" : 967702723,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 1224753985121117440,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (((brand_id#742 <=> i_brand_id#834) AND (class_id#743 <=> i_class_id#836)) AND (category_id#744 <=> i_category_id#838)) "
          },
          "6" : {
            "sign" : -2124690956,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 9192253472,
            "rowCount" : 287257921,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_quantity#1061, ss_list_price#1063, i_brand_id#1082, i_class_id#1084, i_category_id#1086] "
          },
          "126" : {
            "sign" : 979536830,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 1224753985121117440,
            "rowCount" : 61237699256055872,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_brand_id#762 AS brand_id#742, i_class_id#764 AS class_id#743, i_category_id#766 AS category_id#744] "
          },
          "36" : {
            "sign" : -232749464,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#70, d_date_id#71, d_date#72, d_month_seq#73, d_week_seq#74, d_quarter_seq#75, d_year#76, d_dow#77, d_moy#78, d_dom#79, d_qoy#80, d_fy_year#81, d_fy_quarter_seq#82, d_fy_week_seq#83, d_day_name#84, d_quarter_name#85, d_holiday#86, d_weekend#87, d_following_holiday#88, d_first_dom#89, d_last_dom#90, d_same_day_ly#91, d_same_day_lq#92, d_current_day#93, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "1" : {
            "sign" : -393757989,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
            "sizeInBytes" : 19722240,
            "rowCount" : 136960,
            "isRuntime" : false,
            "predicate" : " (unknown) LocalLimit Arguments: 100 "
          },
          "39" : {
            "sign" : 1019827343,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 8125760,
            "rowCount" : 203144,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_item_sk#755, i_brand_id#762, i_class_id#764, i_category_id#766], ShuffleQueryStage 1 "
          },
          "17" : {
            "sign" : -2061501032,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 36,
            "rowCount" : 3,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_week_seq#1213] "
          },
          "25" : {
            "sign" : -929833631,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 1224753985121117440,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (((brand_id#742 <=> i_brand_id#834) AND (class_id#743 <=> i_class_id#836)) AND (category_id#744 <=> i_category_id#838)) "
          },
          "60" : {
            "sign" : -1809172647,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 24,
            "rowCount" : 1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [avg((cast(quantity#746 as decimal(10,0)) * list_price#747)) AS average_sales#752] "
          },
          "14" : {
            "sign" : 707519831,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 876588,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#1097] "
          },
          "133" : {
            "sign" : 366727329,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 2877489060,
            "rowCount" : 143874453,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_brand_id#784, i_class_id#786, i_category_id#788], ShuffleQueryStage 58 "
          },
          "47" : {
            "sign" : 23707703,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 408251328375326141,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_item_sk#25 AS ss_item_sk#745] "
          },
          "122" : {
            "sign" : -1413048228,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 408251328375326141,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_item_sk#25 AS ss_item_sk#745] "
          },
          "111" : {
            "sign" : -109048900,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(ss_item_sk#48) AND isnotnull(ss_sold_date_sk#69)) AND dynamicpruning#1297 [ss_sold_date_sk#69]) "
          },
          "102" : {
            "sign" : 1324241425,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 408251328375326141,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_item_sk#25 AS ss_item_sk#745] "
          },
          "31" : {
            "sign" : -948624390,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 4400725648,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#48, ss_sold_date_sk#69] "
          },
          "96" : {
            "sign" : 1096234976,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 876588,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#1170] "
          },
          "69" : {
            "sign" : -820074406,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#900, d_date_id#901, d_date#902, d_month_seq#903, d_week_seq#904, d_quarter_seq#905, d_year#906, d_dow#907, d_moy#908, d_dom#909, d_qoy#910, d_fy_year#911, d_fy_quarter_seq#912, d_fy_week_seq#913, d_day_name#914, d_quarter_name#915, d_holiday#916, d_weekend#917, d_following_holiday#918, d_first_dom#919, d_last_dom#920, d_same_day_ly#921, d_same_day_lq#922, d_current_day#923, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "95" : {
            "sign" : 1179432008,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#1125, ss_item_sk#1126, ss_customer_sk#1127, ss_cdemo_sk#1128, ss_hdemo_sk#1129, ss_addr_sk#1130, ss_store_sk#1131, ss_promo_sk#1132, ss_ticket_number#1133L, ss_quantity#1134, ss_wholesale_cost#1135, ss_list_price#1136, ss_sales_price#1137, ss_ext_discount_amt#1138, ss_ext_sales_price#1139, ss_ext_wholesale_cost#1140, ss_ext_list_price#1141, ss_ext_tax#1142, ss_coupon_amt#1143, ss_net_paid#1144, ss_net_paid_inc_tax#1145, ss_net_profit#1146, ss_sold_date_sk#1147], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "58" : {
            "sign" : 366727081,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 2877489060,
            "rowCount" : 143874453,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_brand_id#784, i_class_id#786, i_category_id#788], ShuffleQueryStage 50 "
          },
          "64" : {
            "sign" : 1776873494,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 6601088472,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_quantity#886, ss_list_price#888, ss_sold_date_sk#899] "
          },
          "53" : {
            "sign" : -1868509690,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 3617396482656,
            "rowCount" : 301449706888,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#48] "
          },
          "42" : {
            "sign" : -21562714,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1048632,
            "rowCount" : 7,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#1097], BroadcastQueryStage 9 "
          },
          "75" : {
            "sign" : 406087876,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 17256,
            "rowCount" : 1438,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#962] "
          },
          "115" : {
            "sign" : 366727205,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 2877489060,
            "rowCount" : 143874453,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_brand_id#784, i_class_id#786, i_category_id#788], ShuffleQueryStage 54 "
          },
          "109" : {
            "sign" : 1894574278,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 6028994137760,
            "rowCount" : 301449706888,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#69 = d_date_sk#70) "
          },
          "0" : {
            "sign" : -1382183986,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
            "sizeInBytes" : 12000,
            "rowCount" : 100,
            "isRuntime" : false,
            "predicate" : " (unknown) GlobalLimit Arguments: 100 "
          },
          "20" : {
            "sign" : 1675872213,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 408251328375326141,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_item_sk#25 AS ss_item_sk#745] "
          },
          "27" : {
            "sign" : 1543581019,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 1224753985121117440,
            "rowCount" : 61237699256055872,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_brand_id#762 AS brand_id#742, i_class_id#764 AS class_id#743, i_category_id#766 AS category_id#744] "
          },
          "70" : {
            "sign" : 825651901,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 2770325240,
            "rowCount" : 138516262,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_quantity#945 AS quantity#748, cs_list_price#947 AS list_price#749] "
          },
          "2" : {
            "sign" : 1709700516,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 19722240,
            "rowCount" : 136960,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [i_brand_id#1082 ASC NULLS FIRST, i_class_id#1084 ASC NULLS FIRST, i_category_id#1086 ASC NULLS FIRST], true "
          },
          "86" : {
            "sign" : -799736365,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 10408960,
            "rowCount" : 136960,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(sales#737) AND (cast(sales#737 as decimal(32,6)) > cast(scalar-subquery#741 [] as decimal(32,6)))) "
          },
          "38" : {
            "sign" : -1412645680,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 4875456,
            "rowCount" : 203144,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (((i_brand_id#762 <=> i_brand_id#784) AND (i_class_id#764 <=> i_class_id#786)) AND (i_category_id#766 <=> i_category_id#788)) "
          },
          "81" : {
            "sign" : -1902449141,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 14972593792,
            "rowCount" : 71983624,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(ws_sold_date_sk#1023) AND dynamicpruning#1290 [ws_sold_date_sk#1023]) "
          },
          "118" : {
            "sign" : -1455297653,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 4860984,
            "rowCount" : 202541,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (i_item_sk#1148 = ss_item_sk#745) "
          },
          "92" : {
            "sign" : 500470196,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 7701269884,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (ss_item_sk#1126 = ss_item_sk#745) "
          },
          "125" : {
            "sign" : -1218597883,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 1224753985121117440,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [brand_id#742, class_id#743, category_id#744], [brand_id#742, class_id#743, category_id#744] "
          },
          "18" : {
            "sign" : -1305353512,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 738,
            "rowCount" : 3,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(d_year#1215) AND isnotnull(d_moy#1217)) AND isnotnull(d_dom#1218)) AND (((d_year#1215 = 1999) AND (d_moy#1217 = 12)) AND (d_dom#1218 = 16))) "
          },
          "101" : {
            "sign" : 813769211,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#1237, d_date_id#1238, d_date#1239, d_month_seq#1240, d_week_seq#1241, d_quarter_seq#1242, d_year#1243, d_dow#1244, d_moy#1245, d_dom#1246, d_qoy#1247, d_fy_year#1248, d_fy_quarter_seq#1249, d_fy_week_seq#1250, d_day_name#1251, d_quarter_name#1252, d_holiday#1253, d_weekend#1254, d_following_holiday#1255, d_first_dom#1256, d_last_dom#1257, d_same_day_ly#1258, d_same_day_lq#1259, d_current_day#1260, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "30" : {
            "sign" : 1668181847,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 6028994137760,
            "rowCount" : 301449706888,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#69 = d_date_sk#70) "
          },
          "7" : {
            "sign" : -292159423,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 11490316840,
            "rowCount" : 287257921,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_item_sk#1053 = i_item_sk#1075) "
          },
          "97" : {
            "sign" : -1689547051,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(d_week_seq#1174) AND (d_week_seq#1174 = scalar-subquery#740 [])) AND isnotnull(d_date_sk#1170)) "
          },
          "130" : {
            "sign" : -1598386866,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1057344,
            "rowCount" : 1096,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#70], BroadcastQueryStage 36 "
          },
          "114" : {
            "sign" : 1549878865,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 8125760,
            "rowCount" : 203144,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_item_sk#755, i_brand_id#762, i_class_id#764, i_category_id#766], ShuffleQueryStage 25 "
          },
          "129" : {
            "sign" : 1894575332,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 6028994137760,
            "rowCount" : 301449706888,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#69 = d_date_sk#70) "
          },
          "29" : {
            "sign" : -1722842562,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 3617396482656,
            "rowCount" : 301449706888,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#48] "
          },
          "41" : {
            "sign" : -365671366,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1438338100,
            "rowCount" : 71916905,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_brand_id#834, i_class_id#836, i_category_id#838], ShuffleQueryStage 48 "
          },
          "105" : {
            "sign" : -1787425591,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 1224753985121117440,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [brand_id#742, class_id#743, category_id#744], [brand_id#742, class_id#743, category_id#744] "
          },
          "63" : {
            "sign" : -1804794945,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 7435136380,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#899 = d_date_sk#900) "
          },
          "3" : {
            "sign" : 327734412,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 19722240,
            "rowCount" : 136960,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (((i_brand_id#1082 = i_brand_id#1155) AND (i_class_id#1084 = i_class_id#1157)) AND (i_category_id#1086 = i_category_id#1159)) "
          },
          "74" : {
            "sign" : -70077436,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 29800787536,
            "rowCount" : 143273017,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [cs_sold_time_sk#928, cs_ship_date_sk#929, cs_bill_customer_sk#930, cs_bill_cdemo_sk#931, cs_bill_hdemo_sk#932, cs_bill_addr_sk#933, cs_ship_customer_sk#934, cs_ship_cdemo_sk#935, cs_ship_hdemo_sk#936, cs_ship_addr_sk#937, cs_call_center_sk#938, cs_catalog_page_sk#939, cs_ship_mode_sk#940, cs_warehouse_sk#941, cs_item_sk#942, cs_promo_sk#943, cs_order_number#944L, cs_quantity#945, cs_wholesale_cost#946, cs_list_price#947, cs_sales_price#948, cs_ext_discount_amt#949, cs_ext_sales_price#950, cs_ext_wholesale_cost#951, ... 10 more fields], `spark_catalog`.`tpcds_100`.`catalog_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "91" : {
            "sign" : 787262118,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 61610159072,
            "rowCount" : 1925317471,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#1147 = d_date_sk#1170) "
          },
          "52" : {
            "sign" : -604531872,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 1714655579169564416,
            "rowCount" : 61237699256055872,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_item_sk#48 = i_item_sk#755) "
          },
          "85" : {
            "sign" : -502763688,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#1024, d_date_id#1025, d_date#1026, d_month_seq#1027, d_week_seq#1028, d_quarter_seq#1029, d_year#1030, d_dow#1031, d_moy#1032, d_dom#1033, d_qoy#1034, d_fy_year#1035, d_fy_quarter_seq#1036, d_fy_week_seq#1037, d_day_name#1038, d_quarter_name#1039, d_holiday#1040, d_weekend#1041, d_following_holiday#1042, d_first_dom#1043, d_last_dom#1044, d_same_day_ly#1045, d_same_day_lq#1046, d_current_day#1047, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "131" : {
            "sign" : 743407568,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 4875456,
            "rowCount" : 203144,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (((i_brand_id#762 <=> i_brand_id#784) AND (i_class_id#764 <=> i_class_id#786)) AND (i_category_id#766 <=> i_category_id#788)) "
          },
          "28" : {
            "sign" : -672276879,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 1714655579169564416,
            "rowCount" : 61237699256055872,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_item_sk#48 = i_item_sk#755) "
          },
          "119" : {
            "sign" : -1062759686,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 4860984,
            "rowCount" : 202541,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_item_sk#1148, i_brand_id#1155, i_class_id#1157, i_category_id#1159] "
          }
        },
        "links" : [ {
          "fromId" : 13,
          "fromName" : "LogicalRelation",
          "toId" : 12,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 16,
          "fromName" : "LogicalRelation",
          "toId" : 15,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 19,
          "fromName" : "LogicalRelation",
          "toId" : 18,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 18,
          "fromName" : "Filter",
          "toId" : 17,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 17,
          "fromName" : "Project",
          "toId" : 15,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 15,
          "fromName" : "Filter",
          "toId" : 14,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 14,
          "fromName" : "Project",
          "toId" : 12,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 12,
          "fromName" : "Filter",
          "toId" : 11,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "Project",
          "toId" : 10,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 24,
          "fromName" : "LogicalRelation",
          "toId" : 23,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 23,
          "fromName" : "Filter",
          "toId" : 22,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 22,
          "fromName" : "Project",
          "toId" : 21,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 33,
          "fromName" : "LogicalRelation",
          "toId" : 32,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 36,
          "fromName" : "LogicalRelation",
          "toId" : 35,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 35,
          "fromName" : "Filter",
          "toId" : 34,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 34,
          "fromName" : "Project",
          "toId" : 32,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 32,
          "fromName" : "Filter",
          "toId" : 31,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 31,
          "fromName" : "Project",
          "toId" : 30,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 37,
          "fromName" : "LogicalQueryStage",
          "toId" : 30,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 30,
          "fromName" : "Join",
          "toId" : 29,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 29,
          "fromName" : "Project",
          "toId" : 28,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 39,
          "fromName" : "LogicalQueryStage",
          "toId" : 38,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 40,
          "fromName" : "LogicalQueryStage",
          "toId" : 38,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 38,
          "fromName" : "Join",
          "toId" : 28,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 28,
          "fromName" : "Join",
          "toId" : 27,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 27,
          "fromName" : "Project",
          "toId" : 26,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 26,
          "fromName" : "Aggregate",
          "toId" : 25,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 41,
          "fromName" : "LogicalQueryStage",
          "toId" : 25,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 25,
          "fromName" : "Join",
          "toId" : 21,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 21,
          "fromName" : "Join",
          "toId" : 20,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 20,
          "fromName" : "Project",
          "toId" : 10,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "Join",
          "toId" : 9,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 42,
          "fromName" : "LogicalQueryStage",
          "toId" : 9,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "Join",
          "toId" : 8,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "Project",
          "toId" : 7,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 46,
          "fromName" : "LogicalRelation",
          "toId" : 45,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 45,
          "fromName" : "Filter",
          "toId" : 44,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 44,
          "fromName" : "Project",
          "toId" : 43,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 22,
          "fromName" : "Project",
          "toId" : 48,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 31,
          "fromName" : "Project",
          "toId" : 54,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 55,
          "fromName" : "LogicalQueryStage",
          "toId" : 54,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 54,
          "fromName" : "Join",
          "toId" : 53,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 53,
          "fromName" : "Project",
          "toId" : 52,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 57,
          "fromName" : "LogicalQueryStage",
          "toId" : 56,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 58,
          "fromName" : "LogicalQueryStage",
          "toId" : 56,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 56,
          "fromName" : "Join",
          "toId" : 52,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 52,
          "fromName" : "Join",
          "toId" : 51,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 51,
          "fromName" : "Project",
          "toId" : 50,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 50,
          "fromName" : "Aggregate",
          "toId" : 49,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 59,
          "fromName" : "LogicalQueryStage",
          "toId" : 49,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 49,
          "fromName" : "Join",
          "toId" : 48,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 48,
          "fromName" : "Join",
          "toId" : 47,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 47,
          "fromName" : "Project",
          "toId" : 43,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 43,
          "fromName" : "Join",
          "toId" : 7,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Join",
          "toId" : 6,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Project",
          "toId" : 5,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Aggregate",
          "toId" : 4,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 66,
          "fromName" : "LogicalRelation",
          "toId" : 65,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 69,
          "fromName" : "LogicalRelation",
          "toId" : 68,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 68,
          "fromName" : "Filter",
          "toId" : 67,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 67,
          "fromName" : "Project",
          "toId" : 65,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 65,
          "fromName" : "Filter",
          "toId" : 64,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 64,
          "fromName" : "Project",
          "toId" : 63,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 67,
          "fromName" : "Project",
          "toId" : 63,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 63,
          "fromName" : "Join",
          "toId" : 62,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 62,
          "fromName" : "Project",
          "toId" : 61,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 74,
          "fromName" : "LogicalRelation",
          "toId" : 73,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 77,
          "fromName" : "LogicalRelation",
          "toId" : 76,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 76,
          "fromName" : "Filter",
          "toId" : 75,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 75,
          "fromName" : "Project",
          "toId" : 73,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 73,
          "fromName" : "Filter",
          "toId" : 72,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 72,
          "fromName" : "Project",
          "toId" : 71,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 75,
          "fromName" : "Project",
          "toId" : 71,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 71,
          "fromName" : "Join",
          "toId" : 70,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 70,
          "fromName" : "Project",
          "toId" : 61,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 82,
          "fromName" : "LogicalRelation",
          "toId" : 81,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 85,
          "fromName" : "LogicalRelation",
          "toId" : 84,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 84,
          "fromName" : "Filter",
          "toId" : 83,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 83,
          "fromName" : "Project",
          "toId" : 81,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 81,
          "fromName" : "Filter",
          "toId" : 80,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 80,
          "fromName" : "Project",
          "toId" : 79,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 83,
          "fromName" : "Project",
          "toId" : 79,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 79,
          "fromName" : "Join",
          "toId" : 78,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 78,
          "fromName" : "Project",
          "toId" : 61,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 61,
          "fromName" : "Union",
          "toId" : 60,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 60,
          "fromName" : "Aggregate",
          "toId" : 4,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 4,
          "fromName" : "Filter",
          "toId" : 3,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 95,
          "fromName" : "LogicalRelation",
          "toId" : 94,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 98,
          "fromName" : "LogicalRelation",
          "toId" : 97,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 101,
          "fromName" : "LogicalRelation",
          "toId" : 100,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 100,
          "fromName" : "Filter",
          "toId" : 99,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 99,
          "fromName" : "Project",
          "toId" : 97,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 97,
          "fromName" : "Filter",
          "toId" : 96,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 96,
          "fromName" : "Project",
          "toId" : 94,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 94,
          "fromName" : "Filter",
          "toId" : 93,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 93,
          "fromName" : "Project",
          "toId" : 92,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 22,
          "fromName" : "Project",
          "toId" : 103,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 33,
          "fromName" : "LogicalRelation",
          "toId" : 111,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 34,
          "fromName" : "Project",
          "toId" : 111,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 111,
          "fromName" : "Filter",
          "toId" : 110,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 110,
          "fromName" : "Project",
          "toId" : 109,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 112,
          "fromName" : "LogicalQueryStage",
          "toId" : 109,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 109,
          "fromName" : "Join",
          "toId" : 108,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 108,
          "fromName" : "Project",
          "toId" : 107,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 114,
          "fromName" : "LogicalQueryStage",
          "toId" : 113,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 115,
          "fromName" : "LogicalQueryStage",
          "toId" : 113,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 113,
          "fromName" : "Join",
          "toId" : 107,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 107,
          "fromName" : "Join",
          "toId" : 106,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 106,
          "fromName" : "Project",
          "toId" : 105,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 105,
          "fromName" : "Aggregate",
          "toId" : 104,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 116,
          "fromName" : "LogicalQueryStage",
          "toId" : 104,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 104,
          "fromName" : "Join",
          "toId" : 103,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 103,
          "fromName" : "Join",
          "toId" : 102,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 102,
          "fromName" : "Project",
          "toId" : 92,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 92,
          "fromName" : "Join",
          "toId" : 91,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 117,
          "fromName" : "LogicalQueryStage",
          "toId" : 91,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 91,
          "fromName" : "Join",
          "toId" : 90,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 90,
          "fromName" : "Project",
          "toId" : 89,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 121,
          "fromName" : "LogicalRelation",
          "toId" : 120,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 120,
          "fromName" : "Filter",
          "toId" : 119,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 119,
          "fromName" : "Project",
          "toId" : 118,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 22,
          "fromName" : "Project",
          "toId" : 123,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 110,
          "fromName" : "Project",
          "toId" : 129,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 130,
          "fromName" : "LogicalQueryStage",
          "toId" : 129,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 129,
          "fromName" : "Join",
          "toId" : 128,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 128,
          "fromName" : "Project",
          "toId" : 127,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 132,
          "fromName" : "LogicalQueryStage",
          "toId" : 131,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 133,
          "fromName" : "LogicalQueryStage",
          "toId" : 131,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 131,
          "fromName" : "Join",
          "toId" : 127,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 127,
          "fromName" : "Join",
          "toId" : 126,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 126,
          "fromName" : "Project",
          "toId" : 125,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 125,
          "fromName" : "Aggregate",
          "toId" : 124,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 134,
          "fromName" : "LogicalQueryStage",
          "toId" : 124,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 124,
          "fromName" : "Join",
          "toId" : 123,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 123,
          "fromName" : "Join",
          "toId" : 122,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 122,
          "fromName" : "Project",
          "toId" : 118,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 118,
          "fromName" : "Join",
          "toId" : 89,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 89,
          "fromName" : "Join",
          "toId" : 88,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 88,
          "fromName" : "Project",
          "toId" : 87,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 87,
          "fromName" : "Aggregate",
          "toId" : 86,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 60,
          "fromName" : "Aggregate",
          "toId" : 86,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 86,
          "fromName" : "Filter",
          "toId" : 3,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Join",
          "toId" : 2,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "LocalLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "LocalLimit",
          "toId" : 0,
          "toName" : "GlobalLimit",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [i_brand_id#1082 ASC NULLS FIRST, i_class_id#1084 ASC NULLS FIRST, i_category_id#1086 ASC NULLS FIRST], true\n      +- Join Inner, (((i_brand_id#1082 = i_brand_id#1155) AND (i_class_id#1084 = i_class_id#1157)) AND (i_category_id#1086 = i_category_id#1159))\n         :- Filter (isnotnull(sales#731) AND (cast(sales#731 as decimal(32,6)) > cast(scalar-subquery#735 [] as decimal(32,6))))\n         :  :  +- Aggregate [avg((cast(quantity#746 as decimal(10,0)) * list_price#747)) AS average_sales#752]\n         :  :     +- Union false, false\n         :  :        :- Project [ss_quantity#886 AS quantity#746, ss_list_price#888 AS list_price#747]\n         :  :        :  +- Join Inner, (ss_sold_date_sk#899 = d_date_sk#900)\n         :  :        :     :- Project [ss_quantity#886, ss_list_price#888, ss_sold_date_sk#899]\n         :  :        :     :  +- Filter (isnotnull(ss_sold_date_sk#899) AND dynamicpruning#1288 [ss_sold_date_sk#899])\n         :  :        :     :     :  +- Project [d_date_sk#900]\n         :  :        :     :     :     +- Filter ((isnotnull(d_year#906) AND ((d_year#906 >= 1998) AND (d_year#906 <= 2000))) AND isnotnull(d_date_sk#900))\n         :  :        :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#900,d_date_id#901,d_date#902,d_month_seq#903,d_week_seq#904,d_quarter_seq#905,d_year#906,d_dow#907,d_moy#908,d_dom#909,d_qoy#910,d_fy_year#911,d_fy_quarter_seq#912,d_fy_week_seq#913,d_day_name#914,d_quarter_name#915,d_holiday#916,d_weekend#917,d_following_holiday#918,d_first_dom#919,d_last_dom#920,d_same_day_ly#921,d_same_day_lq#922,d_current_day#923,... 4 more fields] parquet\n         :  :        :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#877,ss_item_sk#878,ss_customer_sk#879,ss_cdemo_sk#880,ss_hdemo_sk#881,ss_addr_sk#882,ss_store_sk#883,ss_promo_sk#884,ss_ticket_number#885L,ss_quantity#886,ss_wholesale_cost#887,ss_list_price#888,ss_sales_price#889,ss_ext_discount_amt#890,ss_ext_sales_price#891,ss_ext_wholesale_cost#892,ss_ext_list_price#893,ss_ext_tax#894,ss_coupon_amt#895,ss_net_paid#896,ss_net_paid_inc_tax#897,ss_net_profit#898,ss_sold_date_sk#899] parquet\n         :  :        :     +- Project [d_date_sk#900]\n         :  :        :        +- Filter ((isnotnull(d_year#906) AND ((d_year#906 >= 1998) AND (d_year#906 <= 2000))) AND isnotnull(d_date_sk#900))\n         :  :        :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#900,d_date_id#901,d_date#902,d_month_seq#903,d_week_seq#904,d_quarter_seq#905,d_year#906,d_dow#907,d_moy#908,d_dom#909,d_qoy#910,d_fy_year#911,d_fy_quarter_seq#912,d_fy_week_seq#913,d_day_name#914,d_quarter_name#915,d_holiday#916,d_weekend#917,d_following_holiday#918,d_first_dom#919,d_last_dom#920,d_same_day_ly#921,d_same_day_lq#922,d_current_day#923,... 4 more fields] parquet\n         :  :        :- Project [cs_quantity#945 AS quantity#748, cs_list_price#947 AS list_price#749]\n         :  :        :  +- Join Inner, (cs_sold_date_sk#961 = d_date_sk#962)\n         :  :        :     :- Project [cs_quantity#945, cs_list_price#947, cs_sold_date_sk#961]\n         :  :        :     :  +- Filter (isnotnull(cs_sold_date_sk#961) AND dynamicpruning#1289 [cs_sold_date_sk#961])\n         :  :        :     :     :  +- Project [d_date_sk#962]\n         :  :        :     :     :     +- Filter ((isnotnull(d_year#968) AND ((d_year#968 >= 1998) AND (d_year#968 <= 2000))) AND isnotnull(d_date_sk#962))\n         :  :        :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#962,d_date_id#963,d_date#964,d_month_seq#965,d_week_seq#966,d_quarter_seq#967,d_year#968,d_dow#969,d_moy#970,d_dom#971,d_qoy#972,d_fy_year#973,d_fy_quarter_seq#974,d_fy_week_seq#975,d_day_name#976,d_quarter_name#977,d_holiday#978,d_weekend#979,d_following_holiday#980,d_first_dom#981,d_last_dom#982,d_same_day_ly#983,d_same_day_lq#984,d_current_day#985,... 4 more fields] parquet\n         :  :        :     :     +- Relation spark_catalog.tpcds_100.catalog_sales[cs_sold_time_sk#928,cs_ship_date_sk#929,cs_bill_customer_sk#930,cs_bill_cdemo_sk#931,cs_bill_hdemo_sk#932,cs_bill_addr_sk#933,cs_ship_customer_sk#934,cs_ship_cdemo_sk#935,cs_ship_hdemo_sk#936,cs_ship_addr_sk#937,cs_call_center_sk#938,cs_catalog_page_sk#939,cs_ship_mode_sk#940,cs_warehouse_sk#941,cs_item_sk#942,cs_promo_sk#943,cs_order_number#944L,cs_quantity#945,cs_wholesale_cost#946,cs_list_price#947,cs_sales_price#948,cs_ext_discount_amt#949,cs_ext_sales_price#950,cs_ext_wholesale_cost#951,... 10 more fields] parquet\n         :  :        :     +- Project [d_date_sk#962]\n         :  :        :        +- Filter ((isnotnull(d_year#968) AND ((d_year#968 >= 1998) AND (d_year#968 <= 2000))) AND isnotnull(d_date_sk#962))\n         :  :        :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#962,d_date_id#963,d_date#964,d_month_seq#965,d_week_seq#966,d_quarter_seq#967,d_year#968,d_dow#969,d_moy#970,d_dom#971,d_qoy#972,d_fy_year#973,d_fy_quarter_seq#974,d_fy_week_seq#975,d_day_name#976,d_quarter_name#977,d_holiday#978,d_weekend#979,d_following_holiday#980,d_first_dom#981,d_last_dom#982,d_same_day_ly#983,d_same_day_lq#984,d_current_day#985,... 4 more fields] parquet\n         :  :        +- Project [ws_quantity#1007 AS quantity#750, ws_list_price#1009 AS list_price#751]\n         :  :           +- Join Inner, (ws_sold_date_sk#1023 = d_date_sk#1024)\n         :  :              :- Project [ws_quantity#1007, ws_list_price#1009, ws_sold_date_sk#1023]\n         :  :              :  +- Filter (isnotnull(ws_sold_date_sk#1023) AND dynamicpruning#1290 [ws_sold_date_sk#1023])\n         :  :              :     :  +- Project [d_date_sk#1024]\n         :  :              :     :     +- Filter ((isnotnull(d_year#1030) AND ((d_year#1030 >= 1998) AND (d_year#1030 <= 2000))) AND isnotnull(d_date_sk#1024))\n         :  :              :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#1024,d_date_id#1025,d_date#1026,d_month_seq#1027,d_week_seq#1028,d_quarter_seq#1029,d_year#1030,d_dow#1031,d_moy#1032,d_dom#1033,d_qoy#1034,d_fy_year#1035,d_fy_quarter_seq#1036,d_fy_week_seq#1037,d_day_name#1038,d_quarter_name#1039,d_holiday#1040,d_weekend#1041,d_following_holiday#1042,d_first_dom#1043,d_last_dom#1044,d_same_day_ly#1045,d_same_day_lq#1046,d_current_day#1047,... 4 more fields] parquet\n         :  :              :     +- Relation spark_catalog.tpcds_100.web_sales[ws_sold_time_sk#990,ws_ship_date_sk#991,ws_item_sk#992,ws_bill_customer_sk#993,ws_bill_cdemo_sk#994,ws_bill_hdemo_sk#995,ws_bill_addr_sk#996,ws_ship_customer_sk#997,ws_ship_cdemo_sk#998,ws_ship_hdemo_sk#999,ws_ship_addr_sk#1000,ws_web_page_sk#1001,ws_web_site_sk#1002,ws_ship_mode_sk#1003,ws_warehouse_sk#1004,ws_promo_sk#1005,ws_order_number#1006L,ws_quantity#1007,ws_wholesale_cost#1008,ws_list_price#1009,ws_sales_price#1010,ws_ext_discount_amt#1011,ws_ext_sales_price#1012,ws_ext_wholesale_cost#1013,... 10 more fields] parquet\n         :  :              +- Project [d_date_sk#1024]\n         :  :                 +- Filter ((isnotnull(d_year#1030) AND ((d_year#1030 >= 1998) AND (d_year#1030 <= 2000))) AND isnotnull(d_date_sk#1024))\n         :  :                    +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#1024,d_date_id#1025,d_date#1026,d_month_seq#1027,d_week_seq#1028,d_quarter_seq#1029,d_year#1030,d_dow#1031,d_moy#1032,d_dom#1033,d_qoy#1034,d_fy_year#1035,d_fy_quarter_seq#1036,d_fy_week_seq#1037,d_day_name#1038,d_quarter_name#1039,d_holiday#1040,d_weekend#1041,d_following_holiday#1042,d_first_dom#1043,d_last_dom#1044,d_same_day_ly#1045,d_same_day_lq#1046,d_current_day#1047,... 4 more fields] parquet\n         :  +- Aggregate [i_brand_id#1082, i_class_id#1084, i_category_id#1086], [store AS channel#730, i_brand_id#1082, i_class_id#1084, i_category_id#1086, sum((cast(ss_quantity#1061 as decimal(10,0)) * ss_list_price#1063)) AS sales#731, count(1) AS number_sales#732L]\n         :     +- Project [ss_quantity#1061, ss_list_price#1063, i_brand_id#1082, i_class_id#1084, i_category_id#1086]\n         :        +- Join Inner, (ss_item_sk#1053 = i_item_sk#1075)\n         :           :- Project [ss_item_sk#1053, ss_quantity#1061, ss_list_price#1063]\n         :           :  +- Join Inner, (ss_sold_date_sk#1074 = d_date_sk#1097)\n         :           :     :- Join LeftSemi, (ss_item_sk#1053 = ss_item_sk#745)\n         :           :     :  :- Project [ss_item_sk#1053, ss_quantity#1061, ss_list_price#1063, ss_sold_date_sk#1074]\n         :           :     :  :  +- Filter ((isnotnull(ss_item_sk#1053) AND isnotnull(ss_sold_date_sk#1074)) AND dynamicpruning#1303 [ss_sold_date_sk#1074])\n         :           :     :  :     :  +- Project [d_date_sk#1097]\n         :           :     :  :     :     +- Filter ((isnotnull(d_week_seq#1101) AND (d_week_seq#1101 = scalar-subquery#734 [])) AND isnotnull(d_date_sk#1097))\n         :           :     :  :     :        :  +- Project [d_week_seq#1213]\n         :           :     :  :     :        :     +- Filter (((isnotnull(d_year#1215) AND isnotnull(d_moy#1217)) AND isnotnull(d_dom#1218)) AND (((d_year#1215 = 1999) AND (d_moy#1217 = 12)) AND (d_dom#1218 = 16)))\n         :           :     :  :     :        :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#1209,d_date_id#1210,d_date#1211,d_month_seq#1212,d_week_seq#1213,d_quarter_seq#1214,d_year#1215,d_dow#1216,d_moy#1217,d_dom#1218,d_qoy#1219,d_fy_year#1220,d_fy_quarter_seq#1221,d_fy_week_seq#1222,d_day_name#1223,d_quarter_name#1224,d_holiday#1225,d_weekend#1226,d_following_holiday#1227,d_first_dom#1228,d_last_dom#1229,d_same_day_ly#1230,d_same_day_lq#1231,d_current_day#1232,... 4 more fields] parquet\n         :           :     :  :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#1097,d_date_id#1098,d_date#1099,d_month_seq#1100,d_week_seq#1101,d_quarter_seq#1102,d_year#1103,d_dow#1104,d_moy#1105,d_dom#1106,d_qoy#1107,d_fy_year#1108,d_fy_quarter_seq#1109,d_fy_week_seq#1110,d_day_name#1111,d_quarter_name#1112,d_holiday#1113,d_weekend#1114,d_following_holiday#1115,d_first_dom#1116,d_last_dom#1117,d_same_day_ly#1118,d_same_day_lq#1119,d_current_day#1120,... 4 more fields] parquet\n         :           :     :  :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#1052,ss_item_sk#1053,ss_customer_sk#1054,ss_cdemo_sk#1055,ss_hdemo_sk#1056,ss_addr_sk#1057,ss_store_sk#1058,ss_promo_sk#1059,ss_ticket_number#1060L,ss_quantity#1061,ss_wholesale_cost#1062,ss_list_price#1063,ss_sales_price#1064,ss_ext_discount_amt#1065,ss_ext_sales_price#1066,ss_ext_wholesale_cost#1067,ss_ext_list_price#1068,ss_ext_tax#1069,ss_coupon_amt#1070,ss_net_paid#1071,ss_net_paid_inc_tax#1072,ss_net_profit#1073,ss_sold_date_sk#1074] parquet\n         :           :     :  +- Project [i_item_sk#25 AS ss_item_sk#745]\n         :           :     :     +- Join Inner, (((i_brand_id#32 = brand_id#742) AND (i_class_id#34 = class_id#743)) AND (i_category_id#36 = category_id#744))\n         :           :     :        :- Project [i_item_sk#25, i_brand_id#32, i_class_id#34, i_category_id#36]\n         :           :     :        :  +- Filter ((isnotnull(i_brand_id#32) AND isnotnull(i_class_id#34)) AND isnotnull(i_category_id#36))\n         :           :     :        :     +- Relation spark_catalog.tpcds_100.item[i_item_sk#25,i_item_id#26,i_rec_start_date#27,i_rec_end_date#28,i_item_desc#29,i_current_price#30,i_wholesale_cost#31,i_brand_id#32,i_brand#33,i_class_id#34,i_class#35,i_category_id#36,i_category#37,i_manufact_id#38,i_manufact#39,i_size#40,i_formulation#41,i_color#42,i_units#43,i_container#44,i_manager_id#45,i_product_name#46] parquet\n         :           :     :        +- Join LeftSemi, (((brand_id#742 <=> i_brand_id#834) AND (class_id#743 <=> i_class_id#836)) AND (category_id#744 <=> i_category_id#838))\n         :           :     :           :- Aggregate [brand_id#742, class_id#743, category_id#744], [brand_id#742, class_id#743, category_id#744]\n         :           :     :           :  +- Project [i_brand_id#762 AS brand_id#742, i_class_id#764 AS class_id#743, i_category_id#766 AS category_id#744]\n         :           :     :           :     +- Join Inner, (ss_item_sk#48 = i_item_sk#755)\n         :           :     :           :        :- Project [ss_item_sk#48]\n         :           :     :           :        :  +- Join Inner, (ss_sold_date_sk#69 = d_date_sk#70)\n         :           :     :           :        :     :- Project [ss_item_sk#48, ss_sold_date_sk#69]\n         :           :     :           :        :     :  +- Filter ((isnotnull(ss_item_sk#48) AND isnotnull(ss_sold_date_sk#69)) AND dynamicpruning#1291 [ss_sold_date_sk#69])\n         :           :     :           :        :     :     :  +- Project [d_date_sk#70]\n         :           :     :           :        :     :     :     +- Filter ((isnotnull(d_year#76) AND ((d_year#76 >= 1998) AND (d_year#76 <= 2000))) AND isnotnull(d_date_sk#70))\n         :           :     :           :        :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#70,d_date_id#71,d_date#72,d_month_seq#73,d_week_seq#74,d_quarter_seq#75,d_year#76,d_dow#77,d_moy#78,d_dom#79,d_qoy#80,d_fy_year#81,d_fy_quarter_seq#82,d_fy_week_seq#83,d_day_name#84,d_quarter_name#85,d_holiday#86,d_weekend#87,d_following_holiday#88,d_first_dom#89,d_last_dom#90,d_same_day_ly#91,d_same_day_lq#92,d_current_day#93,... 4 more fields] parquet\n         :           :     :           :        :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#47,ss_item_sk#48,ss_customer_sk#49,ss_cdemo_sk#50,ss_hdemo_sk#51,ss_addr_sk#52,ss_store_sk#53,ss_promo_sk#54,ss_ticket_number#55L,ss_quantity#56,ss_wholesale_cost#57,ss_list_price#58,ss_sales_price#59,ss_ext_discount_amt#60,ss_ext_sales_price#61,ss_ext_wholesale_cost#62,ss_ext_list_price#63,ss_ext_tax#64,ss_coupon_amt#65,ss_net_paid#66,ss_net_paid_inc_tax#67,ss_net_profit#68,ss_sold_date_sk#69] parquet\n         :           :     :           :        :     +- LogicalQueryStage Project [d_date_sk#70], BroadcastQueryStage 0\n         :           :     :           :        +- Join LeftSemi, (((i_brand_id#762 <=> i_brand_id#784) AND (i_class_id#764 <=> i_class_id#786)) AND (i_category_id#766 <=> i_category_id#788))\n         :           :     :           :           :- LogicalQueryStage Project [i_item_sk#755, i_brand_id#762, i_class_id#764, i_category_id#766], ShuffleQueryStage 1\n         :           :     :           :           +- LogicalQueryStage Project [i_brand_id#784, i_class_id#786, i_category_id#788], ShuffleQueryStage 47\n         :           :     :           +- LogicalQueryStage Project [i_brand_id#834, i_class_id#836, i_category_id#838], ShuffleQueryStage 48\n         :           :     +- LogicalQueryStage Project [d_date_sk#1097], BroadcastQueryStage 9\n         :           +- Join LeftSemi, (i_item_sk#1075 = ss_item_sk#745)\n         :              :- Project [i_item_sk#1075, i_brand_id#1082, i_class_id#1084, i_category_id#1086]\n         :              :  +- Filter (((isnotnull(i_item_sk#1075) AND isnotnull(i_brand_id#1082)) AND isnotnull(i_class_id#1084)) AND isnotnull(i_category_id#1086))\n         :              :     +- Relation spark_catalog.tpcds_100.item[i_item_sk#1075,i_item_id#1076,i_rec_start_date#1077,i_rec_end_date#1078,i_item_desc#1079,i_current_price#1080,i_wholesale_cost#1081,i_brand_id#1082,i_brand#1083,i_class_id#1084,i_class#1085,i_category_id#1086,i_category#1087,i_manufact_id#1088,i_manufact#1089,i_size#1090,i_formulation#1091,i_color#1092,i_units#1093,i_container#1094,i_manager_id#1095,i_product_name#1096] parquet\n         :              +- Project [i_item_sk#25 AS ss_item_sk#745]\n         :                 +- Join Inner, (((i_brand_id#32 = brand_id#742) AND (i_class_id#34 = class_id#743)) AND (i_category_id#36 = category_id#744))\n         :                    :- Project [i_item_sk#25, i_brand_id#32, i_class_id#34, i_category_id#36]\n         :                    :  +- Filter ((isnotnull(i_brand_id#32) AND isnotnull(i_class_id#34)) AND isnotnull(i_category_id#36))\n         :                    :     +- Relation spark_catalog.tpcds_100.item[i_item_sk#25,i_item_id#26,i_rec_start_date#27,i_rec_end_date#28,i_item_desc#29,i_current_price#30,i_wholesale_cost#31,i_brand_id#32,i_brand#33,i_class_id#34,i_class#35,i_category_id#36,i_category#37,i_manufact_id#38,i_manufact#39,i_size#40,i_formulation#41,i_color#42,i_units#43,i_container#44,i_manager_id#45,i_product_name#46] parquet\n         :                    +- Join LeftSemi, (((brand_id#742 <=> i_brand_id#834) AND (class_id#743 <=> i_class_id#836)) AND (category_id#744 <=> i_category_id#838))\n         :                       :- Aggregate [brand_id#742, class_id#743, category_id#744], [brand_id#742, class_id#743, category_id#744]\n         :                       :  +- Project [i_brand_id#762 AS brand_id#742, i_class_id#764 AS class_id#743, i_category_id#766 AS category_id#744]\n         :                       :     +- Join Inner, (ss_item_sk#48 = i_item_sk#755)\n         :                       :        :- Project [ss_item_sk#48]\n         :                       :        :  +- Join Inner, (ss_sold_date_sk#69 = d_date_sk#70)\n         :                       :        :     :- Project [ss_item_sk#48, ss_sold_date_sk#69]\n         :                       :        :     :  +- Filter ((isnotnull(ss_item_sk#48) AND isnotnull(ss_sold_date_sk#69)) AND dynamicpruning#1291 [ss_sold_date_sk#69])\n         :                       :        :     :     :  +- Project [d_date_sk#70]\n         :                       :        :     :     :     +- Filter ((isnotnull(d_year#76) AND ((d_year#76 >= 1998) AND (d_year#76 <= 2000))) AND isnotnull(d_date_sk#70))\n         :                       :        :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#70,d_date_id#71,d_date#72,d_month_seq#73,d_week_seq#74,d_quarter_seq#75,d_year#76,d_dow#77,d_moy#78,d_dom#79,d_qoy#80,d_fy_year#81,d_fy_quarter_seq#82,d_fy_week_seq#83,d_day_name#84,d_quarter_name#85,d_holiday#86,d_weekend#87,d_following_holiday#88,d_first_dom#89,d_last_dom#90,d_same_day_ly#91,d_same_day_lq#92,d_current_day#93,... 4 more fields] parquet\n         :                       :        :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#47,ss_item_sk#48,ss_customer_sk#49,ss_cdemo_sk#50,ss_hdemo_sk#51,ss_addr_sk#52,ss_store_sk#53,ss_promo_sk#54,ss_ticket_number#55L,ss_quantity#56,ss_wholesale_cost#57,ss_list_price#58,ss_sales_price#59,ss_ext_discount_amt#60,ss_ext_sales_price#61,ss_ext_wholesale_cost#62,ss_ext_list_price#63,ss_ext_tax#64,ss_coupon_amt#65,ss_net_paid#66,ss_net_paid_inc_tax#67,ss_net_profit#68,ss_sold_date_sk#69] parquet\n         :                       :        :     +- LogicalQueryStage Project [d_date_sk#70], BroadcastQueryStage 11\n         :                       :        +- Join LeftSemi, (((i_brand_id#762 <=> i_brand_id#784) AND (i_class_id#764 <=> i_class_id#786)) AND (i_category_id#766 <=> i_category_id#788))\n         :                       :           :- LogicalQueryStage Project [i_item_sk#755, i_brand_id#762, i_class_id#764, i_category_id#766], ShuffleQueryStage 13\n         :                       :           +- LogicalQueryStage Project [i_brand_id#784, i_class_id#786, i_category_id#788], ShuffleQueryStage 50\n         :                       +- LogicalQueryStage Project [i_brand_id#834, i_class_id#836, i_category_id#838], ShuffleQueryStage 52\n         +- Filter (isnotnull(sales#737) AND (cast(sales#737 as decimal(32,6)) > cast(scalar-subquery#741 [] as decimal(32,6))))\n            :  +- Aggregate [avg((cast(quantity#746 as decimal(10,0)) * list_price#747)) AS average_sales#752]\n            :     +- Union false, false\n            :        :- Project [ss_quantity#886 AS quantity#746, ss_list_price#888 AS list_price#747]\n            :        :  +- Join Inner, (ss_sold_date_sk#899 = d_date_sk#900)\n            :        :     :- Project [ss_quantity#886, ss_list_price#888, ss_sold_date_sk#899]\n            :        :     :  +- Filter (isnotnull(ss_sold_date_sk#899) AND dynamicpruning#1288 [ss_sold_date_sk#899])\n            :        :     :     :  +- Project [d_date_sk#900]\n            :        :     :     :     +- Filter ((isnotnull(d_year#906) AND ((d_year#906 >= 1998) AND (d_year#906 <= 2000))) AND isnotnull(d_date_sk#900))\n            :        :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#900,d_date_id#901,d_date#902,d_month_seq#903,d_week_seq#904,d_quarter_seq#905,d_year#906,d_dow#907,d_moy#908,d_dom#909,d_qoy#910,d_fy_year#911,d_fy_quarter_seq#912,d_fy_week_seq#913,d_day_name#914,d_quarter_name#915,d_holiday#916,d_weekend#917,d_following_holiday#918,d_first_dom#919,d_last_dom#920,d_same_day_ly#921,d_same_day_lq#922,d_current_day#923,... 4 more fields] parquet\n            :        :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#877,ss_item_sk#878,ss_customer_sk#879,ss_cdemo_sk#880,ss_hdemo_sk#881,ss_addr_sk#882,ss_store_sk#883,ss_promo_sk#884,ss_ticket_number#885L,ss_quantity#886,ss_wholesale_cost#887,ss_list_price#888,ss_sales_price#889,ss_ext_discount_amt#890,ss_ext_sales_price#891,ss_ext_wholesale_cost#892,ss_ext_list_price#893,ss_ext_tax#894,ss_coupon_amt#895,ss_net_paid#896,ss_net_paid_inc_tax#897,ss_net_profit#898,ss_sold_date_sk#899] parquet\n            :        :     +- Project [d_date_sk#900]\n            :        :        +- Filter ((isnotnull(d_year#906) AND ((d_year#906 >= 1998) AND (d_year#906 <= 2000))) AND isnotnull(d_date_sk#900))\n            :        :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#900,d_date_id#901,d_date#902,d_month_seq#903,d_week_seq#904,d_quarter_seq#905,d_year#906,d_dow#907,d_moy#908,d_dom#909,d_qoy#910,d_fy_year#911,d_fy_quarter_seq#912,d_fy_week_seq#913,d_day_name#914,d_quarter_name#915,d_holiday#916,d_weekend#917,d_following_holiday#918,d_first_dom#919,d_last_dom#920,d_same_day_ly#921,d_same_day_lq#922,d_current_day#923,... 4 more fields] parquet\n            :        :- Project [cs_quantity#945 AS quantity#748, cs_list_price#947 AS list_price#749]\n            :        :  +- Join Inner, (cs_sold_date_sk#961 = d_date_sk#962)\n            :        :     :- Project [cs_quantity#945, cs_list_price#947, cs_sold_date_sk#961]\n            :        :     :  +- Filter (isnotnull(cs_sold_date_sk#961) AND dynamicpruning#1289 [cs_sold_date_sk#961])\n            :        :     :     :  +- Project [d_date_sk#962]\n            :        :     :     :     +- Filter ((isnotnull(d_year#968) AND ((d_year#968 >= 1998) AND (d_year#968 <= 2000))) AND isnotnull(d_date_sk#962))\n            :        :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#962,d_date_id#963,d_date#964,d_month_seq#965,d_week_seq#966,d_quarter_seq#967,d_year#968,d_dow#969,d_moy#970,d_dom#971,d_qoy#972,d_fy_year#973,d_fy_quarter_seq#974,d_fy_week_seq#975,d_day_name#976,d_quarter_name#977,d_holiday#978,d_weekend#979,d_following_holiday#980,d_first_dom#981,d_last_dom#982,d_same_day_ly#983,d_same_day_lq#984,d_current_day#985,... 4 more fields] parquet\n            :        :     :     +- Relation spark_catalog.tpcds_100.catalog_sales[cs_sold_time_sk#928,cs_ship_date_sk#929,cs_bill_customer_sk#930,cs_bill_cdemo_sk#931,cs_bill_hdemo_sk#932,cs_bill_addr_sk#933,cs_ship_customer_sk#934,cs_ship_cdemo_sk#935,cs_ship_hdemo_sk#936,cs_ship_addr_sk#937,cs_call_center_sk#938,cs_catalog_page_sk#939,cs_ship_mode_sk#940,cs_warehouse_sk#941,cs_item_sk#942,cs_promo_sk#943,cs_order_number#944L,cs_quantity#945,cs_wholesale_cost#946,cs_list_price#947,cs_sales_price#948,cs_ext_discount_amt#949,cs_ext_sales_price#950,cs_ext_wholesale_cost#951,... 10 more fields] parquet\n            :        :     +- Project [d_date_sk#962]\n            :        :        +- Filter ((isnotnull(d_year#968) AND ((d_year#968 >= 1998) AND (d_year#968 <= 2000))) AND isnotnull(d_date_sk#962))\n            :        :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#962,d_date_id#963,d_date#964,d_month_seq#965,d_week_seq#966,d_quarter_seq#967,d_year#968,d_dow#969,d_moy#970,d_dom#971,d_qoy#972,d_fy_year#973,d_fy_quarter_seq#974,d_fy_week_seq#975,d_day_name#976,d_quarter_name#977,d_holiday#978,d_weekend#979,d_following_holiday#980,d_first_dom#981,d_last_dom#982,d_same_day_ly#983,d_same_day_lq#984,d_current_day#985,... 4 more fields] parquet\n            :        +- Project [ws_quantity#1007 AS quantity#750, ws_list_price#1009 AS list_price#751]\n            :           +- Join Inner, (ws_sold_date_sk#1023 = d_date_sk#1024)\n            :              :- Project [ws_quantity#1007, ws_list_price#1009, ws_sold_date_sk#1023]\n            :              :  +- Filter (isnotnull(ws_sold_date_sk#1023) AND dynamicpruning#1290 [ws_sold_date_sk#1023])\n            :              :     :  +- Project [d_date_sk#1024]\n            :              :     :     +- Filter ((isnotnull(d_year#1030) AND ((d_year#1030 >= 1998) AND (d_year#1030 <= 2000))) AND isnotnull(d_date_sk#1024))\n            :              :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#1024,d_date_id#1025,d_date#1026,d_month_seq#1027,d_week_seq#1028,d_quarter_seq#1029,d_year#1030,d_dow#1031,d_moy#1032,d_dom#1033,d_qoy#1034,d_fy_year#1035,d_fy_quarter_seq#1036,d_fy_week_seq#1037,d_day_name#1038,d_quarter_name#1039,d_holiday#1040,d_weekend#1041,d_following_holiday#1042,d_first_dom#1043,d_last_dom#1044,d_same_day_ly#1045,d_same_day_lq#1046,d_current_day#1047,... 4 more fields] parquet\n            :              :     +- Relation spark_catalog.tpcds_100.web_sales[ws_sold_time_sk#990,ws_ship_date_sk#991,ws_item_sk#992,ws_bill_customer_sk#993,ws_bill_cdemo_sk#994,ws_bill_hdemo_sk#995,ws_bill_addr_sk#996,ws_ship_customer_sk#997,ws_ship_cdemo_sk#998,ws_ship_hdemo_sk#999,ws_ship_addr_sk#1000,ws_web_page_sk#1001,ws_web_site_sk#1002,ws_ship_mode_sk#1003,ws_warehouse_sk#1004,ws_promo_sk#1005,ws_order_number#1006L,ws_quantity#1007,ws_wholesale_cost#1008,ws_list_price#1009,ws_sales_price#1010,ws_ext_discount_amt#1011,ws_ext_sales_price#1012,ws_ext_wholesale_cost#1013,... 10 more fields] parquet\n            :              +- Project [d_date_sk#1024]\n            :                 +- Filter ((isnotnull(d_year#1030) AND ((d_year#1030 >= 1998) AND (d_year#1030 <= 2000))) AND isnotnull(d_date_sk#1024))\n            :                    +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#1024,d_date_id#1025,d_date#1026,d_month_seq#1027,d_week_seq#1028,d_quarter_seq#1029,d_year#1030,d_dow#1031,d_moy#1032,d_dom#1033,d_qoy#1034,d_fy_year#1035,d_fy_quarter_seq#1036,d_fy_week_seq#1037,d_day_name#1038,d_quarter_name#1039,d_holiday#1040,d_weekend#1041,d_following_holiday#1042,d_first_dom#1043,d_last_dom#1044,d_same_day_ly#1045,d_same_day_lq#1046,d_current_day#1047,... 4 more fields] parquet\n            +- Aggregate [i_brand_id#1155, i_class_id#1157, i_category_id#1159], [store AS channel#736, i_brand_id#1155, i_class_id#1157, i_category_id#1159, sum((cast(ss_quantity#1134 as decimal(10,0)) * ss_list_price#1136)) AS sales#737, count(1) AS number_sales#738L]\n               +- Project [ss_quantity#1134, ss_list_price#1136, i_brand_id#1155, i_class_id#1157, i_category_id#1159]\n                  +- Join Inner, (ss_item_sk#1126 = i_item_sk#1148)\n                     :- Project [ss_item_sk#1126, ss_quantity#1134, ss_list_price#1136]\n                     :  +- Join Inner, (ss_sold_date_sk#1147 = d_date_sk#1170)\n                     :     :- Join LeftSemi, (ss_item_sk#1126 = ss_item_sk#745)\n                     :     :  :- Project [ss_item_sk#1126, ss_quantity#1134, ss_list_price#1136, ss_sold_date_sk#1147]\n                     :     :  :  +- Filter ((isnotnull(ss_item_sk#1126) AND isnotnull(ss_sold_date_sk#1147)) AND dynamicpruning#1310 [ss_sold_date_sk#1147])\n                     :     :  :     :  +- Project [d_date_sk#1170]\n                     :     :  :     :     +- Filter ((isnotnull(d_week_seq#1174) AND (d_week_seq#1174 = scalar-subquery#740 [])) AND isnotnull(d_date_sk#1170))\n                     :     :  :     :        :  +- Project [d_week_seq#1241]\n                     :     :  :     :        :     +- Filter (((isnotnull(d_year#1243) AND isnotnull(d_moy#1245)) AND isnotnull(d_dom#1246)) AND (((d_year#1243 = 1998) AND (d_moy#1245 = 12)) AND (d_dom#1246 = 16)))\n                     :     :  :     :        :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#1237,d_date_id#1238,d_date#1239,d_month_seq#1240,d_week_seq#1241,d_quarter_seq#1242,d_year#1243,d_dow#1244,d_moy#1245,d_dom#1246,d_qoy#1247,d_fy_year#1248,d_fy_quarter_seq#1249,d_fy_week_seq#1250,d_day_name#1251,d_quarter_name#1252,d_holiday#1253,d_weekend#1254,d_following_holiday#1255,d_first_dom#1256,d_last_dom#1257,d_same_day_ly#1258,d_same_day_lq#1259,d_current_day#1260,... 4 more fields] parquet\n                     :     :  :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#1170,d_date_id#1171,d_date#1172,d_month_seq#1173,d_week_seq#1174,d_quarter_seq#1175,d_year#1176,d_dow#1177,d_moy#1178,d_dom#1179,d_qoy#1180,d_fy_year#1181,d_fy_quarter_seq#1182,d_fy_week_seq#1183,d_day_name#1184,d_quarter_name#1185,d_holiday#1186,d_weekend#1187,d_following_holiday#1188,d_first_dom#1189,d_last_dom#1190,d_same_day_ly#1191,d_same_day_lq#1192,d_current_day#1193,... 4 more fields] parquet\n                     :     :  :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#1125,ss_item_sk#1126,ss_customer_sk#1127,ss_cdemo_sk#1128,ss_hdemo_sk#1129,ss_addr_sk#1130,ss_store_sk#1131,ss_promo_sk#1132,ss_ticket_number#1133L,ss_quantity#1134,ss_wholesale_cost#1135,ss_list_price#1136,ss_sales_price#1137,ss_ext_discount_amt#1138,ss_ext_sales_price#1139,ss_ext_wholesale_cost#1140,ss_ext_list_price#1141,ss_ext_tax#1142,ss_coupon_amt#1143,ss_net_paid#1144,ss_net_paid_inc_tax#1145,ss_net_profit#1146,ss_sold_date_sk#1147] parquet\n                     :     :  +- Project [i_item_sk#25 AS ss_item_sk#745]\n                     :     :     +- Join Inner, (((i_brand_id#32 = brand_id#742) AND (i_class_id#34 = class_id#743)) AND (i_category_id#36 = category_id#744))\n                     :     :        :- Project [i_item_sk#25, i_brand_id#32, i_class_id#34, i_category_id#36]\n                     :     :        :  +- Filter ((isnotnull(i_brand_id#32) AND isnotnull(i_class_id#34)) AND isnotnull(i_category_id#36))\n                     :     :        :     +- Relation spark_catalog.tpcds_100.item[i_item_sk#25,i_item_id#26,i_rec_start_date#27,i_rec_end_date#28,i_item_desc#29,i_current_price#30,i_wholesale_cost#31,i_brand_id#32,i_brand#33,i_class_id#34,i_class#35,i_category_id#36,i_category#37,i_manufact_id#38,i_manufact#39,i_size#40,i_formulation#41,i_color#42,i_units#43,i_container#44,i_manager_id#45,i_product_name#46] parquet\n                     :     :        +- Join LeftSemi, (((brand_id#742 <=> i_brand_id#834) AND (class_id#743 <=> i_class_id#836)) AND (category_id#744 <=> i_category_id#838))\n                     :     :           :- Aggregate [brand_id#742, class_id#743, category_id#744], [brand_id#742, class_id#743, category_id#744]\n                     :     :           :  +- Project [i_brand_id#762 AS brand_id#742, i_class_id#764 AS class_id#743, i_category_id#766 AS category_id#744]\n                     :     :           :     +- Join Inner, (ss_item_sk#48 = i_item_sk#755)\n                     :     :           :        :- Project [ss_item_sk#48]\n                     :     :           :        :  +- Join Inner, (ss_sold_date_sk#69 = d_date_sk#70)\n                     :     :           :        :     :- Project [ss_item_sk#48, ss_sold_date_sk#69]\n                     :     :           :        :     :  +- Filter ((isnotnull(ss_item_sk#48) AND isnotnull(ss_sold_date_sk#69)) AND dynamicpruning#1297 [ss_sold_date_sk#69])\n                     :     :           :        :     :     :  +- Project [d_date_sk#70]\n                     :     :           :        :     :     :     +- Filter ((isnotnull(d_year#76) AND ((d_year#76 >= 1998) AND (d_year#76 <= 2000))) AND isnotnull(d_date_sk#70))\n                     :     :           :        :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#70,d_date_id#71,d_date#72,d_month_seq#73,d_week_seq#74,d_quarter_seq#75,d_year#76,d_dow#77,d_moy#78,d_dom#79,d_qoy#80,d_fy_year#81,d_fy_quarter_seq#82,d_fy_week_seq#83,d_day_name#84,d_quarter_name#85,d_holiday#86,d_weekend#87,d_following_holiday#88,d_first_dom#89,d_last_dom#90,d_same_day_ly#91,d_same_day_lq#92,d_current_day#93,... 4 more fields] parquet\n                     :     :           :        :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#47,ss_item_sk#48,ss_customer_sk#49,ss_cdemo_sk#50,ss_hdemo_sk#51,ss_addr_sk#52,ss_store_sk#53,ss_promo_sk#54,ss_ticket_number#55L,ss_quantity#56,ss_wholesale_cost#57,ss_list_price#58,ss_sales_price#59,ss_ext_discount_amt#60,ss_ext_sales_price#61,ss_ext_wholesale_cost#62,ss_ext_list_price#63,ss_ext_tax#64,ss_coupon_amt#65,ss_net_paid#66,ss_net_paid_inc_tax#67,ss_net_profit#68,ss_sold_date_sk#69] parquet\n                     :     :           :        :     +- LogicalQueryStage Project [d_date_sk#70], BroadcastQueryStage 23\n                     :     :           :        +- Join LeftSemi, (((i_brand_id#762 <=> i_brand_id#784) AND (i_class_id#764 <=> i_class_id#786)) AND (i_category_id#766 <=> i_category_id#788))\n                     :     :           :           :- LogicalQueryStage Project [i_item_sk#755, i_brand_id#762, i_class_id#764, i_category_id#766], ShuffleQueryStage 25\n                     :     :           :           +- LogicalQueryStage Project [i_brand_id#784, i_class_id#786, i_category_id#788], ShuffleQueryStage 54\n                     :     :           +- LogicalQueryStage Project [i_brand_id#834, i_class_id#836, i_category_id#838], ShuffleQueryStage 56\n                     :     +- LogicalQueryStage Project [d_date_sk#1170], BroadcastQueryStage 34\n                     +- Join LeftSemi, (i_item_sk#1148 = ss_item_sk#745)\n                        :- Project [i_item_sk#1148, i_brand_id#1155, i_class_id#1157, i_category_id#1159]\n                        :  +- Filter (((isnotnull(i_item_sk#1148) AND isnotnull(i_brand_id#1155)) AND isnotnull(i_class_id#1157)) AND isnotnull(i_category_id#1159))\n                        :     +- Relation spark_catalog.tpcds_100.item[i_item_sk#1148,i_item_id#1149,i_rec_start_date#1150,i_rec_end_date#1151,i_item_desc#1152,i_current_price#1153,i_wholesale_cost#1154,i_brand_id#1155,i_brand#1156,i_class_id#1157,i_class#1158,i_category_id#1159,i_category#1160,i_manufact_id#1161,i_manufact#1162,i_size#1163,i_formulation#1164,i_color#1165,i_units#1166,i_container#1167,i_manager_id#1168,i_product_name#1169] parquet\n                        +- Project [i_item_sk#25 AS ss_item_sk#745]\n                           +- Join Inner, (((i_brand_id#32 = brand_id#742) AND (i_class_id#34 = class_id#743)) AND (i_category_id#36 = category_id#744))\n                              :- Project [i_item_sk#25, i_brand_id#32, i_class_id#34, i_category_id#36]\n                              :  +- Filter ((isnotnull(i_brand_id#32) AND isnotnull(i_class_id#34)) AND isnotnull(i_category_id#36))\n                              :     +- Relation spark_catalog.tpcds_100.item[i_item_sk#25,i_item_id#26,i_rec_start_date#27,i_rec_end_date#28,i_item_desc#29,i_current_price#30,i_wholesale_cost#31,i_brand_id#32,i_brand#33,i_class_id#34,i_class#35,i_category_id#36,i_category#37,i_manufact_id#38,i_manufact#39,i_size#40,i_formulation#41,i_color#42,i_units#43,i_container#44,i_manager_id#45,i_product_name#46] parquet\n                              +- Join LeftSemi, (((brand_id#742 <=> i_brand_id#834) AND (class_id#743 <=> i_class_id#836)) AND (category_id#744 <=> i_category_id#838))\n                                 :- Aggregate [brand_id#742, class_id#743, category_id#744], [brand_id#742, class_id#743, category_id#744]\n                                 :  +- Project [i_brand_id#762 AS brand_id#742, i_class_id#764 AS class_id#743, i_category_id#766 AS category_id#744]\n                                 :     +- Join Inner, (ss_item_sk#48 = i_item_sk#755)\n                                 :        :- Project [ss_item_sk#48]\n                                 :        :  +- Join Inner, (ss_sold_date_sk#69 = d_date_sk#70)\n                                 :        :     :- Project [ss_item_sk#48, ss_sold_date_sk#69]\n                                 :        :     :  +- Filter ((isnotnull(ss_item_sk#48) AND isnotnull(ss_sold_date_sk#69)) AND dynamicpruning#1297 [ss_sold_date_sk#69])\n                                 :        :     :     :  +- Project [d_date_sk#70]\n                                 :        :     :     :     +- Filter ((isnotnull(d_year#76) AND ((d_year#76 >= 1998) AND (d_year#76 <= 2000))) AND isnotnull(d_date_sk#70))\n                                 :        :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#70,d_date_id#71,d_date#72,d_month_seq#73,d_week_seq#74,d_quarter_seq#75,d_year#76,d_dow#77,d_moy#78,d_dom#79,d_qoy#80,d_fy_year#81,d_fy_quarter_seq#82,d_fy_week_seq#83,d_day_name#84,d_quarter_name#85,d_holiday#86,d_weekend#87,d_following_holiday#88,d_first_dom#89,d_last_dom#90,d_same_day_ly#91,d_same_day_lq#92,d_current_day#93,... 4 more fields] parquet\n                                 :        :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#47,ss_item_sk#48,ss_customer_sk#49,ss_cdemo_sk#50,ss_hdemo_sk#51,ss_addr_sk#52,ss_store_sk#53,ss_promo_sk#54,ss_ticket_number#55L,ss_quantity#56,ss_wholesale_cost#57,ss_list_price#58,ss_sales_price#59,ss_ext_discount_amt#60,ss_ext_sales_price#61,ss_ext_wholesale_cost#62,ss_ext_list_price#63,ss_ext_tax#64,ss_coupon_amt#65,ss_net_paid#66,ss_net_paid_inc_tax#67,ss_net_profit#68,ss_sold_date_sk#69] parquet\n                                 :        :     +- LogicalQueryStage Project [d_date_sk#70], BroadcastQueryStage 36\n                                 :        +- Join LeftSemi, (((i_brand_id#762 <=> i_brand_id#784) AND (i_class_id#764 <=> i_class_id#786)) AND (i_category_id#766 <=> i_category_id#788))\n                                 :           :- LogicalQueryStage Project [i_item_sk#755, i_brand_id#762, i_class_id#764, i_category_id#766], ShuffleQueryStage 38\n                                 :           +- LogicalQueryStage Project [i_brand_id#784, i_class_id#786, i_category_id#788], ShuffleQueryStage 58\n                                 +- LogicalQueryStage Project [i_brand_id#834, i_class_id#836, i_category_id#838], ShuffleQueryStage 60\n"
      },
      "IM" : {
        "inputSizeInBytes" : 268664924256,
        "inputRowCount" : 2515478524
      },
      "PD" : {
        "0" : [ 5844, 9412, 7071, 5313, 7071, 8556, 7071, 5844, 7071, 5313, 9412, 7071, 9412, 20176, 20176, 7778, 5844, 7778, 6428, 4830, 4390, 18341, 20176, 7071, 5844, 8556, 16674, 10353, 32493, 9412, 3628, 16674, 9412, 8556, 9412, 6428, 8556, 6428, 5844, 16674, 7778, 5313, 4830, 22193, 10353, 6428, 18341, 5844, 7071, 7071, 5844, 7778, 10353, 7071, 7071, 6428, 6428, 9412, 20176, 6428, 16674, 7071, 10353, 8556, 22193, 16674, 6428, 9412, 7778, 9412, 6428, 5844, 6428, 18341, 6428, 9412, 11388, 10353, 20176, 10353, 9412, 6428, 8556, 5844, 9412, 5844, 5844, 18341, 8556, 4390, 13780, 4830, 7071, 4830, 7071, 6428, 20176, 7071, 7778, 7778, 5844, 7071, 11388, 7778, 8556, 6428, 18341, 6428, 6428, 10353, 8556, 22193, 9412, 7778, 5844, 6428, 20176, 5313, 7071, 20176, 24413, 4390, 7071, 7071, 7071, 6428, 20176, 6428, 5844, 10353, 5844, 10353, 15158, 7071, 5844, 20176, 4830, 7778, 5844, 8556, 9412, 7071, 9412, 11388, 5313, 6428, 13780, 4830, 16674, 11388, 6428, 15158, 6428, 20176, 6428, 5313, 7778, 8556, 4390, 22193, 8556, 7778, 5844, 22193, 9412, 7778, 6428, 6428, 11388, 9412, 9412, 7778, 7778, 5313, 6428, 9412, 4830, 11388, 18341, 7778, 7778, 8556, 8556, 6428, 5313, 35743, 6428, 20176, 7778, 10353, 9412, 11388, 20176, 6428, 22193, 10353, 10353, 11388, 7778, 6428 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 16,
        "FinishedTasksNum" : 1,
        "FinishedTasksTotalTimeInMs" : 1290.0,
        "FinishedTasksDistributionInMs" : [ 1290.0, 1290.0, 1290.0, 1290.0, 1290.0 ]
      },
      "StartTimeInMs" : 1702226628947,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 82551,
        "IOBytes" : {
          "Total" : 3420903239,
          "Details" : {
            "IR" : 2733924494,
            "IW" : 0,
            "SR" : 344431542,
            "SW" : 342547203
          }
        }
      }
    }
  },
  "RuntimeQSs" : {
    "12" : {
      "QSLogical" : {
        "operators" : {
          "0" : {
            "sign" : 1112505167,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 2739200,
                "rowCount" : 136960
              },
              "compileTime" : {
                "sizeInBytes" : 2739200,
                "rowCount" : 136960
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (((brand_id#742 <=> i_brand_id#834) AND (class_id#743 <=> i_class_id#836)) AND (category_id#744 <=> i_category_id#838)) "
          }
        },
        "links" : [ ],
        "rawPlan" : "Join LeftSemi, (((brand_id#742 <=> i_brand_id#834) AND (class_id#743 <=> i_class_id#836)) AND (category_id#744 <=> i_category_id#838))\n:- Aggregate [brand_id#742, class_id#743, category_id#744], [brand_id#742, class_id#743, category_id#744]\n:  +- Project [i_brand_id#762 AS brand_id#742, i_class_id#764 AS class_id#743, i_category_id#766 AS category_id#744]\n:     +- Join Inner, (ss_item_sk#48 = i_item_sk#755)\n:        :- Project [ss_item_sk#48]\n:        :  +- Join Inner, (ss_sold_date_sk#69 = d_date_sk#70)\n:        :     :- Project [ss_item_sk#48, ss_sold_date_sk#69]\n:        :     :  +- Filter ((isnotnull(ss_item_sk#48) AND isnotnull(ss_sold_date_sk#69)) AND dynamicpruning#1291 [ss_sold_date_sk#69])\n:        :     :     :  +- Project [d_date_sk#70]\n:        :     :     :     +- Filter ((isnotnull(d_year#76) AND ((d_year#76 >= 1998) AND (d_year#76 <= 2000))) AND isnotnull(d_date_sk#70))\n:        :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#70,d_date_id#71,d_date#72,d_month_seq#73,d_week_seq#74,d_quarter_seq#75,d_year#76,d_dow#77,d_moy#78,d_dom#79,d_qoy#80,d_fy_year#81,d_fy_quarter_seq#82,d_fy_week_seq#83,d_day_name#84,d_quarter_name#85,d_holiday#86,d_weekend#87,d_following_holiday#88,d_first_dom#89,d_last_dom#90,d_same_day_ly#91,d_same_day_lq#92,d_current_day#93,... 4 more fields] parquet\n:        :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#47,ss_item_sk#48,ss_customer_sk#49,ss_cdemo_sk#50,ss_hdemo_sk#51,ss_addr_sk#52,ss_store_sk#53,ss_promo_sk#54,ss_ticket_number#55L,ss_quantity#56,ss_wholesale_cost#57,ss_list_price#58,ss_sales_price#59,ss_ext_discount_amt#60,ss_ext_sales_price#61,ss_ext_wholesale_cost#62,ss_ext_list_price#63,ss_ext_tax#64,ss_coupon_amt#65,ss_net_paid#66,ss_net_paid_inc_tax#67,ss_net_profit#68,ss_sold_date_sk#69] parquet\n:        :     +- Project [d_date_sk#70]\n:        :        +- Filter ((isnotnull(d_year#76) AND ((d_year#76 >= 1998) AND (d_year#76 <= 2000))) AND isnotnull(d_date_sk#70))\n:        :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#70,d_date_id#71,d_date#72,d_month_seq#73,d_week_seq#74,d_quarter_seq#75,d_year#76,d_dow#77,d_moy#78,d_dom#79,d_qoy#80,d_fy_year#81,d_fy_quarter_seq#82,d_fy_week_seq#83,d_day_name#84,d_quarter_name#85,d_holiday#86,d_weekend#87,d_following_holiday#88,d_first_dom#89,d_last_dom#90,d_same_day_ly#91,d_same_day_lq#92,d_current_day#93,... 4 more fields] parquet\n:        +- Join LeftSemi, (((i_brand_id#762 <=> i_brand_id#784) AND (i_class_id#764 <=> i_class_id#786)) AND (i_category_id#766 <=> i_category_id#788))\n:           :- Project [i_item_sk#755, i_brand_id#762, i_class_id#764, i_category_id#766]\n:           :  +- Filter (isnotnull(i_item_sk#755) AND ((isnotnull(i_brand_id#762) AND isnotnull(i_class_id#764)) AND isnotnull(i_category_id#766)))\n:           :     +- Relation spark_catalog.tpcds_100.item[i_item_sk#755,i_item_id#756,i_rec_start_date#757,i_rec_end_date#758,i_item_desc#759,i_current_price#760,i_wholesale_cost#761,i_brand_id#762,i_brand#763,i_class_id#764,i_class#765,i_category_id#766,i_category#767,i_manufact_id#768,i_manufact#769,i_size#770,i_formulation#771,i_color#772,i_units#773,i_container#774,i_manager_id#775,i_product_name#776] parquet\n:           +- Project [i_brand_id#784, i_class_id#786, i_category_id#788]\n:              +- Join Inner, (cs_item_sk#112 = i_item_sk#777)\n:                 :- Project [cs_item_sk#112]\n:                 :  +- Join Inner, (cs_sold_date_sk#131 = d_date_sk#799)\n:                 :     :- Project [cs_item_sk#112, cs_sold_date_sk#131]\n:                 :     :  +- Filter ((isnotnull(cs_item_sk#112) AND isnotnull(cs_sold_date_sk#131)) AND dynamicpruning#1292 [cs_sold_date_sk#131])\n:                 :     :     :  +- Project [d_date_sk#799]\n:                 :     :     :     +- Filter ((isnotnull(d_year#805) AND ((d_year#805 >= 1998) AND (d_year#805 <= 2000))) AND isnotnull(d_date_sk#799))\n:                 :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#799,d_date_id#800,d_date#801,d_month_seq#802,d_week_seq#803,d_quarter_seq#804,d_year#805,d_dow#806,d_moy#807,d_dom#808,d_qoy#809,d_fy_year#810,d_fy_quarter_seq#811,d_fy_week_seq#812,d_day_name#813,d_quarter_name#814,d_holiday#815,d_weekend#816,d_following_holiday#817,d_first_dom#818,d_last_dom#819,d_same_day_ly#820,d_same_day_lq#821,d_current_day#822,... 4 more fields] parquet\n:                 :     :     +- Relation spark_catalog.tpcds_100.catalog_sales[cs_sold_time_sk#98,cs_ship_date_sk#99,cs_bill_customer_sk#100,cs_bill_cdemo_sk#101,cs_bill_hdemo_sk#102,cs_bill_addr_sk#103,cs_ship_customer_sk#104,cs_ship_cdemo_sk#105,cs_ship_hdemo_sk#106,cs_ship_addr_sk#107,cs_call_center_sk#108,cs_catalog_page_sk#109,cs_ship_mode_sk#110,cs_warehouse_sk#111,cs_item_sk#112,cs_promo_sk#113,cs_order_number#114L,cs_quantity#115,cs_wholesale_cost#116,cs_list_price#117,cs_sales_price#118,cs_ext_discount_amt#119,cs_ext_sales_price#120,cs_ext_wholesale_cost#121,... 10 more fields] parquet\n:                 :     +- Project [d_date_sk#799]\n:                 :        +- Filter ((isnotnull(d_year#805) AND ((d_year#805 >= 1998) AND (d_year#805 <= 2000))) AND isnotnull(d_date_sk#799))\n:                 :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#799,d_date_id#800,d_date#801,d_month_seq#802,d_week_seq#803,d_quarter_seq#804,d_year#805,d_dow#806,d_moy#807,d_dom#808,d_qoy#809,d_fy_year#810,d_fy_quarter_seq#811,d_fy_week_seq#812,d_day_name#813,d_quarter_name#814,d_holiday#815,d_weekend#816,d_following_holiday#817,d_first_dom#818,d_last_dom#819,d_same_day_ly#820,d_same_day_lq#821,d_current_day#822,... 4 more fields] parquet\n:                 +- Project [i_item_sk#777, i_brand_id#784, i_class_id#786, i_category_id#788]\n:                    +- Filter isnotnull(i_item_sk#777)\n:                       +- Relation spark_catalog.tpcds_100.item[i_item_sk#777,i_item_id#778,i_rec_start_date#779,i_rec_end_date#780,i_item_desc#781,i_current_price#782,i_wholesale_cost#783,i_brand_id#784,i_brand#785,i_class_id#786,i_class#787,i_category_id#788,i_category#789,i_manufact_id#790,i_manufact#791,i_size#792,i_formulation#793,i_color#794,i_units#795,i_container#796,i_manager_id#797,i_product_name#798] parquet\n+- Project [i_brand_id#834, i_class_id#836, i_category_id#838]\n   +- Join Inner, (ws_item_sk#134 = i_item_sk#827)\n      :- Project [ws_item_sk#134]\n      :  +- Join Inner, (ws_sold_date_sk#165 = d_date_sk#849)\n      :     :- Project [ws_item_sk#134, ws_sold_date_sk#165]\n      :     :  +- Filter ((isnotnull(ws_item_sk#134) AND isnotnull(ws_sold_date_sk#165)) AND dynamicpruning#1293 [ws_sold_date_sk#165])\n      :     :     :  +- Project [d_date_sk#849]\n      :     :     :     +- Filter ((isnotnull(d_year#855) AND ((d_year#855 >= 1998) AND (d_year#855 <= 2000))) AND isnotnull(d_date_sk#849))\n      :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#849,d_date_id#850,d_date#851,d_month_seq#852,d_week_seq#853,d_quarter_seq#854,d_year#855,d_dow#856,d_moy#857,d_dom#858,d_qoy#859,d_fy_year#860,d_fy_quarter_seq#861,d_fy_week_seq#862,d_day_name#863,d_quarter_name#864,d_holiday#865,d_weekend#866,d_following_holiday#867,d_first_dom#868,d_last_dom#869,d_same_day_ly#870,d_same_day_lq#871,d_current_day#872,... 4 more fields] parquet\n      :     :     +- Relation spark_catalog.tpcds_100.web_sales[ws_sold_time_sk#132,ws_ship_date_sk#133,ws_item_sk#134,ws_bill_customer_sk#135,ws_bill_cdemo_sk#136,ws_bill_hdemo_sk#137,ws_bill_addr_sk#138,ws_ship_customer_sk#139,ws_ship_cdemo_sk#140,ws_ship_hdemo_sk#141,ws_ship_addr_sk#142,ws_web_page_sk#143,ws_web_site_sk#144,ws_ship_mode_sk#145,ws_warehouse_sk#146,ws_promo_sk#147,ws_order_number#148L,ws_quantity#149,ws_wholesale_cost#150,ws_list_price#151,ws_sales_price#152,ws_ext_discount_amt#153,ws_ext_sales_price#154,ws_ext_wholesale_cost#155,... 10 more fields] parquet\n      :     +- Project [d_date_sk#849]\n      :        +- Filter ((isnotnull(d_year#855) AND ((d_year#855 >= 1998) AND (d_year#855 <= 2000))) AND isnotnull(d_date_sk#849))\n      :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#849,d_date_id#850,d_date#851,d_month_seq#852,d_week_seq#853,d_quarter_seq#854,d_year#855,d_dow#856,d_moy#857,d_dom#858,d_qoy#859,d_fy_year#860,d_fy_quarter_seq#861,d_fy_week_seq#862,d_day_name#863,d_quarter_name#864,d_holiday#865,d_weekend#866,d_following_holiday#867,d_first_dom#868,d_last_dom#869,d_same_day_ly#870,d_same_day_lq#871,d_current_day#872,... 4 more fields] parquet\n      +- Project [i_item_sk#827, i_brand_id#834, i_class_id#836, i_category_id#838]\n         +- Filter isnotnull(i_item_sk#827)\n            +- Relation spark_catalog.tpcds_100.item[i_item_sk#827,i_item_id#828,i_rec_start_date#829,i_rec_end_date#830,i_item_desc#831,i_current_price#832,i_wholesale_cost#833,i_brand_id#834,i_brand#835,i_class_id#836,i_class#837,i_category_id#838,i_category#839,i_manufact_id#840,i_manufact#841,i_size#842,i_formulation#843,i_color#844,i_units#845,i_container#846,i_manager_id#847,i_product_name#848] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "4" : {
            "sign" : -90813030,
            "className" : "org.apache.spark.sql.execution.adaptive.ShuffleQueryStageExec",
            "sizeInBytes" : 1379777760,
            "rowCount" : 43118055,
            "isRuntime" : true,
            "predicate" : " (unknown) ShuffleQueryStage Output [3]: [i_brand_id#834, i_class_id#836, i_category_id#838] Arguments: 48 "
          },
          "1" : {
            "sign" : 928429193,
            "className" : "org.apache.spark.sql.execution.SortExec",
            "sizeInBytes" : -1,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Input [3]: [brand_id#742, class_id#743, category_id#744] Arguments: [coalesce(brand_id#742, 0) ASC NULLS FIRST, isnull(brand_id#742) ASC NULLS FIRST, coalesce(class_id#743, 0) ASC NULLS FIRST, isnull(class_id#743) ASC NULLS FIRST, coalesce(category_id#744, 0) ASC NULLS FIRST, isnull(category_id#744) ASC NULLS FIRST], false, 0 "
          },
          "0" : {
            "sign" : -652596640,
            "className" : "org.apache.spark.sql.execution.joins.SortMergeJoinExec",
            "sizeInBytes" : 2739200,
            "rowCount" : 136960,
            "isRuntime" : false,
            "predicate" : " (unknown) SortMergeJoin Left keys [6]: [coalesce(brand_id#742, 0), isnull(brand_id#742), coalesce(class_id#743, 0), isnull(class_id#743), coalesce(category_id#744, 0), isnull(category_id#744)] Right keys [6]: [coalesce(i_brand_id#834, 0), isnull(i_brand_id#834), coalesce(i_class_id#836, 0), isnull(i_class_id#836), coalesce(i_category_id#838, 0), isnull(i_category_id#838)] Join type: LeftSemi Join condition: None "
          },
          "2" : {
            "sign" : 67050474,
            "className" : "org.apache.spark.sql.execution.adaptive.ShuffleQueryStageExec",
            "sizeInBytes" : 362688,
            "rowCount" : 11334,
            "isRuntime" : true,
            "predicate" : " (unknown) ShuffleQueryStage Output [3]: [brand_id#742, class_id#743, category_id#744] Arguments: 75 "
          },
          "3" : {
            "sign" : 302980221,
            "className" : "org.apache.spark.sql.execution.SortExec",
            "sizeInBytes" : -1,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Input [3]: [i_brand_id#834, i_class_id#836, i_category_id#838] Arguments: [coalesce(i_brand_id#834, 0) ASC NULLS FIRST, isnull(i_brand_id#834) ASC NULLS FIRST, coalesce(i_class_id#836, 0) ASC NULLS FIRST, isnull(i_class_id#836) ASC NULLS FIRST, coalesce(i_category_id#838, 0) ASC NULLS FIRST, isnull(i_category_id#838) ASC NULLS FIRST], false, 0 "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "ShuffleQueryStage",
          "toId" : 1,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Sort",
          "toId" : 0,
          "toName" : "SortMergeJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "ShuffleQueryStage",
          "toId" : 3,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Sort",
          "toId" : 0,
          "toName" : "SortMergeJoin",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "SortMergeJoin [coalesce(brand_id#742, 0), isnull(brand_id#742), coalesce(class_id#743, 0), isnull(class_id#743), coalesce(category_id#744, 0), isnull(category_id#744)], [coalesce(i_brand_id#834, 0), isnull(i_brand_id#834), coalesce(i_class_id#836, 0), isnull(i_class_id#836), coalesce(i_category_id#838, 0), isnull(i_category_id#838)], LeftSemi\n:- Sort [coalesce(brand_id#742, 0) ASC NULLS FIRST, isnull(brand_id#742) ASC NULLS FIRST, coalesce(class_id#743, 0) ASC NULLS FIRST, isnull(class_id#743) ASC NULLS FIRST, coalesce(category_id#744, 0) ASC NULLS FIRST, isnull(category_id#744) ASC NULLS FIRST], false, 0\n:  +- ShuffleQueryStage 75\n:     +- Exchange hashpartitioning(coalesce(brand_id#742, 0), isnull(brand_id#742), coalesce(class_id#743, 0), isnull(class_id#743), coalesce(category_id#744, 0), isnull(category_id#744), 200), ENSURE_REQUIREMENTS, [plan_id=10347]\n:        +- *(51) HashAggregate(keys=[brand_id#742, class_id#743, category_id#744], functions=[], output=[brand_id#742, class_id#743, category_id#744])\n:           +- AQEShuffleRead coalesced\n:              +- ShuffleQueryStage 68\n:                 +- Exchange hashpartitioning(brand_id#742, class_id#743, category_id#744, 200), ENSURE_REQUIREMENTS, [plan_id=9348]\n:                    +- *(47) HashAggregate(keys=[brand_id#742, class_id#743, category_id#744], functions=[], output=[brand_id#742, class_id#743, category_id#744])\n:                       +- *(47) Project [i_brand_id#762 AS brand_id#742, i_class_id#764 AS class_id#743, i_category_id#766 AS category_id#744]\n:                          +- *(47) BroadcastHashJoin [ss_item_sk#48], [i_item_sk#755], Inner, BuildRight, false\n:                             :- *(47) Project [ss_item_sk#48]\n:                             :  +- *(47) BroadcastHashJoin [ss_sold_date_sk#69], [d_date_sk#70], Inner, BuildRight, false\n:                             :     :- *(47) Filter isnotnull(ss_item_sk#48)\n:                             :     :  +- *(47) ColumnarToRow\n:                             :     :     +- FileScan parquet spark_catalog.tpcds_100.store_sales[ss_item_sk#48,ss_sold_date_sk#69] Batched: true, DataFilters: [isnotnull(ss_item_sk#48)], Format: Parquet, Location: InMemoryFileIndex(1823 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/store_..., PartitionFilters: [isnotnull(ss_sold_date_sk#69), dynamicpruningexpression(ss_sold_date_sk#69 IN dynamicpruning#1292)], PushedFilters: [IsNotNull(ss_item_sk)], ReadSchema: struct<ss_item_sk:int>\n:                             :     :           +- ReusedSubquery SubqueryBroadcast dynamicpruning#1292, 0, [d_date_sk#799], [id=#4500]\n:                             :     +- BroadcastQueryStage 0\n:                             :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=1714]\n:                             :           +- *(1) Project [d_date_sk#70]\n:                             :              +- *(1) Filter (((isnotnull(d_year#76) AND (d_year#76 >= 1998)) AND (d_year#76 <= 2000)) AND isnotnull(d_date_sk#70))\n:                             :                 +- *(1) ColumnarToRow\n:                             :                    +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#70,d_year#76] Batched: true, DataFilters: [isnotnull(d_year#76), (d_year#76 >= 1998), (d_year#76 <= 2000), isnotnull(d_date_sk#70)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), GreaterThanOrEqual(d_year,1998), LessThanOrEqual(d_year,2000), IsNotNull(d_da..., ReadSchema: struct<d_date_sk:int,d_year:int>\n:                             +- BroadcastQueryStage 61\n:                                +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=8021]\n:                                   +- *(37) SortMergeJoin [coalesce(i_brand_id#762, 0), isnull(i_brand_id#762), coalesce(i_class_id#764, 0), isnull(i_class_id#764), coalesce(i_category_id#766, 0), isnull(i_category_id#766)], [coalesce(i_brand_id#784, 0), isnull(i_brand_id#784), coalesce(i_class_id#786, 0), isnull(i_class_id#786), coalesce(i_category_id#788, 0), isnull(i_category_id#788)], LeftSemi\n:                                      :- *(35) Sort [coalesce(i_brand_id#762, 0) ASC NULLS FIRST, isnull(i_brand_id#762) ASC NULLS FIRST, coalesce(i_class_id#764, 0) ASC NULLS FIRST, isnull(i_class_id#764) ASC NULLS FIRST, coalesce(i_category_id#766, 0) ASC NULLS FIRST, isnull(i_category_id#766) ASC NULLS FIRST], false, 0\n:                                      :  +- AQEShuffleRead coalesced\n:                                      :     +- ShuffleQueryStage 1\n:                                      :        +- Exchange hashpartitioning(coalesce(i_brand_id#762, 0), isnull(i_brand_id#762), coalesce(i_class_id#764, 0), isnull(i_class_id#764), coalesce(i_category_id#766, 0), isnull(i_category_id#766), 200), ENSURE_REQUIREMENTS, [plan_id=1733]\n:                                      :           +- *(2) Filter (((isnotnull(i_item_sk#755) AND isnotnull(i_brand_id#762)) AND isnotnull(i_class_id#764)) AND isnotnull(i_category_id#766))\n:                                      :              +- *(2) ColumnarToRow\n:                                      :                 +- FileScan parquet spark_catalog.tpcds_100.item[i_item_sk#755,i_brand_id#762,i_class_id#764,i_category_id#766] Batched: true, DataFilters: [isnotnull(i_item_sk#755), isnotnull(i_brand_id#762), isnotnull(i_class_id#764), isnotnull(i_cate..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/item], PartitionFilters: [], PushedFilters: [IsNotNull(i_item_sk), IsNotNull(i_brand_id), IsNotNull(i_class_id), IsNotNull(i_category_id)], ReadSchema: struct<i_item_sk:int,i_brand_id:int,i_class_id:int,i_category_id:int>\n:                                      +- *(36) Sort [coalesce(i_brand_id#784, 0) ASC NULLS FIRST, isnull(i_brand_id#784) ASC NULLS FIRST, coalesce(i_class_id#786, 0) ASC NULLS FIRST, isnull(i_class_id#786) ASC NULLS FIRST, coalesce(i_category_id#788, 0) ASC NULLS FIRST, isnull(i_category_id#788) ASC NULLS FIRST], false, 0\n:                                         +- AQEShuffleRead coalesced\n:                                            +- ShuffleQueryStage 47\n:                                               +- Exchange hashpartitioning(coalesce(i_brand_id#784, 0), isnull(i_brand_id#784), coalesce(i_class_id#786, 0), isnull(i_class_id#786), coalesce(i_category_id#788, 0), isnull(i_category_id#788), 200), ENSURE_REQUIREMENTS, [plan_id=4537]\n:                                                  +- *(27) Project [i_brand_id#784, i_class_id#786, i_category_id#788]\n:                                                     +- *(27) BroadcastHashJoin [cs_item_sk#112], [i_item_sk#777], Inner, BuildRight, false\n:                                                        :- *(27) Project [cs_item_sk#112]\n:                                                        :  +- *(27) BroadcastHashJoin [cs_sold_date_sk#131], [d_date_sk#799], Inner, BuildRight, false\n:                                                        :     :- *(27) Filter isnotnull(cs_item_sk#112)\n:                                                        :     :  +- *(27) ColumnarToRow\n:                                                        :     :     +- FileScan parquet spark_catalog.tpcds_100.catalog_sales[cs_item_sk#112,cs_sold_date_sk#131] Batched: true, DataFilters: [isnotnull(cs_item_sk#112)], Format: Parquet, Location: InMemoryFileIndex(1836 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/catalo..., PartitionFilters: [isnotnull(cs_sold_date_sk#131), dynamicpruningexpression(cs_sold_date_sk#131 IN dynamicpruning#1..., PushedFilters: [IsNotNull(cs_item_sk)], ReadSchema: struct<cs_item_sk:int>\n:                                                        :     :           +- SubqueryBroadcast dynamicpruning#1292, 0, [d_date_sk#799], [id=#4500]\n:                                                        :     :              +- AdaptiveSparkPlan isFinalPlan=true\n                                                                                 +- == Final Plan ==\n                                                                                    BroadcastQueryStage 1\n                                                                                    +- ReusedExchange [d_date_sk#799], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=1714]\n                                                                                 +- == Initial Plan ==\n                                                                                    BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=4497]\n                                                                                    +- Project [d_date_sk#799]\n                                                                                       +- Filter (((isnotnull(d_year#805) AND (d_year#805 >= 1998)) AND (d_year#805 <= 2000)) AND isnotnull(d_date_sk#799))\n                                                                                          +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#799,d_year#805] Batched: true, DataFilters: [isnotnull(d_year#805), (d_year#805 >= 1998), (d_year#805 <= 2000), isnotnull(d_date_sk#799)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), GreaterThanOrEqual(d_year,1998), LessThanOrEqual(d_year,2000), IsNotNull(d_da..., ReadSchema: struct<d_date_sk:int,d_year:int>\n:                                                        :     +- BroadcastQueryStage 3\n:                                                        :        +- ReusedExchange [d_date_sk#799], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=1714]\n:                                                        +- BroadcastQueryStage 4\n:                                                           +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=1773]\n:                                                              +- *(4) Filter isnotnull(i_item_sk#777)\n:                                                                 +- *(4) ColumnarToRow\n:                                                                    +- FileScan parquet spark_catalog.tpcds_100.item[i_item_sk#777,i_brand_id#784,i_class_id#786,i_category_id#788] Batched: true, DataFilters: [isnotnull(i_item_sk#777)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/item], PartitionFilters: [], PushedFilters: [IsNotNull(i_item_sk)], ReadSchema: struct<i_item_sk:int,i_brand_id:int,i_class_id:int,i_category_id:int>\n+- Sort [coalesce(i_brand_id#834, 0) ASC NULLS FIRST, isnull(i_brand_id#834) ASC NULLS FIRST, coalesce(i_class_id#836, 0) ASC NULLS FIRST, isnull(i_class_id#836) ASC NULLS FIRST, coalesce(i_category_id#838, 0) ASC NULLS FIRST, isnull(i_category_id#838) ASC NULLS FIRST], false, 0\n   +- ShuffleQueryStage 48\n      +- Exchange hashpartitioning(coalesce(i_brand_id#834, 0), isnull(i_brand_id#834), coalesce(i_class_id#836, 0), isnull(i_class_id#836), coalesce(i_category_id#838, 0), isnull(i_category_id#838), 200), ENSURE_REQUIREMENTS, [plan_id=4613]\n         +- *(28) Project [i_brand_id#834, i_class_id#836, i_category_id#838]\n            +- *(28) BroadcastHashJoin [ws_item_sk#134], [i_item_sk#827], Inner, BuildRight, false\n               :- *(28) Project [ws_item_sk#134]\n               :  +- *(28) BroadcastHashJoin [ws_sold_date_sk#165], [d_date_sk#849], Inner, BuildRight, false\n               :     :- *(28) Filter isnotnull(ws_item_sk#134)\n               :     :  +- *(28) ColumnarToRow\n               :     :     +- FileScan parquet spark_catalog.tpcds_100.web_sales[ws_item_sk#134,ws_sold_date_sk#165] Batched: true, DataFilters: [isnotnull(ws_item_sk#134)], Format: Parquet, Location: InMemoryFileIndex(1823 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/web_sa..., PartitionFilters: [isnotnull(ws_sold_date_sk#165), dynamicpruningexpression(ws_sold_date_sk#165 IN dynamicpruning#1..., PushedFilters: [IsNotNull(ws_item_sk)], ReadSchema: struct<ws_item_sk:int>\n               :     :           +- ReusedSubquery SubqueryBroadcast dynamicpruning#1292, 0, [d_date_sk#799], [id=#4500]\n               :     +- BroadcastQueryStage 6\n               :        +- ReusedExchange [d_date_sk#849], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=1714]\n               +- BroadcastQueryStage 8\n                  +- ReusedExchange [i_item_sk#827, i_brand_id#834, i_class_id#836, i_category_id#838], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=1773]\n"
      },
      "IM" : {
        "inputSizeInBytes" : 1380140448,
        "inputRowCount" : 43129389
      },
      "InitialPartitionNum" : 200,
      "PD" : {
        "2" : [ 177962, 455930, 415323, 324034, 407180, 578113, 259800, 210766, 416594, 365097, 722932, 430581, 737269, 1031975, 1514187, 472059, 101032, 459828, 347329, 114427, 94836, 1079666, 1326142, 383040, 175045, 486302, 702614, 800093, 2890585, 749715, 100494, 720165, 530316, 795278, 705228, 310364, 730188, 287903, 255104, 608403, 493741, 197579, 98211, 1196389, 851488, 408258, 740122, 162471, 235750, 429841, 280551, 434095, 986907, 459535, 521411, 444089, 345779, 644089, 1511511, 259033, 857504, 440487, 655905, 522602, 1260769, 704242, 355941, 572333, 482841, 779237, 447588, 350687, 323737, 1316494, 306270, 639573, 819553, 701140, 669174, 780010, 675042, 476951, 636674, 322479, 897583, 280582, 223958, 573984, 561763, 119797, 430493, 121994, 311747, 117433, 377765, 318296, 740667, 431248, 547706, 508009, 414691, 367457, 723737, 442906, 583473, 347572, 1269089, 287286, 380605, 786487, 704711, 1465276, 758753, 673171, 160802, 291861, 864733, 186361, 546087, 1459274, 1695574, 115478, 421893, 386121, 312819, 164972, 1072990, 214957, 152503, 420284, 300056, 868375, 940076, 349342, 205208, 928322, 195265, 461329, 359228, 419971, 560162, 326400, 702646, 957888, 320780, 321516, 414771, 187523, 870857, 1055493, 342091, 506784, 282728, 1045719, 262333, 128426, 495313, 750638, 98964, 1366471, 574893, 319167, 147634, 1547306, 890810, 507583, 261595, 408664, 943050, 676186, 857526, 578999, 449016, 240998, 433603, 682640, 120305, 912938, 1129760, 525413, 547769, 609464, 611740, 324072, 206504, 2926245, 295669, 919509, 366206, 535787, 794086, 708510, 622156, 383847, 1071951, 677651, 914990, 923202, 596798, 344327 ],
        "4" : [ 717, 789, 789, 868, 789, 868, 789, 789, 868, 593, 955, 868, 955, 868, 868, 789, 868, 789, 789, 789, 789, 1051, 955, 868, 868, 868, 868, 868, 868, 868, 717, 955, 789, 789, 955, 789, 955, 868, 652, 868, 789, 717, 789, 955, 789, 717, 789, 789, 868, 717, 789, 717, 955, 955, 868, 717, 868, 717, 868, 789, 955, 955, 789, 789, 789, 789, 652, 789, 955, 955, 868, 789, 789, 868, 717, 868, 955, 868, 717, 1051, 868, 789, 868, 955, 868, 868, 955, 789, 1156, 868, 717, 593, 789, 652, 789, 789, 868, 717, 789, 868, 955, 717, 717, 955, 1051, 789, 868, 868, 717, 789, 868, 717, 652, 789, 955, 789, 789, 593, 868, 868, 868, 717, 868, 868, 717, 868, 717, 868, 652, 1156, 789, 868, 789, 955, 868, 789, 789, 717, 789, 868, 868, 1051, 789, 955, 717, 717, 868, 652, 789, 868, 1051, 789, 789, 789, 868, 717, 789, 955, 789, 955, 717, 789, 868, 868, 868, 789, 717, 868, 955, 789, 955, 868, 789, 717, 717, 868, 652, 1051, 955, 789, 717, 1051, 868, 955, 868, 789, 868, 868, 789, 955, 955, 868, 789, 868, 868, 868, 955, 789, 868, 789 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 12,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 21 ],
      "Objectives" : {
        "DurationInMs" : 18899,
        "TotalTasksDurationInMs" : 31946,
        "IOBytes" : {
          "Total" : 110659727,
          "Details" : {
            "IR" : 0,
            "IW" : 0,
            "SR" : 110659727,
            "SW" : 0
          }
        }
      }
    },
    "8" : {
      "QSLogical" : {
        "operators" : {
          "4" : {
            "sign" : -1744486121,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 1151737984,
                "rowCount" : 71983624
              },
              "compileTime" : {
                "sizeInBytes" : 1151737984,
                "rowCount" : 71983624
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_item_sk#134, ws_sold_date_sk#165] "
          },
          "5" : {
            "sign" : -899561730,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 14972593792,
                "rowCount" : 71983624
              },
              "compileTime" : {
                "sizeInBytes" : 14972593792,
                "rowCount" : 71983624
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(ws_item_sk#134) AND isnotnull(ws_sold_date_sk#165)) AND dynamicpruning#1293 [ws_sold_date_sk#165]) "
          },
          "6" : {
            "sign" : 1159919426,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 14972593792,
                "rowCount" : 71983624
              },
              "compileTime" : {
                "sizeInBytes" : 14972593792,
                "rowCount" : 71983624
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ws_sold_time_sk#132, ws_ship_date_sk#133, ws_item_sk#134, ws_bill_customer_sk#135, ws_bill_cdemo_sk#136, ws_bill_hdemo_sk#137, ws_bill_addr_sk#138, ws_ship_customer_sk#139, ws_ship_cdemo_sk#140, ws_ship_hdemo_sk#141, ws_ship_addr_sk#142, ws_web_page_sk#143, ws_web_site_sk#144, ws_ship_mode_sk#145, ws_warehouse_sk#146, ws_promo_sk#147, ws_order_number#148L, ws_quantity#149, ws_wholesale_cost#150, ws_list_price#151, ws_sales_price#152, ws_ext_discount_amt#153, ws_ext_sales_price#154, ws_ext_wholesale_cost#155, ... 10 more fields], `spark_catalog`.`tpcds_100`.`web_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "1" : {
            "sign" : 1475031900,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 2013673340,
                "rowCount" : 71916905
              },
              "compileTime" : {
                "sizeInBytes" : 2013673340,
                "rowCount" : 71916905
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ws_item_sk#134 = i_item_sk#827) "
          },
          "0" : {
            "sign" : -403691066,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 1438338100,
                "rowCount" : 71916905
              },
              "compileTime" : {
                "sizeInBytes" : 1438338100,
                "rowCount" : 71916905
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_brand_id#834, i_class_id#836, i_category_id#838] "
          },
          "2" : {
            "sign" : -1823215469,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 833947260,
                "rowCount" : 69495605
              },
              "compileTime" : {
                "sizeInBytes" : 833947260,
                "rowCount" : 69495605
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_item_sk#134] "
          },
          "3" : {
            "sign" : -1465588296,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 1389912100,
                "rowCount" : 69495605
              },
              "compileTime" : {
                "sizeInBytes" : 1389912100,
                "rowCount" : 69495605
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ws_sold_date_sk#165 = d_date_sk#849) "
          }
        },
        "links" : [ {
          "fromId" : 6,
          "fromName" : "LogicalRelation",
          "toId" : 5,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Filter",
          "toId" : 4,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Project",
          "toId" : 3,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Join",
          "toId" : 2,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Project",
          "toId" : 1,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Join",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [i_brand_id#834, i_class_id#836, i_category_id#838]\n+- Join Inner, (ws_item_sk#134 = i_item_sk#827)\n   :- Project [ws_item_sk#134]\n   :  +- Join Inner, (ws_sold_date_sk#165 = d_date_sk#849)\n   :     :- Project [ws_item_sk#134, ws_sold_date_sk#165]\n   :     :  +- Filter ((isnotnull(ws_item_sk#134) AND isnotnull(ws_sold_date_sk#165)) AND dynamicpruning#1293 [ws_sold_date_sk#165])\n   :     :     :  +- Project [d_date_sk#849]\n   :     :     :     +- Filter ((isnotnull(d_year#855) AND ((d_year#855 >= 1998) AND (d_year#855 <= 2000))) AND isnotnull(d_date_sk#849))\n   :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#849,d_date_id#850,d_date#851,d_month_seq#852,d_week_seq#853,d_quarter_seq#854,d_year#855,d_dow#856,d_moy#857,d_dom#858,d_qoy#859,d_fy_year#860,d_fy_quarter_seq#861,d_fy_week_seq#862,d_day_name#863,d_quarter_name#864,d_holiday#865,d_weekend#866,d_following_holiday#867,d_first_dom#868,d_last_dom#869,d_same_day_ly#870,d_same_day_lq#871,d_current_day#872,... 4 more fields] parquet\n   :     :     +- Relation spark_catalog.tpcds_100.web_sales[ws_sold_time_sk#132,ws_ship_date_sk#133,ws_item_sk#134,ws_bill_customer_sk#135,ws_bill_cdemo_sk#136,ws_bill_hdemo_sk#137,ws_bill_addr_sk#138,ws_ship_customer_sk#139,ws_ship_cdemo_sk#140,ws_ship_hdemo_sk#141,ws_ship_addr_sk#142,ws_web_page_sk#143,ws_web_site_sk#144,ws_ship_mode_sk#145,ws_warehouse_sk#146,ws_promo_sk#147,ws_order_number#148L,ws_quantity#149,ws_wholesale_cost#150,ws_list_price#151,ws_sales_price#152,ws_ext_discount_amt#153,ws_ext_sales_price#154,ws_ext_wholesale_cost#155,... 10 more fields] parquet\n   :     +- Project [d_date_sk#849]\n   :        +- Filter ((isnotnull(d_year#855) AND ((d_year#855 >= 1998) AND (d_year#855 <= 2000))) AND isnotnull(d_date_sk#849))\n   :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#849,d_date_id#850,d_date#851,d_month_seq#852,d_week_seq#853,d_quarter_seq#854,d_year#855,d_dow#856,d_moy#857,d_dom#858,d_qoy#859,d_fy_year#860,d_fy_quarter_seq#861,d_fy_week_seq#862,d_day_name#863,d_quarter_name#864,d_holiday#865,d_weekend#866,d_following_holiday#867,d_first_dom#868,d_last_dom#869,d_same_day_ly#870,d_same_day_lq#871,d_current_day#872,... 4 more fields] parquet\n   +- Project [i_item_sk#827, i_brand_id#834, i_class_id#836, i_category_id#838]\n      +- Filter isnotnull(i_item_sk#827)\n         +- Relation spark_catalog.tpcds_100.item[i_item_sk#827,i_item_id#828,i_rec_start_date#829,i_rec_end_date#830,i_item_desc#831,i_current_price#832,i_wholesale_cost#833,i_brand_id#834,i_brand#835,i_class_id#836,i_class#837,i_category_id#838,i_category#839,i_manufact_id#840,i_manufact#841,i_size#842,i_formulation#843,i_color#844,i_units#845,i_container#846,i_manager_id#847,i_product_name#848] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "4" : {
            "sign" : 1519357400,
            "className" : "org.apache.spark.sql.execution.FilterExec",
            "sizeInBytes" : 1151737984,
            "rowCount" : 71983624,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Input [2]: [ws_item_sk#134, ws_sold_date_sk#165] Condition : isnotnull(ws_item_sk#134) "
          },
          "5" : {
            "sign" : -966616147,
            "className" : "org.apache.spark.sql.execution.FileSourceScanExec",
            "sizeInBytes" : 1151737984,
            "rowCount" : 71983624,
            "isRuntime" : false,
            "predicate" : " (unknown) Scan parquet spark_catalog.tpcds_100.web_sales Output [2]: [ws_item_sk#134, ws_sold_date_sk#165] Batched: true Location: InMemoryFileIndex [hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/web_sales/ws_sold_date_sk=2450816, ... 1822 entries] PartitionFilters: [isnotnull(ws_sold_date_sk#165), dynamicpruningexpression(ws_sold_date_sk#165 IN dynamicpruning#1292)] PushedFilters: [IsNotNull(ws_item_sk)] ReadSchema: struct<ws_item_sk:int> "
          },
          "6" : {
            "sign" : -312373549,
            "className" : "org.apache.spark.sql.execution.adaptive.BroadcastQueryStageExec",
            "sizeInBytes" : 1057344,
            "rowCount" : 1096,
            "isRuntime" : true,
            "predicate" : " (unknown) BroadcastQueryStage Output [1]: [d_date_sk#849] Arguments: 6 "
          },
          "1" : {
            "sign" : 1772932996,
            "className" : "org.apache.spark.sql.execution.joins.BroadcastHashJoinExec",
            "sizeInBytes" : 2013673340,
            "rowCount" : 71916905,
            "isRuntime" : false,
            "predicate" : " (unknown) BroadcastHashJoin Left keys [1]: [ws_item_sk#134] Right keys [1]: [i_item_sk#827] Join type: Inner Join condition: None "
          },
          "0" : {
            "sign" : 1639448354,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 1438338100,
            "rowCount" : 71916905,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [3]: [i_brand_id#834, i_class_id#836, i_category_id#838] Input [5]: [ws_item_sk#134, i_item_sk#827, i_brand_id#834, i_class_id#836, i_category_id#838] "
          },
          "2" : {
            "sign" : -613130097,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 833947260,
            "rowCount" : 69495605,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [1]: [ws_item_sk#134] Input [3]: [ws_item_sk#134, ws_sold_date_sk#165, d_date_sk#849] "
          },
          "7" : {
            "sign" : 42973202,
            "className" : "org.apache.spark.sql.execution.adaptive.BroadcastQueryStageExec",
            "sizeInBytes" : 18409216,
            "rowCount" : 204000,
            "isRuntime" : true,
            "predicate" : " (unknown) BroadcastQueryStage Output [4]: [i_item_sk#827, i_brand_id#834, i_class_id#836, i_category_id#838] Arguments: 8 "
          },
          "3" : {
            "sign" : -1657552780,
            "className" : "org.apache.spark.sql.execution.joins.BroadcastHashJoinExec",
            "sizeInBytes" : 1389912100,
            "rowCount" : 69495605,
            "isRuntime" : false,
            "predicate" : " (unknown) BroadcastHashJoin Left keys [1]: [ws_sold_date_sk#165] Right keys [1]: [d_date_sk#849] Join type: Inner Join condition: None "
          }
        },
        "links" : [ {
          "fromId" : 5,
          "fromName" : "Scan parquet spark_catalog.tpcds_100.web_sales",
          "toId" : 4,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Filter",
          "toId" : 3,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "BroadcastQueryStage",
          "toId" : 3,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "BroadcastHashJoin",
          "toId" : 2,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Project",
          "toId" : 1,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "BroadcastQueryStage",
          "toId" : 1,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "BroadcastHashJoin",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [i_brand_id#834, i_class_id#836, i_category_id#838]\n+- BroadcastHashJoin [ws_item_sk#134], [i_item_sk#827], Inner, BuildRight, false\n   :- Project [ws_item_sk#134]\n   :  +- BroadcastHashJoin [ws_sold_date_sk#165], [d_date_sk#849], Inner, BuildRight, false\n   :     :- Filter isnotnull(ws_item_sk#134)\n   :     :  +- FileScan parquet spark_catalog.tpcds_100.web_sales[ws_item_sk#134,ws_sold_date_sk#165] Batched: true, DataFilters: [isnotnull(ws_item_sk#134)], Format: Parquet, Location: InMemoryFileIndex(1823 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/web_sa..., PartitionFilters: [isnotnull(ws_sold_date_sk#165), dynamicpruningexpression(ws_sold_date_sk#165 IN dynamicpruning#1..., PushedFilters: [IsNotNull(ws_item_sk)], ReadSchema: struct<ws_item_sk:int>\n   :     :        +- ReusedSubquery SubqueryBroadcast dynamicpruning#1292, 0, [d_date_sk#799], [id=#4500]\n   :     +- BroadcastQueryStage 6\n   :        +- ReusedExchange [d_date_sk#849], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=1714]\n   +- BroadcastQueryStage 8\n      +- ReusedExchange [i_item_sk#827, i_brand_id#834, i_class_id#836, i_category_id#838], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=1773]\n"
      },
      "IM" : {
        "inputSizeInBytes" : 1171204544,
        "inputRowCount" : 72188720
      },
      "InitialPartitionNum" : 0,
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 1,
        "FinishedTasksNum" : 4,
        "FinishedTasksTotalTimeInMs" : 5035.0,
        "FinishedTasksDistributionInMs" : [ 1225.0, 1262.0, 1266.0, 1282.0, 1282.0 ]
      },
      "QueryStageOptimizationId" : 8,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 11 ],
      "Objectives" : {
        "DurationInMs" : 15497,
        "TotalTasksDurationInMs" : 59893,
        "IOBytes" : {
          "Total" : 299058992,
          "Details" : {
            "IR" : 188558210,
            "IW" : 0,
            "SR" : 0,
            "SW" : 110500782
          }
        }
      }
    },
    "19" : {
      "QSLogical" : {
        "operators" : {
          "0" : {
            "sign" : -554368650,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 383488,
                "rowCount" : 5992
              },
              "compileTime" : {
                "sizeInBytes" : 383488,
                "rowCount" : 5992
              }
            },
            "isRuntime" : true,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(sales#731) AND (cast(sales#731 as decimal(32,6)) > cast(scalar-subquery#735 [] as decimal(32,6)))) "
          },
          "1" : {
            "sign" : -1581118840,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 431424,
                "rowCount" : 5992
              },
              "compileTime" : {
                "sizeInBytes" : 21787077332313216,
                "rowCount" : -1
              }
            },
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [i_brand_id#1082, i_class_id#1084, i_category_id#1086], [store AS channel#730, i_brand_id#1082, i_class_id#1084, i_category_id#1086, sum((cast(ss_quantity#1061 as decimal(10,0)) * ss_list_price#1063)) AS sales#731, count(1) AS number_sales#732L], HashAggregate(keys=[i_brand_id#1082, i_class_id#1084, i_category_id#1086], functions=[sum((cast(ss_quantity#1061 as decimal(10,0)) * ss_list_price#1063)), count(1)]) "
          }
        },
        "links" : [ {
          "fromId" : 1,
          "fromName" : "LogicalQueryStage",
          "toId" : 0,
          "toName" : "Filter",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Filter (isnotnull(sales#731) AND (cast(sales#731 as decimal(32,6)) > cast(scalar-subquery#735 [] as decimal(32,6))))\n:  +- Aggregate [avg((cast(quantity#746 as decimal(10,0)) * list_price#747)) AS average_sales#752]\n:     +- Union false, false\n:        :- Project [ss_quantity#886 AS quantity#746, ss_list_price#888 AS list_price#747]\n:        :  +- Join Inner, (ss_sold_date_sk#899 = d_date_sk#900)\n:        :     :- Project [ss_quantity#886, ss_list_price#888, ss_sold_date_sk#899]\n:        :     :  +- Filter (isnotnull(ss_sold_date_sk#899) AND dynamicpruning#1288 [ss_sold_date_sk#899])\n:        :     :     :  +- Project [d_date_sk#900]\n:        :     :     :     +- Filter ((isnotnull(d_year#906) AND ((d_year#906 >= 1998) AND (d_year#906 <= 2000))) AND isnotnull(d_date_sk#900))\n:        :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#900,d_date_id#901,d_date#902,d_month_seq#903,d_week_seq#904,d_quarter_seq#905,d_year#906,d_dow#907,d_moy#908,d_dom#909,d_qoy#910,d_fy_year#911,d_fy_quarter_seq#912,d_fy_week_seq#913,d_day_name#914,d_quarter_name#915,d_holiday#916,d_weekend#917,d_following_holiday#918,d_first_dom#919,d_last_dom#920,d_same_day_ly#921,d_same_day_lq#922,d_current_day#923,... 4 more fields] parquet\n:        :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#877,ss_item_sk#878,ss_customer_sk#879,ss_cdemo_sk#880,ss_hdemo_sk#881,ss_addr_sk#882,ss_store_sk#883,ss_promo_sk#884,ss_ticket_number#885L,ss_quantity#886,ss_wholesale_cost#887,ss_list_price#888,ss_sales_price#889,ss_ext_discount_amt#890,ss_ext_sales_price#891,ss_ext_wholesale_cost#892,ss_ext_list_price#893,ss_ext_tax#894,ss_coupon_amt#895,ss_net_paid#896,ss_net_paid_inc_tax#897,ss_net_profit#898,ss_sold_date_sk#899] parquet\n:        :     +- Project [d_date_sk#900]\n:        :        +- Filter ((isnotnull(d_year#906) AND ((d_year#906 >= 1998) AND (d_year#906 <= 2000))) AND isnotnull(d_date_sk#900))\n:        :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#900,d_date_id#901,d_date#902,d_month_seq#903,d_week_seq#904,d_quarter_seq#905,d_year#906,d_dow#907,d_moy#908,d_dom#909,d_qoy#910,d_fy_year#911,d_fy_quarter_seq#912,d_fy_week_seq#913,d_day_name#914,d_quarter_name#915,d_holiday#916,d_weekend#917,d_following_holiday#918,d_first_dom#919,d_last_dom#920,d_same_day_ly#921,d_same_day_lq#922,d_current_day#923,... 4 more fields] parquet\n:        :- Project [cs_quantity#945 AS quantity#748, cs_list_price#947 AS list_price#749]\n:        :  +- Join Inner, (cs_sold_date_sk#961 = d_date_sk#962)\n:        :     :- Project [cs_quantity#945, cs_list_price#947, cs_sold_date_sk#961]\n:        :     :  +- Filter (isnotnull(cs_sold_date_sk#961) AND dynamicpruning#1289 [cs_sold_date_sk#961])\n:        :     :     :  +- Project [d_date_sk#962]\n:        :     :     :     +- Filter ((isnotnull(d_year#968) AND ((d_year#968 >= 1998) AND (d_year#968 <= 2000))) AND isnotnull(d_date_sk#962))\n:        :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#962,d_date_id#963,d_date#964,d_month_seq#965,d_week_seq#966,d_quarter_seq#967,d_year#968,d_dow#969,d_moy#970,d_dom#971,d_qoy#972,d_fy_year#973,d_fy_quarter_seq#974,d_fy_week_seq#975,d_day_name#976,d_quarter_name#977,d_holiday#978,d_weekend#979,d_following_holiday#980,d_first_dom#981,d_last_dom#982,d_same_day_ly#983,d_same_day_lq#984,d_current_day#985,... 4 more fields] parquet\n:        :     :     +- Relation spark_catalog.tpcds_100.catalog_sales[cs_sold_time_sk#928,cs_ship_date_sk#929,cs_bill_customer_sk#930,cs_bill_cdemo_sk#931,cs_bill_hdemo_sk#932,cs_bill_addr_sk#933,cs_ship_customer_sk#934,cs_ship_cdemo_sk#935,cs_ship_hdemo_sk#936,cs_ship_addr_sk#937,cs_call_center_sk#938,cs_catalog_page_sk#939,cs_ship_mode_sk#940,cs_warehouse_sk#941,cs_item_sk#942,cs_promo_sk#943,cs_order_number#944L,cs_quantity#945,cs_wholesale_cost#946,cs_list_price#947,cs_sales_price#948,cs_ext_discount_amt#949,cs_ext_sales_price#950,cs_ext_wholesale_cost#951,... 10 more fields] parquet\n:        :     +- Project [d_date_sk#962]\n:        :        +- Filter ((isnotnull(d_year#968) AND ((d_year#968 >= 1998) AND (d_year#968 <= 2000))) AND isnotnull(d_date_sk#962))\n:        :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#962,d_date_id#963,d_date#964,d_month_seq#965,d_week_seq#966,d_quarter_seq#967,d_year#968,d_dow#969,d_moy#970,d_dom#971,d_qoy#972,d_fy_year#973,d_fy_quarter_seq#974,d_fy_week_seq#975,d_day_name#976,d_quarter_name#977,d_holiday#978,d_weekend#979,d_following_holiday#980,d_first_dom#981,d_last_dom#982,d_same_day_ly#983,d_same_day_lq#984,d_current_day#985,... 4 more fields] parquet\n:        +- Project [ws_quantity#1007 AS quantity#750, ws_list_price#1009 AS list_price#751]\n:           +- Join Inner, (ws_sold_date_sk#1023 = d_date_sk#1024)\n:              :- Project [ws_quantity#1007, ws_list_price#1009, ws_sold_date_sk#1023]\n:              :  +- Filter (isnotnull(ws_sold_date_sk#1023) AND dynamicpruning#1290 [ws_sold_date_sk#1023])\n:              :     :  +- Project [d_date_sk#1024]\n:              :     :     +- Filter ((isnotnull(d_year#1030) AND ((d_year#1030 >= 1998) AND (d_year#1030 <= 2000))) AND isnotnull(d_date_sk#1024))\n:              :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#1024,d_date_id#1025,d_date#1026,d_month_seq#1027,d_week_seq#1028,d_quarter_seq#1029,d_year#1030,d_dow#1031,d_moy#1032,d_dom#1033,d_qoy#1034,d_fy_year#1035,d_fy_quarter_seq#1036,d_fy_week_seq#1037,d_day_name#1038,d_quarter_name#1039,d_holiday#1040,d_weekend#1041,d_following_holiday#1042,d_first_dom#1043,d_last_dom#1044,d_same_day_ly#1045,d_same_day_lq#1046,d_current_day#1047,... 4 more fields] parquet\n:              :     +- Relation spark_catalog.tpcds_100.web_sales[ws_sold_time_sk#990,ws_ship_date_sk#991,ws_item_sk#992,ws_bill_customer_sk#993,ws_bill_cdemo_sk#994,ws_bill_hdemo_sk#995,ws_bill_addr_sk#996,ws_ship_customer_sk#997,ws_ship_cdemo_sk#998,ws_ship_hdemo_sk#999,ws_ship_addr_sk#1000,ws_web_page_sk#1001,ws_web_site_sk#1002,ws_ship_mode_sk#1003,ws_warehouse_sk#1004,ws_promo_sk#1005,ws_order_number#1006L,ws_quantity#1007,ws_wholesale_cost#1008,ws_list_price#1009,ws_sales_price#1010,ws_ext_discount_amt#1011,ws_ext_sales_price#1012,ws_ext_wholesale_cost#1013,... 10 more fields] parquet\n:              +- Project [d_date_sk#1024]\n:                 +- Filter ((isnotnull(d_year#1030) AND ((d_year#1030 >= 1998) AND (d_year#1030 <= 2000))) AND isnotnull(d_date_sk#1024))\n:                    +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#1024,d_date_id#1025,d_date#1026,d_month_seq#1027,d_week_seq#1028,d_quarter_seq#1029,d_year#1030,d_dow#1031,d_moy#1032,d_dom#1033,d_qoy#1034,d_fy_year#1035,d_fy_quarter_seq#1036,d_fy_week_seq#1037,d_day_name#1038,d_quarter_name#1039,d_holiday#1040,d_weekend#1041,d_following_holiday#1042,d_first_dom#1043,d_last_dom#1044,d_same_day_ly#1045,d_same_day_lq#1046,d_current_day#1047,... 4 more fields] parquet\n+- LogicalQueryStage Aggregate [i_brand_id#1082, i_class_id#1084, i_category_id#1086], [store AS channel#730, i_brand_id#1082, i_class_id#1084, i_category_id#1086, sum((cast(ss_quantity#1061 as decimal(10,0)) * ss_list_price#1063)) AS sales#731, count(1) AS number_sales#732L], HashAggregate(keys=[i_brand_id#1082, i_class_id#1084, i_category_id#1086], functions=[sum((cast(ss_quantity#1061 as decimal(10,0)) * ss_list_price#1063)), count(1)])\n"
      },
      "QSPhysical" : {
        "operators" : {
          "0" : {
            "sign" : 89519106,
            "className" : "org.apache.spark.sql.execution.FilterExec",
            "sizeInBytes" : 383488,
            "rowCount" : 5992,
            "isRuntime" : true,
            "predicate" : " (unknown) Filter Input [6]: [channel#730, i_brand_id#1082, i_class_id#1084, i_category_id#1086, sales#731, number_sales#732L] Condition : (isnotnull(sales#731) AND (cast(sales#731 as decimal(32,6)) > cast(Subquery subquery#735, [id=#825] as decimal(32,6)))) "
          },
          "1" : {
            "sign" : -2139446492,
            "className" : "org.apache.spark.sql.execution.aggregate.HashAggregateExec",
            "sizeInBytes" : 431424,
            "rowCount" : 5992,
            "isRuntime" : true,
            "predicate" : " (unknown) HashAggregate Input [6]: [i_brand_id#1082, i_class_id#1084, i_category_id#1086, sum#1317, isEmpty#1318, count#1319L] Keys [3]: [i_brand_id#1082, i_class_id#1084, i_category_id#1086] Functions [2]: [sum((cast(ss_quantity#1061 as decimal(10,0)) * ss_list_price#1063)), count(1)] Aggregate Attributes [2]: [sum((cast(ss_quantity#1061 as decimal(10,0)) * ss_list_price#1063))#1272, count(1)#753L] Results [6]: [store AS channel#730, i_brand_id#1082, i_class_id#1084, i_category_id#1086, sum((cast(ss_quantity#1061 as decimal(10,0)) * ss_list_price#1063))#1272 AS sales#731, count(1)#753L AS number_sales#732L] "
          },
          "2" : {
            "sign" : 64492482,
            "className" : "org.apache.spark.sql.execution.adaptive.ShuffleQueryStageExec",
            "sizeInBytes" : 21787077332313216,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) ShuffleQueryStage Output [6]: [i_brand_id#1082, i_class_id#1084, i_category_id#1086, sum#1317, isEmpty#1318, count#1319L] Arguments: 99 "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "ShuffleQueryStage",
          "toId" : 1,
          "toName" : "HashAggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "HashAggregate",
          "toId" : 0,
          "toName" : "Filter",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Filter (isnotnull(sales#731) AND (cast(sales#731 as decimal(32,6)) > cast(Subquery subquery#735, [id=#825] as decimal(32,6))))\n:  +- Subquery subquery#735, [id=#825]\n:     +- AdaptiveSparkPlan isFinalPlan=false\n:        +- HashAggregate(keys=[], functions=[avg((cast(quantity#746 as decimal(10,0)) * list_price#747))], output=[average_sales#752])\n:           +- Exchange SinglePartition, ENSURE_REQUIREMENTS, [plan_id=823]\n:              +- HashAggregate(keys=[], functions=[partial_avg((cast(quantity#746 as decimal(10,0)) * list_price#747))], output=[sum#1328, count#1329L])\n:                 +- Union\n:                    :- Project [ss_quantity#886 AS quantity#746, ss_list_price#888 AS list_price#747]\n:                    :  +- BroadcastHashJoin [ss_sold_date_sk#899], [d_date_sk#900], Inner, BuildRight, false\n:                    :     :- FileScan parquet spark_catalog.tpcds_100.store_sales[ss_quantity#886,ss_list_price#888,ss_sold_date_sk#899] Batched: true, DataFilters: [], Format: Parquet, Location: InMemoryFileIndex(1823 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/store_..., PartitionFilters: [isnotnull(ss_sold_date_sk#899), dynamicpruningexpression(ss_sold_date_sk#899 IN dynamicpruning#1..., PushedFilters: [], ReadSchema: struct<ss_quantity:int,ss_list_price:decimal(7,2)>\n:                    :     :     +- SubqueryAdaptiveBroadcast dynamicpruning#1288, 0, true, Project [d_date_sk#900], [d_date_sk#900]\n:                    :     :        +- AdaptiveSparkPlan isFinalPlan=false\n:                    :     :           +- Project [d_date_sk#900]\n:                    :     :              +- Filter (((isnotnull(d_year#906) AND (d_year#906 >= 1998)) AND (d_year#906 <= 2000)) AND isnotnull(d_date_sk#900))\n:                    :     :                 +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#900,d_year#906] Batched: true, DataFilters: [isnotnull(d_year#906), (d_year#906 >= 1998), (d_year#906 <= 2000), isnotnull(d_date_sk#900)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), GreaterThanOrEqual(d_year,1998), LessThanOrEqual(d_year,2000), IsNotNull(d_da..., ReadSchema: struct<d_date_sk:int,d_year:int>\n:                    :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=811]\n:                    :        +- Project [d_date_sk#900]\n:                    :           +- Filter (((isnotnull(d_year#906) AND (d_year#906 >= 1998)) AND (d_year#906 <= 2000)) AND isnotnull(d_date_sk#900))\n:                    :              +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#900,d_year#906] Batched: true, DataFilters: [isnotnull(d_year#906), (d_year#906 >= 1998), (d_year#906 <= 2000), isnotnull(d_date_sk#900)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), GreaterThanOrEqual(d_year,1998), LessThanOrEqual(d_year,2000), IsNotNull(d_da..., ReadSchema: struct<d_date_sk:int,d_year:int>\n:                    :- Project [cs_quantity#945 AS quantity#748, cs_list_price#947 AS list_price#749]\n:                    :  +- BroadcastHashJoin [cs_sold_date_sk#961], [d_date_sk#962], Inner, BuildRight, false\n:                    :     :- FileScan parquet spark_catalog.tpcds_100.catalog_sales[cs_quantity#945,cs_list_price#947,cs_sold_date_sk#961] Batched: true, DataFilters: [], Format: Parquet, Location: InMemoryFileIndex(1836 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/catalo..., PartitionFilters: [isnotnull(cs_sold_date_sk#961), dynamicpruningexpression(cs_sold_date_sk#961 IN dynamicpruning#1..., PushedFilters: [], ReadSchema: struct<cs_quantity:int,cs_list_price:decimal(7,2)>\n:                    :     :     +- SubqueryAdaptiveBroadcast dynamicpruning#1289, 0, true, Project [d_date_sk#962], [d_date_sk#962]\n:                    :     :        +- AdaptiveSparkPlan isFinalPlan=false\n:                    :     :           +- Project [d_date_sk#962]\n:                    :     :              +- Filter (((isnotnull(d_year#968) AND (d_year#968 >= 1998)) AND (d_year#968 <= 2000)) AND isnotnull(d_date_sk#962))\n:                    :     :                 +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#962,d_year#968] Batched: true, DataFilters: [isnotnull(d_year#968), (d_year#968 >= 1998), (d_year#968 <= 2000), isnotnull(d_date_sk#962)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), GreaterThanOrEqual(d_year,1998), LessThanOrEqual(d_year,2000), IsNotNull(d_da..., ReadSchema: struct<d_date_sk:int,d_year:int>\n:                    :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=814]\n:                    :        +- Project [d_date_sk#962]\n:                    :           +- Filter (((isnotnull(d_year#968) AND (d_year#968 >= 1998)) AND (d_year#968 <= 2000)) AND isnotnull(d_date_sk#962))\n:                    :              +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#962,d_year#968] Batched: true, DataFilters: [isnotnull(d_year#968), (d_year#968 >= 1998), (d_year#968 <= 2000), isnotnull(d_date_sk#962)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), GreaterThanOrEqual(d_year,1998), LessThanOrEqual(d_year,2000), IsNotNull(d_da..., ReadSchema: struct<d_date_sk:int,d_year:int>\n:                    +- Project [ws_quantity#1007 AS quantity#750, ws_list_price#1009 AS list_price#751]\n:                       +- BroadcastHashJoin [ws_sold_date_sk#1023], [d_date_sk#1024], Inner, BuildRight, false\n:                          :- FileScan parquet spark_catalog.tpcds_100.web_sales[ws_quantity#1007,ws_list_price#1009,ws_sold_date_sk#1023] Batched: true, DataFilters: [], Format: Parquet, Location: InMemoryFileIndex(1823 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/web_sa..., PartitionFilters: [isnotnull(ws_sold_date_sk#1023), dynamicpruningexpression(ws_sold_date_sk#1023 IN dynamicpruning..., PushedFilters: [], ReadSchema: struct<ws_quantity:int,ws_list_price:decimal(7,2)>\n:                          :     +- SubqueryAdaptiveBroadcast dynamicpruning#1290, 0, true, Project [d_date_sk#1024], [d_date_sk#1024]\n:                          :        +- AdaptiveSparkPlan isFinalPlan=false\n:                          :           +- Project [d_date_sk#1024]\n:                          :              +- Filter (((isnotnull(d_year#1030) AND (d_year#1030 >= 1998)) AND (d_year#1030 <= 2000)) AND isnotnull(d_date_sk#1024))\n:                          :                 +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#1024,d_year#1030] Batched: true, DataFilters: [isnotnull(d_year#1030), (d_year#1030 >= 1998), (d_year#1030 <= 2000), isnotnull(d_date_sk#1024)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), GreaterThanOrEqual(d_year,1998), LessThanOrEqual(d_year,2000), IsNotNull(d_da..., ReadSchema: struct<d_date_sk:int,d_year:int>\n:                          +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=817]\n:                             +- Project [d_date_sk#1024]\n:                                +- Filter (((isnotnull(d_year#1030) AND (d_year#1030 >= 1998)) AND (d_year#1030 <= 2000)) AND isnotnull(d_date_sk#1024))\n:                                   +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#1024,d_year#1030] Batched: true, DataFilters: [isnotnull(d_year#1030), (d_year#1030 >= 1998), (d_year#1030 <= 2000), isnotnull(d_date_sk#1024)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), GreaterThanOrEqual(d_year,1998), LessThanOrEqual(d_year,2000), IsNotNull(d_da..., ReadSchema: struct<d_date_sk:int,d_year:int>\n+- HashAggregate(keys=[i_brand_id#1082, i_class_id#1084, i_category_id#1086], functions=[sum((cast(ss_quantity#1061 as decimal(10,0)) * ss_list_price#1063)), count(1)], output=[channel#730, i_brand_id#1082, i_class_id#1084, i_category_id#1086, sales#731, number_sales#732L])\n   +- ShuffleQueryStage 99\n      +- Exchange hashpartitioning(i_brand_id#1082, i_class_id#1084, i_category_id#1086, 200), ENSURE_REQUIREMENTS, [plan_id=12473]\n         +- *(73) HashAggregate(keys=[i_brand_id#1082, i_class_id#1084, i_category_id#1086], functions=[partial_sum((cast(ss_quantity#1061 as decimal(10,0)) * ss_list_price#1063)), partial_count(1)], output=[i_brand_id#1082, i_class_id#1084, i_category_id#1086, sum#1317, isEmpty#1318, count#1319L])\n            +- *(73) Project [ss_quantity#1061, ss_list_price#1063, i_brand_id#1082, i_class_id#1084, i_category_id#1086]\n               +- *(73) BroadcastHashJoin [ss_item_sk#1053], [i_item_sk#1075], Inner, BuildRight, false\n                  :- *(73) Project [ss_item_sk#1053, ss_quantity#1061, ss_list_price#1063]\n                  :  +- *(73) BroadcastHashJoin [ss_sold_date_sk#1074], [d_date_sk#1097], Inner, BuildRight, false\n                  :     :- *(73) BroadcastHashJoin [ss_item_sk#1053], [ss_item_sk#745], LeftSemi, BuildRight, false\n                  :     :  :- *(73) Filter isnotnull(ss_item_sk#1053)\n                  :     :  :  +- *(73) ColumnarToRow\n                  :     :  :     +- FileScan parquet spark_catalog.tpcds_100.store_sales[ss_item_sk#1053,ss_quantity#1061,ss_list_price#1063,ss_sold_date_sk#1074] Batched: true, DataFilters: [isnotnull(ss_item_sk#1053)], Format: Parquet, Location: InMemoryFileIndex(1823 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/store_..., PartitionFilters: [isnotnull(ss_sold_date_sk#1074), dynamicpruningexpression(ss_sold_date_sk#1074 IN dynamicpruning..., PushedFilters: [IsNotNull(ss_item_sk)], ReadSchema: struct<ss_item_sk:int,ss_quantity:int,ss_list_price:decimal(7,2)>\n                  :     :  :           +- SubqueryBroadcast dynamicpruning#1303, 0, [d_date_sk#1097], [id=#12425]\n                  :     :  :              +- AdaptiveSparkPlan isFinalPlan=true\n                                             +- == Final Plan ==\n                                                BroadcastQueryStage 1\n                                                +- ReusedExchange [d_date_sk#1097], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=1853]\n                                             +- == Initial Plan ==\n                                                BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=12422]\n                                                +- Project [d_date_sk#1097]\n                                                   +- Filter ((isnotnull(d_week_seq#1101) AND (d_week_seq#1101 = Subquery subquery#734, [id=#835])) AND isnotnull(d_date_sk#1097))\n                                                      :  +- Subquery subquery#734, [id=#835]\n                                                      :     +- AdaptiveSparkPlan isFinalPlan=false\n                                                      :        +- Project [d_week_seq#1213]\n                                                      :           +- Filter (((((isnotnull(d_year#1215) AND isnotnull(d_moy#1217)) AND isnotnull(d_dom#1218)) AND (d_year#1215 = 1999)) AND (d_moy#1217 = 12)) AND (d_dom#1218 = 16))\n                                                      :              +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_week_seq#1213,d_year#1215,d_moy#1217,d_dom#1218] Batched: true, DataFilters: [isnotnull(d_year#1215), isnotnull(d_moy#1217), isnotnull(d_dom#1218), (d_year#1215 = 1999), (d_m..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), IsNotNull(d_moy), IsNotNull(d_dom), EqualTo(d_year,1999), EqualTo(d_moy,12), ..., ReadSchema: struct<d_week_seq:int,d_year:int,d_moy:int,d_dom:int>\n                                                      +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#1097,d_week_seq#1101] Batched: true, DataFilters: [isnotnull(d_week_seq#1101), isnotnull(d_date_sk#1097)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_week_seq), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_week_seq:int>\n                  :     :  +- BroadcastQueryStage 89\n                  :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=11573]\n                  :     :        +- *(67) Project [i_item_sk#25 AS ss_item_sk#745]\n                  :     :           +- *(67) BroadcastHashJoin [i_brand_id#32, i_class_id#34, i_category_id#36], [brand_id#742, class_id#743, category_id#744], Inner, BuildRight, false\n                  :     :              :- *(67) Filter ((isnotnull(i_brand_id#32) AND isnotnull(i_class_id#34)) AND isnotnull(i_category_id#36))\n                  :     :              :  +- *(67) ColumnarToRow\n                  :     :              :     +- FileScan parquet spark_catalog.tpcds_100.item[i_item_sk#25,i_brand_id#32,i_class_id#34,i_category_id#36] Batched: true, DataFilters: [isnotnull(i_brand_id#32), isnotnull(i_class_id#34), isnotnull(i_category_id#36)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/item], PartitionFilters: [], PushedFilters: [IsNotNull(i_brand_id), IsNotNull(i_class_id), IsNotNull(i_category_id)], ReadSchema: struct<i_item_sk:int,i_brand_id:int,i_class_id:int,i_category_id:int>\n                  :     :              +- BroadcastQueryStage 82\n                  :     :                 +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, int, true], input[1, int, true], input[2, int, true]),false), [plan_id=11135]\n                  :     :                    +- *(57) SortMergeJoin [coalesce(brand_id#742, 0), isnull(brand_id#742), coalesce(class_id#743, 0), isnull(class_id#743), coalesce(category_id#744, 0), isnull(category_id#744)], [coalesce(i_brand_id#834, 0), isnull(i_brand_id#834), coalesce(i_class_id#836, 0), isnull(i_class_id#836), coalesce(i_category_id#838, 0), isnull(i_category_id#838)], LeftSemi\n                  :     :                       :- *(55) Sort [coalesce(brand_id#742, 0) ASC NULLS FIRST, isnull(brand_id#742) ASC NULLS FIRST, coalesce(class_id#743, 0) ASC NULLS FIRST, isnull(class_id#743) ASC NULLS FIRST, coalesce(category_id#744, 0) ASC NULLS FIRST, isnull(category_id#744) ASC NULLS FIRST], false, 0\n                  :     :                       :  +- AQEShuffleRead coalesced\n                  :     :                       :     +- ShuffleQueryStage 75\n                  :     :                       :        +- Exchange hashpartitioning(coalesce(brand_id#742, 0), isnull(brand_id#742), coalesce(class_id#743, 0), isnull(class_id#743), coalesce(category_id#744, 0), isnull(category_id#744), 200), ENSURE_REQUIREMENTS, [plan_id=10347]\n                  :     :                       :           +- *(51) HashAggregate(keys=[brand_id#742, class_id#743, category_id#744], functions=[], output=[brand_id#742, class_id#743, category_id#744])\n                  :     :                       :              +- AQEShuffleRead coalesced\n                  :     :                       :                 +- ShuffleQueryStage 68\n                  :     :                       :                    +- Exchange hashpartitioning(brand_id#742, class_id#743, category_id#744, 200), ENSURE_REQUIREMENTS, [plan_id=9348]\n                  :     :                       :                       +- *(47) HashAggregate(keys=[brand_id#742, class_id#743, category_id#744], functions=[], output=[brand_id#742, class_id#743, category_id#744])\n                  :     :                       :                          +- *(47) Project [i_brand_id#762 AS brand_id#742, i_class_id#764 AS class_id#743, i_category_id#766 AS category_id#744]\n                  :     :                       :                             +- *(47) BroadcastHashJoin [ss_item_sk#48], [i_item_sk#755], Inner, BuildRight, false\n                  :     :                       :                                :- *(47) Project [ss_item_sk#48]\n                  :     :                       :                                :  +- *(47) BroadcastHashJoin [ss_sold_date_sk#69], [d_date_sk#70], Inner, BuildRight, false\n                  :     :                       :                                :     :- *(47) Filter isnotnull(ss_item_sk#48)\n                  :     :                       :                                :     :  +- *(47) ColumnarToRow\n                  :     :                       :                                :     :     +- FileScan parquet spark_catalog.tpcds_100.store_sales[ss_item_sk#48,ss_sold_date_sk#69] Batched: true, DataFilters: [isnotnull(ss_item_sk#48)], Format: Parquet, Location: InMemoryFileIndex(1823 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/store_..., PartitionFilters: [isnotnull(ss_sold_date_sk#69), dynamicpruningexpression(ss_sold_date_sk#69 IN dynamicpruning#1292)], PushedFilters: [IsNotNull(ss_item_sk)], ReadSchema: struct<ss_item_sk:int>\n                  :     :                       :                                :     :           +- ReusedSubquery SubqueryBroadcast dynamicpruning#1292, 0, [d_date_sk#799], [id=#4500]\n                  :     :                       :                                :     +- BroadcastQueryStage 0\n                  :     :                       :                                :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=1714]\n                  :     :                       :                                :           +- *(1) Project [d_date_sk#70]\n                  :     :                       :                                :              +- *(1) Filter (((isnotnull(d_year#76) AND (d_year#76 >= 1998)) AND (d_year#76 <= 2000)) AND isnotnull(d_date_sk#70))\n                  :     :                       :                                :                 +- *(1) ColumnarToRow\n                  :     :                       :                                :                    +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#70,d_year#76] Batched: true, DataFilters: [isnotnull(d_year#76), (d_year#76 >= 1998), (d_year#76 <= 2000), isnotnull(d_date_sk#70)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), GreaterThanOrEqual(d_year,1998), LessThanOrEqual(d_year,2000), IsNotNull(d_da..., ReadSchema: struct<d_date_sk:int,d_year:int>\n                  :     :                       :                                +- BroadcastQueryStage 61\n                  :     :                       :                                   +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=8021]\n                  :     :                       :                                      +- *(37) SortMergeJoin [coalesce(i_brand_id#762, 0), isnull(i_brand_id#762), coalesce(i_class_id#764, 0), isnull(i_class_id#764), coalesce(i_category_id#766, 0), isnull(i_category_id#766)], [coalesce(i_brand_id#784, 0), isnull(i_brand_id#784), coalesce(i_class_id#786, 0), isnull(i_class_id#786), coalesce(i_category_id#788, 0), isnull(i_category_id#788)], LeftSemi\n                  :     :                       :                                         :- *(35) Sort [coalesce(i_brand_id#762, 0) ASC NULLS FIRST, isnull(i_brand_id#762) ASC NULLS FIRST, coalesce(i_class_id#764, 0) ASC NULLS FIRST, isnull(i_class_id#764) ASC NULLS FIRST, coalesce(i_category_id#766, 0) ASC NULLS FIRST, isnull(i_category_id#766) ASC NULLS FIRST], false, 0\n                  :     :                       :                                         :  +- AQEShuffleRead coalesced\n                  :     :                       :                                         :     +- ShuffleQueryStage 1\n                  :     :                       :                                         :        +- Exchange hashpartitioning(coalesce(i_brand_id#762, 0), isnull(i_brand_id#762), coalesce(i_class_id#764, 0), isnull(i_class_id#764), coalesce(i_category_id#766, 0), isnull(i_category_id#766), 200), ENSURE_REQUIREMENTS, [plan_id=1733]\n                  :     :                       :                                         :           +- *(2) Filter (((isnotnull(i_item_sk#755) AND isnotnull(i_brand_id#762)) AND isnotnull(i_class_id#764)) AND isnotnull(i_category_id#766))\n                  :     :                       :                                         :              +- *(2) ColumnarToRow\n                  :     :                       :                                         :                 +- FileScan parquet spark_catalog.tpcds_100.item[i_item_sk#755,i_brand_id#762,i_class_id#764,i_category_id#766] Batched: true, DataFilters: [isnotnull(i_item_sk#755), isnotnull(i_brand_id#762), isnotnull(i_class_id#764), isnotnull(i_cate..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/item], PartitionFilters: [], PushedFilters: [IsNotNull(i_item_sk), IsNotNull(i_brand_id), IsNotNull(i_class_id), IsNotNull(i_category_id)], ReadSchema: struct<i_item_sk:int,i_brand_id:int,i_class_id:int,i_category_id:int>\n                  :     :                       :                                         +- *(36) Sort [coalesce(i_brand_id#784, 0) ASC NULLS FIRST, isnull(i_brand_id#784) ASC NULLS FIRST, coalesce(i_class_id#786, 0) ASC NULLS FIRST, isnull(i_class_id#786) ASC NULLS FIRST, coalesce(i_category_id#788, 0) ASC NULLS FIRST, isnull(i_category_id#788) ASC NULLS FIRST], false, 0\n                  :     :                       :                                            +- AQEShuffleRead coalesced\n                  :     :                       :                                               +- ShuffleQueryStage 47\n                  :     :                       :                                                  +- Exchange hashpartitioning(coalesce(i_brand_id#784, 0), isnull(i_brand_id#784), coalesce(i_class_id#786, 0), isnull(i_class_id#786), coalesce(i_category_id#788, 0), isnull(i_category_id#788), 200), ENSURE_REQUIREMENTS, [plan_id=4537]\n                  :     :                       :                                                     +- *(27) Project [i_brand_id#784, i_class_id#786, i_category_id#788]\n                  :     :                       :                                                        +- *(27) BroadcastHashJoin [cs_item_sk#112], [i_item_sk#777], Inner, BuildRight, false\n                  :     :                       :                                                           :- *(27) Project [cs_item_sk#112]\n                  :     :                       :                                                           :  +- *(27) BroadcastHashJoin [cs_sold_date_sk#131], [d_date_sk#799], Inner, BuildRight, false\n                  :     :                       :                                                           :     :- *(27) Filter isnotnull(cs_item_sk#112)\n                  :     :                       :                                                           :     :  +- *(27) ColumnarToRow\n                  :     :                       :                                                           :     :     +- FileScan parquet spark_catalog.tpcds_100.catalog_sales[cs_item_sk#112,cs_sold_date_sk#131] Batched: true, DataFilters: [isnotnull(cs_item_sk#112)], Format: Parquet, Location: InMemoryFileIndex(1836 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/catalo..., PartitionFilters: [isnotnull(cs_sold_date_sk#131), dynamicpruningexpression(cs_sold_date_sk#131 IN dynamicpruning#1..., PushedFilters: [IsNotNull(cs_item_sk)], ReadSchema: struct<cs_item_sk:int>\n                  :     :                       :                                                           :     :           +- SubqueryBroadcast dynamicpruning#1292, 0, [d_date_sk#799], [id=#4500]\n                  :     :                       :                                                           :     :              +- AdaptiveSparkPlan isFinalPlan=true\n                                                                                                                                    +- == Final Plan ==\n                                                                                                                                       BroadcastQueryStage 1\n                                                                                                                                       +- ReusedExchange [d_date_sk#799], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=1714]\n                                                                                                                                    +- == Initial Plan ==\n                                                                                                                                       BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=4497]\n                                                                                                                                       +- Project [d_date_sk#799]\n                                                                                                                                          +- Filter (((isnotnull(d_year#805) AND (d_year#805 >= 1998)) AND (d_year#805 <= 2000)) AND isnotnull(d_date_sk#799))\n                                                                                                                                             +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#799,d_year#805] Batched: true, DataFilters: [isnotnull(d_year#805), (d_year#805 >= 1998), (d_year#805 <= 2000), isnotnull(d_date_sk#799)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), GreaterThanOrEqual(d_year,1998), LessThanOrEqual(d_year,2000), IsNotNull(d_da..., ReadSchema: struct<d_date_sk:int,d_year:int>\n                  :     :                       :                                                           :     +- BroadcastQueryStage 3\n                  :     :                       :                                                           :        +- ReusedExchange [d_date_sk#799], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=1714]\n                  :     :                       :                                                           +- BroadcastQueryStage 4\n                  :     :                       :                                                              +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=1773]\n                  :     :                       :                                                                 +- *(4) Filter isnotnull(i_item_sk#777)\n                  :     :                       :                                                                    +- *(4) ColumnarToRow\n                  :     :                       :                                                                       +- FileScan parquet spark_catalog.tpcds_100.item[i_item_sk#777,i_brand_id#784,i_class_id#786,i_category_id#788] Batched: true, DataFilters: [isnotnull(i_item_sk#777)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/item], PartitionFilters: [], PushedFilters: [IsNotNull(i_item_sk)], ReadSchema: struct<i_item_sk:int,i_brand_id:int,i_class_id:int,i_category_id:int>\n                  :     :                       +- *(56) Sort [coalesce(i_brand_id#834, 0) ASC NULLS FIRST, isnull(i_brand_id#834) ASC NULLS FIRST, coalesce(i_class_id#836, 0) ASC NULLS FIRST, isnull(i_class_id#836) ASC NULLS FIRST, coalesce(i_category_id#838, 0) ASC NULLS FIRST, isnull(i_category_id#838) ASC NULLS FIRST], false, 0\n                  :     :                          +- AQEShuffleRead coalesced\n                  :     :                             +- ShuffleQueryStage 48\n                  :     :                                +- Exchange hashpartitioning(coalesce(i_brand_id#834, 0), isnull(i_brand_id#834), coalesce(i_class_id#836, 0), isnull(i_class_id#836), coalesce(i_category_id#838, 0), isnull(i_category_id#838), 200), ENSURE_REQUIREMENTS, [plan_id=4613]\n                  :     :                                   +- *(28) Project [i_brand_id#834, i_class_id#836, i_category_id#838]\n                  :     :                                      +- *(28) BroadcastHashJoin [ws_item_sk#134], [i_item_sk#827], Inner, BuildRight, false\n                  :     :                                         :- *(28) Project [ws_item_sk#134]\n                  :     :                                         :  +- *(28) BroadcastHashJoin [ws_sold_date_sk#165], [d_date_sk#849], Inner, BuildRight, false\n                  :     :                                         :     :- *(28) Filter isnotnull(ws_item_sk#134)\n                  :     :                                         :     :  +- *(28) ColumnarToRow\n                  :     :                                         :     :     +- FileScan parquet spark_catalog.tpcds_100.web_sales[ws_item_sk#134,ws_sold_date_sk#165] Batched: true, DataFilters: [isnotnull(ws_item_sk#134)], Format: Parquet, Location: InMemoryFileIndex(1823 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/web_sa..., PartitionFilters: [isnotnull(ws_sold_date_sk#165), dynamicpruningexpression(ws_sold_date_sk#165 IN dynamicpruning#1..., PushedFilters: [IsNotNull(ws_item_sk)], ReadSchema: struct<ws_item_sk:int>\n                  :     :                                         :     :           +- ReusedSubquery SubqueryBroadcast dynamicpruning#1292, 0, [d_date_sk#799], [id=#4500]\n                  :     :                                         :     +- BroadcastQueryStage 6\n                  :     :                                         :        +- ReusedExchange [d_date_sk#849], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=1714]\n                  :     :                                         +- BroadcastQueryStage 8\n                  :     :                                            +- ReusedExchange [i_item_sk#827, i_brand_id#834, i_class_id#836, i_category_id#838], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=1773]\n                  :     +- BroadcastQueryStage 9\n                  :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=1853]\n                  :           +- *(7) Project [d_date_sk#1097]\n                  :              +- *(7) Filter ((isnotnull(d_week_seq#1101) AND (d_week_seq#1101 = Subquery subquery#734, [id=#863])) AND isnotnull(d_date_sk#1097))\n                  :                 :  +- Subquery subquery#734, [id=#863]\n                  :                 :     +- AdaptiveSparkPlan isFinalPlan=true\n                                             +- == Final Plan ==\n                                                *(1) Project [d_week_seq#1213]\n                                                +- *(1) Filter (((((isnotnull(d_year#1215) AND isnotnull(d_moy#1217)) AND isnotnull(d_dom#1218)) AND (d_year#1215 = 1999)) AND (d_moy#1217 = 12)) AND (d_dom#1218 = 16))\n                                                   +- *(1) ColumnarToRow\n                                                      +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_week_seq#1213,d_year#1215,d_moy#1217,d_dom#1218] Batched: true, DataFilters: [isnotnull(d_year#1215), isnotnull(d_moy#1217), isnotnull(d_dom#1218), (d_year#1215 = 1999), (d_m..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), IsNotNull(d_moy), IsNotNull(d_dom), EqualTo(d_year,1999), EqualTo(d_moy,12), ..., ReadSchema: struct<d_week_seq:int,d_year:int,d_moy:int,d_dom:int>\n                                             +- == Initial Plan ==\n                                                Project [d_week_seq#1213]\n                                                +- Filter (((((isnotnull(d_year#1215) AND isnotnull(d_moy#1217)) AND isnotnull(d_dom#1218)) AND (d_year#1215 = 1999)) AND (d_moy#1217 = 12)) AND (d_dom#1218 = 16))\n                                                   +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_week_seq#1213,d_year#1215,d_moy#1217,d_dom#1218] Batched: true, DataFilters: [isnotnull(d_year#1215), isnotnull(d_moy#1217), isnotnull(d_dom#1218), (d_year#1215 = 1999), (d_m..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), IsNotNull(d_moy), IsNotNull(d_dom), EqualTo(d_year,1999), EqualTo(d_moy,12), ..., ReadSchema: struct<d_week_seq:int,d_year:int,d_moy:int,d_dom:int>\n                  :                 +- *(7) ColumnarToRow\n                  :                    +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#1097,d_week_seq#1101] Batched: true, DataFilters: [isnotnull(d_week_seq#1101), isnotnull(d_date_sk#1097)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_week_seq), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_week_seq:int>\n                  +- BroadcastQueryStage 96\n                     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=12081]\n                        +- *(71) BroadcastHashJoin [i_item_sk#1075], [ss_item_sk#745], LeftSemi, BuildRight, false\n                           :- *(71) Filter (((isnotnull(i_item_sk#1075) AND isnotnull(i_brand_id#1082)) AND isnotnull(i_class_id#1084)) AND isnotnull(i_category_id#1086))\n                           :  +- *(71) ColumnarToRow\n                           :     +- FileScan parquet spark_catalog.tpcds_100.item[i_item_sk#1075,i_brand_id#1082,i_class_id#1084,i_category_id#1086] Batched: true, DataFilters: [isnotnull(i_item_sk#1075), isnotnull(i_brand_id#1082), isnotnull(i_class_id#1084), isnotnull(i_c..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/item], PartitionFilters: [], PushedFilters: [IsNotNull(i_item_sk), IsNotNull(i_brand_id), IsNotNull(i_class_id), IsNotNull(i_category_id)], ReadSchema: struct<i_item_sk:int,i_brand_id:int,i_class_id:int,i_category_id:int>\n                           +- BroadcastQueryStage 91\n                              +- ReusedExchange [ss_item_sk#745], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=11573]\n"
      },
      "IM" : {
        "inputSizeInBytes" : 431424,
        "inputRowCount" : 5992
      },
      "InitialPartitionNum" : 200,
      "PD" : {
        "5" : [ 1197, 2338, 1197, 929, 1449, 742, 1197, 679, 1197, 1197, 994, 1932, 733, 2218, 1757, 1323, 1449, 1757, 1449, 1197, 1734, 2072, 1960, 1197, 1596, 1449, 1757, 1197, 1323, 1197, 2016, 1323, 1575, 1932, 1449, 2338, 1575, 1449, 1757, 1449, 994, 1449, 994, 994, 2128, 2128, 2188, 1323, 1449, 1757, 1575, 1182, 1197, 994, 1449, 1323, 1449, 1596, 0, 1323, 2188, 2218, 1197, 1757, 903, 1688, 2128, 1197, 0, 994, 2158, 733, 2128, 2338, 2128, 2158, 2308, 1323, 1757, 1449, 994, 1711, 2128, 1988, 1960, 1449, 2128, 2128, 994, 1757, 2128, 1449, 1269, 1449, 1491, 1449, 742, 903, 1642, 1988, 968, 1449, 1757, 1449, 0, 1197, 2128, 994, 1757, 1449, 1449, 1757, 2218, 994, 1757, 994, 994, 1197, 2128, 1449, 1757, 2158, 994, 2158, 1197, 1988, 1323, 2576, 994, 2128, 1305, 1107, 742, 1596, 1757, 1305, 994, 1757, 742, 1449, 994, 1533, 1449, 2338, 1596, 1932, 1449, 1757, 929, 1757, 1449, 1757, 1512, 1449, 742, 1197, 1323, 2338, 0, 994, 1932, 1932, 2278, 2542, 1596, 733, 1757, 1757, 1305, 679, 1757, 994, 1596, 2406, 1323, 1449, 742, 1197, 2650, 1932, 1960, 1323, 1932, 1092, 1269, 1932, 1757, 1449, 733, 2044, 3430, 2576, 1575, 3075, 2188, 1596, 994, 1197, 1596, 2372 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 17,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 30 ],
      "Objectives" : {
        "DurationInMs" : 97,
        "TotalTasksDurationInMs" : 84,
        "IOBytes" : {
          "Total" : 293038,
          "Details" : {
            "IR" : 0,
            "IW" : 0,
            "SR" : 293038,
            "SW" : 0
          }
        }
      }
    },
    "4" : {
      "QSLogical" : {
        "operators" : {
          "0" : {
            "sign" : -79282860,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 24,
                "rowCount" : 2
              },
              "compileTime" : {
                "sizeInBytes" : 24,
                "rowCount" : 2
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_week_seq#1241] "
          },
          "1" : {
            "sign" : 1734827371,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 492,
                "rowCount" : 2
              },
              "compileTime" : {
                "sizeInBytes" : 492,
                "rowCount" : 2
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(d_year#1243) AND isnotnull(d_moy#1245)) AND isnotnull(d_dom#1246)) AND (((d_year#1243 = 1998) AND (d_moy#1245 = 12)) AND (d_dom#1246 = 16))) "
          },
          "2" : {
            "sign" : 813769211,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 17970054,
                "rowCount" : 73049
              },
              "compileTime" : {
                "sizeInBytes" : 17970054,
                "rowCount" : 73049
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#1237, d_date_id#1238, d_date#1239, d_month_seq#1240, d_week_seq#1241, d_quarter_seq#1242, d_year#1243, d_dow#1244, d_moy#1245, d_dom#1246, d_qoy#1247, d_fy_year#1248, d_fy_quarter_seq#1249, d_fy_week_seq#1250, d_day_name#1251, d_quarter_name#1252, d_holiday#1253, d_weekend#1254, d_following_holiday#1255, d_first_dom#1256, d_last_dom#1257, d_same_day_ly#1258, d_same_day_lq#1259, d_current_day#1260, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "LogicalRelation",
          "toId" : 1,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Filter",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [d_week_seq#1241]\n+- Filter (((isnotnull(d_year#1243) AND isnotnull(d_moy#1245)) AND isnotnull(d_dom#1246)) AND (((d_year#1243 = 1998) AND (d_moy#1245 = 12)) AND (d_dom#1246 = 16)))\n   +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#1237,d_date_id#1238,d_date#1239,d_month_seq#1240,d_week_seq#1241,d_quarter_seq#1242,d_year#1243,d_dow#1244,d_moy#1245,d_dom#1246,d_qoy#1247,d_fy_year#1248,d_fy_quarter_seq#1249,d_fy_week_seq#1250,d_day_name#1251,d_quarter_name#1252,d_holiday#1253,d_weekend#1254,d_following_holiday#1255,d_first_dom#1256,d_last_dom#1257,d_same_day_ly#1258,d_same_day_lq#1259,d_current_day#1260,... 4 more fields] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "0" : {
            "sign" : -1042973829,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 24,
            "rowCount" : 2,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [1]: [d_week_seq#1241] Input [4]: [d_week_seq#1241, d_year#1243, d_moy#1245, d_dom#1246] "
          },
          "1" : {
            "sign" : 493120778,
            "className" : "org.apache.spark.sql.execution.FilterExec",
            "sizeInBytes" : 24,
            "rowCount" : 2,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Input [4]: [d_week_seq#1241, d_year#1243, d_moy#1245, d_dom#1246] Condition : (((((isnotnull(d_year#1243) AND isnotnull(d_moy#1245)) AND isnotnull(d_dom#1246)) AND (d_year#1243 = 1998)) AND (d_moy#1245 = 12)) AND (d_dom#1246 = 16)) "
          },
          "2" : {
            "sign" : -446248642,
            "className" : "org.apache.spark.sql.execution.FileSourceScanExec",
            "sizeInBytes" : 24,
            "rowCount" : 2,
            "isRuntime" : false,
            "predicate" : " (unknown) Scan parquet spark_catalog.tpcds_100.date_dim Output [4]: [d_week_seq#1241, d_year#1243, d_moy#1245, d_dom#1246] Batched: true Location: InMemoryFileIndex [hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim] PushedFilters: [IsNotNull(d_year), IsNotNull(d_moy), IsNotNull(d_dom), EqualTo(d_year,1998), EqualTo(d_moy,12), EqualTo(d_dom,16)] ReadSchema: struct<d_week_seq:int,d_year:int,d_moy:int,d_dom:int> "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "Scan parquet spark_catalog.tpcds_100.date_dim",
          "toId" : 1,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Filter",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [d_week_seq#1241]\n+- Filter (((((isnotnull(d_year#1243) AND isnotnull(d_moy#1245)) AND isnotnull(d_dom#1246)) AND (d_year#1243 = 1998)) AND (d_moy#1245 = 12)) AND (d_dom#1246 = 16))\n   +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_week_seq#1241,d_year#1243,d_moy#1245,d_dom#1246] Batched: true, DataFilters: [isnotnull(d_year#1243), isnotnull(d_moy#1245), isnotnull(d_dom#1246), (d_year#1243 = 1998), (d_m..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), IsNotNull(d_moy), IsNotNull(d_dom), EqualTo(d_year,1998), EqualTo(d_moy,12), ..., ReadSchema: struct<d_week_seq:int,d_year:int,d_moy:int,d_dom:int>\n"
      },
      "IM" : {
        "inputSizeInBytes" : 24,
        "inputRowCount" : 2
      },
      "InitialPartitionNum" : 0,
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 6,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 8 ],
      "Objectives" : {
        "DurationInMs" : 99,
        "TotalTasksDurationInMs" : 96,
        "IOBytes" : {
          "Total" : 425402,
          "Details" : {
            "IR" : 425402,
            "IW" : 0,
            "SR" : 0,
            "SW" : 0
          }
        }
      }
    },
    "15" : {
      "QSLogical" : {
        "operators" : {
          "8" : {
            "sign" : 913239237,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 41806893656,
                "rowCount" : 275045353
              },
              "compileTime" : {
                "sizeInBytes" : 41806893656,
                "rowCount" : 275045353
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#1052, ss_item_sk#1053, ss_customer_sk#1054, ss_cdemo_sk#1055, ss_hdemo_sk#1056, ss_addr_sk#1057, ss_store_sk#1058, ss_promo_sk#1059, ss_ticket_number#1060L, ss_quantity#1061, ss_wholesale_cost#1062, ss_list_price#1063, ss_sales_price#1064, ss_ext_discount_amt#1065, ss_ext_sales_price#1066, ss_ext_wholesale_cost#1067, ss_ext_list_price#1068, ss_ext_tax#1069, ss_coupon_amt#1070, ss_net_paid#1071, ss_net_paid_inc_tax#1072, ss_net_profit#1073, ss_sold_date_sk#1074], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "4" : {
            "sign" : 178119988,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 61610159072,
                "rowCount" : 1925317471
              },
              "compileTime" : {
                "sizeInBytes" : 61610159072,
                "rowCount" : 1925317471
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#1074 = d_date_sk#1097) "
          },
          "11" : {
            "sign" : 1172677288,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 18409208,
                "rowCount" : 176814
              },
              "compileTime" : {
                "sizeInBytes" : 4860984,
                "rowCount" : 202541
              }
            },
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Join LeftSemi, (i_item_sk#1075 = ss_item_sk#745), BroadcastQueryStage 96 "
          },
          "9" : {
            "sign" : 1108483138,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 10020600,
                "rowCount" : 176814
              },
              "compileTime" : {
                "sizeInBytes" : 2430492,
                "rowCount" : 202541
              }
            },
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_item_sk#25 AS ss_item_sk#745], BroadcastQueryStage 89 "
          },
          "5" : {
            "sign" : 1532047545,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 7701269884,
                "rowCount" : 275045353
              },
              "compileTime" : {
                "sizeInBytes" : 7701269884,
                "rowCount" : 275045353
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (ss_item_sk#1053 = ss_item_sk#745) "
          },
          "10" : {
            "sign" : -21562714,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 1048632,
                "rowCount" : 7
              },
              "compileTime" : {
                "sizeInBytes" : 876588,
                "rowCount" : 73049
              }
            },
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#1097], BroadcastQueryStage 9 "
          },
          "6" : {
            "sign" : 1222696026,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 7701269884,
                "rowCount" : 275045353
              },
              "compileTime" : {
                "sizeInBytes" : 7701269884,
                "rowCount" : 275045353
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#1053, ss_quantity#1061, ss_list_price#1063, ss_sold_date_sk#1074] "
          },
          "1" : {
            "sign" : -1211649306,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 10893538666156608,
                "rowCount" : 340423083317394
              },
              "compileTime" : {
                "sizeInBytes" : 10893538666156608,
                "rowCount" : 340423083317394
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_quantity#1061, ss_list_price#1063, i_brand_id#1082, i_class_id#1084, i_category_id#1086] "
          },
          "0" : {
            "sign" : -1843308769,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 21787077332313216,
                "rowCount" : -1
              },
              "compileTime" : {
                "sizeInBytes" : 21787077332313216,
                "rowCount" : -1
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [i_brand_id#1082, i_class_id#1084, i_category_id#1086], [store AS channel#730, i_brand_id#1082, i_class_id#1084, i_category_id#1086, sum((cast(ss_quantity#1061 as decimal(10,0)) * ss_list_price#1063)) AS sales#731, count(1) AS number_sales#732L] "
          },
          "2" : {
            "sign" : 223171687,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 13616923332695760,
                "rowCount" : 340423083317394
              },
              "compileTime" : {
                "sizeInBytes" : 13616923332695760,
                "rowCount" : 340423083317394
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_item_sk#1053 = i_item_sk#1075) "
          },
          "7" : {
            "sign" : 571393713,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 41806893656,
                "rowCount" : 275045353
              },
              "compileTime" : {
                "sizeInBytes" : 41806893656,
                "rowCount" : 275045353
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(ss_item_sk#1053) AND isnotnull(ss_sold_date_sk#1074)) AND dynamicpruning#1303 [ss_sold_date_sk#1074]) "
          },
          "3" : {
            "sign" : 447227797,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 46207619304,
                "rowCount" : 1925317471
              },
              "compileTime" : {
                "sizeInBytes" : 46207619304,
                "rowCount" : 1925317471
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#1053, ss_quantity#1061, ss_list_price#1063] "
          }
        },
        "links" : [ {
          "fromId" : 8,
          "fromName" : "LogicalRelation",
          "toId" : 7,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Filter",
          "toId" : 6,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Project",
          "toId" : 5,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "LogicalQueryStage",
          "toId" : 5,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Join",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "LogicalQueryStage",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Join",
          "toId" : 3,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Project",
          "toId" : 2,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "LogicalQueryStage",
          "toId" : 2,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Join",
          "toId" : 1,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Project",
          "toId" : 0,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Aggregate [i_brand_id#1082, i_class_id#1084, i_category_id#1086], [store AS channel#730, i_brand_id#1082, i_class_id#1084, i_category_id#1086, sum((cast(ss_quantity#1061 as decimal(10,0)) * ss_list_price#1063)) AS sales#731, count(1) AS number_sales#732L]\n+- Project [ss_quantity#1061, ss_list_price#1063, i_brand_id#1082, i_class_id#1084, i_category_id#1086]\n   +- Join Inner, (ss_item_sk#1053 = i_item_sk#1075)\n      :- Project [ss_item_sk#1053, ss_quantity#1061, ss_list_price#1063]\n      :  +- Join Inner, (ss_sold_date_sk#1074 = d_date_sk#1097)\n      :     :- Join LeftSemi, (ss_item_sk#1053 = ss_item_sk#745)\n      :     :  :- Project [ss_item_sk#1053, ss_quantity#1061, ss_list_price#1063, ss_sold_date_sk#1074]\n      :     :  :  +- Filter ((isnotnull(ss_item_sk#1053) AND isnotnull(ss_sold_date_sk#1074)) AND dynamicpruning#1303 [ss_sold_date_sk#1074])\n      :     :  :     :  +- Project [d_date_sk#1097]\n      :     :  :     :     +- Filter ((isnotnull(d_week_seq#1101) AND (d_week_seq#1101 = scalar-subquery#734 [])) AND isnotnull(d_date_sk#1097))\n      :     :  :     :        :  +- Project [d_week_seq#1213]\n      :     :  :     :        :     +- Filter (((isnotnull(d_year#1215) AND isnotnull(d_moy#1217)) AND isnotnull(d_dom#1218)) AND (((d_year#1215 = 1999) AND (d_moy#1217 = 12)) AND (d_dom#1218 = 16)))\n      :     :  :     :        :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#1209,d_date_id#1210,d_date#1211,d_month_seq#1212,d_week_seq#1213,d_quarter_seq#1214,d_year#1215,d_dow#1216,d_moy#1217,d_dom#1218,d_qoy#1219,d_fy_year#1220,d_fy_quarter_seq#1221,d_fy_week_seq#1222,d_day_name#1223,d_quarter_name#1224,d_holiday#1225,d_weekend#1226,d_following_holiday#1227,d_first_dom#1228,d_last_dom#1229,d_same_day_ly#1230,d_same_day_lq#1231,d_current_day#1232,... 4 more fields] parquet\n      :     :  :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#1097,d_date_id#1098,d_date#1099,d_month_seq#1100,d_week_seq#1101,d_quarter_seq#1102,d_year#1103,d_dow#1104,d_moy#1105,d_dom#1106,d_qoy#1107,d_fy_year#1108,d_fy_quarter_seq#1109,d_fy_week_seq#1110,d_day_name#1111,d_quarter_name#1112,d_holiday#1113,d_weekend#1114,d_following_holiday#1115,d_first_dom#1116,d_last_dom#1117,d_same_day_ly#1118,d_same_day_lq#1119,d_current_day#1120,... 4 more fields] parquet\n      :     :  :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#1052,ss_item_sk#1053,ss_customer_sk#1054,ss_cdemo_sk#1055,ss_hdemo_sk#1056,ss_addr_sk#1057,ss_store_sk#1058,ss_promo_sk#1059,ss_ticket_number#1060L,ss_quantity#1061,ss_wholesale_cost#1062,ss_list_price#1063,ss_sales_price#1064,ss_ext_discount_amt#1065,ss_ext_sales_price#1066,ss_ext_wholesale_cost#1067,ss_ext_list_price#1068,ss_ext_tax#1069,ss_coupon_amt#1070,ss_net_paid#1071,ss_net_paid_inc_tax#1072,ss_net_profit#1073,ss_sold_date_sk#1074] parquet\n      :     :  +- LogicalQueryStage Project [i_item_sk#25 AS ss_item_sk#745], BroadcastQueryStage 89\n      :     +- LogicalQueryStage Project [d_date_sk#1097], BroadcastQueryStage 9\n      +- LogicalQueryStage Join LeftSemi, (i_item_sk#1075 = ss_item_sk#745), BroadcastQueryStage 96\n"
      },
      "QSPhysical" : {
        "operators" : {
          "8" : {
            "sign" : 1259985177,
            "className" : "org.apache.spark.sql.execution.adaptive.BroadcastQueryStageExec",
            "sizeInBytes" : 10020600,
            "rowCount" : 176814,
            "isRuntime" : true,
            "predicate" : " (unknown) BroadcastQueryStage Output [1]: [ss_item_sk#745] Arguments: 89 "
          },
          "4" : {
            "sign" : -1869675755,
            "className" : "org.apache.spark.sql.execution.joins.BroadcastHashJoinExec",
            "sizeInBytes" : 61610159072,
            "rowCount" : 1925317471,
            "isRuntime" : false,
            "predicate" : " (unknown) BroadcastHashJoin Left keys [1]: [ss_sold_date_sk#1074] Right keys [1]: [d_date_sk#1097] Join type: Inner Join condition: None "
          },
          "9" : {
            "sign" : -193977829,
            "className" : "org.apache.spark.sql.execution.adaptive.BroadcastQueryStageExec",
            "sizeInBytes" : 1048632,
            "rowCount" : 7,
            "isRuntime" : true,
            "predicate" : " (unknown) BroadcastQueryStage Output [1]: [d_date_sk#1097] Arguments: 9 "
          },
          "5" : {
            "sign" : -622600301,
            "className" : "org.apache.spark.sql.execution.joins.BroadcastHashJoinExec",
            "sizeInBytes" : 7701269884,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) BroadcastHashJoin Left keys [1]: [ss_item_sk#1053] Right keys [1]: [ss_item_sk#745] Join type: LeftSemi Join condition: None "
          },
          "10" : {
            "sign" : 57153546,
            "className" : "org.apache.spark.sql.execution.adaptive.BroadcastQueryStageExec",
            "sizeInBytes" : 18409208,
            "rowCount" : 176814,
            "isRuntime" : true,
            "predicate" : " (unknown) BroadcastQueryStage Output [4]: [i_item_sk#1075, i_brand_id#1082, i_class_id#1084, i_category_id#1086] Arguments: 96 "
          },
          "6" : {
            "sign" : 1681740169,
            "className" : "org.apache.spark.sql.execution.FilterExec",
            "sizeInBytes" : 7701269884,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Input [4]: [ss_item_sk#1053, ss_quantity#1061, ss_list_price#1063, ss_sold_date_sk#1074] Condition : isnotnull(ss_item_sk#1053) "
          },
          "1" : {
            "sign" : -1368001629,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 10893538666156608,
            "rowCount" : 340423083317394,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [5]: [ss_quantity#1061, ss_list_price#1063, i_brand_id#1082, i_class_id#1084, i_category_id#1086] Input [7]: [ss_item_sk#1053, ss_quantity#1061, ss_list_price#1063, i_item_sk#1075, i_brand_id#1082, i_class_id#1084, i_category_id#1086] "
          },
          "0" : {
            "sign" : 224581785,
            "className" : "org.apache.spark.sql.execution.aggregate.HashAggregateExec",
            "sizeInBytes" : 21787077332313216,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) HashAggregate Input [5]: [ss_quantity#1061, ss_list_price#1063, i_brand_id#1082, i_class_id#1084, i_category_id#1086] Keys [3]: [i_brand_id#1082, i_class_id#1084, i_category_id#1086] Functions [2]: [partial_sum((cast(ss_quantity#1061 as decimal(10,0)) * ss_list_price#1063)), partial_count(1)] Aggregate Attributes [3]: [sum#1314, isEmpty#1315, count#1316L] Results [6]: [i_brand_id#1082, i_class_id#1084, i_category_id#1086, sum#1317, isEmpty#1318, count#1319L] "
          },
          "2" : {
            "sign" : 1408368034,
            "className" : "org.apache.spark.sql.execution.joins.BroadcastHashJoinExec",
            "sizeInBytes" : 13616923332695760,
            "rowCount" : 340423083317394,
            "isRuntime" : false,
            "predicate" : " (unknown) BroadcastHashJoin Left keys [1]: [ss_item_sk#1053] Right keys [1]: [i_item_sk#1075] Join type: Inner Join condition: None "
          },
          "7" : {
            "sign" : 95867429,
            "className" : "org.apache.spark.sql.execution.FileSourceScanExec",
            "sizeInBytes" : 7701269884,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) Scan parquet spark_catalog.tpcds_100.store_sales Output [4]: [ss_item_sk#1053, ss_quantity#1061, ss_list_price#1063, ss_sold_date_sk#1074] Batched: true Location: InMemoryFileIndex [hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/store_sales/ss_sold_date_sk=2450816, ... 1822 entries] PartitionFilters: [isnotnull(ss_sold_date_sk#1074), dynamicpruningexpression(ss_sold_date_sk#1074 IN dynamicpruning#1303)] PushedFilters: [IsNotNull(ss_item_sk)] ReadSchema: struct<ss_item_sk:int,ss_quantity:int,ss_list_price:decimal(7,2)> "
          },
          "3" : {
            "sign" : -295134512,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 46207619304,
            "rowCount" : 1925317471,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [3]: [ss_item_sk#1053, ss_quantity#1061, ss_list_price#1063] Input [5]: [ss_item_sk#1053, ss_quantity#1061, ss_list_price#1063, ss_sold_date_sk#1074, d_date_sk#1097] "
          }
        },
        "links" : [ {
          "fromId" : 7,
          "fromName" : "Scan parquet spark_catalog.tpcds_100.store_sales",
          "toId" : 6,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Filter",
          "toId" : 5,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "BroadcastQueryStage",
          "toId" : 5,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "BroadcastHashJoin",
          "toId" : 4,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "BroadcastQueryStage",
          "toId" : 4,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "BroadcastHashJoin",
          "toId" : 3,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Project",
          "toId" : 2,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "BroadcastQueryStage",
          "toId" : 2,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "BroadcastHashJoin",
          "toId" : 1,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Project",
          "toId" : 0,
          "toName" : "HashAggregate",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "HashAggregate(keys=[i_brand_id#1082, i_class_id#1084, i_category_id#1086], functions=[partial_sum((cast(ss_quantity#1061 as decimal(10,0)) * ss_list_price#1063)), partial_count(1)], output=[i_brand_id#1082, i_class_id#1084, i_category_id#1086, sum#1317, isEmpty#1318, count#1319L])\n+- Project [ss_quantity#1061, ss_list_price#1063, i_brand_id#1082, i_class_id#1084, i_category_id#1086]\n   +- BroadcastHashJoin [ss_item_sk#1053], [i_item_sk#1075], Inner, BuildRight, false\n      :- Project [ss_item_sk#1053, ss_quantity#1061, ss_list_price#1063]\n      :  +- BroadcastHashJoin [ss_sold_date_sk#1074], [d_date_sk#1097], Inner, BuildRight, false\n      :     :- BroadcastHashJoin [ss_item_sk#1053], [ss_item_sk#745], LeftSemi, BuildRight, false\n      :     :  :- Filter isnotnull(ss_item_sk#1053)\n      :     :  :  +- FileScan parquet spark_catalog.tpcds_100.store_sales[ss_item_sk#1053,ss_quantity#1061,ss_list_price#1063,ss_sold_date_sk#1074] Batched: true, DataFilters: [isnotnull(ss_item_sk#1053)], Format: Parquet, Location: InMemoryFileIndex(1823 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/store_..., PartitionFilters: [isnotnull(ss_sold_date_sk#1074), dynamicpruningexpression(ss_sold_date_sk#1074 IN dynamicpruning..., PushedFilters: [IsNotNull(ss_item_sk)], ReadSchema: struct<ss_item_sk:int,ss_quantity:int,ss_list_price:decimal(7,2)>\n      :     :  :        +- SubqueryBroadcast dynamicpruning#1303, 0, [d_date_sk#1097], [id=#12425]\n      :     :  :           +- AdaptiveSparkPlan isFinalPlan=false\n      :     :  :              +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=12422]\n      :     :  :                 +- Project [d_date_sk#1097]\n      :     :  :                    +- Filter ((isnotnull(d_week_seq#1101) AND (d_week_seq#1101 = Subquery subquery#734, [id=#835])) AND isnotnull(d_date_sk#1097))\n      :     :  :                       :  +- Subquery subquery#734, [id=#835]\n      :     :  :                       :     +- AdaptiveSparkPlan isFinalPlan=false\n      :     :  :                       :        +- Project [d_week_seq#1213]\n      :     :  :                       :           +- Filter (((((isnotnull(d_year#1215) AND isnotnull(d_moy#1217)) AND isnotnull(d_dom#1218)) AND (d_year#1215 = 1999)) AND (d_moy#1217 = 12)) AND (d_dom#1218 = 16))\n      :     :  :                       :              +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_week_seq#1213,d_year#1215,d_moy#1217,d_dom#1218] Batched: true, DataFilters: [isnotnull(d_year#1215), isnotnull(d_moy#1217), isnotnull(d_dom#1218), (d_year#1215 = 1999), (d_m..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), IsNotNull(d_moy), IsNotNull(d_dom), EqualTo(d_year,1999), EqualTo(d_moy,12), ..., ReadSchema: struct<d_week_seq:int,d_year:int,d_moy:int,d_dom:int>\n      :     :  :                       +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#1097,d_week_seq#1101] Batched: true, DataFilters: [isnotnull(d_week_seq#1101), isnotnull(d_date_sk#1097)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_week_seq), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_week_seq:int>\n      :     :  +- BroadcastQueryStage 89\n      :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=11573]\n      :     :        +- *(67) Project [i_item_sk#25 AS ss_item_sk#745]\n      :     :           +- *(67) BroadcastHashJoin [i_brand_id#32, i_class_id#34, i_category_id#36], [brand_id#742, class_id#743, category_id#744], Inner, BuildRight, false\n      :     :              :- *(67) Filter ((isnotnull(i_brand_id#32) AND isnotnull(i_class_id#34)) AND isnotnull(i_category_id#36))\n      :     :              :  +- *(67) ColumnarToRow\n      :     :              :     +- FileScan parquet spark_catalog.tpcds_100.item[i_item_sk#25,i_brand_id#32,i_class_id#34,i_category_id#36] Batched: true, DataFilters: [isnotnull(i_brand_id#32), isnotnull(i_class_id#34), isnotnull(i_category_id#36)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/item], PartitionFilters: [], PushedFilters: [IsNotNull(i_brand_id), IsNotNull(i_class_id), IsNotNull(i_category_id)], ReadSchema: struct<i_item_sk:int,i_brand_id:int,i_class_id:int,i_category_id:int>\n      :     :              +- BroadcastQueryStage 82\n      :     :                 +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, int, true], input[1, int, true], input[2, int, true]),false), [plan_id=11135]\n      :     :                    +- *(57) SortMergeJoin [coalesce(brand_id#742, 0), isnull(brand_id#742), coalesce(class_id#743, 0), isnull(class_id#743), coalesce(category_id#744, 0), isnull(category_id#744)], [coalesce(i_brand_id#834, 0), isnull(i_brand_id#834), coalesce(i_class_id#836, 0), isnull(i_class_id#836), coalesce(i_category_id#838, 0), isnull(i_category_id#838)], LeftSemi\n      :     :                       :- *(55) Sort [coalesce(brand_id#742, 0) ASC NULLS FIRST, isnull(brand_id#742) ASC NULLS FIRST, coalesce(class_id#743, 0) ASC NULLS FIRST, isnull(class_id#743) ASC NULLS FIRST, coalesce(category_id#744, 0) ASC NULLS FIRST, isnull(category_id#744) ASC NULLS FIRST], false, 0\n      :     :                       :  +- AQEShuffleRead coalesced\n      :     :                       :     +- ShuffleQueryStage 75\n      :     :                       :        +- Exchange hashpartitioning(coalesce(brand_id#742, 0), isnull(brand_id#742), coalesce(class_id#743, 0), isnull(class_id#743), coalesce(category_id#744, 0), isnull(category_id#744), 200), ENSURE_REQUIREMENTS, [plan_id=10347]\n      :     :                       :           +- *(51) HashAggregate(keys=[brand_id#742, class_id#743, category_id#744], functions=[], output=[brand_id#742, class_id#743, category_id#744])\n      :     :                       :              +- AQEShuffleRead coalesced\n      :     :                       :                 +- ShuffleQueryStage 68\n      :     :                       :                    +- Exchange hashpartitioning(brand_id#742, class_id#743, category_id#744, 200), ENSURE_REQUIREMENTS, [plan_id=9348]\n      :     :                       :                       +- *(47) HashAggregate(keys=[brand_id#742, class_id#743, category_id#744], functions=[], output=[brand_id#742, class_id#743, category_id#744])\n      :     :                       :                          +- *(47) Project [i_brand_id#762 AS brand_id#742, i_class_id#764 AS class_id#743, i_category_id#766 AS category_id#744]\n      :     :                       :                             +- *(47) BroadcastHashJoin [ss_item_sk#48], [i_item_sk#755], Inner, BuildRight, false\n      :     :                       :                                :- *(47) Project [ss_item_sk#48]\n      :     :                       :                                :  +- *(47) BroadcastHashJoin [ss_sold_date_sk#69], [d_date_sk#70], Inner, BuildRight, false\n      :     :                       :                                :     :- *(47) Filter isnotnull(ss_item_sk#48)\n      :     :                       :                                :     :  +- *(47) ColumnarToRow\n      :     :                       :                                :     :     +- FileScan parquet spark_catalog.tpcds_100.store_sales[ss_item_sk#48,ss_sold_date_sk#69] Batched: true, DataFilters: [isnotnull(ss_item_sk#48)], Format: Parquet, Location: InMemoryFileIndex(1823 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/store_..., PartitionFilters: [isnotnull(ss_sold_date_sk#69), dynamicpruningexpression(ss_sold_date_sk#69 IN dynamicpruning#1292)], PushedFilters: [IsNotNull(ss_item_sk)], ReadSchema: struct<ss_item_sk:int>\n      :     :                       :                                :     :           +- ReusedSubquery SubqueryBroadcast dynamicpruning#1292, 0, [d_date_sk#799], [id=#4500]\n      :     :                       :                                :     +- BroadcastQueryStage 0\n      :     :                       :                                :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=1714]\n      :     :                       :                                :           +- *(1) Project [d_date_sk#70]\n      :     :                       :                                :              +- *(1) Filter (((isnotnull(d_year#76) AND (d_year#76 >= 1998)) AND (d_year#76 <= 2000)) AND isnotnull(d_date_sk#70))\n      :     :                       :                                :                 +- *(1) ColumnarToRow\n      :     :                       :                                :                    +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#70,d_year#76] Batched: true, DataFilters: [isnotnull(d_year#76), (d_year#76 >= 1998), (d_year#76 <= 2000), isnotnull(d_date_sk#70)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), GreaterThanOrEqual(d_year,1998), LessThanOrEqual(d_year,2000), IsNotNull(d_da..., ReadSchema: struct<d_date_sk:int,d_year:int>\n      :     :                       :                                +- BroadcastQueryStage 61\n      :     :                       :                                   +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=8021]\n      :     :                       :                                      +- *(37) SortMergeJoin [coalesce(i_brand_id#762, 0), isnull(i_brand_id#762), coalesce(i_class_id#764, 0), isnull(i_class_id#764), coalesce(i_category_id#766, 0), isnull(i_category_id#766)], [coalesce(i_brand_id#784, 0), isnull(i_brand_id#784), coalesce(i_class_id#786, 0), isnull(i_class_id#786), coalesce(i_category_id#788, 0), isnull(i_category_id#788)], LeftSemi\n      :     :                       :                                         :- *(35) Sort [coalesce(i_brand_id#762, 0) ASC NULLS FIRST, isnull(i_brand_id#762) ASC NULLS FIRST, coalesce(i_class_id#764, 0) ASC NULLS FIRST, isnull(i_class_id#764) ASC NULLS FIRST, coalesce(i_category_id#766, 0) ASC NULLS FIRST, isnull(i_category_id#766) ASC NULLS FIRST], false, 0\n      :     :                       :                                         :  +- AQEShuffleRead coalesced\n      :     :                       :                                         :     +- ShuffleQueryStage 1\n      :     :                       :                                         :        +- Exchange hashpartitioning(coalesce(i_brand_id#762, 0), isnull(i_brand_id#762), coalesce(i_class_id#764, 0), isnull(i_class_id#764), coalesce(i_category_id#766, 0), isnull(i_category_id#766), 200), ENSURE_REQUIREMENTS, [plan_id=1733]\n      :     :                       :                                         :           +- *(2) Filter (((isnotnull(i_item_sk#755) AND isnotnull(i_brand_id#762)) AND isnotnull(i_class_id#764)) AND isnotnull(i_category_id#766))\n      :     :                       :                                         :              +- *(2) ColumnarToRow\n      :     :                       :                                         :                 +- FileScan parquet spark_catalog.tpcds_100.item[i_item_sk#755,i_brand_id#762,i_class_id#764,i_category_id#766] Batched: true, DataFilters: [isnotnull(i_item_sk#755), isnotnull(i_brand_id#762), isnotnull(i_class_id#764), isnotnull(i_cate..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/item], PartitionFilters: [], PushedFilters: [IsNotNull(i_item_sk), IsNotNull(i_brand_id), IsNotNull(i_class_id), IsNotNull(i_category_id)], ReadSchema: struct<i_item_sk:int,i_brand_id:int,i_class_id:int,i_category_id:int>\n      :     :                       :                                         +- *(36) Sort [coalesce(i_brand_id#784, 0) ASC NULLS FIRST, isnull(i_brand_id#784) ASC NULLS FIRST, coalesce(i_class_id#786, 0) ASC NULLS FIRST, isnull(i_class_id#786) ASC NULLS FIRST, coalesce(i_category_id#788, 0) ASC NULLS FIRST, isnull(i_category_id#788) ASC NULLS FIRST], false, 0\n      :     :                       :                                            +- AQEShuffleRead coalesced\n      :     :                       :                                               +- ShuffleQueryStage 47\n      :     :                       :                                                  +- Exchange hashpartitioning(coalesce(i_brand_id#784, 0), isnull(i_brand_id#784), coalesce(i_class_id#786, 0), isnull(i_class_id#786), coalesce(i_category_id#788, 0), isnull(i_category_id#788), 200), ENSURE_REQUIREMENTS, [plan_id=4537]\n      :     :                       :                                                     +- *(27) Project [i_brand_id#784, i_class_id#786, i_category_id#788]\n      :     :                       :                                                        +- *(27) BroadcastHashJoin [cs_item_sk#112], [i_item_sk#777], Inner, BuildRight, false\n      :     :                       :                                                           :- *(27) Project [cs_item_sk#112]\n      :     :                       :                                                           :  +- *(27) BroadcastHashJoin [cs_sold_date_sk#131], [d_date_sk#799], Inner, BuildRight, false\n      :     :                       :                                                           :     :- *(27) Filter isnotnull(cs_item_sk#112)\n      :     :                       :                                                           :     :  +- *(27) ColumnarToRow\n      :     :                       :                                                           :     :     +- FileScan parquet spark_catalog.tpcds_100.catalog_sales[cs_item_sk#112,cs_sold_date_sk#131] Batched: true, DataFilters: [isnotnull(cs_item_sk#112)], Format: Parquet, Location: InMemoryFileIndex(1836 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/catalo..., PartitionFilters: [isnotnull(cs_sold_date_sk#131), dynamicpruningexpression(cs_sold_date_sk#131 IN dynamicpruning#1..., PushedFilters: [IsNotNull(cs_item_sk)], ReadSchema: struct<cs_item_sk:int>\n      :     :                       :                                                           :     :           +- SubqueryBroadcast dynamicpruning#1292, 0, [d_date_sk#799], [id=#4500]\n      :     :                       :                                                           :     :              +- AdaptiveSparkPlan isFinalPlan=true\n                                                                                                                        +- == Final Plan ==\n                                                                                                                           BroadcastQueryStage 1\n                                                                                                                           +- ReusedExchange [d_date_sk#799], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=1714]\n                                                                                                                        +- == Initial Plan ==\n                                                                                                                           BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=4497]\n                                                                                                                           +- Project [d_date_sk#799]\n                                                                                                                              +- Filter (((isnotnull(d_year#805) AND (d_year#805 >= 1998)) AND (d_year#805 <= 2000)) AND isnotnull(d_date_sk#799))\n                                                                                                                                 +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#799,d_year#805] Batched: true, DataFilters: [isnotnull(d_year#805), (d_year#805 >= 1998), (d_year#805 <= 2000), isnotnull(d_date_sk#799)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), GreaterThanOrEqual(d_year,1998), LessThanOrEqual(d_year,2000), IsNotNull(d_da..., ReadSchema: struct<d_date_sk:int,d_year:int>\n      :     :                       :                                                           :     +- BroadcastQueryStage 3\n      :     :                       :                                                           :        +- ReusedExchange [d_date_sk#799], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=1714]\n      :     :                       :                                                           +- BroadcastQueryStage 4\n      :     :                       :                                                              +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=1773]\n      :     :                       :                                                                 +- *(4) Filter isnotnull(i_item_sk#777)\n      :     :                       :                                                                    +- *(4) ColumnarToRow\n      :     :                       :                                                                       +- FileScan parquet spark_catalog.tpcds_100.item[i_item_sk#777,i_brand_id#784,i_class_id#786,i_category_id#788] Batched: true, DataFilters: [isnotnull(i_item_sk#777)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/item], PartitionFilters: [], PushedFilters: [IsNotNull(i_item_sk)], ReadSchema: struct<i_item_sk:int,i_brand_id:int,i_class_id:int,i_category_id:int>\n      :     :                       +- *(56) Sort [coalesce(i_brand_id#834, 0) ASC NULLS FIRST, isnull(i_brand_id#834) ASC NULLS FIRST, coalesce(i_class_id#836, 0) ASC NULLS FIRST, isnull(i_class_id#836) ASC NULLS FIRST, coalesce(i_category_id#838, 0) ASC NULLS FIRST, isnull(i_category_id#838) ASC NULLS FIRST], false, 0\n      :     :                          +- AQEShuffleRead coalesced\n      :     :                             +- ShuffleQueryStage 48\n      :     :                                +- Exchange hashpartitioning(coalesce(i_brand_id#834, 0), isnull(i_brand_id#834), coalesce(i_class_id#836, 0), isnull(i_class_id#836), coalesce(i_category_id#838, 0), isnull(i_category_id#838), 200), ENSURE_REQUIREMENTS, [plan_id=4613]\n      :     :                                   +- *(28) Project [i_brand_id#834, i_class_id#836, i_category_id#838]\n      :     :                                      +- *(28) BroadcastHashJoin [ws_item_sk#134], [i_item_sk#827], Inner, BuildRight, false\n      :     :                                         :- *(28) Project [ws_item_sk#134]\n      :     :                                         :  +- *(28) BroadcastHashJoin [ws_sold_date_sk#165], [d_date_sk#849], Inner, BuildRight, false\n      :     :                                         :     :- *(28) Filter isnotnull(ws_item_sk#134)\n      :     :                                         :     :  +- *(28) ColumnarToRow\n      :     :                                         :     :     +- FileScan parquet spark_catalog.tpcds_100.web_sales[ws_item_sk#134,ws_sold_date_sk#165] Batched: true, DataFilters: [isnotnull(ws_item_sk#134)], Format: Parquet, Location: InMemoryFileIndex(1823 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/web_sa..., PartitionFilters: [isnotnull(ws_sold_date_sk#165), dynamicpruningexpression(ws_sold_date_sk#165 IN dynamicpruning#1..., PushedFilters: [IsNotNull(ws_item_sk)], ReadSchema: struct<ws_item_sk:int>\n      :     :                                         :     :           +- ReusedSubquery SubqueryBroadcast dynamicpruning#1292, 0, [d_date_sk#799], [id=#4500]\n      :     :                                         :     +- BroadcastQueryStage 6\n      :     :                                         :        +- ReusedExchange [d_date_sk#849], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=1714]\n      :     :                                         +- BroadcastQueryStage 8\n      :     :                                            +- ReusedExchange [i_item_sk#827, i_brand_id#834, i_class_id#836, i_category_id#838], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=1773]\n      :     +- BroadcastQueryStage 9\n      :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=1853]\n      :           +- *(7) Project [d_date_sk#1097]\n      :              +- *(7) Filter ((isnotnull(d_week_seq#1101) AND (d_week_seq#1101 = Subquery subquery#734, [id=#863])) AND isnotnull(d_date_sk#1097))\n      :                 :  +- Subquery subquery#734, [id=#863]\n      :                 :     +- AdaptiveSparkPlan isFinalPlan=true\n                                 +- == Final Plan ==\n                                    *(1) Project [d_week_seq#1213]\n                                    +- *(1) Filter (((((isnotnull(d_year#1215) AND isnotnull(d_moy#1217)) AND isnotnull(d_dom#1218)) AND (d_year#1215 = 1999)) AND (d_moy#1217 = 12)) AND (d_dom#1218 = 16))\n                                       +- *(1) ColumnarToRow\n                                          +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_week_seq#1213,d_year#1215,d_moy#1217,d_dom#1218] Batched: true, DataFilters: [isnotnull(d_year#1215), isnotnull(d_moy#1217), isnotnull(d_dom#1218), (d_year#1215 = 1999), (d_m..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), IsNotNull(d_moy), IsNotNull(d_dom), EqualTo(d_year,1999), EqualTo(d_moy,12), ..., ReadSchema: struct<d_week_seq:int,d_year:int,d_moy:int,d_dom:int>\n                                 +- == Initial Plan ==\n                                    Project [d_week_seq#1213]\n                                    +- Filter (((((isnotnull(d_year#1215) AND isnotnull(d_moy#1217)) AND isnotnull(d_dom#1218)) AND (d_year#1215 = 1999)) AND (d_moy#1217 = 12)) AND (d_dom#1218 = 16))\n                                       +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_week_seq#1213,d_year#1215,d_moy#1217,d_dom#1218] Batched: true, DataFilters: [isnotnull(d_year#1215), isnotnull(d_moy#1217), isnotnull(d_dom#1218), (d_year#1215 = 1999), (d_m..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), IsNotNull(d_moy), IsNotNull(d_dom), EqualTo(d_year,1999), EqualTo(d_moy,12), ..., ReadSchema: struct<d_week_seq:int,d_year:int,d_moy:int,d_dom:int>\n      :                 +- *(7) ColumnarToRow\n      :                    +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#1097,d_week_seq#1101] Batched: true, DataFilters: [isnotnull(d_week_seq#1101), isnotnull(d_date_sk#1097)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_week_seq), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_week_seq:int>\n      +- BroadcastQueryStage 96\n         +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=12081]\n            +- *(71) BroadcastHashJoin [i_item_sk#1075], [ss_item_sk#745], LeftSemi, BuildRight, false\n               :- *(71) Filter (((isnotnull(i_item_sk#1075) AND isnotnull(i_brand_id#1082)) AND isnotnull(i_class_id#1084)) AND isnotnull(i_category_id#1086))\n               :  +- *(71) ColumnarToRow\n               :     +- FileScan parquet spark_catalog.tpcds_100.item[i_item_sk#1075,i_brand_id#1082,i_class_id#1084,i_category_id#1086] Batched: true, DataFilters: [isnotnull(i_item_sk#1075), isnotnull(i_brand_id#1082), isnotnull(i_class_id#1084), isnotnull(i_c..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/item], PartitionFilters: [], PushedFilters: [IsNotNull(i_item_sk), IsNotNull(i_brand_id), IsNotNull(i_class_id), IsNotNull(i_category_id)], ReadSchema: struct<i_item_sk:int,i_brand_id:int,i_class_id:int,i_category_id:int>\n               +- BroadcastQueryStage 91\n                  +- ReusedExchange [ss_item_sk#745], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=11573]\n"
      },
      "IM" : {
        "inputSizeInBytes" : 7730748324,
        "inputRowCount" : 275398988
      },
      "InitialPartitionNum" : 0,
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 15,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 24 ],
      "Objectives" : {
        "DurationInMs" : 2079,
        "TotalTasksDurationInMs" : 11043,
        "IOBytes" : {
          "Total" : 19095592,
          "Details" : {
            "IR" : 18802554,
            "IW" : 0,
            "SR" : 0,
            "SW" : 293038
          }
        }
      }
    },
    "11" : {
      "QSLogical" : {
        "operators" : {
          "0" : {
            "sign" : 2085872115,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 33475968,
                "rowCount" : 1046124
              },
              "compileTime" : {
                "sizeInBytes" : 2739200,
                "rowCount" : 136960
              }
            },
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [brand_id#742, class_id#743, category_id#744], [brand_id#742, class_id#743, category_id#744], HashAggregate(keys=[brand_id#742, class_id#743, category_id#744], functions=[]) "
          }
        },
        "links" : [ ],
        "rawPlan" : "LogicalQueryStage Aggregate [brand_id#742, class_id#743, category_id#744], [brand_id#742, class_id#743, category_id#744], HashAggregate(keys=[brand_id#742, class_id#743, category_id#744], functions=[])\n"
      },
      "QSPhysical" : {
        "operators" : {
          "0" : {
            "sign" : -909995041,
            "className" : "org.apache.spark.sql.execution.aggregate.HashAggregateExec",
            "sizeInBytes" : 33475968,
            "rowCount" : 1046124,
            "isRuntime" : true,
            "predicate" : " (unknown) HashAggregate Input [3]: [brand_id#742, class_id#743, category_id#744] Keys [3]: [brand_id#742, class_id#743, category_id#744] Functions: [] Aggregate Attributes: [] Results [3]: [brand_id#742, class_id#743, category_id#744] "
          },
          "1" : {
            "sign" : -871749654,
            "className" : "org.apache.spark.sql.execution.adaptive.ShuffleQueryStageExec",
            "sizeInBytes" : 2739200,
            "rowCount" : 136960,
            "isRuntime" : false,
            "predicate" : " (unknown) ShuffleQueryStage Output [3]: [brand_id#742, class_id#743, category_id#744] Arguments: 68 "
          }
        },
        "links" : [ {
          "fromId" : 1,
          "fromName" : "ShuffleQueryStage",
          "toId" : 0,
          "toName" : "HashAggregate",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "HashAggregate(keys=[brand_id#742, class_id#743, category_id#744], functions=[], output=[brand_id#742, class_id#743, category_id#744])\n+- ShuffleQueryStage 68\n   +- Exchange hashpartitioning(brand_id#742, class_id#743, category_id#744, 200), ENSURE_REQUIREMENTS, [plan_id=9348]\n      +- *(47) HashAggregate(keys=[brand_id#742, class_id#743, category_id#744], functions=[], output=[brand_id#742, class_id#743, category_id#744])\n         +- *(47) Project [i_brand_id#762 AS brand_id#742, i_class_id#764 AS class_id#743, i_category_id#766 AS category_id#744]\n            +- *(47) BroadcastHashJoin [ss_item_sk#48], [i_item_sk#755], Inner, BuildRight, false\n               :- *(47) Project [ss_item_sk#48]\n               :  +- *(47) BroadcastHashJoin [ss_sold_date_sk#69], [d_date_sk#70], Inner, BuildRight, false\n               :     :- *(47) Filter isnotnull(ss_item_sk#48)\n               :     :  +- *(47) ColumnarToRow\n               :     :     +- FileScan parquet spark_catalog.tpcds_100.store_sales[ss_item_sk#48,ss_sold_date_sk#69] Batched: true, DataFilters: [isnotnull(ss_item_sk#48)], Format: Parquet, Location: InMemoryFileIndex(1823 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/store_..., PartitionFilters: [isnotnull(ss_sold_date_sk#69), dynamicpruningexpression(ss_sold_date_sk#69 IN dynamicpruning#1292)], PushedFilters: [IsNotNull(ss_item_sk)], ReadSchema: struct<ss_item_sk:int>\n               :     :           +- ReusedSubquery SubqueryBroadcast dynamicpruning#1292, 0, [d_date_sk#799], [id=#4500]\n               :     +- BroadcastQueryStage 0\n               :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=1714]\n               :           +- *(1) Project [d_date_sk#70]\n               :              +- *(1) Filter (((isnotnull(d_year#76) AND (d_year#76 >= 1998)) AND (d_year#76 <= 2000)) AND isnotnull(d_date_sk#70))\n               :                 +- *(1) ColumnarToRow\n               :                    +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#70,d_year#76] Batched: true, DataFilters: [isnotnull(d_year#76), (d_year#76 >= 1998), (d_year#76 <= 2000), isnotnull(d_date_sk#70)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), GreaterThanOrEqual(d_year,1998), LessThanOrEqual(d_year,2000), IsNotNull(d_da..., ReadSchema: struct<d_date_sk:int,d_year:int>\n               +- BroadcastQueryStage 61\n                  +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=8021]\n                     +- *(37) SortMergeJoin [coalesce(i_brand_id#762, 0), isnull(i_brand_id#762), coalesce(i_class_id#764, 0), isnull(i_class_id#764), coalesce(i_category_id#766, 0), isnull(i_category_id#766)], [coalesce(i_brand_id#784, 0), isnull(i_brand_id#784), coalesce(i_class_id#786, 0), isnull(i_class_id#786), coalesce(i_category_id#788, 0), isnull(i_category_id#788)], LeftSemi\n                        :- *(35) Sort [coalesce(i_brand_id#762, 0) ASC NULLS FIRST, isnull(i_brand_id#762) ASC NULLS FIRST, coalesce(i_class_id#764, 0) ASC NULLS FIRST, isnull(i_class_id#764) ASC NULLS FIRST, coalesce(i_category_id#766, 0) ASC NULLS FIRST, isnull(i_category_id#766) ASC NULLS FIRST], false, 0\n                        :  +- AQEShuffleRead coalesced\n                        :     +- ShuffleQueryStage 1\n                        :        +- Exchange hashpartitioning(coalesce(i_brand_id#762, 0), isnull(i_brand_id#762), coalesce(i_class_id#764, 0), isnull(i_class_id#764), coalesce(i_category_id#766, 0), isnull(i_category_id#766), 200), ENSURE_REQUIREMENTS, [plan_id=1733]\n                        :           +- *(2) Filter (((isnotnull(i_item_sk#755) AND isnotnull(i_brand_id#762)) AND isnotnull(i_class_id#764)) AND isnotnull(i_category_id#766))\n                        :              +- *(2) ColumnarToRow\n                        :                 +- FileScan parquet spark_catalog.tpcds_100.item[i_item_sk#755,i_brand_id#762,i_class_id#764,i_category_id#766] Batched: true, DataFilters: [isnotnull(i_item_sk#755), isnotnull(i_brand_id#762), isnotnull(i_class_id#764), isnotnull(i_cate..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/item], PartitionFilters: [], PushedFilters: [IsNotNull(i_item_sk), IsNotNull(i_brand_id), IsNotNull(i_class_id), IsNotNull(i_category_id)], ReadSchema: struct<i_item_sk:int,i_brand_id:int,i_class_id:int,i_category_id:int>\n                        +- *(36) Sort [coalesce(i_brand_id#784, 0) ASC NULLS FIRST, isnull(i_brand_id#784) ASC NULLS FIRST, coalesce(i_class_id#786, 0) ASC NULLS FIRST, isnull(i_class_id#786) ASC NULLS FIRST, coalesce(i_category_id#788, 0) ASC NULLS FIRST, isnull(i_category_id#788) ASC NULLS FIRST], false, 0\n                           +- AQEShuffleRead coalesced\n                              +- ShuffleQueryStage 47\n                                 +- Exchange hashpartitioning(coalesce(i_brand_id#784, 0), isnull(i_brand_id#784), coalesce(i_class_id#786, 0), isnull(i_class_id#786), coalesce(i_category_id#788, 0), isnull(i_category_id#788), 200), ENSURE_REQUIREMENTS, [plan_id=4537]\n                                    +- *(27) Project [i_brand_id#784, i_class_id#786, i_category_id#788]\n                                       +- *(27) BroadcastHashJoin [cs_item_sk#112], [i_item_sk#777], Inner, BuildRight, false\n                                          :- *(27) Project [cs_item_sk#112]\n                                          :  +- *(27) BroadcastHashJoin [cs_sold_date_sk#131], [d_date_sk#799], Inner, BuildRight, false\n                                          :     :- *(27) Filter isnotnull(cs_item_sk#112)\n                                          :     :  +- *(27) ColumnarToRow\n                                          :     :     +- FileScan parquet spark_catalog.tpcds_100.catalog_sales[cs_item_sk#112,cs_sold_date_sk#131] Batched: true, DataFilters: [isnotnull(cs_item_sk#112)], Format: Parquet, Location: InMemoryFileIndex(1836 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/catalo..., PartitionFilters: [isnotnull(cs_sold_date_sk#131), dynamicpruningexpression(cs_sold_date_sk#131 IN dynamicpruning#1..., PushedFilters: [IsNotNull(cs_item_sk)], ReadSchema: struct<cs_item_sk:int>\n                                          :     :           +- SubqueryBroadcast dynamicpruning#1292, 0, [d_date_sk#799], [id=#4500]\n                                          :     :              +- AdaptiveSparkPlan isFinalPlan=true\n                                                                  +- == Final Plan ==\n                                                                     BroadcastQueryStage 1\n                                                                     +- ReusedExchange [d_date_sk#799], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=1714]\n                                                                  +- == Initial Plan ==\n                                                                     BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=4497]\n                                                                     +- Project [d_date_sk#799]\n                                                                        +- Filter (((isnotnull(d_year#805) AND (d_year#805 >= 1998)) AND (d_year#805 <= 2000)) AND isnotnull(d_date_sk#799))\n                                                                           +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#799,d_year#805] Batched: true, DataFilters: [isnotnull(d_year#805), (d_year#805 >= 1998), (d_year#805 <= 2000), isnotnull(d_date_sk#799)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), GreaterThanOrEqual(d_year,1998), LessThanOrEqual(d_year,2000), IsNotNull(d_da..., ReadSchema: struct<d_date_sk:int,d_year:int>\n                                          :     +- BroadcastQueryStage 3\n                                          :        +- ReusedExchange [d_date_sk#799], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=1714]\n                                          +- BroadcastQueryStage 4\n                                             +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=1773]\n                                                +- *(4) Filter isnotnull(i_item_sk#777)\n                                                   +- *(4) ColumnarToRow\n                                                      +- FileScan parquet spark_catalog.tpcds_100.item[i_item_sk#777,i_brand_id#784,i_class_id#786,i_category_id#788] Batched: true, DataFilters: [isnotnull(i_item_sk#777)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/item], PartitionFilters: [], PushedFilters: [IsNotNull(i_item_sk)], ReadSchema: struct<i_item_sk:int,i_brand_id:int,i_class_id:int,i_category_id:int>\n"
      },
      "IM" : {
        "inputSizeInBytes" : 33475968,
        "inputRowCount" : 1046124
      },
      "InitialPartitionNum" : 200,
      "PD" : {
        "3" : [ 71941, 79415, 79442, 73342, 80974, 68910, 75077, 86075, 74427, 73151, 67774, 85518, 68842, 73558, 81211, 77059, 77810, 73162, 73054, 79686, 74716, 78711, 73342, 73545, 73473, 73432, 69972, 78119, 68059, 79744, 87750, 66881, 94358, 72843, 87663, 81067, 79153, 68280, 73203, 82539, 68532, 73288, 80765, 73761, 72838, 73360, 65341, 69454, 76915, 67733, 80081, 66804, 88185, 66587, 79785, 73895, 78968, 87671, 79277, 79679, 87048, 74808, 83727, 72616, 71855, 66522, 73522, 80922, 73655, 75729, 80239, 73421, 63034, 87054, 88939, 83038, 73854, 66760, 81821, 87149, 89264, 88020, 73419, 80449, 79343, 66603, 73041, 83798, 73426, 78237, 87663, 78824, 70775, 88707, 73460, 71981, 69173, 73000, 74328, 81002, 72290, 89375, 70809, 74465, 50450, 80909, 73939, 66912, 73000, 89525, 69054, 73343, 83843, 73408, 65081, 69081, 80771, 71001, 77224, 73761, 81465, 80435, 73992, 97527, 72352, 85206, 73617, 80607, 80981, 81211, 81271, 89201, 75499, 85279, 81146, 74485, 73898, 62557, 88258, 68820, 68141, 97814, 67709, 86967, 66392, 80205, 60034, 73676, 80311, 73316, 67117, 73388, 80916, 89192, 73205, 73860, 73360, 69147, 63554, 83167, 71909, 88881, 73689, 87657, 79350, 74143, 76980, 77770, 72092, 73710, 74308, 77763, 88685, 72058, 92990, 88670, 65970, 89055, 81423, 86809, 82888, 78271, 84974, 55176, 79995, 73107, 80765, 80126, 66706, 73748, 89279, 89042, 88931, 78501, 80514, 72886, 85757, 80778, 73611, 86234 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 11,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 17 ],
      "Objectives" : {
        "DurationInMs" : 372,
        "TotalTasksDurationInMs" : 358,
        "IOBytes" : {
          "Total" : 14845629,
          "Details" : {
            "IR" : 0,
            "IW" : 0,
            "SR" : 14686684,
            "SW" : 158945
          }
        }
      }
    },
    "9" : {
      "QSLogical" : {
        "operators" : {
          "0" : {
            "sign" : 632446147,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 4860984,
                "rowCount" : 202541
              },
              "compileTime" : {
                "sizeInBytes" : 4860984,
                "rowCount" : 202541
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (((i_brand_id#762 <=> i_brand_id#784) AND (i_class_id#764 <=> i_class_id#786)) AND (i_category_id#766 <=> i_category_id#788)) "
          }
        },
        "links" : [ ],
        "rawPlan" : "Join LeftSemi, (((i_brand_id#762 <=> i_brand_id#784) AND (i_class_id#764 <=> i_class_id#786)) AND (i_category_id#766 <=> i_category_id#788))\n:- Project [i_item_sk#755, i_brand_id#762, i_class_id#764, i_category_id#766]\n:  +- Filter (isnotnull(i_item_sk#755) AND ((isnotnull(i_brand_id#762) AND isnotnull(i_class_id#764)) AND isnotnull(i_category_id#766)))\n:     +- Relation spark_catalog.tpcds_100.item[i_item_sk#755,i_item_id#756,i_rec_start_date#757,i_rec_end_date#758,i_item_desc#759,i_current_price#760,i_wholesale_cost#761,i_brand_id#762,i_brand#763,i_class_id#764,i_class#765,i_category_id#766,i_category#767,i_manufact_id#768,i_manufact#769,i_size#770,i_formulation#771,i_color#772,i_units#773,i_container#774,i_manager_id#775,i_product_name#776] parquet\n+- Project [i_brand_id#784, i_class_id#786, i_category_id#788]\n   +- Join Inner, (cs_item_sk#112 = i_item_sk#777)\n      :- Project [cs_item_sk#112]\n      :  +- Join Inner, (cs_sold_date_sk#131 = d_date_sk#799)\n      :     :- Project [cs_item_sk#112, cs_sold_date_sk#131]\n      :     :  +- Filter ((isnotnull(cs_item_sk#112) AND isnotnull(cs_sold_date_sk#131)) AND dynamicpruning#1292 [cs_sold_date_sk#131])\n      :     :     :  +- Project [d_date_sk#799]\n      :     :     :     +- Filter ((isnotnull(d_year#805) AND ((d_year#805 >= 1998) AND (d_year#805 <= 2000))) AND isnotnull(d_date_sk#799))\n      :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#799,d_date_id#800,d_date#801,d_month_seq#802,d_week_seq#803,d_quarter_seq#804,d_year#805,d_dow#806,d_moy#807,d_dom#808,d_qoy#809,d_fy_year#810,d_fy_quarter_seq#811,d_fy_week_seq#812,d_day_name#813,d_quarter_name#814,d_holiday#815,d_weekend#816,d_following_holiday#817,d_first_dom#818,d_last_dom#819,d_same_day_ly#820,d_same_day_lq#821,d_current_day#822,... 4 more fields] parquet\n      :     :     +- Relation spark_catalog.tpcds_100.catalog_sales[cs_sold_time_sk#98,cs_ship_date_sk#99,cs_bill_customer_sk#100,cs_bill_cdemo_sk#101,cs_bill_hdemo_sk#102,cs_bill_addr_sk#103,cs_ship_customer_sk#104,cs_ship_cdemo_sk#105,cs_ship_hdemo_sk#106,cs_ship_addr_sk#107,cs_call_center_sk#108,cs_catalog_page_sk#109,cs_ship_mode_sk#110,cs_warehouse_sk#111,cs_item_sk#112,cs_promo_sk#113,cs_order_number#114L,cs_quantity#115,cs_wholesale_cost#116,cs_list_price#117,cs_sales_price#118,cs_ext_discount_amt#119,cs_ext_sales_price#120,cs_ext_wholesale_cost#121,... 10 more fields] parquet\n      :     +- Project [d_date_sk#799]\n      :        +- Filter ((isnotnull(d_year#805) AND ((d_year#805 >= 1998) AND (d_year#805 <= 2000))) AND isnotnull(d_date_sk#799))\n      :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#799,d_date_id#800,d_date#801,d_month_seq#802,d_week_seq#803,d_quarter_seq#804,d_year#805,d_dow#806,d_moy#807,d_dom#808,d_qoy#809,d_fy_year#810,d_fy_quarter_seq#811,d_fy_week_seq#812,d_day_name#813,d_quarter_name#814,d_holiday#815,d_weekend#816,d_following_holiday#817,d_first_dom#818,d_last_dom#819,d_same_day_ly#820,d_same_day_lq#821,d_current_day#822,... 4 more fields] parquet\n      +- Project [i_item_sk#777, i_brand_id#784, i_class_id#786, i_category_id#788]\n         +- Filter isnotnull(i_item_sk#777)\n            +- Relation spark_catalog.tpcds_100.item[i_item_sk#777,i_item_id#778,i_rec_start_date#779,i_rec_end_date#780,i_item_desc#781,i_current_price#782,i_wholesale_cost#783,i_brand_id#784,i_brand#785,i_class_id#786,i_class#787,i_category_id#788,i_category#789,i_manufact_id#790,i_manufact#791,i_size#792,i_formulation#793,i_color#794,i_units#795,i_container#796,i_manager_id#797,i_product_name#798] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "4" : {
            "sign" : 309377867,
            "className" : "org.apache.spark.sql.execution.adaptive.ShuffleQueryStageExec",
            "sizeInBytes" : 2740469632,
            "rowCount" : 85639676,
            "isRuntime" : true,
            "predicate" : " (unknown) ShuffleQueryStage Output [3]: [i_brand_id#784, i_class_id#786, i_category_id#788] Arguments: 47 "
          },
          "1" : {
            "sign" : 1475974513,
            "className" : "org.apache.spark.sql.execution.SortExec",
            "sizeInBytes" : -1,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Input [4]: [i_item_sk#755, i_brand_id#762, i_class_id#764, i_category_id#766] Arguments: [coalesce(i_brand_id#762, 0) ASC NULLS FIRST, isnull(i_brand_id#762) ASC NULLS FIRST, coalesce(i_class_id#764, 0) ASC NULLS FIRST, isnull(i_class_id#764) ASC NULLS FIRST, coalesce(i_category_id#766, 0) ASC NULLS FIRST, isnull(i_category_id#766) ASC NULLS FIRST], false, 0 "
          },
          "0" : {
            "sign" : -1759056385,
            "className" : "org.apache.spark.sql.execution.joins.SortMergeJoinExec",
            "sizeInBytes" : 4860984,
            "rowCount" : 202541,
            "isRuntime" : false,
            "predicate" : " (unknown) SortMergeJoin Left keys [6]: [coalesce(i_brand_id#762, 0), isnull(i_brand_id#762), coalesce(i_class_id#764, 0), isnull(i_class_id#764), coalesce(i_category_id#766, 0), isnull(i_category_id#766)] Right keys [6]: [coalesce(i_brand_id#784, 0), isnull(i_brand_id#784), coalesce(i_class_id#786, 0), isnull(i_class_id#786), coalesce(i_category_id#788, 0), isnull(i_category_id#788)] Join type: LeftSemi Join condition: None "
          },
          "2" : {
            "sign" : 1579318110,
            "className" : "org.apache.spark.sql.execution.adaptive.ShuffleQueryStageExec",
            "sizeInBytes" : 8125760,
            "rowCount" : 203144,
            "isRuntime" : true,
            "predicate" : " (unknown) ShuffleQueryStage Output [4]: [i_item_sk#755, i_brand_id#762, i_class_id#764, i_category_id#766] Arguments: 1 "
          },
          "3" : {
            "sign" : 913966594,
            "className" : "org.apache.spark.sql.execution.SortExec",
            "sizeInBytes" : -1,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Input [3]: [i_brand_id#784, i_class_id#786, i_category_id#788] Arguments: [coalesce(i_brand_id#784, 0) ASC NULLS FIRST, isnull(i_brand_id#784) ASC NULLS FIRST, coalesce(i_class_id#786, 0) ASC NULLS FIRST, isnull(i_class_id#786) ASC NULLS FIRST, coalesce(i_category_id#788, 0) ASC NULLS FIRST, isnull(i_category_id#788) ASC NULLS FIRST], false, 0 "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "ShuffleQueryStage",
          "toId" : 1,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Sort",
          "toId" : 0,
          "toName" : "SortMergeJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "ShuffleQueryStage",
          "toId" : 3,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Sort",
          "toId" : 0,
          "toName" : "SortMergeJoin",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "SortMergeJoin [coalesce(i_brand_id#762, 0), isnull(i_brand_id#762), coalesce(i_class_id#764, 0), isnull(i_class_id#764), coalesce(i_category_id#766, 0), isnull(i_category_id#766)], [coalesce(i_brand_id#784, 0), isnull(i_brand_id#784), coalesce(i_class_id#786, 0), isnull(i_class_id#786), coalesce(i_category_id#788, 0), isnull(i_category_id#788)], LeftSemi\n:- Sort [coalesce(i_brand_id#762, 0) ASC NULLS FIRST, isnull(i_brand_id#762) ASC NULLS FIRST, coalesce(i_class_id#764, 0) ASC NULLS FIRST, isnull(i_class_id#764) ASC NULLS FIRST, coalesce(i_category_id#766, 0) ASC NULLS FIRST, isnull(i_category_id#766) ASC NULLS FIRST], false, 0\n:  +- ShuffleQueryStage 1\n:     +- Exchange hashpartitioning(coalesce(i_brand_id#762, 0), isnull(i_brand_id#762), coalesce(i_class_id#764, 0), isnull(i_class_id#764), coalesce(i_category_id#766, 0), isnull(i_category_id#766), 200), ENSURE_REQUIREMENTS, [plan_id=1733]\n:        +- *(2) Filter (((isnotnull(i_item_sk#755) AND isnotnull(i_brand_id#762)) AND isnotnull(i_class_id#764)) AND isnotnull(i_category_id#766))\n:           +- *(2) ColumnarToRow\n:              +- FileScan parquet spark_catalog.tpcds_100.item[i_item_sk#755,i_brand_id#762,i_class_id#764,i_category_id#766] Batched: true, DataFilters: [isnotnull(i_item_sk#755), isnotnull(i_brand_id#762), isnotnull(i_class_id#764), isnotnull(i_cate..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/item], PartitionFilters: [], PushedFilters: [IsNotNull(i_item_sk), IsNotNull(i_brand_id), IsNotNull(i_class_id), IsNotNull(i_category_id)], ReadSchema: struct<i_item_sk:int,i_brand_id:int,i_class_id:int,i_category_id:int>\n+- Sort [coalesce(i_brand_id#784, 0) ASC NULLS FIRST, isnull(i_brand_id#784) ASC NULLS FIRST, coalesce(i_class_id#786, 0) ASC NULLS FIRST, isnull(i_class_id#786) ASC NULLS FIRST, coalesce(i_category_id#788, 0) ASC NULLS FIRST, isnull(i_category_id#788) ASC NULLS FIRST], false, 0\n   +- ShuffleQueryStage 47\n      +- Exchange hashpartitioning(coalesce(i_brand_id#784, 0), isnull(i_brand_id#784), coalesce(i_class_id#786, 0), isnull(i_class_id#786), coalesce(i_category_id#788, 0), isnull(i_category_id#788), 200), ENSURE_REQUIREMENTS, [plan_id=4537]\n         +- *(27) Project [i_brand_id#784, i_class_id#786, i_category_id#788]\n            +- *(27) BroadcastHashJoin [cs_item_sk#112], [i_item_sk#777], Inner, BuildRight, false\n               :- *(27) Project [cs_item_sk#112]\n               :  +- *(27) BroadcastHashJoin [cs_sold_date_sk#131], [d_date_sk#799], Inner, BuildRight, false\n               :     :- *(27) Filter isnotnull(cs_item_sk#112)\n               :     :  +- *(27) ColumnarToRow\n               :     :     +- FileScan parquet spark_catalog.tpcds_100.catalog_sales[cs_item_sk#112,cs_sold_date_sk#131] Batched: true, DataFilters: [isnotnull(cs_item_sk#112)], Format: Parquet, Location: InMemoryFileIndex(1836 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/catalo..., PartitionFilters: [isnotnull(cs_sold_date_sk#131), dynamicpruningexpression(cs_sold_date_sk#131 IN dynamicpruning#1..., PushedFilters: [IsNotNull(cs_item_sk)], ReadSchema: struct<cs_item_sk:int>\n               :     :           +- SubqueryBroadcast dynamicpruning#1292, 0, [d_date_sk#799], [id=#4500]\n               :     :              +- AdaptiveSparkPlan isFinalPlan=true\n                                       +- == Final Plan ==\n                                          BroadcastQueryStage 1\n                                          +- ReusedExchange [d_date_sk#799], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=1714]\n                                       +- == Initial Plan ==\n                                          BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=4497]\n                                          +- Project [d_date_sk#799]\n                                             +- Filter (((isnotnull(d_year#805) AND (d_year#805 >= 1998)) AND (d_year#805 <= 2000)) AND isnotnull(d_date_sk#799))\n                                                +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#799,d_year#805] Batched: true, DataFilters: [isnotnull(d_year#805), (d_year#805 >= 1998), (d_year#805 <= 2000), isnotnull(d_date_sk#799)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), GreaterThanOrEqual(d_year,1998), LessThanOrEqual(d_year,2000), IsNotNull(d_da..., ReadSchema: struct<d_date_sk:int,d_year:int>\n               :     +- BroadcastQueryStage 3\n               :        +- ReusedExchange [d_date_sk#799], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=1714]\n               +- BroadcastQueryStage 4\n                  +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=1773]\n                     +- *(4) Filter isnotnull(i_item_sk#777)\n                        +- *(4) ColumnarToRow\n                           +- FileScan parquet spark_catalog.tpcds_100.item[i_item_sk#777,i_brand_id#784,i_class_id#786,i_category_id#788] Batched: true, DataFilters: [isnotnull(i_item_sk#777)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/item], PartitionFilters: [], PushedFilters: [IsNotNull(i_item_sk)], ReadSchema: struct<i_item_sk:int,i_brand_id:int,i_class_id:int,i_category_id:int>\n"
      },
      "IM" : {
        "inputSizeInBytes" : 2748595392,
        "inputRowCount" : 85842820
      },
      "InitialPartitionNum" : 200,
      "PD" : {
        "1" : [ 343068, 890938, 800121, 628104, 787568, 1128386, 509727, 408115, 817949, 713729, 1406980, 836232, 1441636, 2036567, 2980160, 921216, 185945, 899840, 674681, 212928, 169511, 2143545, 2625499, 749371, 336595, 947008, 1365237, 1562554, 5747186, 1467821, 181708, 1412408, 1038539, 1570821, 1382826, 602361, 1426347, 560364, 499132, 1202472, 968505, 386327, 180840, 2401121, 1669829, 794530, 1447648, 314580, 464409, 832608, 554522, 863530, 1939290, 883612, 1026791, 870210, 672125, 1252889, 2982580, 509435, 1701837, 845580, 1295036, 1027911, 2474043, 1389519, 699153, 1121263, 957452, 1526673, 868057, 680216, 633426, 2589677, 598368, 1246638, 1596931, 1379938, 1312530, 1534566, 1328559, 936523, 1256801, 627052, 1776930, 550327, 433952, 1114425, 1097695, 224554, 834047, 233730, 594257, 222447, 738189, 609527, 1453966, 846610, 1058252, 1000168, 806129, 705647, 1420164, 855116, 1141005, 663831, 2468661, 557905, 749444, 1545663, 1390361, 2917725, 1496196, 1329127, 311414, 567859, 1709934, 358566, 1060034, 2911543, 3338041, 218205, 830305, 756494, 608921, 317624, 2088449, 425391, 288658, 810185, 579442, 1712914, 1860621, 678575, 403023, 1835190, 380061, 900102, 697482, 816826, 1080461, 645076, 1384643, 1867818, 622601, 627578, 808904, 367317, 1702418, 2064262, 660230, 981779, 557790, 2039999, 521555, 245233, 958892, 1472714, 179976, 2712606, 1130444, 621096, 282877, 3043481, 1755097, 992717, 520849, 794236, 1850933, 1322721, 1683394, 1130141, 870839, 468360, 852492, 1346739, 228472, 1801332, 2216494, 1028057, 1079078, 1176461, 1198045, 630763, 406056, 5823269, 574838, 1819966, 717960, 1044266, 1557480, 1391847, 1216460, 752076, 2096285, 1326889, 1817583, 1830574, 1173630, 668602 ],
        "0" : [ 5844, 9412, 7071, 5313, 7071, 8556, 7071, 5844, 7071, 5313, 9412, 7071, 9412, 20176, 20176, 7778, 5844, 7778, 6428, 4830, 4390, 18341, 20176, 7071, 5844, 8556, 16674, 10353, 32493, 9412, 3628, 16674, 9412, 8556, 9412, 6428, 8556, 6428, 5844, 16674, 7778, 5313, 4830, 22193, 10353, 6428, 18341, 5844, 7071, 7071, 5844, 7778, 10353, 7071, 7071, 6428, 6428, 9412, 20176, 6428, 16674, 7071, 10353, 8556, 22193, 16674, 6428, 9412, 7778, 9412, 6428, 5844, 6428, 18341, 6428, 9412, 11388, 10353, 20176, 10353, 9412, 6428, 8556, 5844, 9412, 5844, 5844, 18341, 8556, 4390, 13780, 4830, 7071, 4830, 7071, 6428, 20176, 7071, 7778, 7778, 5844, 7071, 11388, 7778, 8556, 6428, 18341, 6428, 6428, 10353, 8556, 22193, 9412, 7778, 5844, 6428, 20176, 5313, 7071, 20176, 24413, 4390, 7071, 7071, 7071, 6428, 20176, 6428, 5844, 10353, 5844, 10353, 15158, 7071, 5844, 20176, 4830, 7778, 5844, 8556, 9412, 7071, 9412, 11388, 5313, 6428, 13780, 4830, 16674, 11388, 6428, 15158, 6428, 20176, 6428, 5313, 7778, 8556, 4390, 22193, 8556, 7778, 5844, 22193, 9412, 7778, 6428, 6428, 11388, 9412, 9412, 7778, 7778, 5313, 6428, 9412, 4830, 11388, 18341, 7778, 7778, 8556, 8556, 6428, 5313, 35743, 6428, 20176, 7778, 10353, 9412, 11388, 20176, 6428, 22193, 10353, 10353, 11388, 7778, 6428 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 9,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 14 ],
      "Objectives" : {
        "DurationInMs" : 18605,
        "TotalTasksDurationInMs" : 63975,
        "IOBytes" : {
          "Total" : 218480040,
          "Details" : {
            "IR" : 0,
            "IW" : 0,
            "SR" : 218480040,
            "SW" : 0
          }
        }
      }
    },
    "13" : {
      "QSLogical" : {
        "operators" : {
          "4" : {
            "sign" : 2096275601,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 86904000,
                "rowCount" : 204000
              },
              "compileTime" : {
                "sizeInBytes" : 86904000,
                "rowCount" : 204000
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [i_item_sk#25, i_item_id#26, i_rec_start_date#27, i_rec_end_date#28, i_item_desc#29, i_current_price#30, i_wholesale_cost#31, i_brand_id#32, i_brand#33, i_class_id#34, i_class#35, i_category_id#36, i_category#37, i_manufact_id#38, i_manufact#39, i_size#40, i_formulation#41, i_color#42, i_units#43, i_container#44, i_manager_id#45, i_product_name#46], `spark_catalog`.`tpcds_100`.`item`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "1" : {
            "sign" : -1391239302,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 7291476,
                "rowCount" : 202541
              },
              "compileTime" : {
                "sizeInBytes" : 7291476,
                "rowCount" : 202541
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (((i_brand_id#32 = brand_id#742) AND (i_class_id#34 = class_id#743)) AND (i_category_id#36 = category_id#744)) "
          },
          "0" : {
            "sign" : 1913961819,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 2430492,
                "rowCount" : 202541
              },
              "compileTime" : {
                "sizeInBytes" : 2430492,
                "rowCount" : 202541
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_item_sk#25 AS ss_item_sk#745] "
          },
          "2" : {
            "sign" : 2089743597,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 4860984,
                "rowCount" : 202541
              },
              "compileTime" : {
                "sizeInBytes" : 4860984,
                "rowCount" : 202541
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_item_sk#25, i_brand_id#32, i_class_id#34, i_category_id#36] "
          },
          "3" : {
            "sign" : -1756391561,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 86282466,
                "rowCount" : 202541
              },
              "compileTime" : {
                "sizeInBytes" : 86282466,
                "rowCount" : 202541
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(i_brand_id#32) AND isnotnull(i_class_id#34)) AND isnotnull(i_category_id#36)) "
          }
        },
        "links" : [ {
          "fromId" : 4,
          "fromName" : "LogicalRelation",
          "toId" : 3,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Filter",
          "toId" : 2,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Project",
          "toId" : 1,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Join",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [i_item_sk#25 AS ss_item_sk#745]\n+- Join Inner, (((i_brand_id#32 = brand_id#742) AND (i_class_id#34 = class_id#743)) AND (i_category_id#36 = category_id#744))\n   :- Project [i_item_sk#25, i_brand_id#32, i_class_id#34, i_category_id#36]\n   :  +- Filter ((isnotnull(i_brand_id#32) AND isnotnull(i_class_id#34)) AND isnotnull(i_category_id#36))\n   :     +- Relation spark_catalog.tpcds_100.item[i_item_sk#25,i_item_id#26,i_rec_start_date#27,i_rec_end_date#28,i_item_desc#29,i_current_price#30,i_wholesale_cost#31,i_brand_id#32,i_brand#33,i_class_id#34,i_class#35,i_category_id#36,i_category#37,i_manufact_id#38,i_manufact#39,i_size#40,i_formulation#41,i_color#42,i_units#43,i_container#44,i_manager_id#45,i_product_name#46] parquet\n   +- Join LeftSemi, (((brand_id#742 <=> i_brand_id#834) AND (class_id#743 <=> i_class_id#836)) AND (category_id#744 <=> i_category_id#838))\n      :- Aggregate [brand_id#742, class_id#743, category_id#744], [brand_id#742, class_id#743, category_id#744]\n      :  +- Project [i_brand_id#762 AS brand_id#742, i_class_id#764 AS class_id#743, i_category_id#766 AS category_id#744]\n      :     +- Join Inner, (ss_item_sk#48 = i_item_sk#755)\n      :        :- Project [ss_item_sk#48]\n      :        :  +- Join Inner, (ss_sold_date_sk#69 = d_date_sk#70)\n      :        :     :- Project [ss_item_sk#48, ss_sold_date_sk#69]\n      :        :     :  +- Filter ((isnotnull(ss_item_sk#48) AND isnotnull(ss_sold_date_sk#69)) AND dynamicpruning#1291 [ss_sold_date_sk#69])\n      :        :     :     :  +- Project [d_date_sk#70]\n      :        :     :     :     +- Filter ((isnotnull(d_year#76) AND ((d_year#76 >= 1998) AND (d_year#76 <= 2000))) AND isnotnull(d_date_sk#70))\n      :        :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#70,d_date_id#71,d_date#72,d_month_seq#73,d_week_seq#74,d_quarter_seq#75,d_year#76,d_dow#77,d_moy#78,d_dom#79,d_qoy#80,d_fy_year#81,d_fy_quarter_seq#82,d_fy_week_seq#83,d_day_name#84,d_quarter_name#85,d_holiday#86,d_weekend#87,d_following_holiday#88,d_first_dom#89,d_last_dom#90,d_same_day_ly#91,d_same_day_lq#92,d_current_day#93,... 4 more fields] parquet\n      :        :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#47,ss_item_sk#48,ss_customer_sk#49,ss_cdemo_sk#50,ss_hdemo_sk#51,ss_addr_sk#52,ss_store_sk#53,ss_promo_sk#54,ss_ticket_number#55L,ss_quantity#56,ss_wholesale_cost#57,ss_list_price#58,ss_sales_price#59,ss_ext_discount_amt#60,ss_ext_sales_price#61,ss_ext_wholesale_cost#62,ss_ext_list_price#63,ss_ext_tax#64,ss_coupon_amt#65,ss_net_paid#66,ss_net_paid_inc_tax#67,ss_net_profit#68,ss_sold_date_sk#69] parquet\n      :        :     +- Project [d_date_sk#70]\n      :        :        +- Filter ((isnotnull(d_year#76) AND ((d_year#76 >= 1998) AND (d_year#76 <= 2000))) AND isnotnull(d_date_sk#70))\n      :        :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#70,d_date_id#71,d_date#72,d_month_seq#73,d_week_seq#74,d_quarter_seq#75,d_year#76,d_dow#77,d_moy#78,d_dom#79,d_qoy#80,d_fy_year#81,d_fy_quarter_seq#82,d_fy_week_seq#83,d_day_name#84,d_quarter_name#85,d_holiday#86,d_weekend#87,d_following_holiday#88,d_first_dom#89,d_last_dom#90,d_same_day_ly#91,d_same_day_lq#92,d_current_day#93,... 4 more fields] parquet\n      :        +- Join LeftSemi, (((i_brand_id#762 <=> i_brand_id#784) AND (i_class_id#764 <=> i_class_id#786)) AND (i_category_id#766 <=> i_category_id#788))\n      :           :- Project [i_item_sk#755, i_brand_id#762, i_class_id#764, i_category_id#766]\n      :           :  +- Filter (isnotnull(i_item_sk#755) AND ((isnotnull(i_brand_id#762) AND isnotnull(i_class_id#764)) AND isnotnull(i_category_id#766)))\n      :           :     +- Relation spark_catalog.tpcds_100.item[i_item_sk#755,i_item_id#756,i_rec_start_date#757,i_rec_end_date#758,i_item_desc#759,i_current_price#760,i_wholesale_cost#761,i_brand_id#762,i_brand#763,i_class_id#764,i_class#765,i_category_id#766,i_category#767,i_manufact_id#768,i_manufact#769,i_size#770,i_formulation#771,i_color#772,i_units#773,i_container#774,i_manager_id#775,i_product_name#776] parquet\n      :           +- Project [i_brand_id#784, i_class_id#786, i_category_id#788]\n      :              +- Join Inner, (cs_item_sk#112 = i_item_sk#777)\n      :                 :- Project [cs_item_sk#112]\n      :                 :  +- Join Inner, (cs_sold_date_sk#131 = d_date_sk#799)\n      :                 :     :- Project [cs_item_sk#112, cs_sold_date_sk#131]\n      :                 :     :  +- Filter ((isnotnull(cs_item_sk#112) AND isnotnull(cs_sold_date_sk#131)) AND dynamicpruning#1292 [cs_sold_date_sk#131])\n      :                 :     :     :  +- Project [d_date_sk#799]\n      :                 :     :     :     +- Filter ((isnotnull(d_year#805) AND ((d_year#805 >= 1998) AND (d_year#805 <= 2000))) AND isnotnull(d_date_sk#799))\n      :                 :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#799,d_date_id#800,d_date#801,d_month_seq#802,d_week_seq#803,d_quarter_seq#804,d_year#805,d_dow#806,d_moy#807,d_dom#808,d_qoy#809,d_fy_year#810,d_fy_quarter_seq#811,d_fy_week_seq#812,d_day_name#813,d_quarter_name#814,d_holiday#815,d_weekend#816,d_following_holiday#817,d_first_dom#818,d_last_dom#819,d_same_day_ly#820,d_same_day_lq#821,d_current_day#822,... 4 more fields] parquet\n      :                 :     :     +- Relation spark_catalog.tpcds_100.catalog_sales[cs_sold_time_sk#98,cs_ship_date_sk#99,cs_bill_customer_sk#100,cs_bill_cdemo_sk#101,cs_bill_hdemo_sk#102,cs_bill_addr_sk#103,cs_ship_customer_sk#104,cs_ship_cdemo_sk#105,cs_ship_hdemo_sk#106,cs_ship_addr_sk#107,cs_call_center_sk#108,cs_catalog_page_sk#109,cs_ship_mode_sk#110,cs_warehouse_sk#111,cs_item_sk#112,cs_promo_sk#113,cs_order_number#114L,cs_quantity#115,cs_wholesale_cost#116,cs_list_price#117,cs_sales_price#118,cs_ext_discount_amt#119,cs_ext_sales_price#120,cs_ext_wholesale_cost#121,... 10 more fields] parquet\n      :                 :     +- Project [d_date_sk#799]\n      :                 :        +- Filter ((isnotnull(d_year#805) AND ((d_year#805 >= 1998) AND (d_year#805 <= 2000))) AND isnotnull(d_date_sk#799))\n      :                 :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#799,d_date_id#800,d_date#801,d_month_seq#802,d_week_seq#803,d_quarter_seq#804,d_year#805,d_dow#806,d_moy#807,d_dom#808,d_qoy#809,d_fy_year#810,d_fy_quarter_seq#811,d_fy_week_seq#812,d_day_name#813,d_quarter_name#814,d_holiday#815,d_weekend#816,d_following_holiday#817,d_first_dom#818,d_last_dom#819,d_same_day_ly#820,d_same_day_lq#821,d_current_day#822,... 4 more fields] parquet\n      :                 +- Project [i_item_sk#777, i_brand_id#784, i_class_id#786, i_category_id#788]\n      :                    +- Filter isnotnull(i_item_sk#777)\n      :                       +- Relation spark_catalog.tpcds_100.item[i_item_sk#777,i_item_id#778,i_rec_start_date#779,i_rec_end_date#780,i_item_desc#781,i_current_price#782,i_wholesale_cost#783,i_brand_id#784,i_brand#785,i_class_id#786,i_class#787,i_category_id#788,i_category#789,i_manufact_id#790,i_manufact#791,i_size#792,i_formulation#793,i_color#794,i_units#795,i_container#796,i_manager_id#797,i_product_name#798] parquet\n      +- Project [i_brand_id#834, i_class_id#836, i_category_id#838]\n         +- Join Inner, (ws_item_sk#134 = i_item_sk#827)\n            :- Project [ws_item_sk#134]\n            :  +- Join Inner, (ws_sold_date_sk#165 = d_date_sk#849)\n            :     :- Project [ws_item_sk#134, ws_sold_date_sk#165]\n            :     :  +- Filter ((isnotnull(ws_item_sk#134) AND isnotnull(ws_sold_date_sk#165)) AND dynamicpruning#1293 [ws_sold_date_sk#165])\n            :     :     :  +- Project [d_date_sk#849]\n            :     :     :     +- Filter ((isnotnull(d_year#855) AND ((d_year#855 >= 1998) AND (d_year#855 <= 2000))) AND isnotnull(d_date_sk#849))\n            :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#849,d_date_id#850,d_date#851,d_month_seq#852,d_week_seq#853,d_quarter_seq#854,d_year#855,d_dow#856,d_moy#857,d_dom#858,d_qoy#859,d_fy_year#860,d_fy_quarter_seq#861,d_fy_week_seq#862,d_day_name#863,d_quarter_name#864,d_holiday#865,d_weekend#866,d_following_holiday#867,d_first_dom#868,d_last_dom#869,d_same_day_ly#870,d_same_day_lq#871,d_current_day#872,... 4 more fields] parquet\n            :     :     +- Relation spark_catalog.tpcds_100.web_sales[ws_sold_time_sk#132,ws_ship_date_sk#133,ws_item_sk#134,ws_bill_customer_sk#135,ws_bill_cdemo_sk#136,ws_bill_hdemo_sk#137,ws_bill_addr_sk#138,ws_ship_customer_sk#139,ws_ship_cdemo_sk#140,ws_ship_hdemo_sk#141,ws_ship_addr_sk#142,ws_web_page_sk#143,ws_web_site_sk#144,ws_ship_mode_sk#145,ws_warehouse_sk#146,ws_promo_sk#147,ws_order_number#148L,ws_quantity#149,ws_wholesale_cost#150,ws_list_price#151,ws_sales_price#152,ws_ext_discount_amt#153,ws_ext_sales_price#154,ws_ext_wholesale_cost#155,... 10 more fields] parquet\n            :     +- Project [d_date_sk#849]\n            :        +- Filter ((isnotnull(d_year#855) AND ((d_year#855 >= 1998) AND (d_year#855 <= 2000))) AND isnotnull(d_date_sk#849))\n            :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#849,d_date_id#850,d_date#851,d_month_seq#852,d_week_seq#853,d_quarter_seq#854,d_year#855,d_dow#856,d_moy#857,d_dom#858,d_qoy#859,d_fy_year#860,d_fy_quarter_seq#861,d_fy_week_seq#862,d_day_name#863,d_quarter_name#864,d_holiday#865,d_weekend#866,d_following_holiday#867,d_first_dom#868,d_last_dom#869,d_same_day_ly#870,d_same_day_lq#871,d_current_day#872,... 4 more fields] parquet\n            +- Project [i_item_sk#827, i_brand_id#834, i_class_id#836, i_category_id#838]\n               +- Filter isnotnull(i_item_sk#827)\n                  +- Relation spark_catalog.tpcds_100.item[i_item_sk#827,i_item_id#828,i_rec_start_date#829,i_rec_end_date#830,i_item_desc#831,i_current_price#832,i_wholesale_cost#833,i_brand_id#834,i_brand#835,i_class_id#836,i_class#837,i_category_id#838,i_category#839,i_manufact_id#840,i_manufact#841,i_size#842,i_formulation#843,i_color#844,i_units#845,i_container#846,i_manager_id#847,i_product_name#848] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "4" : {
            "sign" : 1957367846,
            "className" : "org.apache.spark.sql.execution.adaptive.BroadcastQueryStageExec",
            "sizeInBytes" : 34078720,
            "rowCount" : 11334,
            "isRuntime" : true,
            "predicate" : " (unknown) BroadcastQueryStage Output [3]: [brand_id#742, class_id#743, category_id#744] Arguments: 82 "
          },
          "1" : {
            "sign" : 297866473,
            "className" : "org.apache.spark.sql.execution.joins.BroadcastHashJoinExec",
            "sizeInBytes" : 7291476,
            "rowCount" : 202541,
            "isRuntime" : false,
            "predicate" : " (unknown) BroadcastHashJoin Left keys [3]: [i_brand_id#32, i_class_id#34, i_category_id#36] Right keys [3]: [brand_id#742, class_id#743, category_id#744] Join type: Inner Join condition: None "
          },
          "0" : {
            "sign" : 2102706930,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 2430492,
            "rowCount" : 202541,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [1]: [i_item_sk#25 AS ss_item_sk#745] Input [7]: [i_item_sk#25, i_brand_id#32, i_class_id#34, i_category_id#36, brand_id#742, class_id#743, category_id#744] "
          },
          "2" : {
            "sign" : -1506599451,
            "className" : "org.apache.spark.sql.execution.FilterExec",
            "sizeInBytes" : 4860984,
            "rowCount" : 202541,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Input [4]: [i_item_sk#25, i_brand_id#32, i_class_id#34, i_category_id#36] Condition : ((isnotnull(i_brand_id#32) AND isnotnull(i_class_id#34)) AND isnotnull(i_category_id#36)) "
          },
          "3" : {
            "sign" : -503301121,
            "className" : "org.apache.spark.sql.execution.FileSourceScanExec",
            "sizeInBytes" : 4860984,
            "rowCount" : 202541,
            "isRuntime" : false,
            "predicate" : " (unknown) Scan parquet spark_catalog.tpcds_100.item Output [4]: [i_item_sk#25, i_brand_id#32, i_class_id#34, i_category_id#36] Batched: true Location: InMemoryFileIndex [hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/item] PushedFilters: [IsNotNull(i_brand_id), IsNotNull(i_class_id), IsNotNull(i_category_id)] ReadSchema: struct<i_item_sk:int,i_brand_id:int,i_class_id:int,i_category_id:int> "
          }
        },
        "links" : [ {
          "fromId" : 3,
          "fromName" : "Scan parquet spark_catalog.tpcds_100.item",
          "toId" : 2,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Filter",
          "toId" : 1,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "BroadcastQueryStage",
          "toId" : 1,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "BroadcastHashJoin",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [i_item_sk#25 AS ss_item_sk#745]\n+- BroadcastHashJoin [i_brand_id#32, i_class_id#34, i_category_id#36], [brand_id#742, class_id#743, category_id#744], Inner, BuildRight, false\n   :- Filter ((isnotnull(i_brand_id#32) AND isnotnull(i_class_id#34)) AND isnotnull(i_category_id#36))\n   :  +- FileScan parquet spark_catalog.tpcds_100.item[i_item_sk#25,i_brand_id#32,i_class_id#34,i_category_id#36] Batched: true, DataFilters: [isnotnull(i_brand_id#32), isnotnull(i_class_id#34), isnotnull(i_category_id#36)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/item], PartitionFilters: [], PushedFilters: [IsNotNull(i_brand_id), IsNotNull(i_class_id), IsNotNull(i_category_id)], ReadSchema: struct<i_item_sk:int,i_brand_id:int,i_class_id:int,i_category_id:int>\n   +- BroadcastQueryStage 82\n      +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, int, true], input[1, int, true], input[2, int, true]),false), [plan_id=11135]\n         +- *(57) SortMergeJoin [coalesce(brand_id#742, 0), isnull(brand_id#742), coalesce(class_id#743, 0), isnull(class_id#743), coalesce(category_id#744, 0), isnull(category_id#744)], [coalesce(i_brand_id#834, 0), isnull(i_brand_id#834), coalesce(i_class_id#836, 0), isnull(i_class_id#836), coalesce(i_category_id#838, 0), isnull(i_category_id#838)], LeftSemi\n            :- *(55) Sort [coalesce(brand_id#742, 0) ASC NULLS FIRST, isnull(brand_id#742) ASC NULLS FIRST, coalesce(class_id#743, 0) ASC NULLS FIRST, isnull(class_id#743) ASC NULLS FIRST, coalesce(category_id#744, 0) ASC NULLS FIRST, isnull(category_id#744) ASC NULLS FIRST], false, 0\n            :  +- AQEShuffleRead coalesced\n            :     +- ShuffleQueryStage 75\n            :        +- Exchange hashpartitioning(coalesce(brand_id#742, 0), isnull(brand_id#742), coalesce(class_id#743, 0), isnull(class_id#743), coalesce(category_id#744, 0), isnull(category_id#744), 200), ENSURE_REQUIREMENTS, [plan_id=10347]\n            :           +- *(51) HashAggregate(keys=[brand_id#742, class_id#743, category_id#744], functions=[], output=[brand_id#742, class_id#743, category_id#744])\n            :              +- AQEShuffleRead coalesced\n            :                 +- ShuffleQueryStage 68\n            :                    +- Exchange hashpartitioning(brand_id#742, class_id#743, category_id#744, 200), ENSURE_REQUIREMENTS, [plan_id=9348]\n            :                       +- *(47) HashAggregate(keys=[brand_id#742, class_id#743, category_id#744], functions=[], output=[brand_id#742, class_id#743, category_id#744])\n            :                          +- *(47) Project [i_brand_id#762 AS brand_id#742, i_class_id#764 AS class_id#743, i_category_id#766 AS category_id#744]\n            :                             +- *(47) BroadcastHashJoin [ss_item_sk#48], [i_item_sk#755], Inner, BuildRight, false\n            :                                :- *(47) Project [ss_item_sk#48]\n            :                                :  +- *(47) BroadcastHashJoin [ss_sold_date_sk#69], [d_date_sk#70], Inner, BuildRight, false\n            :                                :     :- *(47) Filter isnotnull(ss_item_sk#48)\n            :                                :     :  +- *(47) ColumnarToRow\n            :                                :     :     +- FileScan parquet spark_catalog.tpcds_100.store_sales[ss_item_sk#48,ss_sold_date_sk#69] Batched: true, DataFilters: [isnotnull(ss_item_sk#48)], Format: Parquet, Location: InMemoryFileIndex(1823 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/store_..., PartitionFilters: [isnotnull(ss_sold_date_sk#69), dynamicpruningexpression(ss_sold_date_sk#69 IN dynamicpruning#1292)], PushedFilters: [IsNotNull(ss_item_sk)], ReadSchema: struct<ss_item_sk:int>\n            :                                :     :           +- ReusedSubquery SubqueryBroadcast dynamicpruning#1292, 0, [d_date_sk#799], [id=#4500]\n            :                                :     +- BroadcastQueryStage 0\n            :                                :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=1714]\n            :                                :           +- *(1) Project [d_date_sk#70]\n            :                                :              +- *(1) Filter (((isnotnull(d_year#76) AND (d_year#76 >= 1998)) AND (d_year#76 <= 2000)) AND isnotnull(d_date_sk#70))\n            :                                :                 +- *(1) ColumnarToRow\n            :                                :                    +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#70,d_year#76] Batched: true, DataFilters: [isnotnull(d_year#76), (d_year#76 >= 1998), (d_year#76 <= 2000), isnotnull(d_date_sk#70)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), GreaterThanOrEqual(d_year,1998), LessThanOrEqual(d_year,2000), IsNotNull(d_da..., ReadSchema: struct<d_date_sk:int,d_year:int>\n            :                                +- BroadcastQueryStage 61\n            :                                   +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=8021]\n            :                                      +- *(37) SortMergeJoin [coalesce(i_brand_id#762, 0), isnull(i_brand_id#762), coalesce(i_class_id#764, 0), isnull(i_class_id#764), coalesce(i_category_id#766, 0), isnull(i_category_id#766)], [coalesce(i_brand_id#784, 0), isnull(i_brand_id#784), coalesce(i_class_id#786, 0), isnull(i_class_id#786), coalesce(i_category_id#788, 0), isnull(i_category_id#788)], LeftSemi\n            :                                         :- *(35) Sort [coalesce(i_brand_id#762, 0) ASC NULLS FIRST, isnull(i_brand_id#762) ASC NULLS FIRST, coalesce(i_class_id#764, 0) ASC NULLS FIRST, isnull(i_class_id#764) ASC NULLS FIRST, coalesce(i_category_id#766, 0) ASC NULLS FIRST, isnull(i_category_id#766) ASC NULLS FIRST], false, 0\n            :                                         :  +- AQEShuffleRead coalesced\n            :                                         :     +- ShuffleQueryStage 1\n            :                                         :        +- Exchange hashpartitioning(coalesce(i_brand_id#762, 0), isnull(i_brand_id#762), coalesce(i_class_id#764, 0), isnull(i_class_id#764), coalesce(i_category_id#766, 0), isnull(i_category_id#766), 200), ENSURE_REQUIREMENTS, [plan_id=1733]\n            :                                         :           +- *(2) Filter (((isnotnull(i_item_sk#755) AND isnotnull(i_brand_id#762)) AND isnotnull(i_class_id#764)) AND isnotnull(i_category_id#766))\n            :                                         :              +- *(2) ColumnarToRow\n            :                                         :                 +- FileScan parquet spark_catalog.tpcds_100.item[i_item_sk#755,i_brand_id#762,i_class_id#764,i_category_id#766] Batched: true, DataFilters: [isnotnull(i_item_sk#755), isnotnull(i_brand_id#762), isnotnull(i_class_id#764), isnotnull(i_cate..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/item], PartitionFilters: [], PushedFilters: [IsNotNull(i_item_sk), IsNotNull(i_brand_id), IsNotNull(i_class_id), IsNotNull(i_category_id)], ReadSchema: struct<i_item_sk:int,i_brand_id:int,i_class_id:int,i_category_id:int>\n            :                                         +- *(36) Sort [coalesce(i_brand_id#784, 0) ASC NULLS FIRST, isnull(i_brand_id#784) ASC NULLS FIRST, coalesce(i_class_id#786, 0) ASC NULLS FIRST, isnull(i_class_id#786) ASC NULLS FIRST, coalesce(i_category_id#788, 0) ASC NULLS FIRST, isnull(i_category_id#788) ASC NULLS FIRST], false, 0\n            :                                            +- AQEShuffleRead coalesced\n            :                                               +- ShuffleQueryStage 47\n            :                                                  +- Exchange hashpartitioning(coalesce(i_brand_id#784, 0), isnull(i_brand_id#784), coalesce(i_class_id#786, 0), isnull(i_class_id#786), coalesce(i_category_id#788, 0), isnull(i_category_id#788), 200), ENSURE_REQUIREMENTS, [plan_id=4537]\n            :                                                     +- *(27) Project [i_brand_id#784, i_class_id#786, i_category_id#788]\n            :                                                        +- *(27) BroadcastHashJoin [cs_item_sk#112], [i_item_sk#777], Inner, BuildRight, false\n            :                                                           :- *(27) Project [cs_item_sk#112]\n            :                                                           :  +- *(27) BroadcastHashJoin [cs_sold_date_sk#131], [d_date_sk#799], Inner, BuildRight, false\n            :                                                           :     :- *(27) Filter isnotnull(cs_item_sk#112)\n            :                                                           :     :  +- *(27) ColumnarToRow\n            :                                                           :     :     +- FileScan parquet spark_catalog.tpcds_100.catalog_sales[cs_item_sk#112,cs_sold_date_sk#131] Batched: true, DataFilters: [isnotnull(cs_item_sk#112)], Format: Parquet, Location: InMemoryFileIndex(1836 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/catalo..., PartitionFilters: [isnotnull(cs_sold_date_sk#131), dynamicpruningexpression(cs_sold_date_sk#131 IN dynamicpruning#1..., PushedFilters: [IsNotNull(cs_item_sk)], ReadSchema: struct<cs_item_sk:int>\n            :                                                           :     :           +- SubqueryBroadcast dynamicpruning#1292, 0, [d_date_sk#799], [id=#4500]\n            :                                                           :     :              +- AdaptiveSparkPlan isFinalPlan=true\n                                                                                                +- == Final Plan ==\n                                                                                                   BroadcastQueryStage 1\n                                                                                                   +- ReusedExchange [d_date_sk#799], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=1714]\n                                                                                                +- == Initial Plan ==\n                                                                                                   BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=4497]\n                                                                                                   +- Project [d_date_sk#799]\n                                                                                                      +- Filter (((isnotnull(d_year#805) AND (d_year#805 >= 1998)) AND (d_year#805 <= 2000)) AND isnotnull(d_date_sk#799))\n                                                                                                         +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#799,d_year#805] Batched: true, DataFilters: [isnotnull(d_year#805), (d_year#805 >= 1998), (d_year#805 <= 2000), isnotnull(d_date_sk#799)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), GreaterThanOrEqual(d_year,1998), LessThanOrEqual(d_year,2000), IsNotNull(d_da..., ReadSchema: struct<d_date_sk:int,d_year:int>\n            :                                                           :     +- BroadcastQueryStage 3\n            :                                                           :        +- ReusedExchange [d_date_sk#799], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=1714]\n            :                                                           +- BroadcastQueryStage 4\n            :                                                              +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=1773]\n            :                                                                 +- *(4) Filter isnotnull(i_item_sk#777)\n            :                                                                    +- *(4) ColumnarToRow\n            :                                                                       +- FileScan parquet spark_catalog.tpcds_100.item[i_item_sk#777,i_brand_id#784,i_class_id#786,i_category_id#788] Batched: true, DataFilters: [isnotnull(i_item_sk#777)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/item], PartitionFilters: [], PushedFilters: [IsNotNull(i_item_sk)], ReadSchema: struct<i_item_sk:int,i_brand_id:int,i_class_id:int,i_category_id:int>\n            +- *(56) Sort [coalesce(i_brand_id#834, 0) ASC NULLS FIRST, isnull(i_brand_id#834) ASC NULLS FIRST, coalesce(i_class_id#836, 0) ASC NULLS FIRST, isnull(i_class_id#836) ASC NULLS FIRST, coalesce(i_category_id#838, 0) ASC NULLS FIRST, isnull(i_category_id#838) ASC NULLS FIRST], false, 0\n               +- AQEShuffleRead coalesced\n                  +- ShuffleQueryStage 48\n                     +- Exchange hashpartitioning(coalesce(i_brand_id#834, 0), isnull(i_brand_id#834), coalesce(i_class_id#836, 0), isnull(i_class_id#836), coalesce(i_category_id#838, 0), isnull(i_category_id#838), 200), ENSURE_REQUIREMENTS, [plan_id=4613]\n                        +- *(28) Project [i_brand_id#834, i_class_id#836, i_category_id#838]\n                           +- *(28) BroadcastHashJoin [ws_item_sk#134], [i_item_sk#827], Inner, BuildRight, false\n                              :- *(28) Project [ws_item_sk#134]\n                              :  +- *(28) BroadcastHashJoin [ws_sold_date_sk#165], [d_date_sk#849], Inner, BuildRight, false\n                              :     :- *(28) Filter isnotnull(ws_item_sk#134)\n                              :     :  +- *(28) ColumnarToRow\n                              :     :     +- FileScan parquet spark_catalog.tpcds_100.web_sales[ws_item_sk#134,ws_sold_date_sk#165] Batched: true, DataFilters: [isnotnull(ws_item_sk#134)], Format: Parquet, Location: InMemoryFileIndex(1823 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/web_sa..., PartitionFilters: [isnotnull(ws_sold_date_sk#165), dynamicpruningexpression(ws_sold_date_sk#165 IN dynamicpruning#1..., PushedFilters: [IsNotNull(ws_item_sk)], ReadSchema: struct<ws_item_sk:int>\n                              :     :           +- ReusedSubquery SubqueryBroadcast dynamicpruning#1292, 0, [d_date_sk#799], [id=#4500]\n                              :     +- BroadcastQueryStage 6\n                              :        +- ReusedExchange [d_date_sk#849], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=1714]\n                              +- BroadcastQueryStage 8\n                                 +- ReusedExchange [i_item_sk#827, i_brand_id#834, i_class_id#836, i_category_id#838], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=1773]\n"
      },
      "IM" : {
        "inputSizeInBytes" : 38939704,
        "inputRowCount" : 213875
      },
      "InitialPartitionNum" : 0,
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 13,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 22 ],
      "Objectives" : {
        "DurationInMs" : 316,
        "TotalTasksDurationInMs" : 652,
        "IOBytes" : {
          "Total" : 1337686,
          "Details" : {
            "IR" : 1337686,
            "IW" : 0,
            "SR" : 0,
            "SW" : 0
          }
        }
      }
    },
    "16" : {
      "QSLogical" : {
        "operators" : {
          "8" : {
            "sign" : 1179432008,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 41806893656,
                "rowCount" : 275045353
              },
              "compileTime" : {
                "sizeInBytes" : 41806893656,
                "rowCount" : 275045353
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#1125, ss_item_sk#1126, ss_customer_sk#1127, ss_cdemo_sk#1128, ss_hdemo_sk#1129, ss_addr_sk#1130, ss_store_sk#1131, ss_promo_sk#1132, ss_ticket_number#1133L, ss_quantity#1134, ss_wholesale_cost#1135, ss_list_price#1136, ss_sales_price#1137, ss_ext_discount_amt#1138, ss_ext_sales_price#1139, ss_ext_wholesale_cost#1140, ss_ext_list_price#1141, ss_ext_tax#1142, ss_coupon_amt#1143, ss_net_paid#1144, ss_net_paid_inc_tax#1145, ss_net_profit#1146, ss_sold_date_sk#1147], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "4" : {
            "sign" : -508787732,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 61610159072,
                "rowCount" : 1925317471
              },
              "compileTime" : {
                "sizeInBytes" : 61610159072,
                "rowCount" : 1925317471
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#1147 = d_date_sk#1170) "
          },
          "11" : {
            "sign" : 2017469727,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 18409208,
                "rowCount" : 176814
              },
              "compileTime" : {
                "sizeInBytes" : 4860984,
                "rowCount" : 202541
              }
            },
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Join LeftSemi, (i_item_sk#1148 = ss_item_sk#745), BroadcastQueryStage 98 "
          },
          "9" : {
            "sign" : 1108483913,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 10020600,
                "rowCount" : 176814
              },
              "compileTime" : {
                "sizeInBytes" : 2430492,
                "rowCount" : 202541
              }
            },
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_item_sk#25 AS ss_item_sk#745], BroadcastQueryStage 93 "
          },
          "5" : {
            "sign" : 1957680440,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 7701269884,
                "rowCount" : 275045353
              },
              "compileTime" : {
                "sizeInBytes" : 7701269884,
                "rowCount" : 275045353
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (ss_item_sk#1126 = ss_item_sk#745) "
          },
          "10" : {
            "sign" : -1902204624,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 1048632,
                "rowCount" : 7
              },
              "compileTime" : {
                "sizeInBytes" : 876588,
                "rowCount" : 73049
              }
            },
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#1170], BroadcastQueryStage 34 "
          },
          "6" : {
            "sign" : -303911461,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 7701269884,
                "rowCount" : 275045353
              },
              "compileTime" : {
                "sizeInBytes" : 7701269884,
                "rowCount" : 275045353
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#1126, ss_quantity#1134, ss_list_price#1136, ss_sold_date_sk#1147] "
          },
          "1" : {
            "sign" : -668019303,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 10893538666156608,
                "rowCount" : 340423083317394
              },
              "compileTime" : {
                "sizeInBytes" : 10893538666156608,
                "rowCount" : 340423083317394
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_quantity#1134, ss_list_price#1136, i_brand_id#1155, i_class_id#1157, i_category_id#1159] "
          },
          "0" : {
            "sign" : 1167992322,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 21787077332313216,
                "rowCount" : -1
              },
              "compileTime" : {
                "sizeInBytes" : 21787077332313216,
                "rowCount" : -1
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [i_brand_id#1155, i_class_id#1157, i_category_id#1159], [store AS channel#736, i_brand_id#1155, i_class_id#1157, i_category_id#1159, sum((cast(ss_quantity#1134 as decimal(10,0)) * ss_list_price#1136)) AS sales#737, count(1) AS number_sales#738L] "
          },
          "2" : {
            "sign" : -41597265,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 13616923332695760,
                "rowCount" : 340423083317394
              },
              "compileTime" : {
                "sizeInBytes" : 13616923332695760,
                "rowCount" : 340423083317394
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_item_sk#1126 = i_item_sk#1148) "
          },
          "7" : {
            "sign" : -604473204,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 41806893656,
                "rowCount" : 275045353
              },
              "compileTime" : {
                "sizeInBytes" : 41806893656,
                "rowCount" : 275045353
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(ss_item_sk#1126) AND isnotnull(ss_sold_date_sk#1147)) AND dynamicpruning#1310 [ss_sold_date_sk#1147]) "
          },
          "3" : {
            "sign" : 342660770,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 46207619304,
                "rowCount" : 1925317471
              },
              "compileTime" : {
                "sizeInBytes" : 46207619304,
                "rowCount" : 1925317471
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#1126, ss_quantity#1134, ss_list_price#1136] "
          }
        },
        "links" : [ {
          "fromId" : 8,
          "fromName" : "LogicalRelation",
          "toId" : 7,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Filter",
          "toId" : 6,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Project",
          "toId" : 5,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "LogicalQueryStage",
          "toId" : 5,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Join",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "LogicalQueryStage",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Join",
          "toId" : 3,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Project",
          "toId" : 2,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "LogicalQueryStage",
          "toId" : 2,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Join",
          "toId" : 1,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Project",
          "toId" : 0,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Aggregate [i_brand_id#1155, i_class_id#1157, i_category_id#1159], [store AS channel#736, i_brand_id#1155, i_class_id#1157, i_category_id#1159, sum((cast(ss_quantity#1134 as decimal(10,0)) * ss_list_price#1136)) AS sales#737, count(1) AS number_sales#738L]\n+- Project [ss_quantity#1134, ss_list_price#1136, i_brand_id#1155, i_class_id#1157, i_category_id#1159]\n   +- Join Inner, (ss_item_sk#1126 = i_item_sk#1148)\n      :- Project [ss_item_sk#1126, ss_quantity#1134, ss_list_price#1136]\n      :  +- Join Inner, (ss_sold_date_sk#1147 = d_date_sk#1170)\n      :     :- Join LeftSemi, (ss_item_sk#1126 = ss_item_sk#745)\n      :     :  :- Project [ss_item_sk#1126, ss_quantity#1134, ss_list_price#1136, ss_sold_date_sk#1147]\n      :     :  :  +- Filter ((isnotnull(ss_item_sk#1126) AND isnotnull(ss_sold_date_sk#1147)) AND dynamicpruning#1310 [ss_sold_date_sk#1147])\n      :     :  :     :  +- Project [d_date_sk#1170]\n      :     :  :     :     +- Filter ((isnotnull(d_week_seq#1174) AND (d_week_seq#1174 = scalar-subquery#740 [])) AND isnotnull(d_date_sk#1170))\n      :     :  :     :        :  +- Project [d_week_seq#1241]\n      :     :  :     :        :     +- Filter (((isnotnull(d_year#1243) AND isnotnull(d_moy#1245)) AND isnotnull(d_dom#1246)) AND (((d_year#1243 = 1998) AND (d_moy#1245 = 12)) AND (d_dom#1246 = 16)))\n      :     :  :     :        :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#1237,d_date_id#1238,d_date#1239,d_month_seq#1240,d_week_seq#1241,d_quarter_seq#1242,d_year#1243,d_dow#1244,d_moy#1245,d_dom#1246,d_qoy#1247,d_fy_year#1248,d_fy_quarter_seq#1249,d_fy_week_seq#1250,d_day_name#1251,d_quarter_name#1252,d_holiday#1253,d_weekend#1254,d_following_holiday#1255,d_first_dom#1256,d_last_dom#1257,d_same_day_ly#1258,d_same_day_lq#1259,d_current_day#1260,... 4 more fields] parquet\n      :     :  :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#1170,d_date_id#1171,d_date#1172,d_month_seq#1173,d_week_seq#1174,d_quarter_seq#1175,d_year#1176,d_dow#1177,d_moy#1178,d_dom#1179,d_qoy#1180,d_fy_year#1181,d_fy_quarter_seq#1182,d_fy_week_seq#1183,d_day_name#1184,d_quarter_name#1185,d_holiday#1186,d_weekend#1187,d_following_holiday#1188,d_first_dom#1189,d_last_dom#1190,d_same_day_ly#1191,d_same_day_lq#1192,d_current_day#1193,... 4 more fields] parquet\n      :     :  :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#1125,ss_item_sk#1126,ss_customer_sk#1127,ss_cdemo_sk#1128,ss_hdemo_sk#1129,ss_addr_sk#1130,ss_store_sk#1131,ss_promo_sk#1132,ss_ticket_number#1133L,ss_quantity#1134,ss_wholesale_cost#1135,ss_list_price#1136,ss_sales_price#1137,ss_ext_discount_amt#1138,ss_ext_sales_price#1139,ss_ext_wholesale_cost#1140,ss_ext_list_price#1141,ss_ext_tax#1142,ss_coupon_amt#1143,ss_net_paid#1144,ss_net_paid_inc_tax#1145,ss_net_profit#1146,ss_sold_date_sk#1147] parquet\n      :     :  +- LogicalQueryStage Project [i_item_sk#25 AS ss_item_sk#745], BroadcastQueryStage 93\n      :     +- LogicalQueryStage Project [d_date_sk#1170], BroadcastQueryStage 34\n      +- LogicalQueryStage Join LeftSemi, (i_item_sk#1148 = ss_item_sk#745), BroadcastQueryStage 98\n"
      },
      "QSPhysical" : {
        "operators" : {
          "8" : {
            "sign" : -1830455973,
            "className" : "org.apache.spark.sql.execution.adaptive.BroadcastQueryStageExec",
            "sizeInBytes" : 10020600,
            "rowCount" : 176814,
            "isRuntime" : true,
            "predicate" : " (unknown) BroadcastQueryStage Output [1]: [ss_item_sk#745] Arguments: 93 "
          },
          "4" : {
            "sign" : 863542820,
            "className" : "org.apache.spark.sql.execution.joins.BroadcastHashJoinExec",
            "sizeInBytes" : 61610159072,
            "rowCount" : 1925317471,
            "isRuntime" : false,
            "predicate" : " (unknown) BroadcastHashJoin Left keys [1]: [ss_sold_date_sk#1147] Right keys [1]: [d_date_sk#1170] Join type: Inner Join condition: None "
          },
          "9" : {
            "sign" : -319706463,
            "className" : "org.apache.spark.sql.execution.adaptive.BroadcastQueryStageExec",
            "sizeInBytes" : 1048632,
            "rowCount" : 7,
            "isRuntime" : true,
            "predicate" : " (unknown) BroadcastQueryStage Output [1]: [d_date_sk#1170] Arguments: 34 "
          },
          "5" : {
            "sign" : -2099155775,
            "className" : "org.apache.spark.sql.execution.joins.BroadcastHashJoinExec",
            "sizeInBytes" : 7701269884,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) BroadcastHashJoin Left keys [1]: [ss_item_sk#1126] Right keys [1]: [ss_item_sk#745] Join type: LeftSemi Join condition: None "
          },
          "10" : {
            "sign" : 686319487,
            "className" : "org.apache.spark.sql.execution.adaptive.BroadcastQueryStageExec",
            "sizeInBytes" : 18409208,
            "rowCount" : 176814,
            "isRuntime" : true,
            "predicate" : " (unknown) BroadcastQueryStage Output [4]: [i_item_sk#1148, i_brand_id#1155, i_class_id#1157, i_category_id#1159] Arguments: 98 "
          },
          "6" : {
            "sign" : -470822480,
            "className" : "org.apache.spark.sql.execution.FilterExec",
            "sizeInBytes" : 7701269884,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Input [4]: [ss_item_sk#1126, ss_quantity#1134, ss_list_price#1136, ss_sold_date_sk#1147] Condition : isnotnull(ss_item_sk#1126) "
          },
          "1" : {
            "sign" : 1139897349,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 10893538666156608,
            "rowCount" : 340423083317394,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [5]: [ss_quantity#1134, ss_list_price#1136, i_brand_id#1155, i_class_id#1157, i_category_id#1159] Input [7]: [ss_item_sk#1126, ss_quantity#1134, ss_list_price#1136, i_item_sk#1148, i_brand_id#1155, i_class_id#1157, i_category_id#1159] "
          },
          "0" : {
            "sign" : 1028397662,
            "className" : "org.apache.spark.sql.execution.aggregate.HashAggregateExec",
            "sizeInBytes" : 21787077332313216,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) HashAggregate Input [5]: [ss_quantity#1134, ss_list_price#1136, i_brand_id#1155, i_class_id#1157, i_category_id#1159] Keys [3]: [i_brand_id#1155, i_class_id#1157, i_category_id#1159] Functions [2]: [partial_sum((cast(ss_quantity#1134 as decimal(10,0)) * ss_list_price#1136)), partial_count(1)] Aggregate Attributes [3]: [sum#1320, isEmpty#1321, count#1322L] Results [6]: [i_brand_id#1155, i_class_id#1157, i_category_id#1159, sum#1323, isEmpty#1324, count#1325L] "
          },
          "2" : {
            "sign" : 1968720723,
            "className" : "org.apache.spark.sql.execution.joins.BroadcastHashJoinExec",
            "sizeInBytes" : 13616923332695760,
            "rowCount" : 340423083317394,
            "isRuntime" : false,
            "predicate" : " (unknown) BroadcastHashJoin Left keys [1]: [ss_item_sk#1126] Right keys [1]: [i_item_sk#1148] Join type: Inner Join condition: None "
          },
          "7" : {
            "sign" : 364149919,
            "className" : "org.apache.spark.sql.execution.FileSourceScanExec",
            "sizeInBytes" : 7701269884,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) Scan parquet spark_catalog.tpcds_100.store_sales Output [4]: [ss_item_sk#1126, ss_quantity#1134, ss_list_price#1136, ss_sold_date_sk#1147] Batched: true Location: InMemoryFileIndex [hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/store_sales/ss_sold_date_sk=2450816, ... 1822 entries] PartitionFilters: [isnotnull(ss_sold_date_sk#1147), dynamicpruningexpression(ss_sold_date_sk#1147 IN dynamicpruning#1310)] PushedFilters: [IsNotNull(ss_item_sk)] ReadSchema: struct<ss_item_sk:int,ss_quantity:int,ss_list_price:decimal(7,2)> "
          },
          "3" : {
            "sign" : 1713007494,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 46207619304,
            "rowCount" : 1925317471,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [3]: [ss_item_sk#1126, ss_quantity#1134, ss_list_price#1136] Input [5]: [ss_item_sk#1126, ss_quantity#1134, ss_list_price#1136, ss_sold_date_sk#1147, d_date_sk#1170] "
          }
        },
        "links" : [ {
          "fromId" : 7,
          "fromName" : "Scan parquet spark_catalog.tpcds_100.store_sales",
          "toId" : 6,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Filter",
          "toId" : 5,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "BroadcastQueryStage",
          "toId" : 5,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "BroadcastHashJoin",
          "toId" : 4,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "BroadcastQueryStage",
          "toId" : 4,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "BroadcastHashJoin",
          "toId" : 3,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Project",
          "toId" : 2,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "BroadcastQueryStage",
          "toId" : 2,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "BroadcastHashJoin",
          "toId" : 1,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Project",
          "toId" : 0,
          "toName" : "HashAggregate",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "HashAggregate(keys=[i_brand_id#1155, i_class_id#1157, i_category_id#1159], functions=[partial_sum((cast(ss_quantity#1134 as decimal(10,0)) * ss_list_price#1136)), partial_count(1)], output=[i_brand_id#1155, i_class_id#1157, i_category_id#1159, sum#1323, isEmpty#1324, count#1325L])\n+- Project [ss_quantity#1134, ss_list_price#1136, i_brand_id#1155, i_class_id#1157, i_category_id#1159]\n   +- BroadcastHashJoin [ss_item_sk#1126], [i_item_sk#1148], Inner, BuildRight, false\n      :- Project [ss_item_sk#1126, ss_quantity#1134, ss_list_price#1136]\n      :  +- BroadcastHashJoin [ss_sold_date_sk#1147], [d_date_sk#1170], Inner, BuildRight, false\n      :     :- BroadcastHashJoin [ss_item_sk#1126], [ss_item_sk#745], LeftSemi, BuildRight, false\n      :     :  :- Filter isnotnull(ss_item_sk#1126)\n      :     :  :  +- FileScan parquet spark_catalog.tpcds_100.store_sales[ss_item_sk#1126,ss_quantity#1134,ss_list_price#1136,ss_sold_date_sk#1147] Batched: true, DataFilters: [isnotnull(ss_item_sk#1126)], Format: Parquet, Location: InMemoryFileIndex(1823 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/store_..., PartitionFilters: [isnotnull(ss_sold_date_sk#1147), dynamicpruningexpression(ss_sold_date_sk#1147 IN dynamicpruning..., PushedFilters: [IsNotNull(ss_item_sk)], ReadSchema: struct<ss_item_sk:int,ss_quantity:int,ss_list_price:decimal(7,2)>\n      :     :  :        +- SubqueryBroadcast dynamicpruning#1310, 0, [d_date_sk#1170], [id=#12520]\n      :     :  :           +- AdaptiveSparkPlan isFinalPlan=false\n      :     :  :              +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=12517]\n      :     :  :                 +- Project [d_date_sk#1170]\n      :     :  :                    +- Filter ((isnotnull(d_week_seq#1174) AND (d_week_seq#1174 = Subquery subquery#740, [id=#968])) AND isnotnull(d_date_sk#1170))\n      :     :  :                       :  +- Subquery subquery#740, [id=#968]\n      :     :  :                       :     +- AdaptiveSparkPlan isFinalPlan=false\n      :     :  :                       :        +- Project [d_week_seq#1241]\n      :     :  :                       :           +- Filter (((((isnotnull(d_year#1243) AND isnotnull(d_moy#1245)) AND isnotnull(d_dom#1246)) AND (d_year#1243 = 1998)) AND (d_moy#1245 = 12)) AND (d_dom#1246 = 16))\n      :     :  :                       :              +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_week_seq#1241,d_year#1243,d_moy#1245,d_dom#1246] Batched: true, DataFilters: [isnotnull(d_year#1243), isnotnull(d_moy#1245), isnotnull(d_dom#1246), (d_year#1243 = 1998), (d_m..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), IsNotNull(d_moy), IsNotNull(d_dom), EqualTo(d_year,1998), EqualTo(d_moy,12), ..., ReadSchema: struct<d_week_seq:int,d_year:int,d_moy:int,d_dom:int>\n      :     :  :                       +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#1170,d_week_seq#1174] Batched: true, DataFilters: [isnotnull(d_week_seq#1174), isnotnull(d_date_sk#1170)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_week_seq), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_week_seq:int>\n      :     :  +- BroadcastQueryStage 93\n      :     :     +- ReusedExchange [ss_item_sk#745], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=11573]\n      :     +- BroadcastQueryStage 34\n      :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=2491]\n      :           +- *(20) Project [d_date_sk#1170]\n      :              +- *(20) Filter ((isnotnull(d_week_seq#1174) AND (d_week_seq#1174 = Subquery subquery#740, [id=#996])) AND isnotnull(d_date_sk#1170))\n      :                 :  +- Subquery subquery#740, [id=#996]\n      :                 :     +- AdaptiveSparkPlan isFinalPlan=true\n                                 +- == Final Plan ==\n                                    *(1) Project [d_week_seq#1241]\n                                    +- *(1) Filter (((((isnotnull(d_year#1243) AND isnotnull(d_moy#1245)) AND isnotnull(d_dom#1246)) AND (d_year#1243 = 1998)) AND (d_moy#1245 = 12)) AND (d_dom#1246 = 16))\n                                       +- *(1) ColumnarToRow\n                                          +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_week_seq#1241,d_year#1243,d_moy#1245,d_dom#1246] Batched: true, DataFilters: [isnotnull(d_year#1243), isnotnull(d_moy#1245), isnotnull(d_dom#1246), (d_year#1243 = 1998), (d_m..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), IsNotNull(d_moy), IsNotNull(d_dom), EqualTo(d_year,1998), EqualTo(d_moy,12), ..., ReadSchema: struct<d_week_seq:int,d_year:int,d_moy:int,d_dom:int>\n                                 +- == Initial Plan ==\n                                    Project [d_week_seq#1241]\n                                    +- Filter (((((isnotnull(d_year#1243) AND isnotnull(d_moy#1245)) AND isnotnull(d_dom#1246)) AND (d_year#1243 = 1998)) AND (d_moy#1245 = 12)) AND (d_dom#1246 = 16))\n                                       +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_week_seq#1241,d_year#1243,d_moy#1245,d_dom#1246] Batched: true, DataFilters: [isnotnull(d_year#1243), isnotnull(d_moy#1245), isnotnull(d_dom#1246), (d_year#1243 = 1998), (d_m..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), IsNotNull(d_moy), IsNotNull(d_dom), EqualTo(d_year,1998), EqualTo(d_moy,12), ..., ReadSchema: struct<d_week_seq:int,d_year:int,d_moy:int,d_dom:int>\n      :                 +- *(20) ColumnarToRow\n      :                    +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#1170,d_week_seq#1174] Batched: true, DataFilters: [isnotnull(d_week_seq#1174), isnotnull(d_date_sk#1170)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_week_seq), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_week_seq:int>\n      +- BroadcastQueryStage 98\n         +- ReusedExchange [i_item_sk#1148, i_brand_id#1155, i_class_id#1157, i_category_id#1159], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=12081]\n"
      },
      "IM" : {
        "inputSizeInBytes" : 7730748324,
        "inputRowCount" : 275398988
      },
      "InitialPartitionNum" : 0,
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 16,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 25 ],
      "Objectives" : {
        "DurationInMs" : 1944,
        "TotalTasksDurationInMs" : 8164,
        "IOBytes" : {
          "Total" : 19061217,
          "Details" : {
            "IR" : 18768312,
            "IW" : 0,
            "SR" : 0,
            "SW" : 292905
          }
        }
      }
    },
    "5" : {
      "QSLogical" : {
        "operators" : {
          "0" : {
            "sign" : 1096234976,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 876588,
                "rowCount" : 73049
              },
              "compileTime" : {
                "sizeInBytes" : 876588,
                "rowCount" : 73049
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#1170] "
          },
          "1" : {
            "sign" : -1689547051,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 17970054,
                "rowCount" : 73049
              },
              "compileTime" : {
                "sizeInBytes" : 17970054,
                "rowCount" : 73049
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(d_week_seq#1174) AND (d_week_seq#1174 = scalar-subquery#740 [])) AND isnotnull(d_date_sk#1170)) "
          },
          "2" : {
            "sign" : 683629544,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 17970054,
                "rowCount" : 73049
              },
              "compileTime" : {
                "sizeInBytes" : 17970054,
                "rowCount" : 73049
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#1170, d_date_id#1171, d_date#1172, d_month_seq#1173, d_week_seq#1174, d_quarter_seq#1175, d_year#1176, d_dow#1177, d_moy#1178, d_dom#1179, d_qoy#1180, d_fy_year#1181, d_fy_quarter_seq#1182, d_fy_week_seq#1183, d_day_name#1184, d_quarter_name#1185, d_holiday#1186, d_weekend#1187, d_following_holiday#1188, d_first_dom#1189, d_last_dom#1190, d_same_day_ly#1191, d_same_day_lq#1192, d_current_day#1193, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "LogicalRelation",
          "toId" : 1,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Filter",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [d_date_sk#1170]\n+- Filter ((isnotnull(d_week_seq#1174) AND (d_week_seq#1174 = scalar-subquery#740 [])) AND isnotnull(d_date_sk#1170))\n   :  +- Project [d_week_seq#1241]\n   :     +- Filter (((isnotnull(d_year#1243) AND isnotnull(d_moy#1245)) AND isnotnull(d_dom#1246)) AND (((d_year#1243 = 1998) AND (d_moy#1245 = 12)) AND (d_dom#1246 = 16)))\n   :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#1237,d_date_id#1238,d_date#1239,d_month_seq#1240,d_week_seq#1241,d_quarter_seq#1242,d_year#1243,d_dow#1244,d_moy#1245,d_dom#1246,d_qoy#1247,d_fy_year#1248,d_fy_quarter_seq#1249,d_fy_week_seq#1250,d_day_name#1251,d_quarter_name#1252,d_holiday#1253,d_weekend#1254,d_following_holiday#1255,d_first_dom#1256,d_last_dom#1257,d_same_day_ly#1258,d_same_day_lq#1259,d_current_day#1260,... 4 more fields] parquet\n   +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#1170,d_date_id#1171,d_date#1172,d_month_seq#1173,d_week_seq#1174,d_quarter_seq#1175,d_year#1176,d_dow#1177,d_moy#1178,d_dom#1179,d_qoy#1180,d_fy_year#1181,d_fy_quarter_seq#1182,d_fy_week_seq#1183,d_day_name#1184,d_quarter_name#1185,d_holiday#1186,d_weekend#1187,d_following_holiday#1188,d_first_dom#1189,d_last_dom#1190,d_same_day_ly#1191,d_same_day_lq#1192,d_current_day#1193,... 4 more fields] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "0" : {
            "sign" : 998874564,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 876588,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [1]: [d_date_sk#1170] Input [2]: [d_date_sk#1170, d_week_seq#1174] "
          },
          "1" : {
            "sign" : 1975094849,
            "className" : "org.apache.spark.sql.execution.FilterExec",
            "sizeInBytes" : 876588,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Input [2]: [d_date_sk#1170, d_week_seq#1174] Condition : ((isnotnull(d_week_seq#1174) AND (d_week_seq#1174 = Subquery subquery#740, [id=#996])) AND isnotnull(d_date_sk#1170)) "
          },
          "2" : {
            "sign" : -497644191,
            "className" : "org.apache.spark.sql.execution.FileSourceScanExec",
            "sizeInBytes" : 876588,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) Scan parquet spark_catalog.tpcds_100.date_dim Output [2]: [d_date_sk#1170, d_week_seq#1174] Batched: true Location: InMemoryFileIndex [hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim] PushedFilters: [IsNotNull(d_week_seq), IsNotNull(d_date_sk)] ReadSchema: struct<d_date_sk:int,d_week_seq:int> "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "Scan parquet spark_catalog.tpcds_100.date_dim",
          "toId" : 1,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Filter",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [d_date_sk#1170]\n+- Filter ((isnotnull(d_week_seq#1174) AND (d_week_seq#1174 = Subquery subquery#740, [id=#996])) AND isnotnull(d_date_sk#1170))\n   :  +- Subquery subquery#740, [id=#996]\n   :     +- AdaptiveSparkPlan isFinalPlan=false\n   :        +- Project [d_week_seq#1241]\n   :           +- Filter (((((isnotnull(d_year#1243) AND isnotnull(d_moy#1245)) AND isnotnull(d_dom#1246)) AND (d_year#1243 = 1998)) AND (d_moy#1245 = 12)) AND (d_dom#1246 = 16))\n   :              +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_week_seq#1241,d_year#1243,d_moy#1245,d_dom#1246] Batched: true, DataFilters: [isnotnull(d_year#1243), isnotnull(d_moy#1245), isnotnull(d_dom#1246), (d_year#1243 = 1998), (d_m..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), IsNotNull(d_moy), IsNotNull(d_dom), EqualTo(d_year,1998), EqualTo(d_moy,12), ..., ReadSchema: struct<d_week_seq:int,d_year:int,d_moy:int,d_dom:int>\n   +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#1170,d_week_seq#1174] Batched: true, DataFilters: [isnotnull(d_week_seq#1174), isnotnull(d_date_sk#1170)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_week_seq), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_week_seq:int>\n"
      },
      "IM" : {
        "inputSizeInBytes" : 876588,
        "inputRowCount" : 73049
      },
      "InitialPartitionNum" : 0,
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 4,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 9 ],
      "Objectives" : {
        "DurationInMs" : 477,
        "TotalTasksDurationInMs" : 472,
        "IOBytes" : {
          "Total" : 425402,
          "Details" : {
            "IR" : 425402,
            "IW" : 0,
            "SR" : 0,
            "SW" : 0
          }
        }
      }
    },
    "10" : {
      "QSLogical" : {
        "operators" : {
          "4" : {
            "sign" : 1882614656,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 5310811700,
                "rowCount" : 265540585
              },
              "compileTime" : {
                "sizeInBytes" : 5310811700,
                "rowCount" : 265540585
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#69 = d_date_sk#70) "
          },
          "5" : {
            "sign" : -948624390,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 4400725648,
                "rowCount" : 275045353
              },
              "compileTime" : {
                "sizeInBytes" : 4400725648,
                "rowCount" : 275045353
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#48, ss_sold_date_sk#69] "
          },
          "6" : {
            "sign" : -1052942334,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 41806893656,
                "rowCount" : 275045353
              },
              "compileTime" : {
                "sizeInBytes" : 41806893656,
                "rowCount" : 275045353
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(ss_item_sk#48) AND isnotnull(ss_sold_date_sk#69)) AND dynamicpruning#1291 [ss_sold_date_sk#69]) "
          },
          "1" : {
            "sign" : -725331857,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 5745158420,
                "rowCount" : 287257921
              },
              "compileTime" : {
                "sizeInBytes" : 5745158420,
                "rowCount" : 287257921
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_brand_id#762 AS brand_id#742, i_class_id#764 AS class_id#743, i_category_id#766 AS category_id#744] "
          },
          "0" : {
            "sign" : 100881634,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 2739200,
                "rowCount" : 136960
              },
              "compileTime" : {
                "sizeInBytes" : 2739200,
                "rowCount" : 136960
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [brand_id#742, class_id#743, category_id#744], [brand_id#742, class_id#743, category_id#744] "
          },
          "2" : {
            "sign" : -1723784119,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 8043221788,
                "rowCount" : 287257921
              },
              "compileTime" : {
                "sizeInBytes" : 8043221788,
                "rowCount" : 287257921
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_item_sk#48 = i_item_sk#755) "
          },
          "7" : {
            "sign" : 1104597854,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 41806893656,
                "rowCount" : 275045353
              },
              "compileTime" : {
                "sizeInBytes" : 41806893656,
                "rowCount" : 275045353
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#47, ss_item_sk#48, ss_customer_sk#49, ss_cdemo_sk#50, ss_hdemo_sk#51, ss_addr_sk#52, ss_store_sk#53, ss_promo_sk#54, ss_ticket_number#55L, ss_quantity#56, ss_wholesale_cost#57, ss_list_price#58, ss_sales_price#59, ss_ext_discount_amt#60, ss_ext_sales_price#61, ss_ext_wholesale_cost#62, ss_ext_list_price#63, ss_ext_tax#64, ss_coupon_amt#65, ss_net_paid#66, ss_net_paid_inc_tax#67, ss_net_profit#68, ss_sold_date_sk#69], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "3" : {
            "sign" : -1200270467,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 3186487020,
                "rowCount" : 265540585
              },
              "compileTime" : {
                "sizeInBytes" : 3186487020,
                "rowCount" : 265540585
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#48] "
          }
        },
        "links" : [ {
          "fromId" : 7,
          "fromName" : "LogicalRelation",
          "toId" : 6,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Filter",
          "toId" : 5,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Project",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Join",
          "toId" : 3,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Project",
          "toId" : 2,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Join",
          "toId" : 1,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Project",
          "toId" : 0,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Aggregate [brand_id#742, class_id#743, category_id#744], [brand_id#742, class_id#743, category_id#744]\n+- Project [i_brand_id#762 AS brand_id#742, i_class_id#764 AS class_id#743, i_category_id#766 AS category_id#744]\n   +- Join Inner, (ss_item_sk#48 = i_item_sk#755)\n      :- Project [ss_item_sk#48]\n      :  +- Join Inner, (ss_sold_date_sk#69 = d_date_sk#70)\n      :     :- Project [ss_item_sk#48, ss_sold_date_sk#69]\n      :     :  +- Filter ((isnotnull(ss_item_sk#48) AND isnotnull(ss_sold_date_sk#69)) AND dynamicpruning#1291 [ss_sold_date_sk#69])\n      :     :     :  +- Project [d_date_sk#70]\n      :     :     :     +- Filter ((isnotnull(d_year#76) AND ((d_year#76 >= 1998) AND (d_year#76 <= 2000))) AND isnotnull(d_date_sk#70))\n      :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#70,d_date_id#71,d_date#72,d_month_seq#73,d_week_seq#74,d_quarter_seq#75,d_year#76,d_dow#77,d_moy#78,d_dom#79,d_qoy#80,d_fy_year#81,d_fy_quarter_seq#82,d_fy_week_seq#83,d_day_name#84,d_quarter_name#85,d_holiday#86,d_weekend#87,d_following_holiday#88,d_first_dom#89,d_last_dom#90,d_same_day_ly#91,d_same_day_lq#92,d_current_day#93,... 4 more fields] parquet\n      :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#47,ss_item_sk#48,ss_customer_sk#49,ss_cdemo_sk#50,ss_hdemo_sk#51,ss_addr_sk#52,ss_store_sk#53,ss_promo_sk#54,ss_ticket_number#55L,ss_quantity#56,ss_wholesale_cost#57,ss_list_price#58,ss_sales_price#59,ss_ext_discount_amt#60,ss_ext_sales_price#61,ss_ext_wholesale_cost#62,ss_ext_list_price#63,ss_ext_tax#64,ss_coupon_amt#65,ss_net_paid#66,ss_net_paid_inc_tax#67,ss_net_profit#68,ss_sold_date_sk#69] parquet\n      :     +- Project [d_date_sk#70]\n      :        +- Filter ((isnotnull(d_year#76) AND ((d_year#76 >= 1998) AND (d_year#76 <= 2000))) AND isnotnull(d_date_sk#70))\n      :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#70,d_date_id#71,d_date#72,d_month_seq#73,d_week_seq#74,d_quarter_seq#75,d_year#76,d_dow#77,d_moy#78,d_dom#79,d_qoy#80,d_fy_year#81,d_fy_quarter_seq#82,d_fy_week_seq#83,d_day_name#84,d_quarter_name#85,d_holiday#86,d_weekend#87,d_following_holiday#88,d_first_dom#89,d_last_dom#90,d_same_day_ly#91,d_same_day_lq#92,d_current_day#93,... 4 more fields] parquet\n      +- Join LeftSemi, (((i_brand_id#762 <=> i_brand_id#784) AND (i_class_id#764 <=> i_class_id#786)) AND (i_category_id#766 <=> i_category_id#788))\n         :- Project [i_item_sk#755, i_brand_id#762, i_class_id#764, i_category_id#766]\n         :  +- Filter (isnotnull(i_item_sk#755) AND ((isnotnull(i_brand_id#762) AND isnotnull(i_class_id#764)) AND isnotnull(i_category_id#766)))\n         :     +- Relation spark_catalog.tpcds_100.item[i_item_sk#755,i_item_id#756,i_rec_start_date#757,i_rec_end_date#758,i_item_desc#759,i_current_price#760,i_wholesale_cost#761,i_brand_id#762,i_brand#763,i_class_id#764,i_class#765,i_category_id#766,i_category#767,i_manufact_id#768,i_manufact#769,i_size#770,i_formulation#771,i_color#772,i_units#773,i_container#774,i_manager_id#775,i_product_name#776] parquet\n         +- Project [i_brand_id#784, i_class_id#786, i_category_id#788]\n            +- Join Inner, (cs_item_sk#112 = i_item_sk#777)\n               :- Project [cs_item_sk#112]\n               :  +- Join Inner, (cs_sold_date_sk#131 = d_date_sk#799)\n               :     :- Project [cs_item_sk#112, cs_sold_date_sk#131]\n               :     :  +- Filter ((isnotnull(cs_item_sk#112) AND isnotnull(cs_sold_date_sk#131)) AND dynamicpruning#1292 [cs_sold_date_sk#131])\n               :     :     :  +- Project [d_date_sk#799]\n               :     :     :     +- Filter ((isnotnull(d_year#805) AND ((d_year#805 >= 1998) AND (d_year#805 <= 2000))) AND isnotnull(d_date_sk#799))\n               :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#799,d_date_id#800,d_date#801,d_month_seq#802,d_week_seq#803,d_quarter_seq#804,d_year#805,d_dow#806,d_moy#807,d_dom#808,d_qoy#809,d_fy_year#810,d_fy_quarter_seq#811,d_fy_week_seq#812,d_day_name#813,d_quarter_name#814,d_holiday#815,d_weekend#816,d_following_holiday#817,d_first_dom#818,d_last_dom#819,d_same_day_ly#820,d_same_day_lq#821,d_current_day#822,... 4 more fields] parquet\n               :     :     +- Relation spark_catalog.tpcds_100.catalog_sales[cs_sold_time_sk#98,cs_ship_date_sk#99,cs_bill_customer_sk#100,cs_bill_cdemo_sk#101,cs_bill_hdemo_sk#102,cs_bill_addr_sk#103,cs_ship_customer_sk#104,cs_ship_cdemo_sk#105,cs_ship_hdemo_sk#106,cs_ship_addr_sk#107,cs_call_center_sk#108,cs_catalog_page_sk#109,cs_ship_mode_sk#110,cs_warehouse_sk#111,cs_item_sk#112,cs_promo_sk#113,cs_order_number#114L,cs_quantity#115,cs_wholesale_cost#116,cs_list_price#117,cs_sales_price#118,cs_ext_discount_amt#119,cs_ext_sales_price#120,cs_ext_wholesale_cost#121,... 10 more fields] parquet\n               :     +- Project [d_date_sk#799]\n               :        +- Filter ((isnotnull(d_year#805) AND ((d_year#805 >= 1998) AND (d_year#805 <= 2000))) AND isnotnull(d_date_sk#799))\n               :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#799,d_date_id#800,d_date#801,d_month_seq#802,d_week_seq#803,d_quarter_seq#804,d_year#805,d_dow#806,d_moy#807,d_dom#808,d_qoy#809,d_fy_year#810,d_fy_quarter_seq#811,d_fy_week_seq#812,d_day_name#813,d_quarter_name#814,d_holiday#815,d_weekend#816,d_following_holiday#817,d_first_dom#818,d_last_dom#819,d_same_day_ly#820,d_same_day_lq#821,d_current_day#822,... 4 more fields] parquet\n               +- Project [i_item_sk#777, i_brand_id#784, i_class_id#786, i_category_id#788]\n                  +- Filter isnotnull(i_item_sk#777)\n                     +- Relation spark_catalog.tpcds_100.item[i_item_sk#777,i_item_id#778,i_rec_start_date#779,i_rec_end_date#780,i_item_desc#781,i_current_price#782,i_wholesale_cost#783,i_brand_id#784,i_brand#785,i_class_id#786,i_class#787,i_category_id#788,i_category#789,i_manufact_id#790,i_manufact#791,i_size#792,i_formulation#793,i_color#794,i_units#795,i_container#796,i_manager_id#797,i_product_name#798] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "8" : {
            "sign" : -2091881679,
            "className" : "org.apache.spark.sql.execution.adaptive.BroadcastQueryStageExec",
            "sizeInBytes" : 18409208,
            "rowCount" : 176814,
            "isRuntime" : true,
            "predicate" : " (unknown) BroadcastQueryStage Output [4]: [i_item_sk#755, i_brand_id#762, i_class_id#764, i_category_id#766] Arguments: 61 "
          },
          "4" : {
            "sign" : -357761382,
            "className" : "org.apache.spark.sql.execution.joins.BroadcastHashJoinExec",
            "sizeInBytes" : 5310811700,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) BroadcastHashJoin Left keys [1]: [ss_sold_date_sk#69] Right keys [1]: [d_date_sk#70] Join type: Inner Join condition: None "
          },
          "5" : {
            "sign" : 1091032822,
            "className" : "org.apache.spark.sql.execution.FilterExec",
            "sizeInBytes" : 4400725648,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Input [2]: [ss_item_sk#48, ss_sold_date_sk#69] Condition : isnotnull(ss_item_sk#48) "
          },
          "6" : {
            "sign" : 1813408263,
            "className" : "org.apache.spark.sql.execution.FileSourceScanExec",
            "sizeInBytes" : 4400725648,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) Scan parquet spark_catalog.tpcds_100.store_sales Output [2]: [ss_item_sk#48, ss_sold_date_sk#69] Batched: true Location: InMemoryFileIndex [hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/store_sales/ss_sold_date_sk=2450816, ... 1822 entries] PartitionFilters: [isnotnull(ss_sold_date_sk#69), dynamicpruningexpression(ss_sold_date_sk#69 IN dynamicpruning#1292)] PushedFilters: [IsNotNull(ss_item_sk)] ReadSchema: struct<ss_item_sk:int> "
          },
          "1" : {
            "sign" : -637991257,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 5745158420,
            "rowCount" : 287257921,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [3]: [i_brand_id#762 AS brand_id#742, i_class_id#764 AS class_id#743, i_category_id#766 AS category_id#744] Input [5]: [ss_item_sk#48, i_item_sk#755, i_brand_id#762, i_class_id#764, i_category_id#766] "
          },
          "0" : {
            "sign" : 1907263332,
            "className" : "org.apache.spark.sql.execution.aggregate.HashAggregateExec",
            "sizeInBytes" : 2739200,
            "rowCount" : 136960,
            "isRuntime" : false,
            "predicate" : " (unknown) HashAggregate Input [3]: [brand_id#742, class_id#743, category_id#744] Keys [3]: [brand_id#742, class_id#743, category_id#744] Functions: [] Aggregate Attributes: [] Results [3]: [brand_id#742, class_id#743, category_id#744] "
          },
          "2" : {
            "sign" : -64679577,
            "className" : "org.apache.spark.sql.execution.joins.BroadcastHashJoinExec",
            "sizeInBytes" : 8043221788,
            "rowCount" : 287257921,
            "isRuntime" : false,
            "predicate" : " (unknown) BroadcastHashJoin Left keys [1]: [ss_item_sk#48] Right keys [1]: [i_item_sk#755] Join type: Inner Join condition: None "
          },
          "7" : {
            "sign" : -56062006,
            "className" : "org.apache.spark.sql.execution.adaptive.BroadcastQueryStageExec",
            "sizeInBytes" : 1057344,
            "rowCount" : 1096,
            "isRuntime" : true,
            "predicate" : " (unknown) BroadcastQueryStage Output [1]: [d_date_sk#70] Arguments: 0 "
          },
          "3" : {
            "sign" : 1594417761,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 3186487020,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [1]: [ss_item_sk#48] Input [3]: [ss_item_sk#48, ss_sold_date_sk#69, d_date_sk#70] "
          }
        },
        "links" : [ {
          "fromId" : 6,
          "fromName" : "Scan parquet spark_catalog.tpcds_100.store_sales",
          "toId" : 5,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Filter",
          "toId" : 4,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "BroadcastQueryStage",
          "toId" : 4,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "BroadcastHashJoin",
          "toId" : 3,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Project",
          "toId" : 2,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "BroadcastQueryStage",
          "toId" : 2,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "BroadcastHashJoin",
          "toId" : 1,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Project",
          "toId" : 0,
          "toName" : "HashAggregate",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "HashAggregate(keys=[brand_id#742, class_id#743, category_id#744], functions=[], output=[brand_id#742, class_id#743, category_id#744])\n+- Project [i_brand_id#762 AS brand_id#742, i_class_id#764 AS class_id#743, i_category_id#766 AS category_id#744]\n   +- BroadcastHashJoin [ss_item_sk#48], [i_item_sk#755], Inner, BuildRight, false\n      :- Project [ss_item_sk#48]\n      :  +- BroadcastHashJoin [ss_sold_date_sk#69], [d_date_sk#70], Inner, BuildRight, false\n      :     :- Filter isnotnull(ss_item_sk#48)\n      :     :  +- FileScan parquet spark_catalog.tpcds_100.store_sales[ss_item_sk#48,ss_sold_date_sk#69] Batched: true, DataFilters: [isnotnull(ss_item_sk#48)], Format: Parquet, Location: InMemoryFileIndex(1823 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/store_..., PartitionFilters: [isnotnull(ss_sold_date_sk#69), dynamicpruningexpression(ss_sold_date_sk#69 IN dynamicpruning#1292)], PushedFilters: [IsNotNull(ss_item_sk)], ReadSchema: struct<ss_item_sk:int>\n      :     :        +- ReusedSubquery SubqueryBroadcast dynamicpruning#1292, 0, [d_date_sk#799], [id=#4500]\n      :     +- BroadcastQueryStage 0\n      :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=1714]\n      :           +- *(1) Project [d_date_sk#70]\n      :              +- *(1) Filter (((isnotnull(d_year#76) AND (d_year#76 >= 1998)) AND (d_year#76 <= 2000)) AND isnotnull(d_date_sk#70))\n      :                 +- *(1) ColumnarToRow\n      :                    +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#70,d_year#76] Batched: true, DataFilters: [isnotnull(d_year#76), (d_year#76 >= 1998), (d_year#76 <= 2000), isnotnull(d_date_sk#70)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), GreaterThanOrEqual(d_year,1998), LessThanOrEqual(d_year,2000), IsNotNull(d_da..., ReadSchema: struct<d_date_sk:int,d_year:int>\n      +- BroadcastQueryStage 61\n         +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=8021]\n            +- *(37) SortMergeJoin [coalesce(i_brand_id#762, 0), isnull(i_brand_id#762), coalesce(i_class_id#764, 0), isnull(i_class_id#764), coalesce(i_category_id#766, 0), isnull(i_category_id#766)], [coalesce(i_brand_id#784, 0), isnull(i_brand_id#784), coalesce(i_class_id#786, 0), isnull(i_class_id#786), coalesce(i_category_id#788, 0), isnull(i_category_id#788)], LeftSemi\n               :- *(35) Sort [coalesce(i_brand_id#762, 0) ASC NULLS FIRST, isnull(i_brand_id#762) ASC NULLS FIRST, coalesce(i_class_id#764, 0) ASC NULLS FIRST, isnull(i_class_id#764) ASC NULLS FIRST, coalesce(i_category_id#766, 0) ASC NULLS FIRST, isnull(i_category_id#766) ASC NULLS FIRST], false, 0\n               :  +- AQEShuffleRead coalesced\n               :     +- ShuffleQueryStage 1\n               :        +- Exchange hashpartitioning(coalesce(i_brand_id#762, 0), isnull(i_brand_id#762), coalesce(i_class_id#764, 0), isnull(i_class_id#764), coalesce(i_category_id#766, 0), isnull(i_category_id#766), 200), ENSURE_REQUIREMENTS, [plan_id=1733]\n               :           +- *(2) Filter (((isnotnull(i_item_sk#755) AND isnotnull(i_brand_id#762)) AND isnotnull(i_class_id#764)) AND isnotnull(i_category_id#766))\n               :              +- *(2) ColumnarToRow\n               :                 +- FileScan parquet spark_catalog.tpcds_100.item[i_item_sk#755,i_brand_id#762,i_class_id#764,i_category_id#766] Batched: true, DataFilters: [isnotnull(i_item_sk#755), isnotnull(i_brand_id#762), isnotnull(i_class_id#764), isnotnull(i_cate..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/item], PartitionFilters: [], PushedFilters: [IsNotNull(i_item_sk), IsNotNull(i_brand_id), IsNotNull(i_class_id), IsNotNull(i_category_id)], ReadSchema: struct<i_item_sk:int,i_brand_id:int,i_class_id:int,i_category_id:int>\n               +- *(36) Sort [coalesce(i_brand_id#784, 0) ASC NULLS FIRST, isnull(i_brand_id#784) ASC NULLS FIRST, coalesce(i_class_id#786, 0) ASC NULLS FIRST, isnull(i_class_id#786) ASC NULLS FIRST, coalesce(i_category_id#788, 0) ASC NULLS FIRST, isnull(i_category_id#788) ASC NULLS FIRST], false, 0\n                  +- AQEShuffleRead coalesced\n                     +- ShuffleQueryStage 47\n                        +- Exchange hashpartitioning(coalesce(i_brand_id#784, 0), isnull(i_brand_id#784), coalesce(i_class_id#786, 0), isnull(i_class_id#786), coalesce(i_category_id#788, 0), isnull(i_category_id#788), 200), ENSURE_REQUIREMENTS, [plan_id=4537]\n                           +- *(27) Project [i_brand_id#784, i_class_id#786, i_category_id#788]\n                              +- *(27) BroadcastHashJoin [cs_item_sk#112], [i_item_sk#777], Inner, BuildRight, false\n                                 :- *(27) Project [cs_item_sk#112]\n                                 :  +- *(27) BroadcastHashJoin [cs_sold_date_sk#131], [d_date_sk#799], Inner, BuildRight, false\n                                 :     :- *(27) Filter isnotnull(cs_item_sk#112)\n                                 :     :  +- *(27) ColumnarToRow\n                                 :     :     +- FileScan parquet spark_catalog.tpcds_100.catalog_sales[cs_item_sk#112,cs_sold_date_sk#131] Batched: true, DataFilters: [isnotnull(cs_item_sk#112)], Format: Parquet, Location: InMemoryFileIndex(1836 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/catalo..., PartitionFilters: [isnotnull(cs_sold_date_sk#131), dynamicpruningexpression(cs_sold_date_sk#131 IN dynamicpruning#1..., PushedFilters: [IsNotNull(cs_item_sk)], ReadSchema: struct<cs_item_sk:int>\n                                 :     :           +- SubqueryBroadcast dynamicpruning#1292, 0, [d_date_sk#799], [id=#4500]\n                                 :     :              +- AdaptiveSparkPlan isFinalPlan=true\n                                                         +- == Final Plan ==\n                                                            BroadcastQueryStage 1\n                                                            +- ReusedExchange [d_date_sk#799], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=1714]\n                                                         +- == Initial Plan ==\n                                                            BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=4497]\n                                                            +- Project [d_date_sk#799]\n                                                               +- Filter (((isnotnull(d_year#805) AND (d_year#805 >= 1998)) AND (d_year#805 <= 2000)) AND isnotnull(d_date_sk#799))\n                                                                  +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#799,d_year#805] Batched: true, DataFilters: [isnotnull(d_year#805), (d_year#805 >= 1998), (d_year#805 <= 2000), isnotnull(d_date_sk#799)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), GreaterThanOrEqual(d_year,1998), LessThanOrEqual(d_year,2000), IsNotNull(d_da..., ReadSchema: struct<d_date_sk:int,d_year:int>\n                                 :     +- BroadcastQueryStage 3\n                                 :        +- ReusedExchange [d_date_sk#799], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=1714]\n                                 +- BroadcastQueryStage 4\n                                    +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=1773]\n                                       +- *(4) Filter isnotnull(i_item_sk#777)\n                                          +- *(4) ColumnarToRow\n                                             +- FileScan parquet spark_catalog.tpcds_100.item[i_item_sk#777,i_brand_id#784,i_class_id#786,i_category_id#788] Batched: true, DataFilters: [isnotnull(i_item_sk#777)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/item], PartitionFilters: [], PushedFilters: [IsNotNull(i_item_sk)], ReadSchema: struct<i_item_sk:int,i_brand_id:int,i_class_id:int,i_category_id:int>\n"
      },
      "IM" : {
        "inputSizeInBytes" : 4420192200,
        "inputRowCount" : 275223263
      },
      "InitialPartitionNum" : 0,
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 10,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 15 ],
      "Objectives" : {
        "DurationInMs" : 5952,
        "TotalTasksDurationInMs" : 89649,
        "IOBytes" : {
          "Total" : 685053640,
          "Details" : {
            "IR" : 670366956,
            "IW" : 0,
            "SR" : 0,
            "SW" : 14686684
          }
        }
      }
    },
    "6" : {
      "QSLogical" : {
        "operators" : {
          "0" : {
            "sign" : 2044042132,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 4860984,
                "rowCount" : 202541
              },
              "compileTime" : {
                "sizeInBytes" : 4860984,
                "rowCount" : 202541
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_item_sk#755, i_brand_id#762, i_class_id#764, i_category_id#766] "
          },
          "1" : {
            "sign" : 1265968190,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 86282466,
                "rowCount" : 202541
              },
              "compileTime" : {
                "sizeInBytes" : 86282466,
                "rowCount" : 202541
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(i_item_sk#755) AND ((isnotnull(i_brand_id#762) AND isnotnull(i_class_id#764)) AND isnotnull(i_category_id#766))) "
          },
          "2" : {
            "sign" : 754857957,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 86904000,
                "rowCount" : 204000
              },
              "compileTime" : {
                "sizeInBytes" : 86904000,
                "rowCount" : 204000
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [i_item_sk#755, i_item_id#756, i_rec_start_date#757, i_rec_end_date#758, i_item_desc#759, i_current_price#760, i_wholesale_cost#761, i_brand_id#762, i_brand#763, i_class_id#764, i_class#765, i_category_id#766, i_category#767, i_manufact_id#768, i_manufact#769, i_size#770, i_formulation#771, i_color#772, i_units#773, i_container#774, i_manager_id#775, i_product_name#776], `spark_catalog`.`tpcds_100`.`item`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "LogicalRelation",
          "toId" : 1,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Filter",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [i_item_sk#755, i_brand_id#762, i_class_id#764, i_category_id#766]\n+- Filter (isnotnull(i_item_sk#755) AND ((isnotnull(i_brand_id#762) AND isnotnull(i_class_id#764)) AND isnotnull(i_category_id#766)))\n   +- Relation spark_catalog.tpcds_100.item[i_item_sk#755,i_item_id#756,i_rec_start_date#757,i_rec_end_date#758,i_item_desc#759,i_current_price#760,i_wholesale_cost#761,i_brand_id#762,i_brand#763,i_class_id#764,i_class#765,i_category_id#766,i_category#767,i_manufact_id#768,i_manufact#769,i_size#770,i_formulation#771,i_color#772,i_units#773,i_container#774,i_manager_id#775,i_product_name#776] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "0" : {
            "sign" : 238823171,
            "className" : "org.apache.spark.sql.execution.FilterExec",
            "sizeInBytes" : 4860984,
            "rowCount" : 202541,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Input [4]: [i_item_sk#755, i_brand_id#762, i_class_id#764, i_category_id#766] Condition : (((isnotnull(i_item_sk#755) AND isnotnull(i_brand_id#762)) AND isnotnull(i_class_id#764)) AND isnotnull(i_category_id#766)) "
          },
          "1" : {
            "sign" : -257303642,
            "className" : "org.apache.spark.sql.execution.FileSourceScanExec",
            "sizeInBytes" : 4860984,
            "rowCount" : 202541,
            "isRuntime" : false,
            "predicate" : " (unknown) Scan parquet spark_catalog.tpcds_100.item Output [4]: [i_item_sk#755, i_brand_id#762, i_class_id#764, i_category_id#766] Batched: true Location: InMemoryFileIndex [hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/item] PushedFilters: [IsNotNull(i_item_sk), IsNotNull(i_brand_id), IsNotNull(i_class_id), IsNotNull(i_category_id)] ReadSchema: struct<i_item_sk:int,i_brand_id:int,i_class_id:int,i_category_id:int> "
          }
        },
        "links" : [ {
          "fromId" : 1,
          "fromName" : "Scan parquet spark_catalog.tpcds_100.item",
          "toId" : 0,
          "toName" : "Filter",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Filter (((isnotnull(i_item_sk#755) AND isnotnull(i_brand_id#762)) AND isnotnull(i_class_id#764)) AND isnotnull(i_category_id#766))\n+- FileScan parquet spark_catalog.tpcds_100.item[i_item_sk#755,i_brand_id#762,i_class_id#764,i_category_id#766] Batched: true, DataFilters: [isnotnull(i_item_sk#755), isnotnull(i_brand_id#762), isnotnull(i_class_id#764), isnotnull(i_cate..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/item], PartitionFilters: [], PushedFilters: [IsNotNull(i_item_sk), IsNotNull(i_brand_id), IsNotNull(i_class_id), IsNotNull(i_category_id)], ReadSchema: struct<i_item_sk:int,i_brand_id:int,i_class_id:int,i_category_id:int>\n"
      },
      "IM" : {
        "inputSizeInBytes" : 4860984,
        "inputRowCount" : 202541
      },
      "InitialPartitionNum" : 0,
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 1,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 7 ],
      "Objectives" : {
        "DurationInMs" : 1489,
        "TotalTasksDurationInMs" : 6075,
        "IOBytes" : {
          "Total" : 1337400,
          "Details" : {
            "IR" : 1337400,
            "IW" : 0,
            "SR" : 0,
            "SW" : 0
          }
        }
      }
    },
    "1" : {
      "QSLogical" : {
        "operators" : {
          "0" : {
            "sign" : 763032362,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 4896000,
                "rowCount" : 204000
              },
              "compileTime" : {
                "sizeInBytes" : 4896000,
                "rowCount" : 204000
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_item_sk#777, i_brand_id#784, i_class_id#786, i_category_id#788] "
          },
          "1" : {
            "sign" : -38018252,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 86904000,
                "rowCount" : 204000
              },
              "compileTime" : {
                "sizeInBytes" : 86904000,
                "rowCount" : 204000
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: isnotnull(i_item_sk#777) "
          },
          "2" : {
            "sign" : -234442833,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 86904000,
                "rowCount" : 204000
              },
              "compileTime" : {
                "sizeInBytes" : 86904000,
                "rowCount" : 204000
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [i_item_sk#777, i_item_id#778, i_rec_start_date#779, i_rec_end_date#780, i_item_desc#781, i_current_price#782, i_wholesale_cost#783, i_brand_id#784, i_brand#785, i_class_id#786, i_class#787, i_category_id#788, i_category#789, i_manufact_id#790, i_manufact#791, i_size#792, i_formulation#793, i_color#794, i_units#795, i_container#796, i_manager_id#797, i_product_name#798], `spark_catalog`.`tpcds_100`.`item`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "LogicalRelation",
          "toId" : 1,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Filter",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [i_item_sk#777, i_brand_id#784, i_class_id#786, i_category_id#788]\n+- Filter isnotnull(i_item_sk#777)\n   +- Relation spark_catalog.tpcds_100.item[i_item_sk#777,i_item_id#778,i_rec_start_date#779,i_rec_end_date#780,i_item_desc#781,i_current_price#782,i_wholesale_cost#783,i_brand_id#784,i_brand#785,i_class_id#786,i_class#787,i_category_id#788,i_category#789,i_manufact_id#790,i_manufact#791,i_size#792,i_formulation#793,i_color#794,i_units#795,i_container#796,i_manager_id#797,i_product_name#798] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "0" : {
            "sign" : -1030463502,
            "className" : "org.apache.spark.sql.execution.FilterExec",
            "sizeInBytes" : 4896000,
            "rowCount" : 204000,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Input [4]: [i_item_sk#777, i_brand_id#784, i_class_id#786, i_category_id#788] Condition : isnotnull(i_item_sk#777) "
          },
          "1" : {
            "sign" : -1374269737,
            "className" : "org.apache.spark.sql.execution.FileSourceScanExec",
            "sizeInBytes" : 4896000,
            "rowCount" : 204000,
            "isRuntime" : false,
            "predicate" : " (unknown) Scan parquet spark_catalog.tpcds_100.item Output [4]: [i_item_sk#777, i_brand_id#784, i_class_id#786, i_category_id#788] Batched: true Location: InMemoryFileIndex [hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/item] PushedFilters: [IsNotNull(i_item_sk)] ReadSchema: struct<i_item_sk:int,i_brand_id:int,i_class_id:int,i_category_id:int> "
          }
        },
        "links" : [ {
          "fromId" : 1,
          "fromName" : "Scan parquet spark_catalog.tpcds_100.item",
          "toId" : 0,
          "toName" : "Filter",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Filter isnotnull(i_item_sk#777)\n+- FileScan parquet spark_catalog.tpcds_100.item[i_item_sk#777,i_brand_id#784,i_class_id#786,i_category_id#788] Batched: true, DataFilters: [isnotnull(i_item_sk#777)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/item], PartitionFilters: [], PushedFilters: [IsNotNull(i_item_sk)], ReadSchema: struct<i_item_sk:int,i_brand_id:int,i_class_id:int,i_category_id:int>\n"
      },
      "IM" : {
        "inputSizeInBytes" : 4896000,
        "inputRowCount" : 204000
      },
      "InitialPartitionNum" : 0,
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 2,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 5 ],
      "Objectives" : {
        "DurationInMs" : 4313,
        "TotalTasksDurationInMs" : 9319,
        "IOBytes" : {
          "Total" : 3222168,
          "Details" : {
            "IR" : 1337829,
            "IW" : 0,
            "SR" : 0,
            "SW" : 1884339
          }
        }
      }
    },
    "17" : {
      "QSLogical" : {
        "operators" : {
          "12" : {
            "sign" : 17831375,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 1389912100,
                "rowCount" : 69495605
              },
              "compileTime" : {
                "sizeInBytes" : 1389912100,
                "rowCount" : 69495605
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_quantity#1007 AS quantity#750, ws_list_price#1009 AS list_price#751] "
          },
          "8" : {
            "sign" : 824386657,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 3878455336,
                "rowCount" : 138516262
              },
              "compileTime" : {
                "sizeInBytes" : 3878455336,
                "rowCount" : 138516262
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cs_sold_date_sk#961 = d_date_sk#962) "
          },
          "4" : {
            "sign" : 1776873494,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 6601088472,
                "rowCount" : 275045353
              },
              "compileTime" : {
                "sizeInBytes" : 6601088472,
                "rowCount" : 275045353
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_quantity#886, ss_list_price#888, ss_sold_date_sk#899] "
          },
          "15" : {
            "sign" : -1902449141,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 14972593792,
                "rowCount" : 71983624
              },
              "compileTime" : {
                "sizeInBytes" : 14972593792,
                "rowCount" : 71983624
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(ws_sold_date_sk#1023) AND dynamicpruning#1290 [ws_sold_date_sk#1023]) "
          },
          "11" : {
            "sign" : -70077436,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 29800787536,
                "rowCount" : 143273017
              },
              "compileTime" : {
                "sizeInBytes" : 29800787536,
                "rowCount" : 143273017
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [cs_sold_time_sk#928, cs_ship_date_sk#929, cs_bill_customer_sk#930, cs_bill_cdemo_sk#931, cs_bill_hdemo_sk#932, cs_bill_addr_sk#933, cs_ship_customer_sk#934, cs_ship_cdemo_sk#935, cs_ship_hdemo_sk#936, cs_ship_addr_sk#937, cs_call_center_sk#938, cs_catalog_page_sk#939, cs_ship_mode_sk#940, cs_warehouse_sk#941, cs_item_sk#942, cs_promo_sk#943, cs_order_number#944L, cs_quantity#945, cs_wholesale_cost#946, cs_list_price#947, cs_sales_price#948, cs_ext_discount_amt#949, cs_ext_sales_price#950, cs_ext_wholesale_cost#951, ... 10 more fields], `spark_catalog`.`tpcds_100`.`catalog_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "9" : {
            "sign" : 1942236716,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 3438552408,
                "rowCount" : 143273017
              },
              "compileTime" : {
                "sizeInBytes" : 3438552408,
                "rowCount" : 143273017
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_quantity#945, cs_list_price#947, cs_sold_date_sk#961] "
          },
          "13" : {
            "sign" : 1503367439,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 1945876940,
                "rowCount" : 69495605
              },
              "compileTime" : {
                "sizeInBytes" : 1945876940,
                "rowCount" : 69495605
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ws_sold_date_sk#1023 = d_date_sk#1024) "
          },
          "16" : {
            "sign" : 1698660872,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 14972593792,
                "rowCount" : 71983624
              },
              "compileTime" : {
                "sizeInBytes" : 14972593792,
                "rowCount" : 71983624
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ws_sold_time_sk#990, ws_ship_date_sk#991, ws_item_sk#992, ws_bill_customer_sk#993, ws_bill_cdemo_sk#994, ws_bill_hdemo_sk#995, ws_bill_addr_sk#996, ws_ship_customer_sk#997, ws_ship_cdemo_sk#998, ws_ship_hdemo_sk#999, ws_ship_addr_sk#1000, ws_web_page_sk#1001, ws_web_site_sk#1002, ws_ship_mode_sk#1003, ws_warehouse_sk#1004, ws_promo_sk#1005, ws_order_number#1006L, ws_quantity#1007, ws_wholesale_cost#1008, ws_list_price#1009, ws_sales_price#1010, ws_ext_discount_amt#1011, ws_ext_sales_price#1012, ws_ext_wholesale_cost#1013, ... 10 more fields], `spark_catalog`.`tpcds_100`.`web_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "5" : {
            "sign" : 1377797290,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 41806893656,
                "rowCount" : 275045353
              },
              "compileTime" : {
                "sizeInBytes" : 41806893656,
                "rowCount" : 275045353
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(ss_sold_date_sk#899) AND dynamicpruning#1288 [ss_sold_date_sk#899]) "
          },
          "10" : {
            "sign" : 1500374164,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 29800787536,
                "rowCount" : 143273017
              },
              "compileTime" : {
                "sizeInBytes" : 29800787536,
                "rowCount" : 143273017
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(cs_sold_date_sk#961) AND dynamicpruning#1289 [cs_sold_date_sk#961]) "
          },
          "6" : {
            "sign" : -1972788865,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 41806893656,
                "rowCount" : 275045353
              },
              "compileTime" : {
                "sizeInBytes" : 41806893656,
                "rowCount" : 275045353
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#877, ss_item_sk#878, ss_customer_sk#879, ss_cdemo_sk#880, ss_hdemo_sk#881, ss_addr_sk#882, ss_store_sk#883, ss_promo_sk#884, ss_ticket_number#885L, ss_quantity#886, ss_wholesale_cost#887, ss_list_price#888, ss_sales_price#889, ss_ext_discount_amt#890, ss_ext_sales_price#891, ss_ext_wholesale_cost#892, ss_ext_list_price#893, ss_ext_tax#894, ss_coupon_amt#895, ss_net_paid#896, ss_net_paid_inc_tax#897, ss_net_profit#898, ss_sold_date_sk#899], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "1" : {
            "sign" : -1298322270,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Union",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 9471049040,
                "rowCount" : 473552452
              },
              "compileTime" : {
                "sizeInBytes" : 9471049040,
                "rowCount" : 473552452
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Union Arguments: false, false "
          },
          "14" : {
            "sign" : 49678577,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 1727606976,
                "rowCount" : 71983624
              },
              "compileTime" : {
                "sizeInBytes" : 1727606976,
                "rowCount" : 71983624
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_quantity#1007, ws_list_price#1009, ws_sold_date_sk#1023] "
          },
          "0" : {
            "sign" : -1809172647,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 24,
                "rowCount" : 1
              },
              "compileTime" : {
                "sizeInBytes" : 24,
                "rowCount" : 1
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [avg((cast(quantity#746 as decimal(10,0)) * list_price#747)) AS average_sales#752] "
          },
          "2" : {
            "sign" : 869525063,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 5310811700,
                "rowCount" : 265540585
              },
              "compileTime" : {
                "sizeInBytes" : 5310811700,
                "rowCount" : 265540585
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_quantity#886 AS quantity#746, ss_list_price#888 AS list_price#747] "
          },
          "7" : {
            "sign" : 825651901,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 2770325240,
                "rowCount" : 138516262
              },
              "compileTime" : {
                "sizeInBytes" : 2770325240,
                "rowCount" : 138516262
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_quantity#945 AS quantity#748, cs_list_price#947 AS list_price#749] "
          },
          "3" : {
            "sign" : -1804794945,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 7435136380,
                "rowCount" : 265540585
              },
              "compileTime" : {
                "sizeInBytes" : 7435136380,
                "rowCount" : 265540585
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#899 = d_date_sk#900) "
          }
        },
        "links" : [ {
          "fromId" : 6,
          "fromName" : "LogicalRelation",
          "toId" : 5,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Filter",
          "toId" : 4,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Project",
          "toId" : 3,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Join",
          "toId" : 2,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Project",
          "toId" : 1,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "LogicalRelation",
          "toId" : 10,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "Filter",
          "toId" : 9,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "Project",
          "toId" : 8,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "Join",
          "toId" : 7,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Project",
          "toId" : 1,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 16,
          "fromName" : "LogicalRelation",
          "toId" : 15,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 15,
          "fromName" : "Filter",
          "toId" : 14,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 14,
          "fromName" : "Project",
          "toId" : 13,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 13,
          "fromName" : "Join",
          "toId" : 12,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 12,
          "fromName" : "Project",
          "toId" : 1,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Union",
          "toId" : 0,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Aggregate [avg((cast(quantity#746 as decimal(10,0)) * list_price#747)) AS average_sales#752]\n+- Union false, false\n   :- Project [ss_quantity#886 AS quantity#746, ss_list_price#888 AS list_price#747]\n   :  +- Join Inner, (ss_sold_date_sk#899 = d_date_sk#900)\n   :     :- Project [ss_quantity#886, ss_list_price#888, ss_sold_date_sk#899]\n   :     :  +- Filter (isnotnull(ss_sold_date_sk#899) AND dynamicpruning#1288 [ss_sold_date_sk#899])\n   :     :     :  +- Project [d_date_sk#900]\n   :     :     :     +- Filter ((isnotnull(d_year#906) AND ((d_year#906 >= 1998) AND (d_year#906 <= 2000))) AND isnotnull(d_date_sk#900))\n   :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#900,d_date_id#901,d_date#902,d_month_seq#903,d_week_seq#904,d_quarter_seq#905,d_year#906,d_dow#907,d_moy#908,d_dom#909,d_qoy#910,d_fy_year#911,d_fy_quarter_seq#912,d_fy_week_seq#913,d_day_name#914,d_quarter_name#915,d_holiday#916,d_weekend#917,d_following_holiday#918,d_first_dom#919,d_last_dom#920,d_same_day_ly#921,d_same_day_lq#922,d_current_day#923,... 4 more fields] parquet\n   :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#877,ss_item_sk#878,ss_customer_sk#879,ss_cdemo_sk#880,ss_hdemo_sk#881,ss_addr_sk#882,ss_store_sk#883,ss_promo_sk#884,ss_ticket_number#885L,ss_quantity#886,ss_wholesale_cost#887,ss_list_price#888,ss_sales_price#889,ss_ext_discount_amt#890,ss_ext_sales_price#891,ss_ext_wholesale_cost#892,ss_ext_list_price#893,ss_ext_tax#894,ss_coupon_amt#895,ss_net_paid#896,ss_net_paid_inc_tax#897,ss_net_profit#898,ss_sold_date_sk#899] parquet\n   :     +- Project [d_date_sk#900]\n   :        +- Filter ((isnotnull(d_year#906) AND ((d_year#906 >= 1998) AND (d_year#906 <= 2000))) AND isnotnull(d_date_sk#900))\n   :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#900,d_date_id#901,d_date#902,d_month_seq#903,d_week_seq#904,d_quarter_seq#905,d_year#906,d_dow#907,d_moy#908,d_dom#909,d_qoy#910,d_fy_year#911,d_fy_quarter_seq#912,d_fy_week_seq#913,d_day_name#914,d_quarter_name#915,d_holiday#916,d_weekend#917,d_following_holiday#918,d_first_dom#919,d_last_dom#920,d_same_day_ly#921,d_same_day_lq#922,d_current_day#923,... 4 more fields] parquet\n   :- Project [cs_quantity#945 AS quantity#748, cs_list_price#947 AS list_price#749]\n   :  +- Join Inner, (cs_sold_date_sk#961 = d_date_sk#962)\n   :     :- Project [cs_quantity#945, cs_list_price#947, cs_sold_date_sk#961]\n   :     :  +- Filter (isnotnull(cs_sold_date_sk#961) AND dynamicpruning#1289 [cs_sold_date_sk#961])\n   :     :     :  +- Project [d_date_sk#962]\n   :     :     :     +- Filter ((isnotnull(d_year#968) AND ((d_year#968 >= 1998) AND (d_year#968 <= 2000))) AND isnotnull(d_date_sk#962))\n   :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#962,d_date_id#963,d_date#964,d_month_seq#965,d_week_seq#966,d_quarter_seq#967,d_year#968,d_dow#969,d_moy#970,d_dom#971,d_qoy#972,d_fy_year#973,d_fy_quarter_seq#974,d_fy_week_seq#975,d_day_name#976,d_quarter_name#977,d_holiday#978,d_weekend#979,d_following_holiday#980,d_first_dom#981,d_last_dom#982,d_same_day_ly#983,d_same_day_lq#984,d_current_day#985,... 4 more fields] parquet\n   :     :     +- Relation spark_catalog.tpcds_100.catalog_sales[cs_sold_time_sk#928,cs_ship_date_sk#929,cs_bill_customer_sk#930,cs_bill_cdemo_sk#931,cs_bill_hdemo_sk#932,cs_bill_addr_sk#933,cs_ship_customer_sk#934,cs_ship_cdemo_sk#935,cs_ship_hdemo_sk#936,cs_ship_addr_sk#937,cs_call_center_sk#938,cs_catalog_page_sk#939,cs_ship_mode_sk#940,cs_warehouse_sk#941,cs_item_sk#942,cs_promo_sk#943,cs_order_number#944L,cs_quantity#945,cs_wholesale_cost#946,cs_list_price#947,cs_sales_price#948,cs_ext_discount_amt#949,cs_ext_sales_price#950,cs_ext_wholesale_cost#951,... 10 more fields] parquet\n   :     +- Project [d_date_sk#962]\n   :        +- Filter ((isnotnull(d_year#968) AND ((d_year#968 >= 1998) AND (d_year#968 <= 2000))) AND isnotnull(d_date_sk#962))\n   :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#962,d_date_id#963,d_date#964,d_month_seq#965,d_week_seq#966,d_quarter_seq#967,d_year#968,d_dow#969,d_moy#970,d_dom#971,d_qoy#972,d_fy_year#973,d_fy_quarter_seq#974,d_fy_week_seq#975,d_day_name#976,d_quarter_name#977,d_holiday#978,d_weekend#979,d_following_holiday#980,d_first_dom#981,d_last_dom#982,d_same_day_ly#983,d_same_day_lq#984,d_current_day#985,... 4 more fields] parquet\n   +- Project [ws_quantity#1007 AS quantity#750, ws_list_price#1009 AS list_price#751]\n      +- Join Inner, (ws_sold_date_sk#1023 = d_date_sk#1024)\n         :- Project [ws_quantity#1007, ws_list_price#1009, ws_sold_date_sk#1023]\n         :  +- Filter (isnotnull(ws_sold_date_sk#1023) AND dynamicpruning#1290 [ws_sold_date_sk#1023])\n         :     :  +- Project [d_date_sk#1024]\n         :     :     +- Filter ((isnotnull(d_year#1030) AND ((d_year#1030 >= 1998) AND (d_year#1030 <= 2000))) AND isnotnull(d_date_sk#1024))\n         :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#1024,d_date_id#1025,d_date#1026,d_month_seq#1027,d_week_seq#1028,d_quarter_seq#1029,d_year#1030,d_dow#1031,d_moy#1032,d_dom#1033,d_qoy#1034,d_fy_year#1035,d_fy_quarter_seq#1036,d_fy_week_seq#1037,d_day_name#1038,d_quarter_name#1039,d_holiday#1040,d_weekend#1041,d_following_holiday#1042,d_first_dom#1043,d_last_dom#1044,d_same_day_ly#1045,d_same_day_lq#1046,d_current_day#1047,... 4 more fields] parquet\n         :     +- Relation spark_catalog.tpcds_100.web_sales[ws_sold_time_sk#990,ws_ship_date_sk#991,ws_item_sk#992,ws_bill_customer_sk#993,ws_bill_cdemo_sk#994,ws_bill_hdemo_sk#995,ws_bill_addr_sk#996,ws_ship_customer_sk#997,ws_ship_cdemo_sk#998,ws_ship_hdemo_sk#999,ws_ship_addr_sk#1000,ws_web_page_sk#1001,ws_web_site_sk#1002,ws_ship_mode_sk#1003,ws_warehouse_sk#1004,ws_promo_sk#1005,ws_order_number#1006L,ws_quantity#1007,ws_wholesale_cost#1008,ws_list_price#1009,ws_sales_price#1010,ws_ext_discount_amt#1011,ws_ext_sales_price#1012,ws_ext_wholesale_cost#1013,... 10 more fields] parquet\n         +- Project [d_date_sk#1024]\n            +- Filter ((isnotnull(d_year#1030) AND ((d_year#1030 >= 1998) AND (d_year#1030 <= 2000))) AND isnotnull(d_date_sk#1024))\n               +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#1024,d_date_id#1025,d_date#1026,d_month_seq#1027,d_week_seq#1028,d_quarter_seq#1029,d_year#1030,d_dow#1031,d_moy#1032,d_dom#1033,d_qoy#1034,d_fy_year#1035,d_fy_quarter_seq#1036,d_fy_week_seq#1037,d_day_name#1038,d_quarter_name#1039,d_holiday#1040,d_weekend#1041,d_following_holiday#1042,d_first_dom#1043,d_last_dom#1044,d_same_day_ly#1045,d_same_day_lq#1046,d_current_day#1047,... 4 more fields] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "12" : {
            "sign" : -187720148,
            "className" : "org.apache.spark.sql.execution.FileSourceScanExec",
            "sizeInBytes" : 1727606976,
            "rowCount" : 71983624,
            "isRuntime" : false,
            "predicate" : " (unknown) Scan parquet spark_catalog.tpcds_100.web_sales Output [3]: [ws_quantity#1007, ws_list_price#1009, ws_sold_date_sk#1023] Batched: true Location: InMemoryFileIndex [hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/web_sales/ws_sold_date_sk=2450816, ... 1822 entries] PartitionFilters: [isnotnull(ws_sold_date_sk#1023), dynamicpruningexpression(ws_sold_date_sk#1023 IN dynamicpruning#1292)] ReadSchema: struct<ws_quantity:int,ws_list_price:decimal(7,2)> "
          },
          "8" : {
            "sign" : 1539152550,
            "className" : "org.apache.spark.sql.execution.FileSourceScanExec",
            "sizeInBytes" : 3438552408,
            "rowCount" : 143273017,
            "isRuntime" : false,
            "predicate" : " (unknown) Scan parquet spark_catalog.tpcds_100.catalog_sales Output [3]: [cs_quantity#945, cs_list_price#947, cs_sold_date_sk#961] Batched: true Location: InMemoryFileIndex [hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/catalog_sales/cs_sold_date_sk=2450815, ... 1835 entries] PartitionFilters: [isnotnull(cs_sold_date_sk#961), dynamicpruningexpression(cs_sold_date_sk#961 IN dynamicpruning#1292)] ReadSchema: struct<cs_quantity:int,cs_list_price:decimal(7,2)> "
          },
          "4" : {
            "sign" : 1168819404,
            "className" : "org.apache.spark.sql.execution.FileSourceScanExec",
            "sizeInBytes" : 6601088472,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) Scan parquet spark_catalog.tpcds_100.store_sales Output [3]: [ss_quantity#886, ss_list_price#888, ss_sold_date_sk#899] Batched: true Location: InMemoryFileIndex [hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/store_sales/ss_sold_date_sk=2450816, ... 1822 entries] PartitionFilters: [isnotnull(ss_sold_date_sk#899), dynamicpruningexpression(ss_sold_date_sk#899 IN dynamicpruning#1292)] ReadSchema: struct<ss_quantity:int,ss_list_price:decimal(7,2)> "
          },
          "11" : {
            "sign" : 786482865,
            "className" : "org.apache.spark.sql.execution.joins.BroadcastHashJoinExec",
            "sizeInBytes" : 1945876940,
            "rowCount" : 69495605,
            "isRuntime" : false,
            "predicate" : " (unknown) BroadcastHashJoin Left keys [1]: [ws_sold_date_sk#1023] Right keys [1]: [d_date_sk#1024] Join type: Inner Join condition: None "
          },
          "9" : {
            "sign" : 729625006,
            "className" : "org.apache.spark.sql.execution.adaptive.BroadcastQueryStageExec",
            "sizeInBytes" : 17256,
            "rowCount" : 1438,
            "isRuntime" : false,
            "predicate" : " (unknown) BroadcastQueryStage Output [1]: [d_date_sk#962] Arguments: 3 "
          },
          "13" : {
            "sign" : -121237378,
            "className" : "org.apache.spark.sql.execution.adaptive.BroadcastQueryStageExec",
            "sizeInBytes" : 17256,
            "rowCount" : 1438,
            "isRuntime" : false,
            "predicate" : " (unknown) BroadcastQueryStage Output [1]: [d_date_sk#1024] Arguments: 5 "
          },
          "5" : {
            "sign" : 63269684,
            "className" : "org.apache.spark.sql.execution.adaptive.BroadcastQueryStageExec",
            "sizeInBytes" : 17256,
            "rowCount" : 1438,
            "isRuntime" : false,
            "predicate" : " (unknown) BroadcastQueryStage Output [1]: [d_date_sk#900] Arguments: 1 "
          },
          "10" : {
            "sign" : 1354036819,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 1389912100,
            "rowCount" : 69495605,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [2]: [ws_quantity#1007 AS quantity#750, ws_list_price#1009 AS list_price#751] Input [4]: [ws_quantity#1007, ws_list_price#1009, ws_sold_date_sk#1023, d_date_sk#1024] "
          },
          "6" : {
            "sign" : -1362209153,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 2770325240,
            "rowCount" : 138516262,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [2]: [cs_quantity#945 AS quantity#748, cs_list_price#947 AS list_price#749] Input [4]: [cs_quantity#945, cs_list_price#947, cs_sold_date_sk#961, d_date_sk#962] "
          },
          "1" : {
            "sign" : -1611113916,
            "className" : "org.apache.spark.sql.execution.UnionExec",
            "sizeInBytes" : 9471049040,
            "rowCount" : 473552452,
            "isRuntime" : false,
            "predicate" : " (unknown) Union "
          },
          "0" : {
            "sign" : -931231899,
            "className" : "org.apache.spark.sql.execution.aggregate.HashAggregateExec",
            "sizeInBytes" : 24,
            "rowCount" : 1,
            "isRuntime" : false,
            "predicate" : " (unknown) HashAggregate Input [2]: [quantity#746, list_price#747] Keys: [] Functions [1]: [partial_avg((cast(quantity#746 as decimal(10,0)) * list_price#747))] Aggregate Attributes [2]: [sum#1326, count#1327L] Results [2]: [sum#1328, count#1329L] "
          },
          "2" : {
            "sign" : -1962513605,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 5310811700,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [2]: [ss_quantity#886 AS quantity#746, ss_list_price#888 AS list_price#747] Input [4]: [ss_quantity#886, ss_list_price#888, ss_sold_date_sk#899, d_date_sk#900] "
          },
          "7" : {
            "sign" : 58736457,
            "className" : "org.apache.spark.sql.execution.joins.BroadcastHashJoinExec",
            "sizeInBytes" : 3878455336,
            "rowCount" : 138516262,
            "isRuntime" : false,
            "predicate" : " (unknown) BroadcastHashJoin Left keys [1]: [cs_sold_date_sk#961] Right keys [1]: [d_date_sk#962] Join type: Inner Join condition: None "
          },
          "3" : {
            "sign" : -1796423947,
            "className" : "org.apache.spark.sql.execution.joins.BroadcastHashJoinExec",
            "sizeInBytes" : 7435136380,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) BroadcastHashJoin Left keys [1]: [ss_sold_date_sk#899] Right keys [1]: [d_date_sk#900] Join type: Inner Join condition: None "
          }
        },
        "links" : [ {
          "fromId" : 4,
          "fromName" : "Scan parquet spark_catalog.tpcds_100.store_sales",
          "toId" : 3,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "BroadcastQueryStage",
          "toId" : 3,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "BroadcastHashJoin",
          "toId" : 2,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Project",
          "toId" : 1,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "Scan parquet spark_catalog.tpcds_100.catalog_sales",
          "toId" : 7,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "BroadcastQueryStage",
          "toId" : 7,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "BroadcastHashJoin",
          "toId" : 6,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Project",
          "toId" : 1,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 12,
          "fromName" : "Scan parquet spark_catalog.tpcds_100.web_sales",
          "toId" : 11,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 13,
          "fromName" : "BroadcastQueryStage",
          "toId" : 11,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "BroadcastHashJoin",
          "toId" : 10,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "Project",
          "toId" : 1,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Union",
          "toId" : 0,
          "toName" : "HashAggregate",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "HashAggregate(keys=[], functions=[partial_avg((cast(quantity#746 as decimal(10,0)) * list_price#747))], output=[sum#1328, count#1329L])\n+- Union\n   :- Project [ss_quantity#886 AS quantity#746, ss_list_price#888 AS list_price#747]\n   :  +- BroadcastHashJoin [ss_sold_date_sk#899], [d_date_sk#900], Inner, BuildRight, false\n   :     :- FileScan parquet spark_catalog.tpcds_100.store_sales[ss_quantity#886,ss_list_price#888,ss_sold_date_sk#899] Batched: true, DataFilters: [], Format: Parquet, Location: InMemoryFileIndex(1823 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/store_..., PartitionFilters: [isnotnull(ss_sold_date_sk#899), dynamicpruningexpression(ss_sold_date_sk#899 IN dynamicpruning#1..., PushedFilters: [], ReadSchema: struct<ss_quantity:int,ss_list_price:decimal(7,2)>\n   :     :     +- ReusedSubquery SubqueryBroadcast dynamicpruning#1292, 0, [d_date_sk#799], [id=#4500]\n   :     +- BroadcastQueryStage 1\n   :        +- ReusedExchange [d_date_sk#900], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=1714]\n   :- Project [cs_quantity#945 AS quantity#748, cs_list_price#947 AS list_price#749]\n   :  +- BroadcastHashJoin [cs_sold_date_sk#961], [d_date_sk#962], Inner, BuildRight, false\n   :     :- FileScan parquet spark_catalog.tpcds_100.catalog_sales[cs_quantity#945,cs_list_price#947,cs_sold_date_sk#961] Batched: true, DataFilters: [], Format: Parquet, Location: InMemoryFileIndex(1836 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/catalo..., PartitionFilters: [isnotnull(cs_sold_date_sk#961), dynamicpruningexpression(cs_sold_date_sk#961 IN dynamicpruning#1..., PushedFilters: [], ReadSchema: struct<cs_quantity:int,cs_list_price:decimal(7,2)>\n   :     :     +- ReusedSubquery SubqueryBroadcast dynamicpruning#1292, 0, [d_date_sk#799], [id=#4500]\n   :     +- BroadcastQueryStage 3\n   :        +- ReusedExchange [d_date_sk#962], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=1714]\n   +- Project [ws_quantity#1007 AS quantity#750, ws_list_price#1009 AS list_price#751]\n      +- BroadcastHashJoin [ws_sold_date_sk#1023], [d_date_sk#1024], Inner, BuildRight, false\n         :- FileScan parquet spark_catalog.tpcds_100.web_sales[ws_quantity#1007,ws_list_price#1009,ws_sold_date_sk#1023] Batched: true, DataFilters: [], Format: Parquet, Location: InMemoryFileIndex(1823 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/web_sa..., PartitionFilters: [isnotnull(ws_sold_date_sk#1023), dynamicpruningexpression(ws_sold_date_sk#1023 IN dynamicpruning..., PushedFilters: [], ReadSchema: struct<ws_quantity:int,ws_list_price:decimal(7,2)>\n         :     +- ReusedSubquery SubqueryBroadcast dynamicpruning#1292, 0, [d_date_sk#799], [id=#4500]\n         +- BroadcastQueryStage 5\n            +- ReusedExchange [d_date_sk#1024], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=1714]\n"
      },
      "IM" : {
        "inputSizeInBytes" : 11770419888,
        "inputRowCount" : 490305282
      },
      "InitialPartitionNum" : 0,
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 18,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 26 ],
      "Objectives" : {
        "DurationInMs" : 10167,
        "TotalTasksDurationInMs" : 109155,
        "IOBytes" : {
          "Total" : 1475740164,
          "Details" : {
            "IR" : 1475721016,
            "IW" : 0,
            "SR" : 0,
            "SW" : 19148
          }
        }
      }
    },
    "14" : {
      "QSLogical" : {
        "operators" : {
          "0" : {
            "sign" : -324934329,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 4860984,
                "rowCount" : 202541
              },
              "compileTime" : {
                "sizeInBytes" : 4860984,
                "rowCount" : 202541
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (i_item_sk#1075 = ss_item_sk#745) "
          }
        },
        "links" : [ ],
        "rawPlan" : "Join LeftSemi, (i_item_sk#1075 = ss_item_sk#745)\n:- Project [i_item_sk#1075, i_brand_id#1082, i_class_id#1084, i_category_id#1086]\n:  +- Filter (((isnotnull(i_item_sk#1075) AND isnotnull(i_brand_id#1082)) AND isnotnull(i_class_id#1084)) AND isnotnull(i_category_id#1086))\n:     +- Relation spark_catalog.tpcds_100.item[i_item_sk#1075,i_item_id#1076,i_rec_start_date#1077,i_rec_end_date#1078,i_item_desc#1079,i_current_price#1080,i_wholesale_cost#1081,i_brand_id#1082,i_brand#1083,i_class_id#1084,i_class#1085,i_category_id#1086,i_category#1087,i_manufact_id#1088,i_manufact#1089,i_size#1090,i_formulation#1091,i_color#1092,i_units#1093,i_container#1094,i_manager_id#1095,i_product_name#1096] parquet\n+- Project [i_item_sk#25 AS ss_item_sk#745]\n   +- Join Inner, (((i_brand_id#32 = brand_id#742) AND (i_class_id#34 = class_id#743)) AND (i_category_id#36 = category_id#744))\n      :- Project [i_item_sk#25, i_brand_id#32, i_class_id#34, i_category_id#36]\n      :  +- Filter ((isnotnull(i_brand_id#32) AND isnotnull(i_class_id#34)) AND isnotnull(i_category_id#36))\n      :     +- Relation spark_catalog.tpcds_100.item[i_item_sk#25,i_item_id#26,i_rec_start_date#27,i_rec_end_date#28,i_item_desc#29,i_current_price#30,i_wholesale_cost#31,i_brand_id#32,i_brand#33,i_class_id#34,i_class#35,i_category_id#36,i_category#37,i_manufact_id#38,i_manufact#39,i_size#40,i_formulation#41,i_color#42,i_units#43,i_container#44,i_manager_id#45,i_product_name#46] parquet\n      +- Join LeftSemi, (((brand_id#742 <=> i_brand_id#834) AND (class_id#743 <=> i_class_id#836)) AND (category_id#744 <=> i_category_id#838))\n         :- Aggregate [brand_id#742, class_id#743, category_id#744], [brand_id#742, class_id#743, category_id#744]\n         :  +- Project [i_brand_id#762 AS brand_id#742, i_class_id#764 AS class_id#743, i_category_id#766 AS category_id#744]\n         :     +- Join Inner, (ss_item_sk#48 = i_item_sk#755)\n         :        :- Project [ss_item_sk#48]\n         :        :  +- Join Inner, (ss_sold_date_sk#69 = d_date_sk#70)\n         :        :     :- Project [ss_item_sk#48, ss_sold_date_sk#69]\n         :        :     :  +- Filter ((isnotnull(ss_item_sk#48) AND isnotnull(ss_sold_date_sk#69)) AND dynamicpruning#1291 [ss_sold_date_sk#69])\n         :        :     :     :  +- Project [d_date_sk#70]\n         :        :     :     :     +- Filter ((isnotnull(d_year#76) AND ((d_year#76 >= 1998) AND (d_year#76 <= 2000))) AND isnotnull(d_date_sk#70))\n         :        :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#70,d_date_id#71,d_date#72,d_month_seq#73,d_week_seq#74,d_quarter_seq#75,d_year#76,d_dow#77,d_moy#78,d_dom#79,d_qoy#80,d_fy_year#81,d_fy_quarter_seq#82,d_fy_week_seq#83,d_day_name#84,d_quarter_name#85,d_holiday#86,d_weekend#87,d_following_holiday#88,d_first_dom#89,d_last_dom#90,d_same_day_ly#91,d_same_day_lq#92,d_current_day#93,... 4 more fields] parquet\n         :        :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#47,ss_item_sk#48,ss_customer_sk#49,ss_cdemo_sk#50,ss_hdemo_sk#51,ss_addr_sk#52,ss_store_sk#53,ss_promo_sk#54,ss_ticket_number#55L,ss_quantity#56,ss_wholesale_cost#57,ss_list_price#58,ss_sales_price#59,ss_ext_discount_amt#60,ss_ext_sales_price#61,ss_ext_wholesale_cost#62,ss_ext_list_price#63,ss_ext_tax#64,ss_coupon_amt#65,ss_net_paid#66,ss_net_paid_inc_tax#67,ss_net_profit#68,ss_sold_date_sk#69] parquet\n         :        :     +- Project [d_date_sk#70]\n         :        :        +- Filter ((isnotnull(d_year#76) AND ((d_year#76 >= 1998) AND (d_year#76 <= 2000))) AND isnotnull(d_date_sk#70))\n         :        :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#70,d_date_id#71,d_date#72,d_month_seq#73,d_week_seq#74,d_quarter_seq#75,d_year#76,d_dow#77,d_moy#78,d_dom#79,d_qoy#80,d_fy_year#81,d_fy_quarter_seq#82,d_fy_week_seq#83,d_day_name#84,d_quarter_name#85,d_holiday#86,d_weekend#87,d_following_holiday#88,d_first_dom#89,d_last_dom#90,d_same_day_ly#91,d_same_day_lq#92,d_current_day#93,... 4 more fields] parquet\n         :        +- Join LeftSemi, (((i_brand_id#762 <=> i_brand_id#784) AND (i_class_id#764 <=> i_class_id#786)) AND (i_category_id#766 <=> i_category_id#788))\n         :           :- Project [i_item_sk#755, i_brand_id#762, i_class_id#764, i_category_id#766]\n         :           :  +- Filter (isnotnull(i_item_sk#755) AND ((isnotnull(i_brand_id#762) AND isnotnull(i_class_id#764)) AND isnotnull(i_category_id#766)))\n         :           :     +- Relation spark_catalog.tpcds_100.item[i_item_sk#755,i_item_id#756,i_rec_start_date#757,i_rec_end_date#758,i_item_desc#759,i_current_price#760,i_wholesale_cost#761,i_brand_id#762,i_brand#763,i_class_id#764,i_class#765,i_category_id#766,i_category#767,i_manufact_id#768,i_manufact#769,i_size#770,i_formulation#771,i_color#772,i_units#773,i_container#774,i_manager_id#775,i_product_name#776] parquet\n         :           +- Project [i_brand_id#784, i_class_id#786, i_category_id#788]\n         :              +- Join Inner, (cs_item_sk#112 = i_item_sk#777)\n         :                 :- Project [cs_item_sk#112]\n         :                 :  +- Join Inner, (cs_sold_date_sk#131 = d_date_sk#799)\n         :                 :     :- Project [cs_item_sk#112, cs_sold_date_sk#131]\n         :                 :     :  +- Filter ((isnotnull(cs_item_sk#112) AND isnotnull(cs_sold_date_sk#131)) AND dynamicpruning#1292 [cs_sold_date_sk#131])\n         :                 :     :     :  +- Project [d_date_sk#799]\n         :                 :     :     :     +- Filter ((isnotnull(d_year#805) AND ((d_year#805 >= 1998) AND (d_year#805 <= 2000))) AND isnotnull(d_date_sk#799))\n         :                 :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#799,d_date_id#800,d_date#801,d_month_seq#802,d_week_seq#803,d_quarter_seq#804,d_year#805,d_dow#806,d_moy#807,d_dom#808,d_qoy#809,d_fy_year#810,d_fy_quarter_seq#811,d_fy_week_seq#812,d_day_name#813,d_quarter_name#814,d_holiday#815,d_weekend#816,d_following_holiday#817,d_first_dom#818,d_last_dom#819,d_same_day_ly#820,d_same_day_lq#821,d_current_day#822,... 4 more fields] parquet\n         :                 :     :     +- Relation spark_catalog.tpcds_100.catalog_sales[cs_sold_time_sk#98,cs_ship_date_sk#99,cs_bill_customer_sk#100,cs_bill_cdemo_sk#101,cs_bill_hdemo_sk#102,cs_bill_addr_sk#103,cs_ship_customer_sk#104,cs_ship_cdemo_sk#105,cs_ship_hdemo_sk#106,cs_ship_addr_sk#107,cs_call_center_sk#108,cs_catalog_page_sk#109,cs_ship_mode_sk#110,cs_warehouse_sk#111,cs_item_sk#112,cs_promo_sk#113,cs_order_number#114L,cs_quantity#115,cs_wholesale_cost#116,cs_list_price#117,cs_sales_price#118,cs_ext_discount_amt#119,cs_ext_sales_price#120,cs_ext_wholesale_cost#121,... 10 more fields] parquet\n         :                 :     +- Project [d_date_sk#799]\n         :                 :        +- Filter ((isnotnull(d_year#805) AND ((d_year#805 >= 1998) AND (d_year#805 <= 2000))) AND isnotnull(d_date_sk#799))\n         :                 :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#799,d_date_id#800,d_date#801,d_month_seq#802,d_week_seq#803,d_quarter_seq#804,d_year#805,d_dow#806,d_moy#807,d_dom#808,d_qoy#809,d_fy_year#810,d_fy_quarter_seq#811,d_fy_week_seq#812,d_day_name#813,d_quarter_name#814,d_holiday#815,d_weekend#816,d_following_holiday#817,d_first_dom#818,d_last_dom#819,d_same_day_ly#820,d_same_day_lq#821,d_current_day#822,... 4 more fields] parquet\n         :                 +- Project [i_item_sk#777, i_brand_id#784, i_class_id#786, i_category_id#788]\n         :                    +- Filter isnotnull(i_item_sk#777)\n         :                       +- Relation spark_catalog.tpcds_100.item[i_item_sk#777,i_item_id#778,i_rec_start_date#779,i_rec_end_date#780,i_item_desc#781,i_current_price#782,i_wholesale_cost#783,i_brand_id#784,i_brand#785,i_class_id#786,i_class#787,i_category_id#788,i_category#789,i_manufact_id#790,i_manufact#791,i_size#792,i_formulation#793,i_color#794,i_units#795,i_container#796,i_manager_id#797,i_product_name#798] parquet\n         +- Project [i_brand_id#834, i_class_id#836, i_category_id#838]\n            +- Join Inner, (ws_item_sk#134 = i_item_sk#827)\n               :- Project [ws_item_sk#134]\n               :  +- Join Inner, (ws_sold_date_sk#165 = d_date_sk#849)\n               :     :- Project [ws_item_sk#134, ws_sold_date_sk#165]\n               :     :  +- Filter ((isnotnull(ws_item_sk#134) AND isnotnull(ws_sold_date_sk#165)) AND dynamicpruning#1293 [ws_sold_date_sk#165])\n               :     :     :  +- Project [d_date_sk#849]\n               :     :     :     +- Filter ((isnotnull(d_year#855) AND ((d_year#855 >= 1998) AND (d_year#855 <= 2000))) AND isnotnull(d_date_sk#849))\n               :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#849,d_date_id#850,d_date#851,d_month_seq#852,d_week_seq#853,d_quarter_seq#854,d_year#855,d_dow#856,d_moy#857,d_dom#858,d_qoy#859,d_fy_year#860,d_fy_quarter_seq#861,d_fy_week_seq#862,d_day_name#863,d_quarter_name#864,d_holiday#865,d_weekend#866,d_following_holiday#867,d_first_dom#868,d_last_dom#869,d_same_day_ly#870,d_same_day_lq#871,d_current_day#872,... 4 more fields] parquet\n               :     :     +- Relation spark_catalog.tpcds_100.web_sales[ws_sold_time_sk#132,ws_ship_date_sk#133,ws_item_sk#134,ws_bill_customer_sk#135,ws_bill_cdemo_sk#136,ws_bill_hdemo_sk#137,ws_bill_addr_sk#138,ws_ship_customer_sk#139,ws_ship_cdemo_sk#140,ws_ship_hdemo_sk#141,ws_ship_addr_sk#142,ws_web_page_sk#143,ws_web_site_sk#144,ws_ship_mode_sk#145,ws_warehouse_sk#146,ws_promo_sk#147,ws_order_number#148L,ws_quantity#149,ws_wholesale_cost#150,ws_list_price#151,ws_sales_price#152,ws_ext_discount_amt#153,ws_ext_sales_price#154,ws_ext_wholesale_cost#155,... 10 more fields] parquet\n               :     +- Project [d_date_sk#849]\n               :        +- Filter ((isnotnull(d_year#855) AND ((d_year#855 >= 1998) AND (d_year#855 <= 2000))) AND isnotnull(d_date_sk#849))\n               :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#849,d_date_id#850,d_date#851,d_month_seq#852,d_week_seq#853,d_quarter_seq#854,d_year#855,d_dow#856,d_moy#857,d_dom#858,d_qoy#859,d_fy_year#860,d_fy_quarter_seq#861,d_fy_week_seq#862,d_day_name#863,d_quarter_name#864,d_holiday#865,d_weekend#866,d_following_holiday#867,d_first_dom#868,d_last_dom#869,d_same_day_ly#870,d_same_day_lq#871,d_current_day#872,... 4 more fields] parquet\n               +- Project [i_item_sk#827, i_brand_id#834, i_class_id#836, i_category_id#838]\n                  +- Filter isnotnull(i_item_sk#827)\n                     +- Relation spark_catalog.tpcds_100.item[i_item_sk#827,i_item_id#828,i_rec_start_date#829,i_rec_end_date#830,i_item_desc#831,i_current_price#832,i_wholesale_cost#833,i_brand_id#834,i_brand#835,i_class_id#836,i_class#837,i_category_id#838,i_category#839,i_manufact_id#840,i_manufact#841,i_size#842,i_formulation#843,i_color#844,i_units#845,i_container#846,i_manager_id#847,i_product_name#848] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "0" : {
            "sign" : -207870354,
            "className" : "org.apache.spark.sql.execution.joins.BroadcastHashJoinExec",
            "sizeInBytes" : 4860984,
            "rowCount" : 202541,
            "isRuntime" : false,
            "predicate" : " (unknown) BroadcastHashJoin Left keys [1]: [i_item_sk#1075] Right keys [1]: [ss_item_sk#745] Join type: LeftSemi Join condition: None "
          },
          "1" : {
            "sign" : -779872417,
            "className" : "org.apache.spark.sql.execution.FilterExec",
            "sizeInBytes" : 4860984,
            "rowCount" : 202541,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Input [4]: [i_item_sk#1075, i_brand_id#1082, i_class_id#1084, i_category_id#1086] Condition : (((isnotnull(i_item_sk#1075) AND isnotnull(i_brand_id#1082)) AND isnotnull(i_class_id#1084)) AND isnotnull(i_category_id#1086)) "
          },
          "2" : {
            "sign" : -1310628538,
            "className" : "org.apache.spark.sql.execution.FileSourceScanExec",
            "sizeInBytes" : 4860984,
            "rowCount" : 202541,
            "isRuntime" : false,
            "predicate" : " (unknown) Scan parquet spark_catalog.tpcds_100.item Output [4]: [i_item_sk#1075, i_brand_id#1082, i_class_id#1084, i_category_id#1086] Batched: true Location: InMemoryFileIndex [hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/item] PushedFilters: [IsNotNull(i_item_sk), IsNotNull(i_brand_id), IsNotNull(i_class_id), IsNotNull(i_category_id)] ReadSchema: struct<i_item_sk:int,i_brand_id:int,i_class_id:int,i_category_id:int> "
          },
          "3" : {
            "sign" : -907288547,
            "className" : "org.apache.spark.sql.execution.adaptive.BroadcastQueryStageExec",
            "sizeInBytes" : 10020600,
            "rowCount" : 176814,
            "isRuntime" : true,
            "predicate" : " (unknown) BroadcastQueryStage Output [1]: [ss_item_sk#745] Arguments: 91 "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "Scan parquet spark_catalog.tpcds_100.item",
          "toId" : 1,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Filter",
          "toId" : 0,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "BroadcastQueryStage",
          "toId" : 0,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "BroadcastHashJoin [i_item_sk#1075], [ss_item_sk#745], LeftSemi, BuildRight, false\n:- Filter (((isnotnull(i_item_sk#1075) AND isnotnull(i_brand_id#1082)) AND isnotnull(i_class_id#1084)) AND isnotnull(i_category_id#1086))\n:  +- FileScan parquet spark_catalog.tpcds_100.item[i_item_sk#1075,i_brand_id#1082,i_class_id#1084,i_category_id#1086] Batched: true, DataFilters: [isnotnull(i_item_sk#1075), isnotnull(i_brand_id#1082), isnotnull(i_class_id#1084), isnotnull(i_c..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/item], PartitionFilters: [], PushedFilters: [IsNotNull(i_item_sk), IsNotNull(i_brand_id), IsNotNull(i_class_id), IsNotNull(i_category_id)], ReadSchema: struct<i_item_sk:int,i_brand_id:int,i_class_id:int,i_category_id:int>\n+- BroadcastQueryStage 91\n   +- ReusedExchange [ss_item_sk#745], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=11573]\n"
      },
      "IM" : {
        "inputSizeInBytes" : 14881584,
        "inputRowCount" : 379355
      },
      "InitialPartitionNum" : 0,
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 14,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 23 ],
      "Objectives" : {
        "DurationInMs" : 245,
        "TotalTasksDurationInMs" : 813,
        "IOBytes" : {
          "Total" : 1337829,
          "Details" : {
            "IR" : 1337829,
            "IW" : 0,
            "SR" : 0,
            "SW" : 0
          }
        }
      }
    },
    "0" : {
      "QSLogical" : {
        "operators" : {
          "0" : {
            "sign" : -117080718,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 17256,
                "rowCount" : 1438
              },
              "compileTime" : {
                "sizeInBytes" : 17256,
                "rowCount" : 1438
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#70] "
          },
          "1" : {
            "sign" : 1340377833,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 353748,
                "rowCount" : 1438
              },
              "compileTime" : {
                "sizeInBytes" : 353748,
                "rowCount" : 1438
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(d_year#76) AND ((d_year#76 >= 1998) AND (d_year#76 <= 2000))) AND isnotnull(d_date_sk#70)) "
          },
          "2" : {
            "sign" : -232749464,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 17970054,
                "rowCount" : 73049
              },
              "compileTime" : {
                "sizeInBytes" : 17970054,
                "rowCount" : 73049
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#70, d_date_id#71, d_date#72, d_month_seq#73, d_week_seq#74, d_quarter_seq#75, d_year#76, d_dow#77, d_moy#78, d_dom#79, d_qoy#80, d_fy_year#81, d_fy_quarter_seq#82, d_fy_week_seq#83, d_day_name#84, d_quarter_name#85, d_holiday#86, d_weekend#87, d_following_holiday#88, d_first_dom#89, d_last_dom#90, d_same_day_ly#91, d_same_day_lq#92, d_current_day#93, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "LogicalRelation",
          "toId" : 1,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Filter",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [d_date_sk#70]\n+- Filter ((isnotnull(d_year#76) AND ((d_year#76 >= 1998) AND (d_year#76 <= 2000))) AND isnotnull(d_date_sk#70))\n   +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#70,d_date_id#71,d_date#72,d_month_seq#73,d_week_seq#74,d_quarter_seq#75,d_year#76,d_dow#77,d_moy#78,d_dom#79,d_qoy#80,d_fy_year#81,d_fy_quarter_seq#82,d_fy_week_seq#83,d_day_name#84,d_quarter_name#85,d_holiday#86,d_weekend#87,d_following_holiday#88,d_first_dom#89,d_last_dom#90,d_same_day_ly#91,d_same_day_lq#92,d_current_day#93,... 4 more fields] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "0" : {
            "sign" : 94986108,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 17256,
            "rowCount" : 1438,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [1]: [d_date_sk#70] Input [2]: [d_date_sk#70, d_year#76] "
          },
          "1" : {
            "sign" : 694171257,
            "className" : "org.apache.spark.sql.execution.FilterExec",
            "sizeInBytes" : 17256,
            "rowCount" : 1438,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Input [2]: [d_date_sk#70, d_year#76] Condition : (((isnotnull(d_year#76) AND (d_year#76 >= 1998)) AND (d_year#76 <= 2000)) AND isnotnull(d_date_sk#70)) "
          },
          "2" : {
            "sign" : -1862744176,
            "className" : "org.apache.spark.sql.execution.FileSourceScanExec",
            "sizeInBytes" : 17256,
            "rowCount" : 1438,
            "isRuntime" : false,
            "predicate" : " (unknown) Scan parquet spark_catalog.tpcds_100.date_dim Output [2]: [d_date_sk#70, d_year#76] Batched: true Location: InMemoryFileIndex [hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim] PushedFilters: [IsNotNull(d_year), GreaterThanOrEqual(d_year,1998), LessThanOrEqual(d_year,2000), IsNotNull(d_date_sk)] ReadSchema: struct<d_date_sk:int,d_year:int> "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "Scan parquet spark_catalog.tpcds_100.date_dim",
          "toId" : 1,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Filter",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [d_date_sk#70]\n+- Filter (((isnotnull(d_year#76) AND (d_year#76 >= 1998)) AND (d_year#76 <= 2000)) AND isnotnull(d_date_sk#70))\n   +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#70,d_year#76] Batched: true, DataFilters: [isnotnull(d_year#76), (d_year#76 >= 1998), (d_year#76 <= 2000), isnotnull(d_date_sk#70)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), GreaterThanOrEqual(d_year,1998), LessThanOrEqual(d_year,2000), IsNotNull(d_da..., ReadSchema: struct<d_date_sk:int,d_year:int>\n"
      },
      "IM" : {
        "inputSizeInBytes" : 17256,
        "inputRowCount" : 1438
      },
      "InitialPartitionNum" : 0,
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 0,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 3 ],
      "Objectives" : {
        "DurationInMs" : 1517,
        "TotalTasksDurationInMs" : 1483,
        "IOBytes" : {
          "Total" : 84698,
          "Details" : {
            "IR" : 84698,
            "IW" : 0,
            "SR" : 0,
            "SW" : 0
          }
        }
      }
    },
    "20" : {
      "QSLogical" : {
        "operators" : {
          "4" : {
            "sign" : -1109463710,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 383488,
                "rowCount" : 5992
              },
              "compileTime" : {
                "sizeInBytes" : 383488,
                "rowCount" : 5992
              }
            },
            "isRuntime" : true,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(sales#737) AND (cast(sales#737 as decimal(32,6)) > cast(scalar-subquery#741 [] as decimal(32,6)))) "
          },
          "5" : {
            "sign" : -303166545,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 431424,
                "rowCount" : 5992
              },
              "compileTime" : {
                "sizeInBytes" : 21787077332313216,
                "rowCount" : -1
              }
            },
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [i_brand_id#1155, i_class_id#1157, i_category_id#1159], [store AS channel#736, i_brand_id#1155, i_class_id#1157, i_category_id#1159, sum((cast(ss_quantity#1134 as decimal(10,0)) * ss_list_price#1136)) AS sales#737, count(1) AS number_sales#738L], HashAggregate(keys=[i_brand_id#1155, i_class_id#1157, i_category_id#1159], functions=[sum((cast(ss_quantity#1134 as decimal(10,0)) * ss_list_price#1136)), count(1)]) "
          },
          "1" : {
            "sign" : 322006439,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 8355082712014130577408,
                "rowCount" : -1
              },
              "compileTime" : {
                "sizeInBytes" : 8355082712014130577408,
                "rowCount" : -1
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) LocalLimit Arguments: 100 "
          },
          "0" : {
            "sign" : 29737490,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 12000,
                "rowCount" : 100
              },
              "compileTime" : {
                "sizeInBytes" : 12000,
                "rowCount" : 100
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) GlobalLimit Arguments: 100 "
          },
          "2" : {
            "sign" : 337351868,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 8355082712014130577408,
                "rowCount" : -1
              },
              "compileTime" : {
                "sizeInBytes" : 8355082712014130577408,
                "rowCount" : -1
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [i_brand_id#1082 ASC NULLS FIRST, i_class_id#1084 ASC NULLS FIRST, i_category_id#1086 ASC NULLS FIRST], true "
          },
          "3" : {
            "sign" : 208564054,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 8355082712014130577408,
                "rowCount" : -1
              },
              "compileTime" : {
                "sizeInBytes" : 8355082712014130577408,
                "rowCount" : -1
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (((i_brand_id#1082 = i_brand_id#1155) AND (i_class_id#1084 = i_class_id#1157)) AND (i_category_id#1086 = i_category_id#1159)) "
          }
        },
        "links" : [ {
          "fromId" : 5,
          "fromName" : "LogicalQueryStage",
          "toId" : 4,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Filter",
          "toId" : 3,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Join",
          "toId" : 2,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "LocalLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "LocalLimit",
          "toId" : 0,
          "toName" : "GlobalLimit",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [i_brand_id#1082 ASC NULLS FIRST, i_class_id#1084 ASC NULLS FIRST, i_category_id#1086 ASC NULLS FIRST], true\n      +- Join Inner, (((i_brand_id#1082 = i_brand_id#1155) AND (i_class_id#1084 = i_class_id#1157)) AND (i_category_id#1086 = i_category_id#1159))\n         :- Filter (isnotnull(sales#731) AND (cast(sales#731 as decimal(32,6)) > cast(scalar-subquery#735 [] as decimal(32,6))))\n         :  :  +- Aggregate [avg((cast(quantity#746 as decimal(10,0)) * list_price#747)) AS average_sales#752]\n         :  :     +- Union false, false\n         :  :        :- Project [ss_quantity#886 AS quantity#746, ss_list_price#888 AS list_price#747]\n         :  :        :  +- Join Inner, (ss_sold_date_sk#899 = d_date_sk#900)\n         :  :        :     :- Project [ss_quantity#886, ss_list_price#888, ss_sold_date_sk#899]\n         :  :        :     :  +- Filter (isnotnull(ss_sold_date_sk#899) AND dynamicpruning#1288 [ss_sold_date_sk#899])\n         :  :        :     :     :  +- Project [d_date_sk#900]\n         :  :        :     :     :     +- Filter ((isnotnull(d_year#906) AND ((d_year#906 >= 1998) AND (d_year#906 <= 2000))) AND isnotnull(d_date_sk#900))\n         :  :        :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#900,d_date_id#901,d_date#902,d_month_seq#903,d_week_seq#904,d_quarter_seq#905,d_year#906,d_dow#907,d_moy#908,d_dom#909,d_qoy#910,d_fy_year#911,d_fy_quarter_seq#912,d_fy_week_seq#913,d_day_name#914,d_quarter_name#915,d_holiday#916,d_weekend#917,d_following_holiday#918,d_first_dom#919,d_last_dom#920,d_same_day_ly#921,d_same_day_lq#922,d_current_day#923,... 4 more fields] parquet\n         :  :        :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#877,ss_item_sk#878,ss_customer_sk#879,ss_cdemo_sk#880,ss_hdemo_sk#881,ss_addr_sk#882,ss_store_sk#883,ss_promo_sk#884,ss_ticket_number#885L,ss_quantity#886,ss_wholesale_cost#887,ss_list_price#888,ss_sales_price#889,ss_ext_discount_amt#890,ss_ext_sales_price#891,ss_ext_wholesale_cost#892,ss_ext_list_price#893,ss_ext_tax#894,ss_coupon_amt#895,ss_net_paid#896,ss_net_paid_inc_tax#897,ss_net_profit#898,ss_sold_date_sk#899] parquet\n         :  :        :     +- Project [d_date_sk#900]\n         :  :        :        +- Filter ((isnotnull(d_year#906) AND ((d_year#906 >= 1998) AND (d_year#906 <= 2000))) AND isnotnull(d_date_sk#900))\n         :  :        :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#900,d_date_id#901,d_date#902,d_month_seq#903,d_week_seq#904,d_quarter_seq#905,d_year#906,d_dow#907,d_moy#908,d_dom#909,d_qoy#910,d_fy_year#911,d_fy_quarter_seq#912,d_fy_week_seq#913,d_day_name#914,d_quarter_name#915,d_holiday#916,d_weekend#917,d_following_holiday#918,d_first_dom#919,d_last_dom#920,d_same_day_ly#921,d_same_day_lq#922,d_current_day#923,... 4 more fields] parquet\n         :  :        :- Project [cs_quantity#945 AS quantity#748, cs_list_price#947 AS list_price#749]\n         :  :        :  +- Join Inner, (cs_sold_date_sk#961 = d_date_sk#962)\n         :  :        :     :- Project [cs_quantity#945, cs_list_price#947, cs_sold_date_sk#961]\n         :  :        :     :  +- Filter (isnotnull(cs_sold_date_sk#961) AND dynamicpruning#1289 [cs_sold_date_sk#961])\n         :  :        :     :     :  +- Project [d_date_sk#962]\n         :  :        :     :     :     +- Filter ((isnotnull(d_year#968) AND ((d_year#968 >= 1998) AND (d_year#968 <= 2000))) AND isnotnull(d_date_sk#962))\n         :  :        :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#962,d_date_id#963,d_date#964,d_month_seq#965,d_week_seq#966,d_quarter_seq#967,d_year#968,d_dow#969,d_moy#970,d_dom#971,d_qoy#972,d_fy_year#973,d_fy_quarter_seq#974,d_fy_week_seq#975,d_day_name#976,d_quarter_name#977,d_holiday#978,d_weekend#979,d_following_holiday#980,d_first_dom#981,d_last_dom#982,d_same_day_ly#983,d_same_day_lq#984,d_current_day#985,... 4 more fields] parquet\n         :  :        :     :     +- Relation spark_catalog.tpcds_100.catalog_sales[cs_sold_time_sk#928,cs_ship_date_sk#929,cs_bill_customer_sk#930,cs_bill_cdemo_sk#931,cs_bill_hdemo_sk#932,cs_bill_addr_sk#933,cs_ship_customer_sk#934,cs_ship_cdemo_sk#935,cs_ship_hdemo_sk#936,cs_ship_addr_sk#937,cs_call_center_sk#938,cs_catalog_page_sk#939,cs_ship_mode_sk#940,cs_warehouse_sk#941,cs_item_sk#942,cs_promo_sk#943,cs_order_number#944L,cs_quantity#945,cs_wholesale_cost#946,cs_list_price#947,cs_sales_price#948,cs_ext_discount_amt#949,cs_ext_sales_price#950,cs_ext_wholesale_cost#951,... 10 more fields] parquet\n         :  :        :     +- Project [d_date_sk#962]\n         :  :        :        +- Filter ((isnotnull(d_year#968) AND ((d_year#968 >= 1998) AND (d_year#968 <= 2000))) AND isnotnull(d_date_sk#962))\n         :  :        :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#962,d_date_id#963,d_date#964,d_month_seq#965,d_week_seq#966,d_quarter_seq#967,d_year#968,d_dow#969,d_moy#970,d_dom#971,d_qoy#972,d_fy_year#973,d_fy_quarter_seq#974,d_fy_week_seq#975,d_day_name#976,d_quarter_name#977,d_holiday#978,d_weekend#979,d_following_holiday#980,d_first_dom#981,d_last_dom#982,d_same_day_ly#983,d_same_day_lq#984,d_current_day#985,... 4 more fields] parquet\n         :  :        +- Project [ws_quantity#1007 AS quantity#750, ws_list_price#1009 AS list_price#751]\n         :  :           +- Join Inner, (ws_sold_date_sk#1023 = d_date_sk#1024)\n         :  :              :- Project [ws_quantity#1007, ws_list_price#1009, ws_sold_date_sk#1023]\n         :  :              :  +- Filter (isnotnull(ws_sold_date_sk#1023) AND dynamicpruning#1290 [ws_sold_date_sk#1023])\n         :  :              :     :  +- Project [d_date_sk#1024]\n         :  :              :     :     +- Filter ((isnotnull(d_year#1030) AND ((d_year#1030 >= 1998) AND (d_year#1030 <= 2000))) AND isnotnull(d_date_sk#1024))\n         :  :              :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#1024,d_date_id#1025,d_date#1026,d_month_seq#1027,d_week_seq#1028,d_quarter_seq#1029,d_year#1030,d_dow#1031,d_moy#1032,d_dom#1033,d_qoy#1034,d_fy_year#1035,d_fy_quarter_seq#1036,d_fy_week_seq#1037,d_day_name#1038,d_quarter_name#1039,d_holiday#1040,d_weekend#1041,d_following_holiday#1042,d_first_dom#1043,d_last_dom#1044,d_same_day_ly#1045,d_same_day_lq#1046,d_current_day#1047,... 4 more fields] parquet\n         :  :              :     +- Relation spark_catalog.tpcds_100.web_sales[ws_sold_time_sk#990,ws_ship_date_sk#991,ws_item_sk#992,ws_bill_customer_sk#993,ws_bill_cdemo_sk#994,ws_bill_hdemo_sk#995,ws_bill_addr_sk#996,ws_ship_customer_sk#997,ws_ship_cdemo_sk#998,ws_ship_hdemo_sk#999,ws_ship_addr_sk#1000,ws_web_page_sk#1001,ws_web_site_sk#1002,ws_ship_mode_sk#1003,ws_warehouse_sk#1004,ws_promo_sk#1005,ws_order_number#1006L,ws_quantity#1007,ws_wholesale_cost#1008,ws_list_price#1009,ws_sales_price#1010,ws_ext_discount_amt#1011,ws_ext_sales_price#1012,ws_ext_wholesale_cost#1013,... 10 more fields] parquet\n         :  :              +- Project [d_date_sk#1024]\n         :  :                 +- Filter ((isnotnull(d_year#1030) AND ((d_year#1030 >= 1998) AND (d_year#1030 <= 2000))) AND isnotnull(d_date_sk#1024))\n         :  :                    +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#1024,d_date_id#1025,d_date#1026,d_month_seq#1027,d_week_seq#1028,d_quarter_seq#1029,d_year#1030,d_dow#1031,d_moy#1032,d_dom#1033,d_qoy#1034,d_fy_year#1035,d_fy_quarter_seq#1036,d_fy_week_seq#1037,d_day_name#1038,d_quarter_name#1039,d_holiday#1040,d_weekend#1041,d_following_holiday#1042,d_first_dom#1043,d_last_dom#1044,d_same_day_ly#1045,d_same_day_lq#1046,d_current_day#1047,... 4 more fields] parquet\n         :  +- LogicalQueryStage Aggregate [i_brand_id#1082, i_class_id#1084, i_category_id#1086], [store AS channel#730, i_brand_id#1082, i_class_id#1084, i_category_id#1086, sum((cast(ss_quantity#1061 as decimal(10,0)) * ss_list_price#1063)) AS sales#731, count(1) AS number_sales#732L], HashAggregate(keys=[i_brand_id#1082, i_class_id#1084, i_category_id#1086], functions=[sum((cast(ss_quantity#1061 as decimal(10,0)) * ss_list_price#1063)), count(1)])\n         +- Filter (isnotnull(sales#737) AND (cast(sales#737 as decimal(32,6)) > cast(scalar-subquery#741 [] as decimal(32,6))))\n            :  +- Aggregate [avg((cast(quantity#746 as decimal(10,0)) * list_price#747)) AS average_sales#752]\n            :     +- Union false, false\n            :        :- Project [ss_quantity#886 AS quantity#746, ss_list_price#888 AS list_price#747]\n            :        :  +- Join Inner, (ss_sold_date_sk#899 = d_date_sk#900)\n            :        :     :- Project [ss_quantity#886, ss_list_price#888, ss_sold_date_sk#899]\n            :        :     :  +- Filter (isnotnull(ss_sold_date_sk#899) AND dynamicpruning#1288 [ss_sold_date_sk#899])\n            :        :     :     :  +- Project [d_date_sk#900]\n            :        :     :     :     +- Filter ((isnotnull(d_year#906) AND ((d_year#906 >= 1998) AND (d_year#906 <= 2000))) AND isnotnull(d_date_sk#900))\n            :        :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#900,d_date_id#901,d_date#902,d_month_seq#903,d_week_seq#904,d_quarter_seq#905,d_year#906,d_dow#907,d_moy#908,d_dom#909,d_qoy#910,d_fy_year#911,d_fy_quarter_seq#912,d_fy_week_seq#913,d_day_name#914,d_quarter_name#915,d_holiday#916,d_weekend#917,d_following_holiday#918,d_first_dom#919,d_last_dom#920,d_same_day_ly#921,d_same_day_lq#922,d_current_day#923,... 4 more fields] parquet\n            :        :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#877,ss_item_sk#878,ss_customer_sk#879,ss_cdemo_sk#880,ss_hdemo_sk#881,ss_addr_sk#882,ss_store_sk#883,ss_promo_sk#884,ss_ticket_number#885L,ss_quantity#886,ss_wholesale_cost#887,ss_list_price#888,ss_sales_price#889,ss_ext_discount_amt#890,ss_ext_sales_price#891,ss_ext_wholesale_cost#892,ss_ext_list_price#893,ss_ext_tax#894,ss_coupon_amt#895,ss_net_paid#896,ss_net_paid_inc_tax#897,ss_net_profit#898,ss_sold_date_sk#899] parquet\n            :        :     +- Project [d_date_sk#900]\n            :        :        +- Filter ((isnotnull(d_year#906) AND ((d_year#906 >= 1998) AND (d_year#906 <= 2000))) AND isnotnull(d_date_sk#900))\n            :        :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#900,d_date_id#901,d_date#902,d_month_seq#903,d_week_seq#904,d_quarter_seq#905,d_year#906,d_dow#907,d_moy#908,d_dom#909,d_qoy#910,d_fy_year#911,d_fy_quarter_seq#912,d_fy_week_seq#913,d_day_name#914,d_quarter_name#915,d_holiday#916,d_weekend#917,d_following_holiday#918,d_first_dom#919,d_last_dom#920,d_same_day_ly#921,d_same_day_lq#922,d_current_day#923,... 4 more fields] parquet\n            :        :- Project [cs_quantity#945 AS quantity#748, cs_list_price#947 AS list_price#749]\n            :        :  +- Join Inner, (cs_sold_date_sk#961 = d_date_sk#962)\n            :        :     :- Project [cs_quantity#945, cs_list_price#947, cs_sold_date_sk#961]\n            :        :     :  +- Filter (isnotnull(cs_sold_date_sk#961) AND dynamicpruning#1289 [cs_sold_date_sk#961])\n            :        :     :     :  +- Project [d_date_sk#962]\n            :        :     :     :     +- Filter ((isnotnull(d_year#968) AND ((d_year#968 >= 1998) AND (d_year#968 <= 2000))) AND isnotnull(d_date_sk#962))\n            :        :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#962,d_date_id#963,d_date#964,d_month_seq#965,d_week_seq#966,d_quarter_seq#967,d_year#968,d_dow#969,d_moy#970,d_dom#971,d_qoy#972,d_fy_year#973,d_fy_quarter_seq#974,d_fy_week_seq#975,d_day_name#976,d_quarter_name#977,d_holiday#978,d_weekend#979,d_following_holiday#980,d_first_dom#981,d_last_dom#982,d_same_day_ly#983,d_same_day_lq#984,d_current_day#985,... 4 more fields] parquet\n            :        :     :     +- Relation spark_catalog.tpcds_100.catalog_sales[cs_sold_time_sk#928,cs_ship_date_sk#929,cs_bill_customer_sk#930,cs_bill_cdemo_sk#931,cs_bill_hdemo_sk#932,cs_bill_addr_sk#933,cs_ship_customer_sk#934,cs_ship_cdemo_sk#935,cs_ship_hdemo_sk#936,cs_ship_addr_sk#937,cs_call_center_sk#938,cs_catalog_page_sk#939,cs_ship_mode_sk#940,cs_warehouse_sk#941,cs_item_sk#942,cs_promo_sk#943,cs_order_number#944L,cs_quantity#945,cs_wholesale_cost#946,cs_list_price#947,cs_sales_price#948,cs_ext_discount_amt#949,cs_ext_sales_price#950,cs_ext_wholesale_cost#951,... 10 more fields] parquet\n            :        :     +- Project [d_date_sk#962]\n            :        :        +- Filter ((isnotnull(d_year#968) AND ((d_year#968 >= 1998) AND (d_year#968 <= 2000))) AND isnotnull(d_date_sk#962))\n            :        :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#962,d_date_id#963,d_date#964,d_month_seq#965,d_week_seq#966,d_quarter_seq#967,d_year#968,d_dow#969,d_moy#970,d_dom#971,d_qoy#972,d_fy_year#973,d_fy_quarter_seq#974,d_fy_week_seq#975,d_day_name#976,d_quarter_name#977,d_holiday#978,d_weekend#979,d_following_holiday#980,d_first_dom#981,d_last_dom#982,d_same_day_ly#983,d_same_day_lq#984,d_current_day#985,... 4 more fields] parquet\n            :        +- Project [ws_quantity#1007 AS quantity#750, ws_list_price#1009 AS list_price#751]\n            :           +- Join Inner, (ws_sold_date_sk#1023 = d_date_sk#1024)\n            :              :- Project [ws_quantity#1007, ws_list_price#1009, ws_sold_date_sk#1023]\n            :              :  +- Filter (isnotnull(ws_sold_date_sk#1023) AND dynamicpruning#1290 [ws_sold_date_sk#1023])\n            :              :     :  +- Project [d_date_sk#1024]\n            :              :     :     +- Filter ((isnotnull(d_year#1030) AND ((d_year#1030 >= 1998) AND (d_year#1030 <= 2000))) AND isnotnull(d_date_sk#1024))\n            :              :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#1024,d_date_id#1025,d_date#1026,d_month_seq#1027,d_week_seq#1028,d_quarter_seq#1029,d_year#1030,d_dow#1031,d_moy#1032,d_dom#1033,d_qoy#1034,d_fy_year#1035,d_fy_quarter_seq#1036,d_fy_week_seq#1037,d_day_name#1038,d_quarter_name#1039,d_holiday#1040,d_weekend#1041,d_following_holiday#1042,d_first_dom#1043,d_last_dom#1044,d_same_day_ly#1045,d_same_day_lq#1046,d_current_day#1047,... 4 more fields] parquet\n            :              :     +- Relation spark_catalog.tpcds_100.web_sales[ws_sold_time_sk#990,ws_ship_date_sk#991,ws_item_sk#992,ws_bill_customer_sk#993,ws_bill_cdemo_sk#994,ws_bill_hdemo_sk#995,ws_bill_addr_sk#996,ws_ship_customer_sk#997,ws_ship_cdemo_sk#998,ws_ship_hdemo_sk#999,ws_ship_addr_sk#1000,ws_web_page_sk#1001,ws_web_site_sk#1002,ws_ship_mode_sk#1003,ws_warehouse_sk#1004,ws_promo_sk#1005,ws_order_number#1006L,ws_quantity#1007,ws_wholesale_cost#1008,ws_list_price#1009,ws_sales_price#1010,ws_ext_discount_amt#1011,ws_ext_sales_price#1012,ws_ext_wholesale_cost#1013,... 10 more fields] parquet\n            :              +- Project [d_date_sk#1024]\n            :                 +- Filter ((isnotnull(d_year#1030) AND ((d_year#1030 >= 1998) AND (d_year#1030 <= 2000))) AND isnotnull(d_date_sk#1024))\n            :                    +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#1024,d_date_id#1025,d_date#1026,d_month_seq#1027,d_week_seq#1028,d_quarter_seq#1029,d_year#1030,d_dow#1031,d_moy#1032,d_dom#1033,d_qoy#1034,d_fy_year#1035,d_fy_quarter_seq#1036,d_fy_week_seq#1037,d_day_name#1038,d_quarter_name#1039,d_holiday#1040,d_weekend#1041,d_following_holiday#1042,d_first_dom#1043,d_last_dom#1044,d_same_day_ly#1045,d_same_day_lq#1046,d_current_day#1047,... 4 more fields] parquet\n            +- LogicalQueryStage Aggregate [i_brand_id#1155, i_class_id#1157, i_category_id#1159], [store AS channel#736, i_brand_id#1155, i_class_id#1157, i_category_id#1159, sum((cast(ss_quantity#1134 as decimal(10,0)) * ss_list_price#1136)) AS sales#737, count(1) AS number_sales#738L], HashAggregate(keys=[i_brand_id#1155, i_class_id#1157, i_category_id#1159], functions=[sum((cast(ss_quantity#1134 as decimal(10,0)) * ss_list_price#1136)), count(1)])\n"
      },
      "QSPhysical" : {
        "operators" : {
          "4" : {
            "sign" : 1894138603,
            "className" : "org.apache.spark.sql.execution.aggregate.HashAggregateExec",
            "sizeInBytes" : 431424,
            "rowCount" : 5992,
            "isRuntime" : true,
            "predicate" : " (unknown) HashAggregate Input [6]: [i_brand_id#1155, i_class_id#1157, i_category_id#1159, sum#1323, isEmpty#1324, count#1325L] Keys [3]: [i_brand_id#1155, i_class_id#1157, i_category_id#1159] Functions [2]: [sum((cast(ss_quantity#1134 as decimal(10,0)) * ss_list_price#1136)), count(1)] Aggregate Attributes [2]: [sum((cast(ss_quantity#1134 as decimal(10,0)) * ss_list_price#1136))#1273, count(1)#754L] Results [6]: [store AS channel#736, i_brand_id#1155, i_class_id#1157, i_category_id#1159, sum((cast(ss_quantity#1134 as decimal(10,0)) * ss_list_price#1136))#1273 AS sales#737, count(1)#754L AS number_sales#738L] "
          },
          "5" : {
            "sign" : -785502627,
            "className" : "org.apache.spark.sql.execution.adaptive.ShuffleQueryStageExec",
            "sizeInBytes" : 21787077332313216,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) ShuffleQueryStage Output [6]: [i_brand_id#1155, i_class_id#1157, i_category_id#1159, sum#1323, isEmpty#1324, count#1325L] Arguments: 100 "
          },
          "1" : {
            "sign" : 114902039,
            "className" : "org.apache.spark.sql.execution.joins.BroadcastHashJoinExec",
            "sizeInBytes" : 8355082712014130577408,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) BroadcastHashJoin Left keys [3]: [i_brand_id#1082, i_class_id#1084, i_category_id#1086] Right keys [3]: [i_brand_id#1155, i_class_id#1157, i_category_id#1159] Join type: Inner Join condition: None "
          },
          "0" : {
            "sign" : 336486238,
            "className" : "org.apache.spark.sql.execution.TakeOrderedAndProjectExec",
            "sizeInBytes" : 12000,
            "rowCount" : 100,
            "isRuntime" : false,
            "predicate" : " (unknown) TakeOrderedAndProject Input [12]: [channel#730, i_brand_id#1082, i_class_id#1084, i_category_id#1086, sales#731, number_sales#732L, channel#736, i_brand_id#1155, i_class_id#1157, i_category_id#1159, sales#737, number_sales#738L] Arguments: 100, [i_brand_id#1082 ASC NULLS FIRST, i_class_id#1084 ASC NULLS FIRST, i_category_id#1086 ASC NULLS FIRST], [channel#730, i_brand_id#1082, i_class_id#1084, i_category_id#1086, sales#731, number_sales#732L, channel#736, i_brand_id#1155, i_class_id#1157, i_category_id#1159, sales#737, number_sales#738L] "
          },
          "2" : {
            "sign" : -888707373,
            "className" : "org.apache.spark.sql.execution.adaptive.BroadcastQueryStageExec",
            "sizeInBytes" : 33587200,
            "rowCount" : 856,
            "isRuntime" : true,
            "predicate" : " (unknown) BroadcastQueryStage Output [6]: [channel#730, i_brand_id#1082, i_class_id#1084, i_category_id#1086, sales#731, number_sales#732L] Arguments: 101 "
          },
          "3" : {
            "sign" : -1291457215,
            "className" : "org.apache.spark.sql.execution.FilterExec",
            "sizeInBytes" : 383488,
            "rowCount" : 5992,
            "isRuntime" : true,
            "predicate" : " (unknown) Filter Input [6]: [channel#736, i_brand_id#1155, i_class_id#1157, i_category_id#1159, sales#737, number_sales#738L] Condition : (isnotnull(sales#737) AND (cast(sales#737 as decimal(32,6)) > cast(ReusedSubquery Subquery subquery#735, [id=#825] as decimal(32,6)))) "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "BroadcastQueryStage",
          "toId" : 1,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "ShuffleQueryStage",
          "toId" : 4,
          "toName" : "HashAggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "HashAggregate",
          "toId" : 3,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Filter",
          "toId" : 1,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "BroadcastHashJoin",
          "toId" : 0,
          "toName" : "TakeOrderedAndProject",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "TakeOrderedAndProject(limit=100, orderBy=[i_brand_id#1082 ASC NULLS FIRST,i_class_id#1084 ASC NULLS FIRST,i_category_id#1086 ASC NULLS FIRST], output=[channel#730,i_brand_id#1082,i_class_id#1084,i_category_id#1086,sales#731,number_sales#732L,channel#736,i_brand_id#1155,i_class_id#1157,i_category_id#1159,sales#737,number_sales#738L])\n+- BroadcastHashJoin [i_brand_id#1082, i_class_id#1084, i_category_id#1086], [i_brand_id#1155, i_class_id#1157, i_category_id#1159], Inner, BuildLeft, false\n   :- BroadcastQueryStage 101\n   :  +- BroadcastExchange HashedRelationBroadcastMode(List(input[1, int, true], input[2, int, true], input[3, int, true]),false), [plan_id=12766]\n   :     +- *(75) Filter (isnotnull(sales#731) AND (cast(sales#731 as decimal(32,6)) > cast(Subquery subquery#735, [id=#825] as decimal(32,6))))\n   :        :  +- Subquery subquery#735, [id=#825]\n   :        :     +- AdaptiveSparkPlan isFinalPlan=true\n                     +- == Final Plan ==\n                        *(8) HashAggregate(keys=[], functions=[avg((cast(quantity#746 as decimal(10,0)) * list_price#747))], output=[average_sales#752])\n                        +- ShuffleQueryStage 6\n                           +- Exchange SinglePartition, ENSURE_REQUIREMENTS, [plan_id=12976]\n                              +- *(7) HashAggregate(keys=[], functions=[partial_avg((cast(quantity#746 as decimal(10,0)) * list_price#747))], output=[sum#1328, count#1329L])\n                                 +- Union\n                                    :- *(4) Project [ss_quantity#886 AS quantity#746, ss_list_price#888 AS list_price#747]\n                                    :  +- *(4) BroadcastHashJoin [ss_sold_date_sk#899], [d_date_sk#900], Inner, BuildRight, false\n                                    :     :- *(4) ColumnarToRow\n                                    :     :  +- FileScan parquet spark_catalog.tpcds_100.store_sales[ss_quantity#886,ss_list_price#888,ss_sold_date_sk#899] Batched: true, DataFilters: [], Format: Parquet, Location: InMemoryFileIndex(1823 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/store_..., PartitionFilters: [isnotnull(ss_sold_date_sk#899), dynamicpruningexpression(ss_sold_date_sk#899 IN dynamicpruning#1..., PushedFilters: [], ReadSchema: struct<ss_quantity:int,ss_list_price:decimal(7,2)>\n                                    :     :        +- ReusedSubquery SubqueryBroadcast dynamicpruning#1292, 0, [d_date_sk#799], [id=#4500]\n                                    :     +- BroadcastQueryStage 1\n                                    :        +- ReusedExchange [d_date_sk#900], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=1714]\n                                    :- *(5) Project [cs_quantity#945 AS quantity#748, cs_list_price#947 AS list_price#749]\n                                    :  +- *(5) BroadcastHashJoin [cs_sold_date_sk#961], [d_date_sk#962], Inner, BuildRight, false\n                                    :     :- *(5) ColumnarToRow\n                                    :     :  +- FileScan parquet spark_catalog.tpcds_100.catalog_sales[cs_quantity#945,cs_list_price#947,cs_sold_date_sk#961] Batched: true, DataFilters: [], Format: Parquet, Location: InMemoryFileIndex(1836 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/catalo..., PartitionFilters: [isnotnull(cs_sold_date_sk#961), dynamicpruningexpression(cs_sold_date_sk#961 IN dynamicpruning#1..., PushedFilters: [], ReadSchema: struct<cs_quantity:int,cs_list_price:decimal(7,2)>\n                                    :     :        +- ReusedSubquery SubqueryBroadcast dynamicpruning#1292, 0, [d_date_sk#799], [id=#4500]\n                                    :     +- BroadcastQueryStage 3\n                                    :        +- ReusedExchange [d_date_sk#962], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=1714]\n                                    +- *(6) Project [ws_quantity#1007 AS quantity#750, ws_list_price#1009 AS list_price#751]\n                                       +- *(6) BroadcastHashJoin [ws_sold_date_sk#1023], [d_date_sk#1024], Inner, BuildRight, false\n                                          :- *(6) ColumnarToRow\n                                          :  +- FileScan parquet spark_catalog.tpcds_100.web_sales[ws_quantity#1007,ws_list_price#1009,ws_sold_date_sk#1023] Batched: true, DataFilters: [], Format: Parquet, Location: InMemoryFileIndex(1823 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/web_sa..., PartitionFilters: [isnotnull(ws_sold_date_sk#1023), dynamicpruningexpression(ws_sold_date_sk#1023 IN dynamicpruning..., PushedFilters: [], ReadSchema: struct<ws_quantity:int,ws_list_price:decimal(7,2)>\n                                          :        +- ReusedSubquery SubqueryBroadcast dynamicpruning#1292, 0, [d_date_sk#799], [id=#4500]\n                                          +- BroadcastQueryStage 5\n                                             +- ReusedExchange [d_date_sk#1024], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=1714]\n                     +- == Initial Plan ==\n                        HashAggregate(keys=[], functions=[avg((cast(quantity#746 as decimal(10,0)) * list_price#747))], output=[average_sales#752])\n                        +- Exchange SinglePartition, ENSURE_REQUIREMENTS, [plan_id=823]\n                           +- HashAggregate(keys=[], functions=[partial_avg((cast(quantity#746 as decimal(10,0)) * list_price#747))], output=[sum#1328, count#1329L])\n                              +- Union\n                                 :- Project [ss_quantity#886 AS quantity#746, ss_list_price#888 AS list_price#747]\n                                 :  +- BroadcastHashJoin [ss_sold_date_sk#899], [d_date_sk#900], Inner, BuildRight, false\n                                 :     :- FileScan parquet spark_catalog.tpcds_100.store_sales[ss_quantity#886,ss_list_price#888,ss_sold_date_sk#899] Batched: true, DataFilters: [], Format: Parquet, Location: InMemoryFileIndex(1823 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/store_..., PartitionFilters: [isnotnull(ss_sold_date_sk#899), dynamicpruningexpression(ss_sold_date_sk#899 IN dynamicpruning#1..., PushedFilters: [], ReadSchema: struct<ss_quantity:int,ss_list_price:decimal(7,2)>\n                                 :     :     +- SubqueryAdaptiveBroadcast dynamicpruning#1288, 0, true, Project [d_date_sk#900], [d_date_sk#900]\n                                 :     :        +- AdaptiveSparkPlan isFinalPlan=false\n                                 :     :           +- Project [d_date_sk#900]\n                                 :     :              +- Filter (((isnotnull(d_year#906) AND (d_year#906 >= 1998)) AND (d_year#906 <= 2000)) AND isnotnull(d_date_sk#900))\n                                 :     :                 +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#900,d_year#906] Batched: true, DataFilters: [isnotnull(d_year#906), (d_year#906 >= 1998), (d_year#906 <= 2000), isnotnull(d_date_sk#900)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), GreaterThanOrEqual(d_year,1998), LessThanOrEqual(d_year,2000), IsNotNull(d_da..., ReadSchema: struct<d_date_sk:int,d_year:int>\n                                 :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=811]\n                                 :        +- Project [d_date_sk#900]\n                                 :           +- Filter (((isnotnull(d_year#906) AND (d_year#906 >= 1998)) AND (d_year#906 <= 2000)) AND isnotnull(d_date_sk#900))\n                                 :              +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#900,d_year#906] Batched: true, DataFilters: [isnotnull(d_year#906), (d_year#906 >= 1998), (d_year#906 <= 2000), isnotnull(d_date_sk#900)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), GreaterThanOrEqual(d_year,1998), LessThanOrEqual(d_year,2000), IsNotNull(d_da..., ReadSchema: struct<d_date_sk:int,d_year:int>\n                                 :- Project [cs_quantity#945 AS quantity#748, cs_list_price#947 AS list_price#749]\n                                 :  +- BroadcastHashJoin [cs_sold_date_sk#961], [d_date_sk#962], Inner, BuildRight, false\n                                 :     :- FileScan parquet spark_catalog.tpcds_100.catalog_sales[cs_quantity#945,cs_list_price#947,cs_sold_date_sk#961] Batched: true, DataFilters: [], Format: Parquet, Location: InMemoryFileIndex(1836 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/catalo..., PartitionFilters: [isnotnull(cs_sold_date_sk#961), dynamicpruningexpression(cs_sold_date_sk#961 IN dynamicpruning#1..., PushedFilters: [], ReadSchema: struct<cs_quantity:int,cs_list_price:decimal(7,2)>\n                                 :     :     +- SubqueryAdaptiveBroadcast dynamicpruning#1289, 0, true, Project [d_date_sk#962], [d_date_sk#962]\n                                 :     :        +- AdaptiveSparkPlan isFinalPlan=false\n                                 :     :           +- Project [d_date_sk#962]\n                                 :     :              +- Filter (((isnotnull(d_year#968) AND (d_year#968 >= 1998)) AND (d_year#968 <= 2000)) AND isnotnull(d_date_sk#962))\n                                 :     :                 +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#962,d_year#968] Batched: true, DataFilters: [isnotnull(d_year#968), (d_year#968 >= 1998), (d_year#968 <= 2000), isnotnull(d_date_sk#962)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), GreaterThanOrEqual(d_year,1998), LessThanOrEqual(d_year,2000), IsNotNull(d_da..., ReadSchema: struct<d_date_sk:int,d_year:int>\n                                 :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=814]\n                                 :        +- Project [d_date_sk#962]\n                                 :           +- Filter (((isnotnull(d_year#968) AND (d_year#968 >= 1998)) AND (d_year#968 <= 2000)) AND isnotnull(d_date_sk#962))\n                                 :              +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#962,d_year#968] Batched: true, DataFilters: [isnotnull(d_year#968), (d_year#968 >= 1998), (d_year#968 <= 2000), isnotnull(d_date_sk#962)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), GreaterThanOrEqual(d_year,1998), LessThanOrEqual(d_year,2000), IsNotNull(d_da..., ReadSchema: struct<d_date_sk:int,d_year:int>\n                                 +- Project [ws_quantity#1007 AS quantity#750, ws_list_price#1009 AS list_price#751]\n                                    +- BroadcastHashJoin [ws_sold_date_sk#1023], [d_date_sk#1024], Inner, BuildRight, false\n                                       :- FileScan parquet spark_catalog.tpcds_100.web_sales[ws_quantity#1007,ws_list_price#1009,ws_sold_date_sk#1023] Batched: true, DataFilters: [], Format: Parquet, Location: InMemoryFileIndex(1823 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/web_sa..., PartitionFilters: [isnotnull(ws_sold_date_sk#1023), dynamicpruningexpression(ws_sold_date_sk#1023 IN dynamicpruning..., PushedFilters: [], ReadSchema: struct<ws_quantity:int,ws_list_price:decimal(7,2)>\n                                       :     +- SubqueryAdaptiveBroadcast dynamicpruning#1290, 0, true, Project [d_date_sk#1024], [d_date_sk#1024]\n                                       :        +- AdaptiveSparkPlan isFinalPlan=false\n                                       :           +- Project [d_date_sk#1024]\n                                       :              +- Filter (((isnotnull(d_year#1030) AND (d_year#1030 >= 1998)) AND (d_year#1030 <= 2000)) AND isnotnull(d_date_sk#1024))\n                                       :                 +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#1024,d_year#1030] Batched: true, DataFilters: [isnotnull(d_year#1030), (d_year#1030 >= 1998), (d_year#1030 <= 2000), isnotnull(d_date_sk#1024)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), GreaterThanOrEqual(d_year,1998), LessThanOrEqual(d_year,2000), IsNotNull(d_da..., ReadSchema: struct<d_date_sk:int,d_year:int>\n                                       +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=817]\n                                          +- Project [d_date_sk#1024]\n                                             +- Filter (((isnotnull(d_year#1030) AND (d_year#1030 >= 1998)) AND (d_year#1030 <= 2000)) AND isnotnull(d_date_sk#1024))\n                                                +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#1024,d_year#1030] Batched: true, DataFilters: [isnotnull(d_year#1030), (d_year#1030 >= 1998), (d_year#1030 <= 2000), isnotnull(d_date_sk#1024)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), GreaterThanOrEqual(d_year,1998), LessThanOrEqual(d_year,2000), IsNotNull(d_da..., ReadSchema: struct<d_date_sk:int,d_year:int>\n   :        +- *(75) HashAggregate(keys=[i_brand_id#1082, i_class_id#1084, i_category_id#1086], functions=[sum((cast(ss_quantity#1061 as decimal(10,0)) * ss_list_price#1063)), count(1)], output=[channel#730, i_brand_id#1082, i_class_id#1084, i_category_id#1086, sales#731, number_sales#732L])\n   :           +- AQEShuffleRead coalesced\n   :              +- ShuffleQueryStage 99\n   :                 +- Exchange hashpartitioning(i_brand_id#1082, i_class_id#1084, i_category_id#1086, 200), ENSURE_REQUIREMENTS, [plan_id=12473]\n   :                    +- *(73) HashAggregate(keys=[i_brand_id#1082, i_class_id#1084, i_category_id#1086], functions=[partial_sum((cast(ss_quantity#1061 as decimal(10,0)) * ss_list_price#1063)), partial_count(1)], output=[i_brand_id#1082, i_class_id#1084, i_category_id#1086, sum#1317, isEmpty#1318, count#1319L])\n   :                       +- *(73) Project [ss_quantity#1061, ss_list_price#1063, i_brand_id#1082, i_class_id#1084, i_category_id#1086]\n   :                          +- *(73) BroadcastHashJoin [ss_item_sk#1053], [i_item_sk#1075], Inner, BuildRight, false\n   :                             :- *(73) Project [ss_item_sk#1053, ss_quantity#1061, ss_list_price#1063]\n   :                             :  +- *(73) BroadcastHashJoin [ss_sold_date_sk#1074], [d_date_sk#1097], Inner, BuildRight, false\n   :                             :     :- *(73) BroadcastHashJoin [ss_item_sk#1053], [ss_item_sk#745], LeftSemi, BuildRight, false\n   :                             :     :  :- *(73) Filter isnotnull(ss_item_sk#1053)\n   :                             :     :  :  +- *(73) ColumnarToRow\n   :                             :     :  :     +- FileScan parquet spark_catalog.tpcds_100.store_sales[ss_item_sk#1053,ss_quantity#1061,ss_list_price#1063,ss_sold_date_sk#1074] Batched: true, DataFilters: [isnotnull(ss_item_sk#1053)], Format: Parquet, Location: InMemoryFileIndex(1823 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/store_..., PartitionFilters: [isnotnull(ss_sold_date_sk#1074), dynamicpruningexpression(ss_sold_date_sk#1074 IN dynamicpruning..., PushedFilters: [IsNotNull(ss_item_sk)], ReadSchema: struct<ss_item_sk:int,ss_quantity:int,ss_list_price:decimal(7,2)>\n   :                             :     :  :           +- SubqueryBroadcast dynamicpruning#1303, 0, [d_date_sk#1097], [id=#12425]\n   :                             :     :  :              +- AdaptiveSparkPlan isFinalPlan=true\n                                                            +- == Final Plan ==\n                                                               BroadcastQueryStage 1\n                                                               +- ReusedExchange [d_date_sk#1097], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=1853]\n                                                            +- == Initial Plan ==\n                                                               BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=12422]\n                                                               +- Project [d_date_sk#1097]\n                                                                  +- Filter ((isnotnull(d_week_seq#1101) AND (d_week_seq#1101 = Subquery subquery#734, [id=#835])) AND isnotnull(d_date_sk#1097))\n                                                                     :  +- Subquery subquery#734, [id=#835]\n                                                                     :     +- AdaptiveSparkPlan isFinalPlan=false\n                                                                     :        +- Project [d_week_seq#1213]\n                                                                     :           +- Filter (((((isnotnull(d_year#1215) AND isnotnull(d_moy#1217)) AND isnotnull(d_dom#1218)) AND (d_year#1215 = 1999)) AND (d_moy#1217 = 12)) AND (d_dom#1218 = 16))\n                                                                     :              +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_week_seq#1213,d_year#1215,d_moy#1217,d_dom#1218] Batched: true, DataFilters: [isnotnull(d_year#1215), isnotnull(d_moy#1217), isnotnull(d_dom#1218), (d_year#1215 = 1999), (d_m..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), IsNotNull(d_moy), IsNotNull(d_dom), EqualTo(d_year,1999), EqualTo(d_moy,12), ..., ReadSchema: struct<d_week_seq:int,d_year:int,d_moy:int,d_dom:int>\n                                                                     +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#1097,d_week_seq#1101] Batched: true, DataFilters: [isnotnull(d_week_seq#1101), isnotnull(d_date_sk#1097)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_week_seq), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_week_seq:int>\n   :                             :     :  +- BroadcastQueryStage 89\n   :                             :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=11573]\n   :                             :     :        +- *(67) Project [i_item_sk#25 AS ss_item_sk#745]\n   :                             :     :           +- *(67) BroadcastHashJoin [i_brand_id#32, i_class_id#34, i_category_id#36], [brand_id#742, class_id#743, category_id#744], Inner, BuildRight, false\n   :                             :     :              :- *(67) Filter ((isnotnull(i_brand_id#32) AND isnotnull(i_class_id#34)) AND isnotnull(i_category_id#36))\n   :                             :     :              :  +- *(67) ColumnarToRow\n   :                             :     :              :     +- FileScan parquet spark_catalog.tpcds_100.item[i_item_sk#25,i_brand_id#32,i_class_id#34,i_category_id#36] Batched: true, DataFilters: [isnotnull(i_brand_id#32), isnotnull(i_class_id#34), isnotnull(i_category_id#36)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/item], PartitionFilters: [], PushedFilters: [IsNotNull(i_brand_id), IsNotNull(i_class_id), IsNotNull(i_category_id)], ReadSchema: struct<i_item_sk:int,i_brand_id:int,i_class_id:int,i_category_id:int>\n   :                             :     :              +- BroadcastQueryStage 82\n   :                             :     :                 +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, int, true], input[1, int, true], input[2, int, true]),false), [plan_id=11135]\n   :                             :     :                    +- *(57) SortMergeJoin [coalesce(brand_id#742, 0), isnull(brand_id#742), coalesce(class_id#743, 0), isnull(class_id#743), coalesce(category_id#744, 0), isnull(category_id#744)], [coalesce(i_brand_id#834, 0), isnull(i_brand_id#834), coalesce(i_class_id#836, 0), isnull(i_class_id#836), coalesce(i_category_id#838, 0), isnull(i_category_id#838)], LeftSemi\n   :                             :     :                       :- *(55) Sort [coalesce(brand_id#742, 0) ASC NULLS FIRST, isnull(brand_id#742) ASC NULLS FIRST, coalesce(class_id#743, 0) ASC NULLS FIRST, isnull(class_id#743) ASC NULLS FIRST, coalesce(category_id#744, 0) ASC NULLS FIRST, isnull(category_id#744) ASC NULLS FIRST], false, 0\n   :                             :     :                       :  +- AQEShuffleRead coalesced\n   :                             :     :                       :     +- ShuffleQueryStage 75\n   :                             :     :                       :        +- Exchange hashpartitioning(coalesce(brand_id#742, 0), isnull(brand_id#742), coalesce(class_id#743, 0), isnull(class_id#743), coalesce(category_id#744, 0), isnull(category_id#744), 200), ENSURE_REQUIREMENTS, [plan_id=10347]\n   :                             :     :                       :           +- *(51) HashAggregate(keys=[brand_id#742, class_id#743, category_id#744], functions=[], output=[brand_id#742, class_id#743, category_id#744])\n   :                             :     :                       :              +- AQEShuffleRead coalesced\n   :                             :     :                       :                 +- ShuffleQueryStage 68\n   :                             :     :                       :                    +- Exchange hashpartitioning(brand_id#742, class_id#743, category_id#744, 200), ENSURE_REQUIREMENTS, [plan_id=9348]\n   :                             :     :                       :                       +- *(47) HashAggregate(keys=[brand_id#742, class_id#743, category_id#744], functions=[], output=[brand_id#742, class_id#743, category_id#744])\n   :                             :     :                       :                          +- *(47) Project [i_brand_id#762 AS brand_id#742, i_class_id#764 AS class_id#743, i_category_id#766 AS category_id#744]\n   :                             :     :                       :                             +- *(47) BroadcastHashJoin [ss_item_sk#48], [i_item_sk#755], Inner, BuildRight, false\n   :                             :     :                       :                                :- *(47) Project [ss_item_sk#48]\n   :                             :     :                       :                                :  +- *(47) BroadcastHashJoin [ss_sold_date_sk#69], [d_date_sk#70], Inner, BuildRight, false\n   :                             :     :                       :                                :     :- *(47) Filter isnotnull(ss_item_sk#48)\n   :                             :     :                       :                                :     :  +- *(47) ColumnarToRow\n   :                             :     :                       :                                :     :     +- FileScan parquet spark_catalog.tpcds_100.store_sales[ss_item_sk#48,ss_sold_date_sk#69] Batched: true, DataFilters: [isnotnull(ss_item_sk#48)], Format: Parquet, Location: InMemoryFileIndex(1823 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/store_..., PartitionFilters: [isnotnull(ss_sold_date_sk#69), dynamicpruningexpression(ss_sold_date_sk#69 IN dynamicpruning#1292)], PushedFilters: [IsNotNull(ss_item_sk)], ReadSchema: struct<ss_item_sk:int>\n   :                             :     :                       :                                :     :           +- ReusedSubquery SubqueryBroadcast dynamicpruning#1292, 0, [d_date_sk#799], [id=#4500]\n   :                             :     :                       :                                :     +- BroadcastQueryStage 0\n   :                             :     :                       :                                :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=1714]\n   :                             :     :                       :                                :           +- *(1) Project [d_date_sk#70]\n   :                             :     :                       :                                :              +- *(1) Filter (((isnotnull(d_year#76) AND (d_year#76 >= 1998)) AND (d_year#76 <= 2000)) AND isnotnull(d_date_sk#70))\n   :                             :     :                       :                                :                 +- *(1) ColumnarToRow\n   :                             :     :                       :                                :                    +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#70,d_year#76] Batched: true, DataFilters: [isnotnull(d_year#76), (d_year#76 >= 1998), (d_year#76 <= 2000), isnotnull(d_date_sk#70)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), GreaterThanOrEqual(d_year,1998), LessThanOrEqual(d_year,2000), IsNotNull(d_da..., ReadSchema: struct<d_date_sk:int,d_year:int>\n   :                             :     :                       :                                +- BroadcastQueryStage 61\n   :                             :     :                       :                                   +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=8021]\n   :                             :     :                       :                                      +- *(37) SortMergeJoin [coalesce(i_brand_id#762, 0), isnull(i_brand_id#762), coalesce(i_class_id#764, 0), isnull(i_class_id#764), coalesce(i_category_id#766, 0), isnull(i_category_id#766)], [coalesce(i_brand_id#784, 0), isnull(i_brand_id#784), coalesce(i_class_id#786, 0), isnull(i_class_id#786), coalesce(i_category_id#788, 0), isnull(i_category_id#788)], LeftSemi\n   :                             :     :                       :                                         :- *(35) Sort [coalesce(i_brand_id#762, 0) ASC NULLS FIRST, isnull(i_brand_id#762) ASC NULLS FIRST, coalesce(i_class_id#764, 0) ASC NULLS FIRST, isnull(i_class_id#764) ASC NULLS FIRST, coalesce(i_category_id#766, 0) ASC NULLS FIRST, isnull(i_category_id#766) ASC NULLS FIRST], false, 0\n   :                             :     :                       :                                         :  +- AQEShuffleRead coalesced\n   :                             :     :                       :                                         :     +- ShuffleQueryStage 1\n   :                             :     :                       :                                         :        +- Exchange hashpartitioning(coalesce(i_brand_id#762, 0), isnull(i_brand_id#762), coalesce(i_class_id#764, 0), isnull(i_class_id#764), coalesce(i_category_id#766, 0), isnull(i_category_id#766), 200), ENSURE_REQUIREMENTS, [plan_id=1733]\n   :                             :     :                       :                                         :           +- *(2) Filter (((isnotnull(i_item_sk#755) AND isnotnull(i_brand_id#762)) AND isnotnull(i_class_id#764)) AND isnotnull(i_category_id#766))\n   :                             :     :                       :                                         :              +- *(2) ColumnarToRow\n   :                             :     :                       :                                         :                 +- FileScan parquet spark_catalog.tpcds_100.item[i_item_sk#755,i_brand_id#762,i_class_id#764,i_category_id#766] Batched: true, DataFilters: [isnotnull(i_item_sk#755), isnotnull(i_brand_id#762), isnotnull(i_class_id#764), isnotnull(i_cate..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/item], PartitionFilters: [], PushedFilters: [IsNotNull(i_item_sk), IsNotNull(i_brand_id), IsNotNull(i_class_id), IsNotNull(i_category_id)], ReadSchema: struct<i_item_sk:int,i_brand_id:int,i_class_id:int,i_category_id:int>\n   :                             :     :                       :                                         +- *(36) Sort [coalesce(i_brand_id#784, 0) ASC NULLS FIRST, isnull(i_brand_id#784) ASC NULLS FIRST, coalesce(i_class_id#786, 0) ASC NULLS FIRST, isnull(i_class_id#786) ASC NULLS FIRST, coalesce(i_category_id#788, 0) ASC NULLS FIRST, isnull(i_category_id#788) ASC NULLS FIRST], false, 0\n   :                             :     :                       :                                            +- AQEShuffleRead coalesced\n   :                             :     :                       :                                               +- ShuffleQueryStage 47\n   :                             :     :                       :                                                  +- Exchange hashpartitioning(coalesce(i_brand_id#784, 0), isnull(i_brand_id#784), coalesce(i_class_id#786, 0), isnull(i_class_id#786), coalesce(i_category_id#788, 0), isnull(i_category_id#788), 200), ENSURE_REQUIREMENTS, [plan_id=4537]\n   :                             :     :                       :                                                     +- *(27) Project [i_brand_id#784, i_class_id#786, i_category_id#788]\n   :                             :     :                       :                                                        +- *(27) BroadcastHashJoin [cs_item_sk#112], [i_item_sk#777], Inner, BuildRight, false\n   :                             :     :                       :                                                           :- *(27) Project [cs_item_sk#112]\n   :                             :     :                       :                                                           :  +- *(27) BroadcastHashJoin [cs_sold_date_sk#131], [d_date_sk#799], Inner, BuildRight, false\n   :                             :     :                       :                                                           :     :- *(27) Filter isnotnull(cs_item_sk#112)\n   :                             :     :                       :                                                           :     :  +- *(27) ColumnarToRow\n   :                             :     :                       :                                                           :     :     +- FileScan parquet spark_catalog.tpcds_100.catalog_sales[cs_item_sk#112,cs_sold_date_sk#131] Batched: true, DataFilters: [isnotnull(cs_item_sk#112)], Format: Parquet, Location: InMemoryFileIndex(1836 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/catalo..., PartitionFilters: [isnotnull(cs_sold_date_sk#131), dynamicpruningexpression(cs_sold_date_sk#131 IN dynamicpruning#1..., PushedFilters: [IsNotNull(cs_item_sk)], ReadSchema: struct<cs_item_sk:int>\n   :                             :     :                       :                                                           :     :           +- SubqueryBroadcast dynamicpruning#1292, 0, [d_date_sk#799], [id=#4500]\n   :                             :     :                       :                                                           :     :              +- AdaptiveSparkPlan isFinalPlan=true\n                                                                                                                                                   +- == Final Plan ==\n                                                                                                                                                      BroadcastQueryStage 1\n                                                                                                                                                      +- ReusedExchange [d_date_sk#799], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=1714]\n                                                                                                                                                   +- == Initial Plan ==\n                                                                                                                                                      BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=4497]\n                                                                                                                                                      +- Project [d_date_sk#799]\n                                                                                                                                                         +- Filter (((isnotnull(d_year#805) AND (d_year#805 >= 1998)) AND (d_year#805 <= 2000)) AND isnotnull(d_date_sk#799))\n                                                                                                                                                            +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#799,d_year#805] Batched: true, DataFilters: [isnotnull(d_year#805), (d_year#805 >= 1998), (d_year#805 <= 2000), isnotnull(d_date_sk#799)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), GreaterThanOrEqual(d_year,1998), LessThanOrEqual(d_year,2000), IsNotNull(d_da..., ReadSchema: struct<d_date_sk:int,d_year:int>\n   :                             :     :                       :                                                           :     +- BroadcastQueryStage 3\n   :                             :     :                       :                                                           :        +- ReusedExchange [d_date_sk#799], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=1714]\n   :                             :     :                       :                                                           +- BroadcastQueryStage 4\n   :                             :     :                       :                                                              +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=1773]\n   :                             :     :                       :                                                                 +- *(4) Filter isnotnull(i_item_sk#777)\n   :                             :     :                       :                                                                    +- *(4) ColumnarToRow\n   :                             :     :                       :                                                                       +- FileScan parquet spark_catalog.tpcds_100.item[i_item_sk#777,i_brand_id#784,i_class_id#786,i_category_id#788] Batched: true, DataFilters: [isnotnull(i_item_sk#777)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/item], PartitionFilters: [], PushedFilters: [IsNotNull(i_item_sk)], ReadSchema: struct<i_item_sk:int,i_brand_id:int,i_class_id:int,i_category_id:int>\n   :                             :     :                       +- *(56) Sort [coalesce(i_brand_id#834, 0) ASC NULLS FIRST, isnull(i_brand_id#834) ASC NULLS FIRST, coalesce(i_class_id#836, 0) ASC NULLS FIRST, isnull(i_class_id#836) ASC NULLS FIRST, coalesce(i_category_id#838, 0) ASC NULLS FIRST, isnull(i_category_id#838) ASC NULLS FIRST], false, 0\n   :                             :     :                          +- AQEShuffleRead coalesced\n   :                             :     :                             +- ShuffleQueryStage 48\n   :                             :     :                                +- Exchange hashpartitioning(coalesce(i_brand_id#834, 0), isnull(i_brand_id#834), coalesce(i_class_id#836, 0), isnull(i_class_id#836), coalesce(i_category_id#838, 0), isnull(i_category_id#838), 200), ENSURE_REQUIREMENTS, [plan_id=4613]\n   :                             :     :                                   +- *(28) Project [i_brand_id#834, i_class_id#836, i_category_id#838]\n   :                             :     :                                      +- *(28) BroadcastHashJoin [ws_item_sk#134], [i_item_sk#827], Inner, BuildRight, false\n   :                             :     :                                         :- *(28) Project [ws_item_sk#134]\n   :                             :     :                                         :  +- *(28) BroadcastHashJoin [ws_sold_date_sk#165], [d_date_sk#849], Inner, BuildRight, false\n   :                             :     :                                         :     :- *(28) Filter isnotnull(ws_item_sk#134)\n   :                             :     :                                         :     :  +- *(28) ColumnarToRow\n   :                             :     :                                         :     :     +- FileScan parquet spark_catalog.tpcds_100.web_sales[ws_item_sk#134,ws_sold_date_sk#165] Batched: true, DataFilters: [isnotnull(ws_item_sk#134)], Format: Parquet, Location: InMemoryFileIndex(1823 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/web_sa..., PartitionFilters: [isnotnull(ws_sold_date_sk#165), dynamicpruningexpression(ws_sold_date_sk#165 IN dynamicpruning#1..., PushedFilters: [IsNotNull(ws_item_sk)], ReadSchema: struct<ws_item_sk:int>\n   :                             :     :                                         :     :           +- ReusedSubquery SubqueryBroadcast dynamicpruning#1292, 0, [d_date_sk#799], [id=#4500]\n   :                             :     :                                         :     +- BroadcastQueryStage 6\n   :                             :     :                                         :        +- ReusedExchange [d_date_sk#849], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=1714]\n   :                             :     :                                         +- BroadcastQueryStage 8\n   :                             :     :                                            +- ReusedExchange [i_item_sk#827, i_brand_id#834, i_class_id#836, i_category_id#838], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=1773]\n   :                             :     +- BroadcastQueryStage 9\n   :                             :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=1853]\n   :                             :           +- *(7) Project [d_date_sk#1097]\n   :                             :              +- *(7) Filter ((isnotnull(d_week_seq#1101) AND (d_week_seq#1101 = Subquery subquery#734, [id=#863])) AND isnotnull(d_date_sk#1097))\n   :                             :                 :  +- Subquery subquery#734, [id=#863]\n   :                             :                 :     +- AdaptiveSparkPlan isFinalPlan=true\n                                                            +- == Final Plan ==\n                                                               *(1) Project [d_week_seq#1213]\n                                                               +- *(1) Filter (((((isnotnull(d_year#1215) AND isnotnull(d_moy#1217)) AND isnotnull(d_dom#1218)) AND (d_year#1215 = 1999)) AND (d_moy#1217 = 12)) AND (d_dom#1218 = 16))\n                                                                  +- *(1) ColumnarToRow\n                                                                     +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_week_seq#1213,d_year#1215,d_moy#1217,d_dom#1218] Batched: true, DataFilters: [isnotnull(d_year#1215), isnotnull(d_moy#1217), isnotnull(d_dom#1218), (d_year#1215 = 1999), (d_m..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), IsNotNull(d_moy), IsNotNull(d_dom), EqualTo(d_year,1999), EqualTo(d_moy,12), ..., ReadSchema: struct<d_week_seq:int,d_year:int,d_moy:int,d_dom:int>\n                                                            +- == Initial Plan ==\n                                                               Project [d_week_seq#1213]\n                                                               +- Filter (((((isnotnull(d_year#1215) AND isnotnull(d_moy#1217)) AND isnotnull(d_dom#1218)) AND (d_year#1215 = 1999)) AND (d_moy#1217 = 12)) AND (d_dom#1218 = 16))\n                                                                  +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_week_seq#1213,d_year#1215,d_moy#1217,d_dom#1218] Batched: true, DataFilters: [isnotnull(d_year#1215), isnotnull(d_moy#1217), isnotnull(d_dom#1218), (d_year#1215 = 1999), (d_m..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), IsNotNull(d_moy), IsNotNull(d_dom), EqualTo(d_year,1999), EqualTo(d_moy,12), ..., ReadSchema: struct<d_week_seq:int,d_year:int,d_moy:int,d_dom:int>\n   :                             :                 +- *(7) ColumnarToRow\n   :                             :                    +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#1097,d_week_seq#1101] Batched: true, DataFilters: [isnotnull(d_week_seq#1101), isnotnull(d_date_sk#1097)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_week_seq), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_week_seq:int>\n   :                             +- BroadcastQueryStage 96\n   :                                +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=12081]\n   :                                   +- *(71) BroadcastHashJoin [i_item_sk#1075], [ss_item_sk#745], LeftSemi, BuildRight, false\n   :                                      :- *(71) Filter (((isnotnull(i_item_sk#1075) AND isnotnull(i_brand_id#1082)) AND isnotnull(i_class_id#1084)) AND isnotnull(i_category_id#1086))\n   :                                      :  +- *(71) ColumnarToRow\n   :                                      :     +- FileScan parquet spark_catalog.tpcds_100.item[i_item_sk#1075,i_brand_id#1082,i_class_id#1084,i_category_id#1086] Batched: true, DataFilters: [isnotnull(i_item_sk#1075), isnotnull(i_brand_id#1082), isnotnull(i_class_id#1084), isnotnull(i_c..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/item], PartitionFilters: [], PushedFilters: [IsNotNull(i_item_sk), IsNotNull(i_brand_id), IsNotNull(i_class_id), IsNotNull(i_category_id)], ReadSchema: struct<i_item_sk:int,i_brand_id:int,i_class_id:int,i_category_id:int>\n   :                                      +- BroadcastQueryStage 91\n   :                                         +- ReusedExchange [ss_item_sk#745], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=11573]\n   +- Filter (isnotnull(sales#737) AND (cast(sales#737 as decimal(32,6)) > cast(ReusedSubquery Subquery subquery#735, [id=#825] as decimal(32,6))))\n      :  +- ReusedSubquery Subquery subquery#735, [id=#825]\n      +- HashAggregate(keys=[i_brand_id#1155, i_class_id#1157, i_category_id#1159], functions=[sum((cast(ss_quantity#1134 as decimal(10,0)) * ss_list_price#1136)), count(1)], output=[channel#736, i_brand_id#1155, i_class_id#1157, i_category_id#1159, sales#737, number_sales#738L])\n         +- ShuffleQueryStage 100\n            +- Exchange hashpartitioning(i_brand_id#1155, i_class_id#1157, i_category_id#1159, 200), ENSURE_REQUIREMENTS, [plan_id=12568]\n               +- *(74) HashAggregate(keys=[i_brand_id#1155, i_class_id#1157, i_category_id#1159], functions=[partial_sum((cast(ss_quantity#1134 as decimal(10,0)) * ss_list_price#1136)), partial_count(1)], output=[i_brand_id#1155, i_class_id#1157, i_category_id#1159, sum#1323, isEmpty#1324, count#1325L])\n                  +- *(74) Project [ss_quantity#1134, ss_list_price#1136, i_brand_id#1155, i_class_id#1157, i_category_id#1159]\n                     +- *(74) BroadcastHashJoin [ss_item_sk#1126], [i_item_sk#1148], Inner, BuildRight, false\n                        :- *(74) Project [ss_item_sk#1126, ss_quantity#1134, ss_list_price#1136]\n                        :  +- *(74) BroadcastHashJoin [ss_sold_date_sk#1147], [d_date_sk#1170], Inner, BuildRight, false\n                        :     :- *(74) BroadcastHashJoin [ss_item_sk#1126], [ss_item_sk#745], LeftSemi, BuildRight, false\n                        :     :  :- *(74) Filter isnotnull(ss_item_sk#1126)\n                        :     :  :  +- *(74) ColumnarToRow\n                        :     :  :     +- FileScan parquet spark_catalog.tpcds_100.store_sales[ss_item_sk#1126,ss_quantity#1134,ss_list_price#1136,ss_sold_date_sk#1147] Batched: true, DataFilters: [isnotnull(ss_item_sk#1126)], Format: Parquet, Location: InMemoryFileIndex(1823 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/store_..., PartitionFilters: [isnotnull(ss_sold_date_sk#1147), dynamicpruningexpression(ss_sold_date_sk#1147 IN dynamicpruning..., PushedFilters: [IsNotNull(ss_item_sk)], ReadSchema: struct<ss_item_sk:int,ss_quantity:int,ss_list_price:decimal(7,2)>\n                        :     :  :           +- SubqueryBroadcast dynamicpruning#1310, 0, [d_date_sk#1170], [id=#12520]\n                        :     :  :              +- AdaptiveSparkPlan isFinalPlan=true\n                                                   +- == Final Plan ==\n                                                      BroadcastQueryStage 1\n                                                      +- ReusedExchange [d_date_sk#1170], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=2491]\n                                                   +- == Initial Plan ==\n                                                      BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=12517]\n                                                      +- Project [d_date_sk#1170]\n                                                         +- Filter ((isnotnull(d_week_seq#1174) AND (d_week_seq#1174 = Subquery subquery#740, [id=#968])) AND isnotnull(d_date_sk#1170))\n                                                            :  +- Subquery subquery#740, [id=#968]\n                                                            :     +- AdaptiveSparkPlan isFinalPlan=false\n                                                            :        +- Project [d_week_seq#1241]\n                                                            :           +- Filter (((((isnotnull(d_year#1243) AND isnotnull(d_moy#1245)) AND isnotnull(d_dom#1246)) AND (d_year#1243 = 1998)) AND (d_moy#1245 = 12)) AND (d_dom#1246 = 16))\n                                                            :              +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_week_seq#1241,d_year#1243,d_moy#1245,d_dom#1246] Batched: true, DataFilters: [isnotnull(d_year#1243), isnotnull(d_moy#1245), isnotnull(d_dom#1246), (d_year#1243 = 1998), (d_m..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), IsNotNull(d_moy), IsNotNull(d_dom), EqualTo(d_year,1998), EqualTo(d_moy,12), ..., ReadSchema: struct<d_week_seq:int,d_year:int,d_moy:int,d_dom:int>\n                                                            +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#1170,d_week_seq#1174] Batched: true, DataFilters: [isnotnull(d_week_seq#1174), isnotnull(d_date_sk#1170)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_week_seq), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_week_seq:int>\n                        :     :  +- BroadcastQueryStage 93\n                        :     :     +- ReusedExchange [ss_item_sk#745], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=11573]\n                        :     +- BroadcastQueryStage 34\n                        :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=2491]\n                        :           +- *(20) Project [d_date_sk#1170]\n                        :              +- *(20) Filter ((isnotnull(d_week_seq#1174) AND (d_week_seq#1174 = Subquery subquery#740, [id=#996])) AND isnotnull(d_date_sk#1170))\n                        :                 :  +- Subquery subquery#740, [id=#996]\n                        :                 :     +- AdaptiveSparkPlan isFinalPlan=true\n                                                   +- == Final Plan ==\n                                                      *(1) Project [d_week_seq#1241]\n                                                      +- *(1) Filter (((((isnotnull(d_year#1243) AND isnotnull(d_moy#1245)) AND isnotnull(d_dom#1246)) AND (d_year#1243 = 1998)) AND (d_moy#1245 = 12)) AND (d_dom#1246 = 16))\n                                                         +- *(1) ColumnarToRow\n                                                            +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_week_seq#1241,d_year#1243,d_moy#1245,d_dom#1246] Batched: true, DataFilters: [isnotnull(d_year#1243), isnotnull(d_moy#1245), isnotnull(d_dom#1246), (d_year#1243 = 1998), (d_m..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), IsNotNull(d_moy), IsNotNull(d_dom), EqualTo(d_year,1998), EqualTo(d_moy,12), ..., ReadSchema: struct<d_week_seq:int,d_year:int,d_moy:int,d_dom:int>\n                                                   +- == Initial Plan ==\n                                                      Project [d_week_seq#1241]\n                                                      +- Filter (((((isnotnull(d_year#1243) AND isnotnull(d_moy#1245)) AND isnotnull(d_dom#1246)) AND (d_year#1243 = 1998)) AND (d_moy#1245 = 12)) AND (d_dom#1246 = 16))\n                                                         +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_week_seq#1241,d_year#1243,d_moy#1245,d_dom#1246] Batched: true, DataFilters: [isnotnull(d_year#1243), isnotnull(d_moy#1245), isnotnull(d_dom#1246), (d_year#1243 = 1998), (d_m..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), IsNotNull(d_moy), IsNotNull(d_dom), EqualTo(d_year,1998), EqualTo(d_moy,12), ..., ReadSchema: struct<d_week_seq:int,d_year:int,d_moy:int,d_dom:int>\n                        :                 +- *(20) ColumnarToRow\n                        :                    +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#1170,d_week_seq#1174] Batched: true, DataFilters: [isnotnull(d_week_seq#1174), isnotnull(d_date_sk#1170)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_week_seq), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_week_seq:int>\n                        +- BroadcastQueryStage 98\n                           +- ReusedExchange [i_item_sk#1148, i_brand_id#1155, i_class_id#1157, i_category_id#1159], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=12081]\n"
      },
      "IM" : {
        "inputSizeInBytes" : 34018624,
        "inputRowCount" : 6848
      },
      "InitialPartitionNum" : 1,
      "PD" : {
        "6" : [ 1197, 2338, 1197, 903, 1449, 742, 1197, 679, 1197, 1197, 994, 1932, 742, 2248, 1757, 1287, 1449, 1757, 1449, 1197, 1757, 2100, 1960, 1197, 1596, 1449, 1757, 1197, 1287, 1197, 1988, 1269, 1575, 1932, 1431, 2308, 1596, 1449, 1757, 1449, 994, 1449, 994, 994, 2128, 2128, 2128, 1323, 1449, 1757, 1596, 1182, 1197, 994, 1449, 1323, 1449, 1596, 0, 1323, 2218, 2248, 1197, 1757, 903, 1665, 2128, 1197, 0, 981, 2128, 742, 2128, 2308, 2128, 2158, 2278, 1323, 1757, 1449, 994, 1711, 2128, 2100, 1988, 1449, 2128, 2100, 994, 1757, 2128, 1449, 1197, 1449, 1512, 1449, 742, 903, 1596, 1932, 968, 1449, 1757, 1449, 0, 1269, 2128, 994, 1757, 1449, 1449, 1757, 2278, 994, 1757, 955, 994, 1197, 2128, 1449, 1757, 2128, 994, 2158, 1197, 1960, 1323, 2542, 994, 2128, 1305, 1092, 742, 1596, 1757, 1305, 994, 1757, 742, 1449, 994, 1533, 1449, 2308, 1575, 1932, 1449, 1757, 929, 1757, 1449, 1757, 1533, 1449, 742, 1197, 1323, 2338, 0, 994, 1932, 1932, 2338, 2576, 1575, 742, 1757, 1734, 1323, 679, 1757, 994, 1596, 2372, 1323, 1449, 742, 1197, 2613, 1932, 1960, 1305, 1932, 1092, 1215, 1932, 1757, 1449, 742, 1988, 3430, 2576, 1596, 3075, 2308, 1575, 994, 1197, 1596, 2338 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 20,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 32 ],
      "Objectives" : {
        "DurationInMs" : 270,
        "TotalTasksDurationInMs" : 259,
        "IOBytes" : {
          "Total" : 292905,
          "Details" : {
            "IR" : 0,
            "IW" : 0,
            "SR" : 292905,
            "SW" : 0
          }
        }
      }
    },
    "2" : {
      "QSLogical" : {
        "operators" : {
          "0" : {
            "sign" : -2061501032,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 36,
                "rowCount" : 3
              },
              "compileTime" : {
                "sizeInBytes" : 36,
                "rowCount" : 3
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_week_seq#1213] "
          },
          "1" : {
            "sign" : -1305353512,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 738,
                "rowCount" : 3
              },
              "compileTime" : {
                "sizeInBytes" : 738,
                "rowCount" : 3
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(d_year#1215) AND isnotnull(d_moy#1217)) AND isnotnull(d_dom#1218)) AND (((d_year#1215 = 1999) AND (d_moy#1217 = 12)) AND (d_dom#1218 = 16))) "
          },
          "2" : {
            "sign" : -1755539215,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 17970054,
                "rowCount" : 73049
              },
              "compileTime" : {
                "sizeInBytes" : 17970054,
                "rowCount" : 73049
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#1209, d_date_id#1210, d_date#1211, d_month_seq#1212, d_week_seq#1213, d_quarter_seq#1214, d_year#1215, d_dow#1216, d_moy#1217, d_dom#1218, d_qoy#1219, d_fy_year#1220, d_fy_quarter_seq#1221, d_fy_week_seq#1222, d_day_name#1223, d_quarter_name#1224, d_holiday#1225, d_weekend#1226, d_following_holiday#1227, d_first_dom#1228, d_last_dom#1229, d_same_day_ly#1230, d_same_day_lq#1231, d_current_day#1232, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "LogicalRelation",
          "toId" : 1,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Filter",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [d_week_seq#1213]\n+- Filter (((isnotnull(d_year#1215) AND isnotnull(d_moy#1217)) AND isnotnull(d_dom#1218)) AND (((d_year#1215 = 1999) AND (d_moy#1217 = 12)) AND (d_dom#1218 = 16)))\n   +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#1209,d_date_id#1210,d_date#1211,d_month_seq#1212,d_week_seq#1213,d_quarter_seq#1214,d_year#1215,d_dow#1216,d_moy#1217,d_dom#1218,d_qoy#1219,d_fy_year#1220,d_fy_quarter_seq#1221,d_fy_week_seq#1222,d_day_name#1223,d_quarter_name#1224,d_holiday#1225,d_weekend#1226,d_following_holiday#1227,d_first_dom#1228,d_last_dom#1229,d_same_day_ly#1230,d_same_day_lq#1231,d_current_day#1232,... 4 more fields] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "0" : {
            "sign" : 2037702429,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 36,
            "rowCount" : 3,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [1]: [d_week_seq#1213] Input [4]: [d_week_seq#1213, d_year#1215, d_moy#1217, d_dom#1218] "
          },
          "1" : {
            "sign" : 1132269205,
            "className" : "org.apache.spark.sql.execution.FilterExec",
            "sizeInBytes" : 36,
            "rowCount" : 3,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Input [4]: [d_week_seq#1213, d_year#1215, d_moy#1217, d_dom#1218] Condition : (((((isnotnull(d_year#1215) AND isnotnull(d_moy#1217)) AND isnotnull(d_dom#1218)) AND (d_year#1215 = 1999)) AND (d_moy#1217 = 12)) AND (d_dom#1218 = 16)) "
          },
          "2" : {
            "sign" : 418666258,
            "className" : "org.apache.spark.sql.execution.FileSourceScanExec",
            "sizeInBytes" : 36,
            "rowCount" : 3,
            "isRuntime" : false,
            "predicate" : " (unknown) Scan parquet spark_catalog.tpcds_100.date_dim Output [4]: [d_week_seq#1213, d_year#1215, d_moy#1217, d_dom#1218] Batched: true Location: InMemoryFileIndex [hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim] PushedFilters: [IsNotNull(d_year), IsNotNull(d_moy), IsNotNull(d_dom), EqualTo(d_year,1999), EqualTo(d_moy,12), EqualTo(d_dom,16)] ReadSchema: struct<d_week_seq:int,d_year:int,d_moy:int,d_dom:int> "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "Scan parquet spark_catalog.tpcds_100.date_dim",
          "toId" : 1,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Filter",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [d_week_seq#1213]\n+- Filter (((((isnotnull(d_year#1215) AND isnotnull(d_moy#1217)) AND isnotnull(d_dom#1218)) AND (d_year#1215 = 1999)) AND (d_moy#1217 = 12)) AND (d_dom#1218 = 16))\n   +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_week_seq#1213,d_year#1215,d_moy#1217,d_dom#1218] Batched: true, DataFilters: [isnotnull(d_year#1215), isnotnull(d_moy#1217), isnotnull(d_dom#1218), (d_year#1215 = 1999), (d_m..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), IsNotNull(d_moy), IsNotNull(d_dom), EqualTo(d_year,1999), EqualTo(d_moy,12), ..., ReadSchema: struct<d_week_seq:int,d_year:int,d_moy:int,d_dom:int>\n"
      },
      "IM" : {
        "inputSizeInBytes" : 36,
        "inputRowCount" : 3
      },
      "InitialPartitionNum" : 0,
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 5,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 4 ],
      "Objectives" : {
        "DurationInMs" : 1472,
        "TotalTasksDurationInMs" : 1466,
        "IOBytes" : {
          "Total" : 84698,
          "Details" : {
            "IR" : 84698,
            "IW" : 0,
            "SR" : 0,
            "SW" : 0
          }
        }
      }
    },
    "18" : {
      "QSLogical" : {
        "operators" : {
          "0" : {
            "sign" : 821689530,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 9400,
                "rowCount" : 235
              },
              "compileTime" : {
                "sizeInBytes" : 24,
                "rowCount" : 1
              }
            },
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [avg((cast(quantity#746 as decimal(10,0)) * list_price#747)) AS average_sales#752], HashAggregate(keys=[], functions=[avg((cast(quantity#746 as decimal(10,0)) * list_price#747))]) "
          }
        },
        "links" : [ ],
        "rawPlan" : "LogicalQueryStage Aggregate [avg((cast(quantity#746 as decimal(10,0)) * list_price#747)) AS average_sales#752], HashAggregate(keys=[], functions=[avg((cast(quantity#746 as decimal(10,0)) * list_price#747))])\n"
      },
      "QSPhysical" : {
        "operators" : {
          "0" : {
            "sign" : 1962924712,
            "className" : "org.apache.spark.sql.execution.aggregate.HashAggregateExec",
            "sizeInBytes" : 9400,
            "rowCount" : 235,
            "isRuntime" : true,
            "predicate" : " (unknown) HashAggregate Input [2]: [sum#1328, count#1329L] Keys: [] Functions [1]: [avg((cast(quantity#746 as decimal(10,0)) * list_price#747))] Aggregate Attributes [1]: [avg((cast(quantity#746 as decimal(10,0)) * list_price#747))#1265] Results [1]: [avg((cast(quantity#746 as decimal(10,0)) * list_price#747))#1265 AS average_sales#752] "
          },
          "1" : {
            "sign" : -1231417123,
            "className" : "org.apache.spark.sql.execution.adaptive.ShuffleQueryStageExec",
            "sizeInBytes" : 24,
            "rowCount" : 1,
            "isRuntime" : false,
            "predicate" : " (unknown) ShuffleQueryStage Output [2]: [sum#1328, count#1329L] Arguments: 6 "
          }
        },
        "links" : [ {
          "fromId" : 1,
          "fromName" : "ShuffleQueryStage",
          "toId" : 0,
          "toName" : "HashAggregate",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "HashAggregate(keys=[], functions=[avg((cast(quantity#746 as decimal(10,0)) * list_price#747))], output=[average_sales#752])\n+- ShuffleQueryStage 6\n   +- Exchange SinglePartition, ENSURE_REQUIREMENTS, [plan_id=12976]\n      +- *(7) HashAggregate(keys=[], functions=[partial_avg((cast(quantity#746 as decimal(10,0)) * list_price#747))], output=[sum#1328, count#1329L])\n         +- Union\n            :- *(4) Project [ss_quantity#886 AS quantity#746, ss_list_price#888 AS list_price#747]\n            :  +- *(4) BroadcastHashJoin [ss_sold_date_sk#899], [d_date_sk#900], Inner, BuildRight, false\n            :     :- *(4) ColumnarToRow\n            :     :  +- FileScan parquet spark_catalog.tpcds_100.store_sales[ss_quantity#886,ss_list_price#888,ss_sold_date_sk#899] Batched: true, DataFilters: [], Format: Parquet, Location: InMemoryFileIndex(1823 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/store_..., PartitionFilters: [isnotnull(ss_sold_date_sk#899), dynamicpruningexpression(ss_sold_date_sk#899 IN dynamicpruning#1..., PushedFilters: [], ReadSchema: struct<ss_quantity:int,ss_list_price:decimal(7,2)>\n            :     :        +- ReusedSubquery SubqueryBroadcast dynamicpruning#1292, 0, [d_date_sk#799], [id=#4500]\n            :     +- BroadcastQueryStage 1\n            :        +- ReusedExchange [d_date_sk#900], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=1714]\n            :- *(5) Project [cs_quantity#945 AS quantity#748, cs_list_price#947 AS list_price#749]\n            :  +- *(5) BroadcastHashJoin [cs_sold_date_sk#961], [d_date_sk#962], Inner, BuildRight, false\n            :     :- *(5) ColumnarToRow\n            :     :  +- FileScan parquet spark_catalog.tpcds_100.catalog_sales[cs_quantity#945,cs_list_price#947,cs_sold_date_sk#961] Batched: true, DataFilters: [], Format: Parquet, Location: InMemoryFileIndex(1836 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/catalo..., PartitionFilters: [isnotnull(cs_sold_date_sk#961), dynamicpruningexpression(cs_sold_date_sk#961 IN dynamicpruning#1..., PushedFilters: [], ReadSchema: struct<cs_quantity:int,cs_list_price:decimal(7,2)>\n            :     :        +- ReusedSubquery SubqueryBroadcast dynamicpruning#1292, 0, [d_date_sk#799], [id=#4500]\n            :     +- BroadcastQueryStage 3\n            :        +- ReusedExchange [d_date_sk#962], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=1714]\n            +- *(6) Project [ws_quantity#1007 AS quantity#750, ws_list_price#1009 AS list_price#751]\n               +- *(6) BroadcastHashJoin [ws_sold_date_sk#1023], [d_date_sk#1024], Inner, BuildRight, false\n                  :- *(6) ColumnarToRow\n                  :  +- FileScan parquet spark_catalog.tpcds_100.web_sales[ws_quantity#1007,ws_list_price#1009,ws_sold_date_sk#1023] Batched: true, DataFilters: [], Format: Parquet, Location: InMemoryFileIndex(1823 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/web_sa..., PartitionFilters: [isnotnull(ws_sold_date_sk#1023), dynamicpruningexpression(ws_sold_date_sk#1023 IN dynamicpruning..., PushedFilters: [], ReadSchema: struct<ws_quantity:int,ws_list_price:decimal(7,2)>\n                  :        +- ReusedSubquery SubqueryBroadcast dynamicpruning#1292, 0, [d_date_sk#799], [id=#4500]\n                  +- BroadcastQueryStage 5\n                     +- ReusedExchange [d_date_sk#1024], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=1714]\n"
      },
      "IM" : {
        "inputSizeInBytes" : 9400,
        "inputRowCount" : 235
      },
      "InitialPartitionNum" : 1,
      "PD" : {
        "7" : [ 20648 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 19,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 28 ],
      "Objectives" : {
        "DurationInMs" : 164,
        "TotalTasksDurationInMs" : 157,
        "IOBytes" : {
          "Total" : 19148,
          "Details" : {
            "IR" : 0,
            "IW" : 0,
            "SR" : 19148,
            "SW" : 0
          }
        }
      }
    },
    "7" : {
      "QSLogical" : {
        "operators" : {
          "4" : {
            "sign" : 2058802089,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 2292368272,
                "rowCount" : 143273017
              },
              "compileTime" : {
                "sizeInBytes" : 2292368272,
                "rowCount" : 143273017
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_item_sk#112, cs_sold_date_sk#131] "
          },
          "5" : {
            "sign" : -651341917,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 29800787536,
                "rowCount" : 143273017
              },
              "compileTime" : {
                "sizeInBytes" : 29800787536,
                "rowCount" : 143273017
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(cs_item_sk#112) AND isnotnull(cs_sold_date_sk#131)) AND dynamicpruning#1292 [cs_sold_date_sk#131]) "
          },
          "6" : {
            "sign" : -1958078640,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 29800787536,
                "rowCount" : 143273017
              },
              "compileTime" : {
                "sizeInBytes" : 29800787536,
                "rowCount" : 143273017
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [cs_sold_time_sk#98, cs_ship_date_sk#99, cs_bill_customer_sk#100, cs_bill_cdemo_sk#101, cs_bill_hdemo_sk#102, cs_bill_addr_sk#103, cs_ship_customer_sk#104, cs_ship_cdemo_sk#105, cs_ship_hdemo_sk#106, cs_ship_addr_sk#107, cs_call_center_sk#108, cs_catalog_page_sk#109, cs_ship_mode_sk#110, cs_warehouse_sk#111, cs_item_sk#112, cs_promo_sk#113, cs_order_number#114L, cs_quantity#115, cs_wholesale_cost#116, cs_list_price#117, cs_sales_price#118, cs_ext_discount_amt#119, cs_ext_sales_price#120, cs_ext_wholesale_cost#121, ... 10 more fields], `spark_catalog`.`tpcds_100`.`catalog_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "1" : {
            "sign" : -686978363,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 4028484684,
                "rowCount" : 143874453
              },
              "compileTime" : {
                "sizeInBytes" : 4028484684,
                "rowCount" : 143874453
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cs_item_sk#112 = i_item_sk#777) "
          },
          "0" : {
            "sign" : -1214473113,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 2877489060,
                "rowCount" : 143874453
              },
              "compileTime" : {
                "sizeInBytes" : 2877489060,
                "rowCount" : 143874453
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_brand_id#784, i_class_id#786, i_category_id#788] "
          },
          "2" : {
            "sign" : -15707210,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 1662195144,
                "rowCount" : 138516262
              },
              "compileTime" : {
                "sizeInBytes" : 1662195144,
                "rowCount" : 138516262
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_item_sk#112] "
          },
          "3" : {
            "sign" : 1561242705,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 2770325240,
                "rowCount" : 138516262
              },
              "compileTime" : {
                "sizeInBytes" : 2770325240,
                "rowCount" : 138516262
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cs_sold_date_sk#131 = d_date_sk#799) "
          }
        },
        "links" : [ {
          "fromId" : 6,
          "fromName" : "LogicalRelation",
          "toId" : 5,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Filter",
          "toId" : 4,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Project",
          "toId" : 3,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Join",
          "toId" : 2,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Project",
          "toId" : 1,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Join",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [i_brand_id#784, i_class_id#786, i_category_id#788]\n+- Join Inner, (cs_item_sk#112 = i_item_sk#777)\n   :- Project [cs_item_sk#112]\n   :  +- Join Inner, (cs_sold_date_sk#131 = d_date_sk#799)\n   :     :- Project [cs_item_sk#112, cs_sold_date_sk#131]\n   :     :  +- Filter ((isnotnull(cs_item_sk#112) AND isnotnull(cs_sold_date_sk#131)) AND dynamicpruning#1292 [cs_sold_date_sk#131])\n   :     :     :  +- Project [d_date_sk#799]\n   :     :     :     +- Filter ((isnotnull(d_year#805) AND ((d_year#805 >= 1998) AND (d_year#805 <= 2000))) AND isnotnull(d_date_sk#799))\n   :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#799,d_date_id#800,d_date#801,d_month_seq#802,d_week_seq#803,d_quarter_seq#804,d_year#805,d_dow#806,d_moy#807,d_dom#808,d_qoy#809,d_fy_year#810,d_fy_quarter_seq#811,d_fy_week_seq#812,d_day_name#813,d_quarter_name#814,d_holiday#815,d_weekend#816,d_following_holiday#817,d_first_dom#818,d_last_dom#819,d_same_day_ly#820,d_same_day_lq#821,d_current_day#822,... 4 more fields] parquet\n   :     :     +- Relation spark_catalog.tpcds_100.catalog_sales[cs_sold_time_sk#98,cs_ship_date_sk#99,cs_bill_customer_sk#100,cs_bill_cdemo_sk#101,cs_bill_hdemo_sk#102,cs_bill_addr_sk#103,cs_ship_customer_sk#104,cs_ship_cdemo_sk#105,cs_ship_hdemo_sk#106,cs_ship_addr_sk#107,cs_call_center_sk#108,cs_catalog_page_sk#109,cs_ship_mode_sk#110,cs_warehouse_sk#111,cs_item_sk#112,cs_promo_sk#113,cs_order_number#114L,cs_quantity#115,cs_wholesale_cost#116,cs_list_price#117,cs_sales_price#118,cs_ext_discount_amt#119,cs_ext_sales_price#120,cs_ext_wholesale_cost#121,... 10 more fields] parquet\n   :     +- Project [d_date_sk#799]\n   :        +- Filter ((isnotnull(d_year#805) AND ((d_year#805 >= 1998) AND (d_year#805 <= 2000))) AND isnotnull(d_date_sk#799))\n   :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#799,d_date_id#800,d_date#801,d_month_seq#802,d_week_seq#803,d_quarter_seq#804,d_year#805,d_dow#806,d_moy#807,d_dom#808,d_qoy#809,d_fy_year#810,d_fy_quarter_seq#811,d_fy_week_seq#812,d_day_name#813,d_quarter_name#814,d_holiday#815,d_weekend#816,d_following_holiday#817,d_first_dom#818,d_last_dom#819,d_same_day_ly#820,d_same_day_lq#821,d_current_day#822,... 4 more fields] parquet\n   +- Project [i_item_sk#777, i_brand_id#784, i_class_id#786, i_category_id#788]\n      +- Filter isnotnull(i_item_sk#777)\n         +- Relation spark_catalog.tpcds_100.item[i_item_sk#777,i_item_id#778,i_rec_start_date#779,i_rec_end_date#780,i_item_desc#781,i_current_price#782,i_wholesale_cost#783,i_brand_id#784,i_brand#785,i_class_id#786,i_class#787,i_category_id#788,i_category#789,i_manufact_id#790,i_manufact#791,i_size#792,i_formulation#793,i_color#794,i_units#795,i_container#796,i_manager_id#797,i_product_name#798] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "4" : {
            "sign" : 436810990,
            "className" : "org.apache.spark.sql.execution.FilterExec",
            "sizeInBytes" : 2292368272,
            "rowCount" : 143273017,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Input [2]: [cs_item_sk#112, cs_sold_date_sk#131] Condition : isnotnull(cs_item_sk#112) "
          },
          "5" : {
            "sign" : 1946197829,
            "className" : "org.apache.spark.sql.execution.FileSourceScanExec",
            "sizeInBytes" : 2292368272,
            "rowCount" : 143273017,
            "isRuntime" : false,
            "predicate" : " (unknown) Scan parquet spark_catalog.tpcds_100.catalog_sales Output [2]: [cs_item_sk#112, cs_sold_date_sk#131] Batched: true Location: InMemoryFileIndex [hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/catalog_sales/cs_sold_date_sk=2450815, ... 1835 entries] PartitionFilters: [isnotnull(cs_sold_date_sk#131), dynamicpruningexpression(cs_sold_date_sk#131 IN dynamicpruning#1292)] PushedFilters: [IsNotNull(cs_item_sk)] ReadSchema: struct<cs_item_sk:int> "
          },
          "6" : {
            "sign" : 113991184,
            "className" : "org.apache.spark.sql.execution.adaptive.BroadcastQueryStageExec",
            "sizeInBytes" : 1057344,
            "rowCount" : 1096,
            "isRuntime" : true,
            "predicate" : " (unknown) BroadcastQueryStage Output [1]: [d_date_sk#799] Arguments: 3 "
          },
          "1" : {
            "sign" : 1940094504,
            "className" : "org.apache.spark.sql.execution.joins.BroadcastHashJoinExec",
            "sizeInBytes" : 4028484684,
            "rowCount" : 143874453,
            "isRuntime" : false,
            "predicate" : " (unknown) BroadcastHashJoin Left keys [1]: [cs_item_sk#112] Right keys [1]: [i_item_sk#777] Join type: Inner Join condition: None "
          },
          "0" : {
            "sign" : 473283580,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 2877489060,
            "rowCount" : 143874453,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [3]: [i_brand_id#784, i_class_id#786, i_category_id#788] Input [5]: [cs_item_sk#112, i_item_sk#777, i_brand_id#784, i_class_id#786, i_category_id#788] "
          },
          "2" : {
            "sign" : -1066722623,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 1662195144,
            "rowCount" : 138516262,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [1]: [cs_item_sk#112] Input [3]: [cs_item_sk#112, cs_sold_date_sk#131, d_date_sk#799] "
          },
          "7" : {
            "sign" : -377658422,
            "className" : "org.apache.spark.sql.execution.adaptive.BroadcastQueryStageExec",
            "sizeInBytes" : 18409216,
            "rowCount" : 204000,
            "isRuntime" : true,
            "predicate" : " (unknown) BroadcastQueryStage Output [4]: [i_item_sk#777, i_brand_id#784, i_class_id#786, i_category_id#788] Arguments: 4 "
          },
          "3" : {
            "sign" : -2034217434,
            "className" : "org.apache.spark.sql.execution.joins.BroadcastHashJoinExec",
            "sizeInBytes" : 2770325240,
            "rowCount" : 138516262,
            "isRuntime" : false,
            "predicate" : " (unknown) BroadcastHashJoin Left keys [1]: [cs_sold_date_sk#131] Right keys [1]: [d_date_sk#799] Join type: Inner Join condition: None "
          }
        },
        "links" : [ {
          "fromId" : 5,
          "fromName" : "Scan parquet spark_catalog.tpcds_100.catalog_sales",
          "toId" : 4,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Filter",
          "toId" : 3,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "BroadcastQueryStage",
          "toId" : 3,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "BroadcastHashJoin",
          "toId" : 2,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Project",
          "toId" : 1,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "BroadcastQueryStage",
          "toId" : 1,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "BroadcastHashJoin",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [i_brand_id#784, i_class_id#786, i_category_id#788]\n+- BroadcastHashJoin [cs_item_sk#112], [i_item_sk#777], Inner, BuildRight, false\n   :- Project [cs_item_sk#112]\n   :  +- BroadcastHashJoin [cs_sold_date_sk#131], [d_date_sk#799], Inner, BuildRight, false\n   :     :- Filter isnotnull(cs_item_sk#112)\n   :     :  +- FileScan parquet spark_catalog.tpcds_100.catalog_sales[cs_item_sk#112,cs_sold_date_sk#131] Batched: true, DataFilters: [isnotnull(cs_item_sk#112)], Format: Parquet, Location: InMemoryFileIndex(1836 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/catalo..., PartitionFilters: [isnotnull(cs_sold_date_sk#131), dynamicpruningexpression(cs_sold_date_sk#131 IN dynamicpruning#1..., PushedFilters: [IsNotNull(cs_item_sk)], ReadSchema: struct<cs_item_sk:int>\n   :     :        +- SubqueryBroadcast dynamicpruning#1292, 0, [d_date_sk#799], [id=#4500]\n   :     :           +- AdaptiveSparkPlan isFinalPlan=false\n   :     :              +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=4497]\n   :     :                 +- Project [d_date_sk#799]\n   :     :                    +- Filter (((isnotnull(d_year#805) AND (d_year#805 >= 1998)) AND (d_year#805 <= 2000)) AND isnotnull(d_date_sk#799))\n   :     :                       +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#799,d_year#805] Batched: true, DataFilters: [isnotnull(d_year#805), (d_year#805 >= 1998), (d_year#805 <= 2000), isnotnull(d_date_sk#799)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), GreaterThanOrEqual(d_year,1998), LessThanOrEqual(d_year,2000), IsNotNull(d_da..., ReadSchema: struct<d_date_sk:int,d_year:int>\n   :     +- BroadcastQueryStage 3\n   :        +- ReusedExchange [d_date_sk#799], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=1714]\n   +- BroadcastQueryStage 4\n      +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=1773]\n         +- *(4) Filter isnotnull(i_item_sk#777)\n            +- *(4) ColumnarToRow\n               +- FileScan parquet spark_catalog.tpcds_100.item[i_item_sk#777,i_brand_id#784,i_class_id#786,i_category_id#788] Batched: true, DataFilters: [isnotnull(i_item_sk#777)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/item], PartitionFilters: [], PushedFilters: [IsNotNull(i_item_sk)], ReadSchema: struct<i_item_sk:int,i_brand_id:int,i_class_id:int,i_category_id:int>\n"
      },
      "IM" : {
        "inputSizeInBytes" : 2311834832,
        "inputRowCount" : 143478113
      },
      "InitialPartitionNum" : 0,
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 1,
        "FinishedTasksNum" : 4,
        "FinishedTasksTotalTimeInMs" : 5035.0,
        "FinishedTasksDistributionInMs" : [ 1225.0, 1262.0, 1266.0, 1282.0, 1282.0 ]
      },
      "QueryStageOptimizationId" : 7,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 10 ],
      "Objectives" : {
        "DurationInMs" : 24028,
        "TotalTasksDurationInMs" : 204163,
        "IOBytes" : {
          "Total" : 575627632,
          "Details" : {
            "IR" : 359031931,
            "IW" : 0,
            "SR" : 0,
            "SW" : 216595701
          }
        }
      }
    },
    "3" : {
      "QSLogical" : {
        "operators" : {
          "0" : {
            "sign" : 707519831,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 876588,
                "rowCount" : 73049
              },
              "compileTime" : {
                "sizeInBytes" : 876588,
                "rowCount" : 73049
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#1097] "
          },
          "1" : {
            "sign" : 1866012666,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 17970054,
                "rowCount" : 73049
              },
              "compileTime" : {
                "sizeInBytes" : 17970054,
                "rowCount" : 73049
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(d_week_seq#1101) AND (d_week_seq#1101 = scalar-subquery#734 [])) AND isnotnull(d_date_sk#1097)) "
          },
          "2" : {
            "sign" : 682718368,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 17970054,
                "rowCount" : 73049
              },
              "compileTime" : {
                "sizeInBytes" : 17970054,
                "rowCount" : 73049
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#1097, d_date_id#1098, d_date#1099, d_month_seq#1100, d_week_seq#1101, d_quarter_seq#1102, d_year#1103, d_dow#1104, d_moy#1105, d_dom#1106, d_qoy#1107, d_fy_year#1108, d_fy_quarter_seq#1109, d_fy_week_seq#1110, d_day_name#1111, d_quarter_name#1112, d_holiday#1113, d_weekend#1114, d_following_holiday#1115, d_first_dom#1116, d_last_dom#1117, d_same_day_ly#1118, d_same_day_lq#1119, d_current_day#1120, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "LogicalRelation",
          "toId" : 1,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Filter",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [d_date_sk#1097]\n+- Filter ((isnotnull(d_week_seq#1101) AND (d_week_seq#1101 = scalar-subquery#734 [])) AND isnotnull(d_date_sk#1097))\n   :  +- Project [d_week_seq#1213]\n   :     +- Filter (((isnotnull(d_year#1215) AND isnotnull(d_moy#1217)) AND isnotnull(d_dom#1218)) AND (((d_year#1215 = 1999) AND (d_moy#1217 = 12)) AND (d_dom#1218 = 16)))\n   :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#1209,d_date_id#1210,d_date#1211,d_month_seq#1212,d_week_seq#1213,d_quarter_seq#1214,d_year#1215,d_dow#1216,d_moy#1217,d_dom#1218,d_qoy#1219,d_fy_year#1220,d_fy_quarter_seq#1221,d_fy_week_seq#1222,d_day_name#1223,d_quarter_name#1224,d_holiday#1225,d_weekend#1226,d_following_holiday#1227,d_first_dom#1228,d_last_dom#1229,d_same_day_ly#1230,d_same_day_lq#1231,d_current_day#1232,... 4 more fields] parquet\n   +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#1097,d_date_id#1098,d_date#1099,d_month_seq#1100,d_week_seq#1101,d_quarter_seq#1102,d_year#1103,d_dow#1104,d_moy#1105,d_dom#1106,d_qoy#1107,d_fy_year#1108,d_fy_quarter_seq#1109,d_fy_week_seq#1110,d_day_name#1111,d_quarter_name#1112,d_holiday#1113,d_weekend#1114,d_following_holiday#1115,d_first_dom#1116,d_last_dom#1117,d_same_day_ly#1118,d_same_day_lq#1119,d_current_day#1120,... 4 more fields] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "0" : {
            "sign" : -1167344700,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 876588,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [1]: [d_date_sk#1097] Input [2]: [d_date_sk#1097, d_week_seq#1101] "
          },
          "1" : {
            "sign" : 936570619,
            "className" : "org.apache.spark.sql.execution.FilterExec",
            "sizeInBytes" : 876588,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Input [2]: [d_date_sk#1097, d_week_seq#1101] Condition : ((isnotnull(d_week_seq#1101) AND (d_week_seq#1101 = Subquery subquery#734, [id=#863])) AND isnotnull(d_date_sk#1097)) "
          },
          "2" : {
            "sign" : -2046370775,
            "className" : "org.apache.spark.sql.execution.FileSourceScanExec",
            "sizeInBytes" : 876588,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) Scan parquet spark_catalog.tpcds_100.date_dim Output [2]: [d_date_sk#1097, d_week_seq#1101] Batched: true Location: InMemoryFileIndex [hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim] PushedFilters: [IsNotNull(d_week_seq), IsNotNull(d_date_sk)] ReadSchema: struct<d_date_sk:int,d_week_seq:int> "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "Scan parquet spark_catalog.tpcds_100.date_dim",
          "toId" : 1,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Filter",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [d_date_sk#1097]\n+- Filter ((isnotnull(d_week_seq#1101) AND (d_week_seq#1101 = Subquery subquery#734, [id=#863])) AND isnotnull(d_date_sk#1097))\n   :  +- Subquery subquery#734, [id=#863]\n   :     +- AdaptiveSparkPlan isFinalPlan=false\n   :        +- Project [d_week_seq#1213]\n   :           +- Filter (((((isnotnull(d_year#1215) AND isnotnull(d_moy#1217)) AND isnotnull(d_dom#1218)) AND (d_year#1215 = 1999)) AND (d_moy#1217 = 12)) AND (d_dom#1218 = 16))\n   :              +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_week_seq#1213,d_year#1215,d_moy#1217,d_dom#1218] Batched: true, DataFilters: [isnotnull(d_year#1215), isnotnull(d_moy#1217), isnotnull(d_dom#1218), (d_year#1215 = 1999), (d_m..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), IsNotNull(d_moy), IsNotNull(d_dom), EqualTo(d_year,1999), EqualTo(d_moy,12), ..., ReadSchema: struct<d_week_seq:int,d_year:int,d_moy:int,d_dom:int>\n   +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#1097,d_week_seq#1101] Batched: true, DataFilters: [isnotnull(d_week_seq#1101), isnotnull(d_date_sk#1097)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_week_seq), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_week_seq:int>\n"
      },
      "IM" : {
        "inputSizeInBytes" : 876588,
        "inputRowCount" : 73049
      },
      "InitialPartitionNum" : 0,
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 3,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 6 ],
      "Objectives" : {
        "DurationInMs" : 1524,
        "TotalTasksDurationInMs" : 1518,
        "IOBytes" : {
          "Total" : 93562,
          "Details" : {
            "IR" : 93562,
            "IW" : 0,
            "SR" : 0,
            "SW" : 0
          }
        }
      }
    }
  },
  "SQLStartTimeInMs" : 1702226623651,
  "SQLEndTimeInMs" : 1702226711498,
  "Objectives" : {
    "DurationInMs" : 87847,
    "IOBytes" : {
      "Total" : 3426576569,
      "Details" : {
        "IR" : 2737713485,
        "IW" : 0,
        "SR" : 344431542,
        "SW" : 344431542
      }
    }
  }
}
