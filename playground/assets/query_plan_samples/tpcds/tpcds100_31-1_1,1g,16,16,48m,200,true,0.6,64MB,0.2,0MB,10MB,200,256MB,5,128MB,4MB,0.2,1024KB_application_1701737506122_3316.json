{
  "CompileTimeLQP" : {
    "LQP" : {
      "operators" : {
        "45" : {
          "sign" : -2087206825,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 17970054,
          "rowCount" : 73049,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#29, d_date_id#30, d_date#31, d_month_seq#32, d_week_seq#33, d_quarter_seq#34, d_year#35, d_dow#36, d_moy#37, d_dom#38, d_qoy#39, d_fy_year#40, d_fy_quarter_seq#41, d_fy_week_seq#42, d_day_name#43, d_quarter_name#44, d_holiday#45, d_weekend#46, d_following_holiday#47, d_first_dom#48, d_last_dom#49, d_same_day_ly#50, d_same_day_lq#51, d_current_day#52, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "34" : {
          "sign" : 558204707,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 246000000,
          "rowCount" : 1000000,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ca_address_sk#573, ca_address_id#574, ca_street_number#575, ca_street_name#576, ca_street_type#577, ca_suite_number#578, ca_city#579, ca_county#580, ca_state#581, ca_zip#582, ca_country#583, ca_gmt_offset#584, ca_location_type#585], `spark_catalog`.`tpcds_100`.`customer_address`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "67" : {
          "sign" : 956448295,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
          "sizeInBytes" : 79758,
          "rowCount" : 1899,
          "isRuntime" : false,
          "predicate" : " (unknown) Aggregate Arguments: [ca_county#656, d_qoy#631, d_year#627], [ca_county#656, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#609)),17,2) AS web_sales#164] "
        },
        "93" : {
          "sign" : -181423475,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 238631070,
          "rowCount" : 970045,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: (isnotnull(ca_address_sk#725) AND isnotnull(ca_county#732)) "
        },
        "12" : {
          "sign" : -496922457,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 6304008672,
          "rowCount" : 262667028,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [ss_addr_sk#462, ss_ext_sales_price#471, ss_sold_date_sk#479] "
        },
        "66" : {
          "sign" : 2052570893,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 246000000,
          "rowCount" : 1000000,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ca_address_sk#132, ca_address_id#133, ca_street_number#134, ca_street_name#135, ca_street_type#136, ca_suite_number#137, ca_city#138, ca_county#139, ca_state#140, ca_zip#141, ca_country#142, ca_gmt_offset#143, ca_location_type#144], `spark_catalog`.`tpcds_100`.`customer_address`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "89" : {
          "sign" : -1558316069,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 2960,
          "rowCount" : 148,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [d_date_sk#697, d_year#703, d_qoy#707] "
        },
        "51" : {
          "sign" : 40915218,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 94950,
          "rowCount" : 1899,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [ca_county#139, web_sales#5, web_sales#164] "
        },
        "84" : {
          "sign" : 1525018903,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 1945876940,
          "rowCount" : 69495605,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [ws_bill_addr_sk#669, ws_ext_sales_price#685, d_year#703, d_qoy#707] "
        },
        "8" : {
          "sign" : 1506074788,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 13761654400,
          "rowCount" : 275233088,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [ss_ext_sales_price#471, d_year#486, d_qoy#490, ca_county#515] "
        },
        "73" : {
          "sign" : -1189146265,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 14968824624,
          "rowCount" : 71965503,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: ((isnotnull(ws_sold_date_sk#620) AND isnotnull(ws_bill_addr_sk#593)) AND dynamicpruning#743 [ws_sold_date_sk#620]) "
        },
        "78" : {
          "sign" : 1420395982,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 36861710,
          "rowCount" : 970045,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [ca_address_sk#649, ca_county#656] "
        },
        "19" : {
          "sign" : -1132441478,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 238631070,
          "rowCount" : 970045,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: (isnotnull(ca_address_sk#508) AND isnotnull(ca_county#515)) "
        },
        "23" : {
          "sign" : -1356639255,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 15963519104,
          "rowCount" : 275233088,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: Inner, (ss_addr_sk#527 = ca_address_sk#573) "
        },
        "62" : {
          "sign" : 1964930862,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 35670,
          "rowCount" : 145,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: (((isnotnull(d_qoy#114) AND isnotnull(d_year#110)) AND ((d_qoy#114 = 1) AND (d_year#110 = 2000))) AND isnotnull(d_date_sk#104)) "
        },
        "4" : {
          "sign" : -765267684,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 167112,
          "rowCount" : 1899,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: Inner, (ca_county#64 = ca_county#515) "
        },
        "88" : {
          "sign" : 1616928942,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 14972593792,
          "rowCount" : 71983624,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ws_sold_time_sk#663, ws_ship_date_sk#664, ws_item_sk#665, ws_bill_customer_sk#666, ws_bill_cdemo_sk#667, ws_bill_hdemo_sk#668, ws_bill_addr_sk#669, ws_ship_customer_sk#670, ws_ship_cdemo_sk#671, ws_ship_hdemo_sk#672, ws_ship_addr_sk#673, ws_web_page_sk#674, ws_web_site_sk#675, ws_ship_mode_sk#676, ws_warehouse_sk#677, ws_promo_sk#678, ws_order_number#679L, ws_quantity#680, ws_wholesale_cost#681, ws_list_price#682, ws_sales_price#683, ws_ext_discount_amt#684, ws_ext_sales_price#685, ws_ext_wholesale_cost#686, ... 10 more fields], `spark_catalog`.`tpcds_100`.`web_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "77" : {
          "sign" : -1371662158,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 17970054,
          "rowCount" : 73049,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#621, d_date_id#622, d_date#623, d_month_seq#624, d_week_seq#625, d_quarter_seq#626, d_year#627, d_dow#628, d_moy#629, d_dom#630, d_qoy#631, d_fy_year#632, d_fy_quarter_seq#633, d_fy_week_seq#634, d_day_name#635, d_quarter_name#636, d_holiday#637, d_weekend#638, d_following_holiday#639, d_first_dom#640, d_last_dom#641, d_same_day_ly#642, d_same_day_lq#643, d_current_day#644, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "40" : {
          "sign" : 1417043455,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 6304008672,
          "rowCount" : 262667028,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [ss_addr_sk#11, ss_ext_sales_price#20, ss_sold_date_sk#28] "
        },
        "15" : {
          "sign" : -1875902391,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 2900,
          "rowCount" : 145,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [d_date_sk#480, d_year#486, d_qoy#490] "
        },
        "11" : {
          "sign" : -2114286340,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 9559461060,
          "rowCount" : 265540585,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#479 = d_date_sk#480) "
        },
        "90" : {
          "sign" : 387439233,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 36408,
          "rowCount" : 148,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: (((isnotnull(d_qoy#707) AND isnotnull(d_year#703)) AND ((d_qoy#707 = 3) AND (d_year#703 = 2000))) AND isnotnull(d_date_sk#697)) "
        },
        "9" : {
          "sign" : 1295612691,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 15963519104,
          "rowCount" : 275233088,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: Inner, (ss_addr_sk#462 = ca_address_sk#508) "
        },
        "44" : {
          "sign" : 1105724623,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 35670,
          "rowCount" : 145,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: (((isnotnull(d_qoy#39) AND isnotnull(d_year#35)) AND ((d_qoy#39 = 1) AND (d_year#35 = 2000))) AND isnotnull(d_date_sk#29)) "
        },
        "33" : {
          "sign" : 651043418,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 238631070,
          "rowCount" : 970045,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: (isnotnull(ca_address_sk#573) AND isnotnull(ca_county#580)) "
        },
        "22" : {
          "sign" : 2129482703,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 13761654400,
          "rowCount" : 275233088,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [ss_ext_sales_price#536, d_year#551, d_qoy#555, ca_county#580] "
        },
        "56" : {
          "sign" : 1523575094,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 1945876940,
          "rowCount" : 69495605,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [ws_bill_addr_sk#76, ws_ext_sales_price#92, d_year#110, d_qoy#114] "
        },
        "55" : {
          "sign" : 1433539233,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 4175024092,
          "rowCount" : 71983174,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: Inner, (ws_bill_addr_sk#76 = ca_address_sk#132) "
        },
        "26" : {
          "sign" : 2030142331,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 6304008672,
          "rowCount" : 262667028,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [ss_addr_sk#527, ss_ext_sales_price#536, ss_sold_date_sk#544] "
        },
        "50" : {
          "sign" : -2662341,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 159516,
          "rowCount" : 1899,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: Inner, (ca_county#139 = ca_county#732) "
        },
        "37" : {
          "sign" : 373652220,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 15963519104,
          "rowCount" : 275233088,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: Inner, (ss_addr_sk#11 = ca_address_sk#57) "
        },
        "68" : {
          "sign" : -1459183994,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 3599158700,
          "rowCount" : 71983174,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [ws_ext_sales_price#609, d_year#627, d_qoy#631, ca_county#656] "
        },
        "61" : {
          "sign" : 1128016121,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 2900,
          "rowCount" : 145,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [d_date_sk#104, d_year#110, d_qoy#114] "
        },
        "13" : {
          "sign" : -1787487650,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 39925388256,
          "rowCount" : 262667028,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: ((isnotnull(ss_sold_date_sk#479) AND isnotnull(ss_addr_sk#462)) AND dynamicpruning#739 [ss_sold_date_sk#479]) "
        },
        "46" : {
          "sign" : 1022807155,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 36861710,
          "rowCount" : 970045,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [ca_address_sk#57, ca_county#64] "
        },
        "24" : {
          "sign" : 1767166692,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 7435136380,
          "rowCount" : 265540585,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [ss_addr_sk#527, ss_ext_sales_price#536, d_year#551, d_qoy#555] "
        },
        "94" : {
          "sign" : -1240182090,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 246000000,
          "rowCount" : 1000000,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ca_address_sk#725, ca_address_id#726, ca_street_number#727, ca_street_name#728, ca_street_type#729, ca_suite_number#730, ca_city#731, ca_county#732, ca_state#733, ca_zip#734, ca_country#735, ca_gmt_offset#736, ca_location_type#737], `spark_catalog`.`tpcds_100`.`customer_address`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "83" : {
          "sign" : 1034748195,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 4175024092,
          "rowCount" : 71983174,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: Inner, (ws_bill_addr_sk#669 = ca_address_sk#725) "
        },
        "35" : {
          "sign" : -1292314681,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
          "sizeInBytes" : 87354,
          "rowCount" : 1899,
          "isRuntime" : false,
          "predicate" : " (unknown) Aggregate Arguments: [ca_county#64, d_qoy#39, d_year#35], [ca_county#64, d_year#35, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#20)),17,2) AS store_sales#4] "
        },
        "16" : {
          "sign" : -114619760,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 35670,
          "rowCount" : 145,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: (((isnotnull(d_qoy#490) AND isnotnull(d_year#486)) AND ((d_qoy#490 = 2) AND (d_year#486 = 2000))) AND isnotnull(d_date_sk#480)) "
        },
        "79" : {
          "sign" : 1717616206,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 238631070,
          "rowCount" : 970045,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: (isnotnull(ca_address_sk#649) AND isnotnull(ca_county#656)) "
        },
        "5" : {
          "sign" : -1203188641,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 94950,
          "rowCount" : 1899,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [ca_county#515, store_sales#156, store_sales#160] "
        },
        "72" : {
          "sign" : 1302320942,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 1727172072,
          "rowCount" : 71965503,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [ws_bill_addr_sk#593, ws_ext_sales_price#609, ws_sold_date_sk#620] "
        },
        "10" : {
          "sign" : -220974112,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 7435136380,
          "rowCount" : 265540585,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [ss_addr_sk#462, ss_ext_sales_price#471, d_year#486, d_qoy#490] "
        },
        "59" : {
          "sign" : 920868796,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 14968824624,
          "rowCount" : 71965503,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: ((isnotnull(ws_sold_date_sk#103) AND isnotnull(ws_bill_addr_sk#76)) AND dynamicpruning#742 [ws_sold_date_sk#103]) "
        },
        "87" : {
          "sign" : -1035241372,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 14968824624,
          "rowCount" : 71965503,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: ((isnotnull(ws_sold_date_sk#696) AND isnotnull(ws_bill_addr_sk#669)) AND dynamicpruning#744 [ws_sold_date_sk#696]) "
        },
        "48" : {
          "sign" : 630235330,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 246000000,
          "rowCount" : 1000000,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ca_address_sk#57, ca_address_id#58, ca_street_number#59, ca_street_name#60, ca_street_type#61, ca_suite_number#62, ca_city#63, ca_county#64, ca_state#65, ca_zip#66, ca_country#67, ca_gmt_offset#68, ca_location_type#69], `spark_catalog`.`tpcds_100`.`customer_address`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "21" : {
          "sign" : 1318027709,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
          "sizeInBytes" : 79758,
          "rowCount" : 1899,
          "isRuntime" : false,
          "predicate" : " (unknown) Aggregate Arguments: [ca_county#580, d_qoy#555, d_year#551], [ca_county#580, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#536)),17,2) AS store_sales#160] "
        },
        "76" : {
          "sign" : 360637837,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 35670,
          "rowCount" : 145,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: (((isnotnull(d_qoy#631) AND isnotnull(d_year#627)) AND ((d_qoy#631 = 2) AND (d_year#627 = 2000))) AND isnotnull(d_date_sk#621)) "
        },
        "54" : {
          "sign" : -1161281038,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 3599158700,
          "rowCount" : 71983174,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [ws_ext_sales_price#92, d_year#110, d_qoy#114, ca_county#139] "
        },
        "43" : {
          "sign" : 1118914342,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 2900,
          "rowCount" : 145,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [d_date_sk#29, d_year#35, d_qoy#39] "
        },
        "65" : {
          "sign" : 1141510159,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 238631070,
          "rowCount" : 970045,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: (isnotnull(ca_address_sk#132) AND isnotnull(ca_county#139)) "
        },
        "71" : {
          "sign" : 606399018,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 2501841780,
          "rowCount" : 69495605,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: Inner, (ws_sold_date_sk#620 = d_date_sk#621) "
        },
        "57" : {
          "sign" : -1506812021,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 2501841780,
          "rowCount" : 69495605,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: Inner, (ws_sold_date_sk#103 = d_date_sk#104) "
        },
        "32" : {
          "sign" : 1579209626,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 36861710,
          "rowCount" : 970045,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [ca_address_sk#573, ca_county#580] "
        },
        "80" : {
          "sign" : -1758653737,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 246000000,
          "rowCount" : 1000000,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ca_address_sk#649, ca_address_id#650, ca_street_number#651, ca_street_name#652, ca_street_type#653, ca_suite_number#654, ca_city#655, ca_county#656, ca_state#657, ca_zip#658, ca_country#659, ca_gmt_offset#660, ca_location_type#661], `spark_catalog`.`tpcds_100`.`customer_address`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "82" : {
          "sign" : -290920263,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 3599158700,
          "rowCount" : 71983174,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [ws_ext_sales_price#685, d_year#703, d_qoy#707, ca_county#732] "
        },
        "49" : {
          "sign" : -1392424764,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 110142,
          "rowCount" : 1899,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [ca_county#139, web_sales#5, web_sales#164, web_sales#168] "
        },
        "6" : {
          "sign" : 1381008336,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 144324,
          "rowCount" : 1899,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: Inner, (ca_county#515 = ca_county#580) "
        },
        "36" : {
          "sign" : 1465138683,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 13761654400,
          "rowCount" : 275233088,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [ss_ext_sales_price#20, d_year#35, d_qoy#39, ca_county#64] "
        },
        "1" : {
          "sign" : 236439010,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 193698,
          "rowCount" : 1899,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [ca_county#64, d_year#35, (web_sales#164 / web_sales#5) AS web_q1_q2_increase#0, (store_sales#156 / store_sales#4) AS store_q1_q2_increase#1, (web_sales#168 / web_sales#164) AS web_q2_q3_increase#2, (store_sales#160 / store_sales#156) AS store_q2_q3_increase#3] "
        },
        "39" : {
          "sign" : 1839376892,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 9559461060,
          "rowCount" : 265540585,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#28 = d_date_sk#29) "
        },
        "17" : {
          "sign" : 550579660,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 17970054,
          "rowCount" : 73049,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#480, d_date_id#481, d_date#482, d_month_seq#483, d_week_seq#484, d_quarter_seq#485, d_year#486, d_dow#487, d_moy#488, d_dom#489, d_qoy#490, d_fy_year#491, d_fy_quarter_seq#492, d_fy_week_seq#493, d_day_name#494, d_quarter_name#495, d_holiday#496, d_weekend#497, d_following_holiday#498, d_first_dom#499, d_last_dom#500, d_same_day_ly#501, d_same_day_lq#502, d_current_day#503, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "25" : {
          "sign" : -1559651559,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 9559461060,
          "rowCount" : 265540585,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#544 = d_date_sk#545) "
        },
        "60" : {
          "sign" : -1030223128,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 14972593792,
          "rowCount" : 71983624,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ws_sold_time_sk#70, ws_ship_date_sk#71, ws_item_sk#72, ws_bill_customer_sk#73, ws_bill_cdemo_sk#74, ws_bill_hdemo_sk#75, ws_bill_addr_sk#76, ws_ship_customer_sk#77, ws_ship_cdemo_sk#78, ws_ship_hdemo_sk#79, ws_ship_addr_sk#80, ws_web_page_sk#81, ws_web_site_sk#82, ws_ship_mode_sk#83, ws_warehouse_sk#84, ws_promo_sk#85, ws_order_number#86L, ws_quantity#87, ws_wholesale_cost#88, ws_list_price#89, ws_sales_price#90, ws_ext_discount_amt#91, ws_ext_sales_price#92, ws_ext_wholesale_cost#93, ... 10 more fields], `spark_catalog`.`tpcds_100`.`web_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "14" : {
          "sign" : 1115932473,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 41806893656,
          "rowCount" : 275045353,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#457, ss_item_sk#458, ss_customer_sk#459, ss_cdemo_sk#460, ss_hdemo_sk#461, ss_addr_sk#462, ss_store_sk#463, ss_promo_sk#464, ss_ticket_number#465L, ss_quantity#466, ss_wholesale_cost#467, ss_list_price#468, ss_sales_price#469, ss_ext_discount_amt#470, ss_ext_sales_price#471, ss_ext_wholesale_cost#472, ss_ext_list_price#473, ss_ext_tax#474, ss_coupon_amt#475, ss_net_paid#476, ss_net_paid_inc_tax#477, ss_net_profit#478, ss_sold_date_sk#479], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "47" : {
          "sign" : 1929573287,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 238631070,
          "rowCount" : 970045,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: (isnotnull(ca_address_sk#57) AND isnotnull(ca_county#64)) "
        },
        "31" : {
          "sign" : -1655861494,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 17970054,
          "rowCount" : 73049,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#545, d_date_id#546, d_date#547, d_month_seq#548, d_week_seq#549, d_quarter_seq#550, d_year#551, d_dow#552, d_moy#553, d_dom#554, d_qoy#555, d_fy_year#556, d_fy_quarter_seq#557, d_fy_week_seq#558, d_day_name#559, d_quarter_name#560, d_holiday#561, d_weekend#562, d_following_holiday#563, d_first_dom#564, d_last_dom#565, d_same_day_ly#566, d_same_day_lq#567, d_current_day#568, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "69" : {
          "sign" : 2039427900,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 4175024092,
          "rowCount" : 71983174,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: Inner, (ws_bill_addr_sk#593 = ca_address_sk#649) "
        },
        "58" : {
          "sign" : 688759407,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 1727172072,
          "rowCount" : 71965503,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [ws_bill_addr_sk#76, ws_ext_sales_price#92, ws_sold_date_sk#103] "
        },
        "64" : {
          "sign" : 405827172,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 36861710,
          "rowCount" : 970045,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [ca_address_sk#132, ca_county#139] "
        },
        "53" : {
          "sign" : 1137720444,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
          "sizeInBytes" : 79758,
          "rowCount" : 1899,
          "isRuntime" : false,
          "predicate" : " (unknown) Aggregate Arguments: [ca_county#139, d_qoy#114, d_year#110], [ca_county#139, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#92)),17,2) AS web_sales#5] "
        },
        "42" : {
          "sign" : 1954421237,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 41806893656,
          "rowCount" : 275045353,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#6, ss_item_sk#7, ss_customer_sk#8, ss_cdemo_sk#9, ss_hdemo_sk#10, ss_addr_sk#11, ss_store_sk#12, ss_promo_sk#13, ss_ticket_number#14L, ss_quantity#15, ss_wholesale_cost#16, ss_list_price#17, ss_sales_price#18, ss_ext_discount_amt#19, ss_ext_sales_price#20, ss_ext_wholesale_cost#21, ss_ext_list_price#22, ss_ext_tax#23, ss_coupon_amt#24, ss_net_paid#25, ss_net_paid_inc_tax#26, ss_net_profit#27, ss_sold_date_sk#28], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "75" : {
          "sign" : 869463407,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 2900,
          "rowCount" : 145,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [d_date_sk#621, d_year#627, d_qoy#631] "
        },
        "0" : {
          "sign" : -1923620264,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
          "sizeInBytes" : 193698,
          "rowCount" : 1899,
          "isRuntime" : false,
          "predicate" : " (unknown) Sort Arguments: [d_year#35 ASC NULLS FIRST], true "
        },
        "20" : {
          "sign" : 342365635,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 246000000,
          "rowCount" : 1000000,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ca_address_sk#508, ca_address_id#509, ca_street_number#510, ca_street_name#511, ca_street_type#512, ca_suite_number#513, ca_city#514, ca_county#515, ca_state#516, ca_zip#517, ca_country#518, ca_gmt_offset#519, ca_location_type#520], `spark_catalog`.`tpcds_100`.`customer_address`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "27" : {
          "sign" : 50896969,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 39925388256,
          "rowCount" : 262667028,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: ((isnotnull(ss_sold_date_sk#544) AND isnotnull(ss_addr_sk#527)) AND dynamicpruning#740 [ss_sold_date_sk#544]) "
        },
        "70" : {
          "sign" : 649087564,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 1945876940,
          "rowCount" : 69495605,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [ws_bill_addr_sk#593, ws_ext_sales_price#609, d_year#627, d_qoy#631] "
        },
        "2" : {
          "sign" : -691817861,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 212688,
          "rowCount" : 1899,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: Inner, (((ca_county#64 = ca_county#139) AND (CASE WHEN (web_sales#5 > 0.00) THEN (web_sales#164 / web_sales#5) END > CASE WHEN (store_sales#4 > 0.00) THEN (store_sales#156 / store_sales#4) END)) AND (CASE WHEN (web_sales#164 > 0.00) THEN (web_sales#168 / web_sales#164) END > CASE WHEN (store_sales#156 > 0.00) THEN (store_sales#160 / store_sales#156) END)) "
        },
        "86" : {
          "sign" : -1336705728,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 1727172072,
          "rowCount" : 71965503,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [ws_bill_addr_sk#669, ws_ext_sales_price#685, ws_sold_date_sk#696] "
        },
        "38" : {
          "sign" : -1510936669,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 7435136380,
          "rowCount" : 265540585,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [ss_addr_sk#11, ss_ext_sales_price#20, d_year#35, d_qoy#39] "
        },
        "81" : {
          "sign" : -771102997,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
          "sizeInBytes" : 79758,
          "rowCount" : 1899,
          "isRuntime" : false,
          "predicate" : " (unknown) Aggregate Arguments: [ca_county#732, d_qoy#707, d_year#703], [ca_county#732, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#685)),17,2) AS web_sales#168] "
        },
        "92" : {
          "sign" : 94590829,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 36861710,
          "rowCount" : 970045,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [ca_address_sk#725, ca_county#732] "
        },
        "18" : {
          "sign" : 1272354106,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 36861710,
          "rowCount" : 970045,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [ca_address_sk#508, ca_county#515] "
        },
        "30" : {
          "sign" : 1384568643,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 36408,
          "rowCount" : 148,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: (((isnotnull(d_qoy#555) AND isnotnull(d_year#551)) AND ((d_qoy#555 = 3) AND (d_year#551 = 2000))) AND isnotnull(d_date_sk#545)) "
        },
        "7" : {
          "sign" : -1908077020,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
          "sizeInBytes" : 79758,
          "rowCount" : 1899,
          "isRuntime" : false,
          "predicate" : " (unknown) Aggregate Arguments: [ca_county#515, d_qoy#490, d_year#486], [ca_county#515, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#471)),17,2) AS store_sales#156] "
        },
        "29" : {
          "sign" : -514463309,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 2960,
          "rowCount" : 148,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [d_date_sk#545, d_year#551, d_qoy#555] "
        },
        "41" : {
          "sign" : -491129524,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 39925388256,
          "rowCount" : 262667028,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: ((isnotnull(ss_sold_date_sk#28) AND isnotnull(ss_addr_sk#11)) AND dynamicpruning#741 [ss_sold_date_sk#28]) "
        },
        "63" : {
          "sign" : 886901394,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 17970054,
          "rowCount" : 73049,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#104, d_date_id#105, d_date#106, d_month_seq#107, d_week_seq#108, d_quarter_seq#109, d_year#110, d_dow#111, d_moy#112, d_dom#113, d_qoy#114, d_fy_year#115, d_fy_quarter_seq#116, d_fy_week_seq#117, d_day_name#118, d_quarter_name#119, d_holiday#120, d_weekend#121, d_following_holiday#122, d_first_dom#123, d_last_dom#124, d_same_day_ly#125, d_same_day_lq#126, d_current_day#127, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "3" : {
          "sign" : 1986219134,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 117738,
          "rowCount" : 1899,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [store_sales#156, store_sales#160, ca_county#64, d_year#35, store_sales#4] "
        },
        "74" : {
          "sign" : 419190534,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 14972593792,
          "rowCount" : 71983624,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ws_sold_time_sk#587, ws_ship_date_sk#588, ws_item_sk#589, ws_bill_customer_sk#590, ws_bill_cdemo_sk#591, ws_bill_hdemo_sk#592, ws_bill_addr_sk#593, ws_ship_customer_sk#594, ws_ship_cdemo_sk#595, ws_ship_hdemo_sk#596, ws_ship_addr_sk#597, ws_web_page_sk#598, ws_web_site_sk#599, ws_ship_mode_sk#600, ws_warehouse_sk#601, ws_promo_sk#602, ws_order_number#603L, ws_quantity#604, ws_wholesale_cost#605, ws_list_price#606, ws_sales_price#607, ws_ext_discount_amt#608, ws_ext_sales_price#609, ws_ext_wholesale_cost#610, ... 10 more fields], `spark_catalog`.`tpcds_100`.`web_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "91" : {
          "sign" : 231957148,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 17970054,
          "rowCount" : 73049,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#697, d_date_id#698, d_date#699, d_month_seq#700, d_week_seq#701, d_quarter_seq#702, d_year#703, d_dow#704, d_moy#705, d_dom#706, d_qoy#707, d_fy_year#708, d_fy_quarter_seq#709, d_fy_week_seq#710, d_day_name#711, d_quarter_name#712, d_holiday#713, d_weekend#714, d_following_holiday#715, d_first_dom#716, d_last_dom#717, d_same_day_ly#718, d_same_day_lq#719, d_current_day#720, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "52" : {
          "sign" : 1129347298,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 144324,
          "rowCount" : 1899,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: Inner, (ca_county#139 = ca_county#656) "
        },
        "85" : {
          "sign" : -1850613112,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 2501841780,
          "rowCount" : 69495605,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: Inner, (ws_sold_date_sk#696 = d_date_sk#697) "
        },
        "28" : {
          "sign" : 416032256,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 41806893656,
          "rowCount" : 275045353,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#522, ss_item_sk#523, ss_customer_sk#524, ss_cdemo_sk#525, ss_hdemo_sk#526, ss_addr_sk#527, ss_store_sk#528, ss_promo_sk#529, ss_ticket_number#530L, ss_quantity#531, ss_wholesale_cost#532, ss_list_price#533, ss_sales_price#534, ss_ext_discount_amt#535, ss_ext_sales_price#536, ss_ext_wholesale_cost#537, ss_ext_list_price#538, ss_ext_tax#539, ss_coupon_amt#540, ss_net_paid#541, ss_net_paid_inc_tax#542, ss_net_profit#543, ss_sold_date_sk#544], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        }
      },
      "links" : [ {
        "fromId" : 14,
        "fromName" : "LogicalRelation",
        "toId" : 13,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 17,
        "fromName" : "LogicalRelation",
        "toId" : 16,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 16,
        "fromName" : "Filter",
        "toId" : 15,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 15,
        "fromName" : "Project",
        "toId" : 13,
        "toName" : "Filter",
        "linkType" : "Subquery"
      }, {
        "fromId" : 13,
        "fromName" : "Filter",
        "toId" : 12,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 12,
        "fromName" : "Project",
        "toId" : 11,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 15,
        "fromName" : "Project",
        "toId" : 11,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 11,
        "fromName" : "Join",
        "toId" : 10,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 10,
        "fromName" : "Project",
        "toId" : 9,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 20,
        "fromName" : "LogicalRelation",
        "toId" : 19,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 19,
        "fromName" : "Filter",
        "toId" : 18,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 18,
        "fromName" : "Project",
        "toId" : 9,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 9,
        "fromName" : "Join",
        "toId" : 8,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 8,
        "fromName" : "Project",
        "toId" : 7,
        "toName" : "Aggregate",
        "linkType" : "Operator"
      }, {
        "fromId" : 7,
        "fromName" : "Aggregate",
        "toId" : 6,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 28,
        "fromName" : "LogicalRelation",
        "toId" : 27,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 31,
        "fromName" : "LogicalRelation",
        "toId" : 30,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 30,
        "fromName" : "Filter",
        "toId" : 29,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 29,
        "fromName" : "Project",
        "toId" : 27,
        "toName" : "Filter",
        "linkType" : "Subquery"
      }, {
        "fromId" : 27,
        "fromName" : "Filter",
        "toId" : 26,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 26,
        "fromName" : "Project",
        "toId" : 25,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 29,
        "fromName" : "Project",
        "toId" : 25,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 25,
        "fromName" : "Join",
        "toId" : 24,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 24,
        "fromName" : "Project",
        "toId" : 23,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 34,
        "fromName" : "LogicalRelation",
        "toId" : 33,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 33,
        "fromName" : "Filter",
        "toId" : 32,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 32,
        "fromName" : "Project",
        "toId" : 23,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 23,
        "fromName" : "Join",
        "toId" : 22,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 22,
        "fromName" : "Project",
        "toId" : 21,
        "toName" : "Aggregate",
        "linkType" : "Operator"
      }, {
        "fromId" : 21,
        "fromName" : "Aggregate",
        "toId" : 6,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 6,
        "fromName" : "Join",
        "toId" : 5,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 5,
        "fromName" : "Project",
        "toId" : 4,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 42,
        "fromName" : "LogicalRelation",
        "toId" : 41,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 45,
        "fromName" : "LogicalRelation",
        "toId" : 44,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 44,
        "fromName" : "Filter",
        "toId" : 43,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 43,
        "fromName" : "Project",
        "toId" : 41,
        "toName" : "Filter",
        "linkType" : "Subquery"
      }, {
        "fromId" : 41,
        "fromName" : "Filter",
        "toId" : 40,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 40,
        "fromName" : "Project",
        "toId" : 39,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 43,
        "fromName" : "Project",
        "toId" : 39,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 39,
        "fromName" : "Join",
        "toId" : 38,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 38,
        "fromName" : "Project",
        "toId" : 37,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 48,
        "fromName" : "LogicalRelation",
        "toId" : 47,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 47,
        "fromName" : "Filter",
        "toId" : 46,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 46,
        "fromName" : "Project",
        "toId" : 37,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 37,
        "fromName" : "Join",
        "toId" : 36,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 36,
        "fromName" : "Project",
        "toId" : 35,
        "toName" : "Aggregate",
        "linkType" : "Operator"
      }, {
        "fromId" : 35,
        "fromName" : "Aggregate",
        "toId" : 4,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 4,
        "fromName" : "Join",
        "toId" : 3,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 3,
        "fromName" : "Project",
        "toId" : 2,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 60,
        "fromName" : "LogicalRelation",
        "toId" : 59,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 63,
        "fromName" : "LogicalRelation",
        "toId" : 62,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 62,
        "fromName" : "Filter",
        "toId" : 61,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 61,
        "fromName" : "Project",
        "toId" : 59,
        "toName" : "Filter",
        "linkType" : "Subquery"
      }, {
        "fromId" : 59,
        "fromName" : "Filter",
        "toId" : 58,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 58,
        "fromName" : "Project",
        "toId" : 57,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 61,
        "fromName" : "Project",
        "toId" : 57,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 57,
        "fromName" : "Join",
        "toId" : 56,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 56,
        "fromName" : "Project",
        "toId" : 55,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 66,
        "fromName" : "LogicalRelation",
        "toId" : 65,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 65,
        "fromName" : "Filter",
        "toId" : 64,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 64,
        "fromName" : "Project",
        "toId" : 55,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 55,
        "fromName" : "Join",
        "toId" : 54,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 54,
        "fromName" : "Project",
        "toId" : 53,
        "toName" : "Aggregate",
        "linkType" : "Operator"
      }, {
        "fromId" : 53,
        "fromName" : "Aggregate",
        "toId" : 52,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 74,
        "fromName" : "LogicalRelation",
        "toId" : 73,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 77,
        "fromName" : "LogicalRelation",
        "toId" : 76,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 76,
        "fromName" : "Filter",
        "toId" : 75,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 75,
        "fromName" : "Project",
        "toId" : 73,
        "toName" : "Filter",
        "linkType" : "Subquery"
      }, {
        "fromId" : 73,
        "fromName" : "Filter",
        "toId" : 72,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 72,
        "fromName" : "Project",
        "toId" : 71,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 75,
        "fromName" : "Project",
        "toId" : 71,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 71,
        "fromName" : "Join",
        "toId" : 70,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 70,
        "fromName" : "Project",
        "toId" : 69,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 80,
        "fromName" : "LogicalRelation",
        "toId" : 79,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 79,
        "fromName" : "Filter",
        "toId" : 78,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 78,
        "fromName" : "Project",
        "toId" : 69,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 69,
        "fromName" : "Join",
        "toId" : 68,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 68,
        "fromName" : "Project",
        "toId" : 67,
        "toName" : "Aggregate",
        "linkType" : "Operator"
      }, {
        "fromId" : 67,
        "fromName" : "Aggregate",
        "toId" : 52,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 52,
        "fromName" : "Join",
        "toId" : 51,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 51,
        "fromName" : "Project",
        "toId" : 50,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 88,
        "fromName" : "LogicalRelation",
        "toId" : 87,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 91,
        "fromName" : "LogicalRelation",
        "toId" : 90,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 90,
        "fromName" : "Filter",
        "toId" : 89,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 89,
        "fromName" : "Project",
        "toId" : 87,
        "toName" : "Filter",
        "linkType" : "Subquery"
      }, {
        "fromId" : 87,
        "fromName" : "Filter",
        "toId" : 86,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 86,
        "fromName" : "Project",
        "toId" : 85,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 89,
        "fromName" : "Project",
        "toId" : 85,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 85,
        "fromName" : "Join",
        "toId" : 84,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 84,
        "fromName" : "Project",
        "toId" : 83,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 94,
        "fromName" : "LogicalRelation",
        "toId" : 93,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 93,
        "fromName" : "Filter",
        "toId" : 92,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 92,
        "fromName" : "Project",
        "toId" : 83,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 83,
        "fromName" : "Join",
        "toId" : 82,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 82,
        "fromName" : "Project",
        "toId" : 81,
        "toName" : "Aggregate",
        "linkType" : "Operator"
      }, {
        "fromId" : 81,
        "fromName" : "Aggregate",
        "toId" : 50,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 50,
        "fromName" : "Join",
        "toId" : 49,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 49,
        "fromName" : "Project",
        "toId" : 2,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 2,
        "fromName" : "Join",
        "toId" : 1,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 1,
        "fromName" : "Project",
        "toId" : 0,
        "toName" : "Sort",
        "linkType" : "Operator"
      } ],
      "rawPlan" : "Sort [d_year#35 ASC NULLS FIRST], true\n+- Project [ca_county#64, d_year#35, (web_sales#164 / web_sales#5) AS web_q1_q2_increase#0, (store_sales#156 / store_sales#4) AS store_q1_q2_increase#1, (web_sales#168 / web_sales#164) AS web_q2_q3_increase#2, (store_sales#160 / store_sales#156) AS store_q2_q3_increase#3]\n   +- Join Inner, (((ca_county#64 = ca_county#139) AND (CASE WHEN (web_sales#5 > 0.00) THEN (web_sales#164 / web_sales#5) END > CASE WHEN (store_sales#4 > 0.00) THEN (store_sales#156 / store_sales#4) END)) AND (CASE WHEN (web_sales#164 > 0.00) THEN (web_sales#168 / web_sales#164) END > CASE WHEN (store_sales#156 > 0.00) THEN (store_sales#160 / store_sales#156) END))\n      :- Project [store_sales#156, store_sales#160, ca_county#64, d_year#35, store_sales#4]\n      :  +- Join Inner, (ca_county#64 = ca_county#515)\n      :     :- Project [ca_county#515, store_sales#156, store_sales#160]\n      :     :  +- Join Inner, (ca_county#515 = ca_county#580)\n      :     :     :- Aggregate [ca_county#515, d_qoy#490, d_year#486], [ca_county#515, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#471)),17,2) AS store_sales#156]\n      :     :     :  +- Project [ss_ext_sales_price#471, d_year#486, d_qoy#490, ca_county#515]\n      :     :     :     +- Join Inner, (ss_addr_sk#462 = ca_address_sk#508)\n      :     :     :        :- Project [ss_addr_sk#462, ss_ext_sales_price#471, d_year#486, d_qoy#490]\n      :     :     :        :  +- Join Inner, (ss_sold_date_sk#479 = d_date_sk#480)\n      :     :     :        :     :- Project [ss_addr_sk#462, ss_ext_sales_price#471, ss_sold_date_sk#479]\n      :     :     :        :     :  +- Filter ((isnotnull(ss_sold_date_sk#479) AND isnotnull(ss_addr_sk#462)) AND dynamicpruning#739 [ss_sold_date_sk#479])\n      :     :     :        :     :     :  +- Project [d_date_sk#480, d_year#486, d_qoy#490]\n      :     :     :        :     :     :     +- Filter (((isnotnull(d_qoy#490) AND isnotnull(d_year#486)) AND ((d_qoy#490 = 2) AND (d_year#486 = 2000))) AND isnotnull(d_date_sk#480))\n      :     :     :        :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#480,d_date_id#481,d_date#482,d_month_seq#483,d_week_seq#484,d_quarter_seq#485,d_year#486,d_dow#487,d_moy#488,d_dom#489,d_qoy#490,d_fy_year#491,d_fy_quarter_seq#492,d_fy_week_seq#493,d_day_name#494,d_quarter_name#495,d_holiday#496,d_weekend#497,d_following_holiday#498,d_first_dom#499,d_last_dom#500,d_same_day_ly#501,d_same_day_lq#502,d_current_day#503,... 4 more fields] parquet\n      :     :     :        :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#457,ss_item_sk#458,ss_customer_sk#459,ss_cdemo_sk#460,ss_hdemo_sk#461,ss_addr_sk#462,ss_store_sk#463,ss_promo_sk#464,ss_ticket_number#465L,ss_quantity#466,ss_wholesale_cost#467,ss_list_price#468,ss_sales_price#469,ss_ext_discount_amt#470,ss_ext_sales_price#471,ss_ext_wholesale_cost#472,ss_ext_list_price#473,ss_ext_tax#474,ss_coupon_amt#475,ss_net_paid#476,ss_net_paid_inc_tax#477,ss_net_profit#478,ss_sold_date_sk#479] parquet\n      :     :     :        :     +- Project [d_date_sk#480, d_year#486, d_qoy#490]\n      :     :     :        :        +- Filter (((isnotnull(d_qoy#490) AND isnotnull(d_year#486)) AND ((d_qoy#490 = 2) AND (d_year#486 = 2000))) AND isnotnull(d_date_sk#480))\n      :     :     :        :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#480,d_date_id#481,d_date#482,d_month_seq#483,d_week_seq#484,d_quarter_seq#485,d_year#486,d_dow#487,d_moy#488,d_dom#489,d_qoy#490,d_fy_year#491,d_fy_quarter_seq#492,d_fy_week_seq#493,d_day_name#494,d_quarter_name#495,d_holiday#496,d_weekend#497,d_following_holiday#498,d_first_dom#499,d_last_dom#500,d_same_day_ly#501,d_same_day_lq#502,d_current_day#503,... 4 more fields] parquet\n      :     :     :        +- Project [ca_address_sk#508, ca_county#515]\n      :     :     :           +- Filter (isnotnull(ca_address_sk#508) AND isnotnull(ca_county#515))\n      :     :     :              +- Relation spark_catalog.tpcds_100.customer_address[ca_address_sk#508,ca_address_id#509,ca_street_number#510,ca_street_name#511,ca_street_type#512,ca_suite_number#513,ca_city#514,ca_county#515,ca_state#516,ca_zip#517,ca_country#518,ca_gmt_offset#519,ca_location_type#520] parquet\n      :     :     +- Aggregate [ca_county#580, d_qoy#555, d_year#551], [ca_county#580, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#536)),17,2) AS store_sales#160]\n      :     :        +- Project [ss_ext_sales_price#536, d_year#551, d_qoy#555, ca_county#580]\n      :     :           +- Join Inner, (ss_addr_sk#527 = ca_address_sk#573)\n      :     :              :- Project [ss_addr_sk#527, ss_ext_sales_price#536, d_year#551, d_qoy#555]\n      :     :              :  +- Join Inner, (ss_sold_date_sk#544 = d_date_sk#545)\n      :     :              :     :- Project [ss_addr_sk#527, ss_ext_sales_price#536, ss_sold_date_sk#544]\n      :     :              :     :  +- Filter ((isnotnull(ss_sold_date_sk#544) AND isnotnull(ss_addr_sk#527)) AND dynamicpruning#740 [ss_sold_date_sk#544])\n      :     :              :     :     :  +- Project [d_date_sk#545, d_year#551, d_qoy#555]\n      :     :              :     :     :     +- Filter (((isnotnull(d_qoy#555) AND isnotnull(d_year#551)) AND ((d_qoy#555 = 3) AND (d_year#551 = 2000))) AND isnotnull(d_date_sk#545))\n      :     :              :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#545,d_date_id#546,d_date#547,d_month_seq#548,d_week_seq#549,d_quarter_seq#550,d_year#551,d_dow#552,d_moy#553,d_dom#554,d_qoy#555,d_fy_year#556,d_fy_quarter_seq#557,d_fy_week_seq#558,d_day_name#559,d_quarter_name#560,d_holiday#561,d_weekend#562,d_following_holiday#563,d_first_dom#564,d_last_dom#565,d_same_day_ly#566,d_same_day_lq#567,d_current_day#568,... 4 more fields] parquet\n      :     :              :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#522,ss_item_sk#523,ss_customer_sk#524,ss_cdemo_sk#525,ss_hdemo_sk#526,ss_addr_sk#527,ss_store_sk#528,ss_promo_sk#529,ss_ticket_number#530L,ss_quantity#531,ss_wholesale_cost#532,ss_list_price#533,ss_sales_price#534,ss_ext_discount_amt#535,ss_ext_sales_price#536,ss_ext_wholesale_cost#537,ss_ext_list_price#538,ss_ext_tax#539,ss_coupon_amt#540,ss_net_paid#541,ss_net_paid_inc_tax#542,ss_net_profit#543,ss_sold_date_sk#544] parquet\n      :     :              :     +- Project [d_date_sk#545, d_year#551, d_qoy#555]\n      :     :              :        +- Filter (((isnotnull(d_qoy#555) AND isnotnull(d_year#551)) AND ((d_qoy#555 = 3) AND (d_year#551 = 2000))) AND isnotnull(d_date_sk#545))\n      :     :              :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#545,d_date_id#546,d_date#547,d_month_seq#548,d_week_seq#549,d_quarter_seq#550,d_year#551,d_dow#552,d_moy#553,d_dom#554,d_qoy#555,d_fy_year#556,d_fy_quarter_seq#557,d_fy_week_seq#558,d_day_name#559,d_quarter_name#560,d_holiday#561,d_weekend#562,d_following_holiday#563,d_first_dom#564,d_last_dom#565,d_same_day_ly#566,d_same_day_lq#567,d_current_day#568,... 4 more fields] parquet\n      :     :              +- Project [ca_address_sk#573, ca_county#580]\n      :     :                 +- Filter (isnotnull(ca_address_sk#573) AND isnotnull(ca_county#580))\n      :     :                    +- Relation spark_catalog.tpcds_100.customer_address[ca_address_sk#573,ca_address_id#574,ca_street_number#575,ca_street_name#576,ca_street_type#577,ca_suite_number#578,ca_city#579,ca_county#580,ca_state#581,ca_zip#582,ca_country#583,ca_gmt_offset#584,ca_location_type#585] parquet\n      :     +- Aggregate [ca_county#64, d_qoy#39, d_year#35], [ca_county#64, d_year#35, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#20)),17,2) AS store_sales#4]\n      :        +- Project [ss_ext_sales_price#20, d_year#35, d_qoy#39, ca_county#64]\n      :           +- Join Inner, (ss_addr_sk#11 = ca_address_sk#57)\n      :              :- Project [ss_addr_sk#11, ss_ext_sales_price#20, d_year#35, d_qoy#39]\n      :              :  +- Join Inner, (ss_sold_date_sk#28 = d_date_sk#29)\n      :              :     :- Project [ss_addr_sk#11, ss_ext_sales_price#20, ss_sold_date_sk#28]\n      :              :     :  +- Filter ((isnotnull(ss_sold_date_sk#28) AND isnotnull(ss_addr_sk#11)) AND dynamicpruning#741 [ss_sold_date_sk#28])\n      :              :     :     :  +- Project [d_date_sk#29, d_year#35, d_qoy#39]\n      :              :     :     :     +- Filter (((isnotnull(d_qoy#39) AND isnotnull(d_year#35)) AND ((d_qoy#39 = 1) AND (d_year#35 = 2000))) AND isnotnull(d_date_sk#29))\n      :              :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#29,d_date_id#30,d_date#31,d_month_seq#32,d_week_seq#33,d_quarter_seq#34,d_year#35,d_dow#36,d_moy#37,d_dom#38,d_qoy#39,d_fy_year#40,d_fy_quarter_seq#41,d_fy_week_seq#42,d_day_name#43,d_quarter_name#44,d_holiday#45,d_weekend#46,d_following_holiday#47,d_first_dom#48,d_last_dom#49,d_same_day_ly#50,d_same_day_lq#51,d_current_day#52,... 4 more fields] parquet\n      :              :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#6,ss_item_sk#7,ss_customer_sk#8,ss_cdemo_sk#9,ss_hdemo_sk#10,ss_addr_sk#11,ss_store_sk#12,ss_promo_sk#13,ss_ticket_number#14L,ss_quantity#15,ss_wholesale_cost#16,ss_list_price#17,ss_sales_price#18,ss_ext_discount_amt#19,ss_ext_sales_price#20,ss_ext_wholesale_cost#21,ss_ext_list_price#22,ss_ext_tax#23,ss_coupon_amt#24,ss_net_paid#25,ss_net_paid_inc_tax#26,ss_net_profit#27,ss_sold_date_sk#28] parquet\n      :              :     +- Project [d_date_sk#29, d_year#35, d_qoy#39]\n      :              :        +- Filter (((isnotnull(d_qoy#39) AND isnotnull(d_year#35)) AND ((d_qoy#39 = 1) AND (d_year#35 = 2000))) AND isnotnull(d_date_sk#29))\n      :              :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#29,d_date_id#30,d_date#31,d_month_seq#32,d_week_seq#33,d_quarter_seq#34,d_year#35,d_dow#36,d_moy#37,d_dom#38,d_qoy#39,d_fy_year#40,d_fy_quarter_seq#41,d_fy_week_seq#42,d_day_name#43,d_quarter_name#44,d_holiday#45,d_weekend#46,d_following_holiday#47,d_first_dom#48,d_last_dom#49,d_same_day_ly#50,d_same_day_lq#51,d_current_day#52,... 4 more fields] parquet\n      :              +- Project [ca_address_sk#57, ca_county#64]\n      :                 +- Filter (isnotnull(ca_address_sk#57) AND isnotnull(ca_county#64))\n      :                    +- Relation spark_catalog.tpcds_100.customer_address[ca_address_sk#57,ca_address_id#58,ca_street_number#59,ca_street_name#60,ca_street_type#61,ca_suite_number#62,ca_city#63,ca_county#64,ca_state#65,ca_zip#66,ca_country#67,ca_gmt_offset#68,ca_location_type#69] parquet\n      +- Project [ca_county#139, web_sales#5, web_sales#164, web_sales#168]\n         +- Join Inner, (ca_county#139 = ca_county#732)\n            :- Project [ca_county#139, web_sales#5, web_sales#164]\n            :  +- Join Inner, (ca_county#139 = ca_county#656)\n            :     :- Aggregate [ca_county#139, d_qoy#114, d_year#110], [ca_county#139, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#92)),17,2) AS web_sales#5]\n            :     :  +- Project [ws_ext_sales_price#92, d_year#110, d_qoy#114, ca_county#139]\n            :     :     +- Join Inner, (ws_bill_addr_sk#76 = ca_address_sk#132)\n            :     :        :- Project [ws_bill_addr_sk#76, ws_ext_sales_price#92, d_year#110, d_qoy#114]\n            :     :        :  +- Join Inner, (ws_sold_date_sk#103 = d_date_sk#104)\n            :     :        :     :- Project [ws_bill_addr_sk#76, ws_ext_sales_price#92, ws_sold_date_sk#103]\n            :     :        :     :  +- Filter ((isnotnull(ws_sold_date_sk#103) AND isnotnull(ws_bill_addr_sk#76)) AND dynamicpruning#742 [ws_sold_date_sk#103])\n            :     :        :     :     :  +- Project [d_date_sk#104, d_year#110, d_qoy#114]\n            :     :        :     :     :     +- Filter (((isnotnull(d_qoy#114) AND isnotnull(d_year#110)) AND ((d_qoy#114 = 1) AND (d_year#110 = 2000))) AND isnotnull(d_date_sk#104))\n            :     :        :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#104,d_date_id#105,d_date#106,d_month_seq#107,d_week_seq#108,d_quarter_seq#109,d_year#110,d_dow#111,d_moy#112,d_dom#113,d_qoy#114,d_fy_year#115,d_fy_quarter_seq#116,d_fy_week_seq#117,d_day_name#118,d_quarter_name#119,d_holiday#120,d_weekend#121,d_following_holiday#122,d_first_dom#123,d_last_dom#124,d_same_day_ly#125,d_same_day_lq#126,d_current_day#127,... 4 more fields] parquet\n            :     :        :     :     +- Relation spark_catalog.tpcds_100.web_sales[ws_sold_time_sk#70,ws_ship_date_sk#71,ws_item_sk#72,ws_bill_customer_sk#73,ws_bill_cdemo_sk#74,ws_bill_hdemo_sk#75,ws_bill_addr_sk#76,ws_ship_customer_sk#77,ws_ship_cdemo_sk#78,ws_ship_hdemo_sk#79,ws_ship_addr_sk#80,ws_web_page_sk#81,ws_web_site_sk#82,ws_ship_mode_sk#83,ws_warehouse_sk#84,ws_promo_sk#85,ws_order_number#86L,ws_quantity#87,ws_wholesale_cost#88,ws_list_price#89,ws_sales_price#90,ws_ext_discount_amt#91,ws_ext_sales_price#92,ws_ext_wholesale_cost#93,... 10 more fields] parquet\n            :     :        :     +- Project [d_date_sk#104, d_year#110, d_qoy#114]\n            :     :        :        +- Filter (((isnotnull(d_qoy#114) AND isnotnull(d_year#110)) AND ((d_qoy#114 = 1) AND (d_year#110 = 2000))) AND isnotnull(d_date_sk#104))\n            :     :        :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#104,d_date_id#105,d_date#106,d_month_seq#107,d_week_seq#108,d_quarter_seq#109,d_year#110,d_dow#111,d_moy#112,d_dom#113,d_qoy#114,d_fy_year#115,d_fy_quarter_seq#116,d_fy_week_seq#117,d_day_name#118,d_quarter_name#119,d_holiday#120,d_weekend#121,d_following_holiday#122,d_first_dom#123,d_last_dom#124,d_same_day_ly#125,d_same_day_lq#126,d_current_day#127,... 4 more fields] parquet\n            :     :        +- Project [ca_address_sk#132, ca_county#139]\n            :     :           +- Filter (isnotnull(ca_address_sk#132) AND isnotnull(ca_county#139))\n            :     :              +- Relation spark_catalog.tpcds_100.customer_address[ca_address_sk#132,ca_address_id#133,ca_street_number#134,ca_street_name#135,ca_street_type#136,ca_suite_number#137,ca_city#138,ca_county#139,ca_state#140,ca_zip#141,ca_country#142,ca_gmt_offset#143,ca_location_type#144] parquet\n            :     +- Aggregate [ca_county#656, d_qoy#631, d_year#627], [ca_county#656, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#609)),17,2) AS web_sales#164]\n            :        +- Project [ws_ext_sales_price#609, d_year#627, d_qoy#631, ca_county#656]\n            :           +- Join Inner, (ws_bill_addr_sk#593 = ca_address_sk#649)\n            :              :- Project [ws_bill_addr_sk#593, ws_ext_sales_price#609, d_year#627, d_qoy#631]\n            :              :  +- Join Inner, (ws_sold_date_sk#620 = d_date_sk#621)\n            :              :     :- Project [ws_bill_addr_sk#593, ws_ext_sales_price#609, ws_sold_date_sk#620]\n            :              :     :  +- Filter ((isnotnull(ws_sold_date_sk#620) AND isnotnull(ws_bill_addr_sk#593)) AND dynamicpruning#743 [ws_sold_date_sk#620])\n            :              :     :     :  +- Project [d_date_sk#621, d_year#627, d_qoy#631]\n            :              :     :     :     +- Filter (((isnotnull(d_qoy#631) AND isnotnull(d_year#627)) AND ((d_qoy#631 = 2) AND (d_year#627 = 2000))) AND isnotnull(d_date_sk#621))\n            :              :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#621,d_date_id#622,d_date#623,d_month_seq#624,d_week_seq#625,d_quarter_seq#626,d_year#627,d_dow#628,d_moy#629,d_dom#630,d_qoy#631,d_fy_year#632,d_fy_quarter_seq#633,d_fy_week_seq#634,d_day_name#635,d_quarter_name#636,d_holiday#637,d_weekend#638,d_following_holiday#639,d_first_dom#640,d_last_dom#641,d_same_day_ly#642,d_same_day_lq#643,d_current_day#644,... 4 more fields] parquet\n            :              :     :     +- Relation spark_catalog.tpcds_100.web_sales[ws_sold_time_sk#587,ws_ship_date_sk#588,ws_item_sk#589,ws_bill_customer_sk#590,ws_bill_cdemo_sk#591,ws_bill_hdemo_sk#592,ws_bill_addr_sk#593,ws_ship_customer_sk#594,ws_ship_cdemo_sk#595,ws_ship_hdemo_sk#596,ws_ship_addr_sk#597,ws_web_page_sk#598,ws_web_site_sk#599,ws_ship_mode_sk#600,ws_warehouse_sk#601,ws_promo_sk#602,ws_order_number#603L,ws_quantity#604,ws_wholesale_cost#605,ws_list_price#606,ws_sales_price#607,ws_ext_discount_amt#608,ws_ext_sales_price#609,ws_ext_wholesale_cost#610,... 10 more fields] parquet\n            :              :     +- Project [d_date_sk#621, d_year#627, d_qoy#631]\n            :              :        +- Filter (((isnotnull(d_qoy#631) AND isnotnull(d_year#627)) AND ((d_qoy#631 = 2) AND (d_year#627 = 2000))) AND isnotnull(d_date_sk#621))\n            :              :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#621,d_date_id#622,d_date#623,d_month_seq#624,d_week_seq#625,d_quarter_seq#626,d_year#627,d_dow#628,d_moy#629,d_dom#630,d_qoy#631,d_fy_year#632,d_fy_quarter_seq#633,d_fy_week_seq#634,d_day_name#635,d_quarter_name#636,d_holiday#637,d_weekend#638,d_following_holiday#639,d_first_dom#640,d_last_dom#641,d_same_day_ly#642,d_same_day_lq#643,d_current_day#644,... 4 more fields] parquet\n            :              +- Project [ca_address_sk#649, ca_county#656]\n            :                 +- Filter (isnotnull(ca_address_sk#649) AND isnotnull(ca_county#656))\n            :                    +- Relation spark_catalog.tpcds_100.customer_address[ca_address_sk#649,ca_address_id#650,ca_street_number#651,ca_street_name#652,ca_street_type#653,ca_suite_number#654,ca_city#655,ca_county#656,ca_state#657,ca_zip#658,ca_country#659,ca_gmt_offset#660,ca_location_type#661] parquet\n            +- Aggregate [ca_county#732, d_qoy#707, d_year#703], [ca_county#732, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#685)),17,2) AS web_sales#168]\n               +- Project [ws_ext_sales_price#685, d_year#703, d_qoy#707, ca_county#732]\n                  +- Join Inner, (ws_bill_addr_sk#669 = ca_address_sk#725)\n                     :- Project [ws_bill_addr_sk#669, ws_ext_sales_price#685, d_year#703, d_qoy#707]\n                     :  +- Join Inner, (ws_sold_date_sk#696 = d_date_sk#697)\n                     :     :- Project [ws_bill_addr_sk#669, ws_ext_sales_price#685, ws_sold_date_sk#696]\n                     :     :  +- Filter ((isnotnull(ws_sold_date_sk#696) AND isnotnull(ws_bill_addr_sk#669)) AND dynamicpruning#744 [ws_sold_date_sk#696])\n                     :     :     :  +- Project [d_date_sk#697, d_year#703, d_qoy#707]\n                     :     :     :     +- Filter (((isnotnull(d_qoy#707) AND isnotnull(d_year#703)) AND ((d_qoy#707 = 3) AND (d_year#703 = 2000))) AND isnotnull(d_date_sk#697))\n                     :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#697,d_date_id#698,d_date#699,d_month_seq#700,d_week_seq#701,d_quarter_seq#702,d_year#703,d_dow#704,d_moy#705,d_dom#706,d_qoy#707,d_fy_year#708,d_fy_quarter_seq#709,d_fy_week_seq#710,d_day_name#711,d_quarter_name#712,d_holiday#713,d_weekend#714,d_following_holiday#715,d_first_dom#716,d_last_dom#717,d_same_day_ly#718,d_same_day_lq#719,d_current_day#720,... 4 more fields] parquet\n                     :     :     +- Relation spark_catalog.tpcds_100.web_sales[ws_sold_time_sk#663,ws_ship_date_sk#664,ws_item_sk#665,ws_bill_customer_sk#666,ws_bill_cdemo_sk#667,ws_bill_hdemo_sk#668,ws_bill_addr_sk#669,ws_ship_customer_sk#670,ws_ship_cdemo_sk#671,ws_ship_hdemo_sk#672,ws_ship_addr_sk#673,ws_web_page_sk#674,ws_web_site_sk#675,ws_ship_mode_sk#676,ws_warehouse_sk#677,ws_promo_sk#678,ws_order_number#679L,ws_quantity#680,ws_wholesale_cost#681,ws_list_price#682,ws_sales_price#683,ws_ext_discount_amt#684,ws_ext_sales_price#685,ws_ext_wholesale_cost#686,... 10 more fields] parquet\n                     :     +- Project [d_date_sk#697, d_year#703, d_qoy#707]\n                     :        +- Filter (((isnotnull(d_qoy#707) AND isnotnull(d_year#703)) AND ((d_qoy#707 = 3) AND (d_year#703 = 2000))) AND isnotnull(d_date_sk#697))\n                     :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#697,d_date_id#698,d_date#699,d_month_seq#700,d_week_seq#701,d_quarter_seq#702,d_year#703,d_dow#704,d_moy#705,d_dom#706,d_qoy#707,d_fy_year#708,d_fy_quarter_seq#709,d_fy_week_seq#710,d_day_name#711,d_quarter_name#712,d_holiday#713,d_weekend#714,d_following_holiday#715,d_first_dom#716,d_last_dom#717,d_same_day_ly#718,d_same_day_lq#719,d_current_day#720,... 4 more fields] parquet\n                     +- Project [ca_address_sk#725, ca_county#732]\n                        +- Filter (isnotnull(ca_address_sk#725) AND isnotnull(ca_county#732))\n                           +- Relation spark_catalog.tpcds_100.customer_address[ca_address_sk#725,ca_address_id#726,ca_street_number#727,ca_street_name#728,ca_street_type#729,ca_suite_number#730,ca_city#731,ca_county#732,ca_state#733,ca_zip#734,ca_country#735,ca_gmt_offset#736,ca_location_type#737] parquet\n"
    },
    "IM" : {
      "inputSizeInBytes" : 171922282668,
      "inputRowCount" : 1047525225
    },
    "PD" : { },
    "Configuration" : {
      "theta_c" : [ {
        "spark.executor.memory" : "1g"
      }, {
        "spark.executor.cores" : "1"
      }, {
        "spark.executor.instances" : "16"
      }, {
        "spark.default.parallelism" : "16"
      }, {
        "spark.reducer.maxSizeInFlight" : "48m"
      }, {
        "spark.shuffle.sort.bypassMergeThreshold" : "200"
      }, {
        "spark.shuffle.compress" : "true"
      }, {
        "spark.memory.fraction" : "0.6"
      } ],
      "theta_p" : [ {
        "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
      }, {
        "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
      }, {
        "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
      }, {
        "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
      }, {
        "spark.sql.shuffle.partitions" : "200"
      }, {
        "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
      }, {
        "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
      }, {
        "spark.sql.files.maxPartitionBytes" : "128MB"
      }, {
        "spark.sql.files.openCostInBytes" : "4MB"
      } ],
      "theta_s" : [ {
        "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
      }, {
        "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
      } ]
    }
  },
  "RuntimeLQPs" : {
    "12" : {
      "LQP" : {
        "operators" : {
          "12" : {
            "sign" : -1824788195,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 3965879120638878135,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ca_county#786, web_sales#750, web_sales#807] "
          },
          "8" : {
            "sign" : -1108439567,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 79758,
            "rowCount" : 1899,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [ca_county#1223, d_qoy#1198, d_year#1194], [ca_county#1223, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#1179)),17,2) AS store_sales#803], HashAggregate(keys=[ca_county#1223, d_qoy#1198, d_year#1194], functions=[sum(UnscaledValue(ss_ext_sales_price#1179))]) "
          },
          "4" : {
            "sign" : 1813749660,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 167112,
            "rowCount" : 1899,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ca_county#64 = ca_county#1158) "
          },
          "15" : {
            "sign" : 1322015049,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 72325678279320,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [ca_county#1299, d_qoy#1274, d_year#1270], [ca_county#1299, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#1252)),17,2) AS web_sales#807], HashAggregate(keys=[ca_county#1299, d_qoy#1274, d_year#1270], functions=[sum(UnscaledValue(ws_ext_sales_price#1252))]) "
          },
          "11" : {
            "sign" : -143644081,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 133332729127747222454599680,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ca_county#786 = ca_county#1375) "
          },
          "9" : {
            "sign" : -1313788163,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 87354,
            "rowCount" : 1899,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [ca_county#64, d_qoy#39, d_year#35], [ca_county#64, d_year#35, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#20)),17,2) AS store_sales#749], HashAggregate(keys=[ca_county#64, d_qoy#39, d_year#35], functions=[sum(UnscaledValue(ss_ext_sales_price#20))]) "
          },
          "13" : {
            "sign" : 1042073860,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 5768551448202004560,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ca_county#786 = ca_county#1299) "
          },
          "16" : {
            "sign" : 1621679114,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 33619968,
            "rowCount" : 1846,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: LogicalQueryStage Aggregate [ca_county#1375, d_qoy#1350, d_year#1346], [ca_county#1375, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#1328)),17,2) AS web_sales#811], HashAggregate(keys=[ca_county#1375, d_qoy#1350, d_year#1346], functions=[sum(UnscaledValue(ws_ext_sales_price#1328))]), BroadcastQueryStage 32 "
          },
          "5" : {
            "sign" : 223713833,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 94950,
            "rowCount" : 1899,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ca_county#1158, store_sales#799, store_sales#803] "
          },
          "10" : {
            "sign" : 960999536,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 96295859925595216217210880,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ca_county#786, web_sales#750, web_sales#807, web_sales#811] "
          },
          "6" : {
            "sign" : -1808253999,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 144324,
            "rowCount" : 1899,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ca_county#1158 = ca_county#1223) "
          },
          "1" : {
            "sign" : 2007715671,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 10884174677682940384302695605862,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ca_county#64, d_year#35, (web_sales#807 / web_sales#750) AS web_q1_q2_increase#745, (store_sales#799 / store_sales#749) AS store_q1_q2_increase#746, (web_sales#811 / web_sales#807) AS web_q2_q3_increase#747, (store_sales#803 / store_sales#799) AS store_q2_q3_increase#748] "
          },
          "14" : {
            "sign" : -2016807428,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 79758,
            "rowCount" : 1899,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [ca_county#786, d_qoy#761, d_year#757], [ca_county#786, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#92)),17,2) AS web_sales#750], HashAggregate(keys=[ca_county#786, d_qoy#761, d_year#757], functions=[sum(UnscaledValue(ws_ext_sales_price#92))]) "
          },
          "0" : {
            "sign" : 1192875821,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 10884174677682940384302695605862,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [d_year#35 ASC NULLS FIRST], true "
          },
          "2" : {
            "sign" : -1771171990,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 11337681955919729566981974589440,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (((ca_county#64 = ca_county#786) AND (CASE WHEN (web_sales#750 > 0.00) THEN (web_sales#807 / web_sales#750) END > CASE WHEN (store_sales#749 > 0.00) THEN (store_sales#799 / store_sales#749) END)) AND (CASE WHEN (web_sales#807 > 0.00) THEN (web_sales#811 / web_sales#807) END > CASE WHEN (store_sales#799 > 0.00) THEN (store_sales#803 / store_sales#799) END)) "
          },
          "7" : {
            "sign" : 1377603520,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 79758,
            "rowCount" : 1899,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [ca_county#1158, d_qoy#1133, d_year#1129], [ca_county#1158, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#1114)),17,2) AS store_sales#799], HashAggregate(keys=[ca_county#1158, d_qoy#1133, d_year#1129], functions=[sum(UnscaledValue(ss_ext_sales_price#1114))]) "
          },
          "3" : {
            "sign" : 1074515729,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 117738,
            "rowCount" : 1899,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [store_sales#799, store_sales#803, ca_county#64, d_year#35, store_sales#749] "
          }
        },
        "links" : [ {
          "fromId" : 7,
          "fromName" : "LogicalQueryStage",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "LogicalQueryStage",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Join",
          "toId" : 5,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Project",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "LogicalQueryStage",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Join",
          "toId" : 3,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Project",
          "toId" : 2,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 14,
          "fromName" : "LogicalQueryStage",
          "toId" : 13,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 15,
          "fromName" : "LogicalQueryStage",
          "toId" : 13,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 13,
          "fromName" : "Join",
          "toId" : 12,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 12,
          "fromName" : "Project",
          "toId" : 11,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 16,
          "fromName" : "LogicalQueryStage",
          "toId" : 11,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "Join",
          "toId" : 10,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "Project",
          "toId" : 2,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Join",
          "toId" : 1,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Project",
          "toId" : 0,
          "toName" : "Sort",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Sort [d_year#35 ASC NULLS FIRST], true\n+- Project [ca_county#64, d_year#35, (web_sales#807 / web_sales#750) AS web_q1_q2_increase#745, (store_sales#799 / store_sales#749) AS store_q1_q2_increase#746, (web_sales#811 / web_sales#807) AS web_q2_q3_increase#747, (store_sales#803 / store_sales#799) AS store_q2_q3_increase#748]\n   +- Join Inner, (((ca_county#64 = ca_county#786) AND (CASE WHEN (web_sales#750 > 0.00) THEN (web_sales#807 / web_sales#750) END > CASE WHEN (store_sales#749 > 0.00) THEN (store_sales#799 / store_sales#749) END)) AND (CASE WHEN (web_sales#807 > 0.00) THEN (web_sales#811 / web_sales#807) END > CASE WHEN (store_sales#799 > 0.00) THEN (store_sales#803 / store_sales#799) END))\n      :- Project [store_sales#799, store_sales#803, ca_county#64, d_year#35, store_sales#749]\n      :  +- Join Inner, (ca_county#64 = ca_county#1158)\n      :     :- Project [ca_county#1158, store_sales#799, store_sales#803]\n      :     :  +- Join Inner, (ca_county#1158 = ca_county#1223)\n      :     :     :- LogicalQueryStage Aggregate [ca_county#1158, d_qoy#1133, d_year#1129], [ca_county#1158, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#1114)),17,2) AS store_sales#799], HashAggregate(keys=[ca_county#1158, d_qoy#1133, d_year#1129], functions=[sum(UnscaledValue(ss_ext_sales_price#1114))])\n      :     :     +- LogicalQueryStage Aggregate [ca_county#1223, d_qoy#1198, d_year#1194], [ca_county#1223, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#1179)),17,2) AS store_sales#803], HashAggregate(keys=[ca_county#1223, d_qoy#1198, d_year#1194], functions=[sum(UnscaledValue(ss_ext_sales_price#1179))])\n      :     +- LogicalQueryStage Aggregate [ca_county#64, d_qoy#39, d_year#35], [ca_county#64, d_year#35, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#20)),17,2) AS store_sales#749], HashAggregate(keys=[ca_county#64, d_qoy#39, d_year#35], functions=[sum(UnscaledValue(ss_ext_sales_price#20))])\n      +- Project [ca_county#786, web_sales#750, web_sales#807, web_sales#811]\n         +- Join Inner, (ca_county#786 = ca_county#1375)\n            :- Project [ca_county#786, web_sales#750, web_sales#807]\n            :  +- Join Inner, (ca_county#786 = ca_county#1299)\n            :     :- LogicalQueryStage Aggregate [ca_county#786, d_qoy#761, d_year#757], [ca_county#786, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#92)),17,2) AS web_sales#750], HashAggregate(keys=[ca_county#786, d_qoy#761, d_year#757], functions=[sum(UnscaledValue(ws_ext_sales_price#92))])\n            :     +- LogicalQueryStage Aggregate [ca_county#1299, d_qoy#1274, d_year#1270], [ca_county#1299, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#1252)),17,2) AS web_sales#807], HashAggregate(keys=[ca_county#1299, d_qoy#1274, d_year#1270], functions=[sum(UnscaledValue(ws_ext_sales_price#1252))])\n            +- LogicalQueryStage LogicalQueryStage Aggregate [ca_county#1375, d_qoy#1350, d_year#1346], [ca_county#1375, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#1328)),17,2) AS web_sales#811], HashAggregate(keys=[ca_county#1375, d_qoy#1350, d_year#1346], functions=[sum(UnscaledValue(ws_ext_sales_price#1328))]), BroadcastQueryStage 32\n"
      },
      "IM" : {
        "inputSizeInBytes" : 72325712225916,
        "inputRowCount" : 9442
      },
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 6,
        "FinishedTasksNum" : 3,
        "FinishedTasksTotalTimeInMs" : 5465.0,
        "FinishedTasksDistributionInMs" : [ 1580.0, 1580.0, 1689.0, 2196.0, 2196.0 ]
      },
      "StartTimeInMs" : 1702226858172,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 2818,
        "IOBytes" : {
          "Total" : 380966769,
          "Details" : {
            "IR" : 0,
            "IW" : 0,
            "SR" : 380409606,
            "SW" : 557163
          }
        }
      }
    },
    "8" : {
      "LQP" : {
        "operators" : {
          "12" : {
            "sign" : 182366066,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 39644968,
            "rowCount" : 970045,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ca_address_sk#1216, ca_county#1223], ShuffleQueryStage 4 "
          },
          "8" : {
            "sign" : 1844188976,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 498939607569060,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [ca_county#1223, d_qoy#1198, d_year#1194], [ca_county#1223, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#1179)),17,2) AS store_sales#803] "
          },
          "19" : {
            "sign" : -1614225448,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 2966210022697900,
            "rowCount" : 67413864152225,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_ext_sales_price#92, d_year#757, d_qoy#761, ca_county#786] "
          },
          "23" : {
            "sign" : 1861053396,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 2426899109480100,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [ca_county#1299, d_qoy#1274, d_year#1270], [ca_county#1299, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#1252)),17,2) AS web_sales#807] "
          },
          "4" : {
            "sign" : 761710203,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 2389889026738780300019268,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ca_county#64 = ca_county#1158) "
          },
          "15" : {
            "sign" : -1207836677,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 322961238806267963875329224801336250,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ca_county#786 = ca_county#1375) "
          },
          "11" : {
            "sign" : 1384000956,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 571496520,
            "rowCount" : 14287413,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ss_addr_sk#1170, ss_ext_sales_price#1179, d_year#1194, d_qoy#1198], ShuffleQueryStage 20 "
          },
          "9" : {
            "sign" : -1184610642,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 609815075917740,
            "rowCount" : 13859433543585,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_ext_sales_price#1179, d_year#1194, d_qoy#1198, ca_county#1223] "
          },
          "22" : {
            "sign" : -840396086,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 39644968,
            "rowCount" : 970045,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ca_address_sk#779, ca_county#786], ShuffleQueryStage 11 "
          },
          "26" : {
            "sign" : 919213756,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1945876940,
            "rowCount" : 69495605,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ws_bill_addr_sk#1236, ws_ext_sales_price#1252, d_year#1270, d_qoy#1274], ShuffleQueryStage 25 "
          },
          "13" : {
            "sign" : -1313788163,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 87354,
            "rowCount" : 1899,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [ca_county#64, d_qoy#39, d_year#35], [ca_county#64, d_year#35, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#20)),17,2) AS store_sales#749], HashAggregate(keys=[ca_county#64, d_qoy#39, d_year#35], functions=[sum(UnscaledValue(ss_ext_sales_price#20))]) "
          },
          "24" : {
            "sign" : -1760044743,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 2966210022697900,
            "rowCount" : 67413864152225,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_ext_sales_price#1252, d_year#1270, d_qoy#1274, ca_county#1299] "
          },
          "16" : {
            "sign" : -657014884,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 4049264510221770403913453506875,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ca_county#786, web_sales#750, web_sales#807] "
          },
          "5" : {
            "sign" : -1583672072,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 27358667339088997642,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ca_county#1158, store_sales#799, store_sales#803] "
          },
          "10" : {
            "sign" : 1256814607,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 720690544266420,
            "rowCount" : 13859433543585,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_addr_sk#1170 = ca_address_sk#1216) "
          },
          "21" : {
            "sign" : 1137046896,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1945876940,
            "rowCount" : 69495605,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ws_bill_addr_sk#76, ws_ext_sales_price#92, d_year#757, d_qoy#761], ShuffleQueryStage 24 "
          },
          "6" : {
            "sign" : 296931068,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 39794425220493087480,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ca_county#1158 = ca_county#1223) "
          },
          "1" : {
            "sign" : 1113938878,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 394316229514895112129471560610950723246957786084498462362800,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ca_county#64, d_year#35, (web_sales#807 / web_sales#750) AS web_q1_q2_increase#745, (store_sales#799 / store_sales#749) AS store_q1_q2_increase#746, (web_sales#811 / web_sales#807) AS web_q2_q3_increase#747, (store_sales#803 / store_sales#799) AS store_q2_q3_increase#748] "
          },
          "17" : {
            "sign" : -175252555,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 5889839287595302405692296010000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ca_county#786 = ca_county#1299) "
          },
          "25" : {
            "sign" : 610900609,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 3505520935915700,
            "rowCount" : 67413864152225,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ws_bill_addr_sk#1236 = ca_address_sk#1292) "
          },
          "14" : {
            "sign" : 1061863652,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 233249783582304640576626662356520625,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ca_county#786, web_sales#750, web_sales#807, web_sales#811] "
          },
          "0" : {
            "sign" : -511323302,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 394316229514895112129471560610950723246957786084498462362800,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [d_year#35 ASC NULLS FIRST], true "
          },
          "20" : {
            "sign" : -685478612,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 3505520935915700,
            "rowCount" : 67413864152225,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ws_bill_addr_sk#76 = ca_address_sk#779) "
          },
          "27" : {
            "sign" : 2142456221,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 39644968,
            "rowCount" : 970045,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ca_address_sk#1292, ca_county#1299], ShuffleQueryStage 15 "
          },
          "2" : {
            "sign" : 859729047,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 410746072411349075134866208969740336715581027171352564961250,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (((ca_county#64 = ca_county#786) AND (CASE WHEN (web_sales#750 > 0.00) THEN (web_sales#807 / web_sales#750) END > CASE WHEN (store_sales#749 > 0.00) THEN (store_sales#799 / store_sales#749) END)) AND (CASE WHEN (web_sales#807 > 0.00) THEN (web_sales#811 / web_sales#807) END > CASE WHEN (store_sales#799 > 0.00) THEN (store_sales#803 / store_sales#799) END)) "
          },
          "18" : {
            "sign" : 339408048,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 2426899109480100,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [ca_county#786, d_qoy#761, d_year#757], [ca_county#786, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#92)),17,2) AS web_sales#750] "
          },
          "7" : {
            "sign" : 1377603520,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 79758,
            "rowCount" : 1899,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [ca_county#1158, d_qoy#1133, d_year#1129], [ca_county#1158, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#1114)),17,2) AS store_sales#799], HashAggregate(keys=[ca_county#1158, d_qoy#1133, d_year#1129], functions=[sum(UnscaledValue(ss_ext_sales_price#1114))]) "
          },
          "3" : {
            "sign" : -1889373632,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 1760970861807522326329986,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [store_sales#799, store_sales#803, ca_county#64, d_year#35, store_sales#749] "
          },
          "28" : {
            "sign" : 1960698725,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 79758,
            "rowCount" : 1899,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [ca_county#1375, d_qoy#1350, d_year#1346], [ca_county#1375, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#1328)),17,2) AS web_sales#811], HashAggregate(keys=[ca_county#1375, d_qoy#1350, d_year#1346], functions=[sum(UnscaledValue(ws_ext_sales_price#1328))]) "
          }
        },
        "links" : [ {
          "fromId" : 7,
          "fromName" : "LogicalQueryStage",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "LogicalQueryStage",
          "toId" : 10,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 12,
          "fromName" : "LogicalQueryStage",
          "toId" : 10,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "Join",
          "toId" : 9,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "Project",
          "toId" : 8,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "Aggregate",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Join",
          "toId" : 5,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Project",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 13,
          "fromName" : "LogicalQueryStage",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Join",
          "toId" : 3,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Project",
          "toId" : 2,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 21,
          "fromName" : "LogicalQueryStage",
          "toId" : 20,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 22,
          "fromName" : "LogicalQueryStage",
          "toId" : 20,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 20,
          "fromName" : "Join",
          "toId" : 19,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 19,
          "fromName" : "Project",
          "toId" : 18,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 18,
          "fromName" : "Aggregate",
          "toId" : 17,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 26,
          "fromName" : "LogicalQueryStage",
          "toId" : 25,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 27,
          "fromName" : "LogicalQueryStage",
          "toId" : 25,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 25,
          "fromName" : "Join",
          "toId" : 24,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 24,
          "fromName" : "Project",
          "toId" : 23,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 23,
          "fromName" : "Aggregate",
          "toId" : 17,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 17,
          "fromName" : "Join",
          "toId" : 16,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 16,
          "fromName" : "Project",
          "toId" : 15,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 28,
          "fromName" : "LogicalQueryStage",
          "toId" : 15,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 15,
          "fromName" : "Join",
          "toId" : 14,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 14,
          "fromName" : "Project",
          "toId" : 2,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Join",
          "toId" : 1,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Project",
          "toId" : 0,
          "toName" : "Sort",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Sort [d_year#35 ASC NULLS FIRST], true\n+- Project [ca_county#64, d_year#35, (web_sales#807 / web_sales#750) AS web_q1_q2_increase#745, (store_sales#799 / store_sales#749) AS store_q1_q2_increase#746, (web_sales#811 / web_sales#807) AS web_q2_q3_increase#747, (store_sales#803 / store_sales#799) AS store_q2_q3_increase#748]\n   +- Join Inner, (((ca_county#64 = ca_county#786) AND (CASE WHEN (web_sales#750 > 0.00) THEN (web_sales#807 / web_sales#750) END > CASE WHEN (store_sales#749 > 0.00) THEN (store_sales#799 / store_sales#749) END)) AND (CASE WHEN (web_sales#807 > 0.00) THEN (web_sales#811 / web_sales#807) END > CASE WHEN (store_sales#799 > 0.00) THEN (store_sales#803 / store_sales#799) END))\n      :- Project [store_sales#799, store_sales#803, ca_county#64, d_year#35, store_sales#749]\n      :  +- Join Inner, (ca_county#64 = ca_county#1158)\n      :     :- Project [ca_county#1158, store_sales#799, store_sales#803]\n      :     :  +- Join Inner, (ca_county#1158 = ca_county#1223)\n      :     :     :- LogicalQueryStage Aggregate [ca_county#1158, d_qoy#1133, d_year#1129], [ca_county#1158, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#1114)),17,2) AS store_sales#799], HashAggregate(keys=[ca_county#1158, d_qoy#1133, d_year#1129], functions=[sum(UnscaledValue(ss_ext_sales_price#1114))])\n      :     :     +- Aggregate [ca_county#1223, d_qoy#1198, d_year#1194], [ca_county#1223, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#1179)),17,2) AS store_sales#803]\n      :     :        +- Project [ss_ext_sales_price#1179, d_year#1194, d_qoy#1198, ca_county#1223]\n      :     :           +- Join Inner, (ss_addr_sk#1170 = ca_address_sk#1216)\n      :     :              :- LogicalQueryStage Project [ss_addr_sk#1170, ss_ext_sales_price#1179, d_year#1194, d_qoy#1198], ShuffleQueryStage 20\n      :     :              +- LogicalQueryStage Project [ca_address_sk#1216, ca_county#1223], ShuffleQueryStage 4\n      :     +- LogicalQueryStage Aggregate [ca_county#64, d_qoy#39, d_year#35], [ca_county#64, d_year#35, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#20)),17,2) AS store_sales#749], HashAggregate(keys=[ca_county#64, d_qoy#39, d_year#35], functions=[sum(UnscaledValue(ss_ext_sales_price#20))])\n      +- Project [ca_county#786, web_sales#750, web_sales#807, web_sales#811]\n         +- Join Inner, (ca_county#786 = ca_county#1375)\n            :- Project [ca_county#786, web_sales#750, web_sales#807]\n            :  +- Join Inner, (ca_county#786 = ca_county#1299)\n            :     :- Aggregate [ca_county#786, d_qoy#761, d_year#757], [ca_county#786, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#92)),17,2) AS web_sales#750]\n            :     :  +- Project [ws_ext_sales_price#92, d_year#757, d_qoy#761, ca_county#786]\n            :     :     +- Join Inner, (ws_bill_addr_sk#76 = ca_address_sk#779)\n            :     :        :- LogicalQueryStage Project [ws_bill_addr_sk#76, ws_ext_sales_price#92, d_year#757, d_qoy#761], ShuffleQueryStage 24\n            :     :        +- LogicalQueryStage Project [ca_address_sk#779, ca_county#786], ShuffleQueryStage 11\n            :     +- Aggregate [ca_county#1299, d_qoy#1274, d_year#1270], [ca_county#1299, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#1252)),17,2) AS web_sales#807]\n            :        +- Project [ws_ext_sales_price#1252, d_year#1270, d_qoy#1274, ca_county#1299]\n            :           +- Join Inner, (ws_bill_addr_sk#1236 = ca_address_sk#1292)\n            :              :- LogicalQueryStage Project [ws_bill_addr_sk#1236, ws_ext_sales_price#1252, d_year#1270, d_qoy#1274], ShuffleQueryStage 25\n            :              +- LogicalQueryStage Project [ca_address_sk#1292, ca_county#1299], ShuffleQueryStage 15\n            +- LogicalQueryStage Aggregate [ca_county#1375, d_qoy#1350, d_year#1346], [ca_county#1375, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#1328)),17,2) AS web_sales#811], HashAggregate(keys=[ca_county#1375, d_qoy#1350, d_year#1346], functions=[sum(UnscaledValue(ws_ext_sales_price#1328))])\n"
      },
      "IM" : {
        "inputSizeInBytes" : 4582432174,
        "inputRowCount" : 156194455
      },
      "PD" : {
        "1" : [ 651413, 649746, 666260, 650139, 661138, 646456, 641277, 653342, 647770, 664034, 651117, 628302, 659374, 635245, 633874, 642956, 636952, 684288, 641153, 669942, 657398, 668359, 652095, 640299, 653053, 656084, 643838, 658981, 670335, 648163, 664092, 635245, 648556, 648432, 665242, 678160, 651971, 663699, 651532, 656852, 631649, 655049, 647770, 637413, 643445, 643502, 662624, 651117, 656420, 626010, 656420, 653735, 660745, 647377, 645602, 641277, 666048, 635581, 635188, 643109, 637345, 656007, 620438, 653974, 652095, 632896, 661935, 659277, 668063, 641277, 652095, 636952, 661723, 670585, 638199, 635581, 676281, 659767, 658223, 640884, 640424, 656420, 665366, 648163, 656027, 658981, 626134, 651413, 658299, 670642, 658789, 649534, 649410, 649353, 672521, 641738, 663699, 641738, 657667, 639177, 633466, 661723, 649803, 644231, 651971, 663017, 651413, 671956, 653466, 647770, 632167, 652095, 649410, 655442, 648556, 660352, 630300, 644816, 646456, 633874, 638928, 657906, 662231, 640884, 676281, 683560, 647481, 627324, 627951, 656084, 664677, 665109, 630920, 646792, 651117, 642467, 656420, 664581, 632234, 660917, 639906, 631525, 648163, 655345, 664677, 635188, 670585, 644423, 653678, 632503, 650867, 643838, 660352, 667631, 657398, 655049, 647088, 647770, 670881, 654071, 636952, 647770, 647770, 643445, 658981, 651117, 672349, 639513, 639513, 652095, 666028, 685735, 664677, 652364, 660745, 658396, 664427, 633874, 656420, 647185, 680060, 674910, 646063, 649410, 683310, 653974, 662328, 646792, 646399, 640760, 659374, 660621, 643838, 633998, 652488, 638592, 667631, 643838, 653073, 663306 ],

      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 16,
        "FinishedTasksNum" : 16,
        "FinishedTasksTotalTimeInMs" : 4633.0,
        "FinishedTasksDistributionInMs" : [ 192.0, 226.0, 259.0, 316.0, 558.0 ]
      },
      "StartTimeInMs" : 1702226853407,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 7583,
        "IOBytes" : {
          "Total" : 489267943,
          "Details" : {
            "IR" : 22324675,
            "IW" : 0,
            "SR" : 429416902,
            "SW" : 37526366
          }
        }
      }
    },
    "19" : {
      "LQP" : {
        "operators" : {
          "12" : {
            "sign" : 1140073279,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 149939504,
            "rowCount" : 3407716,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ca_county#786, web_sales#750, web_sales#807] "
          },
          "8" : {
            "sign" : 1148640947,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 33619968,
            "rowCount" : 1846,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: LogicalQueryStage Aggregate [ca_county#1223, d_qoy#1198, d_year#1194], [ca_county#1223, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#1179)),17,2) AS store_sales#803], HashAggregate(keys=[ca_county#1223, d_qoy#1198, d_year#1194], functions=[sum(UnscaledValue(ss_ext_sales_price#1179))]), BroadcastQueryStage 35 "
          },
          "4" : {
            "sign" : -47090017,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 956177847872,
            "rowCount" : 12581287472,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ca_county#64 = ca_county#1158) "
          },
          "15" : {
            "sign" : 1322015049,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 105392,
            "rowCount" : 1846,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [ca_county#1299, d_qoy#1274, d_year#1270], [ca_county#1299, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#1252)),17,2) AS web_sales#807], HashAggregate(keys=[ca_county#1299, d_qoy#1274, d_year#1270], functions=[sum(UnscaledValue(ws_ext_sales_price#1252))]) "
          },
          "11" : {
            "sign" : 443265521,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 452926348992,
            "rowCount" : 6290643736,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ca_county#786 = ca_county#1375) "
          },
          "9" : {
            "sign" : -1528605442,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 33619968,
            "rowCount" : 1846,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: LogicalQueryStage Aggregate [ca_county#64, d_qoy#39, d_year#35], [ca_county#64, d_year#35, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#20)),17,2) AS store_sales#749], HashAggregate(keys=[ca_county#64, d_qoy#39, d_year#35], functions=[sum(UnscaledValue(ss_ext_sales_price#20))]), BroadcastQueryStage 34 "
          },
          "13" : {
            "sign" : -29722014,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 218093824,
            "rowCount" : 3407716,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ca_county#786 = ca_county#1299) "
          },
          "16" : {
            "sign" : 1621679114,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 33619968,
            "rowCount" : 1846,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: LogicalQueryStage Aggregate [ca_county#1375, d_qoy#1350, d_year#1346], [ca_county#1375, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#1328)),17,2) AS web_sales#811], HashAggregate(keys=[ca_county#1375, d_qoy#1350, d_year#1346], functions=[sum(UnscaledValue(ws_ext_sales_price#1328))]), BroadcastQueryStage 32 "
          },
          "5" : {
            "sign" : -1700846357,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 299879008,
            "rowCount" : 6815432,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ca_county#1158, store_sales#799, store_sales#803] "
          },
          "10" : {
            "sign" : -1348798510,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 327113474272,
            "rowCount" : 6290643736,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ca_county#786, web_sales#750, web_sales#807, web_sales#811] "
          },
          "6" : {
            "sign" : 10040467,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 436187648,
            "rowCount" : 6815432,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ca_county#1158 = ca_county#1223) "
          },
          "1" : {
            "sign" : -854559176,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 7597862133748999237632,
            "rowCount" : 79144397226552075392,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ca_county#64, d_year#35, (web_sales#807 / web_sales#750) AS web_q1_q2_increase#745, (store_sales#799 / store_sales#749) AS store_q1_q2_increase#746, (web_sales#811 / web_sales#807) AS web_q2_q3_increase#747, (store_sales#803 / store_sales#799) AS store_q2_q3_increase#748] "
          },
          "14" : {
            "sign" : 1028205086,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 105392,
            "rowCount" : 1846,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: LogicalQueryStage Aggregate [ca_county#786, d_qoy#761, d_year#757], [ca_county#786, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#92)),17,2) AS web_sales#750], HashAggregate(keys=[ca_county#786, d_qoy#761, d_year#757], functions=[sum(UnscaledValue(ws_ext_sales_price#92))]), BroadcastQueryStage 33 "
          },
          "0" : {
            "sign" : 652849452,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 7597862133748999237632,
            "rowCount" : 79144397226552075392,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [d_year#35 ASC NULLS FIRST], true "
          },
          "2" : {
            "sign" : 55112297,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 7914439722655207539200,
            "rowCount" : 79144397226552075392,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (((ca_county#64 = ca_county#786) AND (CASE WHEN (web_sales#750 > 0.00) THEN (web_sales#807 / web_sales#750) END > CASE WHEN (store_sales#749 > 0.00) THEN (store_sales#799 / store_sales#749) END)) AND (CASE WHEN (web_sales#807 > 0.00) THEN (web_sales#811 / web_sales#807) END > CASE WHEN (store_sales#799 > 0.00) THEN (store_sales#803 / store_sales#799) END)) "
          },
          "7" : {
            "sign" : 1377603520,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 210784,
            "rowCount" : 3692,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [ca_county#1158, d_qoy#1133, d_year#1129], [ca_county#1158, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#1114)),17,2) AS store_sales#799], HashAggregate(keys=[ca_county#1158, d_qoy#1133, d_year#1129], functions=[sum(UnscaledValue(ss_ext_sales_price#1114))]) "
          },
          "3" : {
            "sign" : -246871472,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 704552098432,
            "rowCount" : 12581287472,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [store_sales#799, store_sales#803, ca_county#64, d_year#35, store_sales#749] "
          }
        },
        "links" : [ {
          "fromId" : 7,
          "fromName" : "LogicalQueryStage",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "LogicalQueryStage",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Join",
          "toId" : 5,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Project",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "LogicalQueryStage",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Join",
          "toId" : 3,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Project",
          "toId" : 2,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 14,
          "fromName" : "LogicalQueryStage",
          "toId" : 13,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 15,
          "fromName" : "LogicalQueryStage",
          "toId" : 13,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 13,
          "fromName" : "Join",
          "toId" : 12,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 12,
          "fromName" : "Project",
          "toId" : 11,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 16,
          "fromName" : "LogicalQueryStage",
          "toId" : 11,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "Join",
          "toId" : 10,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "Project",
          "toId" : 2,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Join",
          "toId" : 1,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Project",
          "toId" : 0,
          "toName" : "Sort",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Sort [d_year#35 ASC NULLS FIRST], true\n+- Project [ca_county#64, d_year#35, (web_sales#807 / web_sales#750) AS web_q1_q2_increase#745, (store_sales#799 / store_sales#749) AS store_q1_q2_increase#746, (web_sales#811 / web_sales#807) AS web_q2_q3_increase#747, (store_sales#803 / store_sales#799) AS store_q2_q3_increase#748]\n   +- Join Inner, (((ca_county#64 = ca_county#786) AND (CASE WHEN (web_sales#750 > 0.00) THEN (web_sales#807 / web_sales#750) END > CASE WHEN (store_sales#749 > 0.00) THEN (store_sales#799 / store_sales#749) END)) AND (CASE WHEN (web_sales#807 > 0.00) THEN (web_sales#811 / web_sales#807) END > CASE WHEN (store_sales#799 > 0.00) THEN (store_sales#803 / store_sales#799) END))\n      :- Project [store_sales#799, store_sales#803, ca_county#64, d_year#35, store_sales#749]\n      :  +- Join Inner, (ca_county#64 = ca_county#1158)\n      :     :- Project [ca_county#1158, store_sales#799, store_sales#803]\n      :     :  +- Join Inner, (ca_county#1158 = ca_county#1223)\n      :     :     :- LogicalQueryStage Aggregate [ca_county#1158, d_qoy#1133, d_year#1129], [ca_county#1158, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#1114)),17,2) AS store_sales#799], HashAggregate(keys=[ca_county#1158, d_qoy#1133, d_year#1129], functions=[sum(UnscaledValue(ss_ext_sales_price#1114))])\n      :     :     +- LogicalQueryStage LogicalQueryStage Aggregate [ca_county#1223, d_qoy#1198, d_year#1194], [ca_county#1223, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#1179)),17,2) AS store_sales#803], HashAggregate(keys=[ca_county#1223, d_qoy#1198, d_year#1194], functions=[sum(UnscaledValue(ss_ext_sales_price#1179))]), BroadcastQueryStage 35\n      :     +- LogicalQueryStage LogicalQueryStage Aggregate [ca_county#64, d_qoy#39, d_year#35], [ca_county#64, d_year#35, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#20)),17,2) AS store_sales#749], HashAggregate(keys=[ca_county#64, d_qoy#39, d_year#35], functions=[sum(UnscaledValue(ss_ext_sales_price#20))]), BroadcastQueryStage 34\n      +- Project [ca_county#786, web_sales#750, web_sales#807, web_sales#811]\n         +- Join Inner, (ca_county#786 = ca_county#1375)\n            :- Project [ca_county#786, web_sales#750, web_sales#807]\n            :  +- Join Inner, (ca_county#786 = ca_county#1299)\n            :     :- LogicalQueryStage LogicalQueryStage Aggregate [ca_county#786, d_qoy#761, d_year#757], [ca_county#786, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#92)),17,2) AS web_sales#750], HashAggregate(keys=[ca_county#786, d_qoy#761, d_year#757], functions=[sum(UnscaledValue(ws_ext_sales_price#92))]), BroadcastQueryStage 33\n            :     +- LogicalQueryStage Aggregate [ca_county#1299, d_qoy#1274, d_year#1270], [ca_county#1299, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#1252)),17,2) AS web_sales#807], HashAggregate(keys=[ca_county#1299, d_qoy#1274, d_year#1270], functions=[sum(UnscaledValue(ws_ext_sales_price#1252))])\n            +- LogicalQueryStage LogicalQueryStage Aggregate [ca_county#1375, d_qoy#1350, d_year#1346], [ca_county#1375, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#1328)),17,2) AS web_sales#811], HashAggregate(keys=[ca_county#1375, d_qoy#1350, d_year#1346], functions=[sum(UnscaledValue(ws_ext_sales_price#1328))]), BroadcastQueryStage 32\n"
      },
      "IM" : {
        "inputSizeInBytes" : 101281472,
        "inputRowCount" : 12922
      },
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 1,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "StartTimeInMs" : 1702226859494,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 1496,
        "IOBytes" : {
          "Total" : 334807,
          "Details" : {
            "IR" : 0,
            "IW" : 0,
            "SR" : 317126,
            "SW" : 17681
          }
        }
      }
    },
    "4" : {
      "LQP" : {
        "operators" : {
          "34" : {
            "sign" : 919213756,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1945876940,
            "rowCount" : 69495605,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ws_bill_addr_sk#1236, ws_ext_sales_price#1252, d_year#1270, d_qoy#1274], ShuffleQueryStage 25 "
          },
          "12" : {
            "sign" : 1844188976,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 9273107403947700,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [ca_county#1223, d_qoy#1198, d_year#1194], [ca_county#1223, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#1179)),17,2) AS store_sales#803] "
          },
          "8" : {
            "sign" : 734153543,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 11333797938158300,
            "rowCount" : 257586316776325,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_ext_sales_price#1114, d_year#1129, d_qoy#1133, ca_county#1158] "
          },
          "19" : {
            "sign" : 1307145011,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 13394488472368900,
            "rowCount" : 257586316776325,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_addr_sk#11 = ca_address_sk#57) "
          },
          "23" : {
            "sign" : -2040657822,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 9827156433906587877017602399866711903025687500,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ca_county#786 = ca_county#1375) "
          },
          "4" : {
            "sign" : -933470905,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 609124492976637049811909736816075687685254375000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ca_county#64 = ca_county#1158) "
          },
          "40" : {
            "sign" : -1084009982,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 39644968,
            "rowCount" : 970045,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ca_address_sk#1368, ca_county#1375], ShuffleQueryStage 19 "
          },
          "15" : {
            "sign" : 1384000956,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 7435136380,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ss_addr_sk#1170, ss_ext_sales_price#1179, d_year#1194, d_qoy#1198], ShuffleQueryStage 20 "
          },
          "11" : {
            "sign" : -115093538,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 39644968,
            "rowCount" : 970045,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ca_address_sk#1151, ca_county#1158], ShuffleQueryStage 1 "
          },
          "9" : {
            "sign" : -539984881,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 13394488472368900,
            "rowCount" : 257586316776325,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_addr_sk#1105 = ca_address_sk#1151) "
          },
          "33" : {
            "sign" : 610900609,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 3505520935915700,
            "rowCount" : 67413864152225,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ws_bill_addr_sk#1236 = ca_address_sk#1292) "
          },
          "22" : {
            "sign" : 1767313693,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 7097390757821424577846046177681514152185218750,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ca_county#786, web_sales#750, web_sales#807, web_sales#811] "
          },
          "26" : {
            "sign" : 339408048,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 2426899109480100,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [ca_county#786, d_qoy#761, d_year#757], [ca_county#786, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#92)),17,2) AS web_sales#750] "
          },
          "37" : {
            "sign" : 1096329513,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 2966210022697900,
            "rowCount" : 67413864152225,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_ext_sales_price#1328, d_year#1346, d_qoy#1350, ca_county#1375] "
          },
          "13" : {
            "sign" : -1184610642,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 11333797938158300,
            "rowCount" : 257586316776325,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_ext_sales_price#1179, d_year#1194, d_qoy#1198, ca_county#1223] "
          },
          "24" : {
            "sign" : -657014884,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 4049264510221770403913453506875,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ca_county#786, web_sales#750, web_sales#807] "
          },
          "35" : {
            "sign" : 2142456221,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 39644968,
            "rowCount" : 970045,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ca_address_sk#1292, ca_county#1299], ShuffleQueryStage 15 "
          },
          "16" : {
            "sign" : 182366066,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 39644968,
            "rowCount" : 970045,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ca_address_sk#1216, ca_county#1223], ShuffleQueryStage 4 "
          },
          "5" : {
            "sign" : 424343043,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 59118483136040385874811730511875,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ca_county#1158, store_sales#799, store_sales#803] "
          },
          "10" : {
            "sign" : 1370176114,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 7435136380,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ss_addr_sk#1105, ss_ext_sales_price#1114, d_year#1129, d_qoy#1133], ShuffleQueryStage 22 "
          },
          "21" : {
            "sign" : 1889027863,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 39644968,
            "rowCount" : 970045,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ca_address_sk#57, ca_county#64], ShuffleQueryStage 7 "
          },
          "32" : {
            "sign" : -1760044743,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 2966210022697900,
            "rowCount" : 67413864152225,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_ext_sales_price#1252, d_year#1270, d_qoy#1274, ca_county#1299] "
          },
          "6" : {
            "sign" : 1530277211,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 85990520925149652181544335290000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ca_county#1158 = ca_county#1223) "
          },
          "36" : {
            "sign" : -1873681378,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 2426899109480100,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [ca_county#1375, d_qoy#1350, d_year#1346], [ca_county#1375, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#1328)),17,2) AS web_sales#811] "
          },
          "1" : {
            "sign" : -577391603,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 3058091300483905546756519512449934536127211231470906416772370190094282351605161511887500000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ca_county#64, d_year#35, (web_sales#807 / web_sales#750) AS web_q1_q2_increase#745, (store_sales#799 / store_sales#749) AS store_q1_q2_increase#746, (web_sales#811 / web_sales#807) AS web_q2_q3_increase#747, (store_sales#803 / store_sales#799) AS store_q2_q3_increase#748] "
          },
          "39" : {
            "sign" : 834142654,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1945876940,
            "rowCount" : 69495605,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ws_bill_addr_sk#1312, ws_ext_sales_price#1328, d_year#1346, d_qoy#1350], ShuffleQueryStage 21 "
          },
          "17" : {
            "sign" : 98465856,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 10303452671053000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [ca_county#64, d_qoy#39, d_year#35], [ca_county#64, d_year#35, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#20)),17,2) AS store_sales#749] "
          },
          "25" : {
            "sign" : -175252555,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 5889839287595302405692296010000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ca_county#786 = ca_county#1299) "
          },
          "14" : {
            "sign" : 1256814607,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 13394488472368900,
            "rowCount" : 257586316776325,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_addr_sk#1170 = ca_address_sk#1216) "
          },
          "31" : {
            "sign" : 1861053396,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 2426899109480100,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [ca_county#1299, d_qoy#1274, d_year#1270], [ca_county#1299, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#1252)),17,2) AS web_sales#807] "
          },
          "0" : {
            "sign" : -194647843,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 3058091300483905546756519512449934536127211231470906416772370190094282351605161511887500000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [d_year#35 ASC NULLS FIRST], true "
          },
          "20" : {
            "sign" : 297985490,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 7435136380,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ss_addr_sk#11, ss_ext_sales_price#20, d_year#35, d_qoy#39], ShuffleQueryStage 23 "
          },
          "27" : {
            "sign" : -1614225448,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 2966210022697900,
            "rowCount" : 67413864152225,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_ext_sales_price#92, d_year#757, d_qoy#761, ca_county#786] "
          },
          "2" : {
            "sign" : -1083216102,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 3185511771337401611204707825468681808465845032782194184137885614681544116255376574882812500000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (((ca_county#64 = ca_county#786) AND (CASE WHEN (web_sales#750 > 0.00) THEN (web_sales#807 / web_sales#750) END > CASE WHEN (store_sales#749 > 0.00) THEN (store_sales#799 / store_sales#749) END)) AND (CASE WHEN (web_sales#807 > 0.00) THEN (web_sales#811 / web_sales#807) END > CASE WHEN (store_sales#799 > 0.00) THEN (store_sales#803 / store_sales#799) END)) "
          },
          "38" : {
            "sign" : 11414259,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 3505520935915700,
            "rowCount" : 67413864152225,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ws_bill_addr_sk#1312 = ca_address_sk#1368) "
          },
          "18" : {
            "sign" : -1206095892,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 11333797938158300,
            "rowCount" : 257586316776325,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_ext_sales_price#20, d_year#35, d_qoy#39, ca_county#64] "
          },
          "30" : {
            "sign" : -840396086,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 39644968,
            "rowCount" : 970045,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ca_address_sk#779, ca_county#786], ShuffleQueryStage 11 "
          },
          "7" : {
            "sign" : 878268733,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 9273107403947700,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [ca_county#1158, d_qoy#1133, d_year#1129], [ca_county#1158, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#1114)),17,2) AS store_sales#799] "
          },
          "29" : {
            "sign" : 1137046896,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1945876940,
            "rowCount" : 69495605,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ws_bill_addr_sk#76, ws_ext_sales_price#92, d_year#757, d_qoy#761], ShuffleQueryStage 24 "
          },
          "3" : {
            "sign" : 2048140754,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 448828573772258878808775595548687348820713750000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [store_sales#799, store_sales#803, ca_county#64, d_year#35, store_sales#749] "
          },
          "28" : {
            "sign" : -685478612,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 3505520935915700,
            "rowCount" : 67413864152225,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ws_bill_addr_sk#76 = ca_address_sk#779) "
          }
        },
        "links" : [ {
          "fromId" : 10,
          "fromName" : "LogicalQueryStage",
          "toId" : 9,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "LogicalQueryStage",
          "toId" : 9,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "Join",
          "toId" : 8,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "Project",
          "toId" : 7,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Aggregate",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 15,
          "fromName" : "LogicalQueryStage",
          "toId" : 14,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 16,
          "fromName" : "LogicalQueryStage",
          "toId" : 14,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 14,
          "fromName" : "Join",
          "toId" : 13,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 13,
          "fromName" : "Project",
          "toId" : 12,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 12,
          "fromName" : "Aggregate",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Join",
          "toId" : 5,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Project",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 20,
          "fromName" : "LogicalQueryStage",
          "toId" : 19,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 21,
          "fromName" : "LogicalQueryStage",
          "toId" : 19,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 19,
          "fromName" : "Join",
          "toId" : 18,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 18,
          "fromName" : "Project",
          "toId" : 17,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 17,
          "fromName" : "Aggregate",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Join",
          "toId" : 3,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Project",
          "toId" : 2,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 29,
          "fromName" : "LogicalQueryStage",
          "toId" : 28,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 30,
          "fromName" : "LogicalQueryStage",
          "toId" : 28,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 28,
          "fromName" : "Join",
          "toId" : 27,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 27,
          "fromName" : "Project",
          "toId" : 26,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 26,
          "fromName" : "Aggregate",
          "toId" : 25,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 34,
          "fromName" : "LogicalQueryStage",
          "toId" : 33,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 35,
          "fromName" : "LogicalQueryStage",
          "toId" : 33,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 33,
          "fromName" : "Join",
          "toId" : 32,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 32,
          "fromName" : "Project",
          "toId" : 31,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 31,
          "fromName" : "Aggregate",
          "toId" : 25,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 25,
          "fromName" : "Join",
          "toId" : 24,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 24,
          "fromName" : "Project",
          "toId" : 23,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 39,
          "fromName" : "LogicalQueryStage",
          "toId" : 38,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 40,
          "fromName" : "LogicalQueryStage",
          "toId" : 38,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 38,
          "fromName" : "Join",
          "toId" : 37,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 37,
          "fromName" : "Project",
          "toId" : 36,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 36,
          "fromName" : "Aggregate",
          "toId" : 23,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 23,
          "fromName" : "Join",
          "toId" : 22,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 22,
          "fromName" : "Project",
          "toId" : 2,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Join",
          "toId" : 1,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Project",
          "toId" : 0,
          "toName" : "Sort",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Sort [d_year#35 ASC NULLS FIRST], true\n+- Project [ca_county#64, d_year#35, (web_sales#807 / web_sales#750) AS web_q1_q2_increase#745, (store_sales#799 / store_sales#749) AS store_q1_q2_increase#746, (web_sales#811 / web_sales#807) AS web_q2_q3_increase#747, (store_sales#803 / store_sales#799) AS store_q2_q3_increase#748]\n   +- Join Inner, (((ca_county#64 = ca_county#786) AND (CASE WHEN (web_sales#750 > 0.00) THEN (web_sales#807 / web_sales#750) END > CASE WHEN (store_sales#749 > 0.00) THEN (store_sales#799 / store_sales#749) END)) AND (CASE WHEN (web_sales#807 > 0.00) THEN (web_sales#811 / web_sales#807) END > CASE WHEN (store_sales#799 > 0.00) THEN (store_sales#803 / store_sales#799) END))\n      :- Project [store_sales#799, store_sales#803, ca_county#64, d_year#35, store_sales#749]\n      :  +- Join Inner, (ca_county#64 = ca_county#1158)\n      :     :- Project [ca_county#1158, store_sales#799, store_sales#803]\n      :     :  +- Join Inner, (ca_county#1158 = ca_county#1223)\n      :     :     :- Aggregate [ca_county#1158, d_qoy#1133, d_year#1129], [ca_county#1158, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#1114)),17,2) AS store_sales#799]\n      :     :     :  +- Project [ss_ext_sales_price#1114, d_year#1129, d_qoy#1133, ca_county#1158]\n      :     :     :     +- Join Inner, (ss_addr_sk#1105 = ca_address_sk#1151)\n      :     :     :        :- LogicalQueryStage Project [ss_addr_sk#1105, ss_ext_sales_price#1114, d_year#1129, d_qoy#1133], ShuffleQueryStage 22\n      :     :     :        +- LogicalQueryStage Project [ca_address_sk#1151, ca_county#1158], ShuffleQueryStage 1\n      :     :     +- Aggregate [ca_county#1223, d_qoy#1198, d_year#1194], [ca_county#1223, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#1179)),17,2) AS store_sales#803]\n      :     :        +- Project [ss_ext_sales_price#1179, d_year#1194, d_qoy#1198, ca_county#1223]\n      :     :           +- Join Inner, (ss_addr_sk#1170 = ca_address_sk#1216)\n      :     :              :- LogicalQueryStage Project [ss_addr_sk#1170, ss_ext_sales_price#1179, d_year#1194, d_qoy#1198], ShuffleQueryStage 20\n      :     :              +- LogicalQueryStage Project [ca_address_sk#1216, ca_county#1223], ShuffleQueryStage 4\n      :     +- Aggregate [ca_county#64, d_qoy#39, d_year#35], [ca_county#64, d_year#35, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#20)),17,2) AS store_sales#749]\n      :        +- Project [ss_ext_sales_price#20, d_year#35, d_qoy#39, ca_county#64]\n      :           +- Join Inner, (ss_addr_sk#11 = ca_address_sk#57)\n      :              :- LogicalQueryStage Project [ss_addr_sk#11, ss_ext_sales_price#20, d_year#35, d_qoy#39], ShuffleQueryStage 23\n      :              +- LogicalQueryStage Project [ca_address_sk#57, ca_county#64], ShuffleQueryStage 7\n      +- Project [ca_county#786, web_sales#750, web_sales#807, web_sales#811]\n         +- Join Inner, (ca_county#786 = ca_county#1375)\n            :- Project [ca_county#786, web_sales#750, web_sales#807]\n            :  +- Join Inner, (ca_county#786 = ca_county#1299)\n            :     :- Aggregate [ca_county#786, d_qoy#761, d_year#757], [ca_county#786, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#92)),17,2) AS web_sales#750]\n            :     :  +- Project [ws_ext_sales_price#92, d_year#757, d_qoy#761, ca_county#786]\n            :     :     +- Join Inner, (ws_bill_addr_sk#76 = ca_address_sk#779)\n            :     :        :- LogicalQueryStage Project [ws_bill_addr_sk#76, ws_ext_sales_price#92, d_year#757, d_qoy#761], ShuffleQueryStage 24\n            :     :        +- LogicalQueryStage Project [ca_address_sk#779, ca_county#786], ShuffleQueryStage 11\n            :     +- Aggregate [ca_county#1299, d_qoy#1274, d_year#1270], [ca_county#1299, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#1252)),17,2) AS web_sales#807]\n            :        +- Project [ws_ext_sales_price#1252, d_year#1270, d_qoy#1274, ca_county#1299]\n            :           +- Join Inner, (ws_bill_addr_sk#1236 = ca_address_sk#1292)\n            :              :- LogicalQueryStage Project [ws_bill_addr_sk#1236, ws_ext_sales_price#1252, d_year#1270, d_qoy#1274], ShuffleQueryStage 25\n            :              +- LogicalQueryStage Project [ca_address_sk#1292, ca_county#1299], ShuffleQueryStage 15\n            +- Aggregate [ca_county#1375, d_qoy#1350, d_year#1346], [ca_county#1375, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#1328)),17,2) AS web_sales#811]\n               +- Project [ws_ext_sales_price#1328, d_year#1346, d_qoy#1350, ca_county#1375]\n                  +- Join Inner, (ws_bill_addr_sk#1312 = ca_address_sk#1368)\n                     :- LogicalQueryStage Project [ws_bill_addr_sk#1312, ws_ext_sales_price#1328, d_year#1346, d_qoy#1350], ShuffleQueryStage 21\n                     +- LogicalQueryStage Project [ca_address_sk#1368, ca_county#1375], ShuffleQueryStage 19\n"
      },
      "IM" : {
        "inputSizeInBytes" : 28380909768,
        "inputRowCount" : 1010928840
      },
      "PD" : {

      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 16,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "StartTimeInMs" : 1702226849458,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 11532,
        "IOBytes" : {
          "Total" : 952562237,
          "Details" : {
            "IR" : 189733624,
            "IW" : 0,
            "SR" : 429416902,
            "SW" : 333411711
          }
        }
      }
    },
    "15" : {
      "LQP" : {
        "operators" : {
          "12" : {
            "sign" : -1824788195,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 149939504,
            "rowCount" : 3407716,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ca_county#786, web_sales#750, web_sales#807] "
          },
          "8" : {
            "sign" : -1108439567,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 79758,
            "rowCount" : 1899,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [ca_county#1223, d_qoy#1198, d_year#1194], [ca_county#1223, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#1179)),17,2) AS store_sales#803], HashAggregate(keys=[ca_county#1223, d_qoy#1198, d_year#1194], functions=[sum(UnscaledValue(ss_ext_sales_price#1179))]) "
          },
          "4" : {
            "sign" : 1813749660,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 1091755715544,
            "rowCount" : 13314094092,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ca_county#64 = ca_county#1158) "
          },
          "15" : {
            "sign" : 1322015049,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 105392,
            "rowCount" : 1846,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [ca_county#1299, d_qoy#1274, d_year#1270], [ca_county#1299, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#1252)),17,2) AS web_sales#807], HashAggregate(keys=[ca_county#1299, d_qoy#1274, d_year#1270], functions=[sum(UnscaledValue(ws_ext_sales_price#1252))]) "
          },
          "11" : {
            "sign" : -143644081,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 452926348992,
            "rowCount" : 6290643736,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ca_county#786 = ca_county#1375) "
          },
          "9" : {
            "sign" : -1313788163,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 87354,
            "rowCount" : 1899,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [ca_county#64, d_qoy#39, d_year#35], [ca_county#64, d_year#35, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#20)),17,2) AS store_sales#749], HashAggregate(keys=[ca_county#64, d_qoy#39, d_year#35], functions=[sum(UnscaledValue(ss_ext_sales_price#20))]) "
          },
          "13" : {
            "sign" : 1042073860,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 218093824,
            "rowCount" : 3407716,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ca_county#786 = ca_county#1299) "
          },
          "16" : {
            "sign" : 1621679114,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 33619968,
            "rowCount" : 1846,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: LogicalQueryStage Aggregate [ca_county#1375, d_qoy#1350, d_year#1346], [ca_county#1375, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#1328)),17,2) AS web_sales#811], HashAggregate(keys=[ca_county#1375, d_qoy#1350, d_year#1346], functions=[sum(UnscaledValue(ws_ext_sales_price#1328))]), BroadcastQueryStage 32 "
          },
          "5" : {
            "sign" : 223713833,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 308488752,
            "rowCount" : 7011108,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ca_county#1158, store_sales#799, store_sales#803] "
          },
          "10" : {
            "sign" : 960999536,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 327113474272,
            "rowCount" : 6290643736,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ca_county#786, web_sales#750, web_sales#807, web_sales#811] "
          },
          "6" : {
            "sign" : -1808253999,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 490777560,
            "rowCount" : 7011108,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ca_county#1158 = ca_county#1223) "
          },
          "1" : {
            "sign" : 2007715671,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 8542930705236149586624,
            "rowCount" : 83754222600354407712,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ca_county#64, d_year#35, (web_sales#807 / web_sales#750) AS web_q1_q2_increase#745, (store_sales#799 / store_sales#749) AS store_q1_q2_increase#746, (web_sales#811 / web_sales#807) AS web_q2_q3_increase#747, (store_sales#803 / store_sales#799) AS store_q2_q3_increase#748] "
          },
          "14" : {
            "sign" : -2016807428,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 105392,
            "rowCount" : 1846,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [ca_county#786, d_qoy#761, d_year#757], [ca_county#786, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#92)),17,2) AS web_sales#750], HashAggregate(keys=[ca_county#786, d_qoy#761, d_year#757], functions=[sum(UnscaledValue(ws_ext_sales_price#92))]) "
          },
          "0" : {
            "sign" : 1192875821,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 8542930705236149586624,
            "rowCount" : 83754222600354407712,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [d_year#35 ASC NULLS FIRST], true "
          },
          "2" : {
            "sign" : -1771171990,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 8877947595637567217472,
            "rowCount" : 83754222600354407712,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (((ca_county#64 = ca_county#786) AND (CASE WHEN (web_sales#750 > 0.00) THEN (web_sales#807 / web_sales#750) END > CASE WHEN (store_sales#749 > 0.00) THEN (store_sales#799 / store_sales#749) END)) AND (CASE WHEN (web_sales#807 > 0.00) THEN (web_sales#811 / web_sales#807) END > CASE WHEN (store_sales#799 > 0.00) THEN (store_sales#803 / store_sales#799) END)) "
          },
          "7" : {
            "sign" : 1377603520,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 210784,
            "rowCount" : 3692,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [ca_county#1158, d_qoy#1133, d_year#1129], [ca_county#1158, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#1114)),17,2) AS store_sales#799], HashAggregate(keys=[ca_county#1158, d_qoy#1133, d_year#1129], functions=[sum(UnscaledValue(ss_ext_sales_price#1114))]) "
          },
          "3" : {
            "sign" : 1074515729,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 825473833704,
            "rowCount" : 13314094092,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [store_sales#799, store_sales#803, ca_county#64, d_year#35, store_sales#749] "
          }
        },
        "links" : [ {
          "fromId" : 7,
          "fromName" : "LogicalQueryStage",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "LogicalQueryStage",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Join",
          "toId" : 5,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Project",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "LogicalQueryStage",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Join",
          "toId" : 3,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Project",
          "toId" : 2,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 14,
          "fromName" : "LogicalQueryStage",
          "toId" : 13,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 15,
          "fromName" : "LogicalQueryStage",
          "toId" : 13,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 13,
          "fromName" : "Join",
          "toId" : 12,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 12,
          "fromName" : "Project",
          "toId" : 11,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 16,
          "fromName" : "LogicalQueryStage",
          "toId" : 11,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "Join",
          "toId" : 10,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "Project",
          "toId" : 2,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Join",
          "toId" : 1,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Project",
          "toId" : 0,
          "toName" : "Sort",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Sort [d_year#35 ASC NULLS FIRST], true\n+- Project [ca_county#64, d_year#35, (web_sales#807 / web_sales#750) AS web_q1_q2_increase#745, (store_sales#799 / store_sales#749) AS store_q1_q2_increase#746, (web_sales#811 / web_sales#807) AS web_q2_q3_increase#747, (store_sales#803 / store_sales#799) AS store_q2_q3_increase#748]\n   +- Join Inner, (((ca_county#64 = ca_county#786) AND (CASE WHEN (web_sales#750 > 0.00) THEN (web_sales#807 / web_sales#750) END > CASE WHEN (store_sales#749 > 0.00) THEN (store_sales#799 / store_sales#749) END)) AND (CASE WHEN (web_sales#807 > 0.00) THEN (web_sales#811 / web_sales#807) END > CASE WHEN (store_sales#799 > 0.00) THEN (store_sales#803 / store_sales#799) END))\n      :- Project [store_sales#799, store_sales#803, ca_county#64, d_year#35, store_sales#749]\n      :  +- Join Inner, (ca_county#64 = ca_county#1158)\n      :     :- Project [ca_county#1158, store_sales#799, store_sales#803]\n      :     :  +- Join Inner, (ca_county#1158 = ca_county#1223)\n      :     :     :- LogicalQueryStage Aggregate [ca_county#1158, d_qoy#1133, d_year#1129], [ca_county#1158, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#1114)),17,2) AS store_sales#799], HashAggregate(keys=[ca_county#1158, d_qoy#1133, d_year#1129], functions=[sum(UnscaledValue(ss_ext_sales_price#1114))])\n      :     :     +- LogicalQueryStage Aggregate [ca_county#1223, d_qoy#1198, d_year#1194], [ca_county#1223, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#1179)),17,2) AS store_sales#803], HashAggregate(keys=[ca_county#1223, d_qoy#1198, d_year#1194], functions=[sum(UnscaledValue(ss_ext_sales_price#1179))])\n      :     +- LogicalQueryStage Aggregate [ca_county#64, d_qoy#39, d_year#35], [ca_county#64, d_year#35, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#20)),17,2) AS store_sales#749], HashAggregate(keys=[ca_county#64, d_qoy#39, d_year#35], functions=[sum(UnscaledValue(ss_ext_sales_price#20))])\n      +- Project [ca_county#786, web_sales#750, web_sales#807, web_sales#811]\n         +- Join Inner, (ca_county#786 = ca_county#1375)\n            :- Project [ca_county#786, web_sales#750, web_sales#807]\n            :  +- Join Inner, (ca_county#786 = ca_county#1299)\n            :     :- LogicalQueryStage Aggregate [ca_county#786, d_qoy#761, d_year#757], [ca_county#786, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#92)),17,2) AS web_sales#750], HashAggregate(keys=[ca_county#786, d_qoy#761, d_year#757], functions=[sum(UnscaledValue(ws_ext_sales_price#92))])\n            :     +- LogicalQueryStage Aggregate [ca_county#1299, d_qoy#1274, d_year#1270], [ca_county#1299, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#1252)),17,2) AS web_sales#807], HashAggregate(keys=[ca_county#1299, d_qoy#1274, d_year#1270], functions=[sum(UnscaledValue(ws_ext_sales_price#1252))])\n            +- LogicalQueryStage LogicalQueryStage Aggregate [ca_county#1375, d_qoy#1350, d_year#1346], [ca_county#1375, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#1328)),17,2) AS web_sales#811], HashAggregate(keys=[ca_county#1375, d_qoy#1350, d_year#1346], functions=[sum(UnscaledValue(ws_ext_sales_price#1328))]), BroadcastQueryStage 32\n"
      },
      "IM" : {
        "inputSizeInBytes" : 34208648,
        "inputRowCount" : 13028
      },
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 3,
        "FinishedTasksNum" : 2,
        "FinishedTasksTotalTimeInMs" : 3776.0,
        "FinishedTasksDistributionInMs" : [ 1580.0, 1580.0, 2196.0, 2196.0, 2196.0 ]
      },
      "StartTimeInMs" : 1702226858991,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 1999,
        "IOBytes" : {
          "Total" : 228682018,
          "Details" : {
            "IR" : 0,
            "IW" : 0,
            "SR" : 228364497,
            "SW" : 317521
          }
        }
      }
    },
    "11" : {
      "LQP" : {
        "operators" : {
          "12" : {
            "sign" : -1824788195,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 3965879120638878135,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ca_county#786, web_sales#750, web_sales#807] "
          },
          "8" : {
            "sign" : -1108439567,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 79758,
            "rowCount" : 1899,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [ca_county#1223, d_qoy#1198, d_year#1194], [ca_county#1223, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#1179)),17,2) AS store_sales#803], HashAggregate(keys=[ca_county#1223, d_qoy#1198, d_year#1194], functions=[sum(UnscaledValue(ss_ext_sales_price#1179))]) "
          },
          "4" : {
            "sign" : 1813749660,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 167112,
            "rowCount" : 1899,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ca_county#64 = ca_county#1158) "
          },
          "15" : {
            "sign" : 1322015049,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 72325678279320,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [ca_county#1299, d_qoy#1274, d_year#1270], [ca_county#1299, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#1252)),17,2) AS web_sales#807], HashAggregate(keys=[ca_county#1299, d_qoy#1274, d_year#1270], functions=[sum(UnscaledValue(ws_ext_sales_price#1252))]) "
          },
          "11" : {
            "sign" : 874227690,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 417971932282372644403920,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ca_county#786 = ca_county#1375) "
          },
          "9" : {
            "sign" : -1313788163,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 87354,
            "rowCount" : 1899,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [ca_county#64, d_qoy#39, d_year#35], [ca_county#64, d_year#35, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#20)),17,2) AS store_sales#749], HashAggregate(keys=[ca_county#64, d_qoy#39, d_year#35], functions=[sum(UnscaledValue(ss_ext_sales_price#20))]) "
          },
          "13" : {
            "sign" : 1042073860,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 5768551448202004560,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ca_county#786 = ca_county#1299) "
          },
          "16" : {
            "sign" : 1960698725,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 105392,
            "rowCount" : 1846,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [ca_county#1375, d_qoy#1350, d_year#1346], [ca_county#1375, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#1328)),17,2) AS web_sales#811], HashAggregate(keys=[ca_county#1375, d_qoy#1350, d_year#1346], functions=[sum(UnscaledValue(ws_ext_sales_price#1328))]) "
          },
          "5" : {
            "sign" : 223713833,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 94950,
            "rowCount" : 1899,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ca_county#1158, store_sales#799, store_sales#803] "
          },
          "10" : {
            "sign" : -574949557,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 301868617759491354291720,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ca_county#786, web_sales#750, web_sales#807, web_sales#811] "
          },
          "6" : {
            "sign" : -1808253999,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 144324,
            "rowCount" : 1899,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ca_county#1158 = ca_county#1223) "
          },
          "1" : {
            "sign" : 1606817522,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 34119751025056313348734588185,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ca_county#64, d_year#35, (web_sales#807 / web_sales#750) AS web_q1_q2_increase#745, (store_sales#799 / store_sales#749) AS store_q1_q2_increase#746, (web_sales#811 / web_sales#807) AS web_q2_q3_increase#747, (store_sales#803 / store_sales#799) AS store_q2_q3_increase#748] "
          },
          "14" : {
            "sign" : -2016807428,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 79758,
            "rowCount" : 1899,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [ca_county#786, d_qoy#761, d_year#757], [ca_county#786, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#92)),17,2) AS web_sales#750], HashAggregate(keys=[ca_county#786, d_qoy#761, d_year#757], functions=[sum(UnscaledValue(ws_ext_sales_price#92))]) "
          },
          "0" : {
            "sign" : -104781240,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 34119751025056313348734588185,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [d_year#35 ASC NULLS FIRST], true "
          },
          "2" : {
            "sign" : 1712279237,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 35541407317766993071598529360,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (((ca_county#64 = ca_county#786) AND (CASE WHEN (web_sales#750 > 0.00) THEN (web_sales#807 / web_sales#750) END > CASE WHEN (store_sales#749 > 0.00) THEN (store_sales#799 / store_sales#749) END)) AND (CASE WHEN (web_sales#807 > 0.00) THEN (web_sales#811 / web_sales#807) END > CASE WHEN (store_sales#799 > 0.00) THEN (store_sales#803 / store_sales#799) END)) "
          },
          "7" : {
            "sign" : 1377603520,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 79758,
            "rowCount" : 1899,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [ca_county#1158, d_qoy#1133, d_year#1129], [ca_county#1158, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#1114)),17,2) AS store_sales#799], HashAggregate(keys=[ca_county#1158, d_qoy#1133, d_year#1129], functions=[sum(UnscaledValue(ss_ext_sales_price#1114))]) "
          },
          "3" : {
            "sign" : 1074515729,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 117738,
            "rowCount" : 1899,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [store_sales#799, store_sales#803, ca_county#64, d_year#35, store_sales#749] "
          }
        },
        "links" : [ {
          "fromId" : 7,
          "fromName" : "LogicalQueryStage",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "LogicalQueryStage",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Join",
          "toId" : 5,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Project",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "LogicalQueryStage",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Join",
          "toId" : 3,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Project",
          "toId" : 2,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 14,
          "fromName" : "LogicalQueryStage",
          "toId" : 13,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 15,
          "fromName" : "LogicalQueryStage",
          "toId" : 13,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 13,
          "fromName" : "Join",
          "toId" : 12,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 12,
          "fromName" : "Project",
          "toId" : 11,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 16,
          "fromName" : "LogicalQueryStage",
          "toId" : 11,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "Join",
          "toId" : 10,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "Project",
          "toId" : 2,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Join",
          "toId" : 1,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Project",
          "toId" : 0,
          "toName" : "Sort",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Sort [d_year#35 ASC NULLS FIRST], true\n+- Project [ca_county#64, d_year#35, (web_sales#807 / web_sales#750) AS web_q1_q2_increase#745, (store_sales#799 / store_sales#749) AS store_q1_q2_increase#746, (web_sales#811 / web_sales#807) AS web_q2_q3_increase#747, (store_sales#803 / store_sales#799) AS store_q2_q3_increase#748]\n   +- Join Inner, (((ca_county#64 = ca_county#786) AND (CASE WHEN (web_sales#750 > 0.00) THEN (web_sales#807 / web_sales#750) END > CASE WHEN (store_sales#749 > 0.00) THEN (store_sales#799 / store_sales#749) END)) AND (CASE WHEN (web_sales#807 > 0.00) THEN (web_sales#811 / web_sales#807) END > CASE WHEN (store_sales#799 > 0.00) THEN (store_sales#803 / store_sales#799) END))\n      :- Project [store_sales#799, store_sales#803, ca_county#64, d_year#35, store_sales#749]\n      :  +- Join Inner, (ca_county#64 = ca_county#1158)\n      :     :- Project [ca_county#1158, store_sales#799, store_sales#803]\n      :     :  +- Join Inner, (ca_county#1158 = ca_county#1223)\n      :     :     :- LogicalQueryStage Aggregate [ca_county#1158, d_qoy#1133, d_year#1129], [ca_county#1158, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#1114)),17,2) AS store_sales#799], HashAggregate(keys=[ca_county#1158, d_qoy#1133, d_year#1129], functions=[sum(UnscaledValue(ss_ext_sales_price#1114))])\n      :     :     +- LogicalQueryStage Aggregate [ca_county#1223, d_qoy#1198, d_year#1194], [ca_county#1223, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#1179)),17,2) AS store_sales#803], HashAggregate(keys=[ca_county#1223, d_qoy#1198, d_year#1194], functions=[sum(UnscaledValue(ss_ext_sales_price#1179))])\n      :     +- LogicalQueryStage Aggregate [ca_county#64, d_qoy#39, d_year#35], [ca_county#64, d_year#35, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#20)),17,2) AS store_sales#749], HashAggregate(keys=[ca_county#64, d_qoy#39, d_year#35], functions=[sum(UnscaledValue(ss_ext_sales_price#20))])\n      +- Project [ca_county#786, web_sales#750, web_sales#807, web_sales#811]\n         +- Join Inner, (ca_county#786 = ca_county#1375)\n            :- Project [ca_county#786, web_sales#750, web_sales#807]\n            :  +- Join Inner, (ca_county#786 = ca_county#1299)\n            :     :- LogicalQueryStage Aggregate [ca_county#786, d_qoy#761, d_year#757], [ca_county#786, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#92)),17,2) AS web_sales#750], HashAggregate(keys=[ca_county#786, d_qoy#761, d_year#757], functions=[sum(UnscaledValue(ws_ext_sales_price#92))])\n            :     +- LogicalQueryStage Aggregate [ca_county#1299, d_qoy#1274, d_year#1270], [ca_county#1299, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#1252)),17,2) AS web_sales#807], HashAggregate(keys=[ca_county#1299, d_qoy#1274, d_year#1270], functions=[sum(UnscaledValue(ws_ext_sales_price#1252))])\n            +- LogicalQueryStage Aggregate [ca_county#1375, d_qoy#1350, d_year#1346], [ca_county#1375, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#1328)),17,2) AS web_sales#811], HashAggregate(keys=[ca_county#1375, d_qoy#1350, d_year#1346], functions=[sum(UnscaledValue(ws_ext_sales_price#1328))])\n"
      },
      "IM" : {
        "inputSizeInBytes" : 72325678711340,
        "inputRowCount" : 9442
      },
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 6,
        "FinishedTasksNum" : 3,
        "FinishedTasksTotalTimeInMs" : 5465.0,
        "FinishedTasksDistributionInMs" : [ 1580.0, 1580.0, 1689.0, 2196.0, 2196.0 ]
      },
      "StartTimeInMs" : 1702226857962,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 3028,
        "IOBytes" : {
          "Total" : 381027357,
          "Details" : {
            "IR" : 0,
            "IW" : 0,
            "SR" : 380470194,
            "SW" : 557163
          }
        }
      }
    },
    "9" : {
      "LQP" : {
        "operators" : {
          "12" : {
            "sign" : -657014884,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 128786466370178219839086373875,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ca_county#786, web_sales#750, web_sales#807] "
          },
          "8" : {
            "sign" : -1108439567,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 79758,
            "rowCount" : 1899,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [ca_county#1223, d_qoy#1198, d_year#1194], [ca_county#1223, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#1179)),17,2) AS store_sales#803], HashAggregate(keys=[ca_county#1223, d_qoy#1198, d_year#1194], functions=[sum(UnscaledValue(ss_ext_sales_price#1179))]) "
          },
          "19" : {
            "sign" : 1861053396,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 2426899109480100,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [ca_county#1299, d_qoy#1274, d_year#1270], [ca_county#1299, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#1252)),17,2) AS web_sales#807] "
          },
          "23" : {
            "sign" : 2142456221,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 39644968,
            "rowCount" : 970045,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ca_address_sk#1292, ca_county#1299], ShuffleQueryStage 15 "
          },
          "4" : {
            "sign" : 1813749660,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 167112,
            "rowCount" : 1899,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ca_county#64 = ca_county#1158) "
          },
          "15" : {
            "sign" : -1614225448,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 94340023075980,
            "rowCount" : 2144091433545,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_ext_sales_price#92, d_year#757, d_qoy#761, ca_county#786] "
          },
          "11" : {
            "sign" : -1207836677,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 10271750984752674457925851007522250,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ca_county#786 = ca_county#1375) "
          },
          "9" : {
            "sign" : -1313788163,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 87354,
            "rowCount" : 1899,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [ca_county#64, d_qoy#39, d_year#35], [ca_county#64, d_year#35, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#20)),17,2) AS store_sales#749], HashAggregate(keys=[ca_county#64, d_qoy#39, d_year#35], functions=[sum(UnscaledValue(ss_ext_sales_price#20))]) "
          },
          "22" : {
            "sign" : 919213756,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1945876940,
            "rowCount" : 69495605,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ws_bill_addr_sk#1236, ws_ext_sales_price#1252, d_year#1270, d_qoy#1274], ShuffleQueryStage 25 "
          },
          "13" : {
            "sign" : -175252555,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 187325769265713774311398362000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ca_county#786 = ca_county#1299) "
          },
          "24" : {
            "sign" : 1960698725,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 79758,
            "rowCount" : 1899,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [ca_county#1375, d_qoy#1350, d_year#1346], [ca_county#1375, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#1328)),17,2) AS web_sales#811], HashAggregate(keys=[ca_county#1375, d_qoy#1350, d_year#1346], functions=[sum(UnscaledValue(ws_ext_sales_price#1328))]) "
          },
          "16" : {
            "sign" : -685478612,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 111492754544340,
            "rowCount" : 2144091433545,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ws_bill_addr_sk#76 = ca_address_sk#779) "
          },
          "5" : {
            "sign" : 223713833,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 94950,
            "rowCount" : 1899,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ca_county#1158, store_sales#799, store_sales#803] "
          },
          "10" : {
            "sign" : 1061863652,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 7418486822321375997390892394321625,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ca_county#786, web_sales#750, web_sales#807, web_sales#811] "
          },
          "21" : {
            "sign" : 610900609,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 3505520935915700,
            "rowCount" : 67413864152225,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ws_bill_addr_sk#1236 = ca_address_sk#1292) "
          },
          "6" : {
            "sign" : -1808253999,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 144324,
            "rowCount" : 1899,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ca_county#1158 = ca_county#1223) "
          },
          "1" : {
            "sign" : -1083513635,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 838500289427015200493576533173733904880,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ca_county#64, d_year#35, (web_sales#807 / web_sales#750) AS web_q1_q2_increase#745, (store_sales#799 / store_sales#749) AS store_q1_q2_increase#746, (web_sales#811 / web_sales#807) AS web_q2_q3_increase#747, (store_sales#803 / store_sales#799) AS store_q2_q3_increase#748] "
          },
          "17" : {
            "sign" : 1137046896,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 88412040,
            "rowCount" : 2210301,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ws_bill_addr_sk#76, ws_ext_sales_price#92, d_year#757, d_qoy#761], ShuffleQueryStage 24 "
          },
          "14" : {
            "sign" : 339408048,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 77187291607620,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [ca_county#786, d_qoy#761, d_year#757], [ca_county#786, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#92)),17,2) AS web_sales#750] "
          },
          "0" : {
            "sign" : -1148792867,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 838500289427015200493576533173733904880,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [d_year#35 ASC NULLS FIRST], true "
          },
          "20" : {
            "sign" : -1760044743,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 2966210022697900,
            "rowCount" : 67413864152225,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_ext_sales_price#1252, d_year#1270, d_qoy#1274, ca_county#1299] "
          },
          "2" : {
            "sign" : 1524760000,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 873437801486474167180808888722639484250,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (((ca_county#64 = ca_county#786) AND (CASE WHEN (web_sales#750 > 0.00) THEN (web_sales#807 / web_sales#750) END > CASE WHEN (store_sales#749 > 0.00) THEN (store_sales#799 / store_sales#749) END)) AND (CASE WHEN (web_sales#807 > 0.00) THEN (web_sales#811 / web_sales#807) END > CASE WHEN (store_sales#799 > 0.00) THEN (store_sales#803 / store_sales#799) END)) "
          },
          "18" : {
            "sign" : -840396086,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 39644968,
            "rowCount" : 970045,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ca_address_sk#779, ca_county#786], ShuffleQueryStage 11 "
          },
          "7" : {
            "sign" : 1377603520,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 79758,
            "rowCount" : 1899,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [ca_county#1158, d_qoy#1133, d_year#1129], [ca_county#1158, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#1114)),17,2) AS store_sales#799], HashAggregate(keys=[ca_county#1158, d_qoy#1133, d_year#1129], functions=[sum(UnscaledValue(ss_ext_sales_price#1114))]) "
          },
          "3" : {
            "sign" : 1074515729,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 117738,
            "rowCount" : 1899,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [store_sales#799, store_sales#803, ca_county#64, d_year#35, store_sales#749] "
          }
        },
        "links" : [ {
          "fromId" : 7,
          "fromName" : "LogicalQueryStage",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "LogicalQueryStage",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Join",
          "toId" : 5,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Project",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "LogicalQueryStage",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Join",
          "toId" : 3,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Project",
          "toId" : 2,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 17,
          "fromName" : "LogicalQueryStage",
          "toId" : 16,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 18,
          "fromName" : "LogicalQueryStage",
          "toId" : 16,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 16,
          "fromName" : "Join",
          "toId" : 15,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 15,
          "fromName" : "Project",
          "toId" : 14,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 14,
          "fromName" : "Aggregate",
          "toId" : 13,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 22,
          "fromName" : "LogicalQueryStage",
          "toId" : 21,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 23,
          "fromName" : "LogicalQueryStage",
          "toId" : 21,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 21,
          "fromName" : "Join",
          "toId" : 20,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 20,
          "fromName" : "Project",
          "toId" : 19,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 19,
          "fromName" : "Aggregate",
          "toId" : 13,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 13,
          "fromName" : "Join",
          "toId" : 12,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 12,
          "fromName" : "Project",
          "toId" : 11,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 24,
          "fromName" : "LogicalQueryStage",
          "toId" : 11,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "Join",
          "toId" : 10,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "Project",
          "toId" : 2,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Join",
          "toId" : 1,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Project",
          "toId" : 0,
          "toName" : "Sort",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Sort [d_year#35 ASC NULLS FIRST], true\n+- Project [ca_county#64, d_year#35, (web_sales#807 / web_sales#750) AS web_q1_q2_increase#745, (store_sales#799 / store_sales#749) AS store_q1_q2_increase#746, (web_sales#811 / web_sales#807) AS web_q2_q3_increase#747, (store_sales#803 / store_sales#799) AS store_q2_q3_increase#748]\n   +- Join Inner, (((ca_county#64 = ca_county#786) AND (CASE WHEN (web_sales#750 > 0.00) THEN (web_sales#807 / web_sales#750) END > CASE WHEN (store_sales#749 > 0.00) THEN (store_sales#799 / store_sales#749) END)) AND (CASE WHEN (web_sales#807 > 0.00) THEN (web_sales#811 / web_sales#807) END > CASE WHEN (store_sales#799 > 0.00) THEN (store_sales#803 / store_sales#799) END))\n      :- Project [store_sales#799, store_sales#803, ca_county#64, d_year#35, store_sales#749]\n      :  +- Join Inner, (ca_county#64 = ca_county#1158)\n      :     :- Project [ca_county#1158, store_sales#799, store_sales#803]\n      :     :  +- Join Inner, (ca_county#1158 = ca_county#1223)\n      :     :     :- LogicalQueryStage Aggregate [ca_county#1158, d_qoy#1133, d_year#1129], [ca_county#1158, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#1114)),17,2) AS store_sales#799], HashAggregate(keys=[ca_county#1158, d_qoy#1133, d_year#1129], functions=[sum(UnscaledValue(ss_ext_sales_price#1114))])\n      :     :     +- LogicalQueryStage Aggregate [ca_county#1223, d_qoy#1198, d_year#1194], [ca_county#1223, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#1179)),17,2) AS store_sales#803], HashAggregate(keys=[ca_county#1223, d_qoy#1198, d_year#1194], functions=[sum(UnscaledValue(ss_ext_sales_price#1179))])\n      :     +- LogicalQueryStage Aggregate [ca_county#64, d_qoy#39, d_year#35], [ca_county#64, d_year#35, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#20)),17,2) AS store_sales#749], HashAggregate(keys=[ca_county#64, d_qoy#39, d_year#35], functions=[sum(UnscaledValue(ss_ext_sales_price#20))])\n      +- Project [ca_county#786, web_sales#750, web_sales#807, web_sales#811]\n         +- Join Inner, (ca_county#786 = ca_county#1375)\n            :- Project [ca_county#786, web_sales#750, web_sales#807]\n            :  +- Join Inner, (ca_county#786 = ca_county#1299)\n            :     :- Aggregate [ca_county#786, d_qoy#761, d_year#757], [ca_county#786, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#92)),17,2) AS web_sales#750]\n            :     :  +- Project [ws_ext_sales_price#92, d_year#757, d_qoy#761, ca_county#786]\n            :     :     +- Join Inner, (ws_bill_addr_sk#76 = ca_address_sk#779)\n            :     :        :- LogicalQueryStage Project [ws_bill_addr_sk#76, ws_ext_sales_price#92, d_year#757, d_qoy#761], ShuffleQueryStage 24\n            :     :        +- LogicalQueryStage Project [ca_address_sk#779, ca_county#786], ShuffleQueryStage 11\n            :     +- Aggregate [ca_county#1299, d_qoy#1274, d_year#1270], [ca_county#1299, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#1252)),17,2) AS web_sales#807]\n            :        +- Project [ws_ext_sales_price#1252, d_year#1270, d_qoy#1274, ca_county#1299]\n            :           +- Join Inner, (ws_bill_addr_sk#1236 = ca_address_sk#1292)\n            :              :- LogicalQueryStage Project [ws_bill_addr_sk#1236, ws_ext_sales_price#1252, d_year#1270, d_qoy#1274], ShuffleQueryStage 25\n            :              +- LogicalQueryStage Project [ca_address_sk#1292, ca_county#1299], ShuffleQueryStage 15\n            +- LogicalQueryStage Aggregate [ca_county#1375, d_qoy#1350, d_year#1346], [ca_county#1375, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#1328)),17,2) AS web_sales#811], HashAggregate(keys=[ca_county#1375, d_qoy#1350, d_year#1346], functions=[sum(UnscaledValue(ws_ext_sales_price#1328))])\n"
      },
      "IM" : {
        "inputSizeInBytes" : 2113905544,
        "inputRowCount" : 73653592
      },
      "PD" : {
        "5" : [ 104643, 99231, 95029, 104766, 97410, 102405, 94853, 100096, 97921, 105573, 103020, 101941, 100610, 96800, 95986, 99280, 105036, 102371, 98711, 103101, 99627, 100354, 97362, 100316, 102138, 94293, 99491, 97822, 100365, 89444, 103059, 97049, 96134, 101502, 101067, 106281, 98771, 94264, 93957, 103336, 99105, 105353, 98957, 102326, 92819, 97954, 107349, 98095, 98092, 92096, 100837, 99677, 93245, 98594, 103105, 93814, 99227, 103434, 101607, 97383, 93873, 99095, 94152, 100056, 97657, 100275, 101173, 93351, 102693, 108046, 97618, 97668, 99332, 101862, 96889, 99634, 101647, 99458, 106688, 97966, 99624, 103867, 102457, 91431, 102221, 96177, 105500, 103617, 98813, 101478, 100291, 101605, 96851, 103294, 101896, 97921, 99544, 97315, 94745, 100966, 96024, 105086, 101036, 102232, 95531, 105453, 101615, 100930, 105338, 98132, 104453, 97332, 106221, 102408, 100010, 101081, 99663, 101391, 92569, 99244, 95558, 99892, 97903, 106418, 99641, 103551, 102376, 103542, 87579, 94653, 106397, 99523, 98759, 99398, 99676, 105691, 99493, 104858, 101820, 99317, 104822, 101312, 97078, 99232, 99613, 100498, 98891, 95333, 100882, 97961, 98856, 101990, 97228, 97906, 100962, 97812, 103426, 95606, 104881, 98092, 97643, 98191, 102933, 99182, 100438, 99576, 98107, 98464, 103631, 97080, 103828, 103633, 93843, 102679, 99216, 91117, 99312, 97443, 101426, 100443, 104935, 97901, 99835, 97304, 102621, 104115, 111092, 100042, 99150, 100637, 97401, 99791, 100411, 96259, 98273, 98896, 106698, 101339, 101495, 100760 ],

      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 10,
        "FinishedTasksNum" : 14,
        "FinishedTasksTotalTimeInMs" : 5461.0,
        "FinishedTasksDistributionInMs" : [ 86.0, 273.0, 427.0, 534.0, 597.0 ]
      },
      "StartTimeInMs" : 1702226854696,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 6294,
        "IOBytes" : {
          "Total" : 458735519,
          "Details" : {
            "IR" : 10842689,
            "IW" : 0,
            "SR" : 429416902,
            "SW" : 18475928
          }
        }
      }
    },
    "22" : {
      "LQP" : {
        "operators" : {
          "0" : {
            "sign" : -1894563235,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 36184,
            "rowCount" : 264,
            "isRuntime" : true,
            "predicate" : " (unknown) Sort Arguments: [d_year#35 ASC NULLS FIRST], true "
          },
          "1" : {
            "sign" : 796201355,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 36184,
            "rowCount" : 264,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ca_county#64, d_year#35, (web_sales#807 / web_sales#750) AS web_q1_q2_increase#745, (store_sales#799 / store_sales#749) AS store_q1_q2_increase#746, (web_sales#811 / web_sales#807) AS web_q2_q3_increase#747, (store_sales#803 / store_sales#799) AS store_q2_q3_increase#748], ShuffleQueryStage 37 "
          }
        },
        "links" : [ {
          "fromId" : 1,
          "fromName" : "LogicalQueryStage",
          "toId" : 0,
          "toName" : "Sort",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Sort [d_year#35 ASC NULLS FIRST], true\n+- LogicalQueryStage Project [ca_county#64, d_year#35, (web_sales#807 / web_sales#750) AS web_q1_q2_increase#745, (store_sales#799 / store_sales#749) AS store_q1_q2_increase#746, (web_sales#811 / web_sales#807) AS web_q2_q3_increase#747, (store_sales#803 / store_sales#799) AS store_q2_q3_increase#748], ShuffleQueryStage 37\n"
      },
      "IM" : {
        "inputSizeInBytes" : 36184,
        "inputRowCount" : 264
      },
      "PD" : {
        "13" : [ 18341, 0 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "StartTimeInMs" : 1702226860800,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 190,
        "IOBytes" : {
          "Total" : 17681,
          "Details" : {
            "IR" : 0,
            "IW" : 0,
            "SR" : 17681,
            "SW" : 0
          }
        }
      }
    },
    "13" : {
      "LQP" : {
        "operators" : {
          "12" : {
            "sign" : -1824788195,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 175277700,
            "rowCount" : 3505554,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ca_county#786, web_sales#750, web_sales#807] "
          },
          "8" : {
            "sign" : -1108439567,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 79758,
            "rowCount" : 1899,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [ca_county#1223, d_qoy#1198, d_year#1194], [ca_county#1223, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#1179)),17,2) AS store_sales#803], HashAggregate(keys=[ca_county#1223, d_qoy#1198, d_year#1194], functions=[sum(UnscaledValue(ss_ext_sales_price#1179))]) "
          },
          "4" : {
            "sign" : 1813749660,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 167112,
            "rowCount" : 1899,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ca_county#64 = ca_county#1158) "
          },
          "15" : {
            "sign" : 1322015049,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 105392,
            "rowCount" : 1846,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [ca_county#1299, d_qoy#1274, d_year#1270], [ca_county#1299, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#1252)),17,2) AS web_sales#807], HashAggregate(keys=[ca_county#1299, d_qoy#1274, d_year#1270], functions=[sum(UnscaledValue(ws_ext_sales_price#1252))]) "
          },
          "11" : {
            "sign" : -143644081,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 504757709352,
            "rowCount" : 6471252684,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ca_county#786 = ca_county#1375) "
          },
          "9" : {
            "sign" : -1313788163,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 87354,
            "rowCount" : 1899,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [ca_county#64, d_qoy#39, d_year#35], [ca_county#64, d_year#35, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#20)),17,2) AS store_sales#749], HashAggregate(keys=[ca_county#64, d_qoy#39, d_year#35], functions=[sum(UnscaledValue(ss_ext_sales_price#20))]) "
          },
          "13" : {
            "sign" : 1042073860,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 245388780,
            "rowCount" : 3505554,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ca_county#786 = ca_county#1299) "
          },
          "16" : {
            "sign" : 1621679114,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 33619968,
            "rowCount" : 1846,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: LogicalQueryStage Aggregate [ca_county#1375, d_qoy#1350, d_year#1346], [ca_county#1375, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#1328)),17,2) AS web_sales#811], HashAggregate(keys=[ca_county#1375, d_qoy#1350, d_year#1346], functions=[sum(UnscaledValue(ws_ext_sales_price#1328))]), BroadcastQueryStage 32 "
          },
          "5" : {
            "sign" : 223713833,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 94950,
            "rowCount" : 1899,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ca_county#1158, store_sales#799, store_sales#803] "
          },
          "10" : {
            "sign" : 960999536,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 375332655672,
            "rowCount" : 6471252684,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ca_county#786, web_sales#750, web_sales#807, web_sales#811] "
          },
          "6" : {
            "sign" : -1808253999,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 144324,
            "rowCount" : 1899,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ca_county#1158 = ca_county#1223) "
          },
          "1" : {
            "sign" : 2007715671,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 660067773768,
            "rowCount" : 6471252684,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ca_county#64, d_year#35, (web_sales#807 / web_sales#750) AS web_q1_q2_increase#745, (store_sales#799 / store_sales#749) AS store_q1_q2_increase#746, (web_sales#811 / web_sales#807) AS web_q2_q3_increase#747, (store_sales#803 / store_sales#799) AS store_q2_q3_increase#748] "
          },
          "14" : {
            "sign" : -2016807428,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 79758,
            "rowCount" : 1899,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [ca_county#786, d_qoy#761, d_year#757], [ca_county#786, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#92)),17,2) AS web_sales#750], HashAggregate(keys=[ca_county#786, d_qoy#761, d_year#757], functions=[sum(UnscaledValue(ws_ext_sales_price#92))]) "
          },
          "0" : {
            "sign" : 1192875821,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 660067773768,
            "rowCount" : 6471252684,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [d_year#35 ASC NULLS FIRST], true "
          },
          "2" : {
            "sign" : -1771171990,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 724780300608,
            "rowCount" : 6471252684,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (((ca_county#64 = ca_county#786) AND (CASE WHEN (web_sales#750 > 0.00) THEN (web_sales#807 / web_sales#750) END > CASE WHEN (store_sales#749 > 0.00) THEN (store_sales#799 / store_sales#749) END)) AND (CASE WHEN (web_sales#807 > 0.00) THEN (web_sales#811 / web_sales#807) END > CASE WHEN (store_sales#799 > 0.00) THEN (store_sales#803 / store_sales#799) END)) "
          },
          "7" : {
            "sign" : 1377603520,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 79758,
            "rowCount" : 1899,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [ca_county#1158, d_qoy#1133, d_year#1129], [ca_county#1158, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#1114)),17,2) AS store_sales#799], HashAggregate(keys=[ca_county#1158, d_qoy#1133, d_year#1129], functions=[sum(UnscaledValue(ss_ext_sales_price#1114))]) "
          },
          "3" : {
            "sign" : 1074515729,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 117738,
            "rowCount" : 1899,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [store_sales#799, store_sales#803, ca_county#64, d_year#35, store_sales#749] "
          }
        },
        "links" : [ {
          "fromId" : 7,
          "fromName" : "LogicalQueryStage",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "LogicalQueryStage",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Join",
          "toId" : 5,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Project",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "LogicalQueryStage",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Join",
          "toId" : 3,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Project",
          "toId" : 2,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 14,
          "fromName" : "LogicalQueryStage",
          "toId" : 13,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 15,
          "fromName" : "LogicalQueryStage",
          "toId" : 13,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 13,
          "fromName" : "Join",
          "toId" : 12,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 12,
          "fromName" : "Project",
          "toId" : 11,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 16,
          "fromName" : "LogicalQueryStage",
          "toId" : 11,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "Join",
          "toId" : 10,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "Project",
          "toId" : 2,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Join",
          "toId" : 1,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Project",
          "toId" : 0,
          "toName" : "Sort",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Sort [d_year#35 ASC NULLS FIRST], true\n+- Project [ca_county#64, d_year#35, (web_sales#807 / web_sales#750) AS web_q1_q2_increase#745, (store_sales#799 / store_sales#749) AS store_q1_q2_increase#746, (web_sales#811 / web_sales#807) AS web_q2_q3_increase#747, (store_sales#803 / store_sales#799) AS store_q2_q3_increase#748]\n   +- Join Inner, (((ca_county#64 = ca_county#786) AND (CASE WHEN (web_sales#750 > 0.00) THEN (web_sales#807 / web_sales#750) END > CASE WHEN (store_sales#749 > 0.00) THEN (store_sales#799 / store_sales#749) END)) AND (CASE WHEN (web_sales#807 > 0.00) THEN (web_sales#811 / web_sales#807) END > CASE WHEN (store_sales#799 > 0.00) THEN (store_sales#803 / store_sales#799) END))\n      :- Project [store_sales#799, store_sales#803, ca_county#64, d_year#35, store_sales#749]\n      :  +- Join Inner, (ca_county#64 = ca_county#1158)\n      :     :- Project [ca_county#1158, store_sales#799, store_sales#803]\n      :     :  +- Join Inner, (ca_county#1158 = ca_county#1223)\n      :     :     :- LogicalQueryStage Aggregate [ca_county#1158, d_qoy#1133, d_year#1129], [ca_county#1158, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#1114)),17,2) AS store_sales#799], HashAggregate(keys=[ca_county#1158, d_qoy#1133, d_year#1129], functions=[sum(UnscaledValue(ss_ext_sales_price#1114))])\n      :     :     +- LogicalQueryStage Aggregate [ca_county#1223, d_qoy#1198, d_year#1194], [ca_county#1223, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#1179)),17,2) AS store_sales#803], HashAggregate(keys=[ca_county#1223, d_qoy#1198, d_year#1194], functions=[sum(UnscaledValue(ss_ext_sales_price#1179))])\n      :     +- LogicalQueryStage Aggregate [ca_county#64, d_qoy#39, d_year#35], [ca_county#64, d_year#35, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#20)),17,2) AS store_sales#749], HashAggregate(keys=[ca_county#64, d_qoy#39, d_year#35], functions=[sum(UnscaledValue(ss_ext_sales_price#20))])\n      +- Project [ca_county#786, web_sales#750, web_sales#807, web_sales#811]\n         +- Join Inner, (ca_county#786 = ca_county#1375)\n            :- Project [ca_county#786, web_sales#750, web_sales#807]\n            :  +- Join Inner, (ca_county#786 = ca_county#1299)\n            :     :- LogicalQueryStage Aggregate [ca_county#786, d_qoy#761, d_year#757], [ca_county#786, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#92)),17,2) AS web_sales#750], HashAggregate(keys=[ca_county#786, d_qoy#761, d_year#757], functions=[sum(UnscaledValue(ws_ext_sales_price#92))])\n            :     +- LogicalQueryStage Aggregate [ca_county#1299, d_qoy#1274, d_year#1270], [ca_county#1299, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#1252)),17,2) AS web_sales#807], HashAggregate(keys=[ca_county#1299, d_qoy#1274, d_year#1270], functions=[sum(UnscaledValue(ws_ext_sales_price#1252))])\n            +- LogicalQueryStage LogicalQueryStage Aggregate [ca_county#1375, d_qoy#1350, d_year#1346], [ca_county#1375, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#1328)),17,2) AS web_sales#811], HashAggregate(keys=[ca_county#1375, d_qoy#1350, d_year#1346], functions=[sum(UnscaledValue(ws_ext_sales_price#1328))]), BroadcastQueryStage 32\n"
      },
      "IM" : {
        "inputSizeInBytes" : 34051988,
        "inputRowCount" : 11288
      },
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 5,
        "FinishedTasksNum" : 3,
        "FinishedTasksTotalTimeInMs" : 5465.0,
        "FinishedTasksDistributionInMs" : [ 1580.0, 1580.0, 1689.0, 2196.0, 2196.0 ]
      },
      "StartTimeInMs" : 1702226858348,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 2642,
        "IOBytes" : {
          "Total" : 347057891,
          "Details" : {
            "IR" : 0,
            "IW" : 0,
            "SR" : 346560531,
            "SW" : 497360
          }
        }
      }
    },
    "16" : {
      "LQP" : {
        "operators" : {
          "12" : {
            "sign" : 1140073279,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 149939504,
            "rowCount" : 3407716,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ca_county#786, web_sales#750, web_sales#807] "
          },
          "8" : {
            "sign" : -1108439567,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 79758,
            "rowCount" : 1899,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [ca_county#1223, d_qoy#1198, d_year#1194], [ca_county#1223, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#1179)),17,2) AS store_sales#803], HashAggregate(keys=[ca_county#1223, d_qoy#1198, d_year#1194], functions=[sum(UnscaledValue(ss_ext_sales_price#1179))]) "
          },
          "4" : {
            "sign" : 1813749660,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 1967260815936,
            "rowCount" : 25885010736,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ca_county#64 = ca_county#1158) "
          },
          "15" : {
            "sign" : 1322015049,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 105392,
            "rowCount" : 1846,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [ca_county#1299, d_qoy#1274, d_year#1270], [ca_county#1299, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#1252)),17,2) AS web_sales#807], HashAggregate(keys=[ca_county#1299, d_qoy#1274, d_year#1270], functions=[sum(UnscaledValue(ws_ext_sales_price#1252))]) "
          },
          "11" : {
            "sign" : 443265521,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 452926348992,
            "rowCount" : 6290643736,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ca_county#786 = ca_county#1375) "
          },
          "9" : {
            "sign" : -1313788163,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 210784,
            "rowCount" : 3692,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [ca_county#64, d_qoy#39, d_year#35], [ca_county#64, d_year#35, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#20)),17,2) AS store_sales#749], HashAggregate(keys=[ca_county#64, d_qoy#39, d_year#35], functions=[sum(UnscaledValue(ss_ext_sales_price#20))]) "
          },
          "13" : {
            "sign" : -29722014,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 218093824,
            "rowCount" : 3407716,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ca_county#786 = ca_county#1299) "
          },
          "16" : {
            "sign" : 1621679114,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 33619968,
            "rowCount" : 1846,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: LogicalQueryStage Aggregate [ca_county#1375, d_qoy#1350, d_year#1346], [ca_county#1375, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#1328)),17,2) AS web_sales#811], HashAggregate(keys=[ca_county#1375, d_qoy#1350, d_year#1346], functions=[sum(UnscaledValue(ws_ext_sales_price#1328))]), BroadcastQueryStage 32 "
          },
          "5" : {
            "sign" : 223713833,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 308488752,
            "rowCount" : 7011108,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ca_county#1158, store_sales#799, store_sales#803] "
          },
          "10" : {
            "sign" : -1348798510,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 327113474272,
            "rowCount" : 6290643736,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ca_county#786, web_sales#750, web_sales#807, web_sales#811] "
          },
          "6" : {
            "sign" : -1808253999,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 490777560,
            "rowCount" : 7011108,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ca_county#1158 = ca_county#1223) "
          },
          "1" : {
            "sign" : -528289031,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 15632004541700270370816,
            "rowCount" : 162833380642711149696,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ca_county#64, d_year#35, (web_sales#807 / web_sales#750) AS web_q1_q2_increase#745, (store_sales#799 / store_sales#749) AS store_q1_q2_increase#746, (web_sales#811 / web_sales#807) AS web_q2_q3_increase#747, (store_sales#803 / store_sales#799) AS store_q2_q3_increase#748] "
          },
          "14" : {
            "sign" : 1028205086,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 105392,
            "rowCount" : 1846,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: LogicalQueryStage Aggregate [ca_county#786, d_qoy#761, d_year#757], [ca_county#786, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#92)),17,2) AS web_sales#750], HashAggregate(keys=[ca_county#786, d_qoy#761, d_year#757], functions=[sum(UnscaledValue(ws_ext_sales_price#92))]), BroadcastQueryStage 33 "
          },
          "0" : {
            "sign" : 725746511,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 15632004541700270370816,
            "rowCount" : 162833380642711149696,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [d_year#35 ASC NULLS FIRST], true "
          },
          "2" : {
            "sign" : 1419809356,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 16283338064271114969600,
            "rowCount" : 162833380642711149696,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (((ca_county#64 = ca_county#786) AND (CASE WHEN (web_sales#750 > 0.00) THEN (web_sales#807 / web_sales#750) END > CASE WHEN (store_sales#749 > 0.00) THEN (store_sales#799 / store_sales#749) END)) AND (CASE WHEN (web_sales#807 > 0.00) THEN (web_sales#811 / web_sales#807) END > CASE WHEN (store_sales#799 > 0.00) THEN (store_sales#803 / store_sales#799) END)) "
          },
          "7" : {
            "sign" : 1377603520,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 210784,
            "rowCount" : 3692,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [ca_county#1158, d_qoy#1133, d_year#1129], [ca_county#1158, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#1114)),17,2) AS store_sales#799], HashAggregate(keys=[ca_county#1158, d_qoy#1133, d_year#1129], functions=[sum(UnscaledValue(ss_ext_sales_price#1114))]) "
          },
          "3" : {
            "sign" : 1074515729,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 1449560601216,
            "rowCount" : 25885010736,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [store_sales#799, store_sales#803, ca_county#64, d_year#35, store_sales#749] "
          }
        },
        "links" : [ {
          "fromId" : 7,
          "fromName" : "LogicalQueryStage",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "LogicalQueryStage",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Join",
          "toId" : 5,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Project",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "LogicalQueryStage",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Join",
          "toId" : 3,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Project",
          "toId" : 2,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 14,
          "fromName" : "LogicalQueryStage",
          "toId" : 13,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 15,
          "fromName" : "LogicalQueryStage",
          "toId" : 13,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 13,
          "fromName" : "Join",
          "toId" : 12,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 12,
          "fromName" : "Project",
          "toId" : 11,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 16,
          "fromName" : "LogicalQueryStage",
          "toId" : 11,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "Join",
          "toId" : 10,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "Project",
          "toId" : 2,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Join",
          "toId" : 1,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Project",
          "toId" : 0,
          "toName" : "Sort",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Sort [d_year#35 ASC NULLS FIRST], true\n+- Project [ca_county#64, d_year#35, (web_sales#807 / web_sales#750) AS web_q1_q2_increase#745, (store_sales#799 / store_sales#749) AS store_q1_q2_increase#746, (web_sales#811 / web_sales#807) AS web_q2_q3_increase#747, (store_sales#803 / store_sales#799) AS store_q2_q3_increase#748]\n   +- Join Inner, (((ca_county#64 = ca_county#786) AND (CASE WHEN (web_sales#750 > 0.00) THEN (web_sales#807 / web_sales#750) END > CASE WHEN (store_sales#749 > 0.00) THEN (store_sales#799 / store_sales#749) END)) AND (CASE WHEN (web_sales#807 > 0.00) THEN (web_sales#811 / web_sales#807) END > CASE WHEN (store_sales#799 > 0.00) THEN (store_sales#803 / store_sales#799) END))\n      :- Project [store_sales#799, store_sales#803, ca_county#64, d_year#35, store_sales#749]\n      :  +- Join Inner, (ca_county#64 = ca_county#1158)\n      :     :- Project [ca_county#1158, store_sales#799, store_sales#803]\n      :     :  +- Join Inner, (ca_county#1158 = ca_county#1223)\n      :     :     :- LogicalQueryStage Aggregate [ca_county#1158, d_qoy#1133, d_year#1129], [ca_county#1158, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#1114)),17,2) AS store_sales#799], HashAggregate(keys=[ca_county#1158, d_qoy#1133, d_year#1129], functions=[sum(UnscaledValue(ss_ext_sales_price#1114))])\n      :     :     +- LogicalQueryStage Aggregate [ca_county#1223, d_qoy#1198, d_year#1194], [ca_county#1223, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#1179)),17,2) AS store_sales#803], HashAggregate(keys=[ca_county#1223, d_qoy#1198, d_year#1194], functions=[sum(UnscaledValue(ss_ext_sales_price#1179))])\n      :     +- LogicalQueryStage Aggregate [ca_county#64, d_qoy#39, d_year#35], [ca_county#64, d_year#35, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#20)),17,2) AS store_sales#749], HashAggregate(keys=[ca_county#64, d_qoy#39, d_year#35], functions=[sum(UnscaledValue(ss_ext_sales_price#20))])\n      +- Project [ca_county#786, web_sales#750, web_sales#807, web_sales#811]\n         +- Join Inner, (ca_county#786 = ca_county#1375)\n            :- Project [ca_county#786, web_sales#750, web_sales#807]\n            :  +- Join Inner, (ca_county#786 = ca_county#1299)\n            :     :- LogicalQueryStage LogicalQueryStage Aggregate [ca_county#786, d_qoy#761, d_year#757], [ca_county#786, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#92)),17,2) AS web_sales#750], HashAggregate(keys=[ca_county#786, d_qoy#761, d_year#757], functions=[sum(UnscaledValue(ws_ext_sales_price#92))]), BroadcastQueryStage 33\n            :     +- LogicalQueryStage Aggregate [ca_county#1299, d_qoy#1274, d_year#1270], [ca_county#1299, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#1252)),17,2) AS web_sales#807], HashAggregate(keys=[ca_county#1299, d_qoy#1274, d_year#1270], functions=[sum(UnscaledValue(ws_ext_sales_price#1252))])\n            +- LogicalQueryStage LogicalQueryStage Aggregate [ca_county#1375, d_qoy#1350, d_year#1346], [ca_county#1375, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#1328)),17,2) AS web_sales#811], HashAggregate(keys=[ca_county#1375, d_qoy#1350, d_year#1346], functions=[sum(UnscaledValue(ws_ext_sales_price#1328))]), BroadcastQueryStage 32\n"
      },
      "IM" : {
        "inputSizeInBytes" : 34332078,
        "inputRowCount" : 14821
      },
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 3,
        "FinishedTasksNum" : 1,
        "FinishedTasksTotalTimeInMs" : 1580.0,
        "FinishedTasksDistributionInMs" : [ 1580.0, 1580.0, 1580.0, 1580.0, 1580.0 ]
      },
      "StartTimeInMs" : 1702226859207,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 1783,
        "IOBytes" : {
          "Total" : 141039474,
          "Details" : {
            "IR" : 0,
            "IW" : 0,
            "SR" : 140842127,
            "SW" : 197347
          }
        }
      }
    },
    "5" : {
      "LQP" : {
        "operators" : {
          "34" : {
            "sign" : 919213756,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1945876940,
            "rowCount" : 69495605,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ws_bill_addr_sk#1236, ws_ext_sales_price#1252, d_year#1270, d_qoy#1274], ShuffleQueryStage 25 "
          },
          "12" : {
            "sign" : 1844188976,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 9273107403947700,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [ca_county#1223, d_qoy#1198, d_year#1194], [ca_county#1223, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#1179)),17,2) AS store_sales#803] "
          },
          "8" : {
            "sign" : 734153543,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 329527208275540,
            "rowCount" : 7489254733535,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_ext_sales_price#1114, d_year#1129, d_qoy#1133, ca_county#1158] "
          },
          "19" : {
            "sign" : 1307145011,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 13394488472368900,
            "rowCount" : 257586316776325,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_addr_sk#11 = ca_address_sk#57) "
          },
          "23" : {
            "sign" : -2040657822,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 9827156433906587877017602399866711903025687500,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ca_county#786 = ca_county#1375) "
          },
          "4" : {
            "sign" : -933470905,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 17710135186639981250794468186520185291129125000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ca_county#64 = ca_county#1158) "
          },
          "40" : {
            "sign" : -1084009982,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 39644968,
            "rowCount" : 970045,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ca_address_sk#1368, ca_county#1375], ShuffleQueryStage 19 "
          },
          "15" : {
            "sign" : 1384000956,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 7435136380,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ss_addr_sk#1170, ss_ext_sales_price#1179, d_year#1194, d_qoy#1198], ShuffleQueryStage 20 "
          },
          "11" : {
            "sign" : -115093538,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 39644968,
            "rowCount" : 970045,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ca_address_sk#1151, ca_county#1158], ShuffleQueryStage 1 "
          },
          "9" : {
            "sign" : -539984881,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 389441246143820,
            "rowCount" : 7489254733535,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_addr_sk#1105 = ca_address_sk#1151) "
          },
          "33" : {
            "sign" : 610900609,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 3505520935915700,
            "rowCount" : 67413864152225,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ws_bill_addr_sk#1236 = ca_address_sk#1292) "
          },
          "22" : {
            "sign" : 1767313693,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 7097390757821424577846046177681514152185218750,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ca_county#786, web_sales#750, web_sales#807, web_sales#811] "
          },
          "26" : {
            "sign" : 339408048,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 2426899109480100,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [ca_county#786, d_qoy#761, d_year#757], [ca_county#786, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#92)),17,2) AS web_sales#750] "
          },
          "37" : {
            "sign" : 1096329513,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 2966210022697900,
            "rowCount" : 67413864152225,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_ext_sales_price#1328, d_year#1346, d_qoy#1350, ca_county#1375] "
          },
          "13" : {
            "sign" : -1184610642,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 11333797938158300,
            "rowCount" : 257586316776325,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_ext_sales_price#1179, d_year#1194, d_qoy#1198, ca_county#1223] "
          },
          "24" : {
            "sign" : -657014884,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 4049264510221770403913453506875,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ca_county#786, web_sales#750, web_sales#807] "
          },
          "35" : {
            "sign" : 2142456221,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 39644968,
            "rowCount" : 970045,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ca_address_sk#1292, ca_county#1299], ShuffleQueryStage 15 "
          },
          "16" : {
            "sign" : 182366066,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 39644968,
            "rowCount" : 970045,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ca_address_sk#1216, ca_county#1223], ShuffleQueryStage 4 "
          },
          "5" : {
            "sign" : 424343043,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 1718854422109945747371758957625,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ca_county#1158, store_sales#799, store_sales#803] "
          },
          "10" : {
            "sign" : 1370176114,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 308820920,
            "rowCount" : 7720523,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ss_addr_sk#1105, ss_ext_sales_price#1114, d_year#1129, d_qoy#1133], ShuffleQueryStage 22 "
          },
          "21" : {
            "sign" : 1889027863,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 39644968,
            "rowCount" : 970045,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ca_address_sk#57, ca_county#64], ShuffleQueryStage 7 "
          },
          "32" : {
            "sign" : -1760044743,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 2966210022697900,
            "rowCount" : 67413864152225,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_ext_sales_price#1252, d_year#1270, d_qoy#1274, ca_county#1299] "
          },
          "6" : {
            "sign" : 1530277211,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 2500151886705375632540740302000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ca_county#1158 = ca_county#1223) "
          },
          "36" : {
            "sign" : -1873681378,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 2426899109480100,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [ca_county#1375, d_qoy#1350, d_year#1346], [ca_county#1375, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#1328)),17,2) AS web_sales#811] "
          },
          "1" : {
            "sign" : -577391603,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 88913204064402825291513477293192322878495071623154919318787633977447474042665592422500000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ca_county#64, d_year#35, (web_sales#807 / web_sales#750) AS web_q1_q2_increase#745, (store_sales#799 / store_sales#749) AS store_q1_q2_increase#746, (web_sales#811 / web_sales#807) AS web_q2_q3_increase#747, (store_sales#803 / store_sales#799) AS store_q2_q3_increase#748] "
          },
          "39" : {
            "sign" : 834142654,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1945876940,
            "rowCount" : 69495605,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ws_bill_addr_sk#1312, ws_ext_sales_price#1328, d_year#1346, d_qoy#1350], ShuffleQueryStage 21 "
          },
          "17" : {
            "sign" : 98465856,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 10303452671053000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [ca_county#64, d_qoy#39, d_year#35], [ca_county#64, d_year#35, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#20)),17,2) AS store_sales#749] "
          },
          "25" : {
            "sign" : -175252555,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 5889839287595302405692296010000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ca_county#786 = ca_county#1299) "
          },
          "14" : {
            "sign" : 1256814607,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 13394488472368900,
            "rowCount" : 257586316776325,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_addr_sk#1170 = ca_address_sk#1216) "
          },
          "31" : {
            "sign" : 1861053396,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 2426899109480100,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [ca_county#1299, d_qoy#1274, d_year#1270], [ca_county#1299, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#1252)),17,2) AS web_sales#807] "
          },
          "0" : {
            "sign" : -194647843,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 88913204064402825291513477293192322878495071623154919318787633977447474042665592422500000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [d_year#35 ASC NULLS FIRST], true "
          },
          "20" : {
            "sign" : 297985490,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 7435136380,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ss_addr_sk#11, ss_ext_sales_price#20, d_year#35, d_qoy#39], ShuffleQueryStage 23 "
          },
          "27" : {
            "sign" : -1614225448,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 2966210022697900,
            "rowCount" : 67413864152225,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_ext_sales_price#92, d_year#757, d_qoy#761, ca_county#786] "
          },
          "2" : {
            "sign" : -1083216102,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 92617920900419609678659872180408669665099032940786374290403785393174452127776658773437500000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (((ca_county#64 = ca_county#786) AND (CASE WHEN (web_sales#750 > 0.00) THEN (web_sales#807 / web_sales#750) END > CASE WHEN (store_sales#749 > 0.00) THEN (store_sales#799 / store_sales#749) END)) AND (CASE WHEN (web_sales#807 > 0.00) THEN (web_sales#811 / web_sales#807) END > CASE WHEN (store_sales#799 > 0.00) THEN (store_sales#803 / store_sales#799) END)) "
          },
          "38" : {
            "sign" : 11414259,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 3505520935915700,
            "rowCount" : 67413864152225,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ws_bill_addr_sk#1312 = ca_address_sk#1368) "
          },
          "18" : {
            "sign" : -1206095892,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 11333797938158300,
            "rowCount" : 257586316776325,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_ext_sales_price#20, d_year#35, d_qoy#39, ca_county#64] "
          },
          "30" : {
            "sign" : -840396086,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 39644968,
            "rowCount" : 970045,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ca_address_sk#779, ca_county#786], ShuffleQueryStage 11 "
          },
          "7" : {
            "sign" : 878268733,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 269613170407260,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [ca_county#1158, d_qoy#1133, d_year#1129], [ca_county#1158, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#1114)),17,2) AS store_sales#799] "
          },
          "29" : {
            "sign" : 1137046896,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1945876940,
            "rowCount" : 69495605,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ws_bill_addr_sk#76, ws_ext_sales_price#92, d_year#757, d_qoy#761], ShuffleQueryStage 24 "
          },
          "3" : {
            "sign" : 2048140754,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 13049573295418933553216976558488557582937250000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [store_sales#799, store_sales#803, ca_county#64, d_year#35, store_sales#749] "
          },
          "28" : {
            "sign" : -685478612,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 3505520935915700,
            "rowCount" : 67413864152225,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ws_bill_addr_sk#76 = ca_address_sk#779) "
          }
        },
        "links" : [ {
          "fromId" : 10,
          "fromName" : "LogicalQueryStage",
          "toId" : 9,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "LogicalQueryStage",
          "toId" : 9,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "Join",
          "toId" : 8,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "Project",
          "toId" : 7,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Aggregate",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 15,
          "fromName" : "LogicalQueryStage",
          "toId" : 14,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 16,
          "fromName" : "LogicalQueryStage",
          "toId" : 14,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 14,
          "fromName" : "Join",
          "toId" : 13,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 13,
          "fromName" : "Project",
          "toId" : 12,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 12,
          "fromName" : "Aggregate",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Join",
          "toId" : 5,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Project",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 20,
          "fromName" : "LogicalQueryStage",
          "toId" : 19,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 21,
          "fromName" : "LogicalQueryStage",
          "toId" : 19,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 19,
          "fromName" : "Join",
          "toId" : 18,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 18,
          "fromName" : "Project",
          "toId" : 17,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 17,
          "fromName" : "Aggregate",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Join",
          "toId" : 3,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Project",
          "toId" : 2,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 29,
          "fromName" : "LogicalQueryStage",
          "toId" : 28,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 30,
          "fromName" : "LogicalQueryStage",
          "toId" : 28,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 28,
          "fromName" : "Join",
          "toId" : 27,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 27,
          "fromName" : "Project",
          "toId" : 26,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 26,
          "fromName" : "Aggregate",
          "toId" : 25,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 34,
          "fromName" : "LogicalQueryStage",
          "toId" : 33,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 35,
          "fromName" : "LogicalQueryStage",
          "toId" : 33,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 33,
          "fromName" : "Join",
          "toId" : 32,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 32,
          "fromName" : "Project",
          "toId" : 31,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 31,
          "fromName" : "Aggregate",
          "toId" : 25,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 25,
          "fromName" : "Join",
          "toId" : 24,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 24,
          "fromName" : "Project",
          "toId" : 23,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 39,
          "fromName" : "LogicalQueryStage",
          "toId" : 38,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 40,
          "fromName" : "LogicalQueryStage",
          "toId" : 38,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 38,
          "fromName" : "Join",
          "toId" : 37,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 37,
          "fromName" : "Project",
          "toId" : 36,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 36,
          "fromName" : "Aggregate",
          "toId" : 23,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 23,
          "fromName" : "Join",
          "toId" : 22,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 22,
          "fromName" : "Project",
          "toId" : 2,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Join",
          "toId" : 1,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Project",
          "toId" : 0,
          "toName" : "Sort",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Sort [d_year#35 ASC NULLS FIRST], true\n+- Project [ca_county#64, d_year#35, (web_sales#807 / web_sales#750) AS web_q1_q2_increase#745, (store_sales#799 / store_sales#749) AS store_q1_q2_increase#746, (web_sales#811 / web_sales#807) AS web_q2_q3_increase#747, (store_sales#803 / store_sales#799) AS store_q2_q3_increase#748]\n   +- Join Inner, (((ca_county#64 = ca_county#786) AND (CASE WHEN (web_sales#750 > 0.00) THEN (web_sales#807 / web_sales#750) END > CASE WHEN (store_sales#749 > 0.00) THEN (store_sales#799 / store_sales#749) END)) AND (CASE WHEN (web_sales#807 > 0.00) THEN (web_sales#811 / web_sales#807) END > CASE WHEN (store_sales#799 > 0.00) THEN (store_sales#803 / store_sales#799) END))\n      :- Project [store_sales#799, store_sales#803, ca_county#64, d_year#35, store_sales#749]\n      :  +- Join Inner, (ca_county#64 = ca_county#1158)\n      :     :- Project [ca_county#1158, store_sales#799, store_sales#803]\n      :     :  +- Join Inner, (ca_county#1158 = ca_county#1223)\n      :     :     :- Aggregate [ca_county#1158, d_qoy#1133, d_year#1129], [ca_county#1158, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#1114)),17,2) AS store_sales#799]\n      :     :     :  +- Project [ss_ext_sales_price#1114, d_year#1129, d_qoy#1133, ca_county#1158]\n      :     :     :     +- Join Inner, (ss_addr_sk#1105 = ca_address_sk#1151)\n      :     :     :        :- LogicalQueryStage Project [ss_addr_sk#1105, ss_ext_sales_price#1114, d_year#1129, d_qoy#1133], ShuffleQueryStage 22\n      :     :     :        +- LogicalQueryStage Project [ca_address_sk#1151, ca_county#1158], ShuffleQueryStage 1\n      :     :     +- Aggregate [ca_county#1223, d_qoy#1198, d_year#1194], [ca_county#1223, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#1179)),17,2) AS store_sales#803]\n      :     :        +- Project [ss_ext_sales_price#1179, d_year#1194, d_qoy#1198, ca_county#1223]\n      :     :           +- Join Inner, (ss_addr_sk#1170 = ca_address_sk#1216)\n      :     :              :- LogicalQueryStage Project [ss_addr_sk#1170, ss_ext_sales_price#1179, d_year#1194, d_qoy#1198], ShuffleQueryStage 20\n      :     :              +- LogicalQueryStage Project [ca_address_sk#1216, ca_county#1223], ShuffleQueryStage 4\n      :     +- Aggregate [ca_county#64, d_qoy#39, d_year#35], [ca_county#64, d_year#35, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#20)),17,2) AS store_sales#749]\n      :        +- Project [ss_ext_sales_price#20, d_year#35, d_qoy#39, ca_county#64]\n      :           +- Join Inner, (ss_addr_sk#11 = ca_address_sk#57)\n      :              :- LogicalQueryStage Project [ss_addr_sk#11, ss_ext_sales_price#20, d_year#35, d_qoy#39], ShuffleQueryStage 23\n      :              +- LogicalQueryStage Project [ca_address_sk#57, ca_county#64], ShuffleQueryStage 7\n      +- Project [ca_county#786, web_sales#750, web_sales#807, web_sales#811]\n         +- Join Inner, (ca_county#786 = ca_county#1375)\n            :- Project [ca_county#786, web_sales#750, web_sales#807]\n            :  +- Join Inner, (ca_county#786 = ca_county#1299)\n            :     :- Aggregate [ca_county#786, d_qoy#761, d_year#757], [ca_county#786, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#92)),17,2) AS web_sales#750]\n            :     :  +- Project [ws_ext_sales_price#92, d_year#757, d_qoy#761, ca_county#786]\n            :     :     +- Join Inner, (ws_bill_addr_sk#76 = ca_address_sk#779)\n            :     :        :- LogicalQueryStage Project [ws_bill_addr_sk#76, ws_ext_sales_price#92, d_year#757, d_qoy#761], ShuffleQueryStage 24\n            :     :        +- LogicalQueryStage Project [ca_address_sk#779, ca_county#786], ShuffleQueryStage 11\n            :     +- Aggregate [ca_county#1299, d_qoy#1274, d_year#1270], [ca_county#1299, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#1252)),17,2) AS web_sales#807]\n            :        +- Project [ws_ext_sales_price#1252, d_year#1270, d_qoy#1274, ca_county#1299]\n            :           +- Join Inner, (ws_bill_addr_sk#1236 = ca_address_sk#1292)\n            :              :- LogicalQueryStage Project [ws_bill_addr_sk#1236, ws_ext_sales_price#1252, d_year#1270, d_qoy#1274], ShuffleQueryStage 25\n            :              +- LogicalQueryStage Project [ca_address_sk#1292, ca_county#1299], ShuffleQueryStage 15\n            +- Aggregate [ca_county#1375, d_qoy#1350, d_year#1346], [ca_county#1375, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#1328)),17,2) AS web_sales#811]\n               +- Project [ws_ext_sales_price#1328, d_year#1346, d_qoy#1350, ca_county#1375]\n                  +- Join Inner, (ws_bill_addr_sk#1312 = ca_address_sk#1368)\n                     :- LogicalQueryStage Project [ws_bill_addr_sk#1312, ws_ext_sales_price#1328, d_year#1346, d_qoy#1350], ShuffleQueryStage 21\n                     +- LogicalQueryStage Project [ca_address_sk#1368, ca_county#1375], ShuffleQueryStage 19\n"
      },
      "IM" : {
        "inputSizeInBytes" : 21254594308,
        "inputRowCount" : 753108778
      },
      "PD" : {
        "3" : [ 361258, 341463, 356503, 348047, 339918, 354646, 348385, 346393, 345682, 348791, 344264, 337923, 360629, 348029, 346233, 347601, 350249, 354928, 347826, 352850, 353114, 370730, 351655, 360146, 350267, 367453, 364246, 357290, 360535, 349937, 352487, 351434, 334967, 361527, 357910, 371950, 355469, 354646, 347011, 356394, 341928, 351567, 352690, 347920, 351337, 337880, 362790, 359147, 352629, 346578, 352690, 352825, 357486, 350470, 346808, 354910, 347100, 352469, 349215, 343259, 343462, 340100, 347986, 359368, 357290, 350470, 361164, 345606, 358614, 355909, 355777, 346194, 358200, 357736, 356148, 349365, 353231, 348392, 367936, 348941, 354096, 344775, 362154, 335074, 349012, 342131, 342131, 348047, 353910, 356503, 345180, 356866, 360130, 353028, 357486, 365053, 339715, 352745, 352825, 353265, 342960, 356183, 362755, 357087, 346974, 355113, 356394, 359165, 352485, 351029, 343792, 364189, 343670, 343665, 356724, 349513, 328713, 356189, 353028, 352629, 329609, 355045, 367936, 360978, 361926, 362976, 365825, 346172, 361527, 369935, 347232, 365028, 334010, 344754, 359792, 347293, 349078, 351876, 340736, 363661, 346879, 353673, 344791, 350140, 366587, 347623, 354174, 352690, 356615, 349513, 337996, 345809, 354377, 359259, 351054, 360130, 349417, 355131, 354172, 350470, 324861, 355715, 367232, 354801, 355045, 351858, 339329, 370580, 352360, 356298, 358113, 367027, 353470, 352850, 353875, 343462, 363808, 343952, 351875, 339352, 355822, 361164, 341793, 347717, 358113, 357853, 367715, 354486, 348047, 338450, 340702, 357087, 339022, 343683, 347986, 354174, 352487, 352706, 353452, 361588 ],

      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 16,
        "FinishedTasksNum" : 26,
        "FinishedTasksTotalTimeInMs" : 24676.0,
        "FinishedTasksDistributionInMs" : [ 155.0, 227.0, 408.0, 1337.0, 3541.0 ]
      },
      "StartTimeInMs" : 1702226852214,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 8776,
        "IOBytes" : {
          "Total" : 847309068,
          "Details" : {
            "IR" : 151644255,
            "IW" : 0,
            "SR" : 429416902,
            "SW" : 266247911
          }
        }
      }
    },
    "10" : {
      "LQP" : {
        "operators" : {
          "12" : {
            "sign" : -975422872,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 3965879120638878135,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ca_county#786, web_sales#750, web_sales#807] "
          },
          "8" : {
            "sign" : -1108439567,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 79758,
            "rowCount" : 1899,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [ca_county#1223, d_qoy#1198, d_year#1194], [ca_county#1223, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#1179)),17,2) AS store_sales#803], HashAggregate(keys=[ca_county#1223, d_qoy#1198, d_year#1194], functions=[sum(UnscaledValue(ss_ext_sales_price#1179))]) "
          },
          "19" : {
            "sign" : 2142456221,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 39644968,
            "rowCount" : 970045,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ca_address_sk#1292, ca_county#1299], ShuffleQueryStage 15 "
          },
          "4" : {
            "sign" : 1813749660,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 167112,
            "rowCount" : 1899,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ca_county#64 = ca_county#1158) "
          },
          "15" : {
            "sign" : 1861053396,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 72325678279320,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [ca_county#1299, d_qoy#1274, d_year#1270], [ca_county#1299, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#1252)),17,2) AS web_sales#807] "
          },
          "11" : {
            "sign" : 826636433,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 316310586903915642291330,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ca_county#786 = ca_county#1375) "
          },
          "9" : {
            "sign" : -1313788163,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 87354,
            "rowCount" : 1899,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [ca_county#64, d_qoy#39, d_year#35], [ca_county#64, d_year#35, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#20)),17,2) AS store_sales#749], HashAggregate(keys=[ca_county#64, d_qoy#39, d_year#35], functions=[sum(UnscaledValue(ss_ext_sales_price#20))]) "
          },
          "13" : {
            "sign" : 174895293,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 5768551448202004560,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ca_county#786 = ca_county#1299) "
          },
          "16" : {
            "sign" : -1760044743,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 88398051230280,
            "rowCount" : 2009046618870,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_ext_sales_price#1252, d_year#1270, d_qoy#1274, ca_county#1299] "
          },
          "5" : {
            "sign" : 223713833,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 94950,
            "rowCount" : 1899,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ca_county#1158, store_sales#799, store_sales#803] "
          },
          "10" : {
            "sign" : -94356034,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 228446534986161297210405,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ca_county#786, web_sales#750, web_sales#807, web_sales#811] "
          },
          "6" : {
            "sign" : -1808253999,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 144324,
            "rowCount" : 1899,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ca_county#1158 = ca_county#1223) "
          },
          "1" : {
            "sign" : 1984213029,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 25820964610752632458520317334,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ca_county#64, d_year#35, (web_sales#807 / web_sales#750) AS web_q1_q2_increase#745, (store_sales#799 / store_sales#749) AS store_q1_q2_increase#746, (web_sales#811 / web_sales#807) AS web_q2_q3_increase#747, (store_sales#803 / store_sales#799) AS store_q2_q3_increase#748] "
          },
          "17" : {
            "sign" : 610900609,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 104470424181240,
            "rowCount" : 2009046618870,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ws_bill_addr_sk#1236 = ca_address_sk#1292) "
          },
          "14" : {
            "sign" : -2016807428,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 79758,
            "rowCount" : 1899,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [ca_county#786, d_qoy#761, d_year#757], [ca_county#786, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#92)),17,2) AS web_sales#750], HashAggregate(keys=[ca_county#786, d_qoy#761, d_year#757], functions=[sum(UnscaledValue(ws_ext_sales_price#92))]) "
          },
          "0" : {
            "sign" : -58220177,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 25820964610752632458520317334,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [d_year#35 ASC NULLS FIRST], true "
          },
          "20" : {
            "sign" : 1960698725,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 79758,
            "rowCount" : 1899,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [ca_county#1375, d_qoy#1350, d_year#1346], [ca_county#1375, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#1328)),17,2) AS web_sales#811], HashAggregate(keys=[ca_county#1375, d_qoy#1350, d_year#1346], functions=[sum(UnscaledValue(ws_ext_sales_price#1328))]) "
          },
          "2" : {
            "sign" : 1053502124,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 26896838136200658810958663890,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (((ca_county#64 = ca_county#786) AND (CASE WHEN (web_sales#750 > 0.00) THEN (web_sales#807 / web_sales#750) END > CASE WHEN (store_sales#749 > 0.00) THEN (store_sales#799 / store_sales#749) END)) AND (CASE WHEN (web_sales#807 > 0.00) THEN (web_sales#811 / web_sales#807) END > CASE WHEN (store_sales#799 > 0.00) THEN (store_sales#803 / store_sales#799) END)) "
          },
          "18" : {
            "sign" : 919213756,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 82843440,
            "rowCount" : 2071086,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ws_bill_addr_sk#1236, ws_ext_sales_price#1252, d_year#1270, d_qoy#1274], ShuffleQueryStage 25 "
          },
          "7" : {
            "sign" : 1377603520,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 79758,
            "rowCount" : 1899,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [ca_county#1158, d_qoy#1133, d_year#1129], [ca_county#1158, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#1114)),17,2) AS store_sales#799], HashAggregate(keys=[ca_county#1158, d_qoy#1133, d_year#1129], functions=[sum(UnscaledValue(ss_ext_sales_price#1114))]) "
          },
          "3" : {
            "sign" : 1074515729,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 117738,
            "rowCount" : 1899,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [store_sales#799, store_sales#803, ca_county#64, d_year#35, store_sales#749] "
          }
        },
        "links" : [ {
          "fromId" : 7,
          "fromName" : "LogicalQueryStage",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "LogicalQueryStage",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Join",
          "toId" : 5,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Project",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "LogicalQueryStage",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Join",
          "toId" : 3,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Project",
          "toId" : 2,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 14,
          "fromName" : "LogicalQueryStage",
          "toId" : 13,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 18,
          "fromName" : "LogicalQueryStage",
          "toId" : 17,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 19,
          "fromName" : "LogicalQueryStage",
          "toId" : 17,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 17,
          "fromName" : "Join",
          "toId" : 16,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 16,
          "fromName" : "Project",
          "toId" : 15,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 15,
          "fromName" : "Aggregate",
          "toId" : 13,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 13,
          "fromName" : "Join",
          "toId" : 12,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 12,
          "fromName" : "Project",
          "toId" : 11,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 20,
          "fromName" : "LogicalQueryStage",
          "toId" : 11,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "Join",
          "toId" : 10,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "Project",
          "toId" : 2,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Join",
          "toId" : 1,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Project",
          "toId" : 0,
          "toName" : "Sort",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Sort [d_year#35 ASC NULLS FIRST], true\n+- Project [ca_county#64, d_year#35, (web_sales#807 / web_sales#750) AS web_q1_q2_increase#745, (store_sales#799 / store_sales#749) AS store_q1_q2_increase#746, (web_sales#811 / web_sales#807) AS web_q2_q3_increase#747, (store_sales#803 / store_sales#799) AS store_q2_q3_increase#748]\n   +- Join Inner, (((ca_county#64 = ca_county#786) AND (CASE WHEN (web_sales#750 > 0.00) THEN (web_sales#807 / web_sales#750) END > CASE WHEN (store_sales#749 > 0.00) THEN (store_sales#799 / store_sales#749) END)) AND (CASE WHEN (web_sales#807 > 0.00) THEN (web_sales#811 / web_sales#807) END > CASE WHEN (store_sales#799 > 0.00) THEN (store_sales#803 / store_sales#799) END))\n      :- Project [store_sales#799, store_sales#803, ca_county#64, d_year#35, store_sales#749]\n      :  +- Join Inner, (ca_county#64 = ca_county#1158)\n      :     :- Project [ca_county#1158, store_sales#799, store_sales#803]\n      :     :  +- Join Inner, (ca_county#1158 = ca_county#1223)\n      :     :     :- LogicalQueryStage Aggregate [ca_county#1158, d_qoy#1133, d_year#1129], [ca_county#1158, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#1114)),17,2) AS store_sales#799], HashAggregate(keys=[ca_county#1158, d_qoy#1133, d_year#1129], functions=[sum(UnscaledValue(ss_ext_sales_price#1114))])\n      :     :     +- LogicalQueryStage Aggregate [ca_county#1223, d_qoy#1198, d_year#1194], [ca_county#1223, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#1179)),17,2) AS store_sales#803], HashAggregate(keys=[ca_county#1223, d_qoy#1198, d_year#1194], functions=[sum(UnscaledValue(ss_ext_sales_price#1179))])\n      :     +- LogicalQueryStage Aggregate [ca_county#64, d_qoy#39, d_year#35], [ca_county#64, d_year#35, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#20)),17,2) AS store_sales#749], HashAggregate(keys=[ca_county#64, d_qoy#39, d_year#35], functions=[sum(UnscaledValue(ss_ext_sales_price#20))])\n      +- Project [ca_county#786, web_sales#750, web_sales#807, web_sales#811]\n         +- Join Inner, (ca_county#786 = ca_county#1375)\n            :- Project [ca_county#786, web_sales#750, web_sales#807]\n            :  +- Join Inner, (ca_county#786 = ca_county#1299)\n            :     :- LogicalQueryStage Aggregate [ca_county#786, d_qoy#761, d_year#757], [ca_county#786, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#92)),17,2) AS web_sales#750], HashAggregate(keys=[ca_county#786, d_qoy#761, d_year#757], functions=[sum(UnscaledValue(ws_ext_sales_price#92))])\n            :     +- Aggregate [ca_county#1299, d_qoy#1274, d_year#1270], [ca_county#1299, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#1252)),17,2) AS web_sales#807]\n            :        +- Project [ws_ext_sales_price#1252, d_year#1270, d_qoy#1274, ca_county#1299]\n            :           +- Join Inner, (ws_bill_addr_sk#1236 = ca_address_sk#1292)\n            :              :- LogicalQueryStage Project [ws_bill_addr_sk#1236, ws_ext_sales_price#1252, d_year#1270, d_qoy#1274], ShuffleQueryStage 25\n            :              +- LogicalQueryStage Project [ca_address_sk#1292, ca_county#1299], ShuffleQueryStage 15\n            +- LogicalQueryStage Aggregate [ca_county#1375, d_qoy#1350, d_year#1346], [ca_county#1375, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#1328)),17,2) AS web_sales#811], HashAggregate(keys=[ca_county#1375, d_qoy#1350, d_year#1346], functions=[sum(UnscaledValue(ws_ext_sales_price#1328))])\n"
      },
      "IM" : {
        "inputSizeInBytes" : 122894794,
        "inputRowCount" : 3050626
      },
      "PD" : {
        "6" : [ 98805, 88816, 91643, 90356, 90928, 91800, 90479, 89662, 91121, 94827, 92349, 88026, 99371, 98429, 89964, 95490, 93294, 94005, 94330, 99688, 97315, 99344, 94758, 96129, 95566, 96356, 95149, 93851, 97244, 94273, 91327, 97334, 95104, 92341, 91915, 98759, 94291, 87481, 89741, 90077, 89801, 94549, 93015, 99501, 91860, 94410, 90200, 96009, 95417, 88302, 93617, 98023, 91380, 90287, 96084, 94791, 90498, 92159, 93324, 85833, 97007, 104155, 90913, 98082, 92538, 91809, 84427, 90437, 91621, 103456, 94568, 94034, 98492, 91852, 95648, 95661, 96597, 90165, 98679, 94154, 87231, 98585, 98551, 88193, 95161, 95296, 92651, 96602, 95311, 92417, 90012, 93340, 97194, 95818, 92864, 94270, 91017, 91173, 106589, 90965, 91652, 98427, 98550, 88824, 96239, 97704, 95059, 90480, 90539, 92396, 92634, 87575, 92157, 89285, 89531, 92679, 88951, 91939, 86541, 95936, 88288, 95053, 94558, 98743, 98376, 94961, 97605, 89260, 97410, 91715, 91318, 94629, 90212, 95765, 97857, 89953, 92177, 89968, 88681, 98834, 85916, 91155, 93772, 90122, 98575, 90150, 88758, 91814, 94060, 95270, 94461, 92812, 99368, 101443, 93432, 97421, 92810, 95862, 94835, 92656, 96101, 93808, 95400, 89346, 96895, 88674, 98429, 95706, 99876, 89241, 93102, 91880, 91537, 91127, 92101, 95839, 91977, 90743, 91477, 94807, 97054, 92620, 92803, 96768, 103003, 96708, 97512, 95853, 92767, 92247, 91873, 94661, 85377, 92699, 92573, 89857, 89117, 101071, 92507, 100159 ],

      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 9,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "StartTimeInMs" : 1702226854862,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 6128,
        "IOBytes" : {
          "Total" : 430034653,
          "Details" : {
            "IR" : 0,
            "IW" : 0,
            "SR" : 429416902,
            "SW" : 617751
          }
        }
      }
    },
    "21" : {
      "LQP" : {
        "operators" : {
          "8" : {
            "sign" : 1028205086,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 33619968,
            "rowCount" : 1846,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: LogicalQueryStage Aggregate [ca_county#786, d_qoy#761, d_year#757], [ca_county#786, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#92)),17,2) AS web_sales#750], HashAggregate(keys=[ca_county#786, d_qoy#761, d_year#757], functions=[sum(UnscaledValue(ws_ext_sales_price#92))]), BroadcastQueryStage 33 "
          },
          "4" : {
            "sign" : -1348798510,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 327113474272,
            "rowCount" : 6290643736,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ca_county#786, web_sales#750, web_sales#807, web_sales#811] "
          },
          "9" : {
            "sign" : 1322015049,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 105392,
            "rowCount" : 1846,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [ca_county#1299, d_qoy#1274, d_year#1270], [ca_county#1299, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#1252)),17,2) AS web_sales#807], HashAggregate(keys=[ca_county#1299, d_qoy#1274, d_year#1270], functions=[sum(UnscaledValue(ws_ext_sales_price#1252))]) "
          },
          "5" : {
            "sign" : 443265521,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 452926348992,
            "rowCount" : 6290643736,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ca_county#786 = ca_county#1375) "
          },
          "10" : {
            "sign" : 1621679114,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 33619968,
            "rowCount" : 1846,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: LogicalQueryStage Aggregate [ca_county#1375, d_qoy#1350, d_year#1346], [ca_county#1375, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#1328)),17,2) AS web_sales#811], HashAggregate(keys=[ca_county#1375, d_qoy#1350, d_year#1346], functions=[sum(UnscaledValue(ws_ext_sales_price#1328))]), BroadcastQueryStage 32 "
          },
          "6" : {
            "sign" : 1140073279,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 149939504,
            "rowCount" : 3407716,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ca_county#786, web_sales#750, web_sales#807] "
          },
          "1" : {
            "sign" : 481195568,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 1114802720318976,
            "rowCount" : 11612528336656,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ca_county#64, d_year#35, (web_sales#807 / web_sales#750) AS web_q1_q2_increase#745, (store_sales#799 / store_sales#749) AS store_q1_q2_increase#746, (web_sales#811 / web_sales#807) AS web_q2_q3_increase#747, (store_sales#803 / store_sales#799) AS store_q2_q3_increase#748] "
          },
          "0" : {
            "sign" : 389364738,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 1114802720318976,
            "rowCount" : 11612528336656,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [d_year#35 ASC NULLS FIRST], true "
          },
          "2" : {
            "sign" : 593652607,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 1161252833665600,
            "rowCount" : 11612528336656,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (((ca_county#64 = ca_county#786) AND (CASE WHEN (web_sales#750 > 0.00) THEN (web_sales#807 / web_sales#750) END > CASE WHEN (store_sales#749 > 0.00) THEN (store_sales#799 / store_sales#749) END)) AND (CASE WHEN (web_sales#807 > 0.00) THEN (web_sales#811 / web_sales#807) END > CASE WHEN (store_sales#799 > 0.00) THEN (store_sales#803 / store_sales#799) END)) "
          },
          "7" : {
            "sign" : -29722014,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 218093824,
            "rowCount" : 3407716,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ca_county#786 = ca_county#1299) "
          },
          "3" : {
            "sign" : 1303782356,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 33619968,
            "rowCount" : 1846,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [store_sales#799, store_sales#803, ca_county#64, d_year#35, store_sales#749], BroadcastQueryStage 36 "
          }
        },
        "links" : [ {
          "fromId" : 3,
          "fromName" : "LogicalQueryStage",
          "toId" : 2,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "LogicalQueryStage",
          "toId" : 7,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "LogicalQueryStage",
          "toId" : 7,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Join",
          "toId" : 6,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Project",
          "toId" : 5,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "LogicalQueryStage",
          "toId" : 5,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Join",
          "toId" : 4,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Project",
          "toId" : 2,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Join",
          "toId" : 1,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Project",
          "toId" : 0,
          "toName" : "Sort",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Sort [d_year#35 ASC NULLS FIRST], true\n+- Project [ca_county#64, d_year#35, (web_sales#807 / web_sales#750) AS web_q1_q2_increase#745, (store_sales#799 / store_sales#749) AS store_q1_q2_increase#746, (web_sales#811 / web_sales#807) AS web_q2_q3_increase#747, (store_sales#803 / store_sales#799) AS store_q2_q3_increase#748]\n   +- Join Inner, (((ca_county#64 = ca_county#786) AND (CASE WHEN (web_sales#750 > 0.00) THEN (web_sales#807 / web_sales#750) END > CASE WHEN (store_sales#749 > 0.00) THEN (store_sales#799 / store_sales#749) END)) AND (CASE WHEN (web_sales#807 > 0.00) THEN (web_sales#811 / web_sales#807) END > CASE WHEN (store_sales#799 > 0.00) THEN (store_sales#803 / store_sales#799) END))\n      :- LogicalQueryStage Project [store_sales#799, store_sales#803, ca_county#64, d_year#35, store_sales#749], BroadcastQueryStage 36\n      +- Project [ca_county#786, web_sales#750, web_sales#807, web_sales#811]\n         +- Join Inner, (ca_county#786 = ca_county#1375)\n            :- Project [ca_county#786, web_sales#750, web_sales#807]\n            :  +- Join Inner, (ca_county#786 = ca_county#1299)\n            :     :- LogicalQueryStage LogicalQueryStage Aggregate [ca_county#786, d_qoy#761, d_year#757], [ca_county#786, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#92)),17,2) AS web_sales#750], HashAggregate(keys=[ca_county#786, d_qoy#761, d_year#757], functions=[sum(UnscaledValue(ws_ext_sales_price#92))]), BroadcastQueryStage 33\n            :     +- LogicalQueryStage Aggregate [ca_county#1299, d_qoy#1274, d_year#1270], [ca_county#1299, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#1252)),17,2) AS web_sales#807], HashAggregate(keys=[ca_county#1299, d_qoy#1274, d_year#1270], functions=[sum(UnscaledValue(ws_ext_sales_price#1252))])\n            +- LogicalQueryStage LogicalQueryStage Aggregate [ca_county#1375, d_qoy#1350, d_year#1346], [ca_county#1375, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#1328)),17,2) AS web_sales#811], HashAggregate(keys=[ca_county#1375, d_qoy#1350, d_year#1346], functions=[sum(UnscaledValue(ws_ext_sales_price#1328))]), BroadcastQueryStage 32\n"
      },
      "IM" : {
        "inputSizeInBytes" : 100965296,
        "inputRowCount" : 7384
      },
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "StartTimeInMs" : 1702226859712,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 1278,
        "IOBytes" : {
          "Total" : 154968,
          "Details" : {
            "IR" : 0,
            "IW" : 0,
            "SR" : 137287,
            "SW" : 17681
          }
        }
      }
    },
    "6" : {
      "LQP" : {
        "operators" : {
          "34" : {
            "sign" : 11414259,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 193232851474780,
            "rowCount" : 3716016374515,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ws_bill_addr_sk#1312 = ca_address_sk#1368) "
          },
          "12" : {
            "sign" : 182366066,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 39644968,
            "rowCount" : 970045,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ca_address_sk#1216, ca_county#1223], ShuffleQueryStage 4 "
          },
          "8" : {
            "sign" : 1844188976,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 9273107403947700,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [ca_county#1223, d_qoy#1198, d_year#1194], [ca_county#1223, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#1179)),17,2) AS store_sales#803] "
          },
          "19" : {
            "sign" : -2040657822,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 541696796090156174939107152064223404582462500,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ca_county#786 = ca_county#1375) "
          },
          "23" : {
            "sign" : -1614225448,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 2966210022697900,
            "rowCount" : 67413864152225,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_ext_sales_price#92, d_year#757, d_qoy#761, ca_county#786] "
          },
          "4" : {
            "sign" : 1934218230,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 5239079975515898996220663831626836000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ca_county#64 = ca_county#1158) "
          },
          "15" : {
            "sign" : 1307145011,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 13394488472368900,
            "rowCount" : 257586316776325,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_addr_sk#11 = ca_address_sk#57) "
          },
          "11" : {
            "sign" : 1384000956,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 7435136380,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ss_addr_sk#1170, ss_ext_sales_price#1179, d_year#1194, d_qoy#1198], ShuffleQueryStage 20 "
          },
          "9" : {
            "sign" : -1184610642,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 11333797938158300,
            "rowCount" : 257586316776325,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_ext_sales_price#1179, d_year#1194, d_qoy#1198, ca_county#1223] "
          },
          "33" : {
            "sign" : 1096329513,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 163504720478660,
            "rowCount" : 3716016374515,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_ext_sales_price#1328, d_year#1346, d_qoy#1350, ca_county#1375] "
          },
          "22" : {
            "sign" : 339408048,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 2426899109480100,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [ca_county#786, d_qoy#761, d_year#757], [ca_county#786, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#92)),17,2) AS web_sales#750] "
          },
          "26" : {
            "sign" : -840396086,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 39644968,
            "rowCount" : 970045,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ca_address_sk#779, ca_county#786], ShuffleQueryStage 11 "
          },
          "13" : {
            "sign" : 98465856,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 10303452671053000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [ca_county#64, d_qoy#39, d_year#35], [ca_county#64, d_year#35, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#20)),17,2) AS store_sales#749] "
          },
          "24" : {
            "sign" : -685478612,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 3505520935915700,
            "rowCount" : 67413864152225,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ws_bill_addr_sk#76 = ca_address_sk#779) "
          },
          "35" : {
            "sign" : 834142654,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 153230680,
            "rowCount" : 3830767,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ws_bill_addr_sk#1312, ws_ext_sales_price#1328, d_year#1346, d_qoy#1350], ShuffleQueryStage 21 "
          },
          "16" : {
            "sign" : 297985490,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 7435136380,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ss_addr_sk#11, ss_ext_sales_price#20, d_year#35, d_qoy#39], ShuffleQueryStage 23 "
          },
          "5" : {
            "sign" : -1583672072,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 508478093972791701412,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ca_county#1158, store_sales#799, store_sales#803] "
          },
          "10" : {
            "sign" : 1256814607,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 13394488472368900,
            "rowCount" : 257586316776325,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_addr_sk#1170 = ca_address_sk#1216) "
          },
          "21" : {
            "sign" : -175252555,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 5889839287595302405692296010000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ca_county#786 = ca_county#1299) "
          },
          "32" : {
            "sign" : -1873681378,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 133776589482540,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [ca_county#1375, d_qoy#1350, d_year#1346], [ca_county#1375, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#1328)),17,2) AS web_sales#811] "
          },
          "6" : {
            "sign" : 296931068,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 739604500324060656600,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ca_county#1158 = ca_county#1223) "
          },
          "36" : {
            "sign" : -1084009982,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 39644968,
            "rowCount" : 970045,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ca_address_sk#1368, ca_county#1375], ShuffleQueryStage 19 "
          },
          "1" : {
            "sign" : 973089214,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 1449865814371548784918169950014658604307280845812671551485668992087471083184000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ca_county#64, d_year#35, (web_sales#807 / web_sales#750) AS web_q1_q2_increase#745, (store_sales#799 / store_sales#749) AS store_q1_q2_increase#746, (web_sales#811 / web_sales#807) AS web_q2_q3_increase#747, (store_sales#803 / store_sales#799) AS store_q2_q3_increase#748] "
          },
          "17" : {
            "sign" : 1889027863,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 39644968,
            "rowCount" : 970045,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ca_address_sk#57, ca_county#64], ShuffleQueryStage 7 "
          },
          "25" : {
            "sign" : 1137046896,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1945876940,
            "rowCount" : 69495605,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ws_bill_addr_sk#76, ws_ext_sales_price#92, d_year#757, d_qoy#761], ShuffleQueryStage 24 "
          },
          "14" : {
            "sign" : -1206095892,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 11333797938158300,
            "rowCount" : 257586316776325,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_ext_sales_price#20, d_year#35, d_qoy#39, ca_county#64] "
          },
          "31" : {
            "sign" : 2142456221,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 39644968,
            "rowCount" : 970045,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ca_address_sk#1292, ca_county#1299], ShuffleQueryStage 15 "
          },
          "0" : {
            "sign" : -950197678,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 1449865814371548784918169950014658604307280845812671551485668992087471083184000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [d_year#35 ASC NULLS FIRST], true "
          },
          "20" : {
            "sign" : -657014884,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 4049264510221770403913453506875,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ca_county#786, web_sales#750, web_sales#807] "
          },
          "27" : {
            "sign" : 1861053396,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 2426899109480100,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [ca_county#1299, d_qoy#1274, d_year#1270], [ca_county#1299, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#1252)),17,2) AS web_sales#807] "
          },
          "2" : {
            "sign" : -811835339,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 1510276889970363317623093697931936046153417547721532866130905200091115711650000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (((ca_county#64 = ca_county#786) AND (CASE WHEN (web_sales#750 > 0.00) THEN (web_sales#807 / web_sales#750) END > CASE WHEN (store_sales#749 > 0.00) THEN (store_sales#799 / store_sales#749) END)) AND (CASE WHEN (web_sales#807 > 0.00) THEN (web_sales#811 / web_sales#807) END > CASE WHEN (store_sales#799 > 0.00) THEN (store_sales#803 / store_sales#799) END)) "
          },
          "18" : {
            "sign" : 1767313693,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 391225463842890570789355165379716903309556250,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ca_county#786, web_sales#750, web_sales#807, web_sales#811] "
          },
          "30" : {
            "sign" : 919213756,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1945876940,
            "rowCount" : 69495605,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ws_bill_addr_sk#1236, ws_ext_sales_price#1252, d_year#1270, d_qoy#1274], ShuffleQueryStage 25 "
          },
          "7" : {
            "sign" : 1377603520,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 79758,
            "rowCount" : 1899,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [ca_county#1158, d_qoy#1133, d_year#1129], [ca_county#1158, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#1114)),17,2) AS store_sales#799], HashAggregate(keys=[ca_county#1158, d_qoy#1133, d_year#1129], functions=[sum(UnscaledValue(ss_ext_sales_price#1114))]) "
          },
          "29" : {
            "sign" : 610900609,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 3505520935915700,
            "rowCount" : 67413864152225,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ws_bill_addr_sk#1236 = ca_address_sk#1292) "
          },
          "3" : {
            "sign" : -1258489827,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 3860374718801188734057331244356616000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [store_sales#799, store_sales#803, ca_county#64, d_year#35, store_sales#749] "
          },
          "28" : {
            "sign" : -1760044743,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 2966210022697900,
            "rowCount" : 67413864152225,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_ext_sales_price#1252, d_year#1270, d_qoy#1274, ca_county#1299] "
          }
        },
        "links" : [ {
          "fromId" : 7,
          "fromName" : "LogicalQueryStage",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "LogicalQueryStage",
          "toId" : 10,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 12,
          "fromName" : "LogicalQueryStage",
          "toId" : 10,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "Join",
          "toId" : 9,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "Project",
          "toId" : 8,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "Aggregate",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Join",
          "toId" : 5,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Project",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 16,
          "fromName" : "LogicalQueryStage",
          "toId" : 15,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 17,
          "fromName" : "LogicalQueryStage",
          "toId" : 15,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 15,
          "fromName" : "Join",
          "toId" : 14,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 14,
          "fromName" : "Project",
          "toId" : 13,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 13,
          "fromName" : "Aggregate",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Join",
          "toId" : 3,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Project",
          "toId" : 2,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 25,
          "fromName" : "LogicalQueryStage",
          "toId" : 24,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 26,
          "fromName" : "LogicalQueryStage",
          "toId" : 24,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 24,
          "fromName" : "Join",
          "toId" : 23,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 23,
          "fromName" : "Project",
          "toId" : 22,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 22,
          "fromName" : "Aggregate",
          "toId" : 21,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 30,
          "fromName" : "LogicalQueryStage",
          "toId" : 29,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 31,
          "fromName" : "LogicalQueryStage",
          "toId" : 29,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 29,
          "fromName" : "Join",
          "toId" : 28,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 28,
          "fromName" : "Project",
          "toId" : 27,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 27,
          "fromName" : "Aggregate",
          "toId" : 21,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 21,
          "fromName" : "Join",
          "toId" : 20,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 20,
          "fromName" : "Project",
          "toId" : 19,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 35,
          "fromName" : "LogicalQueryStage",
          "toId" : 34,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 36,
          "fromName" : "LogicalQueryStage",
          "toId" : 34,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 34,
          "fromName" : "Join",
          "toId" : 33,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 33,
          "fromName" : "Project",
          "toId" : 32,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 32,
          "fromName" : "Aggregate",
          "toId" : 19,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 19,
          "fromName" : "Join",
          "toId" : 18,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 18,
          "fromName" : "Project",
          "toId" : 2,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Join",
          "toId" : 1,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Project",
          "toId" : 0,
          "toName" : "Sort",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Sort [d_year#35 ASC NULLS FIRST], true\n+- Project [ca_county#64, d_year#35, (web_sales#807 / web_sales#750) AS web_q1_q2_increase#745, (store_sales#799 / store_sales#749) AS store_q1_q2_increase#746, (web_sales#811 / web_sales#807) AS web_q2_q3_increase#747, (store_sales#803 / store_sales#799) AS store_q2_q3_increase#748]\n   +- Join Inner, (((ca_county#64 = ca_county#786) AND (CASE WHEN (web_sales#750 > 0.00) THEN (web_sales#807 / web_sales#750) END > CASE WHEN (store_sales#749 > 0.00) THEN (store_sales#799 / store_sales#749) END)) AND (CASE WHEN (web_sales#807 > 0.00) THEN (web_sales#811 / web_sales#807) END > CASE WHEN (store_sales#799 > 0.00) THEN (store_sales#803 / store_sales#799) END))\n      :- Project [store_sales#799, store_sales#803, ca_county#64, d_year#35, store_sales#749]\n      :  +- Join Inner, (ca_county#64 = ca_county#1158)\n      :     :- Project [ca_county#1158, store_sales#799, store_sales#803]\n      :     :  +- Join Inner, (ca_county#1158 = ca_county#1223)\n      :     :     :- LogicalQueryStage Aggregate [ca_county#1158, d_qoy#1133, d_year#1129], [ca_county#1158, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#1114)),17,2) AS store_sales#799], HashAggregate(keys=[ca_county#1158, d_qoy#1133, d_year#1129], functions=[sum(UnscaledValue(ss_ext_sales_price#1114))])\n      :     :     +- Aggregate [ca_county#1223, d_qoy#1198, d_year#1194], [ca_county#1223, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#1179)),17,2) AS store_sales#803]\n      :     :        +- Project [ss_ext_sales_price#1179, d_year#1194, d_qoy#1198, ca_county#1223]\n      :     :           +- Join Inner, (ss_addr_sk#1170 = ca_address_sk#1216)\n      :     :              :- LogicalQueryStage Project [ss_addr_sk#1170, ss_ext_sales_price#1179, d_year#1194, d_qoy#1198], ShuffleQueryStage 20\n      :     :              +- LogicalQueryStage Project [ca_address_sk#1216, ca_county#1223], ShuffleQueryStage 4\n      :     +- Aggregate [ca_county#64, d_qoy#39, d_year#35], [ca_county#64, d_year#35, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#20)),17,2) AS store_sales#749]\n      :        +- Project [ss_ext_sales_price#20, d_year#35, d_qoy#39, ca_county#64]\n      :           +- Join Inner, (ss_addr_sk#11 = ca_address_sk#57)\n      :              :- LogicalQueryStage Project [ss_addr_sk#11, ss_ext_sales_price#20, d_year#35, d_qoy#39], ShuffleQueryStage 23\n      :              +- LogicalQueryStage Project [ca_address_sk#57, ca_county#64], ShuffleQueryStage 7\n      +- Project [ca_county#786, web_sales#750, web_sales#807, web_sales#811]\n         +- Join Inner, (ca_county#786 = ca_county#1375)\n            :- Project [ca_county#786, web_sales#750, web_sales#807]\n            :  +- Join Inner, (ca_county#786 = ca_county#1299)\n            :     :- Aggregate [ca_county#786, d_qoy#761, d_year#757], [ca_county#786, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#92)),17,2) AS web_sales#750]\n            :     :  +- Project [ws_ext_sales_price#92, d_year#757, d_qoy#761, ca_county#786]\n            :     :     +- Join Inner, (ws_bill_addr_sk#76 = ca_address_sk#779)\n            :     :        :- LogicalQueryStage Project [ws_bill_addr_sk#76, ws_ext_sales_price#92, d_year#757, d_qoy#761], ShuffleQueryStage 24\n            :     :        +- LogicalQueryStage Project [ca_address_sk#779, ca_county#786], ShuffleQueryStage 11\n            :     +- Aggregate [ca_county#1299, d_qoy#1274, d_year#1270], [ca_county#1299, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#1252)),17,2) AS web_sales#807]\n            :        +- Project [ws_ext_sales_price#1252, d_year#1270, d_qoy#1274, ca_county#1299]\n            :           +- Join Inner, (ws_bill_addr_sk#1236 = ca_address_sk#1292)\n            :              :- LogicalQueryStage Project [ws_bill_addr_sk#1236, ws_ext_sales_price#1252, d_year#1270, d_qoy#1274], ShuffleQueryStage 25\n            :              +- LogicalQueryStage Project [ca_address_sk#1292, ca_county#1299], ShuffleQueryStage 15\n            +- Aggregate [ca_county#1375, d_qoy#1350, d_year#1346], [ca_county#1375, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#1328)),17,2) AS web_sales#811]\n               +- Project [ws_ext_sales_price#1328, d_year#1346, d_qoy#1350, ca_county#1375]\n                  +- Join Inner, (ws_bill_addr_sk#1312 = ca_address_sk#1368)\n                     :- LogicalQueryStage Project [ws_bill_addr_sk#1312, ws_ext_sales_price#1328, d_year#1346, d_qoy#1350], ShuffleQueryStage 21\n                     +- LogicalQueryStage Project [ca_address_sk#1368, ca_county#1375], ShuffleQueryStage 19\n"
      },
      "IM" : {
        "inputSizeInBytes" : 19113561918,
        "inputRowCount" : 678755271
      },
      "PD" : {
        "2" : [ 175916, 169390, 169741, 173764, 171532, 170343, 170192, 175555, 181641, 177570, 175318, 169857, 177783, 168781, 165701, 174046, 175234, 175461, 173680, 169779, 179471, 178648, 169286, 174353, 171543, 176587, 176414, 172604, 173795, 174114, 171690, 169665, 179985, 168438, 177119, 172738, 170107, 170113, 176340, 178309, 163418, 169712, 163363, 172857, 171661, 169626, 180069, 173142, 168216, 164322, 176926, 167914, 171229, 176366, 172616, 181735, 177484, 172848, 172926, 160883, 166887, 164384, 170753, 177952, 169443, 171135, 168554, 166070, 174081, 175854, 172075, 174433, 171599, 179643, 180317, 167996, 181934, 177098, 171108, 174240, 175285, 176686, 177388, 163741, 174776, 167303, 162668, 178227, 174796, 168578, 178603, 178438, 187853, 168802, 176665, 175688, 173441, 163179, 168386, 169049, 165423, 173882, 163873, 171177, 171485, 177496, 177633, 169960, 171599, 176913, 167424, 168571, 173660, 164745, 168670, 174155, 160547, 176724, 183822, 166626, 169136, 173658, 179843, 178178, 183290, 185164, 177280, 159240, 176019, 183047, 169037, 175290, 178775, 173973, 174576, 171612, 169333, 179525, 169652, 170043, 169264, 168852, 173097, 174372, 171170, 173887, 173610, 171793, 176721, 171303, 170707, 179204, 191249, 170484, 171465, 181063, 181570, 169101, 176301, 158626, 162078, 172995, 173413, 168292, 173342, 169641, 172306, 175272, 172092, 174424, 174468, 173127, 181758, 166334, 176292, 175673, 175010, 169022, 174766, 170473, 171735, 183501, 175097, 168453, 178864, 169649, 172595, 171251, 166165, 166293, 174541, 167769, 176323, 166775, 168680, 176044, 176696, 175433, 168460, 175090 ],

      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 16,
        "FinishedTasksNum" : 22,
        "FinishedTasksTotalTimeInMs" : 23275.0,
        "FinishedTasksDistributionInMs" : [ 310.0, 403.0, 470.0, 1337.0, 3541.0 ]
      },
      "StartTimeInMs" : 1702226852761,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 8229,
        "IOBytes" : {
          "Total" : 795410730,
          "Details" : {
            "IR" : 132701727,
            "IW" : 0,
            "SR" : 429416902,
            "SW" : 233292101
          }
        }
      }
    },
    "1" : {
      "LQP" : {
        "operators" : {
          "45" : {
            "sign" : 1889027863,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 36861710,
            "rowCount" : 970045,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ca_address_sk#57, ca_county#64], ShuffleQueryStage 7 "
          },
          "34" : {
            "sign" : -754443005,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 13761654400,
            "rowCount" : 275233088,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_ext_sales_price#20, d_year#35, d_qoy#39, ca_county#64] "
          },
          "67" : {
            "sign" : -330040232,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 2501841780,
            "rowCount" : 69495605,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ws_sold_date_sk#1263 = d_date_sk#1264) "
          },
          "12" : {
            "sign" : -1915070295,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 6304008672,
            "rowCount" : 262667028,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_addr_sk#1105, ss_ext_sales_price#1114, ss_sold_date_sk#1122] "
          },
          "66" : {
            "sign" : -1270939539,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 1945876940,
            "rowCount" : 69495605,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_bill_addr_sk#1236, ws_ext_sales_price#1252, d_year#1270, d_qoy#1274] "
          },
          "51" : {
            "sign" : -313426304,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 3599158700,
            "rowCount" : 71983174,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_ext_sales_price#92, d_year#757, d_qoy#761, ca_county#786] "
          },
          "84" : {
            "sign" : -514706588,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 2960,
            "rowCount" : 148,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#1340, d_year#1346, d_qoy#1350] "
          },
          "8" : {
            "sign" : -1248451013,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 13761654400,
            "rowCount" : 275233088,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_ext_sales_price#1114, d_year#1129, d_qoy#1133, ca_county#1158] "
          },
          "73" : {
            "sign" : -623005156,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#1264, d_date_id#1265, d_date#1266, d_month_seq#1267, d_week_seq#1268, d_quarter_seq#1269, d_year#1270, d_dow#1271, d_moy#1272, d_dom#1273, d_qoy#1274, d_fy_year#1275, d_fy_quarter_seq#1276, d_fy_week_seq#1277, d_day_name#1278, d_quarter_name#1279, d_holiday#1280, d_weekend#1281, d_following_holiday#1282, d_first_dom#1283, d_last_dom#1284, d_same_day_ly#1285, d_same_day_lq#1286, d_current_day#1287, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "78" : {
            "sign" : 525700046,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 4175024092,
            "rowCount" : 71983174,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ws_bill_addr_sk#1312 = ca_address_sk#1368) "
          },
          "19" : {
            "sign" : -115093538,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 36861710,
            "rowCount" : 970045,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ca_address_sk#1151, ca_county#1158], ShuffleQueryStage 1 "
          },
          "23" : {
            "sign" : 539325142,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 676630264128,
            "rowCount" : 24165366576,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_addr_sk#1170, ss_ext_sales_price#1179, d_year#1194, d_qoy#1198] "
          },
          "62" : {
            "sign" : -840396086,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 36861710,
            "rowCount" : 970045,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ca_address_sk#779, ca_county#786], ShuffleQueryStage 11 "
          },
          "4" : {
            "sign" : 1868729040,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 53932459426826039820,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ca_county#64 = ca_county#1158) "
          },
          "88" : {
            "sign" : -1084009982,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 36861710,
            "rowCount" : 970045,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ca_address_sk#1368, ca_county#1375], ShuffleQueryStage 19 "
          },
          "77" : {
            "sign" : 251166280,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 3599158700,
            "rowCount" : 71983174,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_ext_sales_price#1328, d_year#1346, d_qoy#1350, ca_county#1375] "
          },
          "40" : {
            "sign" : 1954421237,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#6, ss_item_sk#7, ss_customer_sk#8, ss_cdemo_sk#9, ss_hdemo_sk#10, ss_addr_sk#11, ss_store_sk#12, ss_promo_sk#13, ss_ticket_number#14L, ss_quantity#15, ss_wholesale_cost#16, ss_list_price#17, ss_sales_price#18, ss_ext_discount_amt#19, ss_ext_sales_price#20, ss_ext_wholesale_cost#21, ss_ext_list_price#22, ss_ext_tax#23, ss_coupon_amt#24, ss_net_paid#25, ss_net_paid_inc_tax#26, ss_net_profit#27, ss_sold_date_sk#28], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "15" : {
            "sign" : -680060387,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 2900,
            "rowCount" : 145,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#1123, d_year#1129, d_qoy#1133] "
          },
          "11" : {
            "sign" : 1341743346,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 9559461060,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#1122 = d_date_sk#1123) "
          },
          "9" : {
            "sign" : -1494541629,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 15963519104,
            "rowCount" : 275233088,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_addr_sk#1105 = ca_address_sk#1151) "
          },
          "44" : {
            "sign" : -759457080,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 2900,
            "rowCount" : 145,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#29, d_year#35, d_qoy#39], BroadcastQueryStage 5 "
          },
          "33" : {
            "sign" : -290923167,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 87354,
            "rowCount" : 1899,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [ca_county#64, d_qoy#39, d_year#35], [ca_county#64, d_year#35, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#20)),17,2) AS store_sales#749] "
          },
          "22" : {
            "sign" : -1921698711,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 15963519104,
            "rowCount" : 275233088,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_addr_sk#1170 = ca_address_sk#1216) "
          },
          "56" : {
            "sign" : -1138181047,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 14968824624,
            "rowCount" : 71965503,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(ws_sold_date_sk#103) AND isnotnull(ws_bill_addr_sk#76)) AND dynamicpruning#1385 [ws_sold_date_sk#103]) "
          },
          "55" : {
            "sign" : 792866324,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 1727172072,
            "rowCount" : 71965503,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_bill_addr_sk#76, ws_ext_sales_price#92, ws_sold_date_sk#103] "
          },
          "26" : {
            "sign" : 380670726,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 39925388256,
            "rowCount" : 262667028,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(ss_sold_date_sk#1187) AND isnotnull(ss_addr_sk#1170)) AND dynamicpruning#1383 [ss_sold_date_sk#1187]) "
          },
          "50" : {
            "sign" : 1500123530,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 79758,
            "rowCount" : 1899,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [ca_county#786, d_qoy#761, d_year#757], [ca_county#786, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#92)),17,2) AS web_sales#750] "
          },
          "37" : {
            "sign" : 981064324,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 9559461060,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#28 = d_date_sk#29) "
          },
          "68" : {
            "sign" : 1274419678,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 1727172072,
            "rowCount" : 71965503,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_bill_addr_sk#1236, ws_ext_sales_price#1252, ws_sold_date_sk#1263] "
          },
          "61" : {
            "sign" : -590297923,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 2900,
            "rowCount" : 145,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#751, d_year#757, d_qoy#761], BroadcastQueryStage 9 "
          },
          "13" : {
            "sign" : -363767170,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 39925388256,
            "rowCount" : 262667028,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(ss_sold_date_sk#1122) AND isnotnull(ss_addr_sk#1105)) AND dynamicpruning#1382 [ss_sold_date_sk#1122]) "
          },
          "46" : {
            "sign" : 649370877,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 201937342782175,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ca_county#786, web_sales#750, web_sales#807, web_sales#811] "
          },
          "24" : {
            "sign" : -1063570738,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 869953196736,
            "rowCount" : 24165366576,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#1187 = d_date_sk#1188) "
          },
          "83" : {
            "sign" : -153323278,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 14972593792,
            "rowCount" : 71983624,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ws_sold_time_sk#1306, ws_ship_date_sk#1307, ws_item_sk#1308, ws_bill_customer_sk#1309, ws_bill_cdemo_sk#1310, ws_bill_hdemo_sk#1311, ws_bill_addr_sk#1312, ws_ship_customer_sk#1313, ws_ship_cdemo_sk#1314, ws_ship_hdemo_sk#1315, ws_ship_addr_sk#1316, ws_web_page_sk#1317, ws_web_site_sk#1318, ws_ship_mode_sk#1319, ws_warehouse_sk#1320, ws_promo_sk#1321, ws_order_number#1322L, ws_quantity#1323, ws_wholesale_cost#1324, ws_list_price#1325, ws_sales_price#1326, ws_ext_discount_amt#1327, ws_ext_sales_price#1328, ws_ext_wholesale_cost#1329, ... 10 more fields], `spark_catalog`.`tpcds_100`.`web_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "35" : {
            "sign" : 55457748,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 15963519104,
            "rowCount" : 275233088,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_addr_sk#11 = ca_address_sk#57) "
          },
          "16" : {
            "sign" : -412127915,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 35670,
            "rowCount" : 145,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(d_qoy#1133) AND isnotnull(d_year#1129)) AND ((d_qoy#1133 = 2) AND (d_year#1129 = 2000))) AND isnotnull(d_date_sk#1123)) "
          },
          "79" : {
            "sign" : -436391451,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 185383135728,
            "rowCount" : 6620826276,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_bill_addr_sk#1312, ws_ext_sales_price#1328, d_year#1346, d_qoy#1350] "
          },
          "5" : {
            "sign" : -1254654319,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 617401142784830,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ca_county#1158, store_sales#799, store_sales#803] "
          },
          "72" : {
            "sign" : 1412837595,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 35670,
            "rowCount" : 145,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(d_qoy#1274) AND isnotnull(d_year#1270)) AND ((d_qoy#1274 = 2) AND (d_year#1270 = 2000))) AND isnotnull(d_date_sk#1264)) "
          },
          "10" : {
            "sign" : -1032425306,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 7435136380,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_addr_sk#1105, ss_ext_sales_price#1114, d_year#1129, d_qoy#1133] "
          },
          "59" : {
            "sign" : -874849780,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 35670,
            "rowCount" : 145,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(d_qoy#761) AND isnotnull(d_year#757)) AND ((d_qoy#761 = 1) AND (d_year#757 = 2000))) AND isnotnull(d_date_sk#751)) "
          },
          "87" : {
            "sign" : 79858835,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1049312,
            "rowCount" : 92,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#1340, d_year#1346, d_qoy#1350], BroadcastQueryStage 17 "
          },
          "48" : {
            "sign" : 549940749,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 94950,
            "rowCount" : 1899,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ca_county#786, web_sales#750, web_sales#807] "
          },
          "21" : {
            "sign" : -1335210424,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 13761654400,
            "rowCount" : 275233088,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_ext_sales_price#1179, d_year#1194, d_qoy#1198, ca_county#1223] "
          },
          "76" : {
            "sign" : -144476541,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 2944766209,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [ca_county#1375, d_qoy#1350, d_year#1346], [ca_county#1375, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#1328)),17,2) AS web_sales#811] "
          },
          "54" : {
            "sign" : -42142668,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 2501841780,
            "rowCount" : 69495605,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ws_sold_date_sk#103 = d_date_sk#751) "
          },
          "43" : {
            "sign" : -2087206825,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#29, d_date_id#30, d_date#31, d_month_seq#32, d_week_seq#33, d_quarter_seq#34, d_year#35, d_dow#36, d_moy#37, d_dom#38, d_qoy#39, d_fy_year#40, d_fy_quarter_seq#41, d_fy_week_seq#42, d_day_name#43, d_quarter_name#44, d_holiday#45, d_weekend#46, d_following_holiday#47, d_first_dom#48, d_last_dom#49, d_same_day_ly#50, d_same_day_lq#51, d_current_day#52, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "65" : {
            "sign" : -338483294,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 4175024092,
            "rowCount" : 71983174,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ws_bill_addr_sk#1236 = ca_address_sk#1292) "
          },
          "71" : {
            "sign" : 571792556,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 2900,
            "rowCount" : 145,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#1264, d_year#1270, d_qoy#1274] "
          },
          "57" : {
            "sign" : -1030223128,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 14972593792,
            "rowCount" : 71983624,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ws_sold_time_sk#70, ws_ship_date_sk#71, ws_item_sk#72, ws_bill_customer_sk#73, ws_bill_cdemo_sk#74, ws_bill_hdemo_sk#75, ws_bill_addr_sk#76, ws_ship_customer_sk#77, ws_ship_cdemo_sk#78, ws_ship_hdemo_sk#79, ws_ship_addr_sk#80, ws_web_page_sk#81, ws_web_site_sk#82, ws_ship_mode_sk#83, ws_warehouse_sk#84, ws_promo_sk#85, ws_order_number#86L, ws_quantity#87, ws_wholesale_cost#88, ws_list_price#89, ws_sales_price#90, ws_ext_discount_amt#91, ws_ext_sales_price#92, ws_ext_wholesale_cost#93, ... 10 more fields], `spark_catalog`.`tpcds_100`.`web_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "32" : {
            "sign" : 182366066,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 36861710,
            "rowCount" : 970045,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ca_address_sk#1216, ca_county#1223], ShuffleQueryStage 4 "
          },
          "80" : {
            "sign" : -1900549560,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 238349745936,
            "rowCount" : 6620826276,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ws_sold_date_sk#1339 = d_date_sk#1340) "
          },
          "82" : {
            "sign" : -1177526971,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 14968824624,
            "rowCount" : 71965503,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(ws_sold_date_sk#1339) AND isnotnull(ws_bill_addr_sk#1312)) AND dynamicpruning#1387 [ws_sold_date_sk#1339]) "
          },
          "49" : {
            "sign" : -1172490316,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 144324,
            "rowCount" : 1899,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ca_county#786 = ca_county#1299) "
          },
          "6" : {
            "sign" : -1504226519,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 898038025868844,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ca_county#1158 = ca_county#1223) "
          },
          "36" : {
            "sign" : 484532713,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 7435136380,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_addr_sk#11, ss_ext_sales_price#20, d_year#35, d_qoy#39] "
          },
          "1" : {
            "sign" : 1557819014,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 7703933590688842914461570651575440,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ca_county#64, d_year#35, (web_sales#807 / web_sales#750) AS web_q1_q2_increase#745, (store_sales#799 / store_sales#749) AS store_q1_q2_increase#746, (web_sales#811 / web_sales#807) AS web_q2_q3_increase#747, (store_sales#803 / store_sales#799) AS store_q2_q3_increase#748] "
          },
          "39" : {
            "sign" : -863453878,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 39925388256,
            "rowCount" : 262667028,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(ss_sold_date_sk#28) AND isnotnull(ss_addr_sk#11)) AND dynamicpruning#1384 [ss_sold_date_sk#28]) "
          },
          "17" : {
            "sign" : 343220088,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#1123, d_date_id#1124, d_date#1125, d_month_seq#1126, d_week_seq#1127, d_quarter_seq#1128, d_year#1129, d_dow#1130, d_moy#1131, d_dom#1132, d_qoy#1133, d_fy_year#1134, d_fy_quarter_seq#1135, d_fy_week_seq#1136, d_day_name#1137, d_quarter_name#1138, d_holiday#1139, d_weekend#1140, d_following_holiday#1141, d_first_dom#1142, d_last_dom#1143, d_same_day_ly#1144, d_same_day_lq#1145, d_current_day#1146, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "25" : {
            "sign" : -1118856085,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 6304008672,
            "rowCount" : 262667028,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_addr_sk#1170, ss_ext_sales_price#1179, ss_sold_date_sk#1187] "
          },
          "60" : {
            "sign" : 1350793902,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#751, d_date_id#752, d_date#753, d_month_seq#754, d_week_seq#755, d_quarter_seq#756, d_year#757, d_dow#758, d_moy#759, d_dom#760, d_qoy#761, d_fy_year#762, d_fy_quarter_seq#763, d_fy_week_seq#764, d_day_name#765, d_quarter_name#766, d_holiday#767, d_weekend#768, d_following_holiday#769, d_first_dom#770, d_last_dom#771, d_same_day_ly#772, d_same_day_lq#773, d_current_day#774, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "14" : {
            "sign" : 397751215,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#1100, ss_item_sk#1101, ss_customer_sk#1102, ss_cdemo_sk#1103, ss_hdemo_sk#1104, ss_addr_sk#1105, ss_store_sk#1106, ss_promo_sk#1107, ss_ticket_number#1108L, ss_quantity#1109, ss_wholesale_cost#1110, ss_list_price#1111, ss_sales_price#1112, ss_ext_discount_amt#1113, ss_ext_sales_price#1114, ss_ext_wholesale_cost#1115, ss_ext_list_price#1116, ss_ext_tax#1117, ss_coupon_amt#1118, ss_net_paid#1119, ss_net_paid_inc_tax#1120, ss_net_profit#1121, ss_sold_date_sk#1122], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "47" : {
            "sign" : 1234603408,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 279605551544550,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ca_county#786 = ca_county#1375) "
          },
          "31" : {
            "sign" : 1069267282,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1049312,
            "rowCount" : 92,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#1188, d_year#1194, d_qoy#1198], BroadcastQueryStage 2 "
          },
          "69" : {
            "sign" : -1052337041,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 14968824624,
            "rowCount" : 71965503,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(ws_sold_date_sk#1263) AND isnotnull(ws_bill_addr_sk#1236)) AND dynamicpruning#1386 [ws_sold_date_sk#1263]) "
          },
          "58" : {
            "sign" : -1068806934,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 2900,
            "rowCount" : 145,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#751, d_year#757, d_qoy#761] "
          },
          "64" : {
            "sign" : 993300168,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 3599158700,
            "rowCount" : 71983174,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_ext_sales_price#1252, d_year#1270, d_qoy#1274, ca_county#1299] "
          },
          "53" : {
            "sign" : 519358088,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 1945876940,
            "rowCount" : 69495605,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_bill_addr_sk#76, ws_ext_sales_price#92, d_year#757, d_qoy#761] "
          },
          "42" : {
            "sign" : 1105724623,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 35670,
            "rowCount" : 145,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(d_qoy#39) AND isnotnull(d_year#35)) AND ((d_qoy#39 = 1) AND (d_year#35 = 2000))) AND isnotnull(d_date_sk#29)) "
          },
          "75" : {
            "sign" : 2142456221,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 36861710,
            "rowCount" : 970045,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ca_address_sk#1292, ca_county#1299], ShuffleQueryStage 15 "
          },
          "0" : {
            "sign" : -1150820012,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 7703933590688842914461570651575440,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [d_year#35 ASC NULLS FIRST], true "
          },
          "20" : {
            "sign" : 669674698,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 11259535418,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [ca_county#1223, d_qoy#1198, d_year#1194], [ca_county#1223, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#1179)),17,2) AS store_sales#803] "
          },
          "27" : {
            "sign" : 769089332,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#1165, ss_item_sk#1166, ss_customer_sk#1167, ss_cdemo_sk#1168, ss_hdemo_sk#1169, ss_addr_sk#1170, ss_store_sk#1171, ss_promo_sk#1172, ss_ticket_number#1173L, ss_quantity#1174, ss_wholesale_cost#1175, ss_list_price#1176, ss_sales_price#1177, ss_ext_discount_amt#1178, ss_ext_sales_price#1179, ss_ext_wholesale_cost#1180, ss_ext_list_price#1181, ss_ext_tax#1182, ss_coupon_amt#1183, ss_net_paid#1184, ss_net_paid_inc_tax#1185, ss_net_profit#1186, ss_sold_date_sk#1187], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "70" : {
            "sign" : 373033576,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 14972593792,
            "rowCount" : 71983624,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ws_sold_time_sk#1230, ws_ship_date_sk#1231, ws_item_sk#1232, ws_bill_customer_sk#1233, ws_bill_cdemo_sk#1234, ws_bill_hdemo_sk#1235, ws_bill_addr_sk#1236, ws_ship_customer_sk#1237, ws_ship_cdemo_sk#1238, ws_ship_hdemo_sk#1239, ws_ship_addr_sk#1240, ws_web_page_sk#1241, ws_web_site_sk#1242, ws_ship_mode_sk#1243, ws_warehouse_sk#1244, ws_promo_sk#1245, ws_order_number#1246L, ws_quantity#1247, ws_wholesale_cost#1248, ws_list_price#1249, ws_sales_price#1250, ws_ext_discount_amt#1251, ws_ext_sales_price#1252, ws_ext_wholesale_cost#1253, ... 10 more fields], `spark_catalog`.`tpcds_100`.`web_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "2" : {
            "sign" : -1473882607,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 8024930823634211369230802762057750,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (((ca_county#64 = ca_county#786) AND (CASE WHEN (web_sales#750 > 0.00) THEN (web_sales#807 / web_sales#750) END > CASE WHEN (store_sales#749 > 0.00) THEN (store_sales#799 / store_sales#749) END)) AND (CASE WHEN (web_sales#807 > 0.00) THEN (web_sales#811 / web_sales#807) END > CASE WHEN (store_sales#799 > 0.00) THEN (store_sales#803 / store_sales#799) END)) "
          },
          "86" : {
            "sign" : -465063234,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#1340, d_date_id#1341, d_date#1342, d_month_seq#1343, d_week_seq#1344, d_quarter_seq#1345, d_year#1346, d_dow#1347, d_moy#1348, d_dom#1349, d_qoy#1350, d_fy_year#1351, d_fy_quarter_seq#1352, d_fy_week_seq#1353, d_day_name#1354, d_quarter_name#1355, d_holiday#1356, d_weekend#1357, d_following_holiday#1358, d_first_dom#1359, d_last_dom#1360, d_same_day_ly#1361, d_same_day_lq#1362, d_current_day#1363, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "38" : {
            "sign" : 951653223,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 6304008672,
            "rowCount" : 262667028,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_addr_sk#11, ss_ext_sales_price#20, ss_sold_date_sk#28] "
          },
          "81" : {
            "sign" : -522238855,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 1727172072,
            "rowCount" : 71965503,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_bill_addr_sk#1312, ws_ext_sales_price#1328, ws_sold_date_sk#1339] "
          },
          "18" : {
            "sign" : -513683896,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 2900,
            "rowCount" : 145,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#1123, d_year#1129, d_qoy#1133], BroadcastQueryStage 0 "
          },
          "30" : {
            "sign" : -1375110310,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#1188, d_date_id#1189, d_date#1190, d_month_seq#1191, d_week_seq#1192, d_quarter_seq#1193, d_year#1194, d_dow#1195, d_moy#1196, d_dom#1197, d_qoy#1198, d_fy_year#1199, d_fy_quarter_seq#1200, d_fy_week_seq#1201, d_day_name#1202, d_quarter_name#1203, d_holiday#1204, d_weekend#1205, d_following_holiday#1206, d_first_dom#1207, d_last_dom#1208, d_same_day_ly#1209, d_same_day_lq#1210, d_current_day#1211, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "7" : {
            "sign" : -1816471055,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 79758,
            "rowCount" : 1899,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [ca_county#1158, d_qoy#1133, d_year#1129], [ca_county#1158, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#1114)),17,2) AS store_sales#799] "
          },
          "29" : {
            "sign" : -1342085097,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 36408,
            "rowCount" : 148,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(d_qoy#1198) AND isnotnull(d_year#1194)) AND ((d_qoy#1198 = 3) AND (d_year#1194 = 2000))) AND isnotnull(d_date_sk#1188)) "
          },
          "41" : {
            "sign" : 1118914342,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 2900,
            "rowCount" : 145,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#29, d_year#35, d_qoy#39] "
          },
          "63" : {
            "sign" : 255697135,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 79758,
            "rowCount" : 1899,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [ca_county#1299, d_qoy#1274, d_year#1270], [ca_county#1299, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#1252)),17,2) AS web_sales#807] "
          },
          "3" : {
            "sign" : -1922354367,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 39739706946082345130,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [store_sales#799, store_sales#803, ca_county#64, d_year#35, store_sales#749] "
          },
          "74" : {
            "sign" : 482943821,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 2900,
            "rowCount" : 145,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#1264, d_year#1270, d_qoy#1274], BroadcastQueryStage 13 "
          },
          "52" : {
            "sign" : -1671152826,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 4175024092,
            "rowCount" : 71983174,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ws_bill_addr_sk#76 = ca_address_sk#779) "
          },
          "85" : {
            "sign" : -1921256227,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 36408,
            "rowCount" : 148,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(d_qoy#1350) AND isnotnull(d_year#1346)) AND ((d_qoy#1350 = 3) AND (d_year#1346 = 2000))) AND isnotnull(d_date_sk#1340)) "
          },
          "28" : {
            "sign" : 1506356459,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 2960,
            "rowCount" : 148,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#1188, d_year#1194, d_qoy#1198] "
          }
        },
        "links" : [ {
          "fromId" : 14,
          "fromName" : "LogicalRelation",
          "toId" : 13,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 17,
          "fromName" : "LogicalRelation",
          "toId" : 16,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 16,
          "fromName" : "Filter",
          "toId" : 15,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 15,
          "fromName" : "Project",
          "toId" : 13,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 13,
          "fromName" : "Filter",
          "toId" : 12,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 12,
          "fromName" : "Project",
          "toId" : 11,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 18,
          "fromName" : "LogicalQueryStage",
          "toId" : 11,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "Join",
          "toId" : 10,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "Project",
          "toId" : 9,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 19,
          "fromName" : "LogicalQueryStage",
          "toId" : 9,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "Join",
          "toId" : 8,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "Project",
          "toId" : 7,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Aggregate",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 27,
          "fromName" : "LogicalRelation",
          "toId" : 26,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 30,
          "fromName" : "LogicalRelation",
          "toId" : 29,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 29,
          "fromName" : "Filter",
          "toId" : 28,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 28,
          "fromName" : "Project",
          "toId" : 26,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 26,
          "fromName" : "Filter",
          "toId" : 25,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 25,
          "fromName" : "Project",
          "toId" : 24,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 31,
          "fromName" : "LogicalQueryStage",
          "toId" : 24,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 24,
          "fromName" : "Join",
          "toId" : 23,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 23,
          "fromName" : "Project",
          "toId" : 22,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 32,
          "fromName" : "LogicalQueryStage",
          "toId" : 22,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 22,
          "fromName" : "Join",
          "toId" : 21,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 21,
          "fromName" : "Project",
          "toId" : 20,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 20,
          "fromName" : "Aggregate",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Join",
          "toId" : 5,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Project",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 40,
          "fromName" : "LogicalRelation",
          "toId" : 39,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 43,
          "fromName" : "LogicalRelation",
          "toId" : 42,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 42,
          "fromName" : "Filter",
          "toId" : 41,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 41,
          "fromName" : "Project",
          "toId" : 39,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 39,
          "fromName" : "Filter",
          "toId" : 38,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 38,
          "fromName" : "Project",
          "toId" : 37,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 44,
          "fromName" : "LogicalQueryStage",
          "toId" : 37,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 37,
          "fromName" : "Join",
          "toId" : 36,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 36,
          "fromName" : "Project",
          "toId" : 35,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 45,
          "fromName" : "LogicalQueryStage",
          "toId" : 35,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 35,
          "fromName" : "Join",
          "toId" : 34,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 34,
          "fromName" : "Project",
          "toId" : 33,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 33,
          "fromName" : "Aggregate",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Join",
          "toId" : 3,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Project",
          "toId" : 2,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 57,
          "fromName" : "LogicalRelation",
          "toId" : 56,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 60,
          "fromName" : "LogicalRelation",
          "toId" : 59,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 59,
          "fromName" : "Filter",
          "toId" : 58,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 58,
          "fromName" : "Project",
          "toId" : 56,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 56,
          "fromName" : "Filter",
          "toId" : 55,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 55,
          "fromName" : "Project",
          "toId" : 54,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 61,
          "fromName" : "LogicalQueryStage",
          "toId" : 54,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 54,
          "fromName" : "Join",
          "toId" : 53,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 53,
          "fromName" : "Project",
          "toId" : 52,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 62,
          "fromName" : "LogicalQueryStage",
          "toId" : 52,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 52,
          "fromName" : "Join",
          "toId" : 51,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 51,
          "fromName" : "Project",
          "toId" : 50,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 50,
          "fromName" : "Aggregate",
          "toId" : 49,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 70,
          "fromName" : "LogicalRelation",
          "toId" : 69,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 73,
          "fromName" : "LogicalRelation",
          "toId" : 72,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 72,
          "fromName" : "Filter",
          "toId" : 71,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 71,
          "fromName" : "Project",
          "toId" : 69,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 69,
          "fromName" : "Filter",
          "toId" : 68,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 68,
          "fromName" : "Project",
          "toId" : 67,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 74,
          "fromName" : "LogicalQueryStage",
          "toId" : 67,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 67,
          "fromName" : "Join",
          "toId" : 66,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 66,
          "fromName" : "Project",
          "toId" : 65,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 75,
          "fromName" : "LogicalQueryStage",
          "toId" : 65,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 65,
          "fromName" : "Join",
          "toId" : 64,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 64,
          "fromName" : "Project",
          "toId" : 63,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 63,
          "fromName" : "Aggregate",
          "toId" : 49,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 49,
          "fromName" : "Join",
          "toId" : 48,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 48,
          "fromName" : "Project",
          "toId" : 47,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 83,
          "fromName" : "LogicalRelation",
          "toId" : 82,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 86,
          "fromName" : "LogicalRelation",
          "toId" : 85,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 85,
          "fromName" : "Filter",
          "toId" : 84,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 84,
          "fromName" : "Project",
          "toId" : 82,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 82,
          "fromName" : "Filter",
          "toId" : 81,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 81,
          "fromName" : "Project",
          "toId" : 80,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 87,
          "fromName" : "LogicalQueryStage",
          "toId" : 80,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 80,
          "fromName" : "Join",
          "toId" : 79,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 79,
          "fromName" : "Project",
          "toId" : 78,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 88,
          "fromName" : "LogicalQueryStage",
          "toId" : 78,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 78,
          "fromName" : "Join",
          "toId" : 77,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 77,
          "fromName" : "Project",
          "toId" : 76,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 76,
          "fromName" : "Aggregate",
          "toId" : 47,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 47,
          "fromName" : "Join",
          "toId" : 46,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 46,
          "fromName" : "Project",
          "toId" : 2,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Join",
          "toId" : 1,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Project",
          "toId" : 0,
          "toName" : "Sort",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Sort [d_year#35 ASC NULLS FIRST], true\n+- Project [ca_county#64, d_year#35, (web_sales#807 / web_sales#750) AS web_q1_q2_increase#745, (store_sales#799 / store_sales#749) AS store_q1_q2_increase#746, (web_sales#811 / web_sales#807) AS web_q2_q3_increase#747, (store_sales#803 / store_sales#799) AS store_q2_q3_increase#748]\n   +- Join Inner, (((ca_county#64 = ca_county#786) AND (CASE WHEN (web_sales#750 > 0.00) THEN (web_sales#807 / web_sales#750) END > CASE WHEN (store_sales#749 > 0.00) THEN (store_sales#799 / store_sales#749) END)) AND (CASE WHEN (web_sales#807 > 0.00) THEN (web_sales#811 / web_sales#807) END > CASE WHEN (store_sales#799 > 0.00) THEN (store_sales#803 / store_sales#799) END))\n      :- Project [store_sales#799, store_sales#803, ca_county#64, d_year#35, store_sales#749]\n      :  +- Join Inner, (ca_county#64 = ca_county#1158)\n      :     :- Project [ca_county#1158, store_sales#799, store_sales#803]\n      :     :  +- Join Inner, (ca_county#1158 = ca_county#1223)\n      :     :     :- Aggregate [ca_county#1158, d_qoy#1133, d_year#1129], [ca_county#1158, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#1114)),17,2) AS store_sales#799]\n      :     :     :  +- Project [ss_ext_sales_price#1114, d_year#1129, d_qoy#1133, ca_county#1158]\n      :     :     :     +- Join Inner, (ss_addr_sk#1105 = ca_address_sk#1151)\n      :     :     :        :- Project [ss_addr_sk#1105, ss_ext_sales_price#1114, d_year#1129, d_qoy#1133]\n      :     :     :        :  +- Join Inner, (ss_sold_date_sk#1122 = d_date_sk#1123)\n      :     :     :        :     :- Project [ss_addr_sk#1105, ss_ext_sales_price#1114, ss_sold_date_sk#1122]\n      :     :     :        :     :  +- Filter ((isnotnull(ss_sold_date_sk#1122) AND isnotnull(ss_addr_sk#1105)) AND dynamicpruning#1382 [ss_sold_date_sk#1122])\n      :     :     :        :     :     :  +- Project [d_date_sk#1123, d_year#1129, d_qoy#1133]\n      :     :     :        :     :     :     +- Filter (((isnotnull(d_qoy#1133) AND isnotnull(d_year#1129)) AND ((d_qoy#1133 = 2) AND (d_year#1129 = 2000))) AND isnotnull(d_date_sk#1123))\n      :     :     :        :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#1123,d_date_id#1124,d_date#1125,d_month_seq#1126,d_week_seq#1127,d_quarter_seq#1128,d_year#1129,d_dow#1130,d_moy#1131,d_dom#1132,d_qoy#1133,d_fy_year#1134,d_fy_quarter_seq#1135,d_fy_week_seq#1136,d_day_name#1137,d_quarter_name#1138,d_holiday#1139,d_weekend#1140,d_following_holiday#1141,d_first_dom#1142,d_last_dom#1143,d_same_day_ly#1144,d_same_day_lq#1145,d_current_day#1146,... 4 more fields] parquet\n      :     :     :        :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#1100,ss_item_sk#1101,ss_customer_sk#1102,ss_cdemo_sk#1103,ss_hdemo_sk#1104,ss_addr_sk#1105,ss_store_sk#1106,ss_promo_sk#1107,ss_ticket_number#1108L,ss_quantity#1109,ss_wholesale_cost#1110,ss_list_price#1111,ss_sales_price#1112,ss_ext_discount_amt#1113,ss_ext_sales_price#1114,ss_ext_wholesale_cost#1115,ss_ext_list_price#1116,ss_ext_tax#1117,ss_coupon_amt#1118,ss_net_paid#1119,ss_net_paid_inc_tax#1120,ss_net_profit#1121,ss_sold_date_sk#1122] parquet\n      :     :     :        :     +- LogicalQueryStage Project [d_date_sk#1123, d_year#1129, d_qoy#1133], BroadcastQueryStage 0\n      :     :     :        +- LogicalQueryStage Project [ca_address_sk#1151, ca_county#1158], ShuffleQueryStage 1\n      :     :     +- Aggregate [ca_county#1223, d_qoy#1198, d_year#1194], [ca_county#1223, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#1179)),17,2) AS store_sales#803]\n      :     :        +- Project [ss_ext_sales_price#1179, d_year#1194, d_qoy#1198, ca_county#1223]\n      :     :           +- Join Inner, (ss_addr_sk#1170 = ca_address_sk#1216)\n      :     :              :- Project [ss_addr_sk#1170, ss_ext_sales_price#1179, d_year#1194, d_qoy#1198]\n      :     :              :  +- Join Inner, (ss_sold_date_sk#1187 = d_date_sk#1188)\n      :     :              :     :- Project [ss_addr_sk#1170, ss_ext_sales_price#1179, ss_sold_date_sk#1187]\n      :     :              :     :  +- Filter ((isnotnull(ss_sold_date_sk#1187) AND isnotnull(ss_addr_sk#1170)) AND dynamicpruning#1383 [ss_sold_date_sk#1187])\n      :     :              :     :     :  +- Project [d_date_sk#1188, d_year#1194, d_qoy#1198]\n      :     :              :     :     :     +- Filter (((isnotnull(d_qoy#1198) AND isnotnull(d_year#1194)) AND ((d_qoy#1198 = 3) AND (d_year#1194 = 2000))) AND isnotnull(d_date_sk#1188))\n      :     :              :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#1188,d_date_id#1189,d_date#1190,d_month_seq#1191,d_week_seq#1192,d_quarter_seq#1193,d_year#1194,d_dow#1195,d_moy#1196,d_dom#1197,d_qoy#1198,d_fy_year#1199,d_fy_quarter_seq#1200,d_fy_week_seq#1201,d_day_name#1202,d_quarter_name#1203,d_holiday#1204,d_weekend#1205,d_following_holiday#1206,d_first_dom#1207,d_last_dom#1208,d_same_day_ly#1209,d_same_day_lq#1210,d_current_day#1211,... 4 more fields] parquet\n      :     :              :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#1165,ss_item_sk#1166,ss_customer_sk#1167,ss_cdemo_sk#1168,ss_hdemo_sk#1169,ss_addr_sk#1170,ss_store_sk#1171,ss_promo_sk#1172,ss_ticket_number#1173L,ss_quantity#1174,ss_wholesale_cost#1175,ss_list_price#1176,ss_sales_price#1177,ss_ext_discount_amt#1178,ss_ext_sales_price#1179,ss_ext_wholesale_cost#1180,ss_ext_list_price#1181,ss_ext_tax#1182,ss_coupon_amt#1183,ss_net_paid#1184,ss_net_paid_inc_tax#1185,ss_net_profit#1186,ss_sold_date_sk#1187] parquet\n      :     :              :     +- LogicalQueryStage Project [d_date_sk#1188, d_year#1194, d_qoy#1198], BroadcastQueryStage 2\n      :     :              +- LogicalQueryStage Project [ca_address_sk#1216, ca_county#1223], ShuffleQueryStage 4\n      :     +- Aggregate [ca_county#64, d_qoy#39, d_year#35], [ca_county#64, d_year#35, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#20)),17,2) AS store_sales#749]\n      :        +- Project [ss_ext_sales_price#20, d_year#35, d_qoy#39, ca_county#64]\n      :           +- Join Inner, (ss_addr_sk#11 = ca_address_sk#57)\n      :              :- Project [ss_addr_sk#11, ss_ext_sales_price#20, d_year#35, d_qoy#39]\n      :              :  +- Join Inner, (ss_sold_date_sk#28 = d_date_sk#29)\n      :              :     :- Project [ss_addr_sk#11, ss_ext_sales_price#20, ss_sold_date_sk#28]\n      :              :     :  +- Filter ((isnotnull(ss_sold_date_sk#28) AND isnotnull(ss_addr_sk#11)) AND dynamicpruning#1384 [ss_sold_date_sk#28])\n      :              :     :     :  +- Project [d_date_sk#29, d_year#35, d_qoy#39]\n      :              :     :     :     +- Filter (((isnotnull(d_qoy#39) AND isnotnull(d_year#35)) AND ((d_qoy#39 = 1) AND (d_year#35 = 2000))) AND isnotnull(d_date_sk#29))\n      :              :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#29,d_date_id#30,d_date#31,d_month_seq#32,d_week_seq#33,d_quarter_seq#34,d_year#35,d_dow#36,d_moy#37,d_dom#38,d_qoy#39,d_fy_year#40,d_fy_quarter_seq#41,d_fy_week_seq#42,d_day_name#43,d_quarter_name#44,d_holiday#45,d_weekend#46,d_following_holiday#47,d_first_dom#48,d_last_dom#49,d_same_day_ly#50,d_same_day_lq#51,d_current_day#52,... 4 more fields] parquet\n      :              :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#6,ss_item_sk#7,ss_customer_sk#8,ss_cdemo_sk#9,ss_hdemo_sk#10,ss_addr_sk#11,ss_store_sk#12,ss_promo_sk#13,ss_ticket_number#14L,ss_quantity#15,ss_wholesale_cost#16,ss_list_price#17,ss_sales_price#18,ss_ext_discount_amt#19,ss_ext_sales_price#20,ss_ext_wholesale_cost#21,ss_ext_list_price#22,ss_ext_tax#23,ss_coupon_amt#24,ss_net_paid#25,ss_net_paid_inc_tax#26,ss_net_profit#27,ss_sold_date_sk#28] parquet\n      :              :     +- LogicalQueryStage Project [d_date_sk#29, d_year#35, d_qoy#39], BroadcastQueryStage 5\n      :              +- LogicalQueryStage Project [ca_address_sk#57, ca_county#64], ShuffleQueryStage 7\n      +- Project [ca_county#786, web_sales#750, web_sales#807, web_sales#811]\n         +- Join Inner, (ca_county#786 = ca_county#1375)\n            :- Project [ca_county#786, web_sales#750, web_sales#807]\n            :  +- Join Inner, (ca_county#786 = ca_county#1299)\n            :     :- Aggregate [ca_county#786, d_qoy#761, d_year#757], [ca_county#786, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#92)),17,2) AS web_sales#750]\n            :     :  +- Project [ws_ext_sales_price#92, d_year#757, d_qoy#761, ca_county#786]\n            :     :     +- Join Inner, (ws_bill_addr_sk#76 = ca_address_sk#779)\n            :     :        :- Project [ws_bill_addr_sk#76, ws_ext_sales_price#92, d_year#757, d_qoy#761]\n            :     :        :  +- Join Inner, (ws_sold_date_sk#103 = d_date_sk#751)\n            :     :        :     :- Project [ws_bill_addr_sk#76, ws_ext_sales_price#92, ws_sold_date_sk#103]\n            :     :        :     :  +- Filter ((isnotnull(ws_sold_date_sk#103) AND isnotnull(ws_bill_addr_sk#76)) AND dynamicpruning#1385 [ws_sold_date_sk#103])\n            :     :        :     :     :  +- Project [d_date_sk#751, d_year#757, d_qoy#761]\n            :     :        :     :     :     +- Filter (((isnotnull(d_qoy#761) AND isnotnull(d_year#757)) AND ((d_qoy#761 = 1) AND (d_year#757 = 2000))) AND isnotnull(d_date_sk#751))\n            :     :        :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#751,d_date_id#752,d_date#753,d_month_seq#754,d_week_seq#755,d_quarter_seq#756,d_year#757,d_dow#758,d_moy#759,d_dom#760,d_qoy#761,d_fy_year#762,d_fy_quarter_seq#763,d_fy_week_seq#764,d_day_name#765,d_quarter_name#766,d_holiday#767,d_weekend#768,d_following_holiday#769,d_first_dom#770,d_last_dom#771,d_same_day_ly#772,d_same_day_lq#773,d_current_day#774,... 4 more fields] parquet\n            :     :        :     :     +- Relation spark_catalog.tpcds_100.web_sales[ws_sold_time_sk#70,ws_ship_date_sk#71,ws_item_sk#72,ws_bill_customer_sk#73,ws_bill_cdemo_sk#74,ws_bill_hdemo_sk#75,ws_bill_addr_sk#76,ws_ship_customer_sk#77,ws_ship_cdemo_sk#78,ws_ship_hdemo_sk#79,ws_ship_addr_sk#80,ws_web_page_sk#81,ws_web_site_sk#82,ws_ship_mode_sk#83,ws_warehouse_sk#84,ws_promo_sk#85,ws_order_number#86L,ws_quantity#87,ws_wholesale_cost#88,ws_list_price#89,ws_sales_price#90,ws_ext_discount_amt#91,ws_ext_sales_price#92,ws_ext_wholesale_cost#93,... 10 more fields] parquet\n            :     :        :     +- LogicalQueryStage Project [d_date_sk#751, d_year#757, d_qoy#761], BroadcastQueryStage 9\n            :     :        +- LogicalQueryStage Project [ca_address_sk#779, ca_county#786], ShuffleQueryStage 11\n            :     +- Aggregate [ca_county#1299, d_qoy#1274, d_year#1270], [ca_county#1299, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#1252)),17,2) AS web_sales#807]\n            :        +- Project [ws_ext_sales_price#1252, d_year#1270, d_qoy#1274, ca_county#1299]\n            :           +- Join Inner, (ws_bill_addr_sk#1236 = ca_address_sk#1292)\n            :              :- Project [ws_bill_addr_sk#1236, ws_ext_sales_price#1252, d_year#1270, d_qoy#1274]\n            :              :  +- Join Inner, (ws_sold_date_sk#1263 = d_date_sk#1264)\n            :              :     :- Project [ws_bill_addr_sk#1236, ws_ext_sales_price#1252, ws_sold_date_sk#1263]\n            :              :     :  +- Filter ((isnotnull(ws_sold_date_sk#1263) AND isnotnull(ws_bill_addr_sk#1236)) AND dynamicpruning#1386 [ws_sold_date_sk#1263])\n            :              :     :     :  +- Project [d_date_sk#1264, d_year#1270, d_qoy#1274]\n            :              :     :     :     +- Filter (((isnotnull(d_qoy#1274) AND isnotnull(d_year#1270)) AND ((d_qoy#1274 = 2) AND (d_year#1270 = 2000))) AND isnotnull(d_date_sk#1264))\n            :              :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#1264,d_date_id#1265,d_date#1266,d_month_seq#1267,d_week_seq#1268,d_quarter_seq#1269,d_year#1270,d_dow#1271,d_moy#1272,d_dom#1273,d_qoy#1274,d_fy_year#1275,d_fy_quarter_seq#1276,d_fy_week_seq#1277,d_day_name#1278,d_quarter_name#1279,d_holiday#1280,d_weekend#1281,d_following_holiday#1282,d_first_dom#1283,d_last_dom#1284,d_same_day_ly#1285,d_same_day_lq#1286,d_current_day#1287,... 4 more fields] parquet\n            :              :     :     +- Relation spark_catalog.tpcds_100.web_sales[ws_sold_time_sk#1230,ws_ship_date_sk#1231,ws_item_sk#1232,ws_bill_customer_sk#1233,ws_bill_cdemo_sk#1234,ws_bill_hdemo_sk#1235,ws_bill_addr_sk#1236,ws_ship_customer_sk#1237,ws_ship_cdemo_sk#1238,ws_ship_hdemo_sk#1239,ws_ship_addr_sk#1240,ws_web_page_sk#1241,ws_web_site_sk#1242,ws_ship_mode_sk#1243,ws_warehouse_sk#1244,ws_promo_sk#1245,ws_order_number#1246L,ws_quantity#1247,ws_wholesale_cost#1248,ws_list_price#1249,ws_sales_price#1250,ws_ext_discount_amt#1251,ws_ext_sales_price#1252,ws_ext_wholesale_cost#1253,... 10 more fields] parquet\n            :              :     +- LogicalQueryStage Project [d_date_sk#1264, d_year#1270, d_qoy#1274], BroadcastQueryStage 13\n            :              +- LogicalQueryStage Project [ca_address_sk#1292, ca_county#1299], ShuffleQueryStage 15\n            +- Aggregate [ca_county#1375, d_qoy#1350, d_year#1346], [ca_county#1375, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#1328)),17,2) AS web_sales#811]\n               +- Project [ws_ext_sales_price#1328, d_year#1346, d_qoy#1350, ca_county#1375]\n                  +- Join Inner, (ws_bill_addr_sk#1312 = ca_address_sk#1368)\n                     :- Project [ws_bill_addr_sk#1312, ws_ext_sales_price#1328, d_year#1346, d_qoy#1350]\n                     :  +- Join Inner, (ws_sold_date_sk#1339 = d_date_sk#1340)\n                     :     :- Project [ws_bill_addr_sk#1312, ws_ext_sales_price#1328, ws_sold_date_sk#1339]\n                     :     :  +- Filter ((isnotnull(ws_sold_date_sk#1339) AND isnotnull(ws_bill_addr_sk#1312)) AND dynamicpruning#1387 [ws_sold_date_sk#1339])\n                     :     :     :  +- Project [d_date_sk#1340, d_year#1346, d_qoy#1350]\n                     :     :     :     +- Filter (((isnotnull(d_qoy#1350) AND isnotnull(d_year#1346)) AND ((d_qoy#1350 = 3) AND (d_year#1346 = 2000))) AND isnotnull(d_date_sk#1340))\n                     :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#1340,d_date_id#1341,d_date#1342,d_month_seq#1343,d_week_seq#1344,d_quarter_seq#1345,d_year#1346,d_dow#1347,d_moy#1348,d_dom#1349,d_qoy#1350,d_fy_year#1351,d_fy_quarter_seq#1352,d_fy_week_seq#1353,d_day_name#1354,d_quarter_name#1355,d_holiday#1356,d_weekend#1357,d_following_holiday#1358,d_first_dom#1359,d_last_dom#1360,d_same_day_ly#1361,d_same_day_lq#1362,d_current_day#1363,... 4 more fields] parquet\n                     :     :     +- Relation spark_catalog.tpcds_100.web_sales[ws_sold_time_sk#1306,ws_ship_date_sk#1307,ws_item_sk#1308,ws_bill_customer_sk#1309,ws_bill_cdemo_sk#1310,ws_bill_hdemo_sk#1311,ws_bill_addr_sk#1312,ws_ship_customer_sk#1313,ws_ship_cdemo_sk#1314,ws_ship_hdemo_sk#1315,ws_ship_addr_sk#1316,ws_web_page_sk#1317,ws_web_site_sk#1318,ws_ship_mode_sk#1319,ws_warehouse_sk#1320,ws_promo_sk#1321,ws_order_number#1322L,ws_quantity#1323,ws_wholesale_cost#1324,ws_list_price#1325,ws_sales_price#1326,ws_ext_discount_amt#1327,ws_ext_sales_price#1328,ws_ext_wholesale_cost#1329,... 10 more fields] parquet\n                     :     +- LogicalQueryStage Project [d_date_sk#1340, d_year#1346, d_qoy#1350], BroadcastQueryStage 17\n                     +- LogicalQueryStage Project [ca_address_sk#1368, ca_county#1375], ShuffleQueryStage 19\n"
      },
      "IM" : {
        "inputSizeInBytes" : 170561742828,
        "inputRowCount" : 1046907965
      },
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 4,
        "FinishedTasksNum" : 3,
        "FinishedTasksTotalTimeInMs" : 4384.0,
        "FinishedTasksDistributionInMs" : [ 1392.0, 1392.0, 1426.0, 1566.0, 1566.0 ]
      },
      "StartTimeInMs" : 1702226848235,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 12755,
        "IOBytes" : {
          "Total" : 974198580,
          "Details" : {
            "IR" : 195379069,
            "IW" : 0,
            "SR" : 429416902,
            "SW" : 349402609
          }
        }
      }
    },
    "17" : {
      "LQP" : {
        "operators" : {
          "12" : {
            "sign" : 1140073279,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 149939504,
            "rowCount" : 3407716,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ca_county#786, web_sales#750, web_sales#807] "
          },
          "8" : {
            "sign" : -1108439567,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 316176,
            "rowCount" : 5538,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [ca_county#1223, d_qoy#1198, d_year#1194], [ca_county#1223, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#1179)),17,2) AS store_sales#803], HashAggregate(keys=[ca_county#1223, d_qoy#1198, d_year#1194], functions=[sum(UnscaledValue(ss_ext_sales_price#1179))]) "
          },
          "4" : {
            "sign" : -1092251939,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 5737067087232,
            "rowCount" : 75487724832,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ca_county#64 = ca_county#1158) "
          },
          "15" : {
            "sign" : 1322015049,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 105392,
            "rowCount" : 1846,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [ca_county#1299, d_qoy#1274, d_year#1270], [ca_county#1299, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#1252)),17,2) AS web_sales#807], HashAggregate(keys=[ca_county#1299, d_qoy#1274, d_year#1270], functions=[sum(UnscaledValue(ws_ext_sales_price#1252))]) "
          },
          "11" : {
            "sign" : 443265521,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 452926348992,
            "rowCount" : 6290643736,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ca_county#786 = ca_county#1375) "
          },
          "9" : {
            "sign" : -1528605442,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 210784,
            "rowCount" : 3692,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: LogicalQueryStage Aggregate [ca_county#64, d_qoy#39, d_year#35], [ca_county#64, d_year#35, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#20)),17,2) AS store_sales#749], HashAggregate(keys=[ca_county#64, d_qoy#39, d_year#35], functions=[sum(UnscaledValue(ss_ext_sales_price#20))]), BroadcastQueryStage 34 "
          },
          "13" : {
            "sign" : -29722014,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 218093824,
            "rowCount" : 3407716,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ca_county#786 = ca_county#1299) "
          },
          "16" : {
            "sign" : 1621679114,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 33619968,
            "rowCount" : 1846,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: LogicalQueryStage Aggregate [ca_county#1375, d_qoy#1350, d_year#1346], [ca_county#1375, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#1328)),17,2) AS web_sales#811], HashAggregate(keys=[ca_county#1375, d_qoy#1350, d_year#1346], functions=[sum(UnscaledValue(ws_ext_sales_price#1328))]), BroadcastQueryStage 32 "
          },
          "5" : {
            "sign" : 223713833,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 899637024,
            "rowCount" : 20446296,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ca_county#1158, store_sales#799, store_sales#803] "
          },
          "10" : {
            "sign" : -1348798510,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 327113474272,
            "rowCount" : 6290643736,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ca_county#786, web_sales#750, web_sales#807, web_sales#811] "
          },
          "6" : {
            "sign" : -1808253999,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 1308562944,
            "rowCount" : 20446296,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ca_county#1158 = ca_county#1223) "
          },
          "1" : {
            "sign" : 1406717690,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 45587172802493995425792,
            "rowCount" : 474866383359312452352,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ca_county#64, d_year#35, (web_sales#807 / web_sales#750) AS web_q1_q2_increase#745, (store_sales#799 / store_sales#749) AS store_q1_q2_increase#746, (web_sales#811 / web_sales#807) AS web_q2_q3_increase#747, (store_sales#803 / store_sales#799) AS store_q2_q3_increase#748] "
          },
          "14" : {
            "sign" : 1028205086,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 105392,
            "rowCount" : 1846,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: LogicalQueryStage Aggregate [ca_county#786, d_qoy#761, d_year#757], [ca_county#786, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#92)),17,2) AS web_sales#750], HashAggregate(keys=[ca_county#786, d_qoy#761, d_year#757], functions=[sum(UnscaledValue(ws_ext_sales_price#92))]), BroadcastQueryStage 33 "
          },
          "0" : {
            "sign" : 1029810670,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 45587172802493995425792,
            "rowCount" : 474866383359312452352,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [d_year#35 ASC NULLS FIRST], true "
          },
          "2" : {
            "sign" : 441844587,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 47486638335931245235200,
            "rowCount" : 474866383359312452352,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (((ca_county#64 = ca_county#786) AND (CASE WHEN (web_sales#750 > 0.00) THEN (web_sales#807 / web_sales#750) END > CASE WHEN (store_sales#749 > 0.00) THEN (store_sales#799 / store_sales#749) END)) AND (CASE WHEN (web_sales#807 > 0.00) THEN (web_sales#811 / web_sales#807) END > CASE WHEN (store_sales#799 > 0.00) THEN (store_sales#803 / store_sales#799) END)) "
          },
          "7" : {
            "sign" : 1377603520,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 210784,
            "rowCount" : 3692,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [ca_county#1158, d_qoy#1133, d_year#1129], [ca_county#1158, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#1114)),17,2) AS store_sales#799], HashAggregate(keys=[ca_county#1158, d_qoy#1133, d_year#1129], functions=[sum(UnscaledValue(ss_ext_sales_price#1114))]) "
          },
          "3" : {
            "sign" : 1897045010,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 4227312590592,
            "rowCount" : 75487724832,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [store_sales#799, store_sales#803, ca_county#64, d_year#35, store_sales#749] "
          }
        },
        "links" : [ {
          "fromId" : 7,
          "fromName" : "LogicalQueryStage",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "LogicalQueryStage",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Join",
          "toId" : 5,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Project",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "LogicalQueryStage",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Join",
          "toId" : 3,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Project",
          "toId" : 2,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 14,
          "fromName" : "LogicalQueryStage",
          "toId" : 13,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 15,
          "fromName" : "LogicalQueryStage",
          "toId" : 13,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 13,
          "fromName" : "Join",
          "toId" : 12,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 12,
          "fromName" : "Project",
          "toId" : 11,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 16,
          "fromName" : "LogicalQueryStage",
          "toId" : 11,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "Join",
          "toId" : 10,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "Project",
          "toId" : 2,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Join",
          "toId" : 1,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Project",
          "toId" : 0,
          "toName" : "Sort",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Sort [d_year#35 ASC NULLS FIRST], true\n+- Project [ca_county#64, d_year#35, (web_sales#807 / web_sales#750) AS web_q1_q2_increase#745, (store_sales#799 / store_sales#749) AS store_q1_q2_increase#746, (web_sales#811 / web_sales#807) AS web_q2_q3_increase#747, (store_sales#803 / store_sales#799) AS store_q2_q3_increase#748]\n   +- Join Inner, (((ca_county#64 = ca_county#786) AND (CASE WHEN (web_sales#750 > 0.00) THEN (web_sales#807 / web_sales#750) END > CASE WHEN (store_sales#749 > 0.00) THEN (store_sales#799 / store_sales#749) END)) AND (CASE WHEN (web_sales#807 > 0.00) THEN (web_sales#811 / web_sales#807) END > CASE WHEN (store_sales#799 > 0.00) THEN (store_sales#803 / store_sales#799) END))\n      :- Project [store_sales#799, store_sales#803, ca_county#64, d_year#35, store_sales#749]\n      :  +- Join Inner, (ca_county#64 = ca_county#1158)\n      :     :- Project [ca_county#1158, store_sales#799, store_sales#803]\n      :     :  +- Join Inner, (ca_county#1158 = ca_county#1223)\n      :     :     :- LogicalQueryStage Aggregate [ca_county#1158, d_qoy#1133, d_year#1129], [ca_county#1158, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#1114)),17,2) AS store_sales#799], HashAggregate(keys=[ca_county#1158, d_qoy#1133, d_year#1129], functions=[sum(UnscaledValue(ss_ext_sales_price#1114))])\n      :     :     +- LogicalQueryStage Aggregate [ca_county#1223, d_qoy#1198, d_year#1194], [ca_county#1223, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#1179)),17,2) AS store_sales#803], HashAggregate(keys=[ca_county#1223, d_qoy#1198, d_year#1194], functions=[sum(UnscaledValue(ss_ext_sales_price#1179))])\n      :     +- LogicalQueryStage LogicalQueryStage Aggregate [ca_county#64, d_qoy#39, d_year#35], [ca_county#64, d_year#35, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#20)),17,2) AS store_sales#749], HashAggregate(keys=[ca_county#64, d_qoy#39, d_year#35], functions=[sum(UnscaledValue(ss_ext_sales_price#20))]), BroadcastQueryStage 34\n      +- Project [ca_county#786, web_sales#750, web_sales#807, web_sales#811]\n         +- Join Inner, (ca_county#786 = ca_county#1375)\n            :- Project [ca_county#786, web_sales#750, web_sales#807]\n            :  +- Join Inner, (ca_county#786 = ca_county#1299)\n            :     :- LogicalQueryStage LogicalQueryStage Aggregate [ca_county#786, d_qoy#761, d_year#757], [ca_county#786, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#92)),17,2) AS web_sales#750], HashAggregate(keys=[ca_county#786, d_qoy#761, d_year#757], functions=[sum(UnscaledValue(ws_ext_sales_price#92))]), BroadcastQueryStage 33\n            :     +- LogicalQueryStage Aggregate [ca_county#1299, d_qoy#1274, d_year#1270], [ca_county#1299, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#1252)),17,2) AS web_sales#807], HashAggregate(keys=[ca_county#1299, d_qoy#1274, d_year#1270], functions=[sum(UnscaledValue(ws_ext_sales_price#1252))])\n            +- LogicalQueryStage LogicalQueryStage Aggregate [ca_county#1375, d_qoy#1350, d_year#1346], [ca_county#1375, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#1328)),17,2) AS web_sales#811], HashAggregate(keys=[ca_county#1375, d_qoy#1350, d_year#1346], functions=[sum(UnscaledValue(ws_ext_sales_price#1328))]), BroadcastQueryStage 32\n"
      },
      "IM" : {
        "inputSizeInBytes" : 34568496,
        "inputRowCount" : 18460
      },
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 2,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "StartTimeInMs" : 1702226859318,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 1672,
        "IOBytes" : {
          "Total" : 634647,
          "Details" : {
            "IR" : 0,
            "IW" : 0,
            "SR" : 616966,
            "SW" : 17681
          }
        }
      }
    },
    "14" : {
      "LQP" : {
        "operators" : {
          "12" : {
            "sign" : -1824788195,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 175277700,
            "rowCount" : 3505554,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ca_county#786, web_sales#750, web_sales#807] "
          },
          "8" : {
            "sign" : -1108439567,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 79758,
            "rowCount" : 1899,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [ca_county#1223, d_qoy#1198, d_year#1194], [ca_county#1223, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#1179)),17,2) AS store_sales#803], HashAggregate(keys=[ca_county#1223, d_qoy#1198, d_year#1194], functions=[sum(UnscaledValue(ss_ext_sales_price#1179))]) "
          },
          "4" : {
            "sign" : 1813749660,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 1091755715544,
            "rowCount" : 13314094092,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ca_county#64 = ca_county#1158) "
          },
          "15" : {
            "sign" : 1322015049,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 105392,
            "rowCount" : 1846,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [ca_county#1299, d_qoy#1274, d_year#1270], [ca_county#1299, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#1252)),17,2) AS web_sales#807], HashAggregate(keys=[ca_county#1299, d_qoy#1274, d_year#1270], functions=[sum(UnscaledValue(ws_ext_sales_price#1252))]) "
          },
          "11" : {
            "sign" : -143644081,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 504757709352,
            "rowCount" : 6471252684,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ca_county#786 = ca_county#1375) "
          },
          "9" : {
            "sign" : -1313788163,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 87354,
            "rowCount" : 1899,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [ca_county#64, d_qoy#39, d_year#35], [ca_county#64, d_year#35, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#20)),17,2) AS store_sales#749], HashAggregate(keys=[ca_county#64, d_qoy#39, d_year#35], functions=[sum(UnscaledValue(ss_ext_sales_price#20))]) "
          },
          "13" : {
            "sign" : 1042073860,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 245388780,
            "rowCount" : 3505554,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ca_county#786 = ca_county#1299) "
          },
          "16" : {
            "sign" : 1621679114,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 33619968,
            "rowCount" : 1846,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: LogicalQueryStage Aggregate [ca_county#1375, d_qoy#1350, d_year#1346], [ca_county#1375, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#1328)),17,2) AS web_sales#811], HashAggregate(keys=[ca_county#1375, d_qoy#1350, d_year#1346], functions=[sum(UnscaledValue(ws_ext_sales_price#1328))]), BroadcastQueryStage 32 "
          },
          "5" : {
            "sign" : 223713833,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 308488752,
            "rowCount" : 7011108,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ca_county#1158, store_sales#799, store_sales#803] "
          },
          "10" : {
            "sign" : 960999536,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 375332655672,
            "rowCount" : 6471252684,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ca_county#786, web_sales#750, web_sales#807, web_sales#811] "
          },
          "6" : {
            "sign" : -1808253999,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 490777560,
            "rowCount" : 7011108,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ca_county#1158 = ca_county#1223) "
          },
          "1" : {
            "sign" : 2007715671,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 4627806449207014944,
            "rowCount" : 45370651462813872,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ca_county#64, d_year#35, (web_sales#807 / web_sales#750) AS web_q1_q2_increase#745, (store_sales#799 / store_sales#749) AS store_q1_q2_increase#746, (web_sales#811 / web_sales#807) AS web_q2_q3_increase#747, (store_sales#803 / store_sales#799) AS store_q2_q3_increase#748] "
          },
          "14" : {
            "sign" : -2016807428,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 79758,
            "rowCount" : 1899,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [ca_county#786, d_qoy#761, d_year#757], [ca_county#786, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#92)),17,2) AS web_sales#750], HashAggregate(keys=[ca_county#786, d_qoy#761, d_year#757], functions=[sum(UnscaledValue(ws_ext_sales_price#92))]) "
          },
          "0" : {
            "sign" : 1192875821,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 4627806449207014944,
            "rowCount" : 45370651462813872,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [d_year#35 ASC NULLS FIRST], true "
          },
          "2" : {
            "sign" : -1771171990,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 5081512963835153664,
            "rowCount" : 45370651462813872,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (((ca_county#64 = ca_county#786) AND (CASE WHEN (web_sales#750 > 0.00) THEN (web_sales#807 / web_sales#750) END > CASE WHEN (store_sales#749 > 0.00) THEN (store_sales#799 / store_sales#749) END)) AND (CASE WHEN (web_sales#807 > 0.00) THEN (web_sales#811 / web_sales#807) END > CASE WHEN (store_sales#799 > 0.00) THEN (store_sales#803 / store_sales#799) END)) "
          },
          "7" : {
            "sign" : 1377603520,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 210784,
            "rowCount" : 3692,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [ca_county#1158, d_qoy#1133, d_year#1129], [ca_county#1158, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#1114)),17,2) AS store_sales#799], HashAggregate(keys=[ca_county#1158, d_qoy#1133, d_year#1129], functions=[sum(UnscaledValue(ss_ext_sales_price#1114))]) "
          },
          "3" : {
            "sign" : 1074515729,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 825473833704,
            "rowCount" : 13314094092,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [store_sales#799, store_sales#803, ca_county#64, d_year#35, store_sales#749] "
          }
        },
        "links" : [ {
          "fromId" : 7,
          "fromName" : "LogicalQueryStage",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "LogicalQueryStage",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Join",
          "toId" : 5,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Project",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "LogicalQueryStage",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Join",
          "toId" : 3,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Project",
          "toId" : 2,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 14,
          "fromName" : "LogicalQueryStage",
          "toId" : 13,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 15,
          "fromName" : "LogicalQueryStage",
          "toId" : 13,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 13,
          "fromName" : "Join",
          "toId" : 12,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 12,
          "fromName" : "Project",
          "toId" : 11,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 16,
          "fromName" : "LogicalQueryStage",
          "toId" : 11,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "Join",
          "toId" : 10,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "Project",
          "toId" : 2,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Join",
          "toId" : 1,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Project",
          "toId" : 0,
          "toName" : "Sort",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Sort [d_year#35 ASC NULLS FIRST], true\n+- Project [ca_county#64, d_year#35, (web_sales#807 / web_sales#750) AS web_q1_q2_increase#745, (store_sales#799 / store_sales#749) AS store_q1_q2_increase#746, (web_sales#811 / web_sales#807) AS web_q2_q3_increase#747, (store_sales#803 / store_sales#799) AS store_q2_q3_increase#748]\n   +- Join Inner, (((ca_county#64 = ca_county#786) AND (CASE WHEN (web_sales#750 > 0.00) THEN (web_sales#807 / web_sales#750) END > CASE WHEN (store_sales#749 > 0.00) THEN (store_sales#799 / store_sales#749) END)) AND (CASE WHEN (web_sales#807 > 0.00) THEN (web_sales#811 / web_sales#807) END > CASE WHEN (store_sales#799 > 0.00) THEN (store_sales#803 / store_sales#799) END))\n      :- Project [store_sales#799, store_sales#803, ca_county#64, d_year#35, store_sales#749]\n      :  +- Join Inner, (ca_county#64 = ca_county#1158)\n      :     :- Project [ca_county#1158, store_sales#799, store_sales#803]\n      :     :  +- Join Inner, (ca_county#1158 = ca_county#1223)\n      :     :     :- LogicalQueryStage Aggregate [ca_county#1158, d_qoy#1133, d_year#1129], [ca_county#1158, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#1114)),17,2) AS store_sales#799], HashAggregate(keys=[ca_county#1158, d_qoy#1133, d_year#1129], functions=[sum(UnscaledValue(ss_ext_sales_price#1114))])\n      :     :     +- LogicalQueryStage Aggregate [ca_county#1223, d_qoy#1198, d_year#1194], [ca_county#1223, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#1179)),17,2) AS store_sales#803], HashAggregate(keys=[ca_county#1223, d_qoy#1198, d_year#1194], functions=[sum(UnscaledValue(ss_ext_sales_price#1179))])\n      :     +- LogicalQueryStage Aggregate [ca_county#64, d_qoy#39, d_year#35], [ca_county#64, d_year#35, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#20)),17,2) AS store_sales#749], HashAggregate(keys=[ca_county#64, d_qoy#39, d_year#35], functions=[sum(UnscaledValue(ss_ext_sales_price#20))])\n      +- Project [ca_county#786, web_sales#750, web_sales#807, web_sales#811]\n         +- Join Inner, (ca_county#786 = ca_county#1375)\n            :- Project [ca_county#786, web_sales#750, web_sales#807]\n            :  +- Join Inner, (ca_county#786 = ca_county#1299)\n            :     :- LogicalQueryStage Aggregate [ca_county#786, d_qoy#761, d_year#757], [ca_county#786, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#92)),17,2) AS web_sales#750], HashAggregate(keys=[ca_county#786, d_qoy#761, d_year#757], functions=[sum(UnscaledValue(ws_ext_sales_price#92))])\n            :     +- LogicalQueryStage Aggregate [ca_county#1299, d_qoy#1274, d_year#1270], [ca_county#1299, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#1252)),17,2) AS web_sales#807], HashAggregate(keys=[ca_county#1299, d_qoy#1274, d_year#1270], functions=[sum(UnscaledValue(ws_ext_sales_price#1252))])\n            +- LogicalQueryStage LogicalQueryStage Aggregate [ca_county#1375, d_qoy#1350, d_year#1346], [ca_county#1375, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#1328)),17,2) AS web_sales#811], HashAggregate(keys=[ca_county#1375, d_qoy#1350, d_year#1346], functions=[sum(UnscaledValue(ws_ext_sales_price#1328))]), BroadcastQueryStage 32\n"
      },
      "IM" : {
        "inputSizeInBytes" : 34183014,
        "inputRowCount" : 13081
      },
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 4,
        "FinishedTasksNum" : 2,
        "FinishedTasksTotalTimeInMs" : 3776.0,
        "FinishedTasksDistributionInMs" : [ 1580.0, 1580.0, 2196.0, 2196.0, 2196.0 ]
      },
      "StartTimeInMs" : 1702226858924,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 2066,
        "IOBytes" : {
          "Total" : 263783656,
          "Details" : {
            "IR" : 0,
            "IW" : 0,
            "SR" : 263405833,
            "SW" : 377823
          }
        }
      }
    },
    "20" : {
      "LQP" : {
        "operators" : {
          "8" : {
            "sign" : 1028205086,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 33619968,
            "rowCount" : 1846,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: LogicalQueryStage Aggregate [ca_county#786, d_qoy#761, d_year#757], [ca_county#786, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#92)),17,2) AS web_sales#750], HashAggregate(keys=[ca_county#786, d_qoy#761, d_year#757], functions=[sum(UnscaledValue(ws_ext_sales_price#92))]), BroadcastQueryStage 33 "
          },
          "4" : {
            "sign" : -1348798510,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 327113474272,
            "rowCount" : 6290643736,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ca_county#786, web_sales#750, web_sales#807, web_sales#811] "
          },
          "9" : {
            "sign" : 1322015049,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 105392,
            "rowCount" : 1846,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [ca_county#1299, d_qoy#1274, d_year#1270], [ca_county#1299, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#1252)),17,2) AS web_sales#807], HashAggregate(keys=[ca_county#1299, d_qoy#1274, d_year#1270], functions=[sum(UnscaledValue(ws_ext_sales_price#1252))]) "
          },
          "5" : {
            "sign" : 443265521,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 452926348992,
            "rowCount" : 6290643736,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ca_county#786 = ca_county#1375) "
          },
          "10" : {
            "sign" : 1621679114,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 33619968,
            "rowCount" : 1846,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: LogicalQueryStage Aggregate [ca_county#1375, d_qoy#1350, d_year#1346], [ca_county#1375, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#1328)),17,2) AS web_sales#811], HashAggregate(keys=[ca_county#1375, d_qoy#1350, d_year#1346], functions=[sum(UnscaledValue(ws_ext_sales_price#1328))]), BroadcastQueryStage 32 "
          },
          "6" : {
            "sign" : 1140073279,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 149939504,
            "rowCount" : 3407716,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ca_county#786, web_sales#750, web_sales#807] "
          },
          "1" : {
            "sign" : 481195568,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 15632004541700270370816,
            "rowCount" : 162833380642711149696,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ca_county#64, d_year#35, (web_sales#807 / web_sales#750) AS web_q1_q2_increase#745, (store_sales#799 / store_sales#749) AS store_q1_q2_increase#746, (web_sales#811 / web_sales#807) AS web_q2_q3_increase#747, (store_sales#803 / store_sales#799) AS store_q2_q3_increase#748] "
          },
          "0" : {
            "sign" : 389364738,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 15632004541700270370816,
            "rowCount" : 162833380642711149696,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [d_year#35 ASC NULLS FIRST], true "
          },
          "2" : {
            "sign" : 593652607,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 16283338064271114969600,
            "rowCount" : 162833380642711149696,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (((ca_county#64 = ca_county#786) AND (CASE WHEN (web_sales#750 > 0.00) THEN (web_sales#807 / web_sales#750) END > CASE WHEN (store_sales#749 > 0.00) THEN (store_sales#799 / store_sales#749) END)) AND (CASE WHEN (web_sales#807 > 0.00) THEN (web_sales#811 / web_sales#807) END > CASE WHEN (store_sales#799 > 0.00) THEN (store_sales#803 / store_sales#799) END)) "
          },
          "7" : {
            "sign" : -29722014,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 218093824,
            "rowCount" : 3407716,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ca_county#786 = ca_county#1299) "
          },
          "3" : {
            "sign" : 1303782356,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1449560601216,
            "rowCount" : 25885010736,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [store_sales#799, store_sales#803, ca_county#64, d_year#35, store_sales#749], BroadcastQueryStage 36 "
          }
        },
        "links" : [ {
          "fromId" : 3,
          "fromName" : "LogicalQueryStage",
          "toId" : 2,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "LogicalQueryStage",
          "toId" : 7,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "LogicalQueryStage",
          "toId" : 7,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Join",
          "toId" : 6,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Project",
          "toId" : 5,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "LogicalQueryStage",
          "toId" : 5,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Join",
          "toId" : 4,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Project",
          "toId" : 2,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Join",
          "toId" : 1,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Project",
          "toId" : 0,
          "toName" : "Sort",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Sort [d_year#35 ASC NULLS FIRST], true\n+- Project [ca_county#64, d_year#35, (web_sales#807 / web_sales#750) AS web_q1_q2_increase#745, (store_sales#799 / store_sales#749) AS store_q1_q2_increase#746, (web_sales#811 / web_sales#807) AS web_q2_q3_increase#747, (store_sales#803 / store_sales#799) AS store_q2_q3_increase#748]\n   +- Join Inner, (((ca_county#64 = ca_county#786) AND (CASE WHEN (web_sales#750 > 0.00) THEN (web_sales#807 / web_sales#750) END > CASE WHEN (store_sales#749 > 0.00) THEN (store_sales#799 / store_sales#749) END)) AND (CASE WHEN (web_sales#807 > 0.00) THEN (web_sales#811 / web_sales#807) END > CASE WHEN (store_sales#799 > 0.00) THEN (store_sales#803 / store_sales#799) END))\n      :- LogicalQueryStage Project [store_sales#799, store_sales#803, ca_county#64, d_year#35, store_sales#749], BroadcastQueryStage 36\n      +- Project [ca_county#786, web_sales#750, web_sales#807, web_sales#811]\n         +- Join Inner, (ca_county#786 = ca_county#1375)\n            :- Project [ca_county#786, web_sales#750, web_sales#807]\n            :  +- Join Inner, (ca_county#786 = ca_county#1299)\n            :     :- LogicalQueryStage LogicalQueryStage Aggregate [ca_county#786, d_qoy#761, d_year#757], [ca_county#786, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#92)),17,2) AS web_sales#750], HashAggregate(keys=[ca_county#786, d_qoy#761, d_year#757], functions=[sum(UnscaledValue(ws_ext_sales_price#92))]), BroadcastQueryStage 33\n            :     +- LogicalQueryStage Aggregate [ca_county#1299, d_qoy#1274, d_year#1270], [ca_county#1299, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#1252)),17,2) AS web_sales#807], HashAggregate(keys=[ca_county#1299, d_qoy#1274, d_year#1270], functions=[sum(UnscaledValue(ws_ext_sales_price#1252))])\n            +- LogicalQueryStage LogicalQueryStage Aggregate [ca_county#1375, d_qoy#1350, d_year#1346], [ca_county#1375, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#1328)),17,2) AS web_sales#811], HashAggregate(keys=[ca_county#1375, d_qoy#1350, d_year#1346], functions=[sum(UnscaledValue(ws_ext_sales_price#1328))]), BroadcastQueryStage 32\n"
      },
      "IM" : {
        "inputSizeInBytes" : 1449627946544,
        "inputRowCount" : 25885016274
      },
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 1,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "StartTimeInMs" : 1702226859614,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 1376,
        "IOBytes" : {
          "Total" : 274505,
          "Details" : {
            "IR" : 0,
            "IW" : 0,
            "SR" : 256824,
            "SW" : 17681
          }
        }
      }
    },
    "2" : {
      "LQP" : {
        "operators" : {
          "45" : {
            "sign" : 519358088,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 183368101644,
            "rowCount" : 6548860773,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_bill_addr_sk#76, ws_ext_sales_price#92, d_year#757, d_qoy#761] "
          },
          "34" : {
            "sign" : 1105724623,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 35670,
            "rowCount" : 145,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(d_qoy#39) AND isnotnull(d_year#35)) AND ((d_qoy#39 = 1) AND (d_year#35 = 2000))) AND isnotnull(d_date_sk#29)) "
          },
          "67" : {
            "sign" : 2142456221,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 36861710,
            "rowCount" : 970045,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ca_address_sk#1292, ca_county#1299], ShuffleQueryStage 15 "
          },
          "12" : {
            "sign" : -1915070295,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 6304008672,
            "rowCount" : 262667028,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_addr_sk#1105, ss_ext_sales_price#1114, ss_sold_date_sk#1122] "
          },
          "66" : {
            "sign" : 482943821,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1049304,
            "rowCount" : 91,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#1264, d_year#1270, d_qoy#1274], BroadcastQueryStage 13 "
          },
          "51" : {
            "sign" : -874849780,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 35670,
            "rowCount" : 145,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(d_qoy#761) AND isnotnull(d_year#757)) AND ((d_qoy#761 = 1) AND (d_year#757 = 2000))) AND isnotnull(d_date_sk#751)) "
          },
          "8" : {
            "sign" : -1248451013,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 13761654400,
            "rowCount" : 275233088,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_ext_sales_price#1114, d_year#1129, d_qoy#1133, ca_county#1158] "
          },
          "19" : {
            "sign" : -115093538,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 36861710,
            "rowCount" : 970045,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ca_address_sk#1151, ca_county#1158], ShuffleQueryStage 1 "
          },
          "23" : {
            "sign" : 1384000956,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 7435136380,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ss_addr_sk#1170, ss_ext_sales_price#1179, d_year#1194, d_qoy#1198], ShuffleQueryStage 20 "
          },
          "62" : {
            "sign" : 373033576,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 14972593792,
            "rowCount" : 71983624,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ws_sold_time_sk#1230, ws_ship_date_sk#1231, ws_item_sk#1232, ws_bill_customer_sk#1233, ws_bill_cdemo_sk#1234, ws_bill_hdemo_sk#1235, ws_bill_addr_sk#1236, ws_ship_customer_sk#1237, ws_ship_cdemo_sk#1238, ws_ship_hdemo_sk#1239, ws_ship_addr_sk#1240, ws_web_page_sk#1241, ws_web_site_sk#1242, ws_ship_mode_sk#1243, ws_warehouse_sk#1244, ws_promo_sk#1245, ws_order_number#1246L, ws_quantity#1247, ws_wholesale_cost#1248, ws_list_price#1249, ws_sales_price#1250, ws_ext_discount_amt#1251, ws_ext_sales_price#1252, ws_ext_wholesale_cost#1253, ... 10 more fields], `spark_catalog`.`tpcds_100`.`web_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "4" : {
            "sign" : 213572202,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 7724055593734676280430470,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ca_county#64 = ca_county#1158) "
          },
          "40" : {
            "sign" : 549940749,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 5961758017646909280,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ca_county#786, web_sales#750, web_sales#807] "
          },
          "15" : {
            "sign" : -680060387,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 2900,
            "rowCount" : 145,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#1123, d_year#1129, d_qoy#1133] "
          },
          "11" : {
            "sign" : 1341743346,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 860497183728,
            "rowCount" : 23902699548,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#1122 = d_date_sk#1123) "
          },
          "9" : {
            "sign" : -1494541629,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 15963519104,
            "rowCount" : 275233088,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_addr_sk#1105 = ca_address_sk#1151) "
          },
          "44" : {
            "sign" : -1671152826,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 4175024092,
            "rowCount" : 71983174,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ws_bill_addr_sk#76 = ca_address_sk#779) "
          },
          "33" : {
            "sign" : 1118914342,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 2900,
            "rowCount" : 145,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#29, d_year#35, d_qoy#39] "
          },
          "22" : {
            "sign" : 1256814607,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 15963519104,
            "rowCount" : 275233088,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_addr_sk#1170 = ca_address_sk#1216) "
          },
          "56" : {
            "sign" : 993300168,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 3599158700,
            "rowCount" : 71983174,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_ext_sales_price#1252, d_year#1270, d_qoy#1274, ca_county#1299] "
          },
          "55" : {
            "sign" : 255697135,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 2944766209,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [ca_county#1299, d_qoy#1274, d_year#1270], [ca_county#1299, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#1252)),17,2) AS web_sales#807] "
          },
          "26" : {
            "sign" : -754443005,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 13761654400,
            "rowCount" : 275233088,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_ext_sales_price#20, d_year#35, d_qoy#39, ca_county#64] "
          },
          "50" : {
            "sign" : -1068806934,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 2900,
            "rowCount" : 145,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#751, d_year#757, d_qoy#761] "
          },
          "37" : {
            "sign" : 1889027863,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 36861710,
            "rowCount" : 970045,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ca_address_sk#57, ca_county#64], ShuffleQueryStage 7 "
          },
          "68" : {
            "sign" : -1873681378,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 79758,
            "rowCount" : 1899,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [ca_county#1375, d_qoy#1350, d_year#1346], [ca_county#1375, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#1328)),17,2) AS web_sales#811] "
          },
          "61" : {
            "sign" : -1052337041,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 14968824624,
            "rowCount" : 71965503,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(ws_sold_date_sk#1263) AND isnotnull(ws_bill_addr_sk#1236)) AND dynamicpruning#1386 [ws_sold_date_sk#1263]) "
          },
          "13" : {
            "sign" : -363767170,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 39925388256,
            "rowCount" : 262667028,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(ss_sold_date_sk#1122) AND isnotnull(ss_addr_sk#1105)) AND dynamicpruning#1382 [ss_sold_date_sk#1122]) "
          },
          "46" : {
            "sign" : -42142668,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 235758987828,
            "rowCount" : 6548860773,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ws_sold_date_sk#103 = d_date_sk#751) "
          },
          "24" : {
            "sign" : 182366066,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 36861710,
            "rowCount" : 970045,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ca_address_sk#1216, ca_county#1223], ShuffleQueryStage 4 "
          },
          "35" : {
            "sign" : -2087206825,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#29, d_date_id#30, d_date#31, d_month_seq#32, d_week_seq#33, d_quarter_seq#34, d_year#35, d_dow#36, d_moy#37, d_dom#38, d_qoy#39, d_fy_year#40, d_fy_quarter_seq#41, d_fy_week_seq#42, d_day_name#43, d_quarter_name#44, d_holiday#45, d_weekend#46, d_following_holiday#47, d_first_dom#48, d_last_dom#49, d_same_day_ly#50, d_same_day_lq#51, d_current_day#52, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "16" : {
            "sign" : -412127915,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 35670,
            "rowCount" : 145,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(d_qoy#1133) AND isnotnull(d_year#1129)) AND ((d_qoy#1133 = 2) AND (d_year#1129 = 2000))) AND isnotnull(d_date_sk#1123)) "
          },
          "5" : {
            "sign" : -1921245897,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 617401142784830,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ca_county#1158, store_sales#799, store_sales#803] "
          },
          "72" : {
            "sign" : -1084009982,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 36861710,
            "rowCount" : 970045,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ca_address_sk#1368, ca_county#1375], ShuffleQueryStage 19 "
          },
          "10" : {
            "sign" : -1032425306,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 669275587344,
            "rowCount" : 23902699548,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_addr_sk#1105, ss_ext_sales_price#1114, d_year#1129, d_qoy#1133] "
          },
          "59" : {
            "sign" : -330040232,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 235758987828,
            "rowCount" : 6548860773,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ws_sold_date_sk#1263 = d_date_sk#1264) "
          },
          "48" : {
            "sign" : -1138181047,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 14968824624,
            "rowCount" : 71965503,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(ws_sold_date_sk#103) AND isnotnull(ws_bill_addr_sk#76)) AND dynamicpruning#1385 [ws_sold_date_sk#103]) "
          },
          "21" : {
            "sign" : -1184610642,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 13761654400,
            "rowCount" : 275233088,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_ext_sales_price#1179, d_year#1194, d_qoy#1198, ca_county#1223] "
          },
          "54" : {
            "sign" : -840396086,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 36861710,
            "rowCount" : 970045,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ca_address_sk#779, ca_county#786], ShuffleQueryStage 11 "
          },
          "43" : {
            "sign" : -313426304,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 3599158700,
            "rowCount" : 71983174,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_ext_sales_price#92, d_year#757, d_qoy#761, ca_county#786] "
          },
          "65" : {
            "sign" : -623005156,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#1264, d_date_id#1265, d_date#1266, d_month_seq#1267, d_week_seq#1268, d_quarter_seq#1269, d_year#1270, d_dow#1271, d_moy#1272, d_dom#1273, d_qoy#1274, d_fy_year#1275, d_fy_quarter_seq#1276, d_fy_week_seq#1277, d_day_name#1278, d_quarter_name#1279, d_holiday#1280, d_weekend#1281, d_following_holiday#1282, d_first_dom#1283, d_last_dom#1284, d_same_day_ly#1285, d_same_day_lq#1286, d_current_day#1287, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "71" : {
            "sign" : 834142654,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1945876940,
            "rowCount" : 69495605,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ws_bill_addr_sk#1312, ws_ext_sales_price#1328, d_year#1346, d_qoy#1350], ShuffleQueryStage 21 "
          },
          "57" : {
            "sign" : -338483294,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 4175024092,
            "rowCount" : 71983174,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ws_bill_addr_sk#1236 = ca_address_sk#1292) "
          },
          "32" : {
            "sign" : 1954421237,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#6, ss_item_sk#7, ss_customer_sk#8, ss_cdemo_sk#9, ss_hdemo_sk#10, ss_addr_sk#11, ss_store_sk#12, ss_promo_sk#13, ss_ticket_number#14L, ss_quantity#15, ss_wholesale_cost#16, ss_list_price#17, ss_sales_price#18, ss_ext_discount_amt#19, ss_ext_sales_price#20, ss_ext_wholesale_cost#21, ss_ext_list_price#22, ss_ext_tax#23, ss_coupon_amt#24, ss_net_paid#25, ss_net_paid_inc_tax#26, ss_net_profit#27, ss_sold_date_sk#28], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "49" : {
            "sign" : -1030223128,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 14972593792,
            "rowCount" : 71983624,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ws_sold_time_sk#70, ws_ship_date_sk#71, ws_item_sk#72, ws_bill_customer_sk#73, ws_bill_cdemo_sk#74, ws_bill_hdemo_sk#75, ws_bill_addr_sk#76, ws_ship_customer_sk#77, ws_ship_cdemo_sk#78, ws_ship_hdemo_sk#79, ws_ship_addr_sk#80, ws_web_page_sk#81, ws_web_site_sk#82, ws_ship_mode_sk#83, ws_warehouse_sk#84, ws_promo_sk#85, ws_order_number#86L, ws_quantity#87, ws_wholesale_cost#88, ws_list_price#89, ws_sales_price#90, ws_ext_discount_amt#91, ws_ext_sales_price#92, ws_ext_wholesale_cost#93, ... 10 more fields], `spark_catalog`.`tpcds_100`.`web_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "6" : {
            "sign" : -1702034609,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 898038025868844,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ca_county#1158 = ca_county#1223) "
          },
          "36" : {
            "sign" : -759457080,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1049304,
            "rowCount" : 91,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#29, d_year#35, d_qoy#39], BroadcastQueryStage 5 "
          },
          "1" : {
            "sign" : -1783187471,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 1876335543410926342674001398134971347970139580825,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ca_county#64, d_year#35, (web_sales#807 / web_sales#750) AS web_q1_q2_increase#745, (store_sales#799 / store_sales#749) AS store_q1_q2_increase#746, (web_sales#811 / web_sales#807) AS web_q2_q3_increase#747, (store_sales#803 / store_sales#799) AS store_q2_q3_increase#748] "
          },
          "39" : {
            "sign" : -1895328543,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 475497895971482190354240,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ca_county#786 = ca_county#1375) "
          },
          "17" : {
            "sign" : 343220088,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#1123, d_date_id#1124, d_date#1125, d_month_seq#1126, d_week_seq#1127, d_quarter_seq#1128, d_year#1129, d_dow#1130, d_moy#1131, d_dom#1132, d_qoy#1133, d_fy_year#1134, d_fy_quarter_seq#1135, d_fy_week_seq#1136, d_day_name#1137, d_quarter_name#1138, d_holiday#1139, d_weekend#1140, d_following_holiday#1141, d_first_dom#1142, d_last_dom#1143, d_same_day_ly#1144, d_same_day_lq#1145, d_current_day#1146, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "25" : {
            "sign" : -290923167,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 12510594909,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [ca_county#64, d_qoy#39, d_year#35], [ca_county#64, d_year#35, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#20)),17,2) AS store_sales#749] "
          },
          "60" : {
            "sign" : 1274419678,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 1727172072,
            "rowCount" : 71965503,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_bill_addr_sk#1236, ws_ext_sales_price#1252, ws_sold_date_sk#1263] "
          },
          "14" : {
            "sign" : 397751215,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#1100, ss_item_sk#1101, ss_customer_sk#1102, ss_cdemo_sk#1103, ss_hdemo_sk#1104, ss_addr_sk#1105, ss_store_sk#1106, ss_promo_sk#1107, ss_ticket_number#1108L, ss_quantity#1109, ss_wholesale_cost#1110, ss_list_price#1111, ss_sales_price#1112, ss_ext_discount_amt#1113, ss_ext_sales_price#1114, ss_ext_wholesale_cost#1115, ss_ext_list_price#1116, ss_ext_tax#1117, ss_coupon_amt#1118, ss_net_paid#1119, ss_net_paid_inc_tax#1120, ss_net_profit#1121, ss_sold_date_sk#1122], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "47" : {
            "sign" : 792866324,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 1727172072,
            "rowCount" : 71965503,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_bill_addr_sk#76, ws_ext_sales_price#92, ws_sold_date_sk#103] "
          },
          "31" : {
            "sign" : -863453878,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 39925388256,
            "rowCount" : 262667028,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(ss_sold_date_sk#28) AND isnotnull(ss_addr_sk#11)) AND dynamicpruning#1384 [ss_sold_date_sk#28]) "
          },
          "69" : {
            "sign" : 1096329513,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 3599158700,
            "rowCount" : 71983174,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_ext_sales_price#1328, d_year#1346, d_qoy#1350, ca_county#1375] "
          },
          "58" : {
            "sign" : -1270939539,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 183368101644,
            "rowCount" : 6548860773,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_bill_addr_sk#1236, ws_ext_sales_price#1252, d_year#1270, d_qoy#1274] "
          },
          "64" : {
            "sign" : 1412837595,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 35670,
            "rowCount" : 145,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(d_qoy#1274) AND isnotnull(d_year#1270)) AND ((d_qoy#1274 = 2) AND (d_year#1270 = 2000))) AND isnotnull(d_date_sk#1264)) "
          },
          "53" : {
            "sign" : -590297923,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1049304,
            "rowCount" : 91,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#751, d_year#757, d_qoy#761], BroadcastQueryStage 9 "
          },
          "42" : {
            "sign" : 1500123530,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 2944766209,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [ca_county#786, d_qoy#761, d_year#757], [ca_county#786, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#92)),17,2) AS web_sales#750] "
          },
          "0" : {
            "sign" : -450726269,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 1876335543410926342674001398134971347970139580825,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [d_year#35 ASC NULLS FIRST], true "
          },
          "20" : {
            "sign" : 1844188976,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 79758,
            "rowCount" : 1899,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [ca_county#1223, d_qoy#1198, d_year#1194], [ca_county#1223, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#1179)),17,2) AS store_sales#803] "
          },
          "27" : {
            "sign" : 55457748,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 15963519104,
            "rowCount" : 275233088,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_addr_sk#11 = ca_address_sk#57) "
          },
          "70" : {
            "sign" : 11414259,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 4175024092,
            "rowCount" : 71983174,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ws_bill_addr_sk#1312 = ca_address_sk#1368) "
          },
          "2" : {
            "sign" : -1860906522,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 1954516191053048273618751456390595154135562063360,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (((ca_county#64 = ca_county#786) AND (CASE WHEN (web_sales#750 > 0.00) THEN (web_sales#807 / web_sales#750) END > CASE WHEN (store_sales#749 > 0.00) THEN (store_sales#799 / store_sales#749) END)) AND (CASE WHEN (web_sales#807 > 0.00) THEN (web_sales#811 / web_sales#807) END > CASE WHEN (store_sales#799 > 0.00) THEN (store_sales#803 / store_sales#799) END)) "
          },
          "38" : {
            "sign" : 124566628,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 343415147090514915255840,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ca_county#786, web_sales#750, web_sales#807, web_sales#811] "
          },
          "18" : {
            "sign" : -513683896,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1049304,
            "rowCount" : 91,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#1123, d_year#1129, d_qoy#1133], BroadcastQueryStage 0 "
          },
          "30" : {
            "sign" : 951653223,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 6304008672,
            "rowCount" : 262667028,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_addr_sk#11, ss_ext_sales_price#20, ss_sold_date_sk#28] "
          },
          "7" : {
            "sign" : -1816471055,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 11259535418,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [ca_county#1158, d_qoy#1133, d_year#1129], [ca_county#1158, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#1114)),17,2) AS store_sales#799] "
          },
          "29" : {
            "sign" : 981064324,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 860497183728,
            "rowCount" : 23902699548,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#28 = d_date_sk#29) "
          },
          "41" : {
            "sign" : -1172490316,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 8671648025668231681,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ca_county#786 = ca_county#1299) "
          },
          "63" : {
            "sign" : 571792556,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 2900,
            "rowCount" : 145,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#1264, d_year#1270, d_qoy#1274] "
          },
          "3" : {
            "sign" : 458537615,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 5691409384857129890843504,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [store_sales#799, store_sales#803, ca_county#64, d_year#35, store_sales#749] "
          },
          "52" : {
            "sign" : 1350793902,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#751, d_date_id#752, d_date#753, d_month_seq#754, d_week_seq#755, d_quarter_seq#756, d_year#757, d_dow#758, d_moy#759, d_dom#760, d_qoy#761, d_fy_year#762, d_fy_quarter_seq#763, d_fy_week_seq#764, d_day_name#765, d_quarter_name#766, d_holiday#767, d_weekend#768, d_following_holiday#769, d_first_dom#770, d_last_dom#771, d_same_day_ly#772, d_same_day_lq#773, d_current_day#774, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "28" : {
            "sign" : 484532713,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 669275587344,
            "rowCount" : 23902699548,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_addr_sk#11, ss_ext_sales_price#20, d_year#35, d_qoy#39] "
          }
        },
        "links" : [ {
          "fromId" : 14,
          "fromName" : "LogicalRelation",
          "toId" : 13,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 17,
          "fromName" : "LogicalRelation",
          "toId" : 16,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 16,
          "fromName" : "Filter",
          "toId" : 15,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 15,
          "fromName" : "Project",
          "toId" : 13,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 13,
          "fromName" : "Filter",
          "toId" : 12,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 12,
          "fromName" : "Project",
          "toId" : 11,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 18,
          "fromName" : "LogicalQueryStage",
          "toId" : 11,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "Join",
          "toId" : 10,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "Project",
          "toId" : 9,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 19,
          "fromName" : "LogicalQueryStage",
          "toId" : 9,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "Join",
          "toId" : 8,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "Project",
          "toId" : 7,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Aggregate",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 23,
          "fromName" : "LogicalQueryStage",
          "toId" : 22,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 24,
          "fromName" : "LogicalQueryStage",
          "toId" : 22,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 22,
          "fromName" : "Join",
          "toId" : 21,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 21,
          "fromName" : "Project",
          "toId" : 20,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 20,
          "fromName" : "Aggregate",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Join",
          "toId" : 5,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Project",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 32,
          "fromName" : "LogicalRelation",
          "toId" : 31,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 35,
          "fromName" : "LogicalRelation",
          "toId" : 34,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 34,
          "fromName" : "Filter",
          "toId" : 33,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 33,
          "fromName" : "Project",
          "toId" : 31,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 31,
          "fromName" : "Filter",
          "toId" : 30,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 30,
          "fromName" : "Project",
          "toId" : 29,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 36,
          "fromName" : "LogicalQueryStage",
          "toId" : 29,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 29,
          "fromName" : "Join",
          "toId" : 28,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 28,
          "fromName" : "Project",
          "toId" : 27,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 37,
          "fromName" : "LogicalQueryStage",
          "toId" : 27,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 27,
          "fromName" : "Join",
          "toId" : 26,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 26,
          "fromName" : "Project",
          "toId" : 25,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 25,
          "fromName" : "Aggregate",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Join",
          "toId" : 3,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Project",
          "toId" : 2,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 49,
          "fromName" : "LogicalRelation",
          "toId" : 48,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 52,
          "fromName" : "LogicalRelation",
          "toId" : 51,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 51,
          "fromName" : "Filter",
          "toId" : 50,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 50,
          "fromName" : "Project",
          "toId" : 48,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 48,
          "fromName" : "Filter",
          "toId" : 47,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 47,
          "fromName" : "Project",
          "toId" : 46,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 53,
          "fromName" : "LogicalQueryStage",
          "toId" : 46,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 46,
          "fromName" : "Join",
          "toId" : 45,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 45,
          "fromName" : "Project",
          "toId" : 44,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 54,
          "fromName" : "LogicalQueryStage",
          "toId" : 44,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 44,
          "fromName" : "Join",
          "toId" : 43,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 43,
          "fromName" : "Project",
          "toId" : 42,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 42,
          "fromName" : "Aggregate",
          "toId" : 41,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 62,
          "fromName" : "LogicalRelation",
          "toId" : 61,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 65,
          "fromName" : "LogicalRelation",
          "toId" : 64,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 64,
          "fromName" : "Filter",
          "toId" : 63,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 63,
          "fromName" : "Project",
          "toId" : 61,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 61,
          "fromName" : "Filter",
          "toId" : 60,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 60,
          "fromName" : "Project",
          "toId" : 59,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 66,
          "fromName" : "LogicalQueryStage",
          "toId" : 59,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 59,
          "fromName" : "Join",
          "toId" : 58,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 58,
          "fromName" : "Project",
          "toId" : 57,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 67,
          "fromName" : "LogicalQueryStage",
          "toId" : 57,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 57,
          "fromName" : "Join",
          "toId" : 56,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 56,
          "fromName" : "Project",
          "toId" : 55,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 55,
          "fromName" : "Aggregate",
          "toId" : 41,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 41,
          "fromName" : "Join",
          "toId" : 40,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 40,
          "fromName" : "Project",
          "toId" : 39,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 71,
          "fromName" : "LogicalQueryStage",
          "toId" : 70,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 72,
          "fromName" : "LogicalQueryStage",
          "toId" : 70,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 70,
          "fromName" : "Join",
          "toId" : 69,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 69,
          "fromName" : "Project",
          "toId" : 68,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 68,
          "fromName" : "Aggregate",
          "toId" : 39,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 39,
          "fromName" : "Join",
          "toId" : 38,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 38,
          "fromName" : "Project",
          "toId" : 2,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Join",
          "toId" : 1,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Project",
          "toId" : 0,
          "toName" : "Sort",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Sort [d_year#35 ASC NULLS FIRST], true\n+- Project [ca_county#64, d_year#35, (web_sales#807 / web_sales#750) AS web_q1_q2_increase#745, (store_sales#799 / store_sales#749) AS store_q1_q2_increase#746, (web_sales#811 / web_sales#807) AS web_q2_q3_increase#747, (store_sales#803 / store_sales#799) AS store_q2_q3_increase#748]\n   +- Join Inner, (((ca_county#64 = ca_county#786) AND (CASE WHEN (web_sales#750 > 0.00) THEN (web_sales#807 / web_sales#750) END > CASE WHEN (store_sales#749 > 0.00) THEN (store_sales#799 / store_sales#749) END)) AND (CASE WHEN (web_sales#807 > 0.00) THEN (web_sales#811 / web_sales#807) END > CASE WHEN (store_sales#799 > 0.00) THEN (store_sales#803 / store_sales#799) END))\n      :- Project [store_sales#799, store_sales#803, ca_county#64, d_year#35, store_sales#749]\n      :  +- Join Inner, (ca_county#64 = ca_county#1158)\n      :     :- Project [ca_county#1158, store_sales#799, store_sales#803]\n      :     :  +- Join Inner, (ca_county#1158 = ca_county#1223)\n      :     :     :- Aggregate [ca_county#1158, d_qoy#1133, d_year#1129], [ca_county#1158, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#1114)),17,2) AS store_sales#799]\n      :     :     :  +- Project [ss_ext_sales_price#1114, d_year#1129, d_qoy#1133, ca_county#1158]\n      :     :     :     +- Join Inner, (ss_addr_sk#1105 = ca_address_sk#1151)\n      :     :     :        :- Project [ss_addr_sk#1105, ss_ext_sales_price#1114, d_year#1129, d_qoy#1133]\n      :     :     :        :  +- Join Inner, (ss_sold_date_sk#1122 = d_date_sk#1123)\n      :     :     :        :     :- Project [ss_addr_sk#1105, ss_ext_sales_price#1114, ss_sold_date_sk#1122]\n      :     :     :        :     :  +- Filter ((isnotnull(ss_sold_date_sk#1122) AND isnotnull(ss_addr_sk#1105)) AND dynamicpruning#1382 [ss_sold_date_sk#1122])\n      :     :     :        :     :     :  +- Project [d_date_sk#1123, d_year#1129, d_qoy#1133]\n      :     :     :        :     :     :     +- Filter (((isnotnull(d_qoy#1133) AND isnotnull(d_year#1129)) AND ((d_qoy#1133 = 2) AND (d_year#1129 = 2000))) AND isnotnull(d_date_sk#1123))\n      :     :     :        :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#1123,d_date_id#1124,d_date#1125,d_month_seq#1126,d_week_seq#1127,d_quarter_seq#1128,d_year#1129,d_dow#1130,d_moy#1131,d_dom#1132,d_qoy#1133,d_fy_year#1134,d_fy_quarter_seq#1135,d_fy_week_seq#1136,d_day_name#1137,d_quarter_name#1138,d_holiday#1139,d_weekend#1140,d_following_holiday#1141,d_first_dom#1142,d_last_dom#1143,d_same_day_ly#1144,d_same_day_lq#1145,d_current_day#1146,... 4 more fields] parquet\n      :     :     :        :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#1100,ss_item_sk#1101,ss_customer_sk#1102,ss_cdemo_sk#1103,ss_hdemo_sk#1104,ss_addr_sk#1105,ss_store_sk#1106,ss_promo_sk#1107,ss_ticket_number#1108L,ss_quantity#1109,ss_wholesale_cost#1110,ss_list_price#1111,ss_sales_price#1112,ss_ext_discount_amt#1113,ss_ext_sales_price#1114,ss_ext_wholesale_cost#1115,ss_ext_list_price#1116,ss_ext_tax#1117,ss_coupon_amt#1118,ss_net_paid#1119,ss_net_paid_inc_tax#1120,ss_net_profit#1121,ss_sold_date_sk#1122] parquet\n      :     :     :        :     +- LogicalQueryStage Project [d_date_sk#1123, d_year#1129, d_qoy#1133], BroadcastQueryStage 0\n      :     :     :        +- LogicalQueryStage Project [ca_address_sk#1151, ca_county#1158], ShuffleQueryStage 1\n      :     :     +- Aggregate [ca_county#1223, d_qoy#1198, d_year#1194], [ca_county#1223, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#1179)),17,2) AS store_sales#803]\n      :     :        +- Project [ss_ext_sales_price#1179, d_year#1194, d_qoy#1198, ca_county#1223]\n      :     :           +- Join Inner, (ss_addr_sk#1170 = ca_address_sk#1216)\n      :     :              :- LogicalQueryStage Project [ss_addr_sk#1170, ss_ext_sales_price#1179, d_year#1194, d_qoy#1198], ShuffleQueryStage 20\n      :     :              +- LogicalQueryStage Project [ca_address_sk#1216, ca_county#1223], ShuffleQueryStage 4\n      :     +- Aggregate [ca_county#64, d_qoy#39, d_year#35], [ca_county#64, d_year#35, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#20)),17,2) AS store_sales#749]\n      :        +- Project [ss_ext_sales_price#20, d_year#35, d_qoy#39, ca_county#64]\n      :           +- Join Inner, (ss_addr_sk#11 = ca_address_sk#57)\n      :              :- Project [ss_addr_sk#11, ss_ext_sales_price#20, d_year#35, d_qoy#39]\n      :              :  +- Join Inner, (ss_sold_date_sk#28 = d_date_sk#29)\n      :              :     :- Project [ss_addr_sk#11, ss_ext_sales_price#20, ss_sold_date_sk#28]\n      :              :     :  +- Filter ((isnotnull(ss_sold_date_sk#28) AND isnotnull(ss_addr_sk#11)) AND dynamicpruning#1384 [ss_sold_date_sk#28])\n      :              :     :     :  +- Project [d_date_sk#29, d_year#35, d_qoy#39]\n      :              :     :     :     +- Filter (((isnotnull(d_qoy#39) AND isnotnull(d_year#35)) AND ((d_qoy#39 = 1) AND (d_year#35 = 2000))) AND isnotnull(d_date_sk#29))\n      :              :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#29,d_date_id#30,d_date#31,d_month_seq#32,d_week_seq#33,d_quarter_seq#34,d_year#35,d_dow#36,d_moy#37,d_dom#38,d_qoy#39,d_fy_year#40,d_fy_quarter_seq#41,d_fy_week_seq#42,d_day_name#43,d_quarter_name#44,d_holiday#45,d_weekend#46,d_following_holiday#47,d_first_dom#48,d_last_dom#49,d_same_day_ly#50,d_same_day_lq#51,d_current_day#52,... 4 more fields] parquet\n      :              :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#6,ss_item_sk#7,ss_customer_sk#8,ss_cdemo_sk#9,ss_hdemo_sk#10,ss_addr_sk#11,ss_store_sk#12,ss_promo_sk#13,ss_ticket_number#14L,ss_quantity#15,ss_wholesale_cost#16,ss_list_price#17,ss_sales_price#18,ss_ext_discount_amt#19,ss_ext_sales_price#20,ss_ext_wholesale_cost#21,ss_ext_list_price#22,ss_ext_tax#23,ss_coupon_amt#24,ss_net_paid#25,ss_net_paid_inc_tax#26,ss_net_profit#27,ss_sold_date_sk#28] parquet\n      :              :     +- LogicalQueryStage Project [d_date_sk#29, d_year#35, d_qoy#39], BroadcastQueryStage 5\n      :              +- LogicalQueryStage Project [ca_address_sk#57, ca_county#64], ShuffleQueryStage 7\n      +- Project [ca_county#786, web_sales#750, web_sales#807, web_sales#811]\n         +- Join Inner, (ca_county#786 = ca_county#1375)\n            :- Project [ca_county#786, web_sales#750, web_sales#807]\n            :  +- Join Inner, (ca_county#786 = ca_county#1299)\n            :     :- Aggregate [ca_county#786, d_qoy#761, d_year#757], [ca_county#786, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#92)),17,2) AS web_sales#750]\n            :     :  +- Project [ws_ext_sales_price#92, d_year#757, d_qoy#761, ca_county#786]\n            :     :     +- Join Inner, (ws_bill_addr_sk#76 = ca_address_sk#779)\n            :     :        :- Project [ws_bill_addr_sk#76, ws_ext_sales_price#92, d_year#757, d_qoy#761]\n            :     :        :  +- Join Inner, (ws_sold_date_sk#103 = d_date_sk#751)\n            :     :        :     :- Project [ws_bill_addr_sk#76, ws_ext_sales_price#92, ws_sold_date_sk#103]\n            :     :        :     :  +- Filter ((isnotnull(ws_sold_date_sk#103) AND isnotnull(ws_bill_addr_sk#76)) AND dynamicpruning#1385 [ws_sold_date_sk#103])\n            :     :        :     :     :  +- Project [d_date_sk#751, d_year#757, d_qoy#761]\n            :     :        :     :     :     +- Filter (((isnotnull(d_qoy#761) AND isnotnull(d_year#757)) AND ((d_qoy#761 = 1) AND (d_year#757 = 2000))) AND isnotnull(d_date_sk#751))\n            :     :        :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#751,d_date_id#752,d_date#753,d_month_seq#754,d_week_seq#755,d_quarter_seq#756,d_year#757,d_dow#758,d_moy#759,d_dom#760,d_qoy#761,d_fy_year#762,d_fy_quarter_seq#763,d_fy_week_seq#764,d_day_name#765,d_quarter_name#766,d_holiday#767,d_weekend#768,d_following_holiday#769,d_first_dom#770,d_last_dom#771,d_same_day_ly#772,d_same_day_lq#773,d_current_day#774,... 4 more fields] parquet\n            :     :        :     :     +- Relation spark_catalog.tpcds_100.web_sales[ws_sold_time_sk#70,ws_ship_date_sk#71,ws_item_sk#72,ws_bill_customer_sk#73,ws_bill_cdemo_sk#74,ws_bill_hdemo_sk#75,ws_bill_addr_sk#76,ws_ship_customer_sk#77,ws_ship_cdemo_sk#78,ws_ship_hdemo_sk#79,ws_ship_addr_sk#80,ws_web_page_sk#81,ws_web_site_sk#82,ws_ship_mode_sk#83,ws_warehouse_sk#84,ws_promo_sk#85,ws_order_number#86L,ws_quantity#87,ws_wholesale_cost#88,ws_list_price#89,ws_sales_price#90,ws_ext_discount_amt#91,ws_ext_sales_price#92,ws_ext_wholesale_cost#93,... 10 more fields] parquet\n            :     :        :     +- LogicalQueryStage Project [d_date_sk#751, d_year#757, d_qoy#761], BroadcastQueryStage 9\n            :     :        +- LogicalQueryStage Project [ca_address_sk#779, ca_county#786], ShuffleQueryStage 11\n            :     +- Aggregate [ca_county#1299, d_qoy#1274, d_year#1270], [ca_county#1299, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#1252)),17,2) AS web_sales#807]\n            :        +- Project [ws_ext_sales_price#1252, d_year#1270, d_qoy#1274, ca_county#1299]\n            :           +- Join Inner, (ws_bill_addr_sk#1236 = ca_address_sk#1292)\n            :              :- Project [ws_bill_addr_sk#1236, ws_ext_sales_price#1252, d_year#1270, d_qoy#1274]\n            :              :  +- Join Inner, (ws_sold_date_sk#1263 = d_date_sk#1264)\n            :              :     :- Project [ws_bill_addr_sk#1236, ws_ext_sales_price#1252, ws_sold_date_sk#1263]\n            :              :     :  +- Filter ((isnotnull(ws_sold_date_sk#1263) AND isnotnull(ws_bill_addr_sk#1236)) AND dynamicpruning#1386 [ws_sold_date_sk#1263])\n            :              :     :     :  +- Project [d_date_sk#1264, d_year#1270, d_qoy#1274]\n            :              :     :     :     +- Filter (((isnotnull(d_qoy#1274) AND isnotnull(d_year#1270)) AND ((d_qoy#1274 = 2) AND (d_year#1270 = 2000))) AND isnotnull(d_date_sk#1264))\n            :              :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#1264,d_date_id#1265,d_date#1266,d_month_seq#1267,d_week_seq#1268,d_quarter_seq#1269,d_year#1270,d_dow#1271,d_moy#1272,d_dom#1273,d_qoy#1274,d_fy_year#1275,d_fy_quarter_seq#1276,d_fy_week_seq#1277,d_day_name#1278,d_quarter_name#1279,d_holiday#1280,d_weekend#1281,d_following_holiday#1282,d_first_dom#1283,d_last_dom#1284,d_same_day_ly#1285,d_same_day_lq#1286,d_current_day#1287,... 4 more fields] parquet\n            :              :     :     +- Relation spark_catalog.tpcds_100.web_sales[ws_sold_time_sk#1230,ws_ship_date_sk#1231,ws_item_sk#1232,ws_bill_customer_sk#1233,ws_bill_cdemo_sk#1234,ws_bill_hdemo_sk#1235,ws_bill_addr_sk#1236,ws_ship_customer_sk#1237,ws_ship_cdemo_sk#1238,ws_ship_hdemo_sk#1239,ws_ship_addr_sk#1240,ws_web_page_sk#1241,ws_web_site_sk#1242,ws_ship_mode_sk#1243,ws_warehouse_sk#1244,ws_promo_sk#1245,ws_order_number#1246L,ws_quantity#1247,ws_wholesale_cost#1248,ws_list_price#1249,ws_sales_price#1250,ws_ext_discount_amt#1251,ws_ext_sales_price#1252,ws_ext_wholesale_cost#1253,... 10 more fields] parquet\n            :              :     +- LogicalQueryStage Project [d_date_sk#1264, d_year#1270, d_qoy#1274], BroadcastQueryStage 13\n            :              +- LogicalQueryStage Project [ca_address_sk#1292, ca_county#1299], ShuffleQueryStage 15\n            +- Aggregate [ca_county#1375, d_qoy#1350, d_year#1346], [ca_county#1375, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#1328)),17,2) AS web_sales#811]\n               +- Project [ws_ext_sales_price#1328, d_year#1346, d_qoy#1350, ca_county#1375]\n                  +- Join Inner, (ws_bill_addr_sk#1312 = ca_address_sk#1368)\n                     :- LogicalQueryStage Project [ws_bill_addr_sk#1312, ws_ext_sales_price#1328, d_year#1346, d_qoy#1350], ShuffleQueryStage 21\n                     +- LogicalQueryStage Project [ca_address_sk#1368, ca_county#1375], ShuffleQueryStage 19\n"
      },
      "IM" : {
        "inputSizeInBytes" : 123165355692,
        "inputRowCount" : 1034914778
      },
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 16,
        "FinishedTasksNum" : 4,
        "FinishedTasksTotalTimeInMs" : 6018.0,
        "FinishedTasksDistributionInMs" : [ 1392.0, 1426.0, 1566.0, 1634.0, 1634.0 ]
      },
      "StartTimeInMs" : 1702226848621,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 12369,
        "IOBytes" : {
          "Total" : 974010890,
          "Details" : {
            "IR" : 195191379,
            "IW" : 0,
            "SR" : 429416902,
            "SW" : 349402609
          }
        }
      }
    },
    "18" : {
      "LQP" : {
        "operators" : {
          "12" : {
            "sign" : 1140073279,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 149939504,
            "rowCount" : 3407716,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ca_county#786, web_sales#750, web_sales#807] "
          },
          "8" : {
            "sign" : 1148640947,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 316176,
            "rowCount" : 5538,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: LogicalQueryStage Aggregate [ca_county#1223, d_qoy#1198, d_year#1194], [ca_county#1223, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#1179)),17,2) AS store_sales#803], HashAggregate(keys=[ca_county#1223, d_qoy#1198, d_year#1194], functions=[sum(UnscaledValue(ss_ext_sales_price#1179))]), BroadcastQueryStage 35 "
          },
          "4" : {
            "sign" : -47090017,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 2868533543616,
            "rowCount" : 37743862416,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ca_county#64 = ca_county#1158) "
          },
          "15" : {
            "sign" : 1322015049,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 105392,
            "rowCount" : 1846,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [ca_county#1299, d_qoy#1274, d_year#1270], [ca_county#1299, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#1252)),17,2) AS web_sales#807], HashAggregate(keys=[ca_county#1299, d_qoy#1274, d_year#1270], functions=[sum(UnscaledValue(ws_ext_sales_price#1252))]) "
          },
          "11" : {
            "sign" : 443265521,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 452926348992,
            "rowCount" : 6290643736,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ca_county#786 = ca_county#1375) "
          },
          "9" : {
            "sign" : -1528605442,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 33619968,
            "rowCount" : 1846,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: LogicalQueryStage Aggregate [ca_county#64, d_qoy#39, d_year#35], [ca_county#64, d_year#35, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#20)),17,2) AS store_sales#749], HashAggregate(keys=[ca_county#64, d_qoy#39, d_year#35], functions=[sum(UnscaledValue(ss_ext_sales_price#20))]), BroadcastQueryStage 34 "
          },
          "13" : {
            "sign" : -29722014,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 218093824,
            "rowCount" : 3407716,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ca_county#786 = ca_county#1299) "
          },
          "16" : {
            "sign" : 1621679114,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 33619968,
            "rowCount" : 1846,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: LogicalQueryStage Aggregate [ca_county#1375, d_qoy#1350, d_year#1346], [ca_county#1375, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#1328)),17,2) AS web_sales#811], HashAggregate(keys=[ca_county#1375, d_qoy#1350, d_year#1346], functions=[sum(UnscaledValue(ws_ext_sales_price#1328))]), BroadcastQueryStage 32 "
          },
          "5" : {
            "sign" : -1700846357,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 899637024,
            "rowCount" : 20446296,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ca_county#1158, store_sales#799, store_sales#803] "
          },
          "10" : {
            "sign" : -1348798510,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 327113474272,
            "rowCount" : 6290643736,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ca_county#786, web_sales#750, web_sales#807, web_sales#811] "
          },
          "6" : {
            "sign" : 10040467,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 1308562944,
            "rowCount" : 20446296,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ca_county#1158 = ca_county#1223) "
          },
          "1" : {
            "sign" : -854559176,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 22793586401246997712896,
            "rowCount" : 237433191679656226176,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ca_county#64, d_year#35, (web_sales#807 / web_sales#750) AS web_q1_q2_increase#745, (store_sales#799 / store_sales#749) AS store_q1_q2_increase#746, (web_sales#811 / web_sales#807) AS web_q2_q3_increase#747, (store_sales#803 / store_sales#799) AS store_q2_q3_increase#748] "
          },
          "14" : {
            "sign" : 1028205086,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 105392,
            "rowCount" : 1846,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: LogicalQueryStage Aggregate [ca_county#786, d_qoy#761, d_year#757], [ca_county#786, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#92)),17,2) AS web_sales#750], HashAggregate(keys=[ca_county#786, d_qoy#761, d_year#757], functions=[sum(UnscaledValue(ws_ext_sales_price#92))]), BroadcastQueryStage 33 "
          },
          "0" : {
            "sign" : 652849452,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 22793586401246997712896,
            "rowCount" : 237433191679656226176,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [d_year#35 ASC NULLS FIRST], true "
          },
          "2" : {
            "sign" : 55112297,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 23743319167965622617600,
            "rowCount" : 237433191679656226176,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (((ca_county#64 = ca_county#786) AND (CASE WHEN (web_sales#750 > 0.00) THEN (web_sales#807 / web_sales#750) END > CASE WHEN (store_sales#749 > 0.00) THEN (store_sales#799 / store_sales#749) END)) AND (CASE WHEN (web_sales#807 > 0.00) THEN (web_sales#811 / web_sales#807) END > CASE WHEN (store_sales#799 > 0.00) THEN (store_sales#803 / store_sales#799) END)) "
          },
          "7" : {
            "sign" : 1377603520,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 210784,
            "rowCount" : 3692,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [ca_county#1158, d_qoy#1133, d_year#1129], [ca_county#1158, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#1114)),17,2) AS store_sales#799], HashAggregate(keys=[ca_county#1158, d_qoy#1133, d_year#1129], functions=[sum(UnscaledValue(ss_ext_sales_price#1114))]) "
          },
          "3" : {
            "sign" : -246871472,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 2113656295296,
            "rowCount" : 37743862416,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [store_sales#799, store_sales#803, ca_county#64, d_year#35, store_sales#749] "
          }
        },
        "links" : [ {
          "fromId" : 7,
          "fromName" : "LogicalQueryStage",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "LogicalQueryStage",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Join",
          "toId" : 5,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Project",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "LogicalQueryStage",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Join",
          "toId" : 3,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Project",
          "toId" : 2,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 14,
          "fromName" : "LogicalQueryStage",
          "toId" : 13,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 15,
          "fromName" : "LogicalQueryStage",
          "toId" : 13,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 13,
          "fromName" : "Join",
          "toId" : 12,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 12,
          "fromName" : "Project",
          "toId" : 11,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 16,
          "fromName" : "LogicalQueryStage",
          "toId" : 11,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "Join",
          "toId" : 10,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "Project",
          "toId" : 2,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Join",
          "toId" : 1,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Project",
          "toId" : 0,
          "toName" : "Sort",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Sort [d_year#35 ASC NULLS FIRST], true\n+- Project [ca_county#64, d_year#35, (web_sales#807 / web_sales#750) AS web_q1_q2_increase#745, (store_sales#799 / store_sales#749) AS store_q1_q2_increase#746, (web_sales#811 / web_sales#807) AS web_q2_q3_increase#747, (store_sales#803 / store_sales#799) AS store_q2_q3_increase#748]\n   +- Join Inner, (((ca_county#64 = ca_county#786) AND (CASE WHEN (web_sales#750 > 0.00) THEN (web_sales#807 / web_sales#750) END > CASE WHEN (store_sales#749 > 0.00) THEN (store_sales#799 / store_sales#749) END)) AND (CASE WHEN (web_sales#807 > 0.00) THEN (web_sales#811 / web_sales#807) END > CASE WHEN (store_sales#799 > 0.00) THEN (store_sales#803 / store_sales#799) END))\n      :- Project [store_sales#799, store_sales#803, ca_county#64, d_year#35, store_sales#749]\n      :  +- Join Inner, (ca_county#64 = ca_county#1158)\n      :     :- Project [ca_county#1158, store_sales#799, store_sales#803]\n      :     :  +- Join Inner, (ca_county#1158 = ca_county#1223)\n      :     :     :- LogicalQueryStage Aggregate [ca_county#1158, d_qoy#1133, d_year#1129], [ca_county#1158, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#1114)),17,2) AS store_sales#799], HashAggregate(keys=[ca_county#1158, d_qoy#1133, d_year#1129], functions=[sum(UnscaledValue(ss_ext_sales_price#1114))])\n      :     :     +- LogicalQueryStage LogicalQueryStage Aggregate [ca_county#1223, d_qoy#1198, d_year#1194], [ca_county#1223, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#1179)),17,2) AS store_sales#803], HashAggregate(keys=[ca_county#1223, d_qoy#1198, d_year#1194], functions=[sum(UnscaledValue(ss_ext_sales_price#1179))]), BroadcastQueryStage 35\n      :     +- LogicalQueryStage LogicalQueryStage Aggregate [ca_county#64, d_qoy#39, d_year#35], [ca_county#64, d_year#35, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#20)),17,2) AS store_sales#749], HashAggregate(keys=[ca_county#64, d_qoy#39, d_year#35], functions=[sum(UnscaledValue(ss_ext_sales_price#20))]), BroadcastQueryStage 34\n      +- Project [ca_county#786, web_sales#750, web_sales#807, web_sales#811]\n         +- Join Inner, (ca_county#786 = ca_county#1375)\n            :- Project [ca_county#786, web_sales#750, web_sales#807]\n            :  +- Join Inner, (ca_county#786 = ca_county#1299)\n            :     :- LogicalQueryStage LogicalQueryStage Aggregate [ca_county#786, d_qoy#761, d_year#757], [ca_county#786, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#92)),17,2) AS web_sales#750], HashAggregate(keys=[ca_county#786, d_qoy#761, d_year#757], functions=[sum(UnscaledValue(ws_ext_sales_price#92))]), BroadcastQueryStage 33\n            :     +- LogicalQueryStage Aggregate [ca_county#1299, d_qoy#1274, d_year#1270], [ca_county#1299, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#1252)),17,2) AS web_sales#807], HashAggregate(keys=[ca_county#1299, d_qoy#1274, d_year#1270], functions=[sum(UnscaledValue(ws_ext_sales_price#1252))])\n            +- LogicalQueryStage LogicalQueryStage Aggregate [ca_county#1375, d_qoy#1350, d_year#1346], [ca_county#1375, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#1328)),17,2) AS web_sales#811], HashAggregate(keys=[ca_county#1375, d_qoy#1350, d_year#1346], functions=[sum(UnscaledValue(ws_ext_sales_price#1328))]), BroadcastQueryStage 32\n"
      },
      "IM" : {
        "inputSizeInBytes" : 67977680,
        "inputRowCount" : 16614
      },
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 1,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "StartTimeInMs" : 1702226859375,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 1615,
        "IOBytes" : {
          "Total" : 514473,
          "Details" : {
            "IR" : 0,
            "IW" : 0,
            "SR" : 496792,
            "SW" : 17681
          }
        }
      }
    },
    "7" : {
      "LQP" : {
        "operators" : {
          "12" : {
            "sign" : 182366066,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 39644968,
            "rowCount" : 970045,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ca_address_sk#1216, ca_county#1223], ShuffleQueryStage 4 "
          },
          "8" : {
            "sign" : 1844188976,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 9273107403947700,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [ca_county#1223, d_qoy#1198, d_year#1194], [ca_county#1223, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#1179)),17,2) AS store_sales#803] "
          },
          "19" : {
            "sign" : -1207836677,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 322961238806267963875329224801336250,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ca_county#786 = ca_county#1375) "
          },
          "23" : {
            "sign" : -1614225448,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 2966210022697900,
            "rowCount" : 67413864152225,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_ext_sales_price#92, d_year#757, d_qoy#761, ca_county#786] "
          },
          "4" : {
            "sign" : 1934218230,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 162209561135912146834368452519798400,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ca_county#64 = ca_county#1158) "
          },
          "15" : {
            "sign" : 1307145011,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 414712908926160,
            "rowCount" : 7975248248580,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_addr_sk#11 = ca_address_sk#57) "
          },
          "11" : {
            "sign" : 1384000956,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 7435136380,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ss_addr_sk#1170, ss_ext_sales_price#1179, d_year#1194, d_qoy#1198], ShuffleQueryStage 20 "
          },
          "9" : {
            "sign" : -1184610642,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 11333797938158300,
            "rowCount" : 257586316776325,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_ext_sales_price#1179, d_year#1194, d_qoy#1198, ca_county#1223] "
          },
          "22" : {
            "sign" : 339408048,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 2426899109480100,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [ca_county#786, d_qoy#761, d_year#757], [ca_county#786, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#92)),17,2) AS web_sales#750] "
          },
          "26" : {
            "sign" : -840396086,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 39644968,
            "rowCount" : 970045,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ca_address_sk#779, ca_county#786], ShuffleQueryStage 11 "
          },
          "13" : {
            "sign" : 98465856,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 319009929943200,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [ca_county#64, d_qoy#39, d_year#35], [ca_county#64, d_year#35, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#20)),17,2) AS store_sales#749] "
          },
          "24" : {
            "sign" : -685478612,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 3505520935915700,
            "rowCount" : 67413864152225,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ws_bill_addr_sk#76 = ca_address_sk#779) "
          },
          "16" : {
            "sign" : 297985490,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 328860960,
            "rowCount" : 8221524,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ss_addr_sk#11, ss_ext_sales_price#20, d_year#35, d_qoy#39], ShuffleQueryStage 23 "
          },
          "5" : {
            "sign" : -1583672072,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 508478093972791701412,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ca_county#1158, store_sales#799, store_sales#803] "
          },
          "10" : {
            "sign" : 1256814607,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 13394488472368900,
            "rowCount" : 257586316776325,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_addr_sk#1170 = ca_address_sk#1216) "
          },
          "21" : {
            "sign" : -175252555,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 5889839287595302405692296010000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ca_county#786 = ca_county#1299) "
          },
          "32" : {
            "sign" : 1960698725,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 79758,
            "rowCount" : 1899,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [ca_county#1375, d_qoy#1350, d_year#1346], [ca_county#1375, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#1328)),17,2) AS web_sales#811], HashAggregate(keys=[ca_county#1375, d_qoy#1350, d_year#1346], functions=[sum(UnscaledValue(ws_ext_sales_price#1328))]) "
          },
          "6" : {
            "sign" : 296931068,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 739604500324060656600,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ca_county#1158 = ca_county#1223) "
          },
          "1" : {
            "sign" : 1029331077,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 26763528273804616790970113731193827233354087876942373120984426417920000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ca_county#64, d_year#35, (web_sales#807 / web_sales#750) AS web_q1_q2_increase#745, (store_sales#799 / store_sales#749) AS store_q1_q2_increase#746, (web_sales#811 / web_sales#807) AS web_q2_q3_increase#747, (store_sales#803 / store_sales#799) AS store_q2_q3_increase#748] "
          },
          "17" : {
            "sign" : 1889027863,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 39644968,
            "rowCount" : 970045,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ca_address_sk#57, ca_county#64], ShuffleQueryStage 7 "
          },
          "25" : {
            "sign" : 1137046896,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1945876940,
            "rowCount" : 69495605,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ws_bill_addr_sk#76, ws_ext_sales_price#92, d_year#757, d_qoy#761], ShuffleQueryStage 24 "
          },
          "14" : {
            "sign" : -1206095892,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 350910922937520,
            "rowCount" : 7975248248580,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_ext_sales_price#20, d_year#35, d_qoy#39, ca_county#64] "
          },
          "31" : {
            "sign" : 2142456221,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 39644968,
            "rowCount" : 970045,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ca_address_sk#1292, ca_county#1299], ShuffleQueryStage 15 "
          },
          "0" : {
            "sign" : 1363816043,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 26763528273804616790970113731193827233354087876942373120984426417920000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [d_year#35 ASC NULLS FIRST], true "
          },
          "20" : {
            "sign" : -657014884,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 4049264510221770403913453506875,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ca_county#786, web_sales#750, web_sales#807] "
          },
          "27" : {
            "sign" : 1861053396,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 2426899109480100,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [ca_county#1299, d_qoy#1274, d_year#1270], [ca_county#1299, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#1252)),17,2) AS web_sales#807] "
          },
          "2" : {
            "sign" : -1989017010,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 27878675285213142490593868469993570034743841538481638667692110852000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (((ca_county#64 = ca_county#786) AND (CASE WHEN (web_sales#750 > 0.00) THEN (web_sales#807 / web_sales#750) END > CASE WHEN (store_sales#749 > 0.00) THEN (store_sales#799 / store_sales#749) END)) AND (CASE WHEN (web_sales#807 > 0.00) THEN (web_sales#811 / web_sales#807) END > CASE WHEN (store_sales#799 > 0.00) THEN (store_sales#803 / store_sales#799) END)) "
          },
          "18" : {
            "sign" : 1061863652,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 233249783582304640576626662356520625,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ca_county#786, web_sales#750, web_sales#807, web_sales#811] "
          },
          "30" : {
            "sign" : 919213756,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1945876940,
            "rowCount" : 69495605,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ws_bill_addr_sk#1236, ws_ext_sales_price#1252, d_year#1270, d_qoy#1274], ShuffleQueryStage 25 "
          },
          "7" : {
            "sign" : 1377603520,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 79758,
            "rowCount" : 1899,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [ca_county#1158, d_qoy#1133, d_year#1129], [ca_county#1158, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#1114)),17,2) AS store_sales#799], HashAggregate(keys=[ca_county#1158, d_qoy#1133, d_year#1129], functions=[sum(UnscaledValue(ss_ext_sales_price#1114))]) "
          },
          "29" : {
            "sign" : 610900609,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 3505520935915700,
            "rowCount" : 67413864152225,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ws_bill_addr_sk#1236 = ca_address_sk#1292) "
          },
          "3" : {
            "sign" : -1258489827,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 119522834521198423983218859751430400,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [store_sales#799, store_sales#803, ca_county#64, d_year#35, store_sales#749] "
          },
          "28" : {
            "sign" : -1760044743,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 2966210022697900,
            "rowCount" : 67413864152225,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_ext_sales_price#1252, d_year#1270, d_qoy#1274, ca_county#1299] "
          }
        },
        "links" : [ {
          "fromId" : 7,
          "fromName" : "LogicalQueryStage",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "LogicalQueryStage",
          "toId" : 10,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 12,
          "fromName" : "LogicalQueryStage",
          "toId" : 10,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "Join",
          "toId" : 9,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "Project",
          "toId" : 8,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "Aggregate",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Join",
          "toId" : 5,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Project",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 16,
          "fromName" : "LogicalQueryStage",
          "toId" : 15,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 17,
          "fromName" : "LogicalQueryStage",
          "toId" : 15,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 15,
          "fromName" : "Join",
          "toId" : 14,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 14,
          "fromName" : "Project",
          "toId" : 13,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 13,
          "fromName" : "Aggregate",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Join",
          "toId" : 3,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Project",
          "toId" : 2,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 25,
          "fromName" : "LogicalQueryStage",
          "toId" : 24,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 26,
          "fromName" : "LogicalQueryStage",
          "toId" : 24,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 24,
          "fromName" : "Join",
          "toId" : 23,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 23,
          "fromName" : "Project",
          "toId" : 22,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 22,
          "fromName" : "Aggregate",
          "toId" : 21,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 30,
          "fromName" : "LogicalQueryStage",
          "toId" : 29,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 31,
          "fromName" : "LogicalQueryStage",
          "toId" : 29,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 29,
          "fromName" : "Join",
          "toId" : 28,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 28,
          "fromName" : "Project",
          "toId" : 27,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 27,
          "fromName" : "Aggregate",
          "toId" : 21,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 21,
          "fromName" : "Join",
          "toId" : 20,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 20,
          "fromName" : "Project",
          "toId" : 19,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 32,
          "fromName" : "LogicalQueryStage",
          "toId" : 19,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 19,
          "fromName" : "Join",
          "toId" : 18,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 18,
          "fromName" : "Project",
          "toId" : 2,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Join",
          "toId" : 1,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Project",
          "toId" : 0,
          "toName" : "Sort",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Sort [d_year#35 ASC NULLS FIRST], true\n+- Project [ca_county#64, d_year#35, (web_sales#807 / web_sales#750) AS web_q1_q2_increase#745, (store_sales#799 / store_sales#749) AS store_q1_q2_increase#746, (web_sales#811 / web_sales#807) AS web_q2_q3_increase#747, (store_sales#803 / store_sales#799) AS store_q2_q3_increase#748]\n   +- Join Inner, (((ca_county#64 = ca_county#786) AND (CASE WHEN (web_sales#750 > 0.00) THEN (web_sales#807 / web_sales#750) END > CASE WHEN (store_sales#749 > 0.00) THEN (store_sales#799 / store_sales#749) END)) AND (CASE WHEN (web_sales#807 > 0.00) THEN (web_sales#811 / web_sales#807) END > CASE WHEN (store_sales#799 > 0.00) THEN (store_sales#803 / store_sales#799) END))\n      :- Project [store_sales#799, store_sales#803, ca_county#64, d_year#35, store_sales#749]\n      :  +- Join Inner, (ca_county#64 = ca_county#1158)\n      :     :- Project [ca_county#1158, store_sales#799, store_sales#803]\n      :     :  +- Join Inner, (ca_county#1158 = ca_county#1223)\n      :     :     :- LogicalQueryStage Aggregate [ca_county#1158, d_qoy#1133, d_year#1129], [ca_county#1158, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#1114)),17,2) AS store_sales#799], HashAggregate(keys=[ca_county#1158, d_qoy#1133, d_year#1129], functions=[sum(UnscaledValue(ss_ext_sales_price#1114))])\n      :     :     +- Aggregate [ca_county#1223, d_qoy#1198, d_year#1194], [ca_county#1223, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#1179)),17,2) AS store_sales#803]\n      :     :        +- Project [ss_ext_sales_price#1179, d_year#1194, d_qoy#1198, ca_county#1223]\n      :     :           +- Join Inner, (ss_addr_sk#1170 = ca_address_sk#1216)\n      :     :              :- LogicalQueryStage Project [ss_addr_sk#1170, ss_ext_sales_price#1179, d_year#1194, d_qoy#1198], ShuffleQueryStage 20\n      :     :              +- LogicalQueryStage Project [ca_address_sk#1216, ca_county#1223], ShuffleQueryStage 4\n      :     +- Aggregate [ca_county#64, d_qoy#39, d_year#35], [ca_county#64, d_year#35, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#20)),17,2) AS store_sales#749]\n      :        +- Project [ss_ext_sales_price#20, d_year#35, d_qoy#39, ca_county#64]\n      :           +- Join Inner, (ss_addr_sk#11 = ca_address_sk#57)\n      :              :- LogicalQueryStage Project [ss_addr_sk#11, ss_ext_sales_price#20, d_year#35, d_qoy#39], ShuffleQueryStage 23\n      :              +- LogicalQueryStage Project [ca_address_sk#57, ca_county#64], ShuffleQueryStage 7\n      +- Project [ca_county#786, web_sales#750, web_sales#807, web_sales#811]\n         +- Join Inner, (ca_county#786 = ca_county#1375)\n            :- Project [ca_county#786, web_sales#750, web_sales#807]\n            :  +- Join Inner, (ca_county#786 = ca_county#1299)\n            :     :- Aggregate [ca_county#786, d_qoy#761, d_year#757], [ca_county#786, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#92)),17,2) AS web_sales#750]\n            :     :  +- Project [ws_ext_sales_price#92, d_year#757, d_qoy#761, ca_county#786]\n            :     :     +- Join Inner, (ws_bill_addr_sk#76 = ca_address_sk#779)\n            :     :        :- LogicalQueryStage Project [ws_bill_addr_sk#76, ws_ext_sales_price#92, d_year#757, d_qoy#761], ShuffleQueryStage 24\n            :     :        +- LogicalQueryStage Project [ca_address_sk#779, ca_county#786], ShuffleQueryStage 11\n            :     +- Aggregate [ca_county#1299, d_qoy#1274, d_year#1270], [ca_county#1299, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#1252)),17,2) AS web_sales#807]\n            :        +- Project [ws_ext_sales_price#1252, d_year#1270, d_qoy#1274, ca_county#1299]\n            :           +- Join Inner, (ws_bill_addr_sk#1236 = ca_address_sk#1292)\n            :              :- LogicalQueryStage Project [ws_bill_addr_sk#1236, ws_ext_sales_price#1252, d_year#1270, d_qoy#1274], ShuffleQueryStage 25\n            :              +- LogicalQueryStage Project [ca_address_sk#1292, ca_county#1299], ShuffleQueryStage 15\n            +- LogicalQueryStage Aggregate [ca_county#1375, d_qoy#1350, d_year#1346], [ca_county#1375, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#1328)),17,2) AS web_sales#811], HashAggregate(keys=[ca_county#1375, d_qoy#1350, d_year#1346], functions=[sum(UnscaledValue(ws_ext_sales_price#1328))])\n"
      },
      "IM" : {
        "inputSizeInBytes" : 11814490608,
        "inputRowCount" : 416637297
      },
      "PD" : {
        "4" : [ 390538, 367918, 379507, 381524, 374956, 372515, 373330, 381419, 363083, 377143, 380408, 372906, 386244, 379689, 358025, 362668, 375630, 379584, 381804, 371852, 369376, 390905, 372515, 372318, 386465, 369656, 371596, 382952, 379083, 371749, 387963, 373969, 368278, 371172, 386465, 369453, 372939, 375851, 370080, 382449, 366935, 365622, 359144, 376334, 370591, 367258, 394199, 371673, 373748, 362227, 375231, 380774, 362024, 384024, 369245, 375126, 387760, 371110, 374317, 372906, 374422, 371876, 374096, 380647, 371952, 381198, 375329, 363199, 382007, 378188, 367228, 362936, 379787, 374923, 377397, 354406, 384934, 387375, 387876, 382069, 360660, 371876, 382917, 359183, 380273, 364229, 370822, 366043, 372202, 370922, 368702, 385964, 367715, 362030, 372906, 391347, 369155, 371331, 360834, 381786, 365474, 373052, 369453, 381524, 364262, 397565, 381216, 382711, 368669, 361479, 373545, 367860, 382007, 374520, 375765, 377985, 363199, 374317, 369982, 369859, 365640, 385435, 388561, 378612, 378978, 392758, 383122, 366201, 361821, 365622, 372718, 392904, 370080, 382228, 372097, 371043, 371952, 371731, 379710, 372703, 381804, 365640, 387510, 377985, 387981, 361182, 389335, 366279, 386876, 384245, 377829, 367968, 388464, 377598, 364868, 371528, 375550, 376310, 380879, 371477, 371889, 381616, 378952, 360072, 378333, 373777, 368466, 378387, 386220, 382007, 381303, 390236, 382290, 378978, 373127, 364029, 380977, 377567, 367088, 379548, 394479, 379402, 374538, 363623, 378862, 371596, 381053, 376257, 375765, 373533, 388155, 378477, 359473, 365640, 368487, 376758, 381565, 367291, 370293, 378206 ],

      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 16,
        "FinishedTasksNum" : 12,
        "FinishedTasksTotalTimeInMs" : 19017.0,
        "FinishedTasksDistributionInMs" : [ 230.0, 996.0, 1337.0, 3264.0, 3541.0 ]
      },
      "StartTimeInMs" : 1702226852977,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 8013,
        "IOBytes" : {
          "Total" : 683358449,
          "Details" : {
            "IR" : 92180918,
            "IW" : 0,
            "SR" : 429416902,
            "SW" : 161760629
          }
        }
      }
    },
    "3" : {
      "LQP" : {
        "operators" : {
          "34" : {
            "sign" : 919213756,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1945876940,
            "rowCount" : 69495605,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ws_bill_addr_sk#1236, ws_ext_sales_price#1252, d_year#1270, d_qoy#1274], ShuffleQueryStage 25 "
          },
          "12" : {
            "sign" : 1844188976,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 9273107403947700,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [ca_county#1223, d_qoy#1198, d_year#1194], [ca_county#1223, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#1179)),17,2) AS store_sales#803] "
          },
          "8" : {
            "sign" : 734153543,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 11333797938158300,
            "rowCount" : 257586316776325,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_ext_sales_price#1114, d_year#1129, d_qoy#1133, ca_county#1158] "
          },
          "19" : {
            "sign" : 1307145011,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 13394488472368900,
            "rowCount" : 257586316776325,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_addr_sk#11 = ca_address_sk#57) "
          },
          "23" : {
            "sign" : -2040657822,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 9827156433906587877017602399866711903025687500,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ca_county#786 = ca_county#1375) "
          },
          "4" : {
            "sign" : -933470905,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 609124492976637049811909736816075687685254375000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ca_county#64 = ca_county#1158) "
          },
          "40" : {
            "sign" : -1084009982,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 39644968,
            "rowCount" : 970045,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ca_address_sk#1368, ca_county#1375], ShuffleQueryStage 19 "
          },
          "15" : {
            "sign" : 1384000956,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 7435136380,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ss_addr_sk#1170, ss_ext_sales_price#1179, d_year#1194, d_qoy#1198], ShuffleQueryStage 20 "
          },
          "11" : {
            "sign" : -115093538,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 39644968,
            "rowCount" : 970045,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ca_address_sk#1151, ca_county#1158], ShuffleQueryStage 1 "
          },
          "9" : {
            "sign" : -539984881,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 13394488472368900,
            "rowCount" : 257586316776325,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_addr_sk#1105 = ca_address_sk#1151) "
          },
          "33" : {
            "sign" : 610900609,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 3505520935915700,
            "rowCount" : 67413864152225,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ws_bill_addr_sk#1236 = ca_address_sk#1292) "
          },
          "22" : {
            "sign" : 1767313693,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 7097390757821424577846046177681514152185218750,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ca_county#786, web_sales#750, web_sales#807, web_sales#811] "
          },
          "26" : {
            "sign" : 339408048,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 2426899109480100,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [ca_county#786, d_qoy#761, d_year#757], [ca_county#786, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#92)),17,2) AS web_sales#750] "
          },
          "37" : {
            "sign" : 1096329513,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 2966210022697900,
            "rowCount" : 67413864152225,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_ext_sales_price#1328, d_year#1346, d_qoy#1350, ca_county#1375] "
          },
          "13" : {
            "sign" : -1184610642,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 11333797938158300,
            "rowCount" : 257586316776325,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_ext_sales_price#1179, d_year#1194, d_qoy#1198, ca_county#1223] "
          },
          "24" : {
            "sign" : -657014884,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 4049264510221770403913453506875,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ca_county#786, web_sales#750, web_sales#807] "
          },
          "35" : {
            "sign" : 2142456221,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 39644968,
            "rowCount" : 970045,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ca_address_sk#1292, ca_county#1299], ShuffleQueryStage 15 "
          },
          "16" : {
            "sign" : 182366066,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 39644968,
            "rowCount" : 970045,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ca_address_sk#1216, ca_county#1223], ShuffleQueryStage 4 "
          },
          "5" : {
            "sign" : 424343043,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 59118483136040385874811730511875,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ca_county#1158, store_sales#799, store_sales#803] "
          },
          "10" : {
            "sign" : 1370176114,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 7435136380,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ss_addr_sk#1105, ss_ext_sales_price#1114, d_year#1129, d_qoy#1133], ShuffleQueryStage 22 "
          },
          "21" : {
            "sign" : 1889027863,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 39644968,
            "rowCount" : 970045,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ca_address_sk#57, ca_county#64], ShuffleQueryStage 7 "
          },
          "32" : {
            "sign" : -1760044743,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 2966210022697900,
            "rowCount" : 67413864152225,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_ext_sales_price#1252, d_year#1270, d_qoy#1274, ca_county#1299] "
          },
          "6" : {
            "sign" : 1530277211,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 85990520925149652181544335290000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ca_county#1158 = ca_county#1223) "
          },
          "36" : {
            "sign" : -1873681378,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 2426899109480100,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [ca_county#1375, d_qoy#1350, d_year#1346], [ca_county#1375, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#1328)),17,2) AS web_sales#811] "
          },
          "1" : {
            "sign" : -577391603,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 3058091300483905546756519512449934536127211231470906416772370190094282351605161511887500000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ca_county#64, d_year#35, (web_sales#807 / web_sales#750) AS web_q1_q2_increase#745, (store_sales#799 / store_sales#749) AS store_q1_q2_increase#746, (web_sales#811 / web_sales#807) AS web_q2_q3_increase#747, (store_sales#803 / store_sales#799) AS store_q2_q3_increase#748] "
          },
          "39" : {
            "sign" : 834142654,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1945876940,
            "rowCount" : 69495605,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ws_bill_addr_sk#1312, ws_ext_sales_price#1328, d_year#1346, d_qoy#1350], ShuffleQueryStage 21 "
          },
          "17" : {
            "sign" : 98465856,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 10303452671053000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [ca_county#64, d_qoy#39, d_year#35], [ca_county#64, d_year#35, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#20)),17,2) AS store_sales#749] "
          },
          "25" : {
            "sign" : -175252555,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 5889839287595302405692296010000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ca_county#786 = ca_county#1299) "
          },
          "14" : {
            "sign" : 1256814607,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 13394488472368900,
            "rowCount" : 257586316776325,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_addr_sk#1170 = ca_address_sk#1216) "
          },
          "31" : {
            "sign" : 1861053396,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 2426899109480100,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [ca_county#1299, d_qoy#1274, d_year#1270], [ca_county#1299, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#1252)),17,2) AS web_sales#807] "
          },
          "0" : {
            "sign" : -194647843,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 3058091300483905546756519512449934536127211231470906416772370190094282351605161511887500000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [d_year#35 ASC NULLS FIRST], true "
          },
          "20" : {
            "sign" : 297985490,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 7435136380,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ss_addr_sk#11, ss_ext_sales_price#20, d_year#35, d_qoy#39], ShuffleQueryStage 23 "
          },
          "27" : {
            "sign" : -1614225448,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 2966210022697900,
            "rowCount" : 67413864152225,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_ext_sales_price#92, d_year#757, d_qoy#761, ca_county#786] "
          },
          "2" : {
            "sign" : -1083216102,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 3185511771337401611204707825468681808465845032782194184137885614681544116255376574882812500000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (((ca_county#64 = ca_county#786) AND (CASE WHEN (web_sales#750 > 0.00) THEN (web_sales#807 / web_sales#750) END > CASE WHEN (store_sales#749 > 0.00) THEN (store_sales#799 / store_sales#749) END)) AND (CASE WHEN (web_sales#807 > 0.00) THEN (web_sales#811 / web_sales#807) END > CASE WHEN (store_sales#799 > 0.00) THEN (store_sales#803 / store_sales#799) END)) "
          },
          "38" : {
            "sign" : 11414259,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 3505520935915700,
            "rowCount" : 67413864152225,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ws_bill_addr_sk#1312 = ca_address_sk#1368) "
          },
          "18" : {
            "sign" : -1206095892,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 11333797938158300,
            "rowCount" : 257586316776325,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_ext_sales_price#20, d_year#35, d_qoy#39, ca_county#64] "
          },
          "30" : {
            "sign" : -840396086,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 39644968,
            "rowCount" : 970045,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ca_address_sk#779, ca_county#786], ShuffleQueryStage 11 "
          },
          "7" : {
            "sign" : 878268733,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 9273107403947700,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [ca_county#1158, d_qoy#1133, d_year#1129], [ca_county#1158, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#1114)),17,2) AS store_sales#799] "
          },
          "29" : {
            "sign" : 1137046896,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1945876940,
            "rowCount" : 69495605,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ws_bill_addr_sk#76, ws_ext_sales_price#92, d_year#757, d_qoy#761], ShuffleQueryStage 24 "
          },
          "3" : {
            "sign" : 2048140754,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 448828573772258878808775595548687348820713750000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [store_sales#799, store_sales#803, ca_county#64, d_year#35, store_sales#749] "
          },
          "28" : {
            "sign" : -685478612,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 3505520935915700,
            "rowCount" : 67413864152225,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ws_bill_addr_sk#76 = ca_address_sk#779) "
          }
        },
        "links" : [ {
          "fromId" : 10,
          "fromName" : "LogicalQueryStage",
          "toId" : 9,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "LogicalQueryStage",
          "toId" : 9,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "Join",
          "toId" : 8,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "Project",
          "toId" : 7,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Aggregate",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 15,
          "fromName" : "LogicalQueryStage",
          "toId" : 14,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 16,
          "fromName" : "LogicalQueryStage",
          "toId" : 14,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 14,
          "fromName" : "Join",
          "toId" : 13,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 13,
          "fromName" : "Project",
          "toId" : 12,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 12,
          "fromName" : "Aggregate",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Join",
          "toId" : 5,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Project",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 20,
          "fromName" : "LogicalQueryStage",
          "toId" : 19,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 21,
          "fromName" : "LogicalQueryStage",
          "toId" : 19,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 19,
          "fromName" : "Join",
          "toId" : 18,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 18,
          "fromName" : "Project",
          "toId" : 17,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 17,
          "fromName" : "Aggregate",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Join",
          "toId" : 3,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Project",
          "toId" : 2,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 29,
          "fromName" : "LogicalQueryStage",
          "toId" : 28,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 30,
          "fromName" : "LogicalQueryStage",
          "toId" : 28,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 28,
          "fromName" : "Join",
          "toId" : 27,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 27,
          "fromName" : "Project",
          "toId" : 26,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 26,
          "fromName" : "Aggregate",
          "toId" : 25,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 34,
          "fromName" : "LogicalQueryStage",
          "toId" : 33,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 35,
          "fromName" : "LogicalQueryStage",
          "toId" : 33,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 33,
          "fromName" : "Join",
          "toId" : 32,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 32,
          "fromName" : "Project",
          "toId" : 31,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 31,
          "fromName" : "Aggregate",
          "toId" : 25,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 25,
          "fromName" : "Join",
          "toId" : 24,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 24,
          "fromName" : "Project",
          "toId" : 23,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 39,
          "fromName" : "LogicalQueryStage",
          "toId" : 38,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 40,
          "fromName" : "LogicalQueryStage",
          "toId" : 38,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 38,
          "fromName" : "Join",
          "toId" : 37,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 37,
          "fromName" : "Project",
          "toId" : 36,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 36,
          "fromName" : "Aggregate",
          "toId" : 23,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 23,
          "fromName" : "Join",
          "toId" : 22,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 22,
          "fromName" : "Project",
          "toId" : 2,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Join",
          "toId" : 1,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Project",
          "toId" : 0,
          "toName" : "Sort",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Sort [d_year#35 ASC NULLS FIRST], true\n+- Project [ca_county#64, d_year#35, (web_sales#807 / web_sales#750) AS web_q1_q2_increase#745, (store_sales#799 / store_sales#749) AS store_q1_q2_increase#746, (web_sales#811 / web_sales#807) AS web_q2_q3_increase#747, (store_sales#803 / store_sales#799) AS store_q2_q3_increase#748]\n   +- Join Inner, (((ca_county#64 = ca_county#786) AND (CASE WHEN (web_sales#750 > 0.00) THEN (web_sales#807 / web_sales#750) END > CASE WHEN (store_sales#749 > 0.00) THEN (store_sales#799 / store_sales#749) END)) AND (CASE WHEN (web_sales#807 > 0.00) THEN (web_sales#811 / web_sales#807) END > CASE WHEN (store_sales#799 > 0.00) THEN (store_sales#803 / store_sales#799) END))\n      :- Project [store_sales#799, store_sales#803, ca_county#64, d_year#35, store_sales#749]\n      :  +- Join Inner, (ca_county#64 = ca_county#1158)\n      :     :- Project [ca_county#1158, store_sales#799, store_sales#803]\n      :     :  +- Join Inner, (ca_county#1158 = ca_county#1223)\n      :     :     :- Aggregate [ca_county#1158, d_qoy#1133, d_year#1129], [ca_county#1158, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#1114)),17,2) AS store_sales#799]\n      :     :     :  +- Project [ss_ext_sales_price#1114, d_year#1129, d_qoy#1133, ca_county#1158]\n      :     :     :     +- Join Inner, (ss_addr_sk#1105 = ca_address_sk#1151)\n      :     :     :        :- LogicalQueryStage Project [ss_addr_sk#1105, ss_ext_sales_price#1114, d_year#1129, d_qoy#1133], ShuffleQueryStage 22\n      :     :     :        +- LogicalQueryStage Project [ca_address_sk#1151, ca_county#1158], ShuffleQueryStage 1\n      :     :     +- Aggregate [ca_county#1223, d_qoy#1198, d_year#1194], [ca_county#1223, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#1179)),17,2) AS store_sales#803]\n      :     :        +- Project [ss_ext_sales_price#1179, d_year#1194, d_qoy#1198, ca_county#1223]\n      :     :           +- Join Inner, (ss_addr_sk#1170 = ca_address_sk#1216)\n      :     :              :- LogicalQueryStage Project [ss_addr_sk#1170, ss_ext_sales_price#1179, d_year#1194, d_qoy#1198], ShuffleQueryStage 20\n      :     :              +- LogicalQueryStage Project [ca_address_sk#1216, ca_county#1223], ShuffleQueryStage 4\n      :     +- Aggregate [ca_county#64, d_qoy#39, d_year#35], [ca_county#64, d_year#35, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#20)),17,2) AS store_sales#749]\n      :        +- Project [ss_ext_sales_price#20, d_year#35, d_qoy#39, ca_county#64]\n      :           +- Join Inner, (ss_addr_sk#11 = ca_address_sk#57)\n      :              :- LogicalQueryStage Project [ss_addr_sk#11, ss_ext_sales_price#20, d_year#35, d_qoy#39], ShuffleQueryStage 23\n      :              +- LogicalQueryStage Project [ca_address_sk#57, ca_county#64], ShuffleQueryStage 7\n      +- Project [ca_county#786, web_sales#750, web_sales#807, web_sales#811]\n         +- Join Inner, (ca_county#786 = ca_county#1375)\n            :- Project [ca_county#786, web_sales#750, web_sales#807]\n            :  +- Join Inner, (ca_county#786 = ca_county#1299)\n            :     :- Aggregate [ca_county#786, d_qoy#761, d_year#757], [ca_county#786, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#92)),17,2) AS web_sales#750]\n            :     :  +- Project [ws_ext_sales_price#92, d_year#757, d_qoy#761, ca_county#786]\n            :     :     +- Join Inner, (ws_bill_addr_sk#76 = ca_address_sk#779)\n            :     :        :- LogicalQueryStage Project [ws_bill_addr_sk#76, ws_ext_sales_price#92, d_year#757, d_qoy#761], ShuffleQueryStage 24\n            :     :        +- LogicalQueryStage Project [ca_address_sk#779, ca_county#786], ShuffleQueryStage 11\n            :     +- Aggregate [ca_county#1299, d_qoy#1274, d_year#1270], [ca_county#1299, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#1252)),17,2) AS web_sales#807]\n            :        +- Project [ws_ext_sales_price#1252, d_year#1270, d_qoy#1274, ca_county#1299]\n            :           +- Join Inner, (ws_bill_addr_sk#1236 = ca_address_sk#1292)\n            :              :- LogicalQueryStage Project [ws_bill_addr_sk#1236, ws_ext_sales_price#1252, d_year#1270, d_qoy#1274], ShuffleQueryStage 25\n            :              +- LogicalQueryStage Project [ca_address_sk#1292, ca_county#1299], ShuffleQueryStage 15\n            +- Aggregate [ca_county#1375, d_qoy#1350, d_year#1346], [ca_county#1375, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#1328)),17,2) AS web_sales#811]\n               +- Project [ws_ext_sales_price#1328, d_year#1346, d_qoy#1350, ca_county#1375]\n                  +- Join Inner, (ws_bill_addr_sk#1312 = ca_address_sk#1368)\n                     :- LogicalQueryStage Project [ws_bill_addr_sk#1312, ws_ext_sales_price#1328, d_year#1346, d_qoy#1350], ShuffleQueryStage 21\n                     +- LogicalQueryStage Project [ca_address_sk#1368, ca_county#1375], ShuffleQueryStage 19\n"
      },
      "IM" : {
        "inputSizeInBytes" : 28380909768,
        "inputRowCount" : 1010928840
      },
      "PD" : {

      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 16,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "StartTimeInMs" : 1702226849417,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 11573,
        "IOBytes" : {
          "Total" : 952562237,
          "Details" : {
            "IR" : 189733624,
            "IW" : 0,
            "SR" : 429416902,
            "SW" : 333411711
          }
        }
      }
    }
  },
  "RuntimeQSs" : {
    "12" : {
      "QSLogical" : {
        "operators" : {
          "0" : {
            "sign" : 2113170013,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 87354,
                "rowCount" : 1899
              },
              "compileTime" : {
                "sizeInBytes" : 87354,
                "rowCount" : 1899
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [ca_county#64, d_qoy#39, d_year#35], [ca_county#64, d_year#35, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#20)),17,2) AS store_sales#749] "
          },
          "1" : {
            "sign" : -188721987,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 13761654400,
                "rowCount" : 275233088
              },
              "compileTime" : {
                "sizeInBytes" : 13761654400,
                "rowCount" : 275233088
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_ext_sales_price#20, d_year#35, d_qoy#39, ca_county#64] "
          },
          "2" : {
            "sign" : 1499639248,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 15963519104,
                "rowCount" : 275233088
              },
              "compileTime" : {
                "sizeInBytes" : 15963519104,
                "rowCount" : 275233088
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_addr_sk#11 = ca_address_sk#57) "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "Join",
          "toId" : 1,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Project",
          "toId" : 0,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Aggregate [ca_county#64, d_qoy#39, d_year#35], [ca_county#64, d_year#35, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#20)),17,2) AS store_sales#749]\n+- Project [ss_ext_sales_price#20, d_year#35, d_qoy#39, ca_county#64]\n   +- Join Inner, (ss_addr_sk#11 = ca_address_sk#57)\n      :- Project [ss_addr_sk#11, ss_ext_sales_price#20, d_year#35, d_qoy#39]\n      :  +- Join Inner, (ss_sold_date_sk#28 = d_date_sk#29)\n      :     :- Project [ss_addr_sk#11, ss_ext_sales_price#20, ss_sold_date_sk#28]\n      :     :  +- Filter ((isnotnull(ss_sold_date_sk#28) AND isnotnull(ss_addr_sk#11)) AND dynamicpruning#1384 [ss_sold_date_sk#28])\n      :     :     :  +- Project [d_date_sk#29, d_year#35, d_qoy#39]\n      :     :     :     +- Filter (((isnotnull(d_qoy#39) AND isnotnull(d_year#35)) AND ((d_qoy#39 = 1) AND (d_year#35 = 2000))) AND isnotnull(d_date_sk#29))\n      :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#29,d_date_id#30,d_date#31,d_month_seq#32,d_week_seq#33,d_quarter_seq#34,d_year#35,d_dow#36,d_moy#37,d_dom#38,d_qoy#39,d_fy_year#40,d_fy_quarter_seq#41,d_fy_week_seq#42,d_day_name#43,d_quarter_name#44,d_holiday#45,d_weekend#46,d_following_holiday#47,d_first_dom#48,d_last_dom#49,d_same_day_ly#50,d_same_day_lq#51,d_current_day#52,... 4 more fields] parquet\n      :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#6,ss_item_sk#7,ss_customer_sk#8,ss_cdemo_sk#9,ss_hdemo_sk#10,ss_addr_sk#11,ss_store_sk#12,ss_promo_sk#13,ss_ticket_number#14L,ss_quantity#15,ss_wholesale_cost#16,ss_list_price#17,ss_sales_price#18,ss_ext_discount_amt#19,ss_ext_sales_price#20,ss_ext_wholesale_cost#21,ss_ext_list_price#22,ss_ext_tax#23,ss_coupon_amt#24,ss_net_paid#25,ss_net_paid_inc_tax#26,ss_net_profit#27,ss_sold_date_sk#28] parquet\n      :     +- Project [d_date_sk#29, d_year#35, d_qoy#39]\n      :        +- Filter (((isnotnull(d_qoy#39) AND isnotnull(d_year#35)) AND ((d_qoy#39 = 1) AND (d_year#35 = 2000))) AND isnotnull(d_date_sk#29))\n      :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#29,d_date_id#30,d_date#31,d_month_seq#32,d_week_seq#33,d_quarter_seq#34,d_year#35,d_dow#36,d_moy#37,d_dom#38,d_qoy#39,d_fy_year#40,d_fy_quarter_seq#41,d_fy_week_seq#42,d_day_name#43,d_quarter_name#44,d_holiday#45,d_weekend#46,d_following_holiday#47,d_first_dom#48,d_last_dom#49,d_same_day_ly#50,d_same_day_lq#51,d_current_day#52,... 4 more fields] parquet\n      +- Project [ca_address_sk#57, ca_county#64]\n         +- Filter (isnotnull(ca_address_sk#57) AND isnotnull(ca_county#64))\n            +- Relation spark_catalog.tpcds_100.customer_address[ca_address_sk#57,ca_address_id#58,ca_street_number#59,ca_street_name#60,ca_street_type#61,ca_suite_number#62,ca_city#63,ca_county#64,ca_state#65,ca_zip#66,ca_country#67,ca_gmt_offset#68,ca_location_type#69] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "4" : {
            "sign" : -578846097,
            "className" : "org.apache.spark.sql.execution.adaptive.ShuffleQueryStageExec",
            "sizeInBytes" : 328860960,
            "rowCount" : 8221524,
            "isRuntime" : true,
            "predicate" : " (unknown) ShuffleQueryStage Output [4]: [ss_addr_sk#11, ss_ext_sales_price#20, d_year#35, d_qoy#39] Arguments: 23 "
          },
          "5" : {
            "sign" : 1185651007,
            "className" : "org.apache.spark.sql.execution.SortExec",
            "sizeInBytes" : -1,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Input [2]: [ca_address_sk#57, ca_county#64] Arguments: [ca_address_sk#57 ASC NULLS FIRST], false, 0 "
          },
          "6" : {
            "sign" : -1812993184,
            "className" : "org.apache.spark.sql.execution.adaptive.ShuffleQueryStageExec",
            "sizeInBytes" : 39644968,
            "rowCount" : 970045,
            "isRuntime" : true,
            "predicate" : " (unknown) ShuffleQueryStage Output [2]: [ca_address_sk#57, ca_county#64] Arguments: 7 "
          },
          "1" : {
            "sign" : -102829195,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 13761654400,
            "rowCount" : 275233088,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [4]: [ss_ext_sales_price#20, d_year#35, d_qoy#39, ca_county#64] Input [6]: [ss_addr_sk#11, ss_ext_sales_price#20, d_year#35, d_qoy#39, ca_address_sk#57, ca_county#64] "
          },
          "0" : {
            "sign" : 471273099,
            "className" : "org.apache.spark.sql.execution.aggregate.HashAggregateExec",
            "sizeInBytes" : 87354,
            "rowCount" : 1899,
            "isRuntime" : false,
            "predicate" : " (unknown) HashAggregate Input [4]: [ss_ext_sales_price#20, d_year#35, d_qoy#39, ca_county#64] Keys [3]: [ca_county#64, d_qoy#39, d_year#35] Functions [1]: [partial_sum(UnscaledValue(ss_ext_sales_price#20))] Aggregate Attributes [1]: [sum#1392L] Results [4]: [ca_county#64, d_qoy#39, d_year#35, sum#1393L] "
          },
          "2" : {
            "sign" : 1504108178,
            "className" : "org.apache.spark.sql.execution.joins.SortMergeJoinExec",
            "sizeInBytes" : 15963519104,
            "rowCount" : 275233088,
            "isRuntime" : false,
            "predicate" : " (unknown) SortMergeJoin Left keys [1]: [ss_addr_sk#11] Right keys [1]: [ca_address_sk#57] Join type: Inner Join condition: None "
          },
          "3" : {
            "sign" : -108353489,
            "className" : "org.apache.spark.sql.execution.SortExec",
            "sizeInBytes" : -1,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Input [4]: [ss_addr_sk#11, ss_ext_sales_price#20, d_year#35, d_qoy#39] Arguments: [ss_addr_sk#11 ASC NULLS FIRST], false, 0 "
          }
        },
        "links" : [ {
          "fromId" : 4,
          "fromName" : "ShuffleQueryStage",
          "toId" : 3,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Sort",
          "toId" : 2,
          "toName" : "SortMergeJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "ShuffleQueryStage",
          "toId" : 5,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Sort",
          "toId" : 2,
          "toName" : "SortMergeJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "SortMergeJoin",
          "toId" : 1,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Project",
          "toId" : 0,
          "toName" : "HashAggregate",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "HashAggregate(keys=[ca_county#64, d_qoy#39, d_year#35], functions=[partial_sum(UnscaledValue(ss_ext_sales_price#20))], output=[ca_county#64, d_qoy#39, d_year#35, sum#1393L])\n+- Project [ss_ext_sales_price#20, d_year#35, d_qoy#39, ca_county#64]\n   +- SortMergeJoin [ss_addr_sk#11], [ca_address_sk#57], Inner\n      :- Sort [ss_addr_sk#11 ASC NULLS FIRST], false, 0\n      :  +- ShuffleQueryStage 23\n      :     +- Exchange hashpartitioning(ss_addr_sk#11, 200), ENSURE_REQUIREMENTS, [plan_id=2252]\n      :        +- *(16) Project [ss_addr_sk#11, ss_ext_sales_price#20, d_year#35, d_qoy#39]\n      :           +- *(16) BroadcastHashJoin [ss_sold_date_sk#28], [d_date_sk#29], Inner, BuildRight, false\n      :              :- *(16) Filter isnotnull(ss_addr_sk#11)\n      :              :  +- *(16) ColumnarToRow\n      :              :     +- FileScan parquet spark_catalog.tpcds_100.store_sales[ss_addr_sk#11,ss_ext_sales_price#20,ss_sold_date_sk#28] Batched: true, DataFilters: [isnotnull(ss_addr_sk#11)], Format: Parquet, Location: InMemoryFileIndex(1823 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/store_..., PartitionFilters: [isnotnull(ss_sold_date_sk#28), dynamicpruningexpression(ss_sold_date_sk#28 IN dynamicpruning#1384)], PushedFilters: [IsNotNull(ss_addr_sk)], ReadSchema: struct<ss_addr_sk:int,ss_ext_sales_price:decimal(7,2)>\n      :              :           +- SubqueryBroadcast dynamicpruning#1384, 0, [d_date_sk#29], [id=#2226]\n      :              :              +- AdaptiveSparkPlan isFinalPlan=true\n                                       +- == Final Plan ==\n                                          BroadcastQueryStage 1\n                                          +- ReusedExchange [d_date_sk#29, d_year#35, d_qoy#39], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=939]\n                                       +- == Initial Plan ==\n                                          BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=2223]\n                                          +- Filter ((((isnotnull(d_qoy#39) AND isnotnull(d_year#35)) AND (d_qoy#39 = 1)) AND (d_year#35 = 2000)) AND isnotnull(d_date_sk#29))\n                                             +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#29,d_year#35,d_qoy#39] Batched: true, DataFilters: [isnotnull(d_qoy#39), isnotnull(d_year#35), (d_qoy#39 = 1), (d_year#35 = 2000), isnotnull(d_date_..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_qoy), IsNotNull(d_year), EqualTo(d_qoy,1), EqualTo(d_year,2000), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int,d_qoy:int>\n      :              +- BroadcastQueryStage 5\n      :                 +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=939]\n      :                    +- *(5) Filter ((((isnotnull(d_qoy#39) AND isnotnull(d_year#35)) AND (d_qoy#39 = 1)) AND (d_year#35 = 2000)) AND isnotnull(d_date_sk#29))\n      :                       +- *(5) ColumnarToRow\n      :                          +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#29,d_year#35,d_qoy#39] Batched: true, DataFilters: [isnotnull(d_qoy#39), isnotnull(d_year#35), (d_qoy#39 = 1), (d_year#35 = 2000), isnotnull(d_date_..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_qoy), IsNotNull(d_year), EqualTo(d_qoy,1), EqualTo(d_year,2000), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int,d_qoy:int>\n      +- Sort [ca_address_sk#57 ASC NULLS FIRST], false, 0\n         +- ShuffleQueryStage 7\n            +- ReusedExchange [ca_address_sk#57, ca_county#64], Exchange hashpartitioning(ca_address_sk#1151, 200), ENSURE_REQUIREMENTS, [plan_id=871]\n"
      },
      "IM" : {
        "inputSizeInBytes" : 368505928,
        "inputRowCount" : 9191569
      },
      "InitialPartitionNum" : 200,
      "PD" : {
        "4" : [ 390538, 367918, 379507, 381524, 374956, 372515, 373330, 381419, 363083, 377143, 380408, 372906, 386244, 379689, 358025, 362668, 375630, 379584, 381804, 371852, 369376, 390905, 372515, 372318, 386465, 369656, 371596, 382952, 379083, 371749, 387963, 373969, 368278, 371172, 386465, 369453, 372939, 375851, 370080, 382449, 366935, 365622, 359144, 376334, 370591, 367258, 394199, 371673, 373748, 362227, 375231, 380774, 362024, 384024, 369245, 375126, 387760, 371110, 374317, 372906, 374422, 371876, 374096, 380647, 371952, 381198, 375329, 363199, 382007, 378188, 367228, 362936, 379787, 374923, 377397, 354406, 384934, 387375, 387876, 382069, 360660, 371876, 382917, 359183, 380273, 364229, 370822, 366043, 372202, 370922, 368702, 385964, 367715, 362030, 372906, 391347, 369155, 371331, 360834, 381786, 365474, 373052, 369453, 381524, 364262, 397565, 381216, 382711, 368669, 361479, 373545, 367860, 382007, 374520, 375765, 377985, 363199, 374317, 369982, 369859, 365640, 385435, 388561, 378612, 378978, 392758, 383122, 366201, 361821, 365622, 372718, 392904, 370080, 382228, 372097, 371043, 371952, 371731, 379710, 372703, 381804, 365640, 387510, 377985, 387981, 361182, 389335, 366279, 386876, 384245, 377829, 367968, 388464, 377598, 364868, 371528, 375550, 376310, 380879, 371477, 371889, 381616, 378952, 360072, 378333, 373777, 368466, 378387, 386220, 382007, 381303, 390236, 382290, 378978, 373127, 364029, 380977, 377567, 367088, 379548, 394479, 379402, 374538, 363623, 378862, 371596, 381053, 376257, 375765, 373533, 388155, 378477, 359473, 365640, 368487, 376758, 381565, 367291, 370293, 378206 ],

      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 16,
        "FinishedTasksNum" : 12,
        "FinishedTasksTotalTimeInMs" : 19017.0,
        "FinishedTasksDistributionInMs" : [ 230.0, 996.0, 1337.0, 3264.0, 3541.0 ]
      },
      "QueryStageOptimizationId" : 12,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 18 ],
      "Objectives" : {
        "DurationInMs" : 6115,
        "TotalTasksDurationInMs" : 7918,
        "IOBytes" : {
          "Total" : 87642544,
          "Details" : {
            "IR" : 0,
            "IW" : 0,
            "SR" : 87522370,
            "SW" : 120174
          }
        }
      }
    },
    "8" : {
      "QSLogical" : {
        "operators" : {
          "4" : {
            "sign" : -1030223128,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 14972593792,
                "rowCount" : 71983624
              },
              "compileTime" : {
                "sizeInBytes" : 14972593792,
                "rowCount" : 71983624
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ws_sold_time_sk#70, ws_ship_date_sk#71, ws_item_sk#72, ws_bill_customer_sk#73, ws_bill_cdemo_sk#74, ws_bill_hdemo_sk#75, ws_bill_addr_sk#76, ws_ship_customer_sk#77, ws_ship_cdemo_sk#78, ws_ship_hdemo_sk#79, ws_ship_addr_sk#80, ws_web_page_sk#81, ws_web_site_sk#82, ws_ship_mode_sk#83, ws_warehouse_sk#84, ws_promo_sk#85, ws_order_number#86L, ws_quantity#87, ws_wholesale_cost#88, ws_list_price#89, ws_sales_price#90, ws_ext_discount_amt#91, ws_ext_sales_price#92, ws_ext_wholesale_cost#93, ... 10 more fields], `spark_catalog`.`tpcds_100`.`web_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "1" : {
            "sign" : 1465669071,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 2501841780,
                "rowCount" : 69495605
              },
              "compileTime" : {
                "sizeInBytes" : 2501841780,
                "rowCount" : 69495605
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ws_sold_date_sk#103 = d_date_sk#751) "
          },
          "0" : {
            "sign" : -276231233,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 1945876940,
                "rowCount" : 69495605
              },
              "compileTime" : {
                "sizeInBytes" : 1945876940,
                "rowCount" : 69495605
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_bill_addr_sk#76, ws_ext_sales_price#92, d_year#757, d_qoy#761] "
          },
          "2" : {
            "sign" : 792866324,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 1727172072,
                "rowCount" : 71965503
              },
              "compileTime" : {
                "sizeInBytes" : 1727172072,
                "rowCount" : 71965503
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_bill_addr_sk#76, ws_ext_sales_price#92, ws_sold_date_sk#103] "
          },
          "3" : {
            "sign" : -1138181047,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 14968824624,
                "rowCount" : 71965503
              },
              "compileTime" : {
                "sizeInBytes" : 14968824624,
                "rowCount" : 71965503
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(ws_sold_date_sk#103) AND isnotnull(ws_bill_addr_sk#76)) AND dynamicpruning#1385 [ws_sold_date_sk#103]) "
          }
        },
        "links" : [ {
          "fromId" : 4,
          "fromName" : "LogicalRelation",
          "toId" : 3,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Filter",
          "toId" : 2,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Project",
          "toId" : 1,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Join",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [ws_bill_addr_sk#76, ws_ext_sales_price#92, d_year#757, d_qoy#761]\n+- Join Inner, (ws_sold_date_sk#103 = d_date_sk#751)\n   :- Project [ws_bill_addr_sk#76, ws_ext_sales_price#92, ws_sold_date_sk#103]\n   :  +- Filter ((isnotnull(ws_sold_date_sk#103) AND isnotnull(ws_bill_addr_sk#76)) AND dynamicpruning#1385 [ws_sold_date_sk#103])\n   :     :  +- Project [d_date_sk#751, d_year#757, d_qoy#761]\n   :     :     +- Filter (((isnotnull(d_qoy#761) AND isnotnull(d_year#757)) AND ((d_qoy#761 = 1) AND (d_year#757 = 2000))) AND isnotnull(d_date_sk#751))\n   :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#751,d_date_id#752,d_date#753,d_month_seq#754,d_week_seq#755,d_quarter_seq#756,d_year#757,d_dow#758,d_moy#759,d_dom#760,d_qoy#761,d_fy_year#762,d_fy_quarter_seq#763,d_fy_week_seq#764,d_day_name#765,d_quarter_name#766,d_holiday#767,d_weekend#768,d_following_holiday#769,d_first_dom#770,d_last_dom#771,d_same_day_ly#772,d_same_day_lq#773,d_current_day#774,... 4 more fields] parquet\n   :     +- Relation spark_catalog.tpcds_100.web_sales[ws_sold_time_sk#70,ws_ship_date_sk#71,ws_item_sk#72,ws_bill_customer_sk#73,ws_bill_cdemo_sk#74,ws_bill_hdemo_sk#75,ws_bill_addr_sk#76,ws_ship_customer_sk#77,ws_ship_cdemo_sk#78,ws_ship_hdemo_sk#79,ws_ship_addr_sk#80,ws_web_page_sk#81,ws_web_site_sk#82,ws_ship_mode_sk#83,ws_warehouse_sk#84,ws_promo_sk#85,ws_order_number#86L,ws_quantity#87,ws_wholesale_cost#88,ws_list_price#89,ws_sales_price#90,ws_ext_discount_amt#91,ws_ext_sales_price#92,ws_ext_wholesale_cost#93,... 10 more fields] parquet\n   +- Project [d_date_sk#751, d_year#757, d_qoy#761]\n      +- Filter (((isnotnull(d_qoy#761) AND isnotnull(d_year#757)) AND ((d_qoy#761 = 1) AND (d_year#757 = 2000))) AND isnotnull(d_date_sk#751))\n         +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#751,d_date_id#752,d_date#753,d_month_seq#754,d_week_seq#755,d_quarter_seq#756,d_year#757,d_dow#758,d_moy#759,d_dom#760,d_qoy#761,d_fy_year#762,d_fy_quarter_seq#763,d_fy_week_seq#764,d_day_name#765,d_quarter_name#766,d_holiday#767,d_weekend#768,d_following_holiday#769,d_first_dom#770,d_last_dom#771,d_same_day_ly#772,d_same_day_lq#773,d_current_day#774,... 4 more fields] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "4" : {
            "sign" : -147392744,
            "className" : "org.apache.spark.sql.execution.adaptive.BroadcastQueryStageExec",
            "sizeInBytes" : 1049304,
            "rowCount" : 91,
            "isRuntime" : true,
            "predicate" : " (unknown) BroadcastQueryStage Output [3]: [d_date_sk#751, d_year#757, d_qoy#761] Arguments: 9 "
          },
          "1" : {
            "sign" : -2096035810,
            "className" : "org.apache.spark.sql.execution.joins.BroadcastHashJoinExec",
            "sizeInBytes" : 2501841780,
            "rowCount" : 69495605,
            "isRuntime" : false,
            "predicate" : " (unknown) BroadcastHashJoin Left keys [1]: [ws_sold_date_sk#103] Right keys [1]: [d_date_sk#751] Join type: Inner Join condition: None "
          },
          "0" : {
            "sign" : 1629282100,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 1945876940,
            "rowCount" : 69495605,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [4]: [ws_bill_addr_sk#76, ws_ext_sales_price#92, d_year#757, d_qoy#761] Input [6]: [ws_bill_addr_sk#76, ws_ext_sales_price#92, ws_sold_date_sk#103, d_date_sk#751, d_year#757, d_qoy#761] "
          },
          "2" : {
            "sign" : -1168210747,
            "className" : "org.apache.spark.sql.execution.FilterExec",
            "sizeInBytes" : 1727172072,
            "rowCount" : 71965503,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Input [3]: [ws_bill_addr_sk#76, ws_ext_sales_price#92, ws_sold_date_sk#103] Condition : isnotnull(ws_bill_addr_sk#76) "
          },
          "3" : {
            "sign" : 1345977445,
            "className" : "org.apache.spark.sql.execution.FileSourceScanExec",
            "sizeInBytes" : 1727172072,
            "rowCount" : 71965503,
            "isRuntime" : false,
            "predicate" : " (unknown) Scan parquet spark_catalog.tpcds_100.web_sales Output [3]: [ws_bill_addr_sk#76, ws_ext_sales_price#92, ws_sold_date_sk#103] Batched: true Location: InMemoryFileIndex [hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/web_sales/ws_sold_date_sk=2450816, ... 1822 entries] PartitionFilters: [isnotnull(ws_sold_date_sk#103), dynamicpruningexpression(ws_sold_date_sk#103 IN dynamicpruning#1384)] PushedFilters: [IsNotNull(ws_bill_addr_sk)] ReadSchema: struct<ws_bill_addr_sk:int,ws_ext_sales_price:decimal(7,2)> "
          }
        },
        "links" : [ {
          "fromId" : 3,
          "fromName" : "Scan parquet spark_catalog.tpcds_100.web_sales",
          "toId" : 2,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Filter",
          "toId" : 1,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "BroadcastQueryStage",
          "toId" : 1,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "BroadcastHashJoin",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [ws_bill_addr_sk#76, ws_ext_sales_price#92, d_year#757, d_qoy#761]\n+- BroadcastHashJoin [ws_sold_date_sk#103], [d_date_sk#751], Inner, BuildRight, false\n   :- Filter isnotnull(ws_bill_addr_sk#76)\n   :  +- FileScan parquet spark_catalog.tpcds_100.web_sales[ws_bill_addr_sk#76,ws_ext_sales_price#92,ws_sold_date_sk#103] Batched: true, DataFilters: [isnotnull(ws_bill_addr_sk#76)], Format: Parquet, Location: InMemoryFileIndex(1823 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/web_sa..., PartitionFilters: [isnotnull(ws_sold_date_sk#103), dynamicpruningexpression(ws_sold_date_sk#103 IN dynamicpruning#1..., PushedFilters: [IsNotNull(ws_bill_addr_sk)], ReadSchema: struct<ws_bill_addr_sk:int,ws_ext_sales_price:decimal(7,2)>\n   :        +- ReusedSubquery SubqueryBroadcast dynamicpruning#1384, 0, [d_date_sk#29], [id=#2226]\n   +- BroadcastQueryStage 9\n      +- ReusedExchange [d_date_sk#751, d_year#757, d_qoy#761], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=939]\n"
      },
      "IM" : {
        "inputSizeInBytes" : 1728221376,
        "inputRowCount" : 71965594
      },
      "InitialPartitionNum" : 0,
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 16,
        "FinishedTasksNum" : 4,
        "FinishedTasksTotalTimeInMs" : 6018.0,
        "FinishedTasksDistributionInMs" : [ 1392.0, 1426.0, 1566.0, 1634.0, 1634.0 ]
      },
      "QueryStageOptimizationId" : 8,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 10 ],
      "Objectives" : {
        "DurationInMs" : 5774,
        "TotalTasksDurationInMs" : 6028,
        "IOBytes" : {
          "Total" : 30532424,
          "Details" : {
            "IR" : 11481986,
            "IW" : 0,
            "SR" : 0,
            "SW" : 19050438
          }
        }
      }
    },
    "19" : {
      "QSLogical" : {
        "operators" : {
          "0" : {
            "sign" : -1108439567,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 316176,
                "rowCount" : 5538
              },
              "compileTime" : {
                "sizeInBytes" : 79758,
                "rowCount" : 1899
              }
            },
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [ca_county#1223, d_qoy#1198, d_year#1194], [ca_county#1223, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#1179)),17,2) AS store_sales#803], HashAggregate(keys=[ca_county#1223, d_qoy#1198, d_year#1194], functions=[sum(UnscaledValue(ss_ext_sales_price#1179))]) "
          }
        },
        "links" : [ ],
        "rawPlan" : "LogicalQueryStage Aggregate [ca_county#1223, d_qoy#1198, d_year#1194], [ca_county#1223, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#1179)),17,2) AS store_sales#803], HashAggregate(keys=[ca_county#1223, d_qoy#1198, d_year#1194], functions=[sum(UnscaledValue(ss_ext_sales_price#1179))])\n"
      },
      "QSPhysical" : {
        "operators" : {
          "0" : {
            "sign" : -644332993,
            "className" : "org.apache.spark.sql.execution.aggregate.HashAggregateExec",
            "sizeInBytes" : 316176,
            "rowCount" : 5538,
            "isRuntime" : true,
            "predicate" : " (unknown) HashAggregate Input [4]: [ca_county#1223, d_qoy#1198, d_year#1194, sum#1391L] Keys [3]: [ca_county#1223, d_qoy#1198, d_year#1194] Functions [1]: [sum(UnscaledValue(ss_ext_sales_price#1179))] Aggregate Attributes [1]: [sum(UnscaledValue(ss_ext_sales_price#1179))#792L] Results [2]: [ca_county#1223, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#1179))#792L,17,2) AS store_sales#803] "
          },
          "1" : {
            "sign" : 748355377,
            "className" : "org.apache.spark.sql.execution.adaptive.ShuffleQueryStageExec",
            "sizeInBytes" : 79758,
            "rowCount" : 1899,
            "isRuntime" : false,
            "predicate" : " (unknown) ShuffleQueryStage Output [4]: [ca_county#1223, d_qoy#1198, d_year#1194, sum#1391L] Arguments: 29 "
          }
        },
        "links" : [ {
          "fromId" : 1,
          "fromName" : "ShuffleQueryStage",
          "toId" : 0,
          "toName" : "HashAggregate",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "HashAggregate(keys=[ca_county#1223, d_qoy#1198, d_year#1194], functions=[sum(UnscaledValue(ss_ext_sales_price#1179))], output=[ca_county#1223, store_sales#803])\n+- ShuffleQueryStage 29\n   +- Exchange hashpartitioning(ca_county#1223, d_qoy#1198, d_year#1194, 200), ENSURE_REQUIREMENTS, [plan_id=3835]\n      +- *(30) HashAggregate(keys=[ca_county#1223, d_qoy#1198, d_year#1194], functions=[partial_sum(UnscaledValue(ss_ext_sales_price#1179))], output=[ca_county#1223, d_qoy#1198, d_year#1194, sum#1391L])\n         +- *(30) Project [ss_ext_sales_price#1179, d_year#1194, d_qoy#1198, ca_county#1223]\n            +- *(30) SortMergeJoin [ss_addr_sk#1170], [ca_address_sk#1216], Inner\n               :- *(28) Sort [ss_addr_sk#1170 ASC NULLS FIRST], false, 0\n               :  +- AQEShuffleRead coalesced\n               :     +- ShuffleQueryStage 20\n               :        +- Exchange hashpartitioning(ss_addr_sk#1170, 200), ENSURE_REQUIREMENTS, [plan_id=1687]\n               :           +- *(13) Project [ss_addr_sk#1170, ss_ext_sales_price#1179, d_year#1194, d_qoy#1198]\n               :              +- *(13) BroadcastHashJoin [ss_sold_date_sk#1187], [d_date_sk#1188], Inner, BuildRight, false\n               :                 :- *(13) Filter isnotnull(ss_addr_sk#1170)\n               :                 :  +- *(13) ColumnarToRow\n               :                 :     +- FileScan parquet spark_catalog.tpcds_100.store_sales[ss_addr_sk#1170,ss_ext_sales_price#1179,ss_sold_date_sk#1187] Batched: true, DataFilters: [isnotnull(ss_addr_sk#1170)], Format: Parquet, Location: InMemoryFileIndex(1823 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/store_..., PartitionFilters: [isnotnull(ss_sold_date_sk#1187), dynamicpruningexpression(ss_sold_date_sk#1187 IN dynamicpruning..., PushedFilters: [IsNotNull(ss_addr_sk)], ReadSchema: struct<ss_addr_sk:int,ss_ext_sales_price:decimal(7,2)>\n               :                 :           +- SubqueryBroadcast dynamicpruning#1383, 0, [d_date_sk#1188], [id=#1661]\n               :                 :              +- AdaptiveSparkPlan isFinalPlan=true\n                                                   +- == Final Plan ==\n                                                      BroadcastQueryStage 1\n                                                      +- ReusedExchange [d_date_sk#1188, d_year#1194, d_qoy#1198], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=893]\n                                                   +- == Initial Plan ==\n                                                      BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=1658]\n                                                      +- Filter ((((isnotnull(d_qoy#1198) AND isnotnull(d_year#1194)) AND (d_qoy#1198 = 3)) AND (d_year#1194 = 2000)) AND isnotnull(d_date_sk#1188))\n                                                         +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#1188,d_year#1194,d_qoy#1198] Batched: true, DataFilters: [isnotnull(d_qoy#1198), isnotnull(d_year#1194), (d_qoy#1198 = 3), (d_year#1194 = 2000), isnotnull..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_qoy), IsNotNull(d_year), EqualTo(d_qoy,3), EqualTo(d_year,2000), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int,d_qoy:int>\n               :                 +- BroadcastQueryStage 2\n               :                    +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=893]\n               :                       +- *(3) Filter ((((isnotnull(d_qoy#1198) AND isnotnull(d_year#1194)) AND (d_qoy#1198 = 3)) AND (d_year#1194 = 2000)) AND isnotnull(d_date_sk#1188))\n               :                          +- *(3) ColumnarToRow\n               :                             +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#1188,d_year#1194,d_qoy#1198] Batched: true, DataFilters: [isnotnull(d_qoy#1198), isnotnull(d_year#1194), (d_qoy#1198 = 3), (d_year#1194 = 2000), isnotnull..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_qoy), IsNotNull(d_year), EqualTo(d_qoy,3), EqualTo(d_year,2000), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int,d_qoy:int>\n               +- *(29) Sort [ca_address_sk#1216 ASC NULLS FIRST], false, 0\n                  +- AQEShuffleRead coalesced\n                     +- ShuffleQueryStage 4\n                        +- ReusedExchange [ca_address_sk#1216, ca_county#1223], Exchange hashpartitioning(ca_address_sk#1151, 200), ENSURE_REQUIREMENTS, [plan_id=871]\n"
      },
      "IM" : {
        "inputSizeInBytes" : 316176,
        "inputRowCount" : 5538
      },
      "InitialPartitionNum" : 200,
      "PD" : {
        "10" : [ 684, 1002, 828, 730, 778, 753, 828, 1335, 1104, 828, 912, 828, 684, 912, 684, 828, 468, 1141, 642, 1215, 1002, 663, 1215, 912, 1470, 1104, 1215, 1295, 753, 972, 1104, 912, 912, 684, 1141, 1141, 803, 1335, 684, 684, 972, 912, 828, 1070, 884, 912, 1002, 1104, 1104, 803, 828, 912, 828, 912, 856, 1141, 1470, 972, 1178, 684, 1070, 1002, 972, 828, 1036, 753, 753, 828, 513, 1470, 778, 1215, 778, 1002, 1002, 1295, 753, 828, 1470, 1104, 1070, 972, 730, 1104, 856, 1104, 1104, 753, 1002, 828, 972, 778, 1104, 1002, 1215, 1617, 778, 828, 753, 803, 884, 828, 621, 1104, 1335, 1215, 912, 942, 884, 912, 912, 684, 1255, 1215, 753, 753, 684, 603, 1215, 884, 1617, 1002, 1141, 912, 1215, 884, 1070, 828, 1104, 828, 1104, 603, 567, 972, 1104, 1104, 753, 513, 942, 1002, 828, 1470, 828, 730, 1215, 753, 828, 856, 884, 684, 972, 942, 753, 1036, 1002, 753, 828, 753, 567, 912, 1215, 828, 912, 753, 730, 642, 1104, 567, 1036, 387, 1036, 753, 912, 1470, 1070, 828, 912, 912, 1070, 684, 684, 884, 778, 912, 1295, 1002, 828, 1255, 1335, 1002, 1215, 912, 1002, 1335, 753, 1002, 856, 1002, 753, 1141 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 2,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 19,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 36 ],
      "Objectives" : {
        "DurationInMs" : 95,
        "TotalTasksDurationInMs" : 90,
        "IOBytes" : {
          "Total" : 179666,
          "Details" : {
            "IR" : 0,
            "IW" : 0,
            "SR" : 179666,
            "SW" : 0
          }
        }
      }
    },
    "4" : {
      "QSLogical" : {
        "operators" : {
          "4" : {
            "sign" : 769089332,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 41806893656,
                "rowCount" : 275045353
              },
              "compileTime" : {
                "sizeInBytes" : 41806893656,
                "rowCount" : 275045353
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#1165, ss_item_sk#1166, ss_customer_sk#1167, ss_cdemo_sk#1168, ss_hdemo_sk#1169, ss_addr_sk#1170, ss_store_sk#1171, ss_promo_sk#1172, ss_ticket_number#1173L, ss_quantity#1174, ss_wholesale_cost#1175, ss_list_price#1176, ss_sales_price#1177, ss_ext_discount_amt#1178, ss_ext_sales_price#1179, ss_ext_wholesale_cost#1180, ss_ext_list_price#1181, ss_ext_tax#1182, ss_coupon_amt#1183, ss_net_paid#1184, ss_net_paid_inc_tax#1185, ss_net_profit#1186, ss_sold_date_sk#1187], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "1" : {
            "sign" : -335713911,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 9559461060,
                "rowCount" : 265540585
              },
              "compileTime" : {
                "sizeInBytes" : 9559461060,
                "rowCount" : 265540585
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#1187 = d_date_sk#1188) "
          },
          "0" : {
            "sign" : -1012325073,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 7435136380,
                "rowCount" : 265540585
              },
              "compileTime" : {
                "sizeInBytes" : 7435136380,
                "rowCount" : 265540585
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_addr_sk#1170, ss_ext_sales_price#1179, d_year#1194, d_qoy#1198] "
          },
          "2" : {
            "sign" : -1118856085,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 6304008672,
                "rowCount" : 262667028
              },
              "compileTime" : {
                "sizeInBytes" : 6304008672,
                "rowCount" : 262667028
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_addr_sk#1170, ss_ext_sales_price#1179, ss_sold_date_sk#1187] "
          },
          "3" : {
            "sign" : 380670726,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 39925388256,
                "rowCount" : 262667028
              },
              "compileTime" : {
                "sizeInBytes" : 39925388256,
                "rowCount" : 262667028
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(ss_sold_date_sk#1187) AND isnotnull(ss_addr_sk#1170)) AND dynamicpruning#1383 [ss_sold_date_sk#1187]) "
          }
        },
        "links" : [ {
          "fromId" : 4,
          "fromName" : "LogicalRelation",
          "toId" : 3,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Filter",
          "toId" : 2,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Project",
          "toId" : 1,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Join",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [ss_addr_sk#1170, ss_ext_sales_price#1179, d_year#1194, d_qoy#1198]\n+- Join Inner, (ss_sold_date_sk#1187 = d_date_sk#1188)\n   :- Project [ss_addr_sk#1170, ss_ext_sales_price#1179, ss_sold_date_sk#1187]\n   :  +- Filter ((isnotnull(ss_sold_date_sk#1187) AND isnotnull(ss_addr_sk#1170)) AND dynamicpruning#1383 [ss_sold_date_sk#1187])\n   :     :  +- Project [d_date_sk#1188, d_year#1194, d_qoy#1198]\n   :     :     +- Filter (((isnotnull(d_qoy#1198) AND isnotnull(d_year#1194)) AND ((d_qoy#1198 = 3) AND (d_year#1194 = 2000))) AND isnotnull(d_date_sk#1188))\n   :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#1188,d_date_id#1189,d_date#1190,d_month_seq#1191,d_week_seq#1192,d_quarter_seq#1193,d_year#1194,d_dow#1195,d_moy#1196,d_dom#1197,d_qoy#1198,d_fy_year#1199,d_fy_quarter_seq#1200,d_fy_week_seq#1201,d_day_name#1202,d_quarter_name#1203,d_holiday#1204,d_weekend#1205,d_following_holiday#1206,d_first_dom#1207,d_last_dom#1208,d_same_day_ly#1209,d_same_day_lq#1210,d_current_day#1211,... 4 more fields] parquet\n   :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#1165,ss_item_sk#1166,ss_customer_sk#1167,ss_cdemo_sk#1168,ss_hdemo_sk#1169,ss_addr_sk#1170,ss_store_sk#1171,ss_promo_sk#1172,ss_ticket_number#1173L,ss_quantity#1174,ss_wholesale_cost#1175,ss_list_price#1176,ss_sales_price#1177,ss_ext_discount_amt#1178,ss_ext_sales_price#1179,ss_ext_wholesale_cost#1180,ss_ext_list_price#1181,ss_ext_tax#1182,ss_coupon_amt#1183,ss_net_paid#1184,ss_net_paid_inc_tax#1185,ss_net_profit#1186,ss_sold_date_sk#1187] parquet\n   +- Project [d_date_sk#1188, d_year#1194, d_qoy#1198]\n      +- Filter (((isnotnull(d_qoy#1198) AND isnotnull(d_year#1194)) AND ((d_qoy#1198 = 3) AND (d_year#1194 = 2000))) AND isnotnull(d_date_sk#1188))\n         +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#1188,d_date_id#1189,d_date#1190,d_month_seq#1191,d_week_seq#1192,d_quarter_seq#1193,d_year#1194,d_dow#1195,d_moy#1196,d_dom#1197,d_qoy#1198,d_fy_year#1199,d_fy_quarter_seq#1200,d_fy_week_seq#1201,d_day_name#1202,d_quarter_name#1203,d_holiday#1204,d_weekend#1205,d_following_holiday#1206,d_first_dom#1207,d_last_dom#1208,d_same_day_ly#1209,d_same_day_lq#1210,d_current_day#1211,... 4 more fields] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "4" : {
            "sign" : 1672887536,
            "className" : "org.apache.spark.sql.execution.adaptive.BroadcastQueryStageExec",
            "sizeInBytes" : 1049312,
            "rowCount" : 92,
            "isRuntime" : true,
            "predicate" : " (unknown) BroadcastQueryStage Output [3]: [d_date_sk#1188, d_year#1194, d_qoy#1198] Arguments: 2 "
          },
          "1" : {
            "sign" : -1288237660,
            "className" : "org.apache.spark.sql.execution.joins.BroadcastHashJoinExec",
            "sizeInBytes" : 9559461060,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) BroadcastHashJoin Left keys [1]: [ss_sold_date_sk#1187] Right keys [1]: [d_date_sk#1188] Join type: Inner Join condition: None "
          },
          "0" : {
            "sign" : 1776894118,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 7435136380,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [4]: [ss_addr_sk#1170, ss_ext_sales_price#1179, d_year#1194, d_qoy#1198] Input [6]: [ss_addr_sk#1170, ss_ext_sales_price#1179, ss_sold_date_sk#1187, d_date_sk#1188, d_year#1194, d_qoy#1198] "
          },
          "2" : {
            "sign" : -1354545615,
            "className" : "org.apache.spark.sql.execution.FilterExec",
            "sizeInBytes" : 6304008672,
            "rowCount" : 262667028,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Input [3]: [ss_addr_sk#1170, ss_ext_sales_price#1179, ss_sold_date_sk#1187] Condition : isnotnull(ss_addr_sk#1170) "
          },
          "3" : {
            "sign" : -1732285751,
            "className" : "org.apache.spark.sql.execution.FileSourceScanExec",
            "sizeInBytes" : 6304008672,
            "rowCount" : 262667028,
            "isRuntime" : false,
            "predicate" : " (unknown) Scan parquet spark_catalog.tpcds_100.store_sales Output [3]: [ss_addr_sk#1170, ss_ext_sales_price#1179, ss_sold_date_sk#1187] Batched: true Location: InMemoryFileIndex [hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/store_sales/ss_sold_date_sk=2450816, ... 1822 entries] PartitionFilters: [isnotnull(ss_sold_date_sk#1187), dynamicpruningexpression(ss_sold_date_sk#1187 IN dynamicpruning#1383)] PushedFilters: [IsNotNull(ss_addr_sk)] ReadSchema: struct<ss_addr_sk:int,ss_ext_sales_price:decimal(7,2)> "
          }
        },
        "links" : [ {
          "fromId" : 3,
          "fromName" : "Scan parquet spark_catalog.tpcds_100.store_sales",
          "toId" : 2,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Filter",
          "toId" : 1,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "BroadcastQueryStage",
          "toId" : 1,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "BroadcastHashJoin",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [ss_addr_sk#1170, ss_ext_sales_price#1179, d_year#1194, d_qoy#1198]\n+- BroadcastHashJoin [ss_sold_date_sk#1187], [d_date_sk#1188], Inner, BuildRight, false\n   :- Filter isnotnull(ss_addr_sk#1170)\n   :  +- FileScan parquet spark_catalog.tpcds_100.store_sales[ss_addr_sk#1170,ss_ext_sales_price#1179,ss_sold_date_sk#1187] Batched: true, DataFilters: [isnotnull(ss_addr_sk#1170)], Format: Parquet, Location: InMemoryFileIndex(1823 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/store_..., PartitionFilters: [isnotnull(ss_sold_date_sk#1187), dynamicpruningexpression(ss_sold_date_sk#1187 IN dynamicpruning..., PushedFilters: [IsNotNull(ss_addr_sk)], ReadSchema: struct<ss_addr_sk:int,ss_ext_sales_price:decimal(7,2)>\n   :        +- SubqueryBroadcast dynamicpruning#1383, 0, [d_date_sk#1188], [id=#1661]\n   :           +- AdaptiveSparkPlan isFinalPlan=false\n   :              +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=1658]\n   :                 +- Filter ((((isnotnull(d_qoy#1198) AND isnotnull(d_year#1194)) AND (d_qoy#1198 = 3)) AND (d_year#1194 = 2000)) AND isnotnull(d_date_sk#1188))\n   :                    +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#1188,d_year#1194,d_qoy#1198] Batched: true, DataFilters: [isnotnull(d_qoy#1198), isnotnull(d_year#1194), (d_qoy#1198 = 3), (d_year#1194 = 2000), isnotnull..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_qoy), IsNotNull(d_year), EqualTo(d_qoy,3), EqualTo(d_year,2000), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int,d_qoy:int>\n   +- BroadcastQueryStage 2\n      +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=893]\n         +- *(3) Filter ((((isnotnull(d_qoy#1198) AND isnotnull(d_year#1194)) AND (d_qoy#1198 = 3)) AND (d_year#1194 = 2000)) AND isnotnull(d_date_sk#1188))\n            +- *(3) ColumnarToRow\n               +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#1188,d_year#1194,d_qoy#1198] Batched: true, DataFilters: [isnotnull(d_qoy#1198), isnotnull(d_year#1194), (d_qoy#1198 = 3), (d_year#1194 = 2000), isnotnull..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_qoy), IsNotNull(d_year), EqualTo(d_qoy,3), EqualTo(d_year,2000), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int,d_qoy:int>\n"
      },
      "IM" : {
        "inputSizeInBytes" : 6305057984,
        "inputRowCount" : 262667120
      },
      "InitialPartitionNum" : 0,
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 3,
        "FinishedTasksNum" : 4,
        "FinishedTasksTotalTimeInMs" : 6018.0,
        "FinishedTasksDistributionInMs" : [ 1392.0, 1426.0, 1566.0, 1634.0, 1634.0 ]
      },
      "QueryStageOptimizationId" : 4,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 6 ],
      "Objectives" : {
        "DurationInMs" : 4938,
        "TotalTasksDurationInMs" : 47138,
        "IOBytes" : {
          "Total" : 194090506,
          "Details" : {
            "IR" : 69856243,
            "IW" : 0,
            "SR" : 0,
            "SW" : 124234263
          }
        }
      }
    },
    "15" : {
      "QSLogical" : {
        "operators" : {
          "4" : {
            "sign" : 2142456221,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 39644968,
                "rowCount" : 970045
              },
              "compileTime" : {
                "sizeInBytes" : 36861710,
                "rowCount" : 970045
              }
            },
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ca_address_sk#1292, ca_county#1299], ShuffleQueryStage 15 "
          },
          "1" : {
            "sign" : -1760044743,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 88398051230280,
                "rowCount" : 2009046618870
              },
              "compileTime" : {
                "sizeInBytes" : 88398051230280,
                "rowCount" : 2009046618870
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_ext_sales_price#1252, d_year#1270, d_qoy#1274, ca_county#1299] "
          },
          "0" : {
            "sign" : 1861053396,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 72325678279320,
                "rowCount" : -1
              },
              "compileTime" : {
                "sizeInBytes" : 72325678279320,
                "rowCount" : -1
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [ca_county#1299, d_qoy#1274, d_year#1270], [ca_county#1299, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#1252)),17,2) AS web_sales#807] "
          },
          "2" : {
            "sign" : 610900609,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 104470424181240,
                "rowCount" : 2009046618870
              },
              "compileTime" : {
                "sizeInBytes" : 104470424181240,
                "rowCount" : 2009046618870
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ws_bill_addr_sk#1236 = ca_address_sk#1292) "
          },
          "3" : {
            "sign" : 919213756,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 82843440,
                "rowCount" : 2071086
              },
              "compileTime" : {
                "sizeInBytes" : 1945876940,
                "rowCount" : 69495605
              }
            },
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ws_bill_addr_sk#1236, ws_ext_sales_price#1252, d_year#1270, d_qoy#1274], ShuffleQueryStage 25 "
          }
        },
        "links" : [ {
          "fromId" : 3,
          "fromName" : "LogicalQueryStage",
          "toId" : 2,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "LogicalQueryStage",
          "toId" : 2,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Join",
          "toId" : 1,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Project",
          "toId" : 0,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Aggregate [ca_county#1299, d_qoy#1274, d_year#1270], [ca_county#1299, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#1252)),17,2) AS web_sales#807]\n+- Project [ws_ext_sales_price#1252, d_year#1270, d_qoy#1274, ca_county#1299]\n   +- Join Inner, (ws_bill_addr_sk#1236 = ca_address_sk#1292)\n      :- LogicalQueryStage Project [ws_bill_addr_sk#1236, ws_ext_sales_price#1252, d_year#1270, d_qoy#1274], ShuffleQueryStage 25\n      +- LogicalQueryStage Project [ca_address_sk#1292, ca_county#1299], ShuffleQueryStage 15\n"
      },
      "QSPhysical" : {
        "operators" : {
          "4" : {
            "sign" : 1313149165,
            "className" : "org.apache.spark.sql.execution.adaptive.ShuffleQueryStageExec",
            "sizeInBytes" : 82843440,
            "rowCount" : 2071086,
            "isRuntime" : true,
            "predicate" : " (unknown) ShuffleQueryStage Output [4]: [ws_bill_addr_sk#1236, ws_ext_sales_price#1252, d_year#1270, d_qoy#1274] Arguments: 25 "
          },
          "5" : {
            "sign" : 1266508565,
            "className" : "org.apache.spark.sql.execution.SortExec",
            "sizeInBytes" : -1,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Input [2]: [ca_address_sk#1292, ca_county#1299] Arguments: [ca_address_sk#1292 ASC NULLS FIRST], false, 0 "
          },
          "6" : {
            "sign" : -335280854,
            "className" : "org.apache.spark.sql.execution.adaptive.ShuffleQueryStageExec",
            "sizeInBytes" : 39644968,
            "rowCount" : 970045,
            "isRuntime" : true,
            "predicate" : " (unknown) ShuffleQueryStage Output [2]: [ca_address_sk#1292, ca_county#1299] Arguments: 15 "
          },
          "1" : {
            "sign" : -1206781900,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 88398051230280,
            "rowCount" : 2009046618870,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [4]: [ws_ext_sales_price#1252, d_year#1270, d_qoy#1274, ca_county#1299] Input [6]: [ws_bill_addr_sk#1236, ws_ext_sales_price#1252, d_year#1270, d_qoy#1274, ca_address_sk#1292, ca_county#1299] "
          },
          "0" : {
            "sign" : -64053996,
            "className" : "org.apache.spark.sql.execution.aggregate.HashAggregateExec",
            "sizeInBytes" : 72325678279320,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) HashAggregate Input [4]: [ws_ext_sales_price#1252, d_year#1270, d_qoy#1274, ca_county#1299] Keys [3]: [ca_county#1299, d_qoy#1274, d_year#1270] Functions [1]: [partial_sum(UnscaledValue(ws_ext_sales_price#1252))] Aggregate Attributes [1]: [sum#1396L] Results [4]: [ca_county#1299, d_qoy#1274, d_year#1270, sum#1397L] "
          },
          "2" : {
            "sign" : -268744046,
            "className" : "org.apache.spark.sql.execution.joins.SortMergeJoinExec",
            "sizeInBytes" : 104470424181240,
            "rowCount" : 2009046618870,
            "isRuntime" : false,
            "predicate" : " (unknown) SortMergeJoin Left keys [1]: [ws_bill_addr_sk#1236] Right keys [1]: [ca_address_sk#1292] Join type: Inner Join condition: None "
          },
          "3" : {
            "sign" : 1396847877,
            "className" : "org.apache.spark.sql.execution.SortExec",
            "sizeInBytes" : -1,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Input [4]: [ws_bill_addr_sk#1236, ws_ext_sales_price#1252, d_year#1270, d_qoy#1274] Arguments: [ws_bill_addr_sk#1236 ASC NULLS FIRST], false, 0 "
          }
        },
        "links" : [ {
          "fromId" : 4,
          "fromName" : "ShuffleQueryStage",
          "toId" : 3,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Sort",
          "toId" : 2,
          "toName" : "SortMergeJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "ShuffleQueryStage",
          "toId" : 5,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Sort",
          "toId" : 2,
          "toName" : "SortMergeJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "SortMergeJoin",
          "toId" : 1,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Project",
          "toId" : 0,
          "toName" : "HashAggregate",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "HashAggregate(keys=[ca_county#1299, d_qoy#1274, d_year#1270], functions=[partial_sum(UnscaledValue(ws_ext_sales_price#1252))], output=[ca_county#1299, d_qoy#1274, d_year#1270, sum#1397L])\n+- Project [ws_ext_sales_price#1252, d_year#1270, d_qoy#1274, ca_county#1299]\n   +- SortMergeJoin [ws_bill_addr_sk#1236], [ca_address_sk#1292], Inner\n      :- Sort [ws_bill_addr_sk#1236 ASC NULLS FIRST], false, 0\n      :  +- ShuffleQueryStage 25\n      :     +- Exchange hashpartitioning(ws_bill_addr_sk#1236, 200), ENSURE_REQUIREMENTS, [plan_id=2363]\n      :        +- *(18) Project [ws_bill_addr_sk#1236, ws_ext_sales_price#1252, d_year#1270, d_qoy#1274]\n      :           +- *(18) BroadcastHashJoin [ws_sold_date_sk#1263], [d_date_sk#1264], Inner, BuildRight, false\n      :              :- *(18) Filter isnotnull(ws_bill_addr_sk#1236)\n      :              :  +- *(18) ColumnarToRow\n      :              :     +- FileScan parquet spark_catalog.tpcds_100.web_sales[ws_bill_addr_sk#1236,ws_ext_sales_price#1252,ws_sold_date_sk#1263] Batched: true, DataFilters: [isnotnull(ws_bill_addr_sk#1236)], Format: Parquet, Location: InMemoryFileIndex(1823 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/web_sa..., PartitionFilters: [isnotnull(ws_sold_date_sk#1263), dynamicpruningexpression(ws_sold_date_sk#1263 IN dynamicpruning..., PushedFilters: [IsNotNull(ws_bill_addr_sk)], ReadSchema: struct<ws_bill_addr_sk:int,ws_ext_sales_price:decimal(7,2)>\n      :              :           +- ReusedSubquery SubqueryBroadcast dynamicpruning#1382, 0, [d_date_sk#1123], [id=#2175]\n      :              +- BroadcastQueryStage 13\n      :                 +- ReusedExchange [d_date_sk#1264, d_year#1270, d_qoy#1274], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=852]\n      +- Sort [ca_address_sk#1292 ASC NULLS FIRST], false, 0\n         +- ShuffleQueryStage 15\n            +- ReusedExchange [ca_address_sk#1292, ca_county#1299], Exchange hashpartitioning(ca_address_sk#1151, 200), ENSURE_REQUIREMENTS, [plan_id=871]\n"
      },
      "IM" : {
        "inputSizeInBytes" : 122488408,
        "inputRowCount" : 3041131
      },
      "InitialPartitionNum" : 200,
      "PD" : {
        "6" : [ 98805, 88816, 91643, 90356, 90928, 91800, 90479, 89662, 91121, 94827, 92349, 88026, 99371, 98429, 89964, 95490, 93294, 94005, 94330, 99688, 97315, 99344, 94758, 96129, 95566, 96356, 95149, 93851, 97244, 94273, 91327, 97334, 95104, 92341, 91915, 98759, 94291, 87481, 89741, 90077, 89801, 94549, 93015, 99501, 91860, 94410, 90200, 96009, 95417, 88302, 93617, 98023, 91380, 90287, 96084, 94791, 90498, 92159, 93324, 85833, 97007, 104155, 90913, 98082, 92538, 91809, 84427, 90437, 91621, 103456, 94568, 94034, 98492, 91852, 95648, 95661, 96597, 90165, 98679, 94154, 87231, 98585, 98551, 88193, 95161, 95296, 92651, 96602, 95311, 92417, 90012, 93340, 97194, 95818, 92864, 94270, 91017, 91173, 106589, 90965, 91652, 98427, 98550, 88824, 96239, 97704, 95059, 90480, 90539, 92396, 92634, 87575, 92157, 89285, 89531, 92679, 88951, 91939, 86541, 95936, 88288, 95053, 94558, 98743, 98376, 94961, 97605, 89260, 97410, 91715, 91318, 94629, 90212, 95765, 97857, 89953, 92177, 89968, 88681, 98834, 85916, 91155, 93772, 90122, 98575, 90150, 88758, 91814, 94060, 95270, 94461, 92812, 99368, 101443, 93432, 97421, 92810, 95862, 94835, 92656, 96101, 93808, 95400, 89346, 96895, 88674, 98429, 95706, 99876, 89241, 93102, 91880, 91537, 91127, 92101, 95839, 91977, 90743, 91477, 94807, 97054, 92620, 92803, 96768, 103003, 96708, 97512, 95853, 92767, 92247, 91873, 94661, 85377, 92699, 92573, 89857, 89117, 101071, 92507, 100159 ],

      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 9,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 15,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 24 ],
      "Objectives" : {
        "DurationInMs" : 3385,
        "TotalTasksDurationInMs" : 3378,
        "IOBytes" : {
          "Total" : 33908878,
          "Details" : {
            "IR" : 0,
            "IW" : 0,
            "SR" : 33849075,
            "SW" : 59803
          }
        }
      }
    },
    "11" : {
      "QSLogical" : {
        "operators" : {
          "0" : {
            "sign" : -66058067,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 79758,
                "rowCount" : 1899
              },
              "compileTime" : {
                "sizeInBytes" : 79758,
                "rowCount" : 1899
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [ca_county#1375, d_qoy#1350, d_year#1346], [ca_county#1375, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#1328)),17,2) AS web_sales#811] "
          },
          "1" : {
            "sign" : -850393416,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 3599158700,
                "rowCount" : 71983174
              },
              "compileTime" : {
                "sizeInBytes" : 3599158700,
                "rowCount" : 71983174
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_ext_sales_price#1328, d_year#1346, d_qoy#1350, ca_county#1375] "
          },
          "2" : {
            "sign" : -543109064,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 4175024092,
                "rowCount" : 71983174
              },
              "compileTime" : {
                "sizeInBytes" : 4175024092,
                "rowCount" : 71983174
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ws_bill_addr_sk#1312 = ca_address_sk#1368) "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "Join",
          "toId" : 1,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Project",
          "toId" : 0,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Aggregate [ca_county#1375, d_qoy#1350, d_year#1346], [ca_county#1375, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#1328)),17,2) AS web_sales#811]\n+- Project [ws_ext_sales_price#1328, d_year#1346, d_qoy#1350, ca_county#1375]\n   +- Join Inner, (ws_bill_addr_sk#1312 = ca_address_sk#1368)\n      :- Project [ws_bill_addr_sk#1312, ws_ext_sales_price#1328, d_year#1346, d_qoy#1350]\n      :  +- Join Inner, (ws_sold_date_sk#1339 = d_date_sk#1340)\n      :     :- Project [ws_bill_addr_sk#1312, ws_ext_sales_price#1328, ws_sold_date_sk#1339]\n      :     :  +- Filter ((isnotnull(ws_sold_date_sk#1339) AND isnotnull(ws_bill_addr_sk#1312)) AND dynamicpruning#1387 [ws_sold_date_sk#1339])\n      :     :     :  +- Project [d_date_sk#1340, d_year#1346, d_qoy#1350]\n      :     :     :     +- Filter (((isnotnull(d_qoy#1350) AND isnotnull(d_year#1346)) AND ((d_qoy#1350 = 3) AND (d_year#1346 = 2000))) AND isnotnull(d_date_sk#1340))\n      :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#1340,d_date_id#1341,d_date#1342,d_month_seq#1343,d_week_seq#1344,d_quarter_seq#1345,d_year#1346,d_dow#1347,d_moy#1348,d_dom#1349,d_qoy#1350,d_fy_year#1351,d_fy_quarter_seq#1352,d_fy_week_seq#1353,d_day_name#1354,d_quarter_name#1355,d_holiday#1356,d_weekend#1357,d_following_holiday#1358,d_first_dom#1359,d_last_dom#1360,d_same_day_ly#1361,d_same_day_lq#1362,d_current_day#1363,... 4 more fields] parquet\n      :     :     +- Relation spark_catalog.tpcds_100.web_sales[ws_sold_time_sk#1306,ws_ship_date_sk#1307,ws_item_sk#1308,ws_bill_customer_sk#1309,ws_bill_cdemo_sk#1310,ws_bill_hdemo_sk#1311,ws_bill_addr_sk#1312,ws_ship_customer_sk#1313,ws_ship_cdemo_sk#1314,ws_ship_hdemo_sk#1315,ws_ship_addr_sk#1316,ws_web_page_sk#1317,ws_web_site_sk#1318,ws_ship_mode_sk#1319,ws_warehouse_sk#1320,ws_promo_sk#1321,ws_order_number#1322L,ws_quantity#1323,ws_wholesale_cost#1324,ws_list_price#1325,ws_sales_price#1326,ws_ext_discount_amt#1327,ws_ext_sales_price#1328,ws_ext_wholesale_cost#1329,... 10 more fields] parquet\n      :     +- Project [d_date_sk#1340, d_year#1346, d_qoy#1350]\n      :        +- Filter (((isnotnull(d_qoy#1350) AND isnotnull(d_year#1346)) AND ((d_qoy#1350 = 3) AND (d_year#1346 = 2000))) AND isnotnull(d_date_sk#1340))\n      :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#1340,d_date_id#1341,d_date#1342,d_month_seq#1343,d_week_seq#1344,d_quarter_seq#1345,d_year#1346,d_dow#1347,d_moy#1348,d_dom#1349,d_qoy#1350,d_fy_year#1351,d_fy_quarter_seq#1352,d_fy_week_seq#1353,d_day_name#1354,d_quarter_name#1355,d_holiday#1356,d_weekend#1357,d_following_holiday#1358,d_first_dom#1359,d_last_dom#1360,d_same_day_ly#1361,d_same_day_lq#1362,d_current_day#1363,... 4 more fields] parquet\n      +- Project [ca_address_sk#1368, ca_county#1375]\n         +- Filter (isnotnull(ca_address_sk#1368) AND isnotnull(ca_county#1375))\n            +- Relation spark_catalog.tpcds_100.customer_address[ca_address_sk#1368,ca_address_id#1369,ca_street_number#1370,ca_street_name#1371,ca_street_type#1372,ca_suite_number#1373,ca_city#1374,ca_county#1375,ca_state#1376,ca_zip#1377,ca_country#1378,ca_gmt_offset#1379,ca_location_type#1380] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "4" : {
            "sign" : -236989954,
            "className" : "org.apache.spark.sql.execution.adaptive.ShuffleQueryStageExec",
            "sizeInBytes" : 153230680,
            "rowCount" : 3830767,
            "isRuntime" : true,
            "predicate" : " (unknown) ShuffleQueryStage Output [4]: [ws_bill_addr_sk#1312, ws_ext_sales_price#1328, d_year#1346, d_qoy#1350] Arguments: 21 "
          },
          "5" : {
            "sign" : -232373724,
            "className" : "org.apache.spark.sql.execution.SortExec",
            "sizeInBytes" : -1,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Input [2]: [ca_address_sk#1368, ca_county#1375] Arguments: [ca_address_sk#1368 ASC NULLS FIRST], false, 0 "
          },
          "6" : {
            "sign" : -1353505065,
            "className" : "org.apache.spark.sql.execution.adaptive.ShuffleQueryStageExec",
            "sizeInBytes" : 39644968,
            "rowCount" : 970045,
            "isRuntime" : true,
            "predicate" : " (unknown) ShuffleQueryStage Output [2]: [ca_address_sk#1368, ca_county#1375] Arguments: 19 "
          },
          "1" : {
            "sign" : -772729758,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 3599158700,
            "rowCount" : 71983174,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [4]: [ws_ext_sales_price#1328, d_year#1346, d_qoy#1350, ca_county#1375] Input [6]: [ws_bill_addr_sk#1312, ws_ext_sales_price#1328, d_year#1346, d_qoy#1350, ca_address_sk#1368, ca_county#1375] "
          },
          "0" : {
            "sign" : -246619528,
            "className" : "org.apache.spark.sql.execution.aggregate.HashAggregateExec",
            "sizeInBytes" : 79758,
            "rowCount" : 1899,
            "isRuntime" : false,
            "predicate" : " (unknown) HashAggregate Input [4]: [ws_ext_sales_price#1328, d_year#1346, d_qoy#1350, ca_county#1375] Keys [3]: [ca_county#1375, d_qoy#1350, d_year#1346] Functions [1]: [partial_sum(UnscaledValue(ws_ext_sales_price#1328))] Aggregate Attributes [1]: [sum#1398L] Results [4]: [ca_county#1375, d_qoy#1350, d_year#1346, sum#1399L] "
          },
          "2" : {
            "sign" : 255088800,
            "className" : "org.apache.spark.sql.execution.joins.SortMergeJoinExec",
            "sizeInBytes" : 4175024092,
            "rowCount" : 71983174,
            "isRuntime" : false,
            "predicate" : " (unknown) SortMergeJoin Left keys [1]: [ws_bill_addr_sk#1312] Right keys [1]: [ca_address_sk#1368] Join type: Inner Join condition: None "
          },
          "3" : {
            "sign" : -813054723,
            "className" : "org.apache.spark.sql.execution.SortExec",
            "sizeInBytes" : -1,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Input [4]: [ws_bill_addr_sk#1312, ws_ext_sales_price#1328, d_year#1346, d_qoy#1350] Arguments: [ws_bill_addr_sk#1312 ASC NULLS FIRST], false, 0 "
          }
        },
        "links" : [ {
          "fromId" : 4,
          "fromName" : "ShuffleQueryStage",
          "toId" : 3,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Sort",
          "toId" : 2,
          "toName" : "SortMergeJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "ShuffleQueryStage",
          "toId" : 5,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Sort",
          "toId" : 2,
          "toName" : "SortMergeJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "SortMergeJoin",
          "toId" : 1,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Project",
          "toId" : 0,
          "toName" : "HashAggregate",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "HashAggregate(keys=[ca_county#1375, d_qoy#1350, d_year#1346], functions=[partial_sum(UnscaledValue(ws_ext_sales_price#1328))], output=[ca_county#1375, d_qoy#1350, d_year#1346, sum#1399L])\n+- Project [ws_ext_sales_price#1328, d_year#1346, d_qoy#1350, ca_county#1375]\n   +- SortMergeJoin [ws_bill_addr_sk#1312], [ca_address_sk#1368], Inner\n      :- Sort [ws_bill_addr_sk#1312 ASC NULLS FIRST], false, 0\n      :  +- ShuffleQueryStage 21\n      :     +- Exchange hashpartitioning(ws_bill_addr_sk#1312, 200), ENSURE_REQUIREMENTS, [plan_id=1746]\n      :        +- *(14) Project [ws_bill_addr_sk#1312, ws_ext_sales_price#1328, d_year#1346, d_qoy#1350]\n      :           +- *(14) BroadcastHashJoin [ws_sold_date_sk#1339], [d_date_sk#1340], Inner, BuildRight, false\n      :              :- *(14) Filter isnotnull(ws_bill_addr_sk#1312)\n      :              :  +- *(14) ColumnarToRow\n      :              :     +- FileScan parquet spark_catalog.tpcds_100.web_sales[ws_bill_addr_sk#1312,ws_ext_sales_price#1328,ws_sold_date_sk#1339] Batched: true, DataFilters: [isnotnull(ws_bill_addr_sk#1312)], Format: Parquet, Location: InMemoryFileIndex(1823 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/web_sa..., PartitionFilters: [isnotnull(ws_sold_date_sk#1339), dynamicpruningexpression(ws_sold_date_sk#1339 IN dynamicpruning..., PushedFilters: [IsNotNull(ws_bill_addr_sk)], ReadSchema: struct<ws_bill_addr_sk:int,ws_ext_sales_price:decimal(7,2)>\n      :              :           +- ReusedSubquery SubqueryBroadcast dynamicpruning#1383, 0, [d_date_sk#1188], [id=#1661]\n      :              +- BroadcastQueryStage 17\n      :                 +- ReusedExchange [d_date_sk#1340, d_year#1346, d_qoy#1350], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=893]\n      +- Sort [ca_address_sk#1368 ASC NULLS FIRST], false, 0\n         +- ShuffleQueryStage 19\n            +- ReusedExchange [ca_address_sk#1368, ca_county#1375], Exchange hashpartitioning(ca_address_sk#1151, 200), ENSURE_REQUIREMENTS, [plan_id=871]\n"
      },
      "IM" : {
        "inputSizeInBytes" : 192875648,
        "inputRowCount" : 4800812
      },
      "InitialPartitionNum" : 200,
      "PD" : {
        "2" : [ 175916, 169390, 169741, 173764, 171532, 170343, 170192, 175555, 181641, 177570, 175318, 169857, 177783, 168781, 165701, 174046, 175234, 175461, 173680, 169779, 179471, 178648, 169286, 174353, 171543, 176587, 176414, 172604, 173795, 174114, 171690, 169665, 179985, 168438, 177119, 172738, 170107, 170113, 176340, 178309, 163418, 169712, 163363, 172857, 171661, 169626, 180069, 173142, 168216, 164322, 176926, 167914, 171229, 176366, 172616, 181735, 177484, 172848, 172926, 160883, 166887, 164384, 170753, 177952, 169443, 171135, 168554, 166070, 174081, 175854, 172075, 174433, 171599, 179643, 180317, 167996, 181934, 177098, 171108, 174240, 175285, 176686, 177388, 163741, 174776, 167303, 162668, 178227, 174796, 168578, 178603, 178438, 187853, 168802, 176665, 175688, 173441, 163179, 168386, 169049, 165423, 173882, 163873, 171177, 171485, 177496, 177633, 169960, 171599, 176913, 167424, 168571, 173660, 164745, 168670, 174155, 160547, 176724, 183822, 166626, 169136, 173658, 179843, 178178, 183290, 185164, 177280, 159240, 176019, 183047, 169037, 175290, 178775, 173973, 174576, 171612, 169333, 179525, 169652, 170043, 169264, 168852, 173097, 174372, 171170, 173887, 173610, 171793, 176721, 171303, 170707, 179204, 191249, 170484, 171465, 181063, 181570, 169101, 176301, 158626, 162078, 172995, 173413, 168292, 173342, 169641, 172306, 175272, 172092, 174424, 174468, 173127, 181758, 166334, 176292, 175673, 175010, 169022, 174766, 170473, 171735, 183501, 175097, 168453, 178864, 169649, 172595, 171251, 166165, 166293, 174541, 167769, 176323, 166775, 168680, 176044, 176696, 175433, 168460, 175090 ],

      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 16,
        "FinishedTasksNum" : 22,
        "FinishedTasksTotalTimeInMs" : 23275.0,
        "FinishedTasksDistributionInMs" : [ 310.0, 403.0, 470.0, 1337.0, 3541.0 ]
      },
      "QueryStageOptimizationId" : 11,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 16 ],
      "Objectives" : {
        "DurationInMs" : 5071,
        "TotalTasksDurationInMs" : 4521,
        "IOBytes" : {
          "Total" : 49007296,
          "Details" : {
            "IR" : 0,
            "IW" : 0,
            "SR" : 48946708,
            "SW" : 60588
          }
        }
      }
    },
    "9" : {
      "QSLogical" : {
        "operators" : {
          "4" : {
            "sign" : 373033576,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 14972593792,
                "rowCount" : 71983624
              },
              "compileTime" : {
                "sizeInBytes" : 14972593792,
                "rowCount" : 71983624
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ws_sold_time_sk#1230, ws_ship_date_sk#1231, ws_item_sk#1232, ws_bill_customer_sk#1233, ws_bill_cdemo_sk#1234, ws_bill_hdemo_sk#1235, ws_bill_addr_sk#1236, ws_ship_customer_sk#1237, ws_ship_cdemo_sk#1238, ws_ship_hdemo_sk#1239, ws_ship_addr_sk#1240, ws_web_page_sk#1241, ws_web_site_sk#1242, ws_ship_mode_sk#1243, ws_warehouse_sk#1244, ws_promo_sk#1245, ws_order_number#1246L, ws_quantity#1247, ws_wholesale_cost#1248, ws_list_price#1249, ws_sales_price#1250, ws_ext_discount_amt#1251, ws_ext_sales_price#1252, ws_ext_wholesale_cost#1253, ... 10 more fields], `spark_catalog`.`tpcds_100`.`web_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "1" : {
            "sign" : -371935961,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 2501841780,
                "rowCount" : 69495605
              },
              "compileTime" : {
                "sizeInBytes" : 2501841780,
                "rowCount" : 69495605
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ws_sold_date_sk#1263 = d_date_sk#1264) "
          },
          "0" : {
            "sign" : 1261328972,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 1945876940,
                "rowCount" : 69495605
              },
              "compileTime" : {
                "sizeInBytes" : 1945876940,
                "rowCount" : 69495605
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_bill_addr_sk#1236, ws_ext_sales_price#1252, d_year#1270, d_qoy#1274] "
          },
          "2" : {
            "sign" : 1274419678,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 1727172072,
                "rowCount" : 71965503
              },
              "compileTime" : {
                "sizeInBytes" : 1727172072,
                "rowCount" : 71965503
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_bill_addr_sk#1236, ws_ext_sales_price#1252, ws_sold_date_sk#1263] "
          },
          "3" : {
            "sign" : -1052337041,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 14968824624,
                "rowCount" : 71965503
              },
              "compileTime" : {
                "sizeInBytes" : 14968824624,
                "rowCount" : 71965503
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(ws_sold_date_sk#1263) AND isnotnull(ws_bill_addr_sk#1236)) AND dynamicpruning#1386 [ws_sold_date_sk#1263]) "
          }
        },
        "links" : [ {
          "fromId" : 4,
          "fromName" : "LogicalRelation",
          "toId" : 3,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Filter",
          "toId" : 2,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Project",
          "toId" : 1,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Join",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [ws_bill_addr_sk#1236, ws_ext_sales_price#1252, d_year#1270, d_qoy#1274]\n+- Join Inner, (ws_sold_date_sk#1263 = d_date_sk#1264)\n   :- Project [ws_bill_addr_sk#1236, ws_ext_sales_price#1252, ws_sold_date_sk#1263]\n   :  +- Filter ((isnotnull(ws_sold_date_sk#1263) AND isnotnull(ws_bill_addr_sk#1236)) AND dynamicpruning#1386 [ws_sold_date_sk#1263])\n   :     :  +- Project [d_date_sk#1264, d_year#1270, d_qoy#1274]\n   :     :     +- Filter (((isnotnull(d_qoy#1274) AND isnotnull(d_year#1270)) AND ((d_qoy#1274 = 2) AND (d_year#1270 = 2000))) AND isnotnull(d_date_sk#1264))\n   :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#1264,d_date_id#1265,d_date#1266,d_month_seq#1267,d_week_seq#1268,d_quarter_seq#1269,d_year#1270,d_dow#1271,d_moy#1272,d_dom#1273,d_qoy#1274,d_fy_year#1275,d_fy_quarter_seq#1276,d_fy_week_seq#1277,d_day_name#1278,d_quarter_name#1279,d_holiday#1280,d_weekend#1281,d_following_holiday#1282,d_first_dom#1283,d_last_dom#1284,d_same_day_ly#1285,d_same_day_lq#1286,d_current_day#1287,... 4 more fields] parquet\n   :     +- Relation spark_catalog.tpcds_100.web_sales[ws_sold_time_sk#1230,ws_ship_date_sk#1231,ws_item_sk#1232,ws_bill_customer_sk#1233,ws_bill_cdemo_sk#1234,ws_bill_hdemo_sk#1235,ws_bill_addr_sk#1236,ws_ship_customer_sk#1237,ws_ship_cdemo_sk#1238,ws_ship_hdemo_sk#1239,ws_ship_addr_sk#1240,ws_web_page_sk#1241,ws_web_site_sk#1242,ws_ship_mode_sk#1243,ws_warehouse_sk#1244,ws_promo_sk#1245,ws_order_number#1246L,ws_quantity#1247,ws_wholesale_cost#1248,ws_list_price#1249,ws_sales_price#1250,ws_ext_discount_amt#1251,ws_ext_sales_price#1252,ws_ext_wholesale_cost#1253,... 10 more fields] parquet\n   +- Project [d_date_sk#1264, d_year#1270, d_qoy#1274]\n      +- Filter (((isnotnull(d_qoy#1274) AND isnotnull(d_year#1270)) AND ((d_qoy#1274 = 2) AND (d_year#1270 = 2000))) AND isnotnull(d_date_sk#1264))\n         +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#1264,d_date_id#1265,d_date#1266,d_month_seq#1267,d_week_seq#1268,d_quarter_seq#1269,d_year#1270,d_dow#1271,d_moy#1272,d_dom#1273,d_qoy#1274,d_fy_year#1275,d_fy_quarter_seq#1276,d_fy_week_seq#1277,d_day_name#1278,d_quarter_name#1279,d_holiday#1280,d_weekend#1281,d_following_holiday#1282,d_first_dom#1283,d_last_dom#1284,d_same_day_ly#1285,d_same_day_lq#1286,d_current_day#1287,... 4 more fields] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "4" : {
            "sign" : -94425306,
            "className" : "org.apache.spark.sql.execution.adaptive.BroadcastQueryStageExec",
            "sizeInBytes" : 1049304,
            "rowCount" : 91,
            "isRuntime" : true,
            "predicate" : " (unknown) BroadcastQueryStage Output [3]: [d_date_sk#1264, d_year#1270, d_qoy#1274] Arguments: 13 "
          },
          "1" : {
            "sign" : 940782607,
            "className" : "org.apache.spark.sql.execution.joins.BroadcastHashJoinExec",
            "sizeInBytes" : 2501841780,
            "rowCount" : 69495605,
            "isRuntime" : false,
            "predicate" : " (unknown) BroadcastHashJoin Left keys [1]: [ws_sold_date_sk#1263] Right keys [1]: [d_date_sk#1264] Join type: Inner Join condition: None "
          },
          "0" : {
            "sign" : -2113618520,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 1945876940,
            "rowCount" : 69495605,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [4]: [ws_bill_addr_sk#1236, ws_ext_sales_price#1252, d_year#1270, d_qoy#1274] Input [6]: [ws_bill_addr_sk#1236, ws_ext_sales_price#1252, ws_sold_date_sk#1263, d_date_sk#1264, d_year#1270, d_qoy#1274] "
          },
          "2" : {
            "sign" : -1507759220,
            "className" : "org.apache.spark.sql.execution.FilterExec",
            "sizeInBytes" : 1727172072,
            "rowCount" : 71965503,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Input [3]: [ws_bill_addr_sk#1236, ws_ext_sales_price#1252, ws_sold_date_sk#1263] Condition : isnotnull(ws_bill_addr_sk#1236) "
          },
          "3" : {
            "sign" : 879403123,
            "className" : "org.apache.spark.sql.execution.FileSourceScanExec",
            "sizeInBytes" : 1727172072,
            "rowCount" : 71965503,
            "isRuntime" : false,
            "predicate" : " (unknown) Scan parquet spark_catalog.tpcds_100.web_sales Output [3]: [ws_bill_addr_sk#1236, ws_ext_sales_price#1252, ws_sold_date_sk#1263] Batched: true Location: InMemoryFileIndex [hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/web_sales/ws_sold_date_sk=2450816, ... 1822 entries] PartitionFilters: [isnotnull(ws_sold_date_sk#1263), dynamicpruningexpression(ws_sold_date_sk#1263 IN dynamicpruning#1382)] PushedFilters: [IsNotNull(ws_bill_addr_sk)] ReadSchema: struct<ws_bill_addr_sk:int,ws_ext_sales_price:decimal(7,2)> "
          }
        },
        "links" : [ {
          "fromId" : 3,
          "fromName" : "Scan parquet spark_catalog.tpcds_100.web_sales",
          "toId" : 2,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Filter",
          "toId" : 1,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "BroadcastQueryStage",
          "toId" : 1,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "BroadcastHashJoin",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [ws_bill_addr_sk#1236, ws_ext_sales_price#1252, d_year#1270, d_qoy#1274]\n+- BroadcastHashJoin [ws_sold_date_sk#1263], [d_date_sk#1264], Inner, BuildRight, false\n   :- Filter isnotnull(ws_bill_addr_sk#1236)\n   :  +- FileScan parquet spark_catalog.tpcds_100.web_sales[ws_bill_addr_sk#1236,ws_ext_sales_price#1252,ws_sold_date_sk#1263] Batched: true, DataFilters: [isnotnull(ws_bill_addr_sk#1236)], Format: Parquet, Location: InMemoryFileIndex(1823 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/web_sa..., PartitionFilters: [isnotnull(ws_sold_date_sk#1263), dynamicpruningexpression(ws_sold_date_sk#1263 IN dynamicpruning..., PushedFilters: [IsNotNull(ws_bill_addr_sk)], ReadSchema: struct<ws_bill_addr_sk:int,ws_ext_sales_price:decimal(7,2)>\n   :        +- ReusedSubquery SubqueryBroadcast dynamicpruning#1382, 0, [d_date_sk#1123], [id=#2175]\n   +- BroadcastQueryStage 13\n      +- ReusedExchange [d_date_sk#1264, d_year#1270, d_qoy#1274], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=852]\n"
      },
      "IM" : {
        "inputSizeInBytes" : 1728221376,
        "inputRowCount" : 71965594
      },
      "InitialPartitionNum" : 0,
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 16,
        "FinishedTasksNum" : 4,
        "FinishedTasksTotalTimeInMs" : 6018.0,
        "FinishedTasksDistributionInMs" : [ 1392.0, 1426.0, 1566.0, 1634.0, 1634.0 ]
      },
      "QueryStageOptimizationId" : 9,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 11 ],
      "Objectives" : {
        "DurationInMs" : 5888,
        "TotalTasksDurationInMs" : 8645,
        "IOBytes" : {
          "Total" : 28700866,
          "Details" : {
            "IR" : 10842689,
            "IW" : 0,
            "SR" : 0,
            "SW" : 17858177
          }
        }
      }
    },
    "22" : {
      "QSLogical" : {
        "operators" : {
          "0" : {
            "sign" : -58220177,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 25820964610752632458520317334,
                "rowCount" : -1
              },
              "compileTime" : {
                "sizeInBytes" : 25820964610752632458520317334,
                "rowCount" : -1
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [d_year#35 ASC NULLS FIRST], true "
          }
        },
        "links" : [ ],
        "rawPlan" : "Sort [d_year#35 ASC NULLS FIRST], true\n+- Project [ca_county#64, d_year#35, (web_sales#807 / web_sales#750) AS web_q1_q2_increase#745, (store_sales#799 / store_sales#749) AS store_q1_q2_increase#746, (web_sales#811 / web_sales#807) AS web_q2_q3_increase#747, (store_sales#803 / store_sales#799) AS store_q2_q3_increase#748]\n   +- Join Inner, (((ca_county#64 = ca_county#786) AND (CASE WHEN (web_sales#750 > 0.00) THEN (web_sales#807 / web_sales#750) END > CASE WHEN (store_sales#749 > 0.00) THEN (store_sales#799 / store_sales#749) END)) AND (CASE WHEN (web_sales#807 > 0.00) THEN (web_sales#811 / web_sales#807) END > CASE WHEN (store_sales#799 > 0.00) THEN (store_sales#803 / store_sales#799) END))\n      :- Project [store_sales#799, store_sales#803, ca_county#64, d_year#35, store_sales#749]\n      :  +- Join Inner, (ca_county#64 = ca_county#1158)\n      :     :- Project [ca_county#1158, store_sales#799, store_sales#803]\n      :     :  +- Join Inner, (ca_county#1158 = ca_county#1223)\n      :     :     :- LogicalQueryStage Aggregate [ca_county#1158, d_qoy#1133, d_year#1129], [ca_county#1158, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#1114)),17,2) AS store_sales#799], HashAggregate(keys=[ca_county#1158, d_qoy#1133, d_year#1129], functions=[sum(UnscaledValue(ss_ext_sales_price#1114))])\n      :     :     +- LogicalQueryStage Aggregate [ca_county#1223, d_qoy#1198, d_year#1194], [ca_county#1223, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#1179)),17,2) AS store_sales#803], HashAggregate(keys=[ca_county#1223, d_qoy#1198, d_year#1194], functions=[sum(UnscaledValue(ss_ext_sales_price#1179))])\n      :     +- LogicalQueryStage Aggregate [ca_county#64, d_qoy#39, d_year#35], [ca_county#64, d_year#35, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#20)),17,2) AS store_sales#749], HashAggregate(keys=[ca_county#64, d_qoy#39, d_year#35], functions=[sum(UnscaledValue(ss_ext_sales_price#20))])\n      +- Project [ca_county#786, web_sales#750, web_sales#807, web_sales#811]\n         +- Join Inner, (ca_county#786 = ca_county#1375)\n            :- Project [ca_county#786, web_sales#750, web_sales#807]\n            :  +- Join Inner, (ca_county#786 = ca_county#1299)\n            :     :- LogicalQueryStage Aggregate [ca_county#786, d_qoy#761, d_year#757], [ca_county#786, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#92)),17,2) AS web_sales#750], HashAggregate(keys=[ca_county#786, d_qoy#761, d_year#757], functions=[sum(UnscaledValue(ws_ext_sales_price#92))])\n            :     +- Aggregate [ca_county#1299, d_qoy#1274, d_year#1270], [ca_county#1299, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#1252)),17,2) AS web_sales#807]\n            :        +- Project [ws_ext_sales_price#1252, d_year#1270, d_qoy#1274, ca_county#1299]\n            :           +- Join Inner, (ws_bill_addr_sk#1236 = ca_address_sk#1292)\n            :              :- LogicalQueryStage Project [ws_bill_addr_sk#1236, ws_ext_sales_price#1252, d_year#1270, d_qoy#1274], ShuffleQueryStage 25\n            :              +- LogicalQueryStage Project [ca_address_sk#1292, ca_county#1299], ShuffleQueryStage 15\n            +- LogicalQueryStage Aggregate [ca_county#1375, d_qoy#1350, d_year#1346], [ca_county#1375, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#1328)),17,2) AS web_sales#811], HashAggregate(keys=[ca_county#1375, d_qoy#1350, d_year#1346], functions=[sum(UnscaledValue(ws_ext_sales_price#1328))])\n"
      },
      "QSPhysical" : {
        "operators" : {
          "0" : {
            "sign" : 993185421,
            "className" : "org.apache.spark.sql.execution.SortExec",
            "sizeInBytes" : 25820964610752632458520317334,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Input [6]: [ca_county#64, d_year#35, web_q1_q2_increase#745, store_q1_q2_increase#746, web_q2_q3_increase#747, store_q2_q3_increase#748] Arguments: [d_year#35 ASC NULLS FIRST], true, 0 "
          },
          "1" : {
            "sign" : 2014277111,
            "className" : "org.apache.spark.sql.execution.adaptive.ShuffleQueryStageExec",
            "sizeInBytes" : 36184,
            "rowCount" : 264,
            "isRuntime" : true,
            "predicate" : " (unknown) ShuffleQueryStage Output [6]: [ca_county#64, d_year#35, web_q1_q2_increase#745, store_q1_q2_increase#746, web_q2_q3_increase#747, store_q2_q3_increase#748] Arguments: 37 "
          }
        },
        "links" : [ {
          "fromId" : 1,
          "fromName" : "ShuffleQueryStage",
          "toId" : 0,
          "toName" : "Sort",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Sort [d_year#35 ASC NULLS FIRST], true, 0\n+- ShuffleQueryStage 37\n   +- Exchange rangepartitioning(d_year#35 ASC NULLS FIRST, 200), ENSURE_REQUIREMENTS, [plan_id=5067]\n      +- *(42) Project [ca_county#64, d_year#35, (web_sales#807 / web_sales#750) AS web_q1_q2_increase#745, (store_sales#799 / store_sales#749) AS store_q1_q2_increase#746, (web_sales#811 / web_sales#807) AS web_q2_q3_increase#747, (store_sales#803 / store_sales#799) AS store_q2_q3_increase#748]\n         +- *(42) BroadcastHashJoin [ca_county#64], [ca_county#786], Inner, BuildLeft, ((CASE WHEN (web_sales#750 > 0.00) THEN (web_sales#807 / web_sales#750) END > CASE WHEN (store_sales#749 > 0.00) THEN (store_sales#799 / store_sales#749) END) AND (CASE WHEN (web_sales#807 > 0.00) THEN (web_sales#811 / web_sales#807) END > CASE WHEN (store_sales#799 > 0.00) THEN (store_sales#803 / store_sales#799) END)), false\n            :- BroadcastQueryStage 36\n            :  +- BroadcastExchange HashedRelationBroadcastMode(List(input[2, string, true]),false), [plan_id=4958]\n            :     +- *(41) Project [store_sales#799, store_sales#803, ca_county#64, d_year#35, store_sales#749]\n            :        +- *(41) BroadcastHashJoin [ca_county#1158], [ca_county#64], Inner, BuildRight, false\n            :           :- *(41) Project [ca_county#1158, store_sales#799, store_sales#803]\n            :           :  +- *(41) BroadcastHashJoin [ca_county#1158], [ca_county#1223], Inner, BuildRight, false\n            :           :     :- *(41) HashAggregate(keys=[ca_county#1158, d_qoy#1133, d_year#1129], functions=[sum(UnscaledValue(ss_ext_sales_price#1114))], output=[ca_county#1158, store_sales#799])\n            :           :     :  +- AQEShuffleRead coalesced\n            :           :     :     +- ShuffleQueryStage 26\n            :           :     :        +- Exchange hashpartitioning(ca_county#1158, d_qoy#1133, d_year#1129, 200), ENSURE_REQUIREMENTS, [plan_id=3150]\n            :           :     :           +- *(21) HashAggregate(keys=[ca_county#1158, d_qoy#1133, d_year#1129], functions=[partial_sum(UnscaledValue(ss_ext_sales_price#1114))], output=[ca_county#1158, d_qoy#1133, d_year#1129, sum#1389L])\n            :           :     :              +- *(21) Project [ss_ext_sales_price#1114, d_year#1129, d_qoy#1133, ca_county#1158]\n            :           :     :                 +- *(21) SortMergeJoin [ss_addr_sk#1105], [ca_address_sk#1151], Inner\n            :           :     :                    :- *(19) Sort [ss_addr_sk#1105 ASC NULLS FIRST], false, 0\n            :           :     :                    :  +- AQEShuffleRead coalesced\n            :           :     :                    :     +- ShuffleQueryStage 22\n            :           :     :                    :        +- Exchange hashpartitioning(ss_addr_sk#1105, 200), ENSURE_REQUIREMENTS, [plan_id=2201]\n            :           :     :                    :           +- *(15) Project [ss_addr_sk#1105, ss_ext_sales_price#1114, d_year#1129, d_qoy#1133]\n            :           :     :                    :              +- *(15) BroadcastHashJoin [ss_sold_date_sk#1122], [d_date_sk#1123], Inner, BuildRight, false\n            :           :     :                    :                 :- *(15) Filter isnotnull(ss_addr_sk#1105)\n            :           :     :                    :                 :  +- *(15) ColumnarToRow\n            :           :     :                    :                 :     +- FileScan parquet spark_catalog.tpcds_100.store_sales[ss_addr_sk#1105,ss_ext_sales_price#1114,ss_sold_date_sk#1122] Batched: true, DataFilters: [isnotnull(ss_addr_sk#1105)], Format: Parquet, Location: InMemoryFileIndex(1823 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/store_..., PartitionFilters: [isnotnull(ss_sold_date_sk#1122), dynamicpruningexpression(ss_sold_date_sk#1122 IN dynamicpruning..., PushedFilters: [IsNotNull(ss_addr_sk)], ReadSchema: struct<ss_addr_sk:int,ss_ext_sales_price:decimal(7,2)>\n            :           :     :                    :                 :           +- SubqueryBroadcast dynamicpruning#1382, 0, [d_date_sk#1123], [id=#2175]\n            :           :     :                    :                 :              +- AdaptiveSparkPlan isFinalPlan=true\n                                                                                       +- == Final Plan ==\n                                                                                          BroadcastQueryStage 1\n                                                                                          +- ReusedExchange [d_date_sk#1123, d_year#1129, d_qoy#1133], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=852]\n                                                                                       +- == Initial Plan ==\n                                                                                          BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=2172]\n                                                                                          +- Filter ((((isnotnull(d_qoy#1133) AND isnotnull(d_year#1129)) AND (d_qoy#1133 = 2)) AND (d_year#1129 = 2000)) AND isnotnull(d_date_sk#1123))\n                                                                                             +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#1123,d_year#1129,d_qoy#1133] Batched: true, DataFilters: [isnotnull(d_qoy#1133), isnotnull(d_year#1129), (d_qoy#1133 = 2), (d_year#1129 = 2000), isnotnull..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_qoy), IsNotNull(d_year), EqualTo(d_qoy,2), EqualTo(d_year,2000), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int,d_qoy:int>\n            :           :     :                    :                 +- BroadcastQueryStage 0\n            :           :     :                    :                    +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=852]\n            :           :     :                    :                       +- *(1) Filter ((((isnotnull(d_qoy#1133) AND isnotnull(d_year#1129)) AND (d_qoy#1133 = 2)) AND (d_year#1129 = 2000)) AND isnotnull(d_date_sk#1123))\n            :           :     :                    :                          +- *(1) ColumnarToRow\n            :           :     :                    :                             +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#1123,d_year#1129,d_qoy#1133] Batched: true, DataFilters: [isnotnull(d_qoy#1133), isnotnull(d_year#1129), (d_qoy#1133 = 2), (d_year#1129 = 2000), isnotnull..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_qoy), IsNotNull(d_year), EqualTo(d_qoy,2), EqualTo(d_year,2000), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int,d_qoy:int>\n            :           :     :                    +- *(20) Sort [ca_address_sk#1151 ASC NULLS FIRST], false, 0\n            :           :     :                       +- AQEShuffleRead coalesced\n            :           :     :                          +- ShuffleQueryStage 1\n            :           :     :                             +- Exchange hashpartitioning(ca_address_sk#1151, 200), ENSURE_REQUIREMENTS, [plan_id=871]\n            :           :     :                                +- *(2) Filter (isnotnull(ca_address_sk#1151) AND isnotnull(ca_county#1158))\n            :           :     :                                   +- *(2) ColumnarToRow\n            :           :     :                                      +- FileScan parquet spark_catalog.tpcds_100.customer_address[ca_address_sk#1151,ca_county#1158] Batched: true, DataFilters: [isnotnull(ca_address_sk#1151), isnotnull(ca_county#1158)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/customer_..., PartitionFilters: [], PushedFilters: [IsNotNull(ca_address_sk), IsNotNull(ca_county)], ReadSchema: struct<ca_address_sk:int,ca_county:string>\n            :           :     +- BroadcastQueryStage 35\n            :           :        +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, string, true]),false), [plan_id=4802]\n            :           :           +- *(40) HashAggregate(keys=[ca_county#1223, d_qoy#1198, d_year#1194], functions=[sum(UnscaledValue(ss_ext_sales_price#1179))], output=[ca_county#1223, store_sales#803])\n            :           :              +- AQEShuffleRead coalesced\n            :           :                 +- ShuffleQueryStage 29\n            :           :                    +- Exchange hashpartitioning(ca_county#1223, d_qoy#1198, d_year#1194, 200), ENSURE_REQUIREMENTS, [plan_id=3835]\n            :           :                       +- *(30) HashAggregate(keys=[ca_county#1223, d_qoy#1198, d_year#1194], functions=[partial_sum(UnscaledValue(ss_ext_sales_price#1179))], output=[ca_county#1223, d_qoy#1198, d_year#1194, sum#1391L])\n            :           :                          +- *(30) Project [ss_ext_sales_price#1179, d_year#1194, d_qoy#1198, ca_county#1223]\n            :           :                             +- *(30) SortMergeJoin [ss_addr_sk#1170], [ca_address_sk#1216], Inner\n            :           :                                :- *(28) Sort [ss_addr_sk#1170 ASC NULLS FIRST], false, 0\n            :           :                                :  +- AQEShuffleRead coalesced\n            :           :                                :     +- ShuffleQueryStage 20\n            :           :                                :        +- Exchange hashpartitioning(ss_addr_sk#1170, 200), ENSURE_REQUIREMENTS, [plan_id=1687]\n            :           :                                :           +- *(13) Project [ss_addr_sk#1170, ss_ext_sales_price#1179, d_year#1194, d_qoy#1198]\n            :           :                                :              +- *(13) BroadcastHashJoin [ss_sold_date_sk#1187], [d_date_sk#1188], Inner, BuildRight, false\n            :           :                                :                 :- *(13) Filter isnotnull(ss_addr_sk#1170)\n            :           :                                :                 :  +- *(13) ColumnarToRow\n            :           :                                :                 :     +- FileScan parquet spark_catalog.tpcds_100.store_sales[ss_addr_sk#1170,ss_ext_sales_price#1179,ss_sold_date_sk#1187] Batched: true, DataFilters: [isnotnull(ss_addr_sk#1170)], Format: Parquet, Location: InMemoryFileIndex(1823 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/store_..., PartitionFilters: [isnotnull(ss_sold_date_sk#1187), dynamicpruningexpression(ss_sold_date_sk#1187 IN dynamicpruning..., PushedFilters: [IsNotNull(ss_addr_sk)], ReadSchema: struct<ss_addr_sk:int,ss_ext_sales_price:decimal(7,2)>\n            :           :                                :                 :           +- SubqueryBroadcast dynamicpruning#1383, 0, [d_date_sk#1188], [id=#1661]\n            :           :                                :                 :              +- AdaptiveSparkPlan isFinalPlan=true\n                                                                                             +- == Final Plan ==\n                                                                                                BroadcastQueryStage 1\n                                                                                                +- ReusedExchange [d_date_sk#1188, d_year#1194, d_qoy#1198], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=893]\n                                                                                             +- == Initial Plan ==\n                                                                                                BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=1658]\n                                                                                                +- Filter ((((isnotnull(d_qoy#1198) AND isnotnull(d_year#1194)) AND (d_qoy#1198 = 3)) AND (d_year#1194 = 2000)) AND isnotnull(d_date_sk#1188))\n                                                                                                   +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#1188,d_year#1194,d_qoy#1198] Batched: true, DataFilters: [isnotnull(d_qoy#1198), isnotnull(d_year#1194), (d_qoy#1198 = 3), (d_year#1194 = 2000), isnotnull..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_qoy), IsNotNull(d_year), EqualTo(d_qoy,3), EqualTo(d_year,2000), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int,d_qoy:int>\n            :           :                                :                 +- BroadcastQueryStage 2\n            :           :                                :                    +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=893]\n            :           :                                :                       +- *(3) Filter ((((isnotnull(d_qoy#1198) AND isnotnull(d_year#1194)) AND (d_qoy#1198 = 3)) AND (d_year#1194 = 2000)) AND isnotnull(d_date_sk#1188))\n            :           :                                :                          +- *(3) ColumnarToRow\n            :           :                                :                             +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#1188,d_year#1194,d_qoy#1198] Batched: true, DataFilters: [isnotnull(d_qoy#1198), isnotnull(d_year#1194), (d_qoy#1198 = 3), (d_year#1194 = 2000), isnotnull..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_qoy), IsNotNull(d_year), EqualTo(d_qoy,3), EqualTo(d_year,2000), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int,d_qoy:int>\n            :           :                                +- *(29) Sort [ca_address_sk#1216 ASC NULLS FIRST], false, 0\n            :           :                                   +- AQEShuffleRead coalesced\n            :           :                                      +- ShuffleQueryStage 4\n            :           :                                         +- ReusedExchange [ca_address_sk#1216, ca_county#1223], Exchange hashpartitioning(ca_address_sk#1151, 200), ENSURE_REQUIREMENTS, [plan_id=871]\n            :           +- BroadcastQueryStage 34\n            :              +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, string, true]),false), [plan_id=4710]\n            :                 +- *(39) HashAggregate(keys=[ca_county#64, d_qoy#39, d_year#35], functions=[sum(UnscaledValue(ss_ext_sales_price#20))], output=[ca_county#64, d_year#35, store_sales#749])\n            :                    +- AQEShuffleRead coalesced\n            :                       +- ShuffleQueryStage 28\n            :                          +- Exchange hashpartitioning(ca_county#64, d_qoy#39, d_year#35, 200), ENSURE_REQUIREMENTS, [plan_id=3632]\n            :                             +- *(27) HashAggregate(keys=[ca_county#64, d_qoy#39, d_year#35], functions=[partial_sum(UnscaledValue(ss_ext_sales_price#20))], output=[ca_county#64, d_qoy#39, d_year#35, sum#1393L])\n            :                                +- *(27) Project [ss_ext_sales_price#20, d_year#35, d_qoy#39, ca_county#64]\n            :                                   +- *(27) SortMergeJoin [ss_addr_sk#11], [ca_address_sk#57], Inner\n            :                                      :- *(25) Sort [ss_addr_sk#11 ASC NULLS FIRST], false, 0\n            :                                      :  +- AQEShuffleRead coalesced\n            :                                      :     +- ShuffleQueryStage 23\n            :                                      :        +- Exchange hashpartitioning(ss_addr_sk#11, 200), ENSURE_REQUIREMENTS, [plan_id=2252]\n            :                                      :           +- *(16) Project [ss_addr_sk#11, ss_ext_sales_price#20, d_year#35, d_qoy#39]\n            :                                      :              +- *(16) BroadcastHashJoin [ss_sold_date_sk#28], [d_date_sk#29], Inner, BuildRight, false\n            :                                      :                 :- *(16) Filter isnotnull(ss_addr_sk#11)\n            :                                      :                 :  +- *(16) ColumnarToRow\n            :                                      :                 :     +- FileScan parquet spark_catalog.tpcds_100.store_sales[ss_addr_sk#11,ss_ext_sales_price#20,ss_sold_date_sk#28] Batched: true, DataFilters: [isnotnull(ss_addr_sk#11)], Format: Parquet, Location: InMemoryFileIndex(1823 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/store_..., PartitionFilters: [isnotnull(ss_sold_date_sk#28), dynamicpruningexpression(ss_sold_date_sk#28 IN dynamicpruning#1384)], PushedFilters: [IsNotNull(ss_addr_sk)], ReadSchema: struct<ss_addr_sk:int,ss_ext_sales_price:decimal(7,2)>\n            :                                      :                 :           +- SubqueryBroadcast dynamicpruning#1384, 0, [d_date_sk#29], [id=#2226]\n            :                                      :                 :              +- AdaptiveSparkPlan isFinalPlan=true\n                                                                                       +- == Final Plan ==\n                                                                                          BroadcastQueryStage 1\n                                                                                          +- ReusedExchange [d_date_sk#29, d_year#35, d_qoy#39], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=939]\n                                                                                       +- == Initial Plan ==\n                                                                                          BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=2223]\n                                                                                          +- Filter ((((isnotnull(d_qoy#39) AND isnotnull(d_year#35)) AND (d_qoy#39 = 1)) AND (d_year#35 = 2000)) AND isnotnull(d_date_sk#29))\n                                                                                             +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#29,d_year#35,d_qoy#39] Batched: true, DataFilters: [isnotnull(d_qoy#39), isnotnull(d_year#35), (d_qoy#39 = 1), (d_year#35 = 2000), isnotnull(d_date_..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_qoy), IsNotNull(d_year), EqualTo(d_qoy,1), EqualTo(d_year,2000), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int,d_qoy:int>\n            :                                      :                 +- BroadcastQueryStage 5\n            :                                      :                    +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=939]\n            :                                      :                       +- *(5) Filter ((((isnotnull(d_qoy#39) AND isnotnull(d_year#35)) AND (d_qoy#39 = 1)) AND (d_year#35 = 2000)) AND isnotnull(d_date_sk#29))\n            :                                      :                          +- *(5) ColumnarToRow\n            :                                      :                             +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#29,d_year#35,d_qoy#39] Batched: true, DataFilters: [isnotnull(d_qoy#39), isnotnull(d_year#35), (d_qoy#39 = 1), (d_year#35 = 2000), isnotnull(d_date_..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_qoy), IsNotNull(d_year), EqualTo(d_qoy,1), EqualTo(d_year,2000), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int,d_qoy:int>\n            :                                      +- *(26) Sort [ca_address_sk#57 ASC NULLS FIRST], false, 0\n            :                                         +- AQEShuffleRead coalesced\n            :                                            +- ShuffleQueryStage 7\n            :                                               +- ReusedExchange [ca_address_sk#57, ca_county#64], Exchange hashpartitioning(ca_address_sk#1151, 200), ENSURE_REQUIREMENTS, [plan_id=871]\n            +- *(42) Project [ca_county#786, web_sales#750, web_sales#807, web_sales#811]\n               +- *(42) BroadcastHashJoin [ca_county#786], [ca_county#1375], Inner, BuildRight, false\n                  :- *(42) Project [ca_county#786, web_sales#750, web_sales#807]\n                  :  +- *(42) BroadcastHashJoin [ca_county#786], [ca_county#1299], Inner, BuildLeft, false\n                  :     :- BroadcastQueryStage 33\n                  :     :  +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, string, true]),false), [plan_id=4612]\n                  :     :     +- *(38) HashAggregate(keys=[ca_county#786, d_qoy#761, d_year#757], functions=[sum(UnscaledValue(ws_ext_sales_price#92))], output=[ca_county#786, web_sales#750])\n                  :     :        +- AQEShuffleRead coalesced\n                  :     :           +- ShuffleQueryStage 30\n                  :     :              +- Exchange hashpartitioning(ca_county#786, d_qoy#761, d_year#757, 200), ENSURE_REQUIREMENTS, [plan_id=4019]\n                  :     :                 +- *(33) HashAggregate(keys=[ca_county#786, d_qoy#761, d_year#757], functions=[partial_sum(UnscaledValue(ws_ext_sales_price#92))], output=[ca_county#786, d_qoy#761, d_year#757, sum#1395L])\n                  :     :                    +- *(33) Project [ws_ext_sales_price#92, d_year#757, d_qoy#761, ca_county#786]\n                  :     :                       +- *(33) SortMergeJoin [ws_bill_addr_sk#76], [ca_address_sk#779], Inner\n                  :     :                          :- *(31) Sort [ws_bill_addr_sk#76 ASC NULLS FIRST], false, 0\n                  :     :                          :  +- AQEShuffleRead coalesced\n                  :     :                          :     +- ShuffleQueryStage 24\n                  :     :                          :        +- Exchange hashpartitioning(ws_bill_addr_sk#76, 200), ENSURE_REQUIREMENTS, [plan_id=2309]\n                  :     :                          :           +- *(17) Project [ws_bill_addr_sk#76, ws_ext_sales_price#92, d_year#757, d_qoy#761]\n                  :     :                          :              +- *(17) BroadcastHashJoin [ws_sold_date_sk#103], [d_date_sk#751], Inner, BuildRight, false\n                  :     :                          :                 :- *(17) Filter isnotnull(ws_bill_addr_sk#76)\n                  :     :                          :                 :  +- *(17) ColumnarToRow\n                  :     :                          :                 :     +- FileScan parquet spark_catalog.tpcds_100.web_sales[ws_bill_addr_sk#76,ws_ext_sales_price#92,ws_sold_date_sk#103] Batched: true, DataFilters: [isnotnull(ws_bill_addr_sk#76)], Format: Parquet, Location: InMemoryFileIndex(1823 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/web_sa..., PartitionFilters: [isnotnull(ws_sold_date_sk#103), dynamicpruningexpression(ws_sold_date_sk#103 IN dynamicpruning#1..., PushedFilters: [IsNotNull(ws_bill_addr_sk)], ReadSchema: struct<ws_bill_addr_sk:int,ws_ext_sales_price:decimal(7,2)>\n                  :     :                          :                 :           +- ReusedSubquery SubqueryBroadcast dynamicpruning#1384, 0, [d_date_sk#29], [id=#2226]\n                  :     :                          :                 +- BroadcastQueryStage 9\n                  :     :                          :                    +- ReusedExchange [d_date_sk#751, d_year#757, d_qoy#761], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=939]\n                  :     :                          +- *(32) Sort [ca_address_sk#779 ASC NULLS FIRST], false, 0\n                  :     :                             +- AQEShuffleRead coalesced\n                  :     :                                +- ShuffleQueryStage 11\n                  :     :                                   +- ReusedExchange [ca_address_sk#779, ca_county#786], Exchange hashpartitioning(ca_address_sk#1151, 200), ENSURE_REQUIREMENTS, [plan_id=871]\n                  :     +- *(42) HashAggregate(keys=[ca_county#1299, d_qoy#1274, d_year#1270], functions=[sum(UnscaledValue(ws_ext_sales_price#1252))], output=[ca_county#1299, web_sales#807])\n                  :        +- AQEShuffleRead coalesced\n                  :           +- ShuffleQueryStage 31\n                  :              +- Exchange hashpartitioning(ca_county#1299, d_qoy#1274, d_year#1270, 200), ENSURE_REQUIREMENTS, [plan_id=4203]\n                  :                 +- *(36) HashAggregate(keys=[ca_county#1299, d_qoy#1274, d_year#1270], functions=[partial_sum(UnscaledValue(ws_ext_sales_price#1252))], output=[ca_county#1299, d_qoy#1274, d_year#1270, sum#1397L])\n                  :                    +- *(36) Project [ws_ext_sales_price#1252, d_year#1270, d_qoy#1274, ca_county#1299]\n                  :                       +- *(36) SortMergeJoin [ws_bill_addr_sk#1236], [ca_address_sk#1292], Inner\n                  :                          :- *(34) Sort [ws_bill_addr_sk#1236 ASC NULLS FIRST], false, 0\n                  :                          :  +- AQEShuffleRead coalesced\n                  :                          :     +- ShuffleQueryStage 25\n                  :                          :        +- Exchange hashpartitioning(ws_bill_addr_sk#1236, 200), ENSURE_REQUIREMENTS, [plan_id=2363]\n                  :                          :           +- *(18) Project [ws_bill_addr_sk#1236, ws_ext_sales_price#1252, d_year#1270, d_qoy#1274]\n                  :                          :              +- *(18) BroadcastHashJoin [ws_sold_date_sk#1263], [d_date_sk#1264], Inner, BuildRight, false\n                  :                          :                 :- *(18) Filter isnotnull(ws_bill_addr_sk#1236)\n                  :                          :                 :  +- *(18) ColumnarToRow\n                  :                          :                 :     +- FileScan parquet spark_catalog.tpcds_100.web_sales[ws_bill_addr_sk#1236,ws_ext_sales_price#1252,ws_sold_date_sk#1263] Batched: true, DataFilters: [isnotnull(ws_bill_addr_sk#1236)], Format: Parquet, Location: InMemoryFileIndex(1823 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/web_sa..., PartitionFilters: [isnotnull(ws_sold_date_sk#1263), dynamicpruningexpression(ws_sold_date_sk#1263 IN dynamicpruning..., PushedFilters: [IsNotNull(ws_bill_addr_sk)], ReadSchema: struct<ws_bill_addr_sk:int,ws_ext_sales_price:decimal(7,2)>\n                  :                          :                 :           +- ReusedSubquery SubqueryBroadcast dynamicpruning#1382, 0, [d_date_sk#1123], [id=#2175]\n                  :                          :                 +- BroadcastQueryStage 13\n                  :                          :                    +- ReusedExchange [d_date_sk#1264, d_year#1270, d_qoy#1274], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=852]\n                  :                          +- *(35) Sort [ca_address_sk#1292 ASC NULLS FIRST], false, 0\n                  :                             +- AQEShuffleRead coalesced\n                  :                                +- ShuffleQueryStage 15\n                  :                                   +- ReusedExchange [ca_address_sk#1292, ca_county#1299], Exchange hashpartitioning(ca_address_sk#1151, 200), ENSURE_REQUIREMENTS, [plan_id=871]\n                  +- BroadcastQueryStage 32\n                     +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, string, true]),false), [plan_id=4322]\n                        +- *(37) HashAggregate(keys=[ca_county#1375, d_qoy#1350, d_year#1346], functions=[sum(UnscaledValue(ws_ext_sales_price#1328))], output=[ca_county#1375, web_sales#811])\n                           +- AQEShuffleRead coalesced\n                              +- ShuffleQueryStage 27\n                                 +- Exchange hashpartitioning(ca_county#1375, d_qoy#1350, d_year#1346, 200), ENSURE_REQUIREMENTS, [plan_id=3404]\n                                    +- *(24) HashAggregate(keys=[ca_county#1375, d_qoy#1350, d_year#1346], functions=[partial_sum(UnscaledValue(ws_ext_sales_price#1328))], output=[ca_county#1375, d_qoy#1350, d_year#1346, sum#1399L])\n                                       +- *(24) Project [ws_ext_sales_price#1328, d_year#1346, d_qoy#1350, ca_county#1375]\n                                          +- *(24) SortMergeJoin [ws_bill_addr_sk#1312], [ca_address_sk#1368], Inner\n                                             :- *(22) Sort [ws_bill_addr_sk#1312 ASC NULLS FIRST], false, 0\n                                             :  +- AQEShuffleRead coalesced\n                                             :     +- ShuffleQueryStage 21\n                                             :        +- Exchange hashpartitioning(ws_bill_addr_sk#1312, 200), ENSURE_REQUIREMENTS, [plan_id=1746]\n                                             :           +- *(14) Project [ws_bill_addr_sk#1312, ws_ext_sales_price#1328, d_year#1346, d_qoy#1350]\n                                             :              +- *(14) BroadcastHashJoin [ws_sold_date_sk#1339], [d_date_sk#1340], Inner, BuildRight, false\n                                             :                 :- *(14) Filter isnotnull(ws_bill_addr_sk#1312)\n                                             :                 :  +- *(14) ColumnarToRow\n                                             :                 :     +- FileScan parquet spark_catalog.tpcds_100.web_sales[ws_bill_addr_sk#1312,ws_ext_sales_price#1328,ws_sold_date_sk#1339] Batched: true, DataFilters: [isnotnull(ws_bill_addr_sk#1312)], Format: Parquet, Location: InMemoryFileIndex(1823 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/web_sa..., PartitionFilters: [isnotnull(ws_sold_date_sk#1339), dynamicpruningexpression(ws_sold_date_sk#1339 IN dynamicpruning..., PushedFilters: [IsNotNull(ws_bill_addr_sk)], ReadSchema: struct<ws_bill_addr_sk:int,ws_ext_sales_price:decimal(7,2)>\n                                             :                 :           +- ReusedSubquery SubqueryBroadcast dynamicpruning#1383, 0, [d_date_sk#1188], [id=#1661]\n                                             :                 +- BroadcastQueryStage 17\n                                             :                    +- ReusedExchange [d_date_sk#1340, d_year#1346, d_qoy#1350], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=893]\n                                             +- *(23) Sort [ca_address_sk#1368 ASC NULLS FIRST], false, 0\n                                                +- AQEShuffleRead coalesced\n                                                   +- ShuffleQueryStage 19\n                                                      +- ReusedExchange [ca_address_sk#1368, ca_county#1375], Exchange hashpartitioning(ca_address_sk#1151, 200), ENSURE_REQUIREMENTS, [plan_id=871]\n"
      },
      "IM" : {
        "inputSizeInBytes" : 36184,
        "inputRowCount" : 264
      },
      "InitialPartitionNum" : 200,
      "PD" : {
        "13" : [ 18341, 0 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 22,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 52 ],
      "Objectives" : {
        "DurationInMs" : 95,
        "TotalTasksDurationInMs" : 86,
        "IOBytes" : {
          "Total" : 17681,
          "Details" : {
            "IR" : 0,
            "IW" : 0,
            "SR" : 17681,
            "SW" : 0
          }
        }
      }
    },
    "13" : {
      "QSLogical" : {
        "operators" : {
          "0" : {
            "sign" : -1461370395,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 79758,
                "rowCount" : 1899
              },
              "compileTime" : {
                "sizeInBytes" : 79758,
                "rowCount" : 1899
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [ca_county#1223, d_qoy#1198, d_year#1194], [ca_county#1223, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#1179)),17,2) AS store_sales#803] "
          },
          "1" : {
            "sign" : -1795728847,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 13761654400,
                "rowCount" : 275233088
              },
              "compileTime" : {
                "sizeInBytes" : 13761654400,
                "rowCount" : 275233088
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_ext_sales_price#1179, d_year#1194, d_qoy#1198, ca_county#1223] "
          },
          "2" : {
            "sign" : 174134788,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 15963519104,
                "rowCount" : 275233088
              },
              "compileTime" : {
                "sizeInBytes" : 15963519104,
                "rowCount" : 275233088
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_addr_sk#1170 = ca_address_sk#1216) "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "Join",
          "toId" : 1,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Project",
          "toId" : 0,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Aggregate [ca_county#1223, d_qoy#1198, d_year#1194], [ca_county#1223, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#1179)),17,2) AS store_sales#803]\n+- Project [ss_ext_sales_price#1179, d_year#1194, d_qoy#1198, ca_county#1223]\n   +- Join Inner, (ss_addr_sk#1170 = ca_address_sk#1216)\n      :- Project [ss_addr_sk#1170, ss_ext_sales_price#1179, d_year#1194, d_qoy#1198]\n      :  +- Join Inner, (ss_sold_date_sk#1187 = d_date_sk#1188)\n      :     :- Project [ss_addr_sk#1170, ss_ext_sales_price#1179, ss_sold_date_sk#1187]\n      :     :  +- Filter ((isnotnull(ss_sold_date_sk#1187) AND isnotnull(ss_addr_sk#1170)) AND dynamicpruning#1383 [ss_sold_date_sk#1187])\n      :     :     :  +- Project [d_date_sk#1188, d_year#1194, d_qoy#1198]\n      :     :     :     +- Filter (((isnotnull(d_qoy#1198) AND isnotnull(d_year#1194)) AND ((d_qoy#1198 = 3) AND (d_year#1194 = 2000))) AND isnotnull(d_date_sk#1188))\n      :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#1188,d_date_id#1189,d_date#1190,d_month_seq#1191,d_week_seq#1192,d_quarter_seq#1193,d_year#1194,d_dow#1195,d_moy#1196,d_dom#1197,d_qoy#1198,d_fy_year#1199,d_fy_quarter_seq#1200,d_fy_week_seq#1201,d_day_name#1202,d_quarter_name#1203,d_holiday#1204,d_weekend#1205,d_following_holiday#1206,d_first_dom#1207,d_last_dom#1208,d_same_day_ly#1209,d_same_day_lq#1210,d_current_day#1211,... 4 more fields] parquet\n      :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#1165,ss_item_sk#1166,ss_customer_sk#1167,ss_cdemo_sk#1168,ss_hdemo_sk#1169,ss_addr_sk#1170,ss_store_sk#1171,ss_promo_sk#1172,ss_ticket_number#1173L,ss_quantity#1174,ss_wholesale_cost#1175,ss_list_price#1176,ss_sales_price#1177,ss_ext_discount_amt#1178,ss_ext_sales_price#1179,ss_ext_wholesale_cost#1180,ss_ext_list_price#1181,ss_ext_tax#1182,ss_coupon_amt#1183,ss_net_paid#1184,ss_net_paid_inc_tax#1185,ss_net_profit#1186,ss_sold_date_sk#1187] parquet\n      :     +- Project [d_date_sk#1188, d_year#1194, d_qoy#1198]\n      :        +- Filter (((isnotnull(d_qoy#1198) AND isnotnull(d_year#1194)) AND ((d_qoy#1198 = 3) AND (d_year#1194 = 2000))) AND isnotnull(d_date_sk#1188))\n      :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#1188,d_date_id#1189,d_date#1190,d_month_seq#1191,d_week_seq#1192,d_quarter_seq#1193,d_year#1194,d_dow#1195,d_moy#1196,d_dom#1197,d_qoy#1198,d_fy_year#1199,d_fy_quarter_seq#1200,d_fy_week_seq#1201,d_day_name#1202,d_quarter_name#1203,d_holiday#1204,d_weekend#1205,d_following_holiday#1206,d_first_dom#1207,d_last_dom#1208,d_same_day_ly#1209,d_same_day_lq#1210,d_current_day#1211,... 4 more fields] parquet\n      +- Project [ca_address_sk#1216, ca_county#1223]\n         +- Filter (isnotnull(ca_address_sk#1216) AND isnotnull(ca_county#1223))\n            +- Relation spark_catalog.tpcds_100.customer_address[ca_address_sk#1216,ca_address_id#1217,ca_street_number#1218,ca_street_name#1219,ca_street_type#1220,ca_suite_number#1221,ca_city#1222,ca_county#1223,ca_state#1224,ca_zip#1225,ca_country#1226,ca_gmt_offset#1227,ca_location_type#1228] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "4" : {
            "sign" : -942290687,
            "className" : "org.apache.spark.sql.execution.adaptive.ShuffleQueryStageExec",
            "sizeInBytes" : 571496520,
            "rowCount" : 14287413,
            "isRuntime" : true,
            "predicate" : " (unknown) ShuffleQueryStage Output [4]: [ss_addr_sk#1170, ss_ext_sales_price#1179, d_year#1194, d_qoy#1198] Arguments: 20 "
          },
          "5" : {
            "sign" : 124603270,
            "className" : "org.apache.spark.sql.execution.SortExec",
            "sizeInBytes" : -1,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Input [2]: [ca_address_sk#1216, ca_county#1223] Arguments: [ca_address_sk#1216 ASC NULLS FIRST], false, 0 "
          },
          "6" : {
            "sign" : -1095083227,
            "className" : "org.apache.spark.sql.execution.adaptive.ShuffleQueryStageExec",
            "sizeInBytes" : 39644968,
            "rowCount" : 970045,
            "isRuntime" : true,
            "predicate" : " (unknown) ShuffleQueryStage Output [2]: [ca_address_sk#1216, ca_county#1223] Arguments: 4 "
          },
          "1" : {
            "sign" : -1735256552,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 13761654400,
            "rowCount" : 275233088,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [4]: [ss_ext_sales_price#1179, d_year#1194, d_qoy#1198, ca_county#1223] Input [6]: [ss_addr_sk#1170, ss_ext_sales_price#1179, d_year#1194, d_qoy#1198, ca_address_sk#1216, ca_county#1223] "
          },
          "0" : {
            "sign" : 59709286,
            "className" : "org.apache.spark.sql.execution.aggregate.HashAggregateExec",
            "sizeInBytes" : 79758,
            "rowCount" : 1899,
            "isRuntime" : false,
            "predicate" : " (unknown) HashAggregate Input [4]: [ss_ext_sales_price#1179, d_year#1194, d_qoy#1198, ca_county#1223] Keys [3]: [ca_county#1223, d_qoy#1198, d_year#1194] Functions [1]: [partial_sum(UnscaledValue(ss_ext_sales_price#1179))] Aggregate Attributes [1]: [sum#1390L] Results [4]: [ca_county#1223, d_qoy#1198, d_year#1194, sum#1391L] "
          },
          "2" : {
            "sign" : -620565567,
            "className" : "org.apache.spark.sql.execution.joins.SortMergeJoinExec",
            "sizeInBytes" : 15963519104,
            "rowCount" : 275233088,
            "isRuntime" : false,
            "predicate" : " (unknown) SortMergeJoin Left keys [1]: [ss_addr_sk#1170] Right keys [1]: [ca_address_sk#1216] Join type: Inner Join condition: None "
          },
          "3" : {
            "sign" : 1749439326,
            "className" : "org.apache.spark.sql.execution.SortExec",
            "sizeInBytes" : -1,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Input [4]: [ss_addr_sk#1170, ss_ext_sales_price#1179, d_year#1194, d_qoy#1198] Arguments: [ss_addr_sk#1170 ASC NULLS FIRST], false, 0 "
          }
        },
        "links" : [ {
          "fromId" : 4,
          "fromName" : "ShuffleQueryStage",
          "toId" : 3,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Sort",
          "toId" : 2,
          "toName" : "SortMergeJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "ShuffleQueryStage",
          "toId" : 5,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Sort",
          "toId" : 2,
          "toName" : "SortMergeJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "SortMergeJoin",
          "toId" : 1,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Project",
          "toId" : 0,
          "toName" : "HashAggregate",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "HashAggregate(keys=[ca_county#1223, d_qoy#1198, d_year#1194], functions=[partial_sum(UnscaledValue(ss_ext_sales_price#1179))], output=[ca_county#1223, d_qoy#1198, d_year#1194, sum#1391L])\n+- Project [ss_ext_sales_price#1179, d_year#1194, d_qoy#1198, ca_county#1223]\n   +- SortMergeJoin [ss_addr_sk#1170], [ca_address_sk#1216], Inner\n      :- Sort [ss_addr_sk#1170 ASC NULLS FIRST], false, 0\n      :  +- ShuffleQueryStage 20\n      :     +- Exchange hashpartitioning(ss_addr_sk#1170, 200), ENSURE_REQUIREMENTS, [plan_id=1687]\n      :        +- *(13) Project [ss_addr_sk#1170, ss_ext_sales_price#1179, d_year#1194, d_qoy#1198]\n      :           +- *(13) BroadcastHashJoin [ss_sold_date_sk#1187], [d_date_sk#1188], Inner, BuildRight, false\n      :              :- *(13) Filter isnotnull(ss_addr_sk#1170)\n      :              :  +- *(13) ColumnarToRow\n      :              :     +- FileScan parquet spark_catalog.tpcds_100.store_sales[ss_addr_sk#1170,ss_ext_sales_price#1179,ss_sold_date_sk#1187] Batched: true, DataFilters: [isnotnull(ss_addr_sk#1170)], Format: Parquet, Location: InMemoryFileIndex(1823 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/store_..., PartitionFilters: [isnotnull(ss_sold_date_sk#1187), dynamicpruningexpression(ss_sold_date_sk#1187 IN dynamicpruning..., PushedFilters: [IsNotNull(ss_addr_sk)], ReadSchema: struct<ss_addr_sk:int,ss_ext_sales_price:decimal(7,2)>\n      :              :           +- SubqueryBroadcast dynamicpruning#1383, 0, [d_date_sk#1188], [id=#1661]\n      :              :              +- AdaptiveSparkPlan isFinalPlan=true\n                                       +- == Final Plan ==\n                                          BroadcastQueryStage 1\n                                          +- ReusedExchange [d_date_sk#1188, d_year#1194, d_qoy#1198], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=893]\n                                       +- == Initial Plan ==\n                                          BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=1658]\n                                          +- Filter ((((isnotnull(d_qoy#1198) AND isnotnull(d_year#1194)) AND (d_qoy#1198 = 3)) AND (d_year#1194 = 2000)) AND isnotnull(d_date_sk#1188))\n                                             +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#1188,d_year#1194,d_qoy#1198] Batched: true, DataFilters: [isnotnull(d_qoy#1198), isnotnull(d_year#1194), (d_qoy#1198 = 3), (d_year#1194 = 2000), isnotnull..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_qoy), IsNotNull(d_year), EqualTo(d_qoy,3), EqualTo(d_year,2000), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int,d_qoy:int>\n      :              +- BroadcastQueryStage 2\n      :                 +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=893]\n      :                    +- *(3) Filter ((((isnotnull(d_qoy#1198) AND isnotnull(d_year#1194)) AND (d_qoy#1198 = 3)) AND (d_year#1194 = 2000)) AND isnotnull(d_date_sk#1188))\n      :                       +- *(3) ColumnarToRow\n      :                          +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#1188,d_year#1194,d_qoy#1198] Batched: true, DataFilters: [isnotnull(d_qoy#1198), isnotnull(d_year#1194), (d_qoy#1198 = 3), (d_year#1194 = 2000), isnotnull..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_qoy), IsNotNull(d_year), EqualTo(d_qoy,3), EqualTo(d_year,2000), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int,d_qoy:int>\n      +- Sort [ca_address_sk#1216 ASC NULLS FIRST], false, 0\n         +- ShuffleQueryStage 4\n            +- ReusedExchange [ca_address_sk#1216, ca_county#1223], Exchange hashpartitioning(ca_address_sk#1151, 200), ENSURE_REQUIREMENTS, [plan_id=871]\n"
      },
      "IM" : {
        "inputSizeInBytes" : 611141488,
        "inputRowCount" : 15257458
      },
      "InitialPartitionNum" : 200,
      "PD" : {
        "1" : [ 651413, 649746, 666260, 650139, 661138, 646456, 641277, 653342, 647770, 664034, 651117, 628302, 659374, 635245, 633874, 642956, 636952, 684288, 641153, 669942, 657398, 668359, 652095, 640299, 653053, 656084, 643838, 658981, 670335, 648163, 664092, 635245, 648556, 648432, 665242, 678160, 651971, 663699, 651532, 656852, 631649, 655049, 647770, 637413, 643445, 643502, 662624, 651117, 656420, 626010, 656420, 653735, 660745, 647377, 645602, 641277, 666048, 635581, 635188, 643109, 637345, 656007, 620438, 653974, 652095, 632896, 661935, 659277, 668063, 641277, 652095, 636952, 661723, 670585, 638199, 635581, 676281, 659767, 658223, 640884, 640424, 656420, 665366, 648163, 656027, 658981, 626134, 651413, 658299, 670642, 658789, 649534, 649410, 649353, 672521, 641738, 663699, 641738, 657667, 639177, 633466, 661723, 649803, 644231, 651971, 663017, 651413, 671956, 653466, 647770, 632167, 652095, 649410, 655442, 648556, 660352, 630300, 644816, 646456, 633874, 638928, 657906, 662231, 640884, 676281, 683560, 647481, 627324, 627951, 656084, 664677, 665109, 630920, 646792, 651117, 642467, 656420, 664581, 632234, 660917, 639906, 631525, 648163, 655345, 664677, 635188, 670585, 644423, 653678, 632503, 650867, 643838, 660352, 667631, 657398, 655049, 647088, 647770, 670881, 654071, 636952, 647770, 647770, 643445, 658981, 651117, 672349, 639513, 639513, 652095, 666028, 685735, 664677, 652364, 660745, 658396, 664427, 633874, 656420, 647185, 680060, 674910, 646063, 649410, 683310, 653974, 662328, 646792, 646399, 640760, 659374, 660621, 643838, 633998, 652488, 638592, 667631, 643838, 653073, 663306 ],

      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 16,
        "FinishedTasksNum" : 16,
        "FinishedTasksTotalTimeInMs" : 4633.0,
        "FinishedTasksDistributionInMs" : [ 192.0, 226.0, 259.0, 316.0, 558.0 ]
      },
      "QueryStageOptimizationId" : 13,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 20 ],
      "Objectives" : {
        "DurationInMs" : 5808,
        "TotalTasksDurationInMs" : 12766,
        "IOBytes" : {
          "Total" : 140404827,
          "Details" : {
            "IR" : 0,
            "IW" : 0,
            "SR" : 140225161,
            "SW" : 179666
          }
        }
      }
    },
    "16" : {
      "QSLogical" : {
        "operators" : {
          "0" : {
            "sign" : 1960698725,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 105392,
                "rowCount" : 1846
              },
              "compileTime" : {
                "sizeInBytes" : 79758,
                "rowCount" : 1899
              }
            },
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [ca_county#1375, d_qoy#1350, d_year#1346], [ca_county#1375, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#1328)),17,2) AS web_sales#811], HashAggregate(keys=[ca_county#1375, d_qoy#1350, d_year#1346], functions=[sum(UnscaledValue(ws_ext_sales_price#1328))]) "
          }
        },
        "links" : [ ],
        "rawPlan" : "LogicalQueryStage Aggregate [ca_county#1375, d_qoy#1350, d_year#1346], [ca_county#1375, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#1328)),17,2) AS web_sales#811], HashAggregate(keys=[ca_county#1375, d_qoy#1350, d_year#1346], functions=[sum(UnscaledValue(ws_ext_sales_price#1328))])\n"
      },
      "QSPhysical" : {
        "operators" : {
          "0" : {
            "sign" : 12862562,
            "className" : "org.apache.spark.sql.execution.aggregate.HashAggregateExec",
            "sizeInBytes" : 105392,
            "rowCount" : 1846,
            "isRuntime" : true,
            "predicate" : " (unknown) HashAggregate Input [4]: [ca_county#1375, d_qoy#1350, d_year#1346, sum#1399L] Keys [3]: [ca_county#1375, d_qoy#1350, d_year#1346] Functions [1]: [sum(UnscaledValue(ws_ext_sales_price#1328))] Aggregate Attributes [1]: [sum(UnscaledValue(ws_ext_sales_price#1328))#793L] Results [2]: [ca_county#1375, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#1328))#793L,17,2) AS web_sales#811] "
          },
          "1" : {
            "sign" : -59967335,
            "className" : "org.apache.spark.sql.execution.adaptive.ShuffleQueryStageExec",
            "sizeInBytes" : 79758,
            "rowCount" : 1899,
            "isRuntime" : false,
            "predicate" : " (unknown) ShuffleQueryStage Output [4]: [ca_county#1375, d_qoy#1350, d_year#1346, sum#1399L] Arguments: 27 "
          }
        },
        "links" : [ {
          "fromId" : 1,
          "fromName" : "ShuffleQueryStage",
          "toId" : 0,
          "toName" : "HashAggregate",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "HashAggregate(keys=[ca_county#1375, d_qoy#1350, d_year#1346], functions=[sum(UnscaledValue(ws_ext_sales_price#1328))], output=[ca_county#1375, web_sales#811])\n+- ShuffleQueryStage 27\n   +- Exchange hashpartitioning(ca_county#1375, d_qoy#1350, d_year#1346, 200), ENSURE_REQUIREMENTS, [plan_id=3404]\n      +- *(24) HashAggregate(keys=[ca_county#1375, d_qoy#1350, d_year#1346], functions=[partial_sum(UnscaledValue(ws_ext_sales_price#1328))], output=[ca_county#1375, d_qoy#1350, d_year#1346, sum#1399L])\n         +- *(24) Project [ws_ext_sales_price#1328, d_year#1346, d_qoy#1350, ca_county#1375]\n            +- *(24) SortMergeJoin [ws_bill_addr_sk#1312], [ca_address_sk#1368], Inner\n               :- *(22) Sort [ws_bill_addr_sk#1312 ASC NULLS FIRST], false, 0\n               :  +- AQEShuffleRead coalesced\n               :     +- ShuffleQueryStage 21\n               :        +- Exchange hashpartitioning(ws_bill_addr_sk#1312, 200), ENSURE_REQUIREMENTS, [plan_id=1746]\n               :           +- *(14) Project [ws_bill_addr_sk#1312, ws_ext_sales_price#1328, d_year#1346, d_qoy#1350]\n               :              +- *(14) BroadcastHashJoin [ws_sold_date_sk#1339], [d_date_sk#1340], Inner, BuildRight, false\n               :                 :- *(14) Filter isnotnull(ws_bill_addr_sk#1312)\n               :                 :  +- *(14) ColumnarToRow\n               :                 :     +- FileScan parquet spark_catalog.tpcds_100.web_sales[ws_bill_addr_sk#1312,ws_ext_sales_price#1328,ws_sold_date_sk#1339] Batched: true, DataFilters: [isnotnull(ws_bill_addr_sk#1312)], Format: Parquet, Location: InMemoryFileIndex(1823 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/web_sa..., PartitionFilters: [isnotnull(ws_sold_date_sk#1339), dynamicpruningexpression(ws_sold_date_sk#1339 IN dynamicpruning..., PushedFilters: [IsNotNull(ws_bill_addr_sk)], ReadSchema: struct<ws_bill_addr_sk:int,ws_ext_sales_price:decimal(7,2)>\n               :                 :           +- ReusedSubquery SubqueryBroadcast dynamicpruning#1383, 0, [d_date_sk#1188], [id=#1661]\n               :                 +- BroadcastQueryStage 17\n               :                    +- ReusedExchange [d_date_sk#1340, d_year#1346, d_qoy#1350], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=893]\n               +- *(23) Sort [ca_address_sk#1368 ASC NULLS FIRST], false, 0\n                  +- AQEShuffleRead coalesced\n                     +- ShuffleQueryStage 19\n                        +- ReusedExchange [ca_address_sk#1368, ca_county#1375], Exchange hashpartitioning(ca_address_sk#1151, 200), ENSURE_REQUIREMENTS, [plan_id=871]\n"
      },
      "IM" : {
        "inputSizeInBytes" : 105392,
        "inputRowCount" : 1846
      },
      "InitialPartitionNum" : 200,
      "PD" : {
        "8" : [ 251, 368, 276, 251, 276, 251, 276, 445, 368, 276, 276, 276, 228, 304, 228, 276, 156, 405, 228, 405, 334, 228, 405, 304, 490, 368, 405, 405, 276, 334, 368, 304, 334, 228, 405, 368, 276, 445, 251, 228, 334, 304, 276, 368, 276, 276, 304, 368, 368, 276, 276, 304, 276, 304, 304, 405, 490, 334, 405, 228, 368, 334, 304, 276, 368, 251, 251, 276, 189, 490, 251, 405, 276, 334, 334, 445, 251, 276, 490, 405, 368, 334, 251, 368, 304, 368, 405, 251, 334, 276, 334, 276, 368, 334, 405, 593, 251, 276, 251, 276, 304, 276, 207, 368, 445, 405, 304, 304, 304, 304, 304, 228, 445, 405, 276, 251, 228, 207, 405, 304, 539, 334, 405, 304, 405, 304, 368, 276, 368, 304, 368, 207, 171, 334, 368, 405, 251, 171, 334, 334, 276, 490, 276, 251, 405, 251, 304, 304, 304, 228, 304, 304, 251, 368, 334, 276, 276, 251, 189, 304, 405, 276, 304, 251, 251, 228, 368, 189, 334, 129, 368, 251, 304, 490, 368, 276, 304, 304, 368, 228, 228, 304, 276, 304, 445, 334, 276, 445, 445, 334, 405, 304, 334, 445, 251, 334, 276, 368, 251, 368 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 6,
        "FinishedTasksNum" : 3,
        "FinishedTasksTotalTimeInMs" : 5465.0,
        "FinishedTasksDistributionInMs" : [ 1580.0, 1580.0, 1689.0, 2196.0, 2196.0 ]
      },
      "QueryStageOptimizationId" : 16,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 27 ],
      "Objectives" : {
        "DurationInMs" : 100,
        "TotalTasksDurationInMs" : 93,
        "IOBytes" : {
          "Total" : 60588,
          "Details" : {
            "IR" : 0,
            "IW" : 0,
            "SR" : 60588,
            "SW" : 0
          }
        }
      }
    },
    "5" : {
      "QSLogical" : {
        "operators" : {
          "4" : {
            "sign" : -153323278,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 14972593792,
                "rowCount" : 71983624
              },
              "compileTime" : {
                "sizeInBytes" : 14972593792,
                "rowCount" : 71983624
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ws_sold_time_sk#1306, ws_ship_date_sk#1307, ws_item_sk#1308, ws_bill_customer_sk#1309, ws_bill_cdemo_sk#1310, ws_bill_hdemo_sk#1311, ws_bill_addr_sk#1312, ws_ship_customer_sk#1313, ws_ship_cdemo_sk#1314, ws_ship_hdemo_sk#1315, ws_ship_addr_sk#1316, ws_web_page_sk#1317, ws_web_site_sk#1318, ws_ship_mode_sk#1319, ws_warehouse_sk#1320, ws_promo_sk#1321, ws_order_number#1322L, ws_quantity#1323, ws_wholesale_cost#1324, ws_list_price#1325, ws_sales_price#1326, ws_ext_discount_amt#1327, ws_ext_sales_price#1328, ws_ext_wholesale_cost#1329, ... 10 more fields], `spark_catalog`.`tpcds_100`.`web_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "1" : {
            "sign" : 9579701,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 2501841780,
                "rowCount" : 69495605
              },
              "compileTime" : {
                "sizeInBytes" : 2501841780,
                "rowCount" : 69495605
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ws_sold_date_sk#1339 = d_date_sk#1340) "
          },
          "0" : {
            "sign" : 70758802,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 1945876940,
                "rowCount" : 69495605
              },
              "compileTime" : {
                "sizeInBytes" : 1945876940,
                "rowCount" : 69495605
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_bill_addr_sk#1312, ws_ext_sales_price#1328, d_year#1346, d_qoy#1350] "
          },
          "2" : {
            "sign" : -522238855,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 1727172072,
                "rowCount" : 71965503
              },
              "compileTime" : {
                "sizeInBytes" : 1727172072,
                "rowCount" : 71965503
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_bill_addr_sk#1312, ws_ext_sales_price#1328, ws_sold_date_sk#1339] "
          },
          "3" : {
            "sign" : -1177526971,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 14968824624,
                "rowCount" : 71965503
              },
              "compileTime" : {
                "sizeInBytes" : 14968824624,
                "rowCount" : 71965503
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(ws_sold_date_sk#1339) AND isnotnull(ws_bill_addr_sk#1312)) AND dynamicpruning#1387 [ws_sold_date_sk#1339]) "
          }
        },
        "links" : [ {
          "fromId" : 4,
          "fromName" : "LogicalRelation",
          "toId" : 3,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Filter",
          "toId" : 2,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Project",
          "toId" : 1,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Join",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [ws_bill_addr_sk#1312, ws_ext_sales_price#1328, d_year#1346, d_qoy#1350]\n+- Join Inner, (ws_sold_date_sk#1339 = d_date_sk#1340)\n   :- Project [ws_bill_addr_sk#1312, ws_ext_sales_price#1328, ws_sold_date_sk#1339]\n   :  +- Filter ((isnotnull(ws_sold_date_sk#1339) AND isnotnull(ws_bill_addr_sk#1312)) AND dynamicpruning#1387 [ws_sold_date_sk#1339])\n   :     :  +- Project [d_date_sk#1340, d_year#1346, d_qoy#1350]\n   :     :     +- Filter (((isnotnull(d_qoy#1350) AND isnotnull(d_year#1346)) AND ((d_qoy#1350 = 3) AND (d_year#1346 = 2000))) AND isnotnull(d_date_sk#1340))\n   :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#1340,d_date_id#1341,d_date#1342,d_month_seq#1343,d_week_seq#1344,d_quarter_seq#1345,d_year#1346,d_dow#1347,d_moy#1348,d_dom#1349,d_qoy#1350,d_fy_year#1351,d_fy_quarter_seq#1352,d_fy_week_seq#1353,d_day_name#1354,d_quarter_name#1355,d_holiday#1356,d_weekend#1357,d_following_holiday#1358,d_first_dom#1359,d_last_dom#1360,d_same_day_ly#1361,d_same_day_lq#1362,d_current_day#1363,... 4 more fields] parquet\n   :     +- Relation spark_catalog.tpcds_100.web_sales[ws_sold_time_sk#1306,ws_ship_date_sk#1307,ws_item_sk#1308,ws_bill_customer_sk#1309,ws_bill_cdemo_sk#1310,ws_bill_hdemo_sk#1311,ws_bill_addr_sk#1312,ws_ship_customer_sk#1313,ws_ship_cdemo_sk#1314,ws_ship_hdemo_sk#1315,ws_ship_addr_sk#1316,ws_web_page_sk#1317,ws_web_site_sk#1318,ws_ship_mode_sk#1319,ws_warehouse_sk#1320,ws_promo_sk#1321,ws_order_number#1322L,ws_quantity#1323,ws_wholesale_cost#1324,ws_list_price#1325,ws_sales_price#1326,ws_ext_discount_amt#1327,ws_ext_sales_price#1328,ws_ext_wholesale_cost#1329,... 10 more fields] parquet\n   +- Project [d_date_sk#1340, d_year#1346, d_qoy#1350]\n      +- Filter (((isnotnull(d_qoy#1350) AND isnotnull(d_year#1346)) AND ((d_qoy#1350 = 3) AND (d_year#1346 = 2000))) AND isnotnull(d_date_sk#1340))\n         +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#1340,d_date_id#1341,d_date#1342,d_month_seq#1343,d_week_seq#1344,d_quarter_seq#1345,d_year#1346,d_dow#1347,d_moy#1348,d_dom#1349,d_qoy#1350,d_fy_year#1351,d_fy_quarter_seq#1352,d_fy_week_seq#1353,d_day_name#1354,d_quarter_name#1355,d_holiday#1356,d_weekend#1357,d_following_holiday#1358,d_first_dom#1359,d_last_dom#1360,d_same_day_ly#1361,d_same_day_lq#1362,d_current_day#1363,... 4 more fields] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "4" : {
            "sign" : 612259241,
            "className" : "org.apache.spark.sql.execution.adaptive.BroadcastQueryStageExec",
            "sizeInBytes" : 1049312,
            "rowCount" : 92,
            "isRuntime" : true,
            "predicate" : " (unknown) BroadcastQueryStage Output [3]: [d_date_sk#1340, d_year#1346, d_qoy#1350] Arguments: 17 "
          },
          "1" : {
            "sign" : -1684308339,
            "className" : "org.apache.spark.sql.execution.joins.BroadcastHashJoinExec",
            "sizeInBytes" : 2501841780,
            "rowCount" : 69495605,
            "isRuntime" : false,
            "predicate" : " (unknown) BroadcastHashJoin Left keys [1]: [ws_sold_date_sk#1339] Right keys [1]: [d_date_sk#1340] Join type: Inner Join condition: None "
          },
          "0" : {
            "sign" : -1248264814,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 1945876940,
            "rowCount" : 69495605,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [4]: [ws_bill_addr_sk#1312, ws_ext_sales_price#1328, d_year#1346, d_qoy#1350] Input [6]: [ws_bill_addr_sk#1312, ws_ext_sales_price#1328, ws_sold_date_sk#1339, d_date_sk#1340, d_year#1346, d_qoy#1350] "
          },
          "2" : {
            "sign" : -1301611170,
            "className" : "org.apache.spark.sql.execution.FilterExec",
            "sizeInBytes" : 1727172072,
            "rowCount" : 71965503,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Input [3]: [ws_bill_addr_sk#1312, ws_ext_sales_price#1328, ws_sold_date_sk#1339] Condition : isnotnull(ws_bill_addr_sk#1312) "
          },
          "3" : {
            "sign" : 2084349064,
            "className" : "org.apache.spark.sql.execution.FileSourceScanExec",
            "sizeInBytes" : 1727172072,
            "rowCount" : 71965503,
            "isRuntime" : false,
            "predicate" : " (unknown) Scan parquet spark_catalog.tpcds_100.web_sales Output [3]: [ws_bill_addr_sk#1312, ws_ext_sales_price#1328, ws_sold_date_sk#1339] Batched: true Location: InMemoryFileIndex [hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/web_sales/ws_sold_date_sk=2450816, ... 1822 entries] PartitionFilters: [isnotnull(ws_sold_date_sk#1339), dynamicpruningexpression(ws_sold_date_sk#1339 IN dynamicpruning#1383)] PushedFilters: [IsNotNull(ws_bill_addr_sk)] ReadSchema: struct<ws_bill_addr_sk:int,ws_ext_sales_price:decimal(7,2)> "
          }
        },
        "links" : [ {
          "fromId" : 3,
          "fromName" : "Scan parquet spark_catalog.tpcds_100.web_sales",
          "toId" : 2,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Filter",
          "toId" : 1,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "BroadcastQueryStage",
          "toId" : 1,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "BroadcastHashJoin",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [ws_bill_addr_sk#1312, ws_ext_sales_price#1328, d_year#1346, d_qoy#1350]\n+- BroadcastHashJoin [ws_sold_date_sk#1339], [d_date_sk#1340], Inner, BuildRight, false\n   :- Filter isnotnull(ws_bill_addr_sk#1312)\n   :  +- FileScan parquet spark_catalog.tpcds_100.web_sales[ws_bill_addr_sk#1312,ws_ext_sales_price#1328,ws_sold_date_sk#1339] Batched: true, DataFilters: [isnotnull(ws_bill_addr_sk#1312)], Format: Parquet, Location: InMemoryFileIndex(1823 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/web_sa..., PartitionFilters: [isnotnull(ws_sold_date_sk#1339), dynamicpruningexpression(ws_sold_date_sk#1339 IN dynamicpruning..., PushedFilters: [IsNotNull(ws_bill_addr_sk)], ReadSchema: struct<ws_bill_addr_sk:int,ws_ext_sales_price:decimal(7,2)>\n   :        +- ReusedSubquery SubqueryBroadcast dynamicpruning#1383, 0, [d_date_sk#1188], [id=#1661]\n   +- BroadcastQueryStage 17\n      +- ReusedExchange [d_date_sk#1340, d_year#1346, d_qoy#1350], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=893]\n"
      },
      "IM" : {
        "inputSizeInBytes" : 1728221384,
        "inputRowCount" : 71965595
      },
      "InitialPartitionNum" : 0,
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 3,
        "FinishedTasksNum" : 4,
        "FinishedTasksTotalTimeInMs" : 6018.0,
        "FinishedTasksDistributionInMs" : [ 1392.0, 1426.0, 1566.0, 1634.0, 1634.0 ]
      },
      "QueryStageOptimizationId" : 5,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 7 ],
      "Objectives" : {
        "DurationInMs" : 4222,
        "TotalTasksDurationInMs" : 11552,
        "IOBytes" : {
          "Total" : 51898338,
          "Details" : {
            "IR" : 18942528,
            "IW" : 0,
            "SR" : 0,
            "SW" : 32955810
          }
        }
      }
    },
    "10" : {
      "QSLogical" : {
        "operators" : {
          "0" : {
            "sign" : 139609569,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 79758,
                "rowCount" : 1899
              },
              "compileTime" : {
                "sizeInBytes" : 79758,
                "rowCount" : 1899
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [ca_county#1158, d_qoy#1133, d_year#1129], [ca_county#1158, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#1114)),17,2) AS store_sales#799] "
          },
          "1" : {
            "sign" : -391345793,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 13761654400,
                "rowCount" : 275233088
              },
              "compileTime" : {
                "sizeInBytes" : 13761654400,
                "rowCount" : 275233088
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_ext_sales_price#1114, d_year#1129, d_qoy#1133, ca_county#1158] "
          },
          "2" : {
            "sign" : -1563434957,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 15963519104,
                "rowCount" : 275233088
              },
              "compileTime" : {
                "sizeInBytes" : 15963519104,
                "rowCount" : 275233088
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_addr_sk#1105 = ca_address_sk#1151) "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "Join",
          "toId" : 1,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Project",
          "toId" : 0,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Aggregate [ca_county#1158, d_qoy#1133, d_year#1129], [ca_county#1158, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#1114)),17,2) AS store_sales#799]\n+- Project [ss_ext_sales_price#1114, d_year#1129, d_qoy#1133, ca_county#1158]\n   +- Join Inner, (ss_addr_sk#1105 = ca_address_sk#1151)\n      :- Project [ss_addr_sk#1105, ss_ext_sales_price#1114, d_year#1129, d_qoy#1133]\n      :  +- Join Inner, (ss_sold_date_sk#1122 = d_date_sk#1123)\n      :     :- Project [ss_addr_sk#1105, ss_ext_sales_price#1114, ss_sold_date_sk#1122]\n      :     :  +- Filter ((isnotnull(ss_sold_date_sk#1122) AND isnotnull(ss_addr_sk#1105)) AND dynamicpruning#1382 [ss_sold_date_sk#1122])\n      :     :     :  +- Project [d_date_sk#1123, d_year#1129, d_qoy#1133]\n      :     :     :     +- Filter (((isnotnull(d_qoy#1133) AND isnotnull(d_year#1129)) AND ((d_qoy#1133 = 2) AND (d_year#1129 = 2000))) AND isnotnull(d_date_sk#1123))\n      :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#1123,d_date_id#1124,d_date#1125,d_month_seq#1126,d_week_seq#1127,d_quarter_seq#1128,d_year#1129,d_dow#1130,d_moy#1131,d_dom#1132,d_qoy#1133,d_fy_year#1134,d_fy_quarter_seq#1135,d_fy_week_seq#1136,d_day_name#1137,d_quarter_name#1138,d_holiday#1139,d_weekend#1140,d_following_holiday#1141,d_first_dom#1142,d_last_dom#1143,d_same_day_ly#1144,d_same_day_lq#1145,d_current_day#1146,... 4 more fields] parquet\n      :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#1100,ss_item_sk#1101,ss_customer_sk#1102,ss_cdemo_sk#1103,ss_hdemo_sk#1104,ss_addr_sk#1105,ss_store_sk#1106,ss_promo_sk#1107,ss_ticket_number#1108L,ss_quantity#1109,ss_wholesale_cost#1110,ss_list_price#1111,ss_sales_price#1112,ss_ext_discount_amt#1113,ss_ext_sales_price#1114,ss_ext_wholesale_cost#1115,ss_ext_list_price#1116,ss_ext_tax#1117,ss_coupon_amt#1118,ss_net_paid#1119,ss_net_paid_inc_tax#1120,ss_net_profit#1121,ss_sold_date_sk#1122] parquet\n      :     +- Project [d_date_sk#1123, d_year#1129, d_qoy#1133]\n      :        +- Filter (((isnotnull(d_qoy#1133) AND isnotnull(d_year#1129)) AND ((d_qoy#1133 = 2) AND (d_year#1129 = 2000))) AND isnotnull(d_date_sk#1123))\n      :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#1123,d_date_id#1124,d_date#1125,d_month_seq#1126,d_week_seq#1127,d_quarter_seq#1128,d_year#1129,d_dow#1130,d_moy#1131,d_dom#1132,d_qoy#1133,d_fy_year#1134,d_fy_quarter_seq#1135,d_fy_week_seq#1136,d_day_name#1137,d_quarter_name#1138,d_holiday#1139,d_weekend#1140,d_following_holiday#1141,d_first_dom#1142,d_last_dom#1143,d_same_day_ly#1144,d_same_day_lq#1145,d_current_day#1146,... 4 more fields] parquet\n      +- Project [ca_address_sk#1151, ca_county#1158]\n         +- Filter (isnotnull(ca_address_sk#1151) AND isnotnull(ca_county#1158))\n            +- Relation spark_catalog.tpcds_100.customer_address[ca_address_sk#1151,ca_address_id#1152,ca_street_number#1153,ca_street_name#1154,ca_street_type#1155,ca_suite_number#1156,ca_city#1157,ca_county#1158,ca_state#1159,ca_zip#1160,ca_country#1161,ca_gmt_offset#1162,ca_location_type#1163] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "4" : {
            "sign" : 9726729,
            "className" : "org.apache.spark.sql.execution.adaptive.ShuffleQueryStageExec",
            "sizeInBytes" : 308820920,
            "rowCount" : 7720523,
            "isRuntime" : true,
            "predicate" : " (unknown) ShuffleQueryStage Output [4]: [ss_addr_sk#1105, ss_ext_sales_price#1114, d_year#1129, d_qoy#1133] Arguments: 22 "
          },
          "5" : {
            "sign" : 2137116211,
            "className" : "org.apache.spark.sql.execution.SortExec",
            "sizeInBytes" : -1,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Input [2]: [ca_address_sk#1151, ca_county#1158] Arguments: [ca_address_sk#1151 ASC NULLS FIRST], false, 0 "
          },
          "6" : {
            "sign" : 262484276,
            "className" : "org.apache.spark.sql.execution.adaptive.ShuffleQueryStageExec",
            "sizeInBytes" : 39644968,
            "rowCount" : 970045,
            "isRuntime" : true,
            "predicate" : " (unknown) ShuffleQueryStage Output [2]: [ca_address_sk#1151, ca_county#1158] Arguments: 1 "
          },
          "1" : {
            "sign" : 1124839946,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 13761654400,
            "rowCount" : 275233088,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [4]: [ss_ext_sales_price#1114, d_year#1129, d_qoy#1133, ca_county#1158] Input [6]: [ss_addr_sk#1105, ss_ext_sales_price#1114, d_year#1129, d_qoy#1133, ca_address_sk#1151, ca_county#1158] "
          },
          "0" : {
            "sign" : 1883119502,
            "className" : "org.apache.spark.sql.execution.aggregate.HashAggregateExec",
            "sizeInBytes" : 79758,
            "rowCount" : 1899,
            "isRuntime" : false,
            "predicate" : " (unknown) HashAggregate Input [4]: [ss_ext_sales_price#1114, d_year#1129, d_qoy#1133, ca_county#1158] Keys [3]: [ca_county#1158, d_qoy#1133, d_year#1129] Functions [1]: [partial_sum(UnscaledValue(ss_ext_sales_price#1114))] Aggregate Attributes [1]: [sum#1388L] Results [4]: [ca_county#1158, d_qoy#1133, d_year#1129, sum#1389L] "
          },
          "2" : {
            "sign" : -330525572,
            "className" : "org.apache.spark.sql.execution.joins.SortMergeJoinExec",
            "sizeInBytes" : 15963519104,
            "rowCount" : 275233088,
            "isRuntime" : false,
            "predicate" : " (unknown) SortMergeJoin Left keys [1]: [ss_addr_sk#1105] Right keys [1]: [ca_address_sk#1151] Join type: Inner Join condition: None "
          },
          "3" : {
            "sign" : -1602380498,
            "className" : "org.apache.spark.sql.execution.SortExec",
            "sizeInBytes" : -1,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Input [4]: [ss_addr_sk#1105, ss_ext_sales_price#1114, d_year#1129, d_qoy#1133] Arguments: [ss_addr_sk#1105 ASC NULLS FIRST], false, 0 "
          }
        },
        "links" : [ {
          "fromId" : 4,
          "fromName" : "ShuffleQueryStage",
          "toId" : 3,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Sort",
          "toId" : 2,
          "toName" : "SortMergeJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "ShuffleQueryStage",
          "toId" : 5,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Sort",
          "toId" : 2,
          "toName" : "SortMergeJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "SortMergeJoin",
          "toId" : 1,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Project",
          "toId" : 0,
          "toName" : "HashAggregate",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "HashAggregate(keys=[ca_county#1158, d_qoy#1133, d_year#1129], functions=[partial_sum(UnscaledValue(ss_ext_sales_price#1114))], output=[ca_county#1158, d_qoy#1133, d_year#1129, sum#1389L])\n+- Project [ss_ext_sales_price#1114, d_year#1129, d_qoy#1133, ca_county#1158]\n   +- SortMergeJoin [ss_addr_sk#1105], [ca_address_sk#1151], Inner\n      :- Sort [ss_addr_sk#1105 ASC NULLS FIRST], false, 0\n      :  +- ShuffleQueryStage 22\n      :     +- Exchange hashpartitioning(ss_addr_sk#1105, 200), ENSURE_REQUIREMENTS, [plan_id=2201]\n      :        +- *(15) Project [ss_addr_sk#1105, ss_ext_sales_price#1114, d_year#1129, d_qoy#1133]\n      :           +- *(15) BroadcastHashJoin [ss_sold_date_sk#1122], [d_date_sk#1123], Inner, BuildRight, false\n      :              :- *(15) Filter isnotnull(ss_addr_sk#1105)\n      :              :  +- *(15) ColumnarToRow\n      :              :     +- FileScan parquet spark_catalog.tpcds_100.store_sales[ss_addr_sk#1105,ss_ext_sales_price#1114,ss_sold_date_sk#1122] Batched: true, DataFilters: [isnotnull(ss_addr_sk#1105)], Format: Parquet, Location: InMemoryFileIndex(1823 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/store_..., PartitionFilters: [isnotnull(ss_sold_date_sk#1122), dynamicpruningexpression(ss_sold_date_sk#1122 IN dynamicpruning..., PushedFilters: [IsNotNull(ss_addr_sk)], ReadSchema: struct<ss_addr_sk:int,ss_ext_sales_price:decimal(7,2)>\n      :              :           +- SubqueryBroadcast dynamicpruning#1382, 0, [d_date_sk#1123], [id=#2175]\n      :              :              +- AdaptiveSparkPlan isFinalPlan=true\n                                       +- == Final Plan ==\n                                          BroadcastQueryStage 1\n                                          +- ReusedExchange [d_date_sk#1123, d_year#1129, d_qoy#1133], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=852]\n                                       +- == Initial Plan ==\n                                          BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=2172]\n                                          +- Filter ((((isnotnull(d_qoy#1133) AND isnotnull(d_year#1129)) AND (d_qoy#1133 = 2)) AND (d_year#1129 = 2000)) AND isnotnull(d_date_sk#1123))\n                                             +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#1123,d_year#1129,d_qoy#1133] Batched: true, DataFilters: [isnotnull(d_qoy#1133), isnotnull(d_year#1129), (d_qoy#1133 = 2), (d_year#1129 = 2000), isnotnull..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_qoy), IsNotNull(d_year), EqualTo(d_qoy,2), EqualTo(d_year,2000), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int,d_qoy:int>\n      :              +- BroadcastQueryStage 0\n      :                 +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=852]\n      :                    +- *(1) Filter ((((isnotnull(d_qoy#1133) AND isnotnull(d_year#1129)) AND (d_qoy#1133 = 2)) AND (d_year#1129 = 2000)) AND isnotnull(d_date_sk#1123))\n      :                       +- *(1) ColumnarToRow\n      :                          +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#1123,d_year#1129,d_qoy#1133] Batched: true, DataFilters: [isnotnull(d_qoy#1133), isnotnull(d_year#1129), (d_qoy#1133 = 2), (d_year#1129 = 2000), isnotnull..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_qoy), IsNotNull(d_year), EqualTo(d_qoy,2), EqualTo(d_year,2000), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int,d_qoy:int>\n      +- Sort [ca_address_sk#1151 ASC NULLS FIRST], false, 0\n         +- ShuffleQueryStage 1\n            +- Exchange hashpartitioning(ca_address_sk#1151, 200), ENSURE_REQUIREMENTS, [plan_id=871]\n               +- *(2) Filter (isnotnull(ca_address_sk#1151) AND isnotnull(ca_county#1158))\n                  +- *(2) ColumnarToRow\n                     +- FileScan parquet spark_catalog.tpcds_100.customer_address[ca_address_sk#1151,ca_county#1158] Batched: true, DataFilters: [isnotnull(ca_address_sk#1151), isnotnull(ca_county#1158)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/customer_..., PartitionFilters: [], PushedFilters: [IsNotNull(ca_address_sk), IsNotNull(ca_county)], ReadSchema: struct<ca_address_sk:int,ca_county:string>\n"
      },
      "IM" : {
        "inputSizeInBytes" : 348465888,
        "inputRowCount" : 8690568
      },
      "InitialPartitionNum" : 200,
      "PD" : {
        "3" : [ 361258, 341463, 356503, 348047, 339918, 354646, 348385, 346393, 345682, 348791, 344264, 337923, 360629, 348029, 346233, 347601, 350249, 354928, 347826, 352850, 353114, 370730, 351655, 360146, 350267, 367453, 364246, 357290, 360535, 349937, 352487, 351434, 334967, 361527, 357910, 371950, 355469, 354646, 347011, 356394, 341928, 351567, 352690, 347920, 351337, 337880, 362790, 359147, 352629, 346578, 352690, 352825, 357486, 350470, 346808, 354910, 347100, 352469, 349215, 343259, 343462, 340100, 347986, 359368, 357290, 350470, 361164, 345606, 358614, 355909, 355777, 346194, 358200, 357736, 356148, 349365, 353231, 348392, 367936, 348941, 354096, 344775, 362154, 335074, 349012, 342131, 342131, 348047, 353910, 356503, 345180, 356866, 360130, 353028, 357486, 365053, 339715, 352745, 352825, 353265, 342960, 356183, 362755, 357087, 346974, 355113, 356394, 359165, 352485, 351029, 343792, 364189, 343670, 343665, 356724, 349513, 328713, 356189, 353028, 352629, 329609, 355045, 367936, 360978, 361926, 362976, 365825, 346172, 361527, 369935, 347232, 365028, 334010, 344754, 359792, 347293, 349078, 351876, 340736, 363661, 346879, 353673, 344791, 350140, 366587, 347623, 354174, 352690, 356615, 349513, 337996, 345809, 354377, 359259, 351054, 360130, 349417, 355131, 354172, 350470, 324861, 355715, 367232, 354801, 355045, 351858, 339329, 370580, 352360, 356298, 358113, 367027, 353470, 352850, 353875, 343462, 363808, 343952, 351875, 339352, 355822, 361164, 341793, 347717, 358113, 357853, 367715, 354486, 348047, 338450, 340702, 357087, 339022, 343683, 347986, 354174, 352487, 352706, 353452, 361588 ],

      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 16,
        "FinishedTasksNum" : 26,
        "FinishedTasksTotalTimeInMs" : 24676.0,
        "FinishedTasksDistributionInMs" : [ 155.0, 227.0, 408.0, 1337.0, 3541.0 ]
      },
      "QueryStageOptimizationId" : 10,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 14 ],
      "Objectives" : {
        "DurationInMs" : 6455,
        "TotalTasksDurationInMs" : 7185,
        "IOBytes" : {
          "Total" : 83274235,
          "Details" : {
            "IR" : 0,
            "IW" : 0,
            "SR" : 83154698,
            "SW" : 119537
          }
        }
      }
    },
    "21" : {
      "QSLogical" : {
        "operators" : {
          "4" : {
            "sign" : -975422872,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 3965879120638878135,
                "rowCount" : -1
              },
              "compileTime" : {
                "sizeInBytes" : 3965879120638878135,
                "rowCount" : -1
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ca_county#786, web_sales#750, web_sales#807] "
          },
          "5" : {
            "sign" : 174895293,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 5768551448202004560,
                "rowCount" : -1
              },
              "compileTime" : {
                "sizeInBytes" : 5768551448202004560,
                "rowCount" : -1
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ca_county#786 = ca_county#1299) "
          },
          "1" : {
            "sign" : 1053502124,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 26896838136200658810958663890,
                "rowCount" : -1
              },
              "compileTime" : {
                "sizeInBytes" : 26896838136200658810958663890,
                "rowCount" : -1
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (((ca_county#64 = ca_county#786) AND (CASE WHEN (web_sales#750 > 0.00) THEN (web_sales#807 / web_sales#750) END > CASE WHEN (store_sales#749 > 0.00) THEN (store_sales#799 / store_sales#749) END)) AND (CASE WHEN (web_sales#807 > 0.00) THEN (web_sales#811 / web_sales#807) END > CASE WHEN (store_sales#799 > 0.00) THEN (store_sales#803 / store_sales#799) END)) "
          },
          "0" : {
            "sign" : 1984213029,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 25820964610752632458520317334,
                "rowCount" : -1
              },
              "compileTime" : {
                "sizeInBytes" : 25820964610752632458520317334,
                "rowCount" : -1
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ca_county#64, d_year#35, (web_sales#807 / web_sales#750) AS web_q1_q2_increase#745, (store_sales#799 / store_sales#749) AS store_q1_q2_increase#746, (web_sales#811 / web_sales#807) AS web_q2_q3_increase#747, (store_sales#803 / store_sales#799) AS store_q2_q3_increase#748] "
          },
          "2" : {
            "sign" : -94356034,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 228446534986161297210405,
                "rowCount" : -1
              },
              "compileTime" : {
                "sizeInBytes" : 228446534986161297210405,
                "rowCount" : -1
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ca_county#786, web_sales#750, web_sales#807, web_sales#811] "
          },
          "3" : {
            "sign" : 826636433,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 316310586903915642291330,
                "rowCount" : -1
              },
              "compileTime" : {
                "sizeInBytes" : 316310586903915642291330,
                "rowCount" : -1
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ca_county#786 = ca_county#1375) "
          }
        },
        "links" : [ {
          "fromId" : 5,
          "fromName" : "Join",
          "toId" : 4,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Project",
          "toId" : 3,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Join",
          "toId" : 2,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Project",
          "toId" : 1,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Join",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [ca_county#64, d_year#35, (web_sales#807 / web_sales#750) AS web_q1_q2_increase#745, (store_sales#799 / store_sales#749) AS store_q1_q2_increase#746, (web_sales#811 / web_sales#807) AS web_q2_q3_increase#747, (store_sales#803 / store_sales#799) AS store_q2_q3_increase#748]\n+- Join Inner, (((ca_county#64 = ca_county#786) AND (CASE WHEN (web_sales#750 > 0.00) THEN (web_sales#807 / web_sales#750) END > CASE WHEN (store_sales#749 > 0.00) THEN (store_sales#799 / store_sales#749) END)) AND (CASE WHEN (web_sales#807 > 0.00) THEN (web_sales#811 / web_sales#807) END > CASE WHEN (store_sales#799 > 0.00) THEN (store_sales#803 / store_sales#799) END))\n   :- Project [store_sales#799, store_sales#803, ca_county#64, d_year#35, store_sales#749]\n   :  +- Join Inner, (ca_county#64 = ca_county#1158)\n   :     :- Project [ca_county#1158, store_sales#799, store_sales#803]\n   :     :  +- Join Inner, (ca_county#1158 = ca_county#1223)\n   :     :     :- LogicalQueryStage Aggregate [ca_county#1158, d_qoy#1133, d_year#1129], [ca_county#1158, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#1114)),17,2) AS store_sales#799], HashAggregate(keys=[ca_county#1158, d_qoy#1133, d_year#1129], functions=[sum(UnscaledValue(ss_ext_sales_price#1114))])\n   :     :     +- LogicalQueryStage Aggregate [ca_county#1223, d_qoy#1198, d_year#1194], [ca_county#1223, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#1179)),17,2) AS store_sales#803], HashAggregate(keys=[ca_county#1223, d_qoy#1198, d_year#1194], functions=[sum(UnscaledValue(ss_ext_sales_price#1179))])\n   :     +- LogicalQueryStage Aggregate [ca_county#64, d_qoy#39, d_year#35], [ca_county#64, d_year#35, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#20)),17,2) AS store_sales#749], HashAggregate(keys=[ca_county#64, d_qoy#39, d_year#35], functions=[sum(UnscaledValue(ss_ext_sales_price#20))])\n   +- Project [ca_county#786, web_sales#750, web_sales#807, web_sales#811]\n      +- Join Inner, (ca_county#786 = ca_county#1375)\n         :- Project [ca_county#786, web_sales#750, web_sales#807]\n         :  +- Join Inner, (ca_county#786 = ca_county#1299)\n         :     :- LogicalQueryStage Aggregate [ca_county#786, d_qoy#761, d_year#757], [ca_county#786, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#92)),17,2) AS web_sales#750], HashAggregate(keys=[ca_county#786, d_qoy#761, d_year#757], functions=[sum(UnscaledValue(ws_ext_sales_price#92))])\n         :     +- Aggregate [ca_county#1299, d_qoy#1274, d_year#1270], [ca_county#1299, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#1252)),17,2) AS web_sales#807]\n         :        +- Project [ws_ext_sales_price#1252, d_year#1270, d_qoy#1274, ca_county#1299]\n         :           +- Join Inner, (ws_bill_addr_sk#1236 = ca_address_sk#1292)\n         :              :- LogicalQueryStage Project [ws_bill_addr_sk#1236, ws_ext_sales_price#1252, d_year#1270, d_qoy#1274], ShuffleQueryStage 25\n         :              +- LogicalQueryStage Project [ca_address_sk#1292, ca_county#1299], ShuffleQueryStage 15\n         +- LogicalQueryStage Aggregate [ca_county#1375, d_qoy#1350, d_year#1346], [ca_county#1375, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#1328)),17,2) AS web_sales#811], HashAggregate(keys=[ca_county#1375, d_qoy#1350, d_year#1346], functions=[sum(UnscaledValue(ws_ext_sales_price#1328))])\n"
      },
      "QSPhysical" : {
        "operators" : {
          "8" : {
            "sign" : -696703540,
            "className" : "org.apache.spark.sql.execution.aggregate.HashAggregateExec",
            "sizeInBytes" : 105392,
            "rowCount" : 1846,
            "isRuntime" : true,
            "predicate" : " (unknown) HashAggregate Input [4]: [ca_county#1299, d_qoy#1274, d_year#1270, sum#1397L] Keys [3]: [ca_county#1299, d_qoy#1274, d_year#1270] Functions [1]: [sum(UnscaledValue(ws_ext_sales_price#1252))] Aggregate Attributes [1]: [sum(UnscaledValue(ws_ext_sales_price#1252))#793L] Results [2]: [ca_county#1299, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#1252))#793L,17,2) AS web_sales#807] "
          },
          "4" : {
            "sign" : 607468876,
            "className" : "org.apache.spark.sql.execution.joins.BroadcastHashJoinExec",
            "sizeInBytes" : 316310586903915642291330,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) BroadcastHashJoin Left keys [1]: [ca_county#786] Right keys [1]: [ca_county#1375] Join type: Inner Join condition: None "
          },
          "9" : {
            "sign" : -1625392079,
            "className" : "org.apache.spark.sql.execution.adaptive.ShuffleQueryStageExec",
            "sizeInBytes" : 72325678279320,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) ShuffleQueryStage Output [4]: [ca_county#1299, d_qoy#1274, d_year#1270, sum#1397L] Arguments: 31 "
          },
          "5" : {
            "sign" : -32379034,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 3965879120638878135,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [3]: [ca_county#786, web_sales#750, web_sales#807] Input [4]: [ca_county#786, web_sales#750, ca_county#1299, web_sales#807] "
          },
          "10" : {
            "sign" : -1220072226,
            "className" : "org.apache.spark.sql.execution.adaptive.BroadcastQueryStageExec",
            "sizeInBytes" : 33619968,
            "rowCount" : 1846,
            "isRuntime" : true,
            "predicate" : " (unknown) BroadcastQueryStage Output [2]: [ca_county#1375, web_sales#811] Arguments: 32 "
          },
          "6" : {
            "sign" : -796027013,
            "className" : "org.apache.spark.sql.execution.joins.BroadcastHashJoinExec",
            "sizeInBytes" : 5768551448202004560,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) BroadcastHashJoin Left keys [1]: [ca_county#786] Right keys [1]: [ca_county#1299] Join type: Inner Join condition: None "
          },
          "1" : {
            "sign" : -1260690011,
            "className" : "org.apache.spark.sql.execution.joins.BroadcastHashJoinExec",
            "sizeInBytes" : 26896838136200658810958663890,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) BroadcastHashJoin Left keys [1]: [ca_county#64] Right keys [1]: [ca_county#786] Join type: Inner Join condition: ((CASE WHEN (web_sales#750 > 0.00) THEN (web_sales#807 / web_sales#750) END > CASE WHEN (store_sales#749 > 0.00) THEN (store_sales#799 / store_sales#749) END) AND (CASE WHEN (web_sales#807 > 0.00) THEN (web_sales#811 / web_sales#807) END > CASE WHEN (store_sales#799 > 0.00) THEN (store_sales#803 / store_sales#799) END)) "
          },
          "0" : {
            "sign" : -1313640352,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 25820964610752632458520317334,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [6]: [ca_county#64, d_year#35, (web_sales#807 / web_sales#750) AS web_q1_q2_increase#745, (store_sales#799 / store_sales#749) AS store_q1_q2_increase#746, (web_sales#811 / web_sales#807) AS web_q2_q3_increase#747, (store_sales#803 / store_sales#799) AS store_q2_q3_increase#748] Input [9]: [store_sales#799, store_sales#803, ca_county#64, d_year#35, store_sales#749, ca_county#786, web_sales#750, web_sales#807, web_sales#811] "
          },
          "2" : {
            "sign" : -547831144,
            "className" : "org.apache.spark.sql.execution.adaptive.BroadcastQueryStageExec",
            "sizeInBytes" : 33619968,
            "rowCount" : 1846,
            "isRuntime" : true,
            "predicate" : " (unknown) BroadcastQueryStage Output [5]: [store_sales#799, store_sales#803, ca_county#64, d_year#35, store_sales#749] Arguments: 36 "
          },
          "7" : {
            "sign" : 1588073575,
            "className" : "org.apache.spark.sql.execution.adaptive.BroadcastQueryStageExec",
            "sizeInBytes" : 33619968,
            "rowCount" : 1846,
            "isRuntime" : true,
            "predicate" : " (unknown) BroadcastQueryStage Output [2]: [ca_county#786, web_sales#750] Arguments: 33 "
          },
          "3" : {
            "sign" : 915690895,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 228446534986161297210405,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [4]: [ca_county#786, web_sales#750, web_sales#807, web_sales#811] Input [5]: [ca_county#786, web_sales#750, web_sales#807, ca_county#1375, web_sales#811] "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "BroadcastQueryStage",
          "toId" : 1,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "BroadcastQueryStage",
          "toId" : 6,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "ShuffleQueryStage",
          "toId" : 8,
          "toName" : "HashAggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "HashAggregate",
          "toId" : 6,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "BroadcastHashJoin",
          "toId" : 5,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Project",
          "toId" : 4,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "BroadcastQueryStage",
          "toId" : 4,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "BroadcastHashJoin",
          "toId" : 3,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Project",
          "toId" : 1,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "BroadcastHashJoin",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [ca_county#64, d_year#35, (web_sales#807 / web_sales#750) AS web_q1_q2_increase#745, (store_sales#799 / store_sales#749) AS store_q1_q2_increase#746, (web_sales#811 / web_sales#807) AS web_q2_q3_increase#747, (store_sales#803 / store_sales#799) AS store_q2_q3_increase#748]\n+- BroadcastHashJoin [ca_county#64], [ca_county#786], Inner, BuildLeft, ((CASE WHEN (web_sales#750 > 0.00) THEN (web_sales#807 / web_sales#750) END > CASE WHEN (store_sales#749 > 0.00) THEN (store_sales#799 / store_sales#749) END) AND (CASE WHEN (web_sales#807 > 0.00) THEN (web_sales#811 / web_sales#807) END > CASE WHEN (store_sales#799 > 0.00) THEN (store_sales#803 / store_sales#799) END)), false\n   :- BroadcastQueryStage 36\n   :  +- BroadcastExchange HashedRelationBroadcastMode(List(input[2, string, true]),false), [plan_id=4958]\n   :     +- *(41) Project [store_sales#799, store_sales#803, ca_county#64, d_year#35, store_sales#749]\n   :        +- *(41) BroadcastHashJoin [ca_county#1158], [ca_county#64], Inner, BuildRight, false\n   :           :- *(41) Project [ca_county#1158, store_sales#799, store_sales#803]\n   :           :  +- *(41) BroadcastHashJoin [ca_county#1158], [ca_county#1223], Inner, BuildRight, false\n   :           :     :- *(41) HashAggregate(keys=[ca_county#1158, d_qoy#1133, d_year#1129], functions=[sum(UnscaledValue(ss_ext_sales_price#1114))], output=[ca_county#1158, store_sales#799])\n   :           :     :  +- AQEShuffleRead coalesced\n   :           :     :     +- ShuffleQueryStage 26\n   :           :     :        +- Exchange hashpartitioning(ca_county#1158, d_qoy#1133, d_year#1129, 200), ENSURE_REQUIREMENTS, [plan_id=3150]\n   :           :     :           +- *(21) HashAggregate(keys=[ca_county#1158, d_qoy#1133, d_year#1129], functions=[partial_sum(UnscaledValue(ss_ext_sales_price#1114))], output=[ca_county#1158, d_qoy#1133, d_year#1129, sum#1389L])\n   :           :     :              +- *(21) Project [ss_ext_sales_price#1114, d_year#1129, d_qoy#1133, ca_county#1158]\n   :           :     :                 +- *(21) SortMergeJoin [ss_addr_sk#1105], [ca_address_sk#1151], Inner\n   :           :     :                    :- *(19) Sort [ss_addr_sk#1105 ASC NULLS FIRST], false, 0\n   :           :     :                    :  +- AQEShuffleRead coalesced\n   :           :     :                    :     +- ShuffleQueryStage 22\n   :           :     :                    :        +- Exchange hashpartitioning(ss_addr_sk#1105, 200), ENSURE_REQUIREMENTS, [plan_id=2201]\n   :           :     :                    :           +- *(15) Project [ss_addr_sk#1105, ss_ext_sales_price#1114, d_year#1129, d_qoy#1133]\n   :           :     :                    :              +- *(15) BroadcastHashJoin [ss_sold_date_sk#1122], [d_date_sk#1123], Inner, BuildRight, false\n   :           :     :                    :                 :- *(15) Filter isnotnull(ss_addr_sk#1105)\n   :           :     :                    :                 :  +- *(15) ColumnarToRow\n   :           :     :                    :                 :     +- FileScan parquet spark_catalog.tpcds_100.store_sales[ss_addr_sk#1105,ss_ext_sales_price#1114,ss_sold_date_sk#1122] Batched: true, DataFilters: [isnotnull(ss_addr_sk#1105)], Format: Parquet, Location: InMemoryFileIndex(1823 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/store_..., PartitionFilters: [isnotnull(ss_sold_date_sk#1122), dynamicpruningexpression(ss_sold_date_sk#1122 IN dynamicpruning..., PushedFilters: [IsNotNull(ss_addr_sk)], ReadSchema: struct<ss_addr_sk:int,ss_ext_sales_price:decimal(7,2)>\n   :           :     :                    :                 :           +- SubqueryBroadcast dynamicpruning#1382, 0, [d_date_sk#1123], [id=#2175]\n   :           :     :                    :                 :              +- AdaptiveSparkPlan isFinalPlan=true\n                                                                              +- == Final Plan ==\n                                                                                 BroadcastQueryStage 1\n                                                                                 +- ReusedExchange [d_date_sk#1123, d_year#1129, d_qoy#1133], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=852]\n                                                                              +- == Initial Plan ==\n                                                                                 BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=2172]\n                                                                                 +- Filter ((((isnotnull(d_qoy#1133) AND isnotnull(d_year#1129)) AND (d_qoy#1133 = 2)) AND (d_year#1129 = 2000)) AND isnotnull(d_date_sk#1123))\n                                                                                    +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#1123,d_year#1129,d_qoy#1133] Batched: true, DataFilters: [isnotnull(d_qoy#1133), isnotnull(d_year#1129), (d_qoy#1133 = 2), (d_year#1129 = 2000), isnotnull..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_qoy), IsNotNull(d_year), EqualTo(d_qoy,2), EqualTo(d_year,2000), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int,d_qoy:int>\n   :           :     :                    :                 +- BroadcastQueryStage 0\n   :           :     :                    :                    +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=852]\n   :           :     :                    :                       +- *(1) Filter ((((isnotnull(d_qoy#1133) AND isnotnull(d_year#1129)) AND (d_qoy#1133 = 2)) AND (d_year#1129 = 2000)) AND isnotnull(d_date_sk#1123))\n   :           :     :                    :                          +- *(1) ColumnarToRow\n   :           :     :                    :                             +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#1123,d_year#1129,d_qoy#1133] Batched: true, DataFilters: [isnotnull(d_qoy#1133), isnotnull(d_year#1129), (d_qoy#1133 = 2), (d_year#1129 = 2000), isnotnull..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_qoy), IsNotNull(d_year), EqualTo(d_qoy,2), EqualTo(d_year,2000), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int,d_qoy:int>\n   :           :     :                    +- *(20) Sort [ca_address_sk#1151 ASC NULLS FIRST], false, 0\n   :           :     :                       +- AQEShuffleRead coalesced\n   :           :     :                          +- ShuffleQueryStage 1\n   :           :     :                             +- Exchange hashpartitioning(ca_address_sk#1151, 200), ENSURE_REQUIREMENTS, [plan_id=871]\n   :           :     :                                +- *(2) Filter (isnotnull(ca_address_sk#1151) AND isnotnull(ca_county#1158))\n   :           :     :                                   +- *(2) ColumnarToRow\n   :           :     :                                      +- FileScan parquet spark_catalog.tpcds_100.customer_address[ca_address_sk#1151,ca_county#1158] Batched: true, DataFilters: [isnotnull(ca_address_sk#1151), isnotnull(ca_county#1158)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/customer_..., PartitionFilters: [], PushedFilters: [IsNotNull(ca_address_sk), IsNotNull(ca_county)], ReadSchema: struct<ca_address_sk:int,ca_county:string>\n   :           :     +- BroadcastQueryStage 35\n   :           :        +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, string, true]),false), [plan_id=4802]\n   :           :           +- *(40) HashAggregate(keys=[ca_county#1223, d_qoy#1198, d_year#1194], functions=[sum(UnscaledValue(ss_ext_sales_price#1179))], output=[ca_county#1223, store_sales#803])\n   :           :              +- AQEShuffleRead coalesced\n   :           :                 +- ShuffleQueryStage 29\n   :           :                    +- Exchange hashpartitioning(ca_county#1223, d_qoy#1198, d_year#1194, 200), ENSURE_REQUIREMENTS, [plan_id=3835]\n   :           :                       +- *(30) HashAggregate(keys=[ca_county#1223, d_qoy#1198, d_year#1194], functions=[partial_sum(UnscaledValue(ss_ext_sales_price#1179))], output=[ca_county#1223, d_qoy#1198, d_year#1194, sum#1391L])\n   :           :                          +- *(30) Project [ss_ext_sales_price#1179, d_year#1194, d_qoy#1198, ca_county#1223]\n   :           :                             +- *(30) SortMergeJoin [ss_addr_sk#1170], [ca_address_sk#1216], Inner\n   :           :                                :- *(28) Sort [ss_addr_sk#1170 ASC NULLS FIRST], false, 0\n   :           :                                :  +- AQEShuffleRead coalesced\n   :           :                                :     +- ShuffleQueryStage 20\n   :           :                                :        +- Exchange hashpartitioning(ss_addr_sk#1170, 200), ENSURE_REQUIREMENTS, [plan_id=1687]\n   :           :                                :           +- *(13) Project [ss_addr_sk#1170, ss_ext_sales_price#1179, d_year#1194, d_qoy#1198]\n   :           :                                :              +- *(13) BroadcastHashJoin [ss_sold_date_sk#1187], [d_date_sk#1188], Inner, BuildRight, false\n   :           :                                :                 :- *(13) Filter isnotnull(ss_addr_sk#1170)\n   :           :                                :                 :  +- *(13) ColumnarToRow\n   :           :                                :                 :     +- FileScan parquet spark_catalog.tpcds_100.store_sales[ss_addr_sk#1170,ss_ext_sales_price#1179,ss_sold_date_sk#1187] Batched: true, DataFilters: [isnotnull(ss_addr_sk#1170)], Format: Parquet, Location: InMemoryFileIndex(1823 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/store_..., PartitionFilters: [isnotnull(ss_sold_date_sk#1187), dynamicpruningexpression(ss_sold_date_sk#1187 IN dynamicpruning..., PushedFilters: [IsNotNull(ss_addr_sk)], ReadSchema: struct<ss_addr_sk:int,ss_ext_sales_price:decimal(7,2)>\n   :           :                                :                 :           +- SubqueryBroadcast dynamicpruning#1383, 0, [d_date_sk#1188], [id=#1661]\n   :           :                                :                 :              +- AdaptiveSparkPlan isFinalPlan=true\n                                                                                    +- == Final Plan ==\n                                                                                       BroadcastQueryStage 1\n                                                                                       +- ReusedExchange [d_date_sk#1188, d_year#1194, d_qoy#1198], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=893]\n                                                                                    +- == Initial Plan ==\n                                                                                       BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=1658]\n                                                                                       +- Filter ((((isnotnull(d_qoy#1198) AND isnotnull(d_year#1194)) AND (d_qoy#1198 = 3)) AND (d_year#1194 = 2000)) AND isnotnull(d_date_sk#1188))\n                                                                                          +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#1188,d_year#1194,d_qoy#1198] Batched: true, DataFilters: [isnotnull(d_qoy#1198), isnotnull(d_year#1194), (d_qoy#1198 = 3), (d_year#1194 = 2000), isnotnull..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_qoy), IsNotNull(d_year), EqualTo(d_qoy,3), EqualTo(d_year,2000), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int,d_qoy:int>\n   :           :                                :                 +- BroadcastQueryStage 2\n   :           :                                :                    +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=893]\n   :           :                                :                       +- *(3) Filter ((((isnotnull(d_qoy#1198) AND isnotnull(d_year#1194)) AND (d_qoy#1198 = 3)) AND (d_year#1194 = 2000)) AND isnotnull(d_date_sk#1188))\n   :           :                                :                          +- *(3) ColumnarToRow\n   :           :                                :                             +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#1188,d_year#1194,d_qoy#1198] Batched: true, DataFilters: [isnotnull(d_qoy#1198), isnotnull(d_year#1194), (d_qoy#1198 = 3), (d_year#1194 = 2000), isnotnull..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_qoy), IsNotNull(d_year), EqualTo(d_qoy,3), EqualTo(d_year,2000), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int,d_qoy:int>\n   :           :                                +- *(29) Sort [ca_address_sk#1216 ASC NULLS FIRST], false, 0\n   :           :                                   +- AQEShuffleRead coalesced\n   :           :                                      +- ShuffleQueryStage 4\n   :           :                                         +- ReusedExchange [ca_address_sk#1216, ca_county#1223], Exchange hashpartitioning(ca_address_sk#1151, 200), ENSURE_REQUIREMENTS, [plan_id=871]\n   :           +- BroadcastQueryStage 34\n   :              +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, string, true]),false), [plan_id=4710]\n   :                 +- *(39) HashAggregate(keys=[ca_county#64, d_qoy#39, d_year#35], functions=[sum(UnscaledValue(ss_ext_sales_price#20))], output=[ca_county#64, d_year#35, store_sales#749])\n   :                    +- AQEShuffleRead coalesced\n   :                       +- ShuffleQueryStage 28\n   :                          +- Exchange hashpartitioning(ca_county#64, d_qoy#39, d_year#35, 200), ENSURE_REQUIREMENTS, [plan_id=3632]\n   :                             +- *(27) HashAggregate(keys=[ca_county#64, d_qoy#39, d_year#35], functions=[partial_sum(UnscaledValue(ss_ext_sales_price#20))], output=[ca_county#64, d_qoy#39, d_year#35, sum#1393L])\n   :                                +- *(27) Project [ss_ext_sales_price#20, d_year#35, d_qoy#39, ca_county#64]\n   :                                   +- *(27) SortMergeJoin [ss_addr_sk#11], [ca_address_sk#57], Inner\n   :                                      :- *(25) Sort [ss_addr_sk#11 ASC NULLS FIRST], false, 0\n   :                                      :  +- AQEShuffleRead coalesced\n   :                                      :     +- ShuffleQueryStage 23\n   :                                      :        +- Exchange hashpartitioning(ss_addr_sk#11, 200), ENSURE_REQUIREMENTS, [plan_id=2252]\n   :                                      :           +- *(16) Project [ss_addr_sk#11, ss_ext_sales_price#20, d_year#35, d_qoy#39]\n   :                                      :              +- *(16) BroadcastHashJoin [ss_sold_date_sk#28], [d_date_sk#29], Inner, BuildRight, false\n   :                                      :                 :- *(16) Filter isnotnull(ss_addr_sk#11)\n   :                                      :                 :  +- *(16) ColumnarToRow\n   :                                      :                 :     +- FileScan parquet spark_catalog.tpcds_100.store_sales[ss_addr_sk#11,ss_ext_sales_price#20,ss_sold_date_sk#28] Batched: true, DataFilters: [isnotnull(ss_addr_sk#11)], Format: Parquet, Location: InMemoryFileIndex(1823 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/store_..., PartitionFilters: [isnotnull(ss_sold_date_sk#28), dynamicpruningexpression(ss_sold_date_sk#28 IN dynamicpruning#1384)], PushedFilters: [IsNotNull(ss_addr_sk)], ReadSchema: struct<ss_addr_sk:int,ss_ext_sales_price:decimal(7,2)>\n   :                                      :                 :           +- SubqueryBroadcast dynamicpruning#1384, 0, [d_date_sk#29], [id=#2226]\n   :                                      :                 :              +- AdaptiveSparkPlan isFinalPlan=true\n                                                                              +- == Final Plan ==\n                                                                                 BroadcastQueryStage 1\n                                                                                 +- ReusedExchange [d_date_sk#29, d_year#35, d_qoy#39], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=939]\n                                                                              +- == Initial Plan ==\n                                                                                 BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=2223]\n                                                                                 +- Filter ((((isnotnull(d_qoy#39) AND isnotnull(d_year#35)) AND (d_qoy#39 = 1)) AND (d_year#35 = 2000)) AND isnotnull(d_date_sk#29))\n                                                                                    +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#29,d_year#35,d_qoy#39] Batched: true, DataFilters: [isnotnull(d_qoy#39), isnotnull(d_year#35), (d_qoy#39 = 1), (d_year#35 = 2000), isnotnull(d_date_..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_qoy), IsNotNull(d_year), EqualTo(d_qoy,1), EqualTo(d_year,2000), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int,d_qoy:int>\n   :                                      :                 +- BroadcastQueryStage 5\n   :                                      :                    +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=939]\n   :                                      :                       +- *(5) Filter ((((isnotnull(d_qoy#39) AND isnotnull(d_year#35)) AND (d_qoy#39 = 1)) AND (d_year#35 = 2000)) AND isnotnull(d_date_sk#29))\n   :                                      :                          +- *(5) ColumnarToRow\n   :                                      :                             +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#29,d_year#35,d_qoy#39] Batched: true, DataFilters: [isnotnull(d_qoy#39), isnotnull(d_year#35), (d_qoy#39 = 1), (d_year#35 = 2000), isnotnull(d_date_..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_qoy), IsNotNull(d_year), EqualTo(d_qoy,1), EqualTo(d_year,2000), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int,d_qoy:int>\n   :                                      +- *(26) Sort [ca_address_sk#57 ASC NULLS FIRST], false, 0\n   :                                         +- AQEShuffleRead coalesced\n   :                                            +- ShuffleQueryStage 7\n   :                                               +- ReusedExchange [ca_address_sk#57, ca_county#64], Exchange hashpartitioning(ca_address_sk#1151, 200), ENSURE_REQUIREMENTS, [plan_id=871]\n   +- Project [ca_county#786, web_sales#750, web_sales#807, web_sales#811]\n      +- BroadcastHashJoin [ca_county#786], [ca_county#1375], Inner, BuildRight, false\n         :- Project [ca_county#786, web_sales#750, web_sales#807]\n         :  +- BroadcastHashJoin [ca_county#786], [ca_county#1299], Inner, BuildLeft, false\n         :     :- BroadcastQueryStage 33\n         :     :  +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, string, true]),false), [plan_id=4612]\n         :     :     +- *(38) HashAggregate(keys=[ca_county#786, d_qoy#761, d_year#757], functions=[sum(UnscaledValue(ws_ext_sales_price#92))], output=[ca_county#786, web_sales#750])\n         :     :        +- AQEShuffleRead coalesced\n         :     :           +- ShuffleQueryStage 30\n         :     :              +- Exchange hashpartitioning(ca_county#786, d_qoy#761, d_year#757, 200), ENSURE_REQUIREMENTS, [plan_id=4019]\n         :     :                 +- *(33) HashAggregate(keys=[ca_county#786, d_qoy#761, d_year#757], functions=[partial_sum(UnscaledValue(ws_ext_sales_price#92))], output=[ca_county#786, d_qoy#761, d_year#757, sum#1395L])\n         :     :                    +- *(33) Project [ws_ext_sales_price#92, d_year#757, d_qoy#761, ca_county#786]\n         :     :                       +- *(33) SortMergeJoin [ws_bill_addr_sk#76], [ca_address_sk#779], Inner\n         :     :                          :- *(31) Sort [ws_bill_addr_sk#76 ASC NULLS FIRST], false, 0\n         :     :                          :  +- AQEShuffleRead coalesced\n         :     :                          :     +- ShuffleQueryStage 24\n         :     :                          :        +- Exchange hashpartitioning(ws_bill_addr_sk#76, 200), ENSURE_REQUIREMENTS, [plan_id=2309]\n         :     :                          :           +- *(17) Project [ws_bill_addr_sk#76, ws_ext_sales_price#92, d_year#757, d_qoy#761]\n         :     :                          :              +- *(17) BroadcastHashJoin [ws_sold_date_sk#103], [d_date_sk#751], Inner, BuildRight, false\n         :     :                          :                 :- *(17) Filter isnotnull(ws_bill_addr_sk#76)\n         :     :                          :                 :  +- *(17) ColumnarToRow\n         :     :                          :                 :     +- FileScan parquet spark_catalog.tpcds_100.web_sales[ws_bill_addr_sk#76,ws_ext_sales_price#92,ws_sold_date_sk#103] Batched: true, DataFilters: [isnotnull(ws_bill_addr_sk#76)], Format: Parquet, Location: InMemoryFileIndex(1823 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/web_sa..., PartitionFilters: [isnotnull(ws_sold_date_sk#103), dynamicpruningexpression(ws_sold_date_sk#103 IN dynamicpruning#1..., PushedFilters: [IsNotNull(ws_bill_addr_sk)], ReadSchema: struct<ws_bill_addr_sk:int,ws_ext_sales_price:decimal(7,2)>\n         :     :                          :                 :           +- ReusedSubquery SubqueryBroadcast dynamicpruning#1384, 0, [d_date_sk#29], [id=#2226]\n         :     :                          :                 +- BroadcastQueryStage 9\n         :     :                          :                    +- ReusedExchange [d_date_sk#751, d_year#757, d_qoy#761], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=939]\n         :     :                          +- *(32) Sort [ca_address_sk#779 ASC NULLS FIRST], false, 0\n         :     :                             +- AQEShuffleRead coalesced\n         :     :                                +- ShuffleQueryStage 11\n         :     :                                   +- ReusedExchange [ca_address_sk#779, ca_county#786], Exchange hashpartitioning(ca_address_sk#1151, 200), ENSURE_REQUIREMENTS, [plan_id=871]\n         :     +- HashAggregate(keys=[ca_county#1299, d_qoy#1274, d_year#1270], functions=[sum(UnscaledValue(ws_ext_sales_price#1252))], output=[ca_county#1299, web_sales#807])\n         :        +- ShuffleQueryStage 31\n         :           +- Exchange hashpartitioning(ca_county#1299, d_qoy#1274, d_year#1270, 200), ENSURE_REQUIREMENTS, [plan_id=4203]\n         :              +- *(36) HashAggregate(keys=[ca_county#1299, d_qoy#1274, d_year#1270], functions=[partial_sum(UnscaledValue(ws_ext_sales_price#1252))], output=[ca_county#1299, d_qoy#1274, d_year#1270, sum#1397L])\n         :                 +- *(36) Project [ws_ext_sales_price#1252, d_year#1270, d_qoy#1274, ca_county#1299]\n         :                    +- *(36) SortMergeJoin [ws_bill_addr_sk#1236], [ca_address_sk#1292], Inner\n         :                       :- *(34) Sort [ws_bill_addr_sk#1236 ASC NULLS FIRST], false, 0\n         :                       :  +- AQEShuffleRead coalesced\n         :                       :     +- ShuffleQueryStage 25\n         :                       :        +- Exchange hashpartitioning(ws_bill_addr_sk#1236, 200), ENSURE_REQUIREMENTS, [plan_id=2363]\n         :                       :           +- *(18) Project [ws_bill_addr_sk#1236, ws_ext_sales_price#1252, d_year#1270, d_qoy#1274]\n         :                       :              +- *(18) BroadcastHashJoin [ws_sold_date_sk#1263], [d_date_sk#1264], Inner, BuildRight, false\n         :                       :                 :- *(18) Filter isnotnull(ws_bill_addr_sk#1236)\n         :                       :                 :  +- *(18) ColumnarToRow\n         :                       :                 :     +- FileScan parquet spark_catalog.tpcds_100.web_sales[ws_bill_addr_sk#1236,ws_ext_sales_price#1252,ws_sold_date_sk#1263] Batched: true, DataFilters: [isnotnull(ws_bill_addr_sk#1236)], Format: Parquet, Location: InMemoryFileIndex(1823 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/web_sa..., PartitionFilters: [isnotnull(ws_sold_date_sk#1263), dynamicpruningexpression(ws_sold_date_sk#1263 IN dynamicpruning..., PushedFilters: [IsNotNull(ws_bill_addr_sk)], ReadSchema: struct<ws_bill_addr_sk:int,ws_ext_sales_price:decimal(7,2)>\n         :                       :                 :           +- ReusedSubquery SubqueryBroadcast dynamicpruning#1382, 0, [d_date_sk#1123], [id=#2175]\n         :                       :                 +- BroadcastQueryStage 13\n         :                       :                    +- ReusedExchange [d_date_sk#1264, d_year#1270, d_qoy#1274], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=852]\n         :                       +- *(35) Sort [ca_address_sk#1292 ASC NULLS FIRST], false, 0\n         :                          +- AQEShuffleRead coalesced\n         :                             +- ShuffleQueryStage 15\n         :                                +- ReusedExchange [ca_address_sk#1292, ca_county#1299], Exchange hashpartitioning(ca_address_sk#1151, 200), ENSURE_REQUIREMENTS, [plan_id=871]\n         +- BroadcastQueryStage 32\n            +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, string, true]),false), [plan_id=4322]\n               +- *(37) HashAggregate(keys=[ca_county#1375, d_qoy#1350, d_year#1346], functions=[sum(UnscaledValue(ws_ext_sales_price#1328))], output=[ca_county#1375, web_sales#811])\n                  +- AQEShuffleRead coalesced\n                     +- ShuffleQueryStage 27\n                        +- Exchange hashpartitioning(ca_county#1375, d_qoy#1350, d_year#1346, 200), ENSURE_REQUIREMENTS, [plan_id=3404]\n                           +- *(24) HashAggregate(keys=[ca_county#1375, d_qoy#1350, d_year#1346], functions=[partial_sum(UnscaledValue(ws_ext_sales_price#1328))], output=[ca_county#1375, d_qoy#1350, d_year#1346, sum#1399L])\n                              +- *(24) Project [ws_ext_sales_price#1328, d_year#1346, d_qoy#1350, ca_county#1375]\n                                 +- *(24) SortMergeJoin [ws_bill_addr_sk#1312], [ca_address_sk#1368], Inner\n                                    :- *(22) Sort [ws_bill_addr_sk#1312 ASC NULLS FIRST], false, 0\n                                    :  +- AQEShuffleRead coalesced\n                                    :     +- ShuffleQueryStage 21\n                                    :        +- Exchange hashpartitioning(ws_bill_addr_sk#1312, 200), ENSURE_REQUIREMENTS, [plan_id=1746]\n                                    :           +- *(14) Project [ws_bill_addr_sk#1312, ws_ext_sales_price#1328, d_year#1346, d_qoy#1350]\n                                    :              +- *(14) BroadcastHashJoin [ws_sold_date_sk#1339], [d_date_sk#1340], Inner, BuildRight, false\n                                    :                 :- *(14) Filter isnotnull(ws_bill_addr_sk#1312)\n                                    :                 :  +- *(14) ColumnarToRow\n                                    :                 :     +- FileScan parquet spark_catalog.tpcds_100.web_sales[ws_bill_addr_sk#1312,ws_ext_sales_price#1328,ws_sold_date_sk#1339] Batched: true, DataFilters: [isnotnull(ws_bill_addr_sk#1312)], Format: Parquet, Location: InMemoryFileIndex(1823 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/web_sa..., PartitionFilters: [isnotnull(ws_sold_date_sk#1339), dynamicpruningexpression(ws_sold_date_sk#1339 IN dynamicpruning..., PushedFilters: [IsNotNull(ws_bill_addr_sk)], ReadSchema: struct<ws_bill_addr_sk:int,ws_ext_sales_price:decimal(7,2)>\n                                    :                 :           +- ReusedSubquery SubqueryBroadcast dynamicpruning#1383, 0, [d_date_sk#1188], [id=#1661]\n                                    :                 +- BroadcastQueryStage 17\n                                    :                    +- ReusedExchange [d_date_sk#1340, d_year#1346, d_qoy#1350], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=893]\n                                    +- *(23) Sort [ca_address_sk#1368 ASC NULLS FIRST], false, 0\n                                       +- AQEShuffleRead coalesced\n                                          +- ShuffleQueryStage 19\n                                             +- ReusedExchange [ca_address_sk#1368, ca_county#1375], Exchange hashpartitioning(ca_address_sk#1151, 200), ENSURE_REQUIREMENTS, [plan_id=871]\n"
      },
      "IM" : {
        "inputSizeInBytes" : 100965296,
        "inputRowCount" : 7384
      },
      "InitialPartitionNum" : 200,
      "PD" : {
        "12" : [ 228, 368, 276, 189, 368, 228, 334, 334, 334, 405, 334, 171, 368, 539, 304, 368, 405, 251, 304, 207, 368, 207, 207, 304, 156, 304, 368, 228, 539, 368, 405, 276, 445, 304, 304, 251, 251, 304, 228, 490, 334, 304, 228, 276, 251, 156, 251, 251, 251, 304, 228, 304, 228, 334, 276, 334, 276, 490, 405, 304, 445, 207, 304, 304, 276, 304, 368, 405, 276, 276, 251, 539, 368, 251, 445, 251, 334, 304, 334, 304, 368, 368, 276, 228, 304, 334, 276, 368, 251, 405, 251, 251, 228, 445, 228, 405, 405, 276, 334, 334, 334, 334, 304, 368, 405, 368, 304, 304, 334, 304, 490, 228, 405, 405, 251, 251, 276, 304, 304, 156, 405, 276, 304, 304, 368, 368, 334, 445, 228, 405, 334, 405, 251, 251, 334, 276, 276, 445, 334, 304, 490, 276, 228, 304, 304, 251, 304, 405, 251, 276, 276, 368, 276, 189, 207, 251, 251, 207, 304, 276, 405, 405, 490, 490, 405, 405, 142, 334, 304, 405, 334, 334, 276, 304, 276, 276, 276, 368, 207, 207, 304, 251, 276, 368, 251, 276, 445, 228, 304, 334, 304, 368, 207, 368, 251, 368, 334, 334, 189, 368 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 21,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 43, 47 ],
      "Objectives" : {
        "DurationInMs" : 947,
        "TotalTasksDurationInMs" : 915,
        "IOBytes" : {
          "Total" : 137287,
          "Details" : {
            "IR" : 0,
            "IW" : 0,
            "SR" : 119606,
            "SW" : 17681
          }
        }
      }
    },
    "6" : {
      "QSLogical" : {
        "operators" : {
          "4" : {
            "sign" : 397751215,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 41806893656,
                "rowCount" : 275045353
              },
              "compileTime" : {
                "sizeInBytes" : 41806893656,
                "rowCount" : 275045353
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#1100, ss_item_sk#1101, ss_customer_sk#1102, ss_cdemo_sk#1103, ss_hdemo_sk#1104, ss_addr_sk#1105, ss_store_sk#1106, ss_promo_sk#1107, ss_ticket_number#1108L, ss_quantity#1109, ss_wholesale_cost#1110, ss_list_price#1111, ss_sales_price#1112, ss_ext_discount_amt#1113, ss_ext_sales_price#1114, ss_ext_wholesale_cost#1115, ss_ext_list_price#1116, ss_ext_tax#1117, ss_coupon_amt#1118, ss_net_paid#1119, ss_net_paid_inc_tax#1120, ss_net_profit#1121, ss_sold_date_sk#1122], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "1" : {
            "sign" : 1933541801,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 9559461060,
                "rowCount" : 265540585
              },
              "compileTime" : {
                "sizeInBytes" : 9559461060,
                "rowCount" : 265540585
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#1122 = d_date_sk#1123) "
          },
          "0" : {
            "sign" : 1552176443,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 7435136380,
                "rowCount" : 265540585
              },
              "compileTime" : {
                "sizeInBytes" : 7435136380,
                "rowCount" : 265540585
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_addr_sk#1105, ss_ext_sales_price#1114, d_year#1129, d_qoy#1133] "
          },
          "2" : {
            "sign" : -1915070295,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 6304008672,
                "rowCount" : 262667028
              },
              "compileTime" : {
                "sizeInBytes" : 6304008672,
                "rowCount" : 262667028
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_addr_sk#1105, ss_ext_sales_price#1114, ss_sold_date_sk#1122] "
          },
          "3" : {
            "sign" : -363767170,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 39925388256,
                "rowCount" : 262667028
              },
              "compileTime" : {
                "sizeInBytes" : 39925388256,
                "rowCount" : 262667028
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(ss_sold_date_sk#1122) AND isnotnull(ss_addr_sk#1105)) AND dynamicpruning#1382 [ss_sold_date_sk#1122]) "
          }
        },
        "links" : [ {
          "fromId" : 4,
          "fromName" : "LogicalRelation",
          "toId" : 3,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Filter",
          "toId" : 2,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Project",
          "toId" : 1,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Join",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [ss_addr_sk#1105, ss_ext_sales_price#1114, d_year#1129, d_qoy#1133]\n+- Join Inner, (ss_sold_date_sk#1122 = d_date_sk#1123)\n   :- Project [ss_addr_sk#1105, ss_ext_sales_price#1114, ss_sold_date_sk#1122]\n   :  +- Filter ((isnotnull(ss_sold_date_sk#1122) AND isnotnull(ss_addr_sk#1105)) AND dynamicpruning#1382 [ss_sold_date_sk#1122])\n   :     :  +- Project [d_date_sk#1123, d_year#1129, d_qoy#1133]\n   :     :     +- Filter (((isnotnull(d_qoy#1133) AND isnotnull(d_year#1129)) AND ((d_qoy#1133 = 2) AND (d_year#1129 = 2000))) AND isnotnull(d_date_sk#1123))\n   :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#1123,d_date_id#1124,d_date#1125,d_month_seq#1126,d_week_seq#1127,d_quarter_seq#1128,d_year#1129,d_dow#1130,d_moy#1131,d_dom#1132,d_qoy#1133,d_fy_year#1134,d_fy_quarter_seq#1135,d_fy_week_seq#1136,d_day_name#1137,d_quarter_name#1138,d_holiday#1139,d_weekend#1140,d_following_holiday#1141,d_first_dom#1142,d_last_dom#1143,d_same_day_ly#1144,d_same_day_lq#1145,d_current_day#1146,... 4 more fields] parquet\n   :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#1100,ss_item_sk#1101,ss_customer_sk#1102,ss_cdemo_sk#1103,ss_hdemo_sk#1104,ss_addr_sk#1105,ss_store_sk#1106,ss_promo_sk#1107,ss_ticket_number#1108L,ss_quantity#1109,ss_wholesale_cost#1110,ss_list_price#1111,ss_sales_price#1112,ss_ext_discount_amt#1113,ss_ext_sales_price#1114,ss_ext_wholesale_cost#1115,ss_ext_list_price#1116,ss_ext_tax#1117,ss_coupon_amt#1118,ss_net_paid#1119,ss_net_paid_inc_tax#1120,ss_net_profit#1121,ss_sold_date_sk#1122] parquet\n   +- Project [d_date_sk#1123, d_year#1129, d_qoy#1133]\n      +- Filter (((isnotnull(d_qoy#1133) AND isnotnull(d_year#1129)) AND ((d_qoy#1133 = 2) AND (d_year#1129 = 2000))) AND isnotnull(d_date_sk#1123))\n         +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#1123,d_date_id#1124,d_date#1125,d_month_seq#1126,d_week_seq#1127,d_quarter_seq#1128,d_year#1129,d_dow#1130,d_moy#1131,d_dom#1132,d_qoy#1133,d_fy_year#1134,d_fy_quarter_seq#1135,d_fy_week_seq#1136,d_day_name#1137,d_quarter_name#1138,d_holiday#1139,d_weekend#1140,d_following_holiday#1141,d_first_dom#1142,d_last_dom#1143,d_same_day_ly#1144,d_same_day_lq#1145,d_current_day#1146,... 4 more fields] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "4" : {
            "sign" : 291964467,
            "className" : "org.apache.spark.sql.execution.adaptive.BroadcastQueryStageExec",
            "sizeInBytes" : 1049304,
            "rowCount" : 91,
            "isRuntime" : true,
            "predicate" : " (unknown) BroadcastQueryStage Output [3]: [d_date_sk#1123, d_year#1129, d_qoy#1133] Arguments: 0 "
          },
          "1" : {
            "sign" : 1471735728,
            "className" : "org.apache.spark.sql.execution.joins.BroadcastHashJoinExec",
            "sizeInBytes" : 9559461060,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) BroadcastHashJoin Left keys [1]: [ss_sold_date_sk#1122] Right keys [1]: [d_date_sk#1123] Join type: Inner Join condition: None "
          },
          "0" : {
            "sign" : -730268250,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 7435136380,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [4]: [ss_addr_sk#1105, ss_ext_sales_price#1114, d_year#1129, d_qoy#1133] Input [6]: [ss_addr_sk#1105, ss_ext_sales_price#1114, ss_sold_date_sk#1122, d_date_sk#1123, d_year#1129, d_qoy#1133] "
          },
          "2" : {
            "sign" : -301919078,
            "className" : "org.apache.spark.sql.execution.FilterExec",
            "sizeInBytes" : 6304008672,
            "rowCount" : 262667028,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Input [3]: [ss_addr_sk#1105, ss_ext_sales_price#1114, ss_sold_date_sk#1122] Condition : isnotnull(ss_addr_sk#1105) "
          },
          "3" : {
            "sign" : -1522965186,
            "className" : "org.apache.spark.sql.execution.FileSourceScanExec",
            "sizeInBytes" : 6304008672,
            "rowCount" : 262667028,
            "isRuntime" : false,
            "predicate" : " (unknown) Scan parquet spark_catalog.tpcds_100.store_sales Output [3]: [ss_addr_sk#1105, ss_ext_sales_price#1114, ss_sold_date_sk#1122] Batched: true Location: InMemoryFileIndex [hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/store_sales/ss_sold_date_sk=2450816, ... 1822 entries] PartitionFilters: [isnotnull(ss_sold_date_sk#1122), dynamicpruningexpression(ss_sold_date_sk#1122 IN dynamicpruning#1382)] PushedFilters: [IsNotNull(ss_addr_sk)] ReadSchema: struct<ss_addr_sk:int,ss_ext_sales_price:decimal(7,2)> "
          }
        },
        "links" : [ {
          "fromId" : 3,
          "fromName" : "Scan parquet spark_catalog.tpcds_100.store_sales",
          "toId" : 2,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Filter",
          "toId" : 1,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "BroadcastQueryStage",
          "toId" : 1,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "BroadcastHashJoin",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [ss_addr_sk#1105, ss_ext_sales_price#1114, d_year#1129, d_qoy#1133]\n+- BroadcastHashJoin [ss_sold_date_sk#1122], [d_date_sk#1123], Inner, BuildRight, false\n   :- Filter isnotnull(ss_addr_sk#1105)\n   :  +- FileScan parquet spark_catalog.tpcds_100.store_sales[ss_addr_sk#1105,ss_ext_sales_price#1114,ss_sold_date_sk#1122] Batched: true, DataFilters: [isnotnull(ss_addr_sk#1105)], Format: Parquet, Location: InMemoryFileIndex(1823 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/store_..., PartitionFilters: [isnotnull(ss_sold_date_sk#1122), dynamicpruningexpression(ss_sold_date_sk#1122 IN dynamicpruning..., PushedFilters: [IsNotNull(ss_addr_sk)], ReadSchema: struct<ss_addr_sk:int,ss_ext_sales_price:decimal(7,2)>\n   :        +- SubqueryBroadcast dynamicpruning#1382, 0, [d_date_sk#1123], [id=#2175]\n   :           +- AdaptiveSparkPlan isFinalPlan=false\n   :              +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=2172]\n   :                 +- Filter ((((isnotnull(d_qoy#1133) AND isnotnull(d_year#1129)) AND (d_qoy#1133 = 2)) AND (d_year#1129 = 2000)) AND isnotnull(d_date_sk#1123))\n   :                    +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#1123,d_year#1129,d_qoy#1133] Batched: true, DataFilters: [isnotnull(d_qoy#1133), isnotnull(d_year#1129), (d_qoy#1133 = 2), (d_year#1129 = 2000), isnotnull..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_qoy), IsNotNull(d_year), EqualTo(d_qoy,2), EqualTo(d_year,2000), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int,d_qoy:int>\n   +- BroadcastQueryStage 0\n      +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=852]\n         +- *(1) Filter ((((isnotnull(d_qoy#1133) AND isnotnull(d_year#1129)) AND (d_qoy#1133 = 2)) AND (d_year#1129 = 2000)) AND isnotnull(d_date_sk#1123))\n            +- *(1) ColumnarToRow\n               +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#1123,d_year#1129,d_qoy#1133] Batched: true, DataFilters: [isnotnull(d_qoy#1133), isnotnull(d_year#1129), (d_qoy#1133 = 2), (d_year#1129 = 2000), isnotnull..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_qoy), IsNotNull(d_year), EqualTo(d_qoy,2), EqualTo(d_year,2000), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int,d_qoy:int>\n"
      },
      "IM" : {
        "inputSizeInBytes" : 6305057976,
        "inputRowCount" : 262667119
      },
      "InitialPartitionNum" : 0,
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 16,
        "FinishedTasksNum" : 4,
        "FinishedTasksTotalTimeInMs" : 6018.0,
        "FinishedTasksDistributionInMs" : [ 1392.0, 1426.0, 1566.0, 1634.0, 1634.0 ]
      },
      "QueryStageOptimizationId" : 6,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 8 ],
      "Objectives" : {
        "DurationInMs" : 3408,
        "TotalTasksDurationInMs" : 5781,
        "IOBytes" : {
          "Total" : 105253169,
          "Details" : {
            "IR" : 38089369,
            "IW" : 0,
            "SR" : 0,
            "SW" : 67163800
          }
        }
      }
    },
    "1" : {
      "QSLogical" : {
        "operators" : {
          "0" : {
            "sign" : 1506356459,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 2960,
                "rowCount" : 148
              },
              "compileTime" : {
                "sizeInBytes" : 2960,
                "rowCount" : 148
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#1188, d_year#1194, d_qoy#1198] "
          },
          "1" : {
            "sign" : -1342085097,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 36408,
                "rowCount" : 148
              },
              "compileTime" : {
                "sizeInBytes" : 36408,
                "rowCount" : 148
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(d_qoy#1198) AND isnotnull(d_year#1194)) AND ((d_qoy#1198 = 3) AND (d_year#1194 = 2000))) AND isnotnull(d_date_sk#1188)) "
          },
          "2" : {
            "sign" : -1375110310,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 17970054,
                "rowCount" : 73049
              },
              "compileTime" : {
                "sizeInBytes" : 17970054,
                "rowCount" : 73049
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#1188, d_date_id#1189, d_date#1190, d_month_seq#1191, d_week_seq#1192, d_quarter_seq#1193, d_year#1194, d_dow#1195, d_moy#1196, d_dom#1197, d_qoy#1198, d_fy_year#1199, d_fy_quarter_seq#1200, d_fy_week_seq#1201, d_day_name#1202, d_quarter_name#1203, d_holiday#1204, d_weekend#1205, d_following_holiday#1206, d_first_dom#1207, d_last_dom#1208, d_same_day_ly#1209, d_same_day_lq#1210, d_current_day#1211, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "LogicalRelation",
          "toId" : 1,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Filter",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [d_date_sk#1188, d_year#1194, d_qoy#1198]\n+- Filter (((isnotnull(d_qoy#1198) AND isnotnull(d_year#1194)) AND ((d_qoy#1198 = 3) AND (d_year#1194 = 2000))) AND isnotnull(d_date_sk#1188))\n   +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#1188,d_date_id#1189,d_date#1190,d_month_seq#1191,d_week_seq#1192,d_quarter_seq#1193,d_year#1194,d_dow#1195,d_moy#1196,d_dom#1197,d_qoy#1198,d_fy_year#1199,d_fy_quarter_seq#1200,d_fy_week_seq#1201,d_day_name#1202,d_quarter_name#1203,d_holiday#1204,d_weekend#1205,d_following_holiday#1206,d_first_dom#1207,d_last_dom#1208,d_same_day_ly#1209,d_same_day_lq#1210,d_current_day#1211,... 4 more fields] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "0" : {
            "sign" : 1090581918,
            "className" : "org.apache.spark.sql.execution.FilterExec",
            "sizeInBytes" : 2960,
            "rowCount" : 148,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Input [3]: [d_date_sk#1188, d_year#1194, d_qoy#1198] Condition : ((((isnotnull(d_qoy#1198) AND isnotnull(d_year#1194)) AND (d_qoy#1198 = 3)) AND (d_year#1194 = 2000)) AND isnotnull(d_date_sk#1188)) "
          },
          "1" : {
            "sign" : 769227403,
            "className" : "org.apache.spark.sql.execution.FileSourceScanExec",
            "sizeInBytes" : 2960,
            "rowCount" : 148,
            "isRuntime" : false,
            "predicate" : " (unknown) Scan parquet spark_catalog.tpcds_100.date_dim Output [3]: [d_date_sk#1188, d_year#1194, d_qoy#1198] Batched: true Location: InMemoryFileIndex [hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim] PushedFilters: [IsNotNull(d_qoy), IsNotNull(d_year), EqualTo(d_qoy,3), EqualTo(d_year,2000), IsNotNull(d_date_sk)] ReadSchema: struct<d_date_sk:int,d_year:int,d_qoy:int> "
          }
        },
        "links" : [ {
          "fromId" : 1,
          "fromName" : "Scan parquet spark_catalog.tpcds_100.date_dim",
          "toId" : 0,
          "toName" : "Filter",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Filter ((((isnotnull(d_qoy#1198) AND isnotnull(d_year#1194)) AND (d_qoy#1198 = 3)) AND (d_year#1194 = 2000)) AND isnotnull(d_date_sk#1188))\n+- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#1188,d_year#1194,d_qoy#1198] Batched: true, DataFilters: [isnotnull(d_qoy#1198), isnotnull(d_year#1194), (d_qoy#1198 = 3), (d_year#1194 = 2000), isnotnull..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_qoy), IsNotNull(d_year), EqualTo(d_qoy,3), EqualTo(d_year,2000), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int,d_qoy:int>\n"
      },
      "IM" : {
        "inputSizeInBytes" : 2960,
        "inputRowCount" : 148
      },
      "InitialPartitionNum" : 0,
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 2,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 4 ],
      "Objectives" : {
        "DurationInMs" : 1463,
        "TotalTasksDurationInMs" : 1460,
        "IOBytes" : {
          "Total" : 93845,
          "Details" : {
            "IR" : 93845,
            "IW" : 0,
            "SR" : 0,
            "SW" : 0
          }
        }
      }
    },
    "17" : {
      "QSLogical" : {
        "operators" : {
          "0" : {
            "sign" : -2016807428,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 105392,
                "rowCount" : 1846
              },
              "compileTime" : {
                "sizeInBytes" : 79758,
                "rowCount" : 1899
              }
            },
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [ca_county#786, d_qoy#761, d_year#757], [ca_county#786, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#92)),17,2) AS web_sales#750], HashAggregate(keys=[ca_county#786, d_qoy#761, d_year#757], functions=[sum(UnscaledValue(ws_ext_sales_price#92))]) "
          }
        },
        "links" : [ ],
        "rawPlan" : "LogicalQueryStage Aggregate [ca_county#786, d_qoy#761, d_year#757], [ca_county#786, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#92)),17,2) AS web_sales#750], HashAggregate(keys=[ca_county#786, d_qoy#761, d_year#757], functions=[sum(UnscaledValue(ws_ext_sales_price#92))])\n"
      },
      "QSPhysical" : {
        "operators" : {
          "0" : {
            "sign" : 1031905565,
            "className" : "org.apache.spark.sql.execution.aggregate.HashAggregateExec",
            "sizeInBytes" : 105392,
            "rowCount" : 1846,
            "isRuntime" : true,
            "predicate" : " (unknown) HashAggregate Input [4]: [ca_county#786, d_qoy#761, d_year#757, sum#1395L] Keys [3]: [ca_county#786, d_qoy#761, d_year#757] Functions [1]: [sum(UnscaledValue(ws_ext_sales_price#92))] Aggregate Attributes [1]: [sum(UnscaledValue(ws_ext_sales_price#92))#793L] Results [2]: [ca_county#786, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#92))#793L,17,2) AS web_sales#750] "
          },
          "1" : {
            "sign" : 1126108769,
            "className" : "org.apache.spark.sql.execution.adaptive.ShuffleQueryStageExec",
            "sizeInBytes" : 79758,
            "rowCount" : 1899,
            "isRuntime" : false,
            "predicate" : " (unknown) ShuffleQueryStage Output [4]: [ca_county#786, d_qoy#761, d_year#757, sum#1395L] Arguments: 30 "
          }
        },
        "links" : [ {
          "fromId" : 1,
          "fromName" : "ShuffleQueryStage",
          "toId" : 0,
          "toName" : "HashAggregate",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "HashAggregate(keys=[ca_county#786, d_qoy#761, d_year#757], functions=[sum(UnscaledValue(ws_ext_sales_price#92))], output=[ca_county#786, web_sales#750])\n+- ShuffleQueryStage 30\n   +- Exchange hashpartitioning(ca_county#786, d_qoy#761, d_year#757, 200), ENSURE_REQUIREMENTS, [plan_id=4019]\n      +- *(33) HashAggregate(keys=[ca_county#786, d_qoy#761, d_year#757], functions=[partial_sum(UnscaledValue(ws_ext_sales_price#92))], output=[ca_county#786, d_qoy#761, d_year#757, sum#1395L])\n         +- *(33) Project [ws_ext_sales_price#92, d_year#757, d_qoy#761, ca_county#786]\n            +- *(33) SortMergeJoin [ws_bill_addr_sk#76], [ca_address_sk#779], Inner\n               :- *(31) Sort [ws_bill_addr_sk#76 ASC NULLS FIRST], false, 0\n               :  +- AQEShuffleRead coalesced\n               :     +- ShuffleQueryStage 24\n               :        +- Exchange hashpartitioning(ws_bill_addr_sk#76, 200), ENSURE_REQUIREMENTS, [plan_id=2309]\n               :           +- *(17) Project [ws_bill_addr_sk#76, ws_ext_sales_price#92, d_year#757, d_qoy#761]\n               :              +- *(17) BroadcastHashJoin [ws_sold_date_sk#103], [d_date_sk#751], Inner, BuildRight, false\n               :                 :- *(17) Filter isnotnull(ws_bill_addr_sk#76)\n               :                 :  +- *(17) ColumnarToRow\n               :                 :     +- FileScan parquet spark_catalog.tpcds_100.web_sales[ws_bill_addr_sk#76,ws_ext_sales_price#92,ws_sold_date_sk#103] Batched: true, DataFilters: [isnotnull(ws_bill_addr_sk#76)], Format: Parquet, Location: InMemoryFileIndex(1823 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/web_sa..., PartitionFilters: [isnotnull(ws_sold_date_sk#103), dynamicpruningexpression(ws_sold_date_sk#103 IN dynamicpruning#1..., PushedFilters: [IsNotNull(ws_bill_addr_sk)], ReadSchema: struct<ws_bill_addr_sk:int,ws_ext_sales_price:decimal(7,2)>\n               :                 :           +- ReusedSubquery SubqueryBroadcast dynamicpruning#1384, 0, [d_date_sk#29], [id=#2226]\n               :                 +- BroadcastQueryStage 9\n               :                    +- ReusedExchange [d_date_sk#751, d_year#757, d_qoy#761], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=939]\n               +- *(32) Sort [ca_address_sk#779 ASC NULLS FIRST], false, 0\n                  +- AQEShuffleRead coalesced\n                     +- ShuffleQueryStage 11\n                        +- ReusedExchange [ca_address_sk#779, ca_county#786], Exchange hashpartitioning(ca_address_sk#1151, 200), ENSURE_REQUIREMENTS, [plan_id=871]\n"
      },
      "IM" : {
        "inputSizeInBytes" : 105392,
        "inputRowCount" : 1846
      },
      "InitialPartitionNum" : 200,
      "PD" : {
        "11" : [ 334, 405, 334, 276, 368, 445, 445, 368, 368, 251, 334, 207, 251, 251, 334, 304, 368, 304, 334, 228, 276, 171, 228, 445, 251, 304, 276, 368, 405, 304, 207, 445, 276, 251, 228, 334, 334, 405, 368, 334, 276, 189, 445, 304, 334, 276, 228, 251, 304, 334, 228, 189, 405, 368, 276, 405, 368, 276, 276, 276, 334, 251, 445, 445, 251, 445, 405, 405, 445, 156, 304, 251, 251, 304, 207, 405, 334, 276, 334, 368, 304, 228, 276, 304, 228, 334, 539, 171, 334, 276, 334, 539, 368, 405, 334, 405, 276, 276, 368, 334, 304, 251, 276, 156, 207, 276, 334, 129, 304, 304, 334, 405, 276, 228, 304, 276, 171, 334, 490, 368, 334, 304, 368, 276, 276, 304, 368, 276, 334, 228, 276, 334, 304, 334, 304, 445, 189, 228, 207, 304, 405, 445, 368, 334, 276, 445, 251, 304, 334, 304, 405, 334, 368, 228, 228, 276, 368, 276, 171, 251, 334, 228, 334, 304, 334, 304, 251, 251, 276, 334, 251, 251, 368, 368, 304, 368, 251, 304, 334, 304, 304, 490, 276, 490, 445, 304, 334, 405, 490, 334, 334, 304, 490, 207, 276, 207, 405, 334, 368, 189 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 3,
        "FinishedTasksNum" : 2,
        "FinishedTasksTotalTimeInMs" : 3776.0,
        "FinishedTasksDistributionInMs" : [ 1580.0, 1580.0, 2196.0, 2196.0, 2196.0 ]
      },
      "QueryStageOptimizationId" : 17,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 30 ],
      "Objectives" : {
        "DurationInMs" : 548,
        "TotalTasksDurationInMs" : 533,
        "IOBytes" : {
          "Total" : 60302,
          "Details" : {
            "IR" : 0,
            "IW" : 0,
            "SR" : 60302,
            "SW" : 0
          }
        }
      }
    },
    "14" : {
      "QSLogical" : {
        "operators" : {
          "0" : {
            "sign" : 2089592065,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 79758,
                "rowCount" : 1899
              },
              "compileTime" : {
                "sizeInBytes" : 79758,
                "rowCount" : 1899
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [ca_county#786, d_qoy#761, d_year#757], [ca_county#786, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#92)),17,2) AS web_sales#750] "
          },
          "1" : {
            "sign" : -1248977313,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 3599158700,
                "rowCount" : 71983174
              },
              "compileTime" : {
                "sizeInBytes" : 3599158700,
                "rowCount" : 71983174
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_ext_sales_price#92, d_year#757, d_qoy#761, ca_county#786] "
          },
          "2" : {
            "sign" : 1969715269,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 4175024092,
                "rowCount" : 71983174
              },
              "compileTime" : {
                "sizeInBytes" : 4175024092,
                "rowCount" : 71983174
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ws_bill_addr_sk#76 = ca_address_sk#779) "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "Join",
          "toId" : 1,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Project",
          "toId" : 0,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Aggregate [ca_county#786, d_qoy#761, d_year#757], [ca_county#786, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#92)),17,2) AS web_sales#750]\n+- Project [ws_ext_sales_price#92, d_year#757, d_qoy#761, ca_county#786]\n   +- Join Inner, (ws_bill_addr_sk#76 = ca_address_sk#779)\n      :- Project [ws_bill_addr_sk#76, ws_ext_sales_price#92, d_year#757, d_qoy#761]\n      :  +- Join Inner, (ws_sold_date_sk#103 = d_date_sk#751)\n      :     :- Project [ws_bill_addr_sk#76, ws_ext_sales_price#92, ws_sold_date_sk#103]\n      :     :  +- Filter ((isnotnull(ws_sold_date_sk#103) AND isnotnull(ws_bill_addr_sk#76)) AND dynamicpruning#1385 [ws_sold_date_sk#103])\n      :     :     :  +- Project [d_date_sk#751, d_year#757, d_qoy#761]\n      :     :     :     +- Filter (((isnotnull(d_qoy#761) AND isnotnull(d_year#757)) AND ((d_qoy#761 = 1) AND (d_year#757 = 2000))) AND isnotnull(d_date_sk#751))\n      :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#751,d_date_id#752,d_date#753,d_month_seq#754,d_week_seq#755,d_quarter_seq#756,d_year#757,d_dow#758,d_moy#759,d_dom#760,d_qoy#761,d_fy_year#762,d_fy_quarter_seq#763,d_fy_week_seq#764,d_day_name#765,d_quarter_name#766,d_holiday#767,d_weekend#768,d_following_holiday#769,d_first_dom#770,d_last_dom#771,d_same_day_ly#772,d_same_day_lq#773,d_current_day#774,... 4 more fields] parquet\n      :     :     +- Relation spark_catalog.tpcds_100.web_sales[ws_sold_time_sk#70,ws_ship_date_sk#71,ws_item_sk#72,ws_bill_customer_sk#73,ws_bill_cdemo_sk#74,ws_bill_hdemo_sk#75,ws_bill_addr_sk#76,ws_ship_customer_sk#77,ws_ship_cdemo_sk#78,ws_ship_hdemo_sk#79,ws_ship_addr_sk#80,ws_web_page_sk#81,ws_web_site_sk#82,ws_ship_mode_sk#83,ws_warehouse_sk#84,ws_promo_sk#85,ws_order_number#86L,ws_quantity#87,ws_wholesale_cost#88,ws_list_price#89,ws_sales_price#90,ws_ext_discount_amt#91,ws_ext_sales_price#92,ws_ext_wholesale_cost#93,... 10 more fields] parquet\n      :     +- Project [d_date_sk#751, d_year#757, d_qoy#761]\n      :        +- Filter (((isnotnull(d_qoy#761) AND isnotnull(d_year#757)) AND ((d_qoy#761 = 1) AND (d_year#757 = 2000))) AND isnotnull(d_date_sk#751))\n      :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#751,d_date_id#752,d_date#753,d_month_seq#754,d_week_seq#755,d_quarter_seq#756,d_year#757,d_dow#758,d_moy#759,d_dom#760,d_qoy#761,d_fy_year#762,d_fy_quarter_seq#763,d_fy_week_seq#764,d_day_name#765,d_quarter_name#766,d_holiday#767,d_weekend#768,d_following_holiday#769,d_first_dom#770,d_last_dom#771,d_same_day_ly#772,d_same_day_lq#773,d_current_day#774,... 4 more fields] parquet\n      +- Project [ca_address_sk#779, ca_county#786]\n         +- Filter (isnotnull(ca_address_sk#779) AND isnotnull(ca_county#786))\n            +- Relation spark_catalog.tpcds_100.customer_address[ca_address_sk#779,ca_address_id#780,ca_street_number#781,ca_street_name#782,ca_street_type#783,ca_suite_number#784,ca_city#785,ca_county#786,ca_state#787,ca_zip#788,ca_country#789,ca_gmt_offset#790,ca_location_type#791] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "4" : {
            "sign" : -583083757,
            "className" : "org.apache.spark.sql.execution.adaptive.ShuffleQueryStageExec",
            "sizeInBytes" : 88412040,
            "rowCount" : 2210301,
            "isRuntime" : true,
            "predicate" : " (unknown) ShuffleQueryStage Output [4]: [ws_bill_addr_sk#76, ws_ext_sales_price#92, d_year#757, d_qoy#761] Arguments: 24 "
          },
          "5" : {
            "sign" : 86948593,
            "className" : "org.apache.spark.sql.execution.SortExec",
            "sizeInBytes" : -1,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Input [2]: [ca_address_sk#779, ca_county#786] Arguments: [ca_address_sk#779 ASC NULLS FIRST], false, 0 "
          },
          "6" : {
            "sign" : -279089009,
            "className" : "org.apache.spark.sql.execution.adaptive.ShuffleQueryStageExec",
            "sizeInBytes" : 39644968,
            "rowCount" : 970045,
            "isRuntime" : true,
            "predicate" : " (unknown) ShuffleQueryStage Output [2]: [ca_address_sk#779, ca_county#786] Arguments: 11 "
          },
          "1" : {
            "sign" : 352361443,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 3599158700,
            "rowCount" : 71983174,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [4]: [ws_ext_sales_price#92, d_year#757, d_qoy#761, ca_county#786] Input [6]: [ws_bill_addr_sk#76, ws_ext_sales_price#92, d_year#757, d_qoy#761, ca_address_sk#779, ca_county#786] "
          },
          "0" : {
            "sign" : -950309626,
            "className" : "org.apache.spark.sql.execution.aggregate.HashAggregateExec",
            "sizeInBytes" : 79758,
            "rowCount" : 1899,
            "isRuntime" : false,
            "predicate" : " (unknown) HashAggregate Input [4]: [ws_ext_sales_price#92, d_year#757, d_qoy#761, ca_county#786] Keys [3]: [ca_county#786, d_qoy#761, d_year#757] Functions [1]: [partial_sum(UnscaledValue(ws_ext_sales_price#92))] Aggregate Attributes [1]: [sum#1394L] Results [4]: [ca_county#786, d_qoy#761, d_year#757, sum#1395L] "
          },
          "2" : {
            "sign" : 2120159669,
            "className" : "org.apache.spark.sql.execution.joins.SortMergeJoinExec",
            "sizeInBytes" : 4175024092,
            "rowCount" : 71983174,
            "isRuntime" : false,
            "predicate" : " (unknown) SortMergeJoin Left keys [1]: [ws_bill_addr_sk#76] Right keys [1]: [ca_address_sk#779] Join type: Inner Join condition: None "
          },
          "3" : {
            "sign" : 1595919160,
            "className" : "org.apache.spark.sql.execution.SortExec",
            "sizeInBytes" : -1,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Input [4]: [ws_bill_addr_sk#76, ws_ext_sales_price#92, d_year#757, d_qoy#761] Arguments: [ws_bill_addr_sk#76 ASC NULLS FIRST], false, 0 "
          }
        },
        "links" : [ {
          "fromId" : 4,
          "fromName" : "ShuffleQueryStage",
          "toId" : 3,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Sort",
          "toId" : 2,
          "toName" : "SortMergeJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "ShuffleQueryStage",
          "toId" : 5,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Sort",
          "toId" : 2,
          "toName" : "SortMergeJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "SortMergeJoin",
          "toId" : 1,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Project",
          "toId" : 0,
          "toName" : "HashAggregate",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "HashAggregate(keys=[ca_county#786, d_qoy#761, d_year#757], functions=[partial_sum(UnscaledValue(ws_ext_sales_price#92))], output=[ca_county#786, d_qoy#761, d_year#757, sum#1395L])\n+- Project [ws_ext_sales_price#92, d_year#757, d_qoy#761, ca_county#786]\n   +- SortMergeJoin [ws_bill_addr_sk#76], [ca_address_sk#779], Inner\n      :- Sort [ws_bill_addr_sk#76 ASC NULLS FIRST], false, 0\n      :  +- ShuffleQueryStage 24\n      :     +- Exchange hashpartitioning(ws_bill_addr_sk#76, 200), ENSURE_REQUIREMENTS, [plan_id=2309]\n      :        +- *(17) Project [ws_bill_addr_sk#76, ws_ext_sales_price#92, d_year#757, d_qoy#761]\n      :           +- *(17) BroadcastHashJoin [ws_sold_date_sk#103], [d_date_sk#751], Inner, BuildRight, false\n      :              :- *(17) Filter isnotnull(ws_bill_addr_sk#76)\n      :              :  +- *(17) ColumnarToRow\n      :              :     +- FileScan parquet spark_catalog.tpcds_100.web_sales[ws_bill_addr_sk#76,ws_ext_sales_price#92,ws_sold_date_sk#103] Batched: true, DataFilters: [isnotnull(ws_bill_addr_sk#76)], Format: Parquet, Location: InMemoryFileIndex(1823 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/web_sa..., PartitionFilters: [isnotnull(ws_sold_date_sk#103), dynamicpruningexpression(ws_sold_date_sk#103 IN dynamicpruning#1..., PushedFilters: [IsNotNull(ws_bill_addr_sk)], ReadSchema: struct<ws_bill_addr_sk:int,ws_ext_sales_price:decimal(7,2)>\n      :              :           +- ReusedSubquery SubqueryBroadcast dynamicpruning#1384, 0, [d_date_sk#29], [id=#2226]\n      :              +- BroadcastQueryStage 9\n      :                 +- ReusedExchange [d_date_sk#751, d_year#757, d_qoy#761], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=939]\n      +- Sort [ca_address_sk#779 ASC NULLS FIRST], false, 0\n         +- ShuffleQueryStage 11\n            +- ReusedExchange [ca_address_sk#779, ca_county#786], Exchange hashpartitioning(ca_address_sk#1151, 200), ENSURE_REQUIREMENTS, [plan_id=871]\n"
      },
      "IM" : {
        "inputSizeInBytes" : 128057008,
        "inputRowCount" : 3180346
      },
      "InitialPartitionNum" : 200,
      "PD" : {
        "5" : [ 104643, 99231, 95029, 104766, 97410, 102405, 94853, 100096, 97921, 105573, 103020, 101941, 100610, 96800, 95986, 99280, 105036, 102371, 98711, 103101, 99627, 100354, 97362, 100316, 102138, 94293, 99491, 97822, 100365, 89444, 103059, 97049, 96134, 101502, 101067, 106281, 98771, 94264, 93957, 103336, 99105, 105353, 98957, 102326, 92819, 97954, 107349, 98095, 98092, 92096, 100837, 99677, 93245, 98594, 103105, 93814, 99227, 103434, 101607, 97383, 93873, 99095, 94152, 100056, 97657, 100275, 101173, 93351, 102693, 108046, 97618, 97668, 99332, 101862, 96889, 99634, 101647, 99458, 106688, 97966, 99624, 103867, 102457, 91431, 102221, 96177, 105500, 103617, 98813, 101478, 100291, 101605, 96851, 103294, 101896, 97921, 99544, 97315, 94745, 100966, 96024, 105086, 101036, 102232, 95531, 105453, 101615, 100930, 105338, 98132, 104453, 97332, 106221, 102408, 100010, 101081, 99663, 101391, 92569, 99244, 95558, 99892, 97903, 106418, 99641, 103551, 102376, 103542, 87579, 94653, 106397, 99523, 98759, 99398, 99676, 105691, 99493, 104858, 101820, 99317, 104822, 101312, 97078, 99232, 99613, 100498, 98891, 95333, 100882, 97961, 98856, 101990, 97228, 97906, 100962, 97812, 103426, 95606, 104881, 98092, 97643, 98191, 102933, 99182, 100438, 99576, 98107, 98464, 103631, 97080, 103828, 103633, 93843, 102679, 99216, 91117, 99312, 97443, 101426, 100443, 104935, 97901, 99835, 97304, 102621, 104115, 111092, 100042, 99150, 100637, 97401, 99791, 100411, 96259, 98273, 98896, 106698, 101339, 101495, 100760 ],

      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 10,
        "FinishedTasksNum" : 14,
        "FinishedTasksTotalTimeInMs" : 5461.0,
        "FinishedTasksDistributionInMs" : [ 86.0, 273.0, 427.0, 534.0, 597.0 ]
      },
      "QueryStageOptimizationId" : 14,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 22 ],
      "Objectives" : {
        "DurationInMs" : 4197,
        "TotalTasksDurationInMs" : 4191,
        "IOBytes" : {
          "Total" : 35101638,
          "Details" : {
            "IR" : 0,
            "IW" : 0,
            "SR" : 35041336,
            "SW" : 60302
          }
        }
      }
    },
    "0" : {
      "QSLogical" : {
        "operators" : {
          "0" : {
            "sign" : -680060387,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 2900,
                "rowCount" : 145
              },
              "compileTime" : {
                "sizeInBytes" : 2900,
                "rowCount" : 145
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#1123, d_year#1129, d_qoy#1133] "
          },
          "1" : {
            "sign" : -412127915,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 35670,
                "rowCount" : 145
              },
              "compileTime" : {
                "sizeInBytes" : 35670,
                "rowCount" : 145
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(d_qoy#1133) AND isnotnull(d_year#1129)) AND ((d_qoy#1133 = 2) AND (d_year#1129 = 2000))) AND isnotnull(d_date_sk#1123)) "
          },
          "2" : {
            "sign" : 343220088,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 17970054,
                "rowCount" : 73049
              },
              "compileTime" : {
                "sizeInBytes" : 17970054,
                "rowCount" : 73049
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#1123, d_date_id#1124, d_date#1125, d_month_seq#1126, d_week_seq#1127, d_quarter_seq#1128, d_year#1129, d_dow#1130, d_moy#1131, d_dom#1132, d_qoy#1133, d_fy_year#1134, d_fy_quarter_seq#1135, d_fy_week_seq#1136, d_day_name#1137, d_quarter_name#1138, d_holiday#1139, d_weekend#1140, d_following_holiday#1141, d_first_dom#1142, d_last_dom#1143, d_same_day_ly#1144, d_same_day_lq#1145, d_current_day#1146, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "LogicalRelation",
          "toId" : 1,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Filter",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [d_date_sk#1123, d_year#1129, d_qoy#1133]\n+- Filter (((isnotnull(d_qoy#1133) AND isnotnull(d_year#1129)) AND ((d_qoy#1133 = 2) AND (d_year#1129 = 2000))) AND isnotnull(d_date_sk#1123))\n   +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#1123,d_date_id#1124,d_date#1125,d_month_seq#1126,d_week_seq#1127,d_quarter_seq#1128,d_year#1129,d_dow#1130,d_moy#1131,d_dom#1132,d_qoy#1133,d_fy_year#1134,d_fy_quarter_seq#1135,d_fy_week_seq#1136,d_day_name#1137,d_quarter_name#1138,d_holiday#1139,d_weekend#1140,d_following_holiday#1141,d_first_dom#1142,d_last_dom#1143,d_same_day_ly#1144,d_same_day_lq#1145,d_current_day#1146,... 4 more fields] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "0" : {
            "sign" : 1037281934,
            "className" : "org.apache.spark.sql.execution.FilterExec",
            "sizeInBytes" : 2900,
            "rowCount" : 145,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Input [3]: [d_date_sk#1123, d_year#1129, d_qoy#1133] Condition : ((((isnotnull(d_qoy#1133) AND isnotnull(d_year#1129)) AND (d_qoy#1133 = 2)) AND (d_year#1129 = 2000)) AND isnotnull(d_date_sk#1123)) "
          },
          "1" : {
            "sign" : 1380376441,
            "className" : "org.apache.spark.sql.execution.FileSourceScanExec",
            "sizeInBytes" : 2900,
            "rowCount" : 145,
            "isRuntime" : false,
            "predicate" : " (unknown) Scan parquet spark_catalog.tpcds_100.date_dim Output [3]: [d_date_sk#1123, d_year#1129, d_qoy#1133] Batched: true Location: InMemoryFileIndex [hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim] PushedFilters: [IsNotNull(d_qoy), IsNotNull(d_year), EqualTo(d_qoy,2), EqualTo(d_year,2000), IsNotNull(d_date_sk)] ReadSchema: struct<d_date_sk:int,d_year:int,d_qoy:int> "
          }
        },
        "links" : [ {
          "fromId" : 1,
          "fromName" : "Scan parquet spark_catalog.tpcds_100.date_dim",
          "toId" : 0,
          "toName" : "Filter",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Filter ((((isnotnull(d_qoy#1133) AND isnotnull(d_year#1129)) AND (d_qoy#1133 = 2)) AND (d_year#1129 = 2000)) AND isnotnull(d_date_sk#1123))\n+- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#1123,d_year#1129,d_qoy#1133] Batched: true, DataFilters: [isnotnull(d_qoy#1133), isnotnull(d_year#1129), (d_qoy#1133 = 2), (d_year#1129 = 2000), isnotnull..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_qoy), IsNotNull(d_year), EqualTo(d_qoy,2), EqualTo(d_year,2000), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int,d_qoy:int>\n"
      },
      "IM" : {
        "inputSizeInBytes" : 2900,
        "inputRowCount" : 145
      },
      "InitialPartitionNum" : 0,
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 0,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 3 ],
      "Objectives" : {
        "DurationInMs" : 1793,
        "TotalTasksDurationInMs" : 1788,
        "IOBytes" : {
          "Total" : 93845,
          "Details" : {
            "IR" : 93845,
            "IW" : 0,
            "SR" : 0,
            "SW" : 0
          }
        }
      }
    },
    "20" : {
      "QSLogical" : {
        "operators" : {
          "4" : {
            "sign" : 1377603520,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 210784,
                "rowCount" : 3692
              },
              "compileTime" : {
                "sizeInBytes" : 79758,
                "rowCount" : 1899
              }
            },
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [ca_county#1158, d_qoy#1133, d_year#1129], [ca_county#1158, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#1114)),17,2) AS store_sales#799], HashAggregate(keys=[ca_county#1158, d_qoy#1133, d_year#1129], functions=[sum(UnscaledValue(ss_ext_sales_price#1114))]) "
          },
          "1" : {
            "sign" : 1813749660,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 1967260815936,
                "rowCount" : 25885010736
              },
              "compileTime" : {
                "sizeInBytes" : 1967260815936,
                "rowCount" : 25885010736
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ca_county#64 = ca_county#1158) "
          },
          "0" : {
            "sign" : 1074515729,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 1449560601216,
                "rowCount" : 25885010736
              },
              "compileTime" : {
                "sizeInBytes" : 1449560601216,
                "rowCount" : 25885010736
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [store_sales#799, store_sales#803, ca_county#64, d_year#35, store_sales#749] "
          },
          "2" : {
            "sign" : 223713833,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 899637024,
                "rowCount" : 20446296
              },
              "compileTime" : {
                "sizeInBytes" : 899637024,
                "rowCount" : 20446296
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ca_county#1158, store_sales#799, store_sales#803] "
          },
          "3" : {
            "sign" : -1808253999,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 1308562944,
                "rowCount" : 20446296
              },
              "compileTime" : {
                "sizeInBytes" : 1308562944,
                "rowCount" : 20446296
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ca_county#1158 = ca_county#1223) "
          }
        },
        "links" : [ {
          "fromId" : 4,
          "fromName" : "LogicalQueryStage",
          "toId" : 3,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Join",
          "toId" : 2,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Project",
          "toId" : 1,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Join",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [store_sales#799, store_sales#803, ca_county#64, d_year#35, store_sales#749]\n+- Join Inner, (ca_county#64 = ca_county#1158)\n   :- Project [ca_county#1158, store_sales#799, store_sales#803]\n   :  +- Join Inner, (ca_county#1158 = ca_county#1223)\n   :     :- LogicalQueryStage Aggregate [ca_county#1158, d_qoy#1133, d_year#1129], [ca_county#1158, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#1114)),17,2) AS store_sales#799], HashAggregate(keys=[ca_county#1158, d_qoy#1133, d_year#1129], functions=[sum(UnscaledValue(ss_ext_sales_price#1114))])\n   :     +- LogicalQueryStage Aggregate [ca_county#1223, d_qoy#1198, d_year#1194], [ca_county#1223, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#1179)),17,2) AS store_sales#803], HashAggregate(keys=[ca_county#1223, d_qoy#1198, d_year#1194], functions=[sum(UnscaledValue(ss_ext_sales_price#1179))])\n   +- LogicalQueryStage Aggregate [ca_county#64, d_qoy#39, d_year#35], [ca_county#64, d_year#35, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#20)),17,2) AS store_sales#749], HashAggregate(keys=[ca_county#64, d_qoy#39, d_year#35], functions=[sum(UnscaledValue(ss_ext_sales_price#20))])\n"
      },
      "QSPhysical" : {
        "operators" : {
          "4" : {
            "sign" : 373057171,
            "className" : "org.apache.spark.sql.execution.aggregate.HashAggregateExec",
            "sizeInBytes" : 210784,
            "rowCount" : 3692,
            "isRuntime" : true,
            "predicate" : " (unknown) HashAggregate Input [4]: [ca_county#1158, d_qoy#1133, d_year#1129, sum#1389L] Keys [3]: [ca_county#1158, d_qoy#1133, d_year#1129] Functions [1]: [sum(UnscaledValue(ss_ext_sales_price#1114))] Aggregate Attributes [1]: [sum(UnscaledValue(ss_ext_sales_price#1114))#792L] Results [2]: [ca_county#1158, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#1114))#792L,17,2) AS store_sales#799] "
          },
          "5" : {
            "sign" : -1472332939,
            "className" : "org.apache.spark.sql.execution.adaptive.ShuffleQueryStageExec",
            "sizeInBytes" : 79758,
            "rowCount" : 1899,
            "isRuntime" : false,
            "predicate" : " (unknown) ShuffleQueryStage Output [4]: [ca_county#1158, d_qoy#1133, d_year#1129, sum#1389L] Arguments: 26 "
          },
          "6" : {
            "sign" : 2076567103,
            "className" : "org.apache.spark.sql.execution.adaptive.BroadcastQueryStageExec",
            "sizeInBytes" : 33619968,
            "rowCount" : 1846,
            "isRuntime" : true,
            "predicate" : " (unknown) BroadcastQueryStage Output [2]: [ca_county#1223, store_sales#803] Arguments: 35 "
          },
          "1" : {
            "sign" : -1705091947,
            "className" : "org.apache.spark.sql.execution.joins.BroadcastHashJoinExec",
            "sizeInBytes" : 1967260815936,
            "rowCount" : 25885010736,
            "isRuntime" : false,
            "predicate" : " (unknown) BroadcastHashJoin Left keys [1]: [ca_county#1158] Right keys [1]: [ca_county#64] Join type: Inner Join condition: None "
          },
          "0" : {
            "sign" : -1274056718,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 1449560601216,
            "rowCount" : 25885010736,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [5]: [store_sales#799, store_sales#803, ca_county#64, d_year#35, store_sales#749] Input [6]: [ca_county#1158, store_sales#799, store_sales#803, ca_county#64, d_year#35, store_sales#749] "
          },
          "2" : {
            "sign" : 2118359060,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 899637024,
            "rowCount" : 20446296,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [3]: [ca_county#1158, store_sales#799, store_sales#803] Input [4]: [ca_county#1158, store_sales#799, ca_county#1223, store_sales#803] "
          },
          "7" : {
            "sign" : 1577899343,
            "className" : "org.apache.spark.sql.execution.adaptive.BroadcastQueryStageExec",
            "sizeInBytes" : 33619968,
            "rowCount" : 1846,
            "isRuntime" : true,
            "predicate" : " (unknown) BroadcastQueryStage Output [3]: [ca_county#64, d_year#35, store_sales#749] Arguments: 34 "
          },
          "3" : {
            "sign" : 170874058,
            "className" : "org.apache.spark.sql.execution.joins.BroadcastHashJoinExec",
            "sizeInBytes" : 1308562944,
            "rowCount" : 20446296,
            "isRuntime" : false,
            "predicate" : " (unknown) BroadcastHashJoin Left keys [1]: [ca_county#1158] Right keys [1]: [ca_county#1223] Join type: Inner Join condition: None "
          }
        },
        "links" : [ {
          "fromId" : 5,
          "fromName" : "ShuffleQueryStage",
          "toId" : 4,
          "toName" : "HashAggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "HashAggregate",
          "toId" : 3,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "BroadcastQueryStage",
          "toId" : 3,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "BroadcastHashJoin",
          "toId" : 2,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Project",
          "toId" : 1,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "BroadcastQueryStage",
          "toId" : 1,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "BroadcastHashJoin",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [store_sales#799, store_sales#803, ca_county#64, d_year#35, store_sales#749]\n+- BroadcastHashJoin [ca_county#1158], [ca_county#64], Inner, BuildRight, false\n   :- Project [ca_county#1158, store_sales#799, store_sales#803]\n   :  +- BroadcastHashJoin [ca_county#1158], [ca_county#1223], Inner, BuildRight, false\n   :     :- HashAggregate(keys=[ca_county#1158, d_qoy#1133, d_year#1129], functions=[sum(UnscaledValue(ss_ext_sales_price#1114))], output=[ca_county#1158, store_sales#799])\n   :     :  +- ShuffleQueryStage 26\n   :     :     +- Exchange hashpartitioning(ca_county#1158, d_qoy#1133, d_year#1129, 200), ENSURE_REQUIREMENTS, [plan_id=3150]\n   :     :        +- *(21) HashAggregate(keys=[ca_county#1158, d_qoy#1133, d_year#1129], functions=[partial_sum(UnscaledValue(ss_ext_sales_price#1114))], output=[ca_county#1158, d_qoy#1133, d_year#1129, sum#1389L])\n   :     :           +- *(21) Project [ss_ext_sales_price#1114, d_year#1129, d_qoy#1133, ca_county#1158]\n   :     :              +- *(21) SortMergeJoin [ss_addr_sk#1105], [ca_address_sk#1151], Inner\n   :     :                 :- *(19) Sort [ss_addr_sk#1105 ASC NULLS FIRST], false, 0\n   :     :                 :  +- AQEShuffleRead coalesced\n   :     :                 :     +- ShuffleQueryStage 22\n   :     :                 :        +- Exchange hashpartitioning(ss_addr_sk#1105, 200), ENSURE_REQUIREMENTS, [plan_id=2201]\n   :     :                 :           +- *(15) Project [ss_addr_sk#1105, ss_ext_sales_price#1114, d_year#1129, d_qoy#1133]\n   :     :                 :              +- *(15) BroadcastHashJoin [ss_sold_date_sk#1122], [d_date_sk#1123], Inner, BuildRight, false\n   :     :                 :                 :- *(15) Filter isnotnull(ss_addr_sk#1105)\n   :     :                 :                 :  +- *(15) ColumnarToRow\n   :     :                 :                 :     +- FileScan parquet spark_catalog.tpcds_100.store_sales[ss_addr_sk#1105,ss_ext_sales_price#1114,ss_sold_date_sk#1122] Batched: true, DataFilters: [isnotnull(ss_addr_sk#1105)], Format: Parquet, Location: InMemoryFileIndex(1823 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/store_..., PartitionFilters: [isnotnull(ss_sold_date_sk#1122), dynamicpruningexpression(ss_sold_date_sk#1122 IN dynamicpruning..., PushedFilters: [IsNotNull(ss_addr_sk)], ReadSchema: struct<ss_addr_sk:int,ss_ext_sales_price:decimal(7,2)>\n   :     :                 :                 :           +- SubqueryBroadcast dynamicpruning#1382, 0, [d_date_sk#1123], [id=#2175]\n   :     :                 :                 :              +- AdaptiveSparkPlan isFinalPlan=true\n                                                               +- == Final Plan ==\n                                                                  BroadcastQueryStage 1\n                                                                  +- ReusedExchange [d_date_sk#1123, d_year#1129, d_qoy#1133], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=852]\n                                                               +- == Initial Plan ==\n                                                                  BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=2172]\n                                                                  +- Filter ((((isnotnull(d_qoy#1133) AND isnotnull(d_year#1129)) AND (d_qoy#1133 = 2)) AND (d_year#1129 = 2000)) AND isnotnull(d_date_sk#1123))\n                                                                     +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#1123,d_year#1129,d_qoy#1133] Batched: true, DataFilters: [isnotnull(d_qoy#1133), isnotnull(d_year#1129), (d_qoy#1133 = 2), (d_year#1129 = 2000), isnotnull..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_qoy), IsNotNull(d_year), EqualTo(d_qoy,2), EqualTo(d_year,2000), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int,d_qoy:int>\n   :     :                 :                 +- BroadcastQueryStage 0\n   :     :                 :                    +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=852]\n   :     :                 :                       +- *(1) Filter ((((isnotnull(d_qoy#1133) AND isnotnull(d_year#1129)) AND (d_qoy#1133 = 2)) AND (d_year#1129 = 2000)) AND isnotnull(d_date_sk#1123))\n   :     :                 :                          +- *(1) ColumnarToRow\n   :     :                 :                             +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#1123,d_year#1129,d_qoy#1133] Batched: true, DataFilters: [isnotnull(d_qoy#1133), isnotnull(d_year#1129), (d_qoy#1133 = 2), (d_year#1129 = 2000), isnotnull..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_qoy), IsNotNull(d_year), EqualTo(d_qoy,2), EqualTo(d_year,2000), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int,d_qoy:int>\n   :     :                 +- *(20) Sort [ca_address_sk#1151 ASC NULLS FIRST], false, 0\n   :     :                    +- AQEShuffleRead coalesced\n   :     :                       +- ShuffleQueryStage 1\n   :     :                          +- Exchange hashpartitioning(ca_address_sk#1151, 200), ENSURE_REQUIREMENTS, [plan_id=871]\n   :     :                             +- *(2) Filter (isnotnull(ca_address_sk#1151) AND isnotnull(ca_county#1158))\n   :     :                                +- *(2) ColumnarToRow\n   :     :                                   +- FileScan parquet spark_catalog.tpcds_100.customer_address[ca_address_sk#1151,ca_county#1158] Batched: true, DataFilters: [isnotnull(ca_address_sk#1151), isnotnull(ca_county#1158)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/customer_..., PartitionFilters: [], PushedFilters: [IsNotNull(ca_address_sk), IsNotNull(ca_county)], ReadSchema: struct<ca_address_sk:int,ca_county:string>\n   :     +- BroadcastQueryStage 35\n   :        +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, string, true]),false), [plan_id=4802]\n   :           +- *(40) HashAggregate(keys=[ca_county#1223, d_qoy#1198, d_year#1194], functions=[sum(UnscaledValue(ss_ext_sales_price#1179))], output=[ca_county#1223, store_sales#803])\n   :              +- AQEShuffleRead coalesced\n   :                 +- ShuffleQueryStage 29\n   :                    +- Exchange hashpartitioning(ca_county#1223, d_qoy#1198, d_year#1194, 200), ENSURE_REQUIREMENTS, [plan_id=3835]\n   :                       +- *(30) HashAggregate(keys=[ca_county#1223, d_qoy#1198, d_year#1194], functions=[partial_sum(UnscaledValue(ss_ext_sales_price#1179))], output=[ca_county#1223, d_qoy#1198, d_year#1194, sum#1391L])\n   :                          +- *(30) Project [ss_ext_sales_price#1179, d_year#1194, d_qoy#1198, ca_county#1223]\n   :                             +- *(30) SortMergeJoin [ss_addr_sk#1170], [ca_address_sk#1216], Inner\n   :                                :- *(28) Sort [ss_addr_sk#1170 ASC NULLS FIRST], false, 0\n   :                                :  +- AQEShuffleRead coalesced\n   :                                :     +- ShuffleQueryStage 20\n   :                                :        +- Exchange hashpartitioning(ss_addr_sk#1170, 200), ENSURE_REQUIREMENTS, [plan_id=1687]\n   :                                :           +- *(13) Project [ss_addr_sk#1170, ss_ext_sales_price#1179, d_year#1194, d_qoy#1198]\n   :                                :              +- *(13) BroadcastHashJoin [ss_sold_date_sk#1187], [d_date_sk#1188], Inner, BuildRight, false\n   :                                :                 :- *(13) Filter isnotnull(ss_addr_sk#1170)\n   :                                :                 :  +- *(13) ColumnarToRow\n   :                                :                 :     +- FileScan parquet spark_catalog.tpcds_100.store_sales[ss_addr_sk#1170,ss_ext_sales_price#1179,ss_sold_date_sk#1187] Batched: true, DataFilters: [isnotnull(ss_addr_sk#1170)], Format: Parquet, Location: InMemoryFileIndex(1823 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/store_..., PartitionFilters: [isnotnull(ss_sold_date_sk#1187), dynamicpruningexpression(ss_sold_date_sk#1187 IN dynamicpruning..., PushedFilters: [IsNotNull(ss_addr_sk)], ReadSchema: struct<ss_addr_sk:int,ss_ext_sales_price:decimal(7,2)>\n   :                                :                 :           +- SubqueryBroadcast dynamicpruning#1383, 0, [d_date_sk#1188], [id=#1661]\n   :                                :                 :              +- AdaptiveSparkPlan isFinalPlan=true\n                                                                        +- == Final Plan ==\n                                                                           BroadcastQueryStage 1\n                                                                           +- ReusedExchange [d_date_sk#1188, d_year#1194, d_qoy#1198], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=893]\n                                                                        +- == Initial Plan ==\n                                                                           BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=1658]\n                                                                           +- Filter ((((isnotnull(d_qoy#1198) AND isnotnull(d_year#1194)) AND (d_qoy#1198 = 3)) AND (d_year#1194 = 2000)) AND isnotnull(d_date_sk#1188))\n                                                                              +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#1188,d_year#1194,d_qoy#1198] Batched: true, DataFilters: [isnotnull(d_qoy#1198), isnotnull(d_year#1194), (d_qoy#1198 = 3), (d_year#1194 = 2000), isnotnull..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_qoy), IsNotNull(d_year), EqualTo(d_qoy,3), EqualTo(d_year,2000), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int,d_qoy:int>\n   :                                :                 +- BroadcastQueryStage 2\n   :                                :                    +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=893]\n   :                                :                       +- *(3) Filter ((((isnotnull(d_qoy#1198) AND isnotnull(d_year#1194)) AND (d_qoy#1198 = 3)) AND (d_year#1194 = 2000)) AND isnotnull(d_date_sk#1188))\n   :                                :                          +- *(3) ColumnarToRow\n   :                                :                             +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#1188,d_year#1194,d_qoy#1198] Batched: true, DataFilters: [isnotnull(d_qoy#1198), isnotnull(d_year#1194), (d_qoy#1198 = 3), (d_year#1194 = 2000), isnotnull..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_qoy), IsNotNull(d_year), EqualTo(d_qoy,3), EqualTo(d_year,2000), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int,d_qoy:int>\n   :                                +- *(29) Sort [ca_address_sk#1216 ASC NULLS FIRST], false, 0\n   :                                   +- AQEShuffleRead coalesced\n   :                                      +- ShuffleQueryStage 4\n   :                                         +- ReusedExchange [ca_address_sk#1216, ca_county#1223], Exchange hashpartitioning(ca_address_sk#1151, 200), ENSURE_REQUIREMENTS, [plan_id=871]\n   +- BroadcastQueryStage 34\n      +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, string, true]),false), [plan_id=4710]\n         +- *(39) HashAggregate(keys=[ca_county#64, d_qoy#39, d_year#35], functions=[sum(UnscaledValue(ss_ext_sales_price#20))], output=[ca_county#64, d_year#35, store_sales#749])\n            +- AQEShuffleRead coalesced\n               +- ShuffleQueryStage 28\n                  +- Exchange hashpartitioning(ca_county#64, d_qoy#39, d_year#35, 200), ENSURE_REQUIREMENTS, [plan_id=3632]\n                     +- *(27) HashAggregate(keys=[ca_county#64, d_qoy#39, d_year#35], functions=[partial_sum(UnscaledValue(ss_ext_sales_price#20))], output=[ca_county#64, d_qoy#39, d_year#35, sum#1393L])\n                        +- *(27) Project [ss_ext_sales_price#20, d_year#35, d_qoy#39, ca_county#64]\n                           +- *(27) SortMergeJoin [ss_addr_sk#11], [ca_address_sk#57], Inner\n                              :- *(25) Sort [ss_addr_sk#11 ASC NULLS FIRST], false, 0\n                              :  +- AQEShuffleRead coalesced\n                              :     +- ShuffleQueryStage 23\n                              :        +- Exchange hashpartitioning(ss_addr_sk#11, 200), ENSURE_REQUIREMENTS, [plan_id=2252]\n                              :           +- *(16) Project [ss_addr_sk#11, ss_ext_sales_price#20, d_year#35, d_qoy#39]\n                              :              +- *(16) BroadcastHashJoin [ss_sold_date_sk#28], [d_date_sk#29], Inner, BuildRight, false\n                              :                 :- *(16) Filter isnotnull(ss_addr_sk#11)\n                              :                 :  +- *(16) ColumnarToRow\n                              :                 :     +- FileScan parquet spark_catalog.tpcds_100.store_sales[ss_addr_sk#11,ss_ext_sales_price#20,ss_sold_date_sk#28] Batched: true, DataFilters: [isnotnull(ss_addr_sk#11)], Format: Parquet, Location: InMemoryFileIndex(1823 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/store_..., PartitionFilters: [isnotnull(ss_sold_date_sk#28), dynamicpruningexpression(ss_sold_date_sk#28 IN dynamicpruning#1384)], PushedFilters: [IsNotNull(ss_addr_sk)], ReadSchema: struct<ss_addr_sk:int,ss_ext_sales_price:decimal(7,2)>\n                              :                 :           +- SubqueryBroadcast dynamicpruning#1384, 0, [d_date_sk#29], [id=#2226]\n                              :                 :              +- AdaptiveSparkPlan isFinalPlan=true\n                                                                  +- == Final Plan ==\n                                                                     BroadcastQueryStage 1\n                                                                     +- ReusedExchange [d_date_sk#29, d_year#35, d_qoy#39], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=939]\n                                                                  +- == Initial Plan ==\n                                                                     BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=2223]\n                                                                     +- Filter ((((isnotnull(d_qoy#39) AND isnotnull(d_year#35)) AND (d_qoy#39 = 1)) AND (d_year#35 = 2000)) AND isnotnull(d_date_sk#29))\n                                                                        +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#29,d_year#35,d_qoy#39] Batched: true, DataFilters: [isnotnull(d_qoy#39), isnotnull(d_year#35), (d_qoy#39 = 1), (d_year#35 = 2000), isnotnull(d_date_..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_qoy), IsNotNull(d_year), EqualTo(d_qoy,1), EqualTo(d_year,2000), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int,d_qoy:int>\n                              :                 +- BroadcastQueryStage 5\n                              :                    +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=939]\n                              :                       +- *(5) Filter ((((isnotnull(d_qoy#39) AND isnotnull(d_year#35)) AND (d_qoy#39 = 1)) AND (d_year#35 = 2000)) AND isnotnull(d_date_sk#29))\n                              :                          +- *(5) ColumnarToRow\n                              :                             +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#29,d_year#35,d_qoy#39] Batched: true, DataFilters: [isnotnull(d_qoy#39), isnotnull(d_year#35), (d_qoy#39 = 1), (d_year#35 = 2000), isnotnull(d_date_..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_qoy), IsNotNull(d_year), EqualTo(d_qoy,1), EqualTo(d_year,2000), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int,d_qoy:int>\n                              +- *(26) Sort [ca_address_sk#57 ASC NULLS FIRST], false, 0\n                                 +- AQEShuffleRead coalesced\n                                    +- ShuffleQueryStage 7\n                                       +- ReusedExchange [ca_address_sk#57, ca_county#64], Exchange hashpartitioning(ca_address_sk#1151, 200), ENSURE_REQUIREMENTS, [plan_id=871]\n"
      },
      "IM" : {
        "inputSizeInBytes" : 67450720,
        "inputRowCount" : 7384
      },
      "InitialPartitionNum" : 200,
      "PD" : {
        "7" : [ 456, 773, 552, 378, 736, 456, 736, 668, 668, 810, 668, 342, 736, 1029, 608, 702, 810, 552, 608, 414, 736, 435, 414, 608, 312, 608, 736, 456, 1078, 736, 810, 502, 850, 608, 608, 502, 502, 608, 435, 980, 638, 552, 456, 580, 552, 312, 502, 502, 527, 608, 456, 608, 456, 736, 552, 668, 527, 980, 810, 608, 890, 396, 608, 608, 527, 608, 773, 773, 552, 527, 502, 1186, 702, 502, 890, 527, 668, 608, 668, 638, 736, 736, 552, 456, 608, 608, 552, 736, 502, 773, 527, 502, 435, 850, 502, 773, 773, 552, 668, 668, 668, 668, 638, 736, 810, 736, 668, 608, 668, 608, 890, 456, 810, 850, 479, 479, 552, 580, 608, 312, 850, 527, 608, 608, 702, 736, 638, 890, 456, 810, 668, 810, 479, 502, 638, 580, 552, 850, 668, 608, 1029, 552, 435, 608, 608, 502, 608, 810, 502, 552, 608, 736, 580, 378, 414, 502, 456, 396, 608, 527, 810, 810, 980, 980, 810, 810, 284, 668, 608, 810, 668, 736, 502, 608, 502, 552, 502, 736, 396, 414, 608, 502, 527, 736, 502, 552, 890, 456, 608, 668, 608, 668, 378, 736, 502, 736, 668, 668, 414, 810 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 1,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 20,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 39 ],
      "Objectives" : {
        "DurationInMs" : 96,
        "TotalTasksDurationInMs" : 88,
        "IOBytes" : {
          "Total" : 119537,
          "Details" : {
            "IR" : 0,
            "IW" : 0,
            "SR" : 119537,
            "SW" : 0
          }
        }
      }
    },
    "2" : {
      "QSLogical" : {
        "operators" : {
          "0" : {
            "sign" : 1118914342,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 2900,
                "rowCount" : 145
              },
              "compileTime" : {
                "sizeInBytes" : 2900,
                "rowCount" : 145
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#29, d_year#35, d_qoy#39] "
          },
          "1" : {
            "sign" : 1105724623,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 35670,
                "rowCount" : 145
              },
              "compileTime" : {
                "sizeInBytes" : 35670,
                "rowCount" : 145
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(d_qoy#39) AND isnotnull(d_year#35)) AND ((d_qoy#39 = 1) AND (d_year#35 = 2000))) AND isnotnull(d_date_sk#29)) "
          },
          "2" : {
            "sign" : -2087206825,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 17970054,
                "rowCount" : 73049
              },
              "compileTime" : {
                "sizeInBytes" : 17970054,
                "rowCount" : 73049
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#29, d_date_id#30, d_date#31, d_month_seq#32, d_week_seq#33, d_quarter_seq#34, d_year#35, d_dow#36, d_moy#37, d_dom#38, d_qoy#39, d_fy_year#40, d_fy_quarter_seq#41, d_fy_week_seq#42, d_day_name#43, d_quarter_name#44, d_holiday#45, d_weekend#46, d_following_holiday#47, d_first_dom#48, d_last_dom#49, d_same_day_ly#50, d_same_day_lq#51, d_current_day#52, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "LogicalRelation",
          "toId" : 1,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Filter",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [d_date_sk#29, d_year#35, d_qoy#39]\n+- Filter (((isnotnull(d_qoy#39) AND isnotnull(d_year#35)) AND ((d_qoy#39 = 1) AND (d_year#35 = 2000))) AND isnotnull(d_date_sk#29))\n   +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#29,d_date_id#30,d_date#31,d_month_seq#32,d_week_seq#33,d_quarter_seq#34,d_year#35,d_dow#36,d_moy#37,d_dom#38,d_qoy#39,d_fy_year#40,d_fy_quarter_seq#41,d_fy_week_seq#42,d_day_name#43,d_quarter_name#44,d_holiday#45,d_weekend#46,d_following_holiday#47,d_first_dom#48,d_last_dom#49,d_same_day_ly#50,d_same_day_lq#51,d_current_day#52,... 4 more fields] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "0" : {
            "sign" : 592619498,
            "className" : "org.apache.spark.sql.execution.FilterExec",
            "sizeInBytes" : 2900,
            "rowCount" : 145,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Input [3]: [d_date_sk#29, d_year#35, d_qoy#39] Condition : ((((isnotnull(d_qoy#39) AND isnotnull(d_year#35)) AND (d_qoy#39 = 1)) AND (d_year#35 = 2000)) AND isnotnull(d_date_sk#29)) "
          },
          "1" : {
            "sign" : 887595758,
            "className" : "org.apache.spark.sql.execution.FileSourceScanExec",
            "sizeInBytes" : 2900,
            "rowCount" : 145,
            "isRuntime" : false,
            "predicate" : " (unknown) Scan parquet spark_catalog.tpcds_100.date_dim Output [3]: [d_date_sk#29, d_year#35, d_qoy#39] Batched: true Location: InMemoryFileIndex [hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim] PushedFilters: [IsNotNull(d_qoy), IsNotNull(d_year), EqualTo(d_qoy,1), EqualTo(d_year,2000), IsNotNull(d_date_sk)] ReadSchema: struct<d_date_sk:int,d_year:int,d_qoy:int> "
          }
        },
        "links" : [ {
          "fromId" : 1,
          "fromName" : "Scan parquet spark_catalog.tpcds_100.date_dim",
          "toId" : 0,
          "toName" : "Filter",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Filter ((((isnotnull(d_qoy#39) AND isnotnull(d_year#35)) AND (d_qoy#39 = 1)) AND (d_year#35 = 2000)) AND isnotnull(d_date_sk#29))\n+- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#29,d_year#35,d_qoy#39] Batched: true, DataFilters: [isnotnull(d_qoy#39), isnotnull(d_year#35), (d_qoy#39 = 1), (d_year#35 = 2000), isnotnull(d_date_..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_qoy), IsNotNull(d_year), EqualTo(d_qoy,1), EqualTo(d_year,2000), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int,d_qoy:int>\n"
      },
      "IM" : {
        "inputSizeInBytes" : 2900,
        "inputRowCount" : 145
      },
      "InitialPartitionNum" : 0,
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 3,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 5 ],
      "Objectives" : {
        "DurationInMs" : 1857,
        "TotalTasksDurationInMs" : 1848,
        "IOBytes" : {
          "Total" : 93845,
          "Details" : {
            "IR" : 93845,
            "IW" : 0,
            "SR" : 0,
            "SW" : 0
          }
        }
      }
    },
    "18" : {
      "QSLogical" : {
        "operators" : {
          "0" : {
            "sign" : -1313788163,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 210784,
                "rowCount" : 3692
              },
              "compileTime" : {
                "sizeInBytes" : 87354,
                "rowCount" : 1899
              }
            },
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [ca_county#64, d_qoy#39, d_year#35], [ca_county#64, d_year#35, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#20)),17,2) AS store_sales#749], HashAggregate(keys=[ca_county#64, d_qoy#39, d_year#35], functions=[sum(UnscaledValue(ss_ext_sales_price#20))]) "
          }
        },
        "links" : [ ],
        "rawPlan" : "LogicalQueryStage Aggregate [ca_county#64, d_qoy#39, d_year#35], [ca_county#64, d_year#35, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#20)),17,2) AS store_sales#749], HashAggregate(keys=[ca_county#64, d_qoy#39, d_year#35], functions=[sum(UnscaledValue(ss_ext_sales_price#20))])\n"
      },
      "QSPhysical" : {
        "operators" : {
          "0" : {
            "sign" : -927986924,
            "className" : "org.apache.spark.sql.execution.aggregate.HashAggregateExec",
            "sizeInBytes" : 210784,
            "rowCount" : 3692,
            "isRuntime" : true,
            "predicate" : " (unknown) HashAggregate Input [4]: [ca_county#64, d_qoy#39, d_year#35, sum#1393L] Keys [3]: [ca_county#64, d_qoy#39, d_year#35] Functions [1]: [sum(UnscaledValue(ss_ext_sales_price#20))] Aggregate Attributes [1]: [sum(UnscaledValue(ss_ext_sales_price#20))#792L] Results [3]: [ca_county#64, d_year#35, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#20))#792L,17,2) AS store_sales#749] "
          },
          "1" : {
            "sign" : -1714592076,
            "className" : "org.apache.spark.sql.execution.adaptive.ShuffleQueryStageExec",
            "sizeInBytes" : 87354,
            "rowCount" : 1899,
            "isRuntime" : false,
            "predicate" : " (unknown) ShuffleQueryStage Output [4]: [ca_county#64, d_qoy#39, d_year#35, sum#1393L] Arguments: 28 "
          }
        },
        "links" : [ {
          "fromId" : 1,
          "fromName" : "ShuffleQueryStage",
          "toId" : 0,
          "toName" : "HashAggregate",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "HashAggregate(keys=[ca_county#64, d_qoy#39, d_year#35], functions=[sum(UnscaledValue(ss_ext_sales_price#20))], output=[ca_county#64, d_year#35, store_sales#749])\n+- ShuffleQueryStage 28\n   +- Exchange hashpartitioning(ca_county#64, d_qoy#39, d_year#35, 200), ENSURE_REQUIREMENTS, [plan_id=3632]\n      +- *(27) HashAggregate(keys=[ca_county#64, d_qoy#39, d_year#35], functions=[partial_sum(UnscaledValue(ss_ext_sales_price#20))], output=[ca_county#64, d_qoy#39, d_year#35, sum#1393L])\n         +- *(27) Project [ss_ext_sales_price#20, d_year#35, d_qoy#39, ca_county#64]\n            +- *(27) SortMergeJoin [ss_addr_sk#11], [ca_address_sk#57], Inner\n               :- *(25) Sort [ss_addr_sk#11 ASC NULLS FIRST], false, 0\n               :  +- AQEShuffleRead coalesced\n               :     +- ShuffleQueryStage 23\n               :        +- Exchange hashpartitioning(ss_addr_sk#11, 200), ENSURE_REQUIREMENTS, [plan_id=2252]\n               :           +- *(16) Project [ss_addr_sk#11, ss_ext_sales_price#20, d_year#35, d_qoy#39]\n               :              +- *(16) BroadcastHashJoin [ss_sold_date_sk#28], [d_date_sk#29], Inner, BuildRight, false\n               :                 :- *(16) Filter isnotnull(ss_addr_sk#11)\n               :                 :  +- *(16) ColumnarToRow\n               :                 :     +- FileScan parquet spark_catalog.tpcds_100.store_sales[ss_addr_sk#11,ss_ext_sales_price#20,ss_sold_date_sk#28] Batched: true, DataFilters: [isnotnull(ss_addr_sk#11)], Format: Parquet, Location: InMemoryFileIndex(1823 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/store_..., PartitionFilters: [isnotnull(ss_sold_date_sk#28), dynamicpruningexpression(ss_sold_date_sk#28 IN dynamicpruning#1384)], PushedFilters: [IsNotNull(ss_addr_sk)], ReadSchema: struct<ss_addr_sk:int,ss_ext_sales_price:decimal(7,2)>\n               :                 :           +- SubqueryBroadcast dynamicpruning#1384, 0, [d_date_sk#29], [id=#2226]\n               :                 :              +- AdaptiveSparkPlan isFinalPlan=true\n                                                   +- == Final Plan ==\n                                                      BroadcastQueryStage 1\n                                                      +- ReusedExchange [d_date_sk#29, d_year#35, d_qoy#39], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=939]\n                                                   +- == Initial Plan ==\n                                                      BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=2223]\n                                                      +- Filter ((((isnotnull(d_qoy#39) AND isnotnull(d_year#35)) AND (d_qoy#39 = 1)) AND (d_year#35 = 2000)) AND isnotnull(d_date_sk#29))\n                                                         +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#29,d_year#35,d_qoy#39] Batched: true, DataFilters: [isnotnull(d_qoy#39), isnotnull(d_year#35), (d_qoy#39 = 1), (d_year#35 = 2000), isnotnull(d_date_..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_qoy), IsNotNull(d_year), EqualTo(d_qoy,1), EqualTo(d_year,2000), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int,d_qoy:int>\n               :                 +- BroadcastQueryStage 5\n               :                    +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=939]\n               :                       +- *(5) Filter ((((isnotnull(d_qoy#39) AND isnotnull(d_year#35)) AND (d_qoy#39 = 1)) AND (d_year#35 = 2000)) AND isnotnull(d_date_sk#29))\n               :                          +- *(5) ColumnarToRow\n               :                             +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#29,d_year#35,d_qoy#39] Batched: true, DataFilters: [isnotnull(d_qoy#39), isnotnull(d_year#35), (d_qoy#39 = 1), (d_year#35 = 2000), isnotnull(d_date_..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_qoy), IsNotNull(d_year), EqualTo(d_qoy,1), EqualTo(d_year,2000), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int,d_qoy:int>\n               +- *(26) Sort [ca_address_sk#57 ASC NULLS FIRST], false, 0\n                  +- AQEShuffleRead coalesced\n                     +- ShuffleQueryStage 7\n                        +- ReusedExchange [ca_address_sk#57, ca_county#64], Exchange hashpartitioning(ca_address_sk#1151, 200), ENSURE_REQUIREMENTS, [plan_id=871]\n"
      },
      "IM" : {
        "inputSizeInBytes" : 210784,
        "inputRowCount" : 3692
      },
      "InitialPartitionNum" : 200,
      "PD" : {
        "9" : [ 668, 810, 668, 552, 736, 890, 850, 736, 736, 502, 668, 414, 502, 502, 638, 608, 736, 608, 702, 502, 552, 378, 456, 890, 502, 608, 552, 736, 850, 608, 414, 850, 608, 502, 456, 668, 668, 810, 736, 668, 552, 378, 810, 608, 668, 552, 435, 502, 608, 668, 502, 378, 810, 736, 552, 810, 736, 552, 552, 580, 702, 479, 890, 890, 502, 890, 736, 810, 935, 327, 608, 502, 456, 608, 414, 890, 668, 527, 668, 736, 608, 456, 552, 552, 456, 668, 1078, 312, 668, 552, 638, 1078, 736, 810, 668, 773, 552, 552, 736, 668, 608, 456, 552, 312, 435, 552, 668, 258, 608, 608, 668, 810, 552, 435, 608, 552, 342, 668, 935, 736, 668, 608, 736, 552, 552, 580, 736, 552, 736, 456, 552, 668, 608, 668, 668, 890, 342, 435, 435, 580, 810, 980, 736, 668, 552, 890, 502, 608, 608, 608, 810, 668, 773, 456, 435, 552, 773, 552, 342, 502, 668, 414, 638, 608, 668, 608, 502, 502, 580, 668, 502, 552, 702, 736, 608, 736, 502, 608, 638, 552, 638, 980, 580, 980, 810, 608, 668, 736, 980, 668, 668, 580, 980, 414, 552, 414, 810, 638, 736, 360 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 3,
        "FinishedTasksNum" : 1,
        "FinishedTasksTotalTimeInMs" : 1580.0,
        "FinishedTasksDistributionInMs" : [ 1580.0, 1580.0, 1580.0, 1580.0, 1580.0 ]
      },
      "QueryStageOptimizationId" : 18,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 33 ],
      "Objectives" : {
        "DurationInMs" : 80,
        "TotalTasksDurationInMs" : 73,
        "IOBytes" : {
          "Total" : 120174,
          "Details" : {
            "IR" : 0,
            "IW" : 0,
            "SR" : 120174,
            "SW" : 0
          }
        }
      }
    },
    "7" : {
      "QSLogical" : {
        "operators" : {
          "4" : {
            "sign" : 1954421237,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 41806893656,
                "rowCount" : 275045353
              },
              "compileTime" : {
                "sizeInBytes" : 41806893656,
                "rowCount" : 275045353
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#6, ss_item_sk#7, ss_customer_sk#8, ss_cdemo_sk#9, ss_hdemo_sk#10, ss_addr_sk#11, ss_store_sk#12, ss_promo_sk#13, ss_ticket_number#14L, ss_quantity#15, ss_wholesale_cost#16, ss_list_price#17, ss_sales_price#18, ss_ext_discount_amt#19, ss_ext_sales_price#20, ss_ext_wholesale_cost#21, ss_ext_list_price#22, ss_ext_tax#23, ss_coupon_amt#24, ss_net_paid#25, ss_net_paid_inc_tax#26, ss_net_profit#27, ss_sold_date_sk#28], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "1" : {
            "sign" : 2009884762,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 9559461060,
                "rowCount" : 265540585
              },
              "compileTime" : {
                "sizeInBytes" : 9559461060,
                "rowCount" : 265540585
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#28 = d_date_sk#29) "
          },
          "0" : {
            "sign" : -993324281,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 7435136380,
                "rowCount" : 265540585
              },
              "compileTime" : {
                "sizeInBytes" : 7435136380,
                "rowCount" : 265540585
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_addr_sk#11, ss_ext_sales_price#20, d_year#35, d_qoy#39] "
          },
          "2" : {
            "sign" : 951653223,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 6304008672,
                "rowCount" : 262667028
              },
              "compileTime" : {
                "sizeInBytes" : 6304008672,
                "rowCount" : 262667028
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_addr_sk#11, ss_ext_sales_price#20, ss_sold_date_sk#28] "
          },
          "3" : {
            "sign" : -863453878,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 39925388256,
                "rowCount" : 262667028
              },
              "compileTime" : {
                "sizeInBytes" : 39925388256,
                "rowCount" : 262667028
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(ss_sold_date_sk#28) AND isnotnull(ss_addr_sk#11)) AND dynamicpruning#1384 [ss_sold_date_sk#28]) "
          }
        },
        "links" : [ {
          "fromId" : 4,
          "fromName" : "LogicalRelation",
          "toId" : 3,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Filter",
          "toId" : 2,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Project",
          "toId" : 1,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Join",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [ss_addr_sk#11, ss_ext_sales_price#20, d_year#35, d_qoy#39]\n+- Join Inner, (ss_sold_date_sk#28 = d_date_sk#29)\n   :- Project [ss_addr_sk#11, ss_ext_sales_price#20, ss_sold_date_sk#28]\n   :  +- Filter ((isnotnull(ss_sold_date_sk#28) AND isnotnull(ss_addr_sk#11)) AND dynamicpruning#1384 [ss_sold_date_sk#28])\n   :     :  +- Project [d_date_sk#29, d_year#35, d_qoy#39]\n   :     :     +- Filter (((isnotnull(d_qoy#39) AND isnotnull(d_year#35)) AND ((d_qoy#39 = 1) AND (d_year#35 = 2000))) AND isnotnull(d_date_sk#29))\n   :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#29,d_date_id#30,d_date#31,d_month_seq#32,d_week_seq#33,d_quarter_seq#34,d_year#35,d_dow#36,d_moy#37,d_dom#38,d_qoy#39,d_fy_year#40,d_fy_quarter_seq#41,d_fy_week_seq#42,d_day_name#43,d_quarter_name#44,d_holiday#45,d_weekend#46,d_following_holiday#47,d_first_dom#48,d_last_dom#49,d_same_day_ly#50,d_same_day_lq#51,d_current_day#52,... 4 more fields] parquet\n   :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#6,ss_item_sk#7,ss_customer_sk#8,ss_cdemo_sk#9,ss_hdemo_sk#10,ss_addr_sk#11,ss_store_sk#12,ss_promo_sk#13,ss_ticket_number#14L,ss_quantity#15,ss_wholesale_cost#16,ss_list_price#17,ss_sales_price#18,ss_ext_discount_amt#19,ss_ext_sales_price#20,ss_ext_wholesale_cost#21,ss_ext_list_price#22,ss_ext_tax#23,ss_coupon_amt#24,ss_net_paid#25,ss_net_paid_inc_tax#26,ss_net_profit#27,ss_sold_date_sk#28] parquet\n   +- Project [d_date_sk#29, d_year#35, d_qoy#39]\n      +- Filter (((isnotnull(d_qoy#39) AND isnotnull(d_year#35)) AND ((d_qoy#39 = 1) AND (d_year#35 = 2000))) AND isnotnull(d_date_sk#29))\n         +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#29,d_date_id#30,d_date#31,d_month_seq#32,d_week_seq#33,d_quarter_seq#34,d_year#35,d_dow#36,d_moy#37,d_dom#38,d_qoy#39,d_fy_year#40,d_fy_quarter_seq#41,d_fy_week_seq#42,d_day_name#43,d_quarter_name#44,d_holiday#45,d_weekend#46,d_following_holiday#47,d_first_dom#48,d_last_dom#49,d_same_day_ly#50,d_same_day_lq#51,d_current_day#52,... 4 more fields] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "4" : {
            "sign" : -1929916828,
            "className" : "org.apache.spark.sql.execution.adaptive.BroadcastQueryStageExec",
            "sizeInBytes" : 1049304,
            "rowCount" : 91,
            "isRuntime" : true,
            "predicate" : " (unknown) BroadcastQueryStage Output [3]: [d_date_sk#29, d_year#35, d_qoy#39] Arguments: 5 "
          },
          "1" : {
            "sign" : 1759857506,
            "className" : "org.apache.spark.sql.execution.joins.BroadcastHashJoinExec",
            "sizeInBytes" : 9559461060,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) BroadcastHashJoin Left keys [1]: [ss_sold_date_sk#28] Right keys [1]: [d_date_sk#29] Join type: Inner Join condition: None "
          },
          "0" : {
            "sign" : -871386757,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 7435136380,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [4]: [ss_addr_sk#11, ss_ext_sales_price#20, d_year#35, d_qoy#39] Input [6]: [ss_addr_sk#11, ss_ext_sales_price#20, ss_sold_date_sk#28, d_date_sk#29, d_year#35, d_qoy#39] "
          },
          "2" : {
            "sign" : 1766017961,
            "className" : "org.apache.spark.sql.execution.FilterExec",
            "sizeInBytes" : 6304008672,
            "rowCount" : 262667028,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Input [3]: [ss_addr_sk#11, ss_ext_sales_price#20, ss_sold_date_sk#28] Condition : isnotnull(ss_addr_sk#11) "
          },
          "3" : {
            "sign" : -758074556,
            "className" : "org.apache.spark.sql.execution.FileSourceScanExec",
            "sizeInBytes" : 6304008672,
            "rowCount" : 262667028,
            "isRuntime" : false,
            "predicate" : " (unknown) Scan parquet spark_catalog.tpcds_100.store_sales Output [3]: [ss_addr_sk#11, ss_ext_sales_price#20, ss_sold_date_sk#28] Batched: true Location: InMemoryFileIndex [hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/store_sales/ss_sold_date_sk=2450816, ... 1822 entries] PartitionFilters: [isnotnull(ss_sold_date_sk#28), dynamicpruningexpression(ss_sold_date_sk#28 IN dynamicpruning#1384)] PushedFilters: [IsNotNull(ss_addr_sk)] ReadSchema: struct<ss_addr_sk:int,ss_ext_sales_price:decimal(7,2)> "
          }
        },
        "links" : [ {
          "fromId" : 3,
          "fromName" : "Scan parquet spark_catalog.tpcds_100.store_sales",
          "toId" : 2,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Filter",
          "toId" : 1,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "BroadcastQueryStage",
          "toId" : 1,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "BroadcastHashJoin",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [ss_addr_sk#11, ss_ext_sales_price#20, d_year#35, d_qoy#39]\n+- BroadcastHashJoin [ss_sold_date_sk#28], [d_date_sk#29], Inner, BuildRight, false\n   :- Filter isnotnull(ss_addr_sk#11)\n   :  +- FileScan parquet spark_catalog.tpcds_100.store_sales[ss_addr_sk#11,ss_ext_sales_price#20,ss_sold_date_sk#28] Batched: true, DataFilters: [isnotnull(ss_addr_sk#11)], Format: Parquet, Location: InMemoryFileIndex(1823 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/store_..., PartitionFilters: [isnotnull(ss_sold_date_sk#28), dynamicpruningexpression(ss_sold_date_sk#28 IN dynamicpruning#1384)], PushedFilters: [IsNotNull(ss_addr_sk)], ReadSchema: struct<ss_addr_sk:int,ss_ext_sales_price:decimal(7,2)>\n   :        +- SubqueryBroadcast dynamicpruning#1384, 0, [d_date_sk#29], [id=#2226]\n   :           +- AdaptiveSparkPlan isFinalPlan=false\n   :              +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=2223]\n   :                 +- Filter ((((isnotnull(d_qoy#39) AND isnotnull(d_year#35)) AND (d_qoy#39 = 1)) AND (d_year#35 = 2000)) AND isnotnull(d_date_sk#29))\n   :                    +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#29,d_year#35,d_qoy#39] Batched: true, DataFilters: [isnotnull(d_qoy#39), isnotnull(d_year#35), (d_qoy#39 = 1), (d_year#35 = 2000), isnotnull(d_date_..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_qoy), IsNotNull(d_year), EqualTo(d_qoy,1), EqualTo(d_year,2000), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int,d_qoy:int>\n   +- BroadcastQueryStage 5\n      +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=939]\n         +- *(5) Filter ((((isnotnull(d_qoy#39) AND isnotnull(d_year#35)) AND (d_qoy#39 = 1)) AND (d_year#35 = 2000)) AND isnotnull(d_date_sk#29))\n            +- *(5) ColumnarToRow\n               +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#29,d_year#35,d_qoy#39] Batched: true, DataFilters: [isnotnull(d_qoy#39), isnotnull(d_year#35), (d_qoy#39 = 1), (d_year#35 = 2000), isnotnull(d_date_..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_qoy), IsNotNull(d_year), EqualTo(d_qoy,1), EqualTo(d_year,2000), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int,d_qoy:int>\n"
      },
      "IM" : {
        "inputSizeInBytes" : 6305057976,
        "inputRowCount" : 262667119
      },
      "InitialPartitionNum" : 0,
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 16,
        "FinishedTasksNum" : 4,
        "FinishedTasksTotalTimeInMs" : 6018.0,
        "FinishedTasksDistributionInMs" : [ 1392.0, 1426.0, 1566.0, 1634.0, 1634.0 ]
      },
      "QueryStageOptimizationId" : 7,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 9 ],
      "Objectives" : {
        "DurationInMs" : 4103,
        "TotalTasksDurationInMs" : 6197,
        "IOBytes" : {
          "Total" : 112052281,
          "Details" : {
            "IR" : 40520809,
            "IW" : 0,
            "SR" : 0,
            "SW" : 71531472
          }
        }
      }
    },
    "3" : {
      "QSLogical" : {
        "operators" : {
          "0" : {
            "sign" : -162394803,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 36861710,
                "rowCount" : 970045
              },
              "compileTime" : {
                "sizeInBytes" : 36861710,
                "rowCount" : 970045
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ca_address_sk#1151, ca_county#1158] "
          },
          "1" : {
            "sign" : -2061495774,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 238631070,
                "rowCount" : 970045
              },
              "compileTime" : {
                "sizeInBytes" : 238631070,
                "rowCount" : 970045
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(ca_address_sk#1151) AND isnotnull(ca_county#1158)) "
          },
          "2" : {
            "sign" : -742641860,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 246000000,
                "rowCount" : 1000000
              },
              "compileTime" : {
                "sizeInBytes" : 246000000,
                "rowCount" : 1000000
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ca_address_sk#1151, ca_address_id#1152, ca_street_number#1153, ca_street_name#1154, ca_street_type#1155, ca_suite_number#1156, ca_city#1157, ca_county#1158, ca_state#1159, ca_zip#1160, ca_country#1161, ca_gmt_offset#1162, ca_location_type#1163], `spark_catalog`.`tpcds_100`.`customer_address`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "LogicalRelation",
          "toId" : 1,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Filter",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [ca_address_sk#1151, ca_county#1158]\n+- Filter (isnotnull(ca_address_sk#1151) AND isnotnull(ca_county#1158))\n   +- Relation spark_catalog.tpcds_100.customer_address[ca_address_sk#1151,ca_address_id#1152,ca_street_number#1153,ca_street_name#1154,ca_street_type#1155,ca_suite_number#1156,ca_city#1157,ca_county#1158,ca_state#1159,ca_zip#1160,ca_country#1161,ca_gmt_offset#1162,ca_location_type#1163] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "0" : {
            "sign" : -182199536,
            "className" : "org.apache.spark.sql.execution.FilterExec",
            "sizeInBytes" : 36861710,
            "rowCount" : 970045,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Input [2]: [ca_address_sk#1151, ca_county#1158] Condition : (isnotnull(ca_address_sk#1151) AND isnotnull(ca_county#1158)) "
          },
          "1" : {
            "sign" : 1106307382,
            "className" : "org.apache.spark.sql.execution.FileSourceScanExec",
            "sizeInBytes" : 36861710,
            "rowCount" : 970045,
            "isRuntime" : false,
            "predicate" : " (unknown) Scan parquet spark_catalog.tpcds_100.customer_address Output [2]: [ca_address_sk#1151, ca_county#1158] Batched: true Location: InMemoryFileIndex [hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/customer_address] PushedFilters: [IsNotNull(ca_address_sk), IsNotNull(ca_county)] ReadSchema: struct<ca_address_sk:int,ca_county:string> "
          }
        },
        "links" : [ {
          "fromId" : 1,
          "fromName" : "Scan parquet spark_catalog.tpcds_100.customer_address",
          "toId" : 0,
          "toName" : "Filter",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Filter (isnotnull(ca_address_sk#1151) AND isnotnull(ca_county#1158))\n+- FileScan parquet spark_catalog.tpcds_100.customer_address[ca_address_sk#1151,ca_county#1158] Batched: true, DataFilters: [isnotnull(ca_address_sk#1151), isnotnull(ca_county#1158)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/customer_..., PartitionFilters: [], PushedFilters: [IsNotNull(ca_address_sk), IsNotNull(ca_county)], ReadSchema: struct<ca_address_sk:int,ca_county:string>\n"
      },
      "IM" : {
        "inputSizeInBytes" : 36861710,
        "inputRowCount" : 970045
      },
      "InitialPartitionNum" : 0,
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 1,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 2 ],
      "Objectives" : {
        "DurationInMs" : 2815,
        "TotalTasksDurationInMs" : 8802,
        "IOBytes" : {
          "Total" : 21448653,
          "Details" : {
            "IR" : 5457755,
            "IW" : 0,
            "SR" : 0,
            "SW" : 15990898
          }
        }
      }
    }
  },
  "SQLStartTimeInMs" : 1702226845924,
  "SQLEndTimeInMs" : 1702226860990,
  "Objectives" : {
    "DurationInMs" : 15066,
    "IOBytes" : {
      "Total" : 974292425,
      "Details" : {
        "IR" : 195472914,
        "IW" : 0,
        "SR" : 429416902,
        "SW" : 349402609
      }
    }
  }
}
