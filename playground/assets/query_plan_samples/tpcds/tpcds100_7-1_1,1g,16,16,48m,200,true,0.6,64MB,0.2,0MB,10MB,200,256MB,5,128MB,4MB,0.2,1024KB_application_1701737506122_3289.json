{
  "CompileTimeLQP" : {
    "LQP" : {
      "operators" : {
        "12" : {
          "sign" : 383807151,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 13044107544,
          "rowCount" : 250848222,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [ss_item_sk#5, ss_cdemo_sk#7, ss_promo_sk#11, ss_quantity#13, ss_list_price#15, ss_sales_price#16, ss_coupon_amt#22, ss_sold_date_sk#26] "
        },
        "8" : {
          "sign" : -2015118706,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 12100083908,
          "rowCount" : 275001907,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [ss_item_sk#5, ss_promo_sk#11, ss_quantity#13, ss_list_price#15, ss_sales_price#16, ss_coupon_amt#22] "
        },
        "19" : {
          "sign" : -1818072944,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 2606800,
          "rowCount" : 27440,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: ((((isnotnull(cd_gender#28) AND isnotnull(cd_marital_status#29)) AND isnotnull(cd_education_status#30)) AND (((cd_gender#28 = F) AND (cd_marital_status#29 = W)) AND (cd_education_status#30 = Primary))) AND isnotnull(cd_demo_sk#27)) "
        },
        "23" : {
          "sign" : -489216055,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 86904000,
          "rowCount" : 204000,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [i_item_sk#64, i_item_id#65, i_rec_start_date#66, i_rec_end_date#67, i_item_desc#68, i_current_price#69, i_wholesale_cost#70, i_brand_id#71, i_brand#72, i_class_id#73, i_class#74, i_category_id#75, i_category#76, i_manufact_id#77, i_manufact#78, i_size#79, i_formulation#80, i_color#81, i_units#82, i_container#83, i_manager_id#84, i_product_name#85], `spark_catalog`.`tpcds_100`.`item`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "4" : {
          "sign" : 1763833103,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 25394016704,
          "rowCount" : 396781511,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [ss_quantity#13, ss_list_price#15, ss_sales_price#16, ss_coupon_amt#22, i_item_id#65] "
        },
        "15" : {
          "sign" : -525028844,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 6912,
          "rowCount" : 576,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [d_date_sk#36] "
        },
        "11" : {
          "sign" : 813288744,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 14870272760,
          "rowCount" : 265540585,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#26 = d_date_sk#36) "
        },
        "9" : {
          "sign" : 786211195,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 14300099164,
          "rowCount" : 275001907,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: Inner, (ss_cdemo_sk#7 = cd_demo_sk#27) "
        },
        "22" : {
          "sign" : 1715438015,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 86904000,
          "rowCount" : 204000,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: isnotnull(i_item_sk#64) "
        },
        "26" : {
          "sign" : -946600356,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 269000,
          "rowCount" : 1000,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [p_promo_sk#86, p_promo_id#87, p_start_date_sk#88, p_end_date_sk#89, p_item_sk#90, p_cost#91, p_response_target#92, p_promo_name#93, p_channel_dmail#94, p_channel_email#95, p_channel_catalog#96, p_channel_tv#97, p_channel_radio#98, p_channel_press#99, p_channel_event#100, p_channel_demo#101, p_channel_details#102, p_purpose#103, p_discount_active#104], `spark_catalog`.`tpcds_100`.`promotion`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "13" : {
          "sign" : 1012161466,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 38128929744,
          "rowCount" : 250848222,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: ((((isnotnull(ss_cdemo_sk#7) AND isnotnull(ss_sold_date_sk#26)) AND isnotnull(ss_item_sk#5)) AND isnotnull(ss_promo_sk#11)) AND dynamicpruning#119 [ss_sold_date_sk#26]) "
        },
        "24" : {
          "sign" : 1227354505,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 12000,
          "rowCount" : 1000,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [p_promo_sk#86] "
        },
        "16" : {
          "sign" : -957585321,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 141696,
          "rowCount" : 576,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: ((isnotnull(d_year#42) AND (d_year#42 = 1998)) AND isnotnull(d_date_sk#36)) "
        },
        "5" : {
          "sign" : 1940983088,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 28568268792,
          "rowCount" : 396781511,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: Inner, (ss_promo_sk#11 = p_promo_sk#86) "
        },
        "10" : {
          "sign" : -1855513329,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 12745948080,
          "rowCount" : 265540585,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [ss_item_sk#5, ss_cdemo_sk#7, ss_promo_sk#11, ss_quantity#13, ss_list_price#15, ss_sales_price#16, ss_coupon_amt#22] "
        },
        "21" : {
          "sign" : 199500188,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 8160000,
          "rowCount" : 204000,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [i_item_sk#64, i_item_id#65] "
        },
        "6" : {
          "sign" : 1147498968,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 19533538628,
          "rowCount" : 287257921,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [ss_promo_sk#11, ss_quantity#13, ss_list_price#15, ss_sales_price#16, ss_coupon_amt#22, i_item_id#65] "
        },
        "1" : {
          "sign" : 1942500192,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
          "sizeInBytes" : 7074856,
          "rowCount" : 104042,
          "isRuntime" : false,
          "predicate" : " (unknown) LocalLimit Arguments: 100 "
        },
        "17" : {
          "sign" : -539619062,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 17970054,
          "rowCount" : 73049,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#36, d_date_id#37, d_date#38, d_month_seq#39, d_week_seq#40, d_quarter_seq#41, d_year#42, d_dow#43, d_moy#44, d_dom#45, d_qoy#46, d_fy_year#47, d_fy_quarter_seq#48, d_fy_week_seq#49, d_day_name#50, d_quarter_name#51, d_holiday#52, d_weekend#53, d_following_holiday#54, d_first_dom#55, d_last_dom#56, d_same_day_ly#57, d_same_day_lq#58, d_current_day#59, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "25" : {
          "sign" : 1606523014,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 269000,
          "rowCount" : 1000,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: (((p_channel_email#95 = N) OR (p_channel_event#100 = N)) AND isnotnull(p_promo_sk#86)) "
        },
        "14" : {
          "sign" : 1769386681,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 41806893656,
          "rowCount" : 275045353,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#4, ss_item_sk#5, ss_customer_sk#6, ss_cdemo_sk#7, ss_hdemo_sk#8, ss_addr_sk#9, ss_store_sk#10, ss_promo_sk#11, ss_ticket_number#12L, ss_quantity#13, ss_wholesale_cost#14, ss_list_price#15, ss_sales_price#16, ss_ext_discount_amt#17, ss_ext_sales_price#18, ss_ext_wholesale_cost#19, ss_ext_list_price#20, ss_ext_tax#21, ss_coupon_amt#22, ss_net_paid#23, ss_net_paid_inc_tax#24, ss_net_profit#25, ss_sold_date_sk#26], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "0" : {
          "sign" : -312192269,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
          "sizeInBytes" : 6000,
          "rowCount" : 100,
          "isRuntime" : false,
          "predicate" : " (unknown) GlobalLimit Arguments: 100 "
        },
        "20" : {
          "sign" : 1196214447,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 182476000,
          "rowCount" : 1920800,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [cd_demo_sk#27, cd_gender#28, cd_marital_status#29, cd_education_status#30, cd_purchase_estimate#31, cd_credit_rating#32, cd_dep_count#33, cd_dep_employed_count#34, cd_dep_college_count#35], `spark_catalog`.`tpcds_100`.`customer_demographics`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "2" : {
          "sign" : -824085431,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
          "sizeInBytes" : 7074856,
          "rowCount" : 104042,
          "isRuntime" : false,
          "predicate" : " (unknown) Sort Arguments: [i_item_id#65 ASC NULLS FIRST], true "
        },
        "18" : {
          "sign" : -205129481,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 329280,
          "rowCount" : 27440,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [cd_demo_sk#27] "
        },
        "7" : {
          "sign" : -1082808271,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 21831601996,
          "rowCount" : 287257921,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: Inner, (ss_item_sk#5 = i_item_sk#64) "
        },
        "3" : {
          "sign" : -1676241963,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
          "sizeInBytes" : 7074856,
          "rowCount" : 104042,
          "isRuntime" : false,
          "predicate" : " (unknown) Aggregate Arguments: [i_item_id#65], [i_item_id#65, avg(ss_quantity#13) AS agg1#0, cast((avg(UnscaledValue(ss_list_price#15)) / 100.0) as decimal(11,6)) AS agg2#1, cast((avg(UnscaledValue(ss_coupon_amt#22)) / 100.0) as decimal(11,6)) AS agg3#2, cast((avg(UnscaledValue(ss_sales_price#16)) / 100.0) as decimal(11,6)) AS agg4#3] "
        }
      },
      "links" : [ {
        "fromId" : 14,
        "fromName" : "LogicalRelation",
        "toId" : 13,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 17,
        "fromName" : "LogicalRelation",
        "toId" : 16,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 16,
        "fromName" : "Filter",
        "toId" : 15,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 15,
        "fromName" : "Project",
        "toId" : 13,
        "toName" : "Filter",
        "linkType" : "Subquery"
      }, {
        "fromId" : 13,
        "fromName" : "Filter",
        "toId" : 12,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 12,
        "fromName" : "Project",
        "toId" : 11,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 15,
        "fromName" : "Project",
        "toId" : 11,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 11,
        "fromName" : "Join",
        "toId" : 10,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 10,
        "fromName" : "Project",
        "toId" : 9,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 20,
        "fromName" : "LogicalRelation",
        "toId" : 19,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 19,
        "fromName" : "Filter",
        "toId" : 18,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 18,
        "fromName" : "Project",
        "toId" : 9,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 9,
        "fromName" : "Join",
        "toId" : 8,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 8,
        "fromName" : "Project",
        "toId" : 7,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 23,
        "fromName" : "LogicalRelation",
        "toId" : 22,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 22,
        "fromName" : "Filter",
        "toId" : 21,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 21,
        "fromName" : "Project",
        "toId" : 7,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 7,
        "fromName" : "Join",
        "toId" : 6,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 6,
        "fromName" : "Project",
        "toId" : 5,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 26,
        "fromName" : "LogicalRelation",
        "toId" : 25,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 25,
        "fromName" : "Filter",
        "toId" : 24,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 24,
        "fromName" : "Project",
        "toId" : 5,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 5,
        "fromName" : "Join",
        "toId" : 4,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 4,
        "fromName" : "Project",
        "toId" : 3,
        "toName" : "Aggregate",
        "linkType" : "Operator"
      }, {
        "fromId" : 3,
        "fromName" : "Aggregate",
        "toId" : 2,
        "toName" : "Sort",
        "linkType" : "Operator"
      }, {
        "fromId" : 2,
        "fromName" : "Sort",
        "toId" : 1,
        "toName" : "LocalLimit",
        "linkType" : "Operator"
      }, {
        "fromId" : 1,
        "fromName" : "LocalLimit",
        "toId" : 0,
        "toName" : "GlobalLimit",
        "linkType" : "Operator"
      } ],
      "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [i_item_id#65 ASC NULLS FIRST], true\n      +- Aggregate [i_item_id#65], [i_item_id#65, avg(ss_quantity#13) AS agg1#0, cast((avg(UnscaledValue(ss_list_price#15)) / 100.0) as decimal(11,6)) AS agg2#1, cast((avg(UnscaledValue(ss_coupon_amt#22)) / 100.0) as decimal(11,6)) AS agg3#2, cast((avg(UnscaledValue(ss_sales_price#16)) / 100.0) as decimal(11,6)) AS agg4#3]\n         +- Project [ss_quantity#13, ss_list_price#15, ss_sales_price#16, ss_coupon_amt#22, i_item_id#65]\n            +- Join Inner, (ss_promo_sk#11 = p_promo_sk#86)\n               :- Project [ss_promo_sk#11, ss_quantity#13, ss_list_price#15, ss_sales_price#16, ss_coupon_amt#22, i_item_id#65]\n               :  +- Join Inner, (ss_item_sk#5 = i_item_sk#64)\n               :     :- Project [ss_item_sk#5, ss_promo_sk#11, ss_quantity#13, ss_list_price#15, ss_sales_price#16, ss_coupon_amt#22]\n               :     :  +- Join Inner, (ss_cdemo_sk#7 = cd_demo_sk#27)\n               :     :     :- Project [ss_item_sk#5, ss_cdemo_sk#7, ss_promo_sk#11, ss_quantity#13, ss_list_price#15, ss_sales_price#16, ss_coupon_amt#22]\n               :     :     :  +- Join Inner, (ss_sold_date_sk#26 = d_date_sk#36)\n               :     :     :     :- Project [ss_item_sk#5, ss_cdemo_sk#7, ss_promo_sk#11, ss_quantity#13, ss_list_price#15, ss_sales_price#16, ss_coupon_amt#22, ss_sold_date_sk#26]\n               :     :     :     :  +- Filter ((((isnotnull(ss_cdemo_sk#7) AND isnotnull(ss_sold_date_sk#26)) AND isnotnull(ss_item_sk#5)) AND isnotnull(ss_promo_sk#11)) AND dynamicpruning#119 [ss_sold_date_sk#26])\n               :     :     :     :     :  +- Project [d_date_sk#36]\n               :     :     :     :     :     +- Filter ((isnotnull(d_year#42) AND (d_year#42 = 1998)) AND isnotnull(d_date_sk#36))\n               :     :     :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#36,d_date_id#37,d_date#38,d_month_seq#39,d_week_seq#40,d_quarter_seq#41,d_year#42,d_dow#43,d_moy#44,d_dom#45,d_qoy#46,d_fy_year#47,d_fy_quarter_seq#48,d_fy_week_seq#49,d_day_name#50,d_quarter_name#51,d_holiday#52,d_weekend#53,d_following_holiday#54,d_first_dom#55,d_last_dom#56,d_same_day_ly#57,d_same_day_lq#58,d_current_day#59,... 4 more fields] parquet\n               :     :     :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#4,ss_item_sk#5,ss_customer_sk#6,ss_cdemo_sk#7,ss_hdemo_sk#8,ss_addr_sk#9,ss_store_sk#10,ss_promo_sk#11,ss_ticket_number#12L,ss_quantity#13,ss_wholesale_cost#14,ss_list_price#15,ss_sales_price#16,ss_ext_discount_amt#17,ss_ext_sales_price#18,ss_ext_wholesale_cost#19,ss_ext_list_price#20,ss_ext_tax#21,ss_coupon_amt#22,ss_net_paid#23,ss_net_paid_inc_tax#24,ss_net_profit#25,ss_sold_date_sk#26] parquet\n               :     :     :     +- Project [d_date_sk#36]\n               :     :     :        +- Filter ((isnotnull(d_year#42) AND (d_year#42 = 1998)) AND isnotnull(d_date_sk#36))\n               :     :     :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#36,d_date_id#37,d_date#38,d_month_seq#39,d_week_seq#40,d_quarter_seq#41,d_year#42,d_dow#43,d_moy#44,d_dom#45,d_qoy#46,d_fy_year#47,d_fy_quarter_seq#48,d_fy_week_seq#49,d_day_name#50,d_quarter_name#51,d_holiday#52,d_weekend#53,d_following_holiday#54,d_first_dom#55,d_last_dom#56,d_same_day_ly#57,d_same_day_lq#58,d_current_day#59,... 4 more fields] parquet\n               :     :     +- Project [cd_demo_sk#27]\n               :     :        +- Filter ((((isnotnull(cd_gender#28) AND isnotnull(cd_marital_status#29)) AND isnotnull(cd_education_status#30)) AND (((cd_gender#28 = F) AND (cd_marital_status#29 = W)) AND (cd_education_status#30 = Primary))) AND isnotnull(cd_demo_sk#27))\n               :     :           +- Relation spark_catalog.tpcds_100.customer_demographics[cd_demo_sk#27,cd_gender#28,cd_marital_status#29,cd_education_status#30,cd_purchase_estimate#31,cd_credit_rating#32,cd_dep_count#33,cd_dep_employed_count#34,cd_dep_college_count#35] parquet\n               :     +- Project [i_item_sk#64, i_item_id#65]\n               :        +- Filter isnotnull(i_item_sk#64)\n               :           +- Relation spark_catalog.tpcds_100.item[i_item_sk#64,i_item_id#65,i_rec_start_date#66,i_rec_end_date#67,i_item_desc#68,i_current_price#69,i_wholesale_cost#70,i_brand_id#71,i_brand#72,i_class_id#73,i_class#74,i_category_id#75,i_category#76,i_manufact_id#77,i_manufact#78,i_size#79,i_formulation#80,i_color#81,i_units#82,i_container#83,i_manager_id#84,i_product_name#85] parquet\n               +- Project [p_promo_sk#86]\n                  +- Filter (((p_channel_email#95 = N) OR (p_channel_event#100 = N)) AND isnotnull(p_promo_sk#86))\n                     +- Relation spark_catalog.tpcds_100.promotion[p_promo_sk#86,p_promo_id#87,p_start_date_sk#88,p_end_date_sk#89,p_item_sk#90,p_cost#91,p_response_target#92,p_promo_name#93,p_channel_dmail#94,p_channel_email#95,p_channel_catalog#96,p_channel_tv#97,p_channel_radio#98,p_channel_press#99,p_channel_event#100,p_channel_demo#101,p_channel_details#102,p_purpose#103,p_discount_active#104] parquet\n"
    },
    "IM" : {
      "inputSizeInBytes" : 42094512710,
      "inputRowCount" : 277244202
    },
    "PD" : { },
    "Configuration" : {
      "theta_c" : [ {
        "spark.executor.memory" : "1g"
      }, {
        "spark.executor.cores" : "1"
      }, {
        "spark.executor.instances" : "16"
      }, {
        "spark.default.parallelism" : "16"
      }, {
        "spark.reducer.maxSizeInFlight" : "48m"
      }, {
        "spark.shuffle.sort.bypassMergeThreshold" : "200"
      }, {
        "spark.shuffle.compress" : "true"
      }, {
        "spark.memory.fraction" : "0.6"
      } ],
      "theta_p" : [ {
        "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
      }, {
        "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
      }, {
        "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
      }, {
        "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
      }, {
        "spark.sql.shuffle.partitions" : "200"
      }, {
        "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
      }, {
        "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
      }, {
        "spark.sql.files.maxPartitionBytes" : "128MB"
      }, {
        "spark.sql.files.openCostInBytes" : "4MB"
      } ],
      "theta_s" : [ {
        "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
      }, {
        "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
      } ]
    }
  },
  "RuntimeLQPs" : {
    "4" : {
      "LQP" : {
        "operators" : {
          "12" : {
            "sign" : -1574109465,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 13044107544,
            "rowCount" : 250848222,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#5, ss_cdemo_sk#7, ss_promo_sk#11, ss_quantity#13, ss_list_price#15, ss_sales_price#16, ss_coupon_amt#22, ss_sold_date_sk#26] "
          },
          "8" : {
            "sign" : 686926822,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 110545399899580800,
            "rowCount" : 2512395452263200,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#5, ss_promo_sk#11, ss_quantity#13, ss_list_price#15, ss_sales_price#16, ss_coupon_amt#22] "
          },
          "19" : {
            "sign" : -2109142444,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 2097152,
            "rowCount" : 27440,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [cd_demo_sk#27], BroadcastQueryStage 1 "
          },
          "4" : {
            "sign" : -1513251903,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 28586799224068177612800000,
            "rowCount" : 510478557572646028800000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_quantity#13, ss_list_price#15, ss_sales_price#16, ss_coupon_amt#22, i_item_id#65] "
          },
          "15" : {
            "sign" : -525028844,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 6912,
            "rowCount" : 576,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#36] "
          },
          "11" : {
            "sign" : 1543665687,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 5127337657680,
            "rowCount" : 91559601030,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#26 = d_date_sk#36) "
          },
          "9" : {
            "sign" : 1324262649,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 130644563517686400,
            "rowCount" : 2512395452263200,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_cdemo_sk#7 = cd_demo_sk#27) "
          },
          "13" : {
            "sign" : 999129074,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 38128929744,
            "rowCount" : 250848222,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((((isnotnull(ss_cdemo_sk#7) AND isnotnull(ss_sold_date_sk#26)) AND isnotnull(ss_item_sk#5)) AND isnotnull(ss_promo_sk#11)) AND dynamicpruning#133 [ss_sold_date_sk#26]) "
          },
          "16" : {
            "sign" : -957585321,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 141696,
            "rowCount" : 576,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(d_year#42) AND (d_year#42 = 1998)) AND isnotnull(d_date_sk#36)) "
          },
          "5" : {
            "sign" : 2052452878,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 32670627684649345843200000,
            "rowCount" : 510478557572646028800000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_promo_sk#11 = p_promo_sk#86) "
          },
          "10" : {
            "sign" : -673051834,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 4394860849440,
            "rowCount" : 91559601030,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#5, ss_cdemo_sk#7, ss_promo_sk#11, ss_quantity#13, ss_list_price#15, ss_sales_price#16, ss_coupon_amt#22] "
          },
          "21" : {
            "sign" : 579588762,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1056576,
            "rowCount" : 996,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [p_promo_sk#86], BroadcastQueryStage 3 "
          },
          "6" : {
            "sign" : -1656878273,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 30751720335701568000000,
            "rowCount" : 512528672261692800000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_promo_sk#11, ss_quantity#13, ss_list_price#15, ss_sales_price#16, ss_coupon_amt#22, i_item_id#65] "
          },
          "1" : {
            "sign" : 1554614880,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
            "sizeInBytes" : 30628713454358761728000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) LocalLimit Arguments: 100 "
          },
          "17" : {
            "sign" : -539619062,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#36, d_date_id#37, d_date#38, d_month_seq#39, d_week_seq#40, d_quarter_seq#41, d_year#42, d_dow#43, d_moy#44, d_dom#45, d_qoy#46, d_fy_year#47, d_fy_quarter_seq#48, d_fy_week_seq#49, d_day_name#50, d_quarter_name#51, d_holiday#52, d_weekend#53, d_following_holiday#54, d_first_dom#55, d_last_dom#56, d_same_day_ly#57, d_same_day_lq#58, d_current_day#59, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "14" : {
            "sign" : 1769386681,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#4, ss_item_sk#5, ss_customer_sk#6, ss_cdemo_sk#7, ss_hdemo_sk#8, ss_addr_sk#9, ss_store_sk#10, ss_promo_sk#11, ss_ticket_number#12L, ss_quantity#13, ss_wholesale_cost#14, ss_list_price#15, ss_sales_price#16, ss_ext_discount_amt#17, ss_ext_sales_price#18, ss_ext_wholesale_cost#19, ss_ext_list_price#20, ss_ext_tax#21, ss_coupon_amt#22, ss_net_paid#23, ss_net_paid_inc_tax#24, ss_net_profit#25, ss_sold_date_sk#26], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "0" : {
            "sign" : -605674681,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
            "sizeInBytes" : 6000,
            "rowCount" : 100,
            "isRuntime" : false,
            "predicate" : " (unknown) GlobalLimit Arguments: 100 "
          },
          "20" : {
            "sign" : -2121514681,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 18409216,
            "rowCount" : 204000,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_item_sk#64, i_item_id#65], BroadcastQueryStage 2 "
          },
          "2" : {
            "sign" : -633528931,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 30628713454358761728000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [i_item_id#65 ASC NULLS FIRST], true "
          },
          "18" : {
            "sign" : -525309591,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1051496,
            "rowCount" : 365,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#36], BroadcastQueryStage 0 "
          },
          "7" : {
            "sign" : 1271235302,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 34851949713795110400000,
            "rowCount" : 512528672261692800000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_item_sk#5 = i_item_sk#64) "
          },
          "3" : {
            "sign" : -559738539,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 30628713454358761728000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [i_item_id#65], [i_item_id#65, avg(ss_quantity#13) AS agg1#120, cast((avg(UnscaledValue(ss_list_price#15)) / 100.0) as decimal(11,6)) AS agg2#121, cast((avg(UnscaledValue(ss_coupon_amt#22)) / 100.0) as decimal(11,6)) AS agg3#122, cast((avg(UnscaledValue(ss_sales_price#16)) / 100.0) as decimal(11,6)) AS agg4#123] "
          }
        },
        "links" : [ {
          "fromId" : 14,
          "fromName" : "LogicalRelation",
          "toId" : 13,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 17,
          "fromName" : "LogicalRelation",
          "toId" : 16,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 16,
          "fromName" : "Filter",
          "toId" : 15,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 15,
          "fromName" : "Project",
          "toId" : 13,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 13,
          "fromName" : "Filter",
          "toId" : 12,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 12,
          "fromName" : "Project",
          "toId" : 11,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 18,
          "fromName" : "LogicalQueryStage",
          "toId" : 11,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "Join",
          "toId" : 10,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "Project",
          "toId" : 9,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 19,
          "fromName" : "LogicalQueryStage",
          "toId" : 9,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "Join",
          "toId" : 8,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "Project",
          "toId" : 7,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 20,
          "fromName" : "LogicalQueryStage",
          "toId" : 7,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Join",
          "toId" : 6,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Project",
          "toId" : 5,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 21,
          "fromName" : "LogicalQueryStage",
          "toId" : 5,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Join",
          "toId" : 4,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Project",
          "toId" : 3,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Aggregate",
          "toId" : 2,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "LocalLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "LocalLimit",
          "toId" : 0,
          "toName" : "GlobalLimit",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [i_item_id#65 ASC NULLS FIRST], true\n      +- Aggregate [i_item_id#65], [i_item_id#65, avg(ss_quantity#13) AS agg1#120, cast((avg(UnscaledValue(ss_list_price#15)) / 100.0) as decimal(11,6)) AS agg2#121, cast((avg(UnscaledValue(ss_coupon_amt#22)) / 100.0) as decimal(11,6)) AS agg3#122, cast((avg(UnscaledValue(ss_sales_price#16)) / 100.0) as decimal(11,6)) AS agg4#123]\n         +- Project [ss_quantity#13, ss_list_price#15, ss_sales_price#16, ss_coupon_amt#22, i_item_id#65]\n            +- Join Inner, (ss_promo_sk#11 = p_promo_sk#86)\n               :- Project [ss_promo_sk#11, ss_quantity#13, ss_list_price#15, ss_sales_price#16, ss_coupon_amt#22, i_item_id#65]\n               :  +- Join Inner, (ss_item_sk#5 = i_item_sk#64)\n               :     :- Project [ss_item_sk#5, ss_promo_sk#11, ss_quantity#13, ss_list_price#15, ss_sales_price#16, ss_coupon_amt#22]\n               :     :  +- Join Inner, (ss_cdemo_sk#7 = cd_demo_sk#27)\n               :     :     :- Project [ss_item_sk#5, ss_cdemo_sk#7, ss_promo_sk#11, ss_quantity#13, ss_list_price#15, ss_sales_price#16, ss_coupon_amt#22]\n               :     :     :  +- Join Inner, (ss_sold_date_sk#26 = d_date_sk#36)\n               :     :     :     :- Project [ss_item_sk#5, ss_cdemo_sk#7, ss_promo_sk#11, ss_quantity#13, ss_list_price#15, ss_sales_price#16, ss_coupon_amt#22, ss_sold_date_sk#26]\n               :     :     :     :  +- Filter ((((isnotnull(ss_cdemo_sk#7) AND isnotnull(ss_sold_date_sk#26)) AND isnotnull(ss_item_sk#5)) AND isnotnull(ss_promo_sk#11)) AND dynamicpruning#133 [ss_sold_date_sk#26])\n               :     :     :     :     :  +- Project [d_date_sk#36]\n               :     :     :     :     :     +- Filter ((isnotnull(d_year#42) AND (d_year#42 = 1998)) AND isnotnull(d_date_sk#36))\n               :     :     :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#36,d_date_id#37,d_date#38,d_month_seq#39,d_week_seq#40,d_quarter_seq#41,d_year#42,d_dow#43,d_moy#44,d_dom#45,d_qoy#46,d_fy_year#47,d_fy_quarter_seq#48,d_fy_week_seq#49,d_day_name#50,d_quarter_name#51,d_holiday#52,d_weekend#53,d_following_holiday#54,d_first_dom#55,d_last_dom#56,d_same_day_ly#57,d_same_day_lq#58,d_current_day#59,... 4 more fields] parquet\n               :     :     :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#4,ss_item_sk#5,ss_customer_sk#6,ss_cdemo_sk#7,ss_hdemo_sk#8,ss_addr_sk#9,ss_store_sk#10,ss_promo_sk#11,ss_ticket_number#12L,ss_quantity#13,ss_wholesale_cost#14,ss_list_price#15,ss_sales_price#16,ss_ext_discount_amt#17,ss_ext_sales_price#18,ss_ext_wholesale_cost#19,ss_ext_list_price#20,ss_ext_tax#21,ss_coupon_amt#22,ss_net_paid#23,ss_net_paid_inc_tax#24,ss_net_profit#25,ss_sold_date_sk#26] parquet\n               :     :     :     +- LogicalQueryStage Project [d_date_sk#36], BroadcastQueryStage 0\n               :     :     +- LogicalQueryStage Project [cd_demo_sk#27], BroadcastQueryStage 1\n               :     +- LogicalQueryStage Project [i_item_sk#64, i_item_id#65], BroadcastQueryStage 2\n               +- LogicalQueryStage Project [p_promo_sk#86], BroadcastQueryStage 3\n"
      },
      "IM" : {
        "inputSizeInBytes" : 41829508096,
        "inputRowCount" : 275278154
      },
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "StartTimeInMs" : 1702226507421,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 10193,
        "IOBytes" : {
          "Total" : 843037678,
          "Details" : {
            "IR" : 801268660,
            "IW" : 0,
            "SR" : 20884509,
            "SW" : 20884509
          }
        }
      }
    },
    "5" : {
      "LQP" : {
        "operators" : {
          "0" : {
            "sign" : 391979667,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
            "sizeInBytes" : 6000,
            "rowCount" : 100,
            "isRuntime" : false,
            "predicate" : " (unknown) GlobalLimit Arguments: 100 "
          },
          "1" : {
            "sign" : 1558910358,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
            "sizeInBytes" : 63716640,
            "rowCount" : 663715,
            "isRuntime" : true,
            "predicate" : " (unknown) LocalLimit Arguments: 100 "
          },
          "2" : {
            "sign" : 514504061,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 63716640,
            "rowCount" : 663715,
            "isRuntime" : true,
            "predicate" : " (unknown) Sort Arguments: [i_item_id#65 ASC NULLS FIRST], true "
          },
          "3" : {
            "sign" : 1000628033,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 63716640,
            "rowCount" : 663715,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [i_item_id#65], [i_item_id#65, avg(ss_quantity#13) AS agg1#120, cast((avg(UnscaledValue(ss_list_price#15)) / 100.0) as decimal(11,6)) AS agg2#121, cast((avg(UnscaledValue(ss_coupon_amt#22)) / 100.0) as decimal(11,6)) AS agg3#122, cast((avg(UnscaledValue(ss_sales_price#16)) / 100.0) as decimal(11,6)) AS agg4#123], HashAggregate(keys=[i_item_id#65], functions=[avg(ss_quantity#13), avg(UnscaledValue(ss_list_price#15)), avg(UnscaledValue(ss_coupon_amt#22)), avg(UnscaledValue(ss_sales_price#16))]) "
          }
        },
        "links" : [ {
          "fromId" : 3,
          "fromName" : "LogicalQueryStage",
          "toId" : 2,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "LocalLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "LocalLimit",
          "toId" : 0,
          "toName" : "GlobalLimit",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [i_item_id#65 ASC NULLS FIRST], true\n      +- LogicalQueryStage Aggregate [i_item_id#65], [i_item_id#65, avg(ss_quantity#13) AS agg1#120, cast((avg(UnscaledValue(ss_list_price#15)) / 100.0) as decimal(11,6)) AS agg2#121, cast((avg(UnscaledValue(ss_coupon_amt#22)) / 100.0) as decimal(11,6)) AS agg3#122, cast((avg(UnscaledValue(ss_sales_price#16)) / 100.0) as decimal(11,6)) AS agg4#123], HashAggregate(keys=[i_item_id#65], functions=[avg(ss_quantity#13), avg(UnscaledValue(ss_list_price#15)), avg(UnscaledValue(ss_coupon_amt#22)), avg(UnscaledValue(ss_sales_price#16))])\n"
      },
      "IM" : {
        "inputSizeInBytes" : 63716640,
        "inputRowCount" : 663715
      },
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "StartTimeInMs" : 1702226516452,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 1162,
        "IOBytes" : {
          "Total" : 20884509,
          "Details" : {
            "IR" : 0,
            "IW" : 0,
            "SR" : 20884509,
            "SW" : 0
          }
        }
      }
    },
    "1" : {
      "LQP" : {
        "operators" : {
          "12" : {
            "sign" : -1574109465,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 13044107544,
            "rowCount" : 250848222,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#5, ss_cdemo_sk#7, ss_promo_sk#11, ss_quantity#13, ss_list_price#15, ss_sales_price#16, ss_coupon_amt#22, ss_sold_date_sk#26] "
          },
          "8" : {
            "sign" : 686926822,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 12100083908,
            "rowCount" : 275001907,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#5, ss_promo_sk#11, ss_quantity#13, ss_list_price#15, ss_sales_price#16, ss_coupon_amt#22] "
          },
          "19" : {
            "sign" : -2109142444,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 329280,
            "rowCount" : 27440,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [cd_demo_sk#27], BroadcastQueryStage 1 "
          },
          "4" : {
            "sign" : -1513251903,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 25394016704,
            "rowCount" : 396781511,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_quantity#13, ss_list_price#15, ss_sales_price#16, ss_coupon_amt#22, i_item_id#65] "
          },
          "15" : {
            "sign" : -525028844,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 6912,
            "rowCount" : 576,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#36] "
          },
          "11" : {
            "sign" : 1543665687,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 5127337657680,
            "rowCount" : 91559601030,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#26 = d_date_sk#36) "
          },
          "9" : {
            "sign" : 1324262649,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 14300099164,
            "rowCount" : 275001907,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_cdemo_sk#7 = cd_demo_sk#27) "
          },
          "13" : {
            "sign" : 999129074,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 38128929744,
            "rowCount" : 250848222,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((((isnotnull(ss_cdemo_sk#7) AND isnotnull(ss_sold_date_sk#26)) AND isnotnull(ss_item_sk#5)) AND isnotnull(ss_promo_sk#11)) AND dynamicpruning#133 [ss_sold_date_sk#26]) "
          },
          "16" : {
            "sign" : -957585321,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 141696,
            "rowCount" : 576,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(d_year#42) AND (d_year#42 = 1998)) AND isnotnull(d_date_sk#36)) "
          },
          "5" : {
            "sign" : 2052452878,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 28568268792,
            "rowCount" : 396781511,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_promo_sk#11 = p_promo_sk#86) "
          },
          "10" : {
            "sign" : -673051834,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 4394860849440,
            "rowCount" : 91559601030,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#5, ss_cdemo_sk#7, ss_promo_sk#11, ss_quantity#13, ss_list_price#15, ss_sales_price#16, ss_coupon_amt#22] "
          },
          "21" : {
            "sign" : 579588762,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 12000,
            "rowCount" : 1000,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [p_promo_sk#86], BroadcastQueryStage 3 "
          },
          "6" : {
            "sign" : -1656878273,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 19533538628,
            "rowCount" : 287257921,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_promo_sk#11, ss_quantity#13, ss_list_price#15, ss_sales_price#16, ss_coupon_amt#22, i_item_id#65] "
          },
          "1" : {
            "sign" : 1554614880,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
            "sizeInBytes" : 7074856,
            "rowCount" : 104042,
            "isRuntime" : false,
            "predicate" : " (unknown) LocalLimit Arguments: 100 "
          },
          "17" : {
            "sign" : -539619062,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#36, d_date_id#37, d_date#38, d_month_seq#39, d_week_seq#40, d_quarter_seq#41, d_year#42, d_dow#43, d_moy#44, d_dom#45, d_qoy#46, d_fy_year#47, d_fy_quarter_seq#48, d_fy_week_seq#49, d_day_name#50, d_quarter_name#51, d_holiday#52, d_weekend#53, d_following_holiday#54, d_first_dom#55, d_last_dom#56, d_same_day_ly#57, d_same_day_lq#58, d_current_day#59, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "14" : {
            "sign" : 1769386681,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#4, ss_item_sk#5, ss_customer_sk#6, ss_cdemo_sk#7, ss_hdemo_sk#8, ss_addr_sk#9, ss_store_sk#10, ss_promo_sk#11, ss_ticket_number#12L, ss_quantity#13, ss_wholesale_cost#14, ss_list_price#15, ss_sales_price#16, ss_ext_discount_amt#17, ss_ext_sales_price#18, ss_ext_wholesale_cost#19, ss_ext_list_price#20, ss_ext_tax#21, ss_coupon_amt#22, ss_net_paid#23, ss_net_paid_inc_tax#24, ss_net_profit#25, ss_sold_date_sk#26], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "0" : {
            "sign" : -605674681,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
            "sizeInBytes" : 6000,
            "rowCount" : 100,
            "isRuntime" : false,
            "predicate" : " (unknown) GlobalLimit Arguments: 100 "
          },
          "20" : {
            "sign" : -2121514681,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 8160000,
            "rowCount" : 204000,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_item_sk#64, i_item_id#65], BroadcastQueryStage 2 "
          },
          "2" : {
            "sign" : -633528931,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 7074856,
            "rowCount" : 104042,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [i_item_id#65 ASC NULLS FIRST], true "
          },
          "18" : {
            "sign" : -525309591,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1051496,
            "rowCount" : 365,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#36], BroadcastQueryStage 0 "
          },
          "7" : {
            "sign" : 1271235302,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 21831601996,
            "rowCount" : 287257921,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_item_sk#5 = i_item_sk#64) "
          },
          "3" : {
            "sign" : -559738539,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 7074856,
            "rowCount" : 104042,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [i_item_id#65], [i_item_id#65, avg(ss_quantity#13) AS agg1#120, cast((avg(UnscaledValue(ss_list_price#15)) / 100.0) as decimal(11,6)) AS agg2#121, cast((avg(UnscaledValue(ss_coupon_amt#22)) / 100.0) as decimal(11,6)) AS agg3#122, cast((avg(UnscaledValue(ss_sales_price#16)) / 100.0) as decimal(11,6)) AS agg4#123] "
          }
        },
        "links" : [ {
          "fromId" : 14,
          "fromName" : "LogicalRelation",
          "toId" : 13,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 17,
          "fromName" : "LogicalRelation",
          "toId" : 16,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 16,
          "fromName" : "Filter",
          "toId" : 15,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 15,
          "fromName" : "Project",
          "toId" : 13,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 13,
          "fromName" : "Filter",
          "toId" : 12,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 12,
          "fromName" : "Project",
          "toId" : 11,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 18,
          "fromName" : "LogicalQueryStage",
          "toId" : 11,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "Join",
          "toId" : 10,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "Project",
          "toId" : 9,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 19,
          "fromName" : "LogicalQueryStage",
          "toId" : 9,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "Join",
          "toId" : 8,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "Project",
          "toId" : 7,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 20,
          "fromName" : "LogicalQueryStage",
          "toId" : 7,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Join",
          "toId" : 6,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Project",
          "toId" : 5,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 21,
          "fromName" : "LogicalQueryStage",
          "toId" : 5,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Join",
          "toId" : 4,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Project",
          "toId" : 3,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Aggregate",
          "toId" : 2,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "LocalLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "LocalLimit",
          "toId" : 0,
          "toName" : "GlobalLimit",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [i_item_id#65 ASC NULLS FIRST], true\n      +- Aggregate [i_item_id#65], [i_item_id#65, avg(ss_quantity#13) AS agg1#120, cast((avg(UnscaledValue(ss_list_price#15)) / 100.0) as decimal(11,6)) AS agg2#121, cast((avg(UnscaledValue(ss_coupon_amt#22)) / 100.0) as decimal(11,6)) AS agg3#122, cast((avg(UnscaledValue(ss_sales_price#16)) / 100.0) as decimal(11,6)) AS agg4#123]\n         +- Project [ss_quantity#13, ss_list_price#15, ss_sales_price#16, ss_coupon_amt#22, i_item_id#65]\n            +- Join Inner, (ss_promo_sk#11 = p_promo_sk#86)\n               :- Project [ss_promo_sk#11, ss_quantity#13, ss_list_price#15, ss_sales_price#16, ss_coupon_amt#22, i_item_id#65]\n               :  +- Join Inner, (ss_item_sk#5 = i_item_sk#64)\n               :     :- Project [ss_item_sk#5, ss_promo_sk#11, ss_quantity#13, ss_list_price#15, ss_sales_price#16, ss_coupon_amt#22]\n               :     :  +- Join Inner, (ss_cdemo_sk#7 = cd_demo_sk#27)\n               :     :     :- Project [ss_item_sk#5, ss_cdemo_sk#7, ss_promo_sk#11, ss_quantity#13, ss_list_price#15, ss_sales_price#16, ss_coupon_amt#22]\n               :     :     :  +- Join Inner, (ss_sold_date_sk#26 = d_date_sk#36)\n               :     :     :     :- Project [ss_item_sk#5, ss_cdemo_sk#7, ss_promo_sk#11, ss_quantity#13, ss_list_price#15, ss_sales_price#16, ss_coupon_amt#22, ss_sold_date_sk#26]\n               :     :     :     :  +- Filter ((((isnotnull(ss_cdemo_sk#7) AND isnotnull(ss_sold_date_sk#26)) AND isnotnull(ss_item_sk#5)) AND isnotnull(ss_promo_sk#11)) AND dynamicpruning#133 [ss_sold_date_sk#26])\n               :     :     :     :     :  +- Project [d_date_sk#36]\n               :     :     :     :     :     +- Filter ((isnotnull(d_year#42) AND (d_year#42 = 1998)) AND isnotnull(d_date_sk#36))\n               :     :     :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#36,d_date_id#37,d_date#38,d_month_seq#39,d_week_seq#40,d_quarter_seq#41,d_year#42,d_dow#43,d_moy#44,d_dom#45,d_qoy#46,d_fy_year#47,d_fy_quarter_seq#48,d_fy_week_seq#49,d_day_name#50,d_quarter_name#51,d_holiday#52,d_weekend#53,d_following_holiday#54,d_first_dom#55,d_last_dom#56,d_same_day_ly#57,d_same_day_lq#58,d_current_day#59,... 4 more fields] parquet\n               :     :     :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#4,ss_item_sk#5,ss_customer_sk#6,ss_cdemo_sk#7,ss_hdemo_sk#8,ss_addr_sk#9,ss_store_sk#10,ss_promo_sk#11,ss_ticket_number#12L,ss_quantity#13,ss_wholesale_cost#14,ss_list_price#15,ss_sales_price#16,ss_ext_discount_amt#17,ss_ext_sales_price#18,ss_ext_wholesale_cost#19,ss_ext_list_price#20,ss_ext_tax#21,ss_coupon_amt#22,ss_net_paid#23,ss_net_paid_inc_tax#24,ss_net_profit#25,ss_sold_date_sk#26] parquet\n               :     :     :     +- LogicalQueryStage Project [d_date_sk#36], BroadcastQueryStage 0\n               :     :     +- LogicalQueryStage Project [cd_demo_sk#27], BroadcastQueryStage 1\n               :     +- LogicalQueryStage Project [i_item_sk#64, i_item_id#65], BroadcastQueryStage 2\n               +- LogicalQueryStage Project [p_promo_sk#86], BroadcastQueryStage 3\n"
      },
      "IM" : {
        "inputSizeInBytes" : 41816446432,
        "inputRowCount" : 275278158
      },
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 2,
        "FinishedTasksNum" : 5,
        "FinishedTasksTotalTimeInMs" : 6801.0,
        "FinishedTasksDistributionInMs" : [ 1207.0, 1226.0, 1324.0, 1442.0, 1602.0 ]
      },
      "StartTimeInMs" : 1702226500845,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 16769,
        "IOBytes" : {
          "Total" : 852443767,
          "Details" : {
            "IR" : 810674749,
            "IW" : 0,
            "SR" : 20884509,
            "SW" : 20884509
          }
        }
      }
    },
    "2" : {
      "LQP" : {
        "operators" : {
          "12" : {
            "sign" : -1574109465,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 13044107544,
            "rowCount" : 250848222,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#5, ss_cdemo_sk#7, ss_promo_sk#11, ss_quantity#13, ss_list_price#15, ss_sales_price#16, ss_coupon_amt#22, ss_sold_date_sk#26] "
          },
          "8" : {
            "sign" : 686926822,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 12100083908,
            "rowCount" : 275001907,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#5, ss_promo_sk#11, ss_quantity#13, ss_list_price#15, ss_sales_price#16, ss_coupon_amt#22] "
          },
          "19" : {
            "sign" : -2109142444,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 329280,
            "rowCount" : 27440,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [cd_demo_sk#27], BroadcastQueryStage 1 "
          },
          "4" : {
            "sign" : -1513251903,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 18310968916224,
            "rowCount" : 286108889316,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_quantity#13, ss_list_price#15, ss_sales_price#16, ss_coupon_amt#22, i_item_id#65] "
          },
          "15" : {
            "sign" : -525028844,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 6912,
            "rowCount" : 576,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#36] "
          },
          "11" : {
            "sign" : 1543665687,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 5127337657680,
            "rowCount" : 91559601030,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#26 = d_date_sk#36) "
          },
          "9" : {
            "sign" : 1324262649,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 14300099164,
            "rowCount" : 275001907,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_cdemo_sk#7 = cd_demo_sk#27) "
          },
          "13" : {
            "sign" : 999129074,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 38128929744,
            "rowCount" : 250848222,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((((isnotnull(ss_cdemo_sk#7) AND isnotnull(ss_sold_date_sk#26)) AND isnotnull(ss_item_sk#5)) AND isnotnull(ss_promo_sk#11)) AND dynamicpruning#133 [ss_sold_date_sk#26]) "
          },
          "16" : {
            "sign" : -957585321,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 141696,
            "rowCount" : 576,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(d_year#42) AND (d_year#42 = 1998)) AND isnotnull(d_date_sk#36)) "
          },
          "5" : {
            "sign" : 2052452878,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 20599840030752,
            "rowCount" : 286108889316,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_promo_sk#11 = p_promo_sk#86) "
          },
          "10" : {
            "sign" : -673051834,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 4394860849440,
            "rowCount" : 91559601030,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#5, ss_cdemo_sk#7, ss_promo_sk#11, ss_quantity#13, ss_list_price#15, ss_sales_price#16, ss_coupon_amt#22] "
          },
          "21" : {
            "sign" : 579588762,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1056576,
            "rowCount" : 996,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [p_promo_sk#86], BroadcastQueryStage 3 "
          },
          "6" : {
            "sign" : -1656878273,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 19533538628,
            "rowCount" : 287257921,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_promo_sk#11, ss_quantity#13, ss_list_price#15, ss_sales_price#16, ss_coupon_amt#22, i_item_id#65] "
          },
          "1" : {
            "sign" : 1554614880,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
            "sizeInBytes" : 7074856,
            "rowCount" : 104042,
            "isRuntime" : false,
            "predicate" : " (unknown) LocalLimit Arguments: 100 "
          },
          "17" : {
            "sign" : -539619062,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#36, d_date_id#37, d_date#38, d_month_seq#39, d_week_seq#40, d_quarter_seq#41, d_year#42, d_dow#43, d_moy#44, d_dom#45, d_qoy#46, d_fy_year#47, d_fy_quarter_seq#48, d_fy_week_seq#49, d_day_name#50, d_quarter_name#51, d_holiday#52, d_weekend#53, d_following_holiday#54, d_first_dom#55, d_last_dom#56, d_same_day_ly#57, d_same_day_lq#58, d_current_day#59, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "14" : {
            "sign" : 1769386681,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#4, ss_item_sk#5, ss_customer_sk#6, ss_cdemo_sk#7, ss_hdemo_sk#8, ss_addr_sk#9, ss_store_sk#10, ss_promo_sk#11, ss_ticket_number#12L, ss_quantity#13, ss_wholesale_cost#14, ss_list_price#15, ss_sales_price#16, ss_ext_discount_amt#17, ss_ext_sales_price#18, ss_ext_wholesale_cost#19, ss_ext_list_price#20, ss_ext_tax#21, ss_coupon_amt#22, ss_net_paid#23, ss_net_paid_inc_tax#24, ss_net_profit#25, ss_sold_date_sk#26], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "0" : {
            "sign" : -605674681,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
            "sizeInBytes" : 6000,
            "rowCount" : 100,
            "isRuntime" : false,
            "predicate" : " (unknown) GlobalLimit Arguments: 100 "
          },
          "20" : {
            "sign" : -2121514681,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 8160000,
            "rowCount" : 204000,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_item_sk#64, i_item_id#65], BroadcastQueryStage 2 "
          },
          "2" : {
            "sign" : -633528931,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 7074856,
            "rowCount" : 104042,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [i_item_id#65 ASC NULLS FIRST], true "
          },
          "18" : {
            "sign" : -525309591,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1051496,
            "rowCount" : 365,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#36], BroadcastQueryStage 0 "
          },
          "7" : {
            "sign" : 1271235302,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 21831601996,
            "rowCount" : 287257921,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_item_sk#5 = i_item_sk#64) "
          },
          "3" : {
            "sign" : -559738539,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 7074856,
            "rowCount" : 104042,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [i_item_id#65], [i_item_id#65, avg(ss_quantity#13) AS agg1#120, cast((avg(UnscaledValue(ss_list_price#15)) / 100.0) as decimal(11,6)) AS agg2#121, cast((avg(UnscaledValue(ss_coupon_amt#22)) / 100.0) as decimal(11,6)) AS agg3#122, cast((avg(UnscaledValue(ss_sales_price#16)) / 100.0) as decimal(11,6)) AS agg4#123] "
          }
        },
        "links" : [ {
          "fromId" : 14,
          "fromName" : "LogicalRelation",
          "toId" : 13,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 17,
          "fromName" : "LogicalRelation",
          "toId" : 16,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 16,
          "fromName" : "Filter",
          "toId" : 15,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 15,
          "fromName" : "Project",
          "toId" : 13,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 13,
          "fromName" : "Filter",
          "toId" : 12,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 12,
          "fromName" : "Project",
          "toId" : 11,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 18,
          "fromName" : "LogicalQueryStage",
          "toId" : 11,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "Join",
          "toId" : 10,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "Project",
          "toId" : 9,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 19,
          "fromName" : "LogicalQueryStage",
          "toId" : 9,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "Join",
          "toId" : 8,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "Project",
          "toId" : 7,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 20,
          "fromName" : "LogicalQueryStage",
          "toId" : 7,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Join",
          "toId" : 6,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Project",
          "toId" : 5,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 21,
          "fromName" : "LogicalQueryStage",
          "toId" : 5,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Join",
          "toId" : 4,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Project",
          "toId" : 3,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Aggregate",
          "toId" : 2,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "LocalLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "LocalLimit",
          "toId" : 0,
          "toName" : "GlobalLimit",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [i_item_id#65 ASC NULLS FIRST], true\n      +- Aggregate [i_item_id#65], [i_item_id#65, avg(ss_quantity#13) AS agg1#120, cast((avg(UnscaledValue(ss_list_price#15)) / 100.0) as decimal(11,6)) AS agg2#121, cast((avg(UnscaledValue(ss_coupon_amt#22)) / 100.0) as decimal(11,6)) AS agg3#122, cast((avg(UnscaledValue(ss_sales_price#16)) / 100.0) as decimal(11,6)) AS agg4#123]\n         +- Project [ss_quantity#13, ss_list_price#15, ss_sales_price#16, ss_coupon_amt#22, i_item_id#65]\n            +- Join Inner, (ss_promo_sk#11 = p_promo_sk#86)\n               :- Project [ss_promo_sk#11, ss_quantity#13, ss_list_price#15, ss_sales_price#16, ss_coupon_amt#22, i_item_id#65]\n               :  +- Join Inner, (ss_item_sk#5 = i_item_sk#64)\n               :     :- Project [ss_item_sk#5, ss_promo_sk#11, ss_quantity#13, ss_list_price#15, ss_sales_price#16, ss_coupon_amt#22]\n               :     :  +- Join Inner, (ss_cdemo_sk#7 = cd_demo_sk#27)\n               :     :     :- Project [ss_item_sk#5, ss_cdemo_sk#7, ss_promo_sk#11, ss_quantity#13, ss_list_price#15, ss_sales_price#16, ss_coupon_amt#22]\n               :     :     :  +- Join Inner, (ss_sold_date_sk#26 = d_date_sk#36)\n               :     :     :     :- Project [ss_item_sk#5, ss_cdemo_sk#7, ss_promo_sk#11, ss_quantity#13, ss_list_price#15, ss_sales_price#16, ss_coupon_amt#22, ss_sold_date_sk#26]\n               :     :     :     :  +- Filter ((((isnotnull(ss_cdemo_sk#7) AND isnotnull(ss_sold_date_sk#26)) AND isnotnull(ss_item_sk#5)) AND isnotnull(ss_promo_sk#11)) AND dynamicpruning#133 [ss_sold_date_sk#26])\n               :     :     :     :     :  +- Project [d_date_sk#36]\n               :     :     :     :     :     +- Filter ((isnotnull(d_year#42) AND (d_year#42 = 1998)) AND isnotnull(d_date_sk#36))\n               :     :     :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#36,d_date_id#37,d_date#38,d_month_seq#39,d_week_seq#40,d_quarter_seq#41,d_year#42,d_dow#43,d_moy#44,d_dom#45,d_qoy#46,d_fy_year#47,d_fy_quarter_seq#48,d_fy_week_seq#49,d_day_name#50,d_quarter_name#51,d_holiday#52,d_weekend#53,d_following_holiday#54,d_first_dom#55,d_last_dom#56,d_same_day_ly#57,d_same_day_lq#58,d_current_day#59,... 4 more fields] parquet\n               :     :     :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#4,ss_item_sk#5,ss_customer_sk#6,ss_cdemo_sk#7,ss_hdemo_sk#8,ss_addr_sk#9,ss_store_sk#10,ss_promo_sk#11,ss_ticket_number#12L,ss_quantity#13,ss_wholesale_cost#14,ss_list_price#15,ss_sales_price#16,ss_ext_discount_amt#17,ss_ext_sales_price#18,ss_ext_wholesale_cost#19,ss_ext_list_price#20,ss_ext_tax#21,ss_coupon_amt#22,ss_net_paid#23,ss_net_paid_inc_tax#24,ss_net_profit#25,ss_sold_date_sk#26] parquet\n               :     :     :     +- LogicalQueryStage Project [d_date_sk#36], BroadcastQueryStage 0\n               :     :     +- LogicalQueryStage Project [cd_demo_sk#27], BroadcastQueryStage 1\n               :     +- LogicalQueryStage Project [i_item_sk#64, i_item_id#65], BroadcastQueryStage 2\n               +- LogicalQueryStage Project [p_promo_sk#86], BroadcastQueryStage 3\n"
      },
      "IM" : {
        "inputSizeInBytes" : 41817491008,
        "inputRowCount" : 275278154
      },
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 2,
        "FinishedTasksNum" : 5,
        "FinishedTasksTotalTimeInMs" : 6801.0,
        "FinishedTasksDistributionInMs" : [ 1207.0, 1226.0, 1324.0, 1442.0, 1602.0 ]
      },
      "StartTimeInMs" : 1702226500898,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 16716,
        "IOBytes" : {
          "Total" : 852443767,
          "Details" : {
            "IR" : 810674749,
            "IW" : 0,
            "SR" : 20884509,
            "SW" : 20884509
          }
        }
      }
    },
    "3" : {
      "LQP" : {
        "operators" : {
          "12" : {
            "sign" : -1574109465,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 13044107544,
            "rowCount" : 250848222,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#5, ss_cdemo_sk#7, ss_promo_sk#11, ss_quantity#13, ss_list_price#15, ss_sales_price#16, ss_coupon_amt#22, ss_sold_date_sk#26] "
          },
          "8" : {
            "sign" : 686926822,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 110545399899580800,
            "rowCount" : 2512395452263200,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#5, ss_promo_sk#11, ss_quantity#13, ss_list_price#15, ss_sales_price#16, ss_coupon_amt#22] "
          },
          "19" : {
            "sign" : -2109142444,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 2097152,
            "rowCount" : 27440,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [cd_demo_sk#27], BroadcastQueryStage 1 "
          },
          "4" : {
            "sign" : -1513251903,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 18310968916224,
            "rowCount" : 286108889316,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_quantity#13, ss_list_price#15, ss_sales_price#16, ss_coupon_amt#22, i_item_id#65] "
          },
          "15" : {
            "sign" : -525028844,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 6912,
            "rowCount" : 576,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#36] "
          },
          "11" : {
            "sign" : 1543665687,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 5127337657680,
            "rowCount" : 91559601030,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#26 = d_date_sk#36) "
          },
          "9" : {
            "sign" : 1324262649,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 130644563517686400,
            "rowCount" : 2512395452263200,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_cdemo_sk#7 = cd_demo_sk#27) "
          },
          "13" : {
            "sign" : 999129074,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 38128929744,
            "rowCount" : 250848222,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((((isnotnull(ss_cdemo_sk#7) AND isnotnull(ss_sold_date_sk#26)) AND isnotnull(ss_item_sk#5)) AND isnotnull(ss_promo_sk#11)) AND dynamicpruning#133 [ss_sold_date_sk#26]) "
          },
          "16" : {
            "sign" : -957585321,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 141696,
            "rowCount" : 576,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(d_year#42) AND (d_year#42 = 1998)) AND isnotnull(d_date_sk#36)) "
          },
          "5" : {
            "sign" : 2052452878,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 20599840030752,
            "rowCount" : 286108889316,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_promo_sk#11 = p_promo_sk#86) "
          },
          "10" : {
            "sign" : -673051834,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 4394860849440,
            "rowCount" : 91559601030,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#5, ss_cdemo_sk#7, ss_promo_sk#11, ss_quantity#13, ss_list_price#15, ss_sales_price#16, ss_coupon_amt#22] "
          },
          "21" : {
            "sign" : 579588762,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1056576,
            "rowCount" : 996,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [p_promo_sk#86], BroadcastQueryStage 3 "
          },
          "6" : {
            "sign" : -1656878273,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 19533538628,
            "rowCount" : 287257921,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_promo_sk#11, ss_quantity#13, ss_list_price#15, ss_sales_price#16, ss_coupon_amt#22, i_item_id#65] "
          },
          "1" : {
            "sign" : 1554614880,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
            "sizeInBytes" : 7074856,
            "rowCount" : 104042,
            "isRuntime" : false,
            "predicate" : " (unknown) LocalLimit Arguments: 100 "
          },
          "17" : {
            "sign" : -539619062,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#36, d_date_id#37, d_date#38, d_month_seq#39, d_week_seq#40, d_quarter_seq#41, d_year#42, d_dow#43, d_moy#44, d_dom#45, d_qoy#46, d_fy_year#47, d_fy_quarter_seq#48, d_fy_week_seq#49, d_day_name#50, d_quarter_name#51, d_holiday#52, d_weekend#53, d_following_holiday#54, d_first_dom#55, d_last_dom#56, d_same_day_ly#57, d_same_day_lq#58, d_current_day#59, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "14" : {
            "sign" : 1769386681,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#4, ss_item_sk#5, ss_customer_sk#6, ss_cdemo_sk#7, ss_hdemo_sk#8, ss_addr_sk#9, ss_store_sk#10, ss_promo_sk#11, ss_ticket_number#12L, ss_quantity#13, ss_wholesale_cost#14, ss_list_price#15, ss_sales_price#16, ss_ext_discount_amt#17, ss_ext_sales_price#18, ss_ext_wholesale_cost#19, ss_ext_list_price#20, ss_ext_tax#21, ss_coupon_amt#22, ss_net_paid#23, ss_net_paid_inc_tax#24, ss_net_profit#25, ss_sold_date_sk#26], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "0" : {
            "sign" : -605674681,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
            "sizeInBytes" : 6000,
            "rowCount" : 100,
            "isRuntime" : false,
            "predicate" : " (unknown) GlobalLimit Arguments: 100 "
          },
          "20" : {
            "sign" : -2121514681,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 8160000,
            "rowCount" : 204000,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_item_sk#64, i_item_id#65], BroadcastQueryStage 2 "
          },
          "2" : {
            "sign" : -633528931,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 7074856,
            "rowCount" : 104042,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [i_item_id#65 ASC NULLS FIRST], true "
          },
          "18" : {
            "sign" : -525309591,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1051496,
            "rowCount" : 365,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#36], BroadcastQueryStage 0 "
          },
          "7" : {
            "sign" : 1271235302,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 21831601996,
            "rowCount" : 287257921,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_item_sk#5 = i_item_sk#64) "
          },
          "3" : {
            "sign" : -559738539,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 7074856,
            "rowCount" : 104042,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [i_item_id#65], [i_item_id#65, avg(ss_quantity#13) AS agg1#120, cast((avg(UnscaledValue(ss_list_price#15)) / 100.0) as decimal(11,6)) AS agg2#121, cast((avg(UnscaledValue(ss_coupon_amt#22)) / 100.0) as decimal(11,6)) AS agg3#122, cast((avg(UnscaledValue(ss_sales_price#16)) / 100.0) as decimal(11,6)) AS agg4#123] "
          }
        },
        "links" : [ {
          "fromId" : 14,
          "fromName" : "LogicalRelation",
          "toId" : 13,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 17,
          "fromName" : "LogicalRelation",
          "toId" : 16,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 16,
          "fromName" : "Filter",
          "toId" : 15,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 15,
          "fromName" : "Project",
          "toId" : 13,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 13,
          "fromName" : "Filter",
          "toId" : 12,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 12,
          "fromName" : "Project",
          "toId" : 11,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 18,
          "fromName" : "LogicalQueryStage",
          "toId" : 11,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "Join",
          "toId" : 10,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "Project",
          "toId" : 9,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 19,
          "fromName" : "LogicalQueryStage",
          "toId" : 9,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "Join",
          "toId" : 8,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "Project",
          "toId" : 7,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 20,
          "fromName" : "LogicalQueryStage",
          "toId" : 7,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Join",
          "toId" : 6,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Project",
          "toId" : 5,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 21,
          "fromName" : "LogicalQueryStage",
          "toId" : 5,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Join",
          "toId" : 4,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Project",
          "toId" : 3,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Aggregate",
          "toId" : 2,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "LocalLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "LocalLimit",
          "toId" : 0,
          "toName" : "GlobalLimit",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [i_item_id#65 ASC NULLS FIRST], true\n      +- Aggregate [i_item_id#65], [i_item_id#65, avg(ss_quantity#13) AS agg1#120, cast((avg(UnscaledValue(ss_list_price#15)) / 100.0) as decimal(11,6)) AS agg2#121, cast((avg(UnscaledValue(ss_coupon_amt#22)) / 100.0) as decimal(11,6)) AS agg3#122, cast((avg(UnscaledValue(ss_sales_price#16)) / 100.0) as decimal(11,6)) AS agg4#123]\n         +- Project [ss_quantity#13, ss_list_price#15, ss_sales_price#16, ss_coupon_amt#22, i_item_id#65]\n            +- Join Inner, (ss_promo_sk#11 = p_promo_sk#86)\n               :- Project [ss_promo_sk#11, ss_quantity#13, ss_list_price#15, ss_sales_price#16, ss_coupon_amt#22, i_item_id#65]\n               :  +- Join Inner, (ss_item_sk#5 = i_item_sk#64)\n               :     :- Project [ss_item_sk#5, ss_promo_sk#11, ss_quantity#13, ss_list_price#15, ss_sales_price#16, ss_coupon_amt#22]\n               :     :  +- Join Inner, (ss_cdemo_sk#7 = cd_demo_sk#27)\n               :     :     :- Project [ss_item_sk#5, ss_cdemo_sk#7, ss_promo_sk#11, ss_quantity#13, ss_list_price#15, ss_sales_price#16, ss_coupon_amt#22]\n               :     :     :  +- Join Inner, (ss_sold_date_sk#26 = d_date_sk#36)\n               :     :     :     :- Project [ss_item_sk#5, ss_cdemo_sk#7, ss_promo_sk#11, ss_quantity#13, ss_list_price#15, ss_sales_price#16, ss_coupon_amt#22, ss_sold_date_sk#26]\n               :     :     :     :  +- Filter ((((isnotnull(ss_cdemo_sk#7) AND isnotnull(ss_sold_date_sk#26)) AND isnotnull(ss_item_sk#5)) AND isnotnull(ss_promo_sk#11)) AND dynamicpruning#133 [ss_sold_date_sk#26])\n               :     :     :     :     :  +- Project [d_date_sk#36]\n               :     :     :     :     :     +- Filter ((isnotnull(d_year#42) AND (d_year#42 = 1998)) AND isnotnull(d_date_sk#36))\n               :     :     :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#36,d_date_id#37,d_date#38,d_month_seq#39,d_week_seq#40,d_quarter_seq#41,d_year#42,d_dow#43,d_moy#44,d_dom#45,d_qoy#46,d_fy_year#47,d_fy_quarter_seq#48,d_fy_week_seq#49,d_day_name#50,d_quarter_name#51,d_holiday#52,d_weekend#53,d_following_holiday#54,d_first_dom#55,d_last_dom#56,d_same_day_ly#57,d_same_day_lq#58,d_current_day#59,... 4 more fields] parquet\n               :     :     :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#4,ss_item_sk#5,ss_customer_sk#6,ss_cdemo_sk#7,ss_hdemo_sk#8,ss_addr_sk#9,ss_store_sk#10,ss_promo_sk#11,ss_ticket_number#12L,ss_quantity#13,ss_wholesale_cost#14,ss_list_price#15,ss_sales_price#16,ss_ext_discount_amt#17,ss_ext_sales_price#18,ss_ext_wholesale_cost#19,ss_ext_list_price#20,ss_ext_tax#21,ss_coupon_amt#22,ss_net_paid#23,ss_net_paid_inc_tax#24,ss_net_profit#25,ss_sold_date_sk#26] parquet\n               :     :     :     +- LogicalQueryStage Project [d_date_sk#36], BroadcastQueryStage 0\n               :     :     +- LogicalQueryStage Project [cd_demo_sk#27], BroadcastQueryStage 1\n               :     +- LogicalQueryStage Project [i_item_sk#64, i_item_id#65], BroadcastQueryStage 2\n               +- LogicalQueryStage Project [p_promo_sk#86], BroadcastQueryStage 3\n"
      },
      "IM" : {
        "inputSizeInBytes" : 41819258880,
        "inputRowCount" : 275278154
      },
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 1,
        "FinishedTasksNum" : 4,
        "FinishedTasksTotalTimeInMs" : 5575.0,
        "FinishedTasksDistributionInMs" : [ 1207.0, 1324.0, 1442.0, 1602.0, 1602.0 ]
      },
      "StartTimeInMs" : 1702226501051,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 16563,
        "IOBytes" : {
          "Total" : 844656486,
          "Details" : {
            "IR" : 802887468,
            "IW" : 0,
            "SR" : 20884509,
            "SW" : 20884509
          }
        }
      }
    }
  },
  "RuntimeQSs" : {
    "4" : {
      "QSLogical" : {
        "operators" : {
          "8" : {
            "sign" : -674661024,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 14870272760,
                "rowCount" : 265540585
              },
              "compileTime" : {
                "sizeInBytes" : 14870272760,
                "rowCount" : 265540585
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#26 = d_date_sk#36) "
          },
          "4" : {
            "sign" : 1229690985,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 21831601996,
                "rowCount" : 287257921
              },
              "compileTime" : {
                "sizeInBytes" : 21831601996,
                "rowCount" : 287257921
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_item_sk#5 = i_item_sk#64) "
          },
          "11" : {
            "sign" : 1769386681,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 41806893656,
                "rowCount" : 275045353
              },
              "compileTime" : {
                "sizeInBytes" : 41806893656,
                "rowCount" : 275045353
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#4, ss_item_sk#5, ss_customer_sk#6, ss_cdemo_sk#7, ss_hdemo_sk#8, ss_addr_sk#9, ss_store_sk#10, ss_promo_sk#11, ss_ticket_number#12L, ss_quantity#13, ss_wholesale_cost#14, ss_list_price#15, ss_sales_price#16, ss_ext_discount_amt#17, ss_ext_sales_price#18, ss_ext_wholesale_cost#19, ss_ext_list_price#20, ss_ext_tax#21, ss_coupon_amt#22, ss_net_paid#23, ss_net_paid_inc_tax#24, ss_net_profit#25, ss_sold_date_sk#26], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "9" : {
            "sign" : -1574109465,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 13044107544,
                "rowCount" : 250848222
              },
              "compileTime" : {
                "sizeInBytes" : 13044107544,
                "rowCount" : 250848222
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#5, ss_cdemo_sk#7, ss_promo_sk#11, ss_quantity#13, ss_list_price#15, ss_sales_price#16, ss_coupon_amt#22, ss_sold_date_sk#26] "
          },
          "5" : {
            "sign" : -1925800618,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 12100083908,
                "rowCount" : 275001907
              },
              "compileTime" : {
                "sizeInBytes" : 12100083908,
                "rowCount" : 275001907
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#5, ss_promo_sk#11, ss_quantity#13, ss_list_price#15, ss_sales_price#16, ss_coupon_amt#22] "
          },
          "10" : {
            "sign" : 999129074,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 38128929744,
                "rowCount" : 250848222
              },
              "compileTime" : {
                "sizeInBytes" : 38128929744,
                "rowCount" : 250848222
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((((isnotnull(ss_cdemo_sk#7) AND isnotnull(ss_sold_date_sk#26)) AND isnotnull(ss_item_sk#5)) AND isnotnull(ss_promo_sk#11)) AND dynamicpruning#133 [ss_sold_date_sk#26]) "
          },
          "6" : {
            "sign" : 1614221891,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 14300099164,
                "rowCount" : 275001907
              },
              "compileTime" : {
                "sizeInBytes" : 14300099164,
                "rowCount" : 275001907
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_cdemo_sk#7 = cd_demo_sk#27) "
          },
          "1" : {
            "sign" : -1537823417,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 25394016704,
                "rowCount" : 396781511
              },
              "compileTime" : {
                "sizeInBytes" : 25394016704,
                "rowCount" : 396781511
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_quantity#13, ss_list_price#15, ss_sales_price#16, ss_coupon_amt#22, i_item_id#65] "
          },
          "0" : {
            "sign" : 273493807,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 7074856,
                "rowCount" : 104042
              },
              "compileTime" : {
                "sizeInBytes" : 7074856,
                "rowCount" : 104042
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [i_item_id#65], [i_item_id#65, avg(ss_quantity#13) AS agg1#120, cast((avg(UnscaledValue(ss_list_price#15)) / 100.0) as decimal(11,6)) AS agg2#121, cast((avg(UnscaledValue(ss_coupon_amt#22)) / 100.0) as decimal(11,6)) AS agg3#122, cast((avg(UnscaledValue(ss_sales_price#16)) / 100.0) as decimal(11,6)) AS agg4#123] "
          },
          "2" : {
            "sign" : 1576801640,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 28568268792,
                "rowCount" : 396781511
              },
              "compileTime" : {
                "sizeInBytes" : 28568268792,
                "rowCount" : 396781511
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_promo_sk#11 = p_promo_sk#86) "
          },
          "7" : {
            "sign" : 1057374167,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 12745948080,
                "rowCount" : 265540585
              },
              "compileTime" : {
                "sizeInBytes" : 12745948080,
                "rowCount" : 265540585
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#5, ss_cdemo_sk#7, ss_promo_sk#11, ss_quantity#13, ss_list_price#15, ss_sales_price#16, ss_coupon_amt#22] "
          },
          "3" : {
            "sign" : 625881760,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 19533538628,
                "rowCount" : 287257921
              },
              "compileTime" : {
                "sizeInBytes" : 19533538628,
                "rowCount" : 287257921
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_promo_sk#11, ss_quantity#13, ss_list_price#15, ss_sales_price#16, ss_coupon_amt#22, i_item_id#65] "
          }
        },
        "links" : [ {
          "fromId" : 11,
          "fromName" : "LogicalRelation",
          "toId" : 10,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "Filter",
          "toId" : 9,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "Project",
          "toId" : 8,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "Join",
          "toId" : 7,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Project",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Join",
          "toId" : 5,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Project",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Join",
          "toId" : 3,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Project",
          "toId" : 2,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Join",
          "toId" : 1,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Project",
          "toId" : 0,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Aggregate [i_item_id#65], [i_item_id#65, avg(ss_quantity#13) AS agg1#120, cast((avg(UnscaledValue(ss_list_price#15)) / 100.0) as decimal(11,6)) AS agg2#121, cast((avg(UnscaledValue(ss_coupon_amt#22)) / 100.0) as decimal(11,6)) AS agg3#122, cast((avg(UnscaledValue(ss_sales_price#16)) / 100.0) as decimal(11,6)) AS agg4#123]\n+- Project [ss_quantity#13, ss_list_price#15, ss_sales_price#16, ss_coupon_amt#22, i_item_id#65]\n   +- Join Inner, (ss_promo_sk#11 = p_promo_sk#86)\n      :- Project [ss_promo_sk#11, ss_quantity#13, ss_list_price#15, ss_sales_price#16, ss_coupon_amt#22, i_item_id#65]\n      :  +- Join Inner, (ss_item_sk#5 = i_item_sk#64)\n      :     :- Project [ss_item_sk#5, ss_promo_sk#11, ss_quantity#13, ss_list_price#15, ss_sales_price#16, ss_coupon_amt#22]\n      :     :  +- Join Inner, (ss_cdemo_sk#7 = cd_demo_sk#27)\n      :     :     :- Project [ss_item_sk#5, ss_cdemo_sk#7, ss_promo_sk#11, ss_quantity#13, ss_list_price#15, ss_sales_price#16, ss_coupon_amt#22]\n      :     :     :  +- Join Inner, (ss_sold_date_sk#26 = d_date_sk#36)\n      :     :     :     :- Project [ss_item_sk#5, ss_cdemo_sk#7, ss_promo_sk#11, ss_quantity#13, ss_list_price#15, ss_sales_price#16, ss_coupon_amt#22, ss_sold_date_sk#26]\n      :     :     :     :  +- Filter ((((isnotnull(ss_cdemo_sk#7) AND isnotnull(ss_sold_date_sk#26)) AND isnotnull(ss_item_sk#5)) AND isnotnull(ss_promo_sk#11)) AND dynamicpruning#133 [ss_sold_date_sk#26])\n      :     :     :     :     :  +- Project [d_date_sk#36]\n      :     :     :     :     :     +- Filter ((isnotnull(d_year#42) AND (d_year#42 = 1998)) AND isnotnull(d_date_sk#36))\n      :     :     :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#36,d_date_id#37,d_date#38,d_month_seq#39,d_week_seq#40,d_quarter_seq#41,d_year#42,d_dow#43,d_moy#44,d_dom#45,d_qoy#46,d_fy_year#47,d_fy_quarter_seq#48,d_fy_week_seq#49,d_day_name#50,d_quarter_name#51,d_holiday#52,d_weekend#53,d_following_holiday#54,d_first_dom#55,d_last_dom#56,d_same_day_ly#57,d_same_day_lq#58,d_current_day#59,... 4 more fields] parquet\n      :     :     :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#4,ss_item_sk#5,ss_customer_sk#6,ss_cdemo_sk#7,ss_hdemo_sk#8,ss_addr_sk#9,ss_store_sk#10,ss_promo_sk#11,ss_ticket_number#12L,ss_quantity#13,ss_wholesale_cost#14,ss_list_price#15,ss_sales_price#16,ss_ext_discount_amt#17,ss_ext_sales_price#18,ss_ext_wholesale_cost#19,ss_ext_list_price#20,ss_ext_tax#21,ss_coupon_amt#22,ss_net_paid#23,ss_net_paid_inc_tax#24,ss_net_profit#25,ss_sold_date_sk#26] parquet\n      :     :     :     +- Project [d_date_sk#36]\n      :     :     :        +- Filter ((isnotnull(d_year#42) AND (d_year#42 = 1998)) AND isnotnull(d_date_sk#36))\n      :     :     :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#36,d_date_id#37,d_date#38,d_month_seq#39,d_week_seq#40,d_quarter_seq#41,d_year#42,d_dow#43,d_moy#44,d_dom#45,d_qoy#46,d_fy_year#47,d_fy_quarter_seq#48,d_fy_week_seq#49,d_day_name#50,d_quarter_name#51,d_holiday#52,d_weekend#53,d_following_holiday#54,d_first_dom#55,d_last_dom#56,d_same_day_ly#57,d_same_day_lq#58,d_current_day#59,... 4 more fields] parquet\n      :     :     +- Project [cd_demo_sk#27]\n      :     :        +- Filter ((((isnotnull(cd_gender#28) AND isnotnull(cd_marital_status#29)) AND isnotnull(cd_education_status#30)) AND (((cd_gender#28 = F) AND (cd_marital_status#29 = W)) AND (cd_education_status#30 = Primary))) AND isnotnull(cd_demo_sk#27))\n      :     :           +- Relation spark_catalog.tpcds_100.customer_demographics[cd_demo_sk#27,cd_gender#28,cd_marital_status#29,cd_education_status#30,cd_purchase_estimate#31,cd_credit_rating#32,cd_dep_count#33,cd_dep_employed_count#34,cd_dep_college_count#35] parquet\n      :     +- Project [i_item_sk#64, i_item_id#65]\n      :        +- Filter isnotnull(i_item_sk#64)\n      :           +- Relation spark_catalog.tpcds_100.item[i_item_sk#64,i_item_id#65,i_rec_start_date#66,i_rec_end_date#67,i_item_desc#68,i_current_price#69,i_wholesale_cost#70,i_brand_id#71,i_brand#72,i_class_id#73,i_class#74,i_category_id#75,i_category#76,i_manufact_id#77,i_manufact#78,i_size#79,i_formulation#80,i_color#81,i_units#82,i_container#83,i_manager_id#84,i_product_name#85] parquet\n      +- Project [p_promo_sk#86]\n         +- Filter (((p_channel_email#95 = N) OR (p_channel_event#100 = N)) AND isnotnull(p_promo_sk#86))\n            +- Relation spark_catalog.tpcds_100.promotion[p_promo_sk#86,p_promo_id#87,p_start_date_sk#88,p_end_date_sk#89,p_item_sk#90,p_cost#91,p_response_target#92,p_promo_name#93,p_channel_dmail#94,p_channel_email#95,p_channel_catalog#96,p_channel_tv#97,p_channel_radio#98,p_channel_press#99,p_channel_event#100,p_channel_demo#101,p_channel_details#102,p_purpose#103,p_discount_active#104] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "12" : {
            "sign" : -198362568,
            "className" : "org.apache.spark.sql.execution.adaptive.BroadcastQueryStageExec",
            "sizeInBytes" : 2097152,
            "rowCount" : 27440,
            "isRuntime" : true,
            "predicate" : " (unknown) BroadcastQueryStage Output [1]: [cd_demo_sk#27] Arguments: 1 "
          },
          "8" : {
            "sign" : -1448857149,
            "className" : "org.apache.spark.sql.execution.joins.BroadcastHashJoinExec",
            "sizeInBytes" : 14870272760,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) BroadcastHashJoin Left keys [1]: [ss_sold_date_sk#26] Right keys [1]: [d_date_sk#36] Join type: Inner Join condition: None "
          },
          "4" : {
            "sign" : -69940681,
            "className" : "org.apache.spark.sql.execution.joins.BroadcastHashJoinExec",
            "sizeInBytes" : 21831601996,
            "rowCount" : 287257921,
            "isRuntime" : false,
            "predicate" : " (unknown) BroadcastHashJoin Left keys [1]: [ss_item_sk#5] Right keys [1]: [i_item_sk#64] Join type: Inner Join condition: None "
          },
          "11" : {
            "sign" : 1671375599,
            "className" : "org.apache.spark.sql.execution.adaptive.BroadcastQueryStageExec",
            "sizeInBytes" : 1051496,
            "rowCount" : 365,
            "isRuntime" : true,
            "predicate" : " (unknown) BroadcastQueryStage Output [1]: [d_date_sk#36] Arguments: 0 "
          },
          "9" : {
            "sign" : 127489199,
            "className" : "org.apache.spark.sql.execution.FilterExec",
            "sizeInBytes" : 13044107544,
            "rowCount" : 250848222,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Input [8]: [ss_item_sk#5, ss_cdemo_sk#7, ss_promo_sk#11, ss_quantity#13, ss_list_price#15, ss_sales_price#16, ss_coupon_amt#22, ss_sold_date_sk#26] Condition : ((isnotnull(ss_cdemo_sk#7) AND isnotnull(ss_item_sk#5)) AND isnotnull(ss_promo_sk#11)) "
          },
          "13" : {
            "sign" : -1031818008,
            "className" : "org.apache.spark.sql.execution.adaptive.BroadcastQueryStageExec",
            "sizeInBytes" : 18409216,
            "rowCount" : 204000,
            "isRuntime" : true,
            "predicate" : " (unknown) BroadcastQueryStage Output [2]: [i_item_sk#64, i_item_id#65] Arguments: 2 "
          },
          "5" : {
            "sign" : 1916908408,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 12100083908,
            "rowCount" : 275001907,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [6]: [ss_item_sk#5, ss_promo_sk#11, ss_quantity#13, ss_list_price#15, ss_sales_price#16, ss_coupon_amt#22] Input [8]: [ss_item_sk#5, ss_cdemo_sk#7, ss_promo_sk#11, ss_quantity#13, ss_list_price#15, ss_sales_price#16, ss_coupon_amt#22, cd_demo_sk#27] "
          },
          "10" : {
            "sign" : -637793883,
            "className" : "org.apache.spark.sql.execution.FileSourceScanExec",
            "sizeInBytes" : 13044107544,
            "rowCount" : 250848222,
            "isRuntime" : false,
            "predicate" : " (unknown) Scan parquet spark_catalog.tpcds_100.store_sales Output [8]: [ss_item_sk#5, ss_cdemo_sk#7, ss_promo_sk#11, ss_quantity#13, ss_list_price#15, ss_sales_price#16, ss_coupon_amt#22, ss_sold_date_sk#26] Batched: true Location: InMemoryFileIndex [hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/store_sales/ss_sold_date_sk=2450816, ... 1822 entries] PartitionFilters: [isnotnull(ss_sold_date_sk#26), dynamicpruningexpression(ss_sold_date_sk#26 IN dynamicpruning#133)] PushedFilters: [IsNotNull(ss_cdemo_sk), IsNotNull(ss_item_sk), IsNotNull(ss_promo_sk)] ReadSchema: struct<ss_item_sk:int,ss_cdemo_sk:int,ss_promo_sk:int,ss_quantity:int,ss_list_price:decimal(7,2),ss_sales_price:decimal(7,2),ss_coupon_amt:decimal(7,2)> "
          },
          "6" : {
            "sign" : -735188265,
            "className" : "org.apache.spark.sql.execution.joins.BroadcastHashJoinExec",
            "sizeInBytes" : 14300099164,
            "rowCount" : 275001907,
            "isRuntime" : false,
            "predicate" : " (unknown) BroadcastHashJoin Left keys [1]: [ss_cdemo_sk#7] Right keys [1]: [cd_demo_sk#27] Join type: Inner Join condition: None "
          },
          "1" : {
            "sign" : 557854376,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 25394016704,
            "rowCount" : 396781511,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [5]: [ss_quantity#13, ss_list_price#15, ss_sales_price#16, ss_coupon_amt#22, i_item_id#65] Input [7]: [ss_promo_sk#11, ss_quantity#13, ss_list_price#15, ss_sales_price#16, ss_coupon_amt#22, i_item_id#65, p_promo_sk#86] "
          },
          "14" : {
            "sign" : 499143448,
            "className" : "org.apache.spark.sql.execution.adaptive.BroadcastQueryStageExec",
            "sizeInBytes" : 1056576,
            "rowCount" : 996,
            "isRuntime" : true,
            "predicate" : " (unknown) BroadcastQueryStage Output [1]: [p_promo_sk#86] Arguments: 3 "
          },
          "0" : {
            "sign" : 936054809,
            "className" : "org.apache.spark.sql.execution.aggregate.HashAggregateExec",
            "sizeInBytes" : 7074856,
            "rowCount" : 104042,
            "isRuntime" : false,
            "predicate" : " (unknown) HashAggregate Input [5]: [ss_quantity#13, ss_list_price#15, ss_sales_price#16, ss_coupon_amt#22, i_item_id#65] Keys [1]: [i_item_id#65] Functions [4]: [partial_avg(ss_quantity#13), partial_avg(UnscaledValue(ss_list_price#15)), partial_avg(UnscaledValue(ss_coupon_amt#22)), partial_avg(UnscaledValue(ss_sales_price#16))] Aggregate Attributes [8]: [sum#134, count#135L, sum#136, count#137L, sum#138, count#139L, sum#140, count#141L] Results [9]: [i_item_id#65, sum#142, count#143L, sum#144, count#145L, sum#146, count#147L, sum#148, count#149L] "
          },
          "2" : {
            "sign" : -33751201,
            "className" : "org.apache.spark.sql.execution.joins.BroadcastHashJoinExec",
            "sizeInBytes" : 28568268792,
            "rowCount" : 396781511,
            "isRuntime" : false,
            "predicate" : " (unknown) BroadcastHashJoin Left keys [1]: [ss_promo_sk#11] Right keys [1]: [p_promo_sk#86] Join type: Inner Join condition: None "
          },
          "7" : {
            "sign" : 1892884938,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 12745948080,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [7]: [ss_item_sk#5, ss_cdemo_sk#7, ss_promo_sk#11, ss_quantity#13, ss_list_price#15, ss_sales_price#16, ss_coupon_amt#22] Input [9]: [ss_item_sk#5, ss_cdemo_sk#7, ss_promo_sk#11, ss_quantity#13, ss_list_price#15, ss_sales_price#16, ss_coupon_amt#22, ss_sold_date_sk#26, d_date_sk#36] "
          },
          "3" : {
            "sign" : 443742518,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 19533538628,
            "rowCount" : 287257921,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [6]: [ss_promo_sk#11, ss_quantity#13, ss_list_price#15, ss_sales_price#16, ss_coupon_amt#22, i_item_id#65] Input [8]: [ss_item_sk#5, ss_promo_sk#11, ss_quantity#13, ss_list_price#15, ss_sales_price#16, ss_coupon_amt#22, i_item_sk#64, i_item_id#65] "
          }
        },
        "links" : [ {
          "fromId" : 10,
          "fromName" : "Scan parquet spark_catalog.tpcds_100.store_sales",
          "toId" : 9,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "Filter",
          "toId" : 8,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "BroadcastQueryStage",
          "toId" : 8,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "BroadcastHashJoin",
          "toId" : 7,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Project",
          "toId" : 6,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 12,
          "fromName" : "BroadcastQueryStage",
          "toId" : 6,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "BroadcastHashJoin",
          "toId" : 5,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Project",
          "toId" : 4,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 13,
          "fromName" : "BroadcastQueryStage",
          "toId" : 4,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "BroadcastHashJoin",
          "toId" : 3,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Project",
          "toId" : 2,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 14,
          "fromName" : "BroadcastQueryStage",
          "toId" : 2,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "BroadcastHashJoin",
          "toId" : 1,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Project",
          "toId" : 0,
          "toName" : "HashAggregate",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "HashAggregate(keys=[i_item_id#65], functions=[partial_avg(ss_quantity#13), partial_avg(UnscaledValue(ss_list_price#15)), partial_avg(UnscaledValue(ss_coupon_amt#22)), partial_avg(UnscaledValue(ss_sales_price#16))], output=[i_item_id#65, sum#142, count#143L, sum#144, count#145L, sum#146, count#147L, sum#148, count#149L])\n+- Project [ss_quantity#13, ss_list_price#15, ss_sales_price#16, ss_coupon_amt#22, i_item_id#65]\n   +- BroadcastHashJoin [ss_promo_sk#11], [p_promo_sk#86], Inner, BuildRight, false\n      :- Project [ss_promo_sk#11, ss_quantity#13, ss_list_price#15, ss_sales_price#16, ss_coupon_amt#22, i_item_id#65]\n      :  +- BroadcastHashJoin [ss_item_sk#5], [i_item_sk#64], Inner, BuildRight, false\n      :     :- Project [ss_item_sk#5, ss_promo_sk#11, ss_quantity#13, ss_list_price#15, ss_sales_price#16, ss_coupon_amt#22]\n      :     :  +- BroadcastHashJoin [ss_cdemo_sk#7], [cd_demo_sk#27], Inner, BuildRight, false\n      :     :     :- Project [ss_item_sk#5, ss_cdemo_sk#7, ss_promo_sk#11, ss_quantity#13, ss_list_price#15, ss_sales_price#16, ss_coupon_amt#22]\n      :     :     :  +- BroadcastHashJoin [ss_sold_date_sk#26], [d_date_sk#36], Inner, BuildRight, false\n      :     :     :     :- Filter ((isnotnull(ss_cdemo_sk#7) AND isnotnull(ss_item_sk#5)) AND isnotnull(ss_promo_sk#11))\n      :     :     :     :  +- FileScan parquet spark_catalog.tpcds_100.store_sales[ss_item_sk#5,ss_cdemo_sk#7,ss_promo_sk#11,ss_quantity#13,ss_list_price#15,ss_sales_price#16,ss_coupon_amt#22,ss_sold_date_sk#26] Batched: true, DataFilters: [isnotnull(ss_cdemo_sk#7), isnotnull(ss_item_sk#5), isnotnull(ss_promo_sk#11)], Format: Parquet, Location: InMemoryFileIndex(1823 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/store_..., PartitionFilters: [isnotnull(ss_sold_date_sk#26), dynamicpruningexpression(ss_sold_date_sk#26 IN dynamicpruning#133)], PushedFilters: [IsNotNull(ss_cdemo_sk), IsNotNull(ss_item_sk), IsNotNull(ss_promo_sk)], ReadSchema: struct<ss_item_sk:int,ss_cdemo_sk:int,ss_promo_sk:int,ss_quantity:int,ss_list_price:decimal(7,2),...\n      :     :     :     :        +- SubqueryBroadcast dynamicpruning#133, 0, [d_date_sk#36], [id=#578]\n      :     :     :     :           +- AdaptiveSparkPlan isFinalPlan=false\n      :     :     :     :              +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=575]\n      :     :     :     :                 +- Project [d_date_sk#36]\n      :     :     :     :                    +- Filter ((isnotnull(d_year#42) AND (d_year#42 = 1998)) AND isnotnull(d_date_sk#36))\n      :     :     :     :                       +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#36,d_year#42] Batched: true, DataFilters: [isnotnull(d_year#42), (d_year#42 = 1998), isnotnull(d_date_sk#36)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), EqualTo(d_year,1998), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>\n      :     :     :     +- BroadcastQueryStage 0\n      :     :     :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=196]\n      :     :     :           +- *(1) Project [d_date_sk#36]\n      :     :     :              +- *(1) Filter ((isnotnull(d_year#42) AND (d_year#42 = 1998)) AND isnotnull(d_date_sk#36))\n      :     :     :                 +- *(1) ColumnarToRow\n      :     :     :                    +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#36,d_year#42] Batched: true, DataFilters: [isnotnull(d_year#42), (d_year#42 = 1998), isnotnull(d_date_sk#36)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), EqualTo(d_year,1998), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>\n      :     :     +- BroadcastQueryStage 1\n      :     :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=217]\n      :     :           +- *(2) Project [cd_demo_sk#27]\n      :     :              +- *(2) Filter ((((((isnotnull(cd_gender#28) AND isnotnull(cd_marital_status#29)) AND isnotnull(cd_education_status#30)) AND (cd_gender#28 = F)) AND (cd_marital_status#29 = W)) AND (cd_education_status#30 = Primary)) AND isnotnull(cd_demo_sk#27))\n      :     :                 +- *(2) ColumnarToRow\n      :     :                    +- FileScan parquet spark_catalog.tpcds_100.customer_demographics[cd_demo_sk#27,cd_gender#28,cd_marital_status#29,cd_education_status#30] Batched: true, DataFilters: [isnotnull(cd_gender#28), isnotnull(cd_marital_status#29), isnotnull(cd_education_status#30), (cd..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/customer_..., PartitionFilters: [], PushedFilters: [IsNotNull(cd_gender), IsNotNull(cd_marital_status), IsNotNull(cd_education_status), EqualTo(cd_g..., ReadSchema: struct<cd_demo_sk:int,cd_gender:string,cd_marital_status:string,cd_education_status:string>\n      :     +- BroadcastQueryStage 2\n      :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=236]\n      :           +- *(3) Filter isnotnull(i_item_sk#64)\n      :              +- *(3) ColumnarToRow\n      :                 +- FileScan parquet spark_catalog.tpcds_100.item[i_item_sk#64,i_item_id#65] Batched: true, DataFilters: [isnotnull(i_item_sk#64)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/item], PartitionFilters: [], PushedFilters: [IsNotNull(i_item_sk)], ReadSchema: struct<i_item_sk:int,i_item_id:string>\n      +- BroadcastQueryStage 3\n         +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=255]\n            +- *(4) Project [p_promo_sk#86]\n               +- *(4) Filter (((p_channel_email#95 = N) OR (p_channel_event#100 = N)) AND isnotnull(p_promo_sk#86))\n                  +- *(4) ColumnarToRow\n                     +- FileScan parquet spark_catalog.tpcds_100.promotion[p_promo_sk#86,p_channel_email#95,p_channel_event#100] Batched: true, DataFilters: [((p_channel_email#95 = N) OR (p_channel_event#100 = N)), isnotnull(p_promo_sk#86)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/promotion], PartitionFilters: [], PushedFilters: [Or(EqualTo(p_channel_email,N),EqualTo(p_channel_event,N)), IsNotNull(p_promo_sk)], ReadSchema: struct<p_promo_sk:int,p_channel_email:string,p_channel_event:string>\n"
      },
      "IM" : {
        "inputSizeInBytes" : 13066721984,
        "inputRowCount" : 251081023
      },
      "InitialPartitionNum" : 0,
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 4,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 5 ],
      "Objectives" : {
        "DurationInMs" : 8572,
        "TotalTasksDurationInMs" : 91467,
        "IOBytes" : {
          "Total" : 822153169,
          "Details" : {
            "IR" : 801268660,
            "IW" : 0,
            "SR" : 0,
            "SW" : 20884509
          }
        }
      }
    },
    "5" : {
      "QSLogical" : {
        "operators" : {
          "0" : {
            "sign" : 1791096269,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 6000,
                "rowCount" : 100
              },
              "compileTime" : {
                "sizeInBytes" : 6000,
                "rowCount" : 100
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) GlobalLimit Arguments: 100 "
          },
          "1" : {
            "sign" : -1483592518,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 7074856,
                "rowCount" : 104042
              },
              "compileTime" : {
                "sizeInBytes" : 7074856,
                "rowCount" : 104042
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) LocalLimit Arguments: 100 "
          },
          "2" : {
            "sign" : -797112285,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 7074856,
                "rowCount" : 104042
              },
              "compileTime" : {
                "sizeInBytes" : 7074856,
                "rowCount" : 104042
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [i_item_id#65 ASC NULLS FIRST], true "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "LocalLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "LocalLimit",
          "toId" : 0,
          "toName" : "GlobalLimit",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [i_item_id#65 ASC NULLS FIRST], true\n      +- Aggregate [i_item_id#65], [i_item_id#65, avg(ss_quantity#13) AS agg1#120, cast((avg(UnscaledValue(ss_list_price#15)) / 100.0) as decimal(11,6)) AS agg2#121, cast((avg(UnscaledValue(ss_coupon_amt#22)) / 100.0) as decimal(11,6)) AS agg3#122, cast((avg(UnscaledValue(ss_sales_price#16)) / 100.0) as decimal(11,6)) AS agg4#123]\n         +- Project [ss_quantity#13, ss_list_price#15, ss_sales_price#16, ss_coupon_amt#22, i_item_id#65]\n            +- Join Inner, (ss_promo_sk#11 = p_promo_sk#86)\n               :- Project [ss_promo_sk#11, ss_quantity#13, ss_list_price#15, ss_sales_price#16, ss_coupon_amt#22, i_item_id#65]\n               :  +- Join Inner, (ss_item_sk#5 = i_item_sk#64)\n               :     :- Project [ss_item_sk#5, ss_promo_sk#11, ss_quantity#13, ss_list_price#15, ss_sales_price#16, ss_coupon_amt#22]\n               :     :  +- Join Inner, (ss_cdemo_sk#7 = cd_demo_sk#27)\n               :     :     :- Project [ss_item_sk#5, ss_cdemo_sk#7, ss_promo_sk#11, ss_quantity#13, ss_list_price#15, ss_sales_price#16, ss_coupon_amt#22]\n               :     :     :  +- Join Inner, (ss_sold_date_sk#26 = d_date_sk#36)\n               :     :     :     :- Project [ss_item_sk#5, ss_cdemo_sk#7, ss_promo_sk#11, ss_quantity#13, ss_list_price#15, ss_sales_price#16, ss_coupon_amt#22, ss_sold_date_sk#26]\n               :     :     :     :  +- Filter ((((isnotnull(ss_cdemo_sk#7) AND isnotnull(ss_sold_date_sk#26)) AND isnotnull(ss_item_sk#5)) AND isnotnull(ss_promo_sk#11)) AND dynamicpruning#133 [ss_sold_date_sk#26])\n               :     :     :     :     :  +- Project [d_date_sk#36]\n               :     :     :     :     :     +- Filter ((isnotnull(d_year#42) AND (d_year#42 = 1998)) AND isnotnull(d_date_sk#36))\n               :     :     :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#36,d_date_id#37,d_date#38,d_month_seq#39,d_week_seq#40,d_quarter_seq#41,d_year#42,d_dow#43,d_moy#44,d_dom#45,d_qoy#46,d_fy_year#47,d_fy_quarter_seq#48,d_fy_week_seq#49,d_day_name#50,d_quarter_name#51,d_holiday#52,d_weekend#53,d_following_holiday#54,d_first_dom#55,d_last_dom#56,d_same_day_ly#57,d_same_day_lq#58,d_current_day#59,... 4 more fields] parquet\n               :     :     :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#4,ss_item_sk#5,ss_customer_sk#6,ss_cdemo_sk#7,ss_hdemo_sk#8,ss_addr_sk#9,ss_store_sk#10,ss_promo_sk#11,ss_ticket_number#12L,ss_quantity#13,ss_wholesale_cost#14,ss_list_price#15,ss_sales_price#16,ss_ext_discount_amt#17,ss_ext_sales_price#18,ss_ext_wholesale_cost#19,ss_ext_list_price#20,ss_ext_tax#21,ss_coupon_amt#22,ss_net_paid#23,ss_net_paid_inc_tax#24,ss_net_profit#25,ss_sold_date_sk#26] parquet\n               :     :     :     +- Project [d_date_sk#36]\n               :     :     :        +- Filter ((isnotnull(d_year#42) AND (d_year#42 = 1998)) AND isnotnull(d_date_sk#36))\n               :     :     :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#36,d_date_id#37,d_date#38,d_month_seq#39,d_week_seq#40,d_quarter_seq#41,d_year#42,d_dow#43,d_moy#44,d_dom#45,d_qoy#46,d_fy_year#47,d_fy_quarter_seq#48,d_fy_week_seq#49,d_day_name#50,d_quarter_name#51,d_holiday#52,d_weekend#53,d_following_holiday#54,d_first_dom#55,d_last_dom#56,d_same_day_ly#57,d_same_day_lq#58,d_current_day#59,... 4 more fields] parquet\n               :     :     +- Project [cd_demo_sk#27]\n               :     :        +- Filter ((((isnotnull(cd_gender#28) AND isnotnull(cd_marital_status#29)) AND isnotnull(cd_education_status#30)) AND (((cd_gender#28 = F) AND (cd_marital_status#29 = W)) AND (cd_education_status#30 = Primary))) AND isnotnull(cd_demo_sk#27))\n               :     :           +- Relation spark_catalog.tpcds_100.customer_demographics[cd_demo_sk#27,cd_gender#28,cd_marital_status#29,cd_education_status#30,cd_purchase_estimate#31,cd_credit_rating#32,cd_dep_count#33,cd_dep_employed_count#34,cd_dep_college_count#35] parquet\n               :     +- Project [i_item_sk#64, i_item_id#65]\n               :        +- Filter isnotnull(i_item_sk#64)\n               :           +- Relation spark_catalog.tpcds_100.item[i_item_sk#64,i_item_id#65,i_rec_start_date#66,i_rec_end_date#67,i_item_desc#68,i_current_price#69,i_wholesale_cost#70,i_brand_id#71,i_brand#72,i_class_id#73,i_class#74,i_category_id#75,i_category#76,i_manufact_id#77,i_manufact#78,i_size#79,i_formulation#80,i_color#81,i_units#82,i_container#83,i_manager_id#84,i_product_name#85] parquet\n               +- Project [p_promo_sk#86]\n                  +- Filter (((p_channel_email#95 = N) OR (p_channel_event#100 = N)) AND isnotnull(p_promo_sk#86))\n                     +- Relation spark_catalog.tpcds_100.promotion[p_promo_sk#86,p_promo_id#87,p_start_date_sk#88,p_end_date_sk#89,p_item_sk#90,p_cost#91,p_response_target#92,p_promo_name#93,p_channel_dmail#94,p_channel_email#95,p_channel_catalog#96,p_channel_tv#97,p_channel_radio#98,p_channel_press#99,p_channel_event#100,p_channel_demo#101,p_channel_details#102,p_purpose#103,p_discount_active#104] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "0" : {
            "sign" : -800413300,
            "className" : "org.apache.spark.sql.execution.TakeOrderedAndProjectExec",
            "sizeInBytes" : 6000,
            "rowCount" : 100,
            "isRuntime" : false,
            "predicate" : " (unknown) TakeOrderedAndProject Input [5]: [i_item_id#65, agg1#120, agg2#121, agg3#122, agg4#123] Arguments: 100, [i_item_id#65 ASC NULLS FIRST], [i_item_id#65, agg1#120, agg2#121, agg3#122, agg4#123] "
          },
          "1" : {
            "sign" : -33669711,
            "className" : "org.apache.spark.sql.execution.aggregate.HashAggregateExec",
            "sizeInBytes" : 63716640,
            "rowCount" : 663715,
            "isRuntime" : true,
            "predicate" : " (unknown) HashAggregate Input [9]: [i_item_id#65, sum#142, count#143L, sum#144, count#145L, sum#146, count#147L, sum#148, count#149L] Keys [1]: [i_item_id#65] Functions [4]: [avg(ss_quantity#13), avg(UnscaledValue(ss_list_price#15)), avg(UnscaledValue(ss_coupon_amt#22)), avg(UnscaledValue(ss_sales_price#16))] Aggregate Attributes [4]: [avg(ss_quantity#13)#124, avg(UnscaledValue(ss_list_price#15))#125, avg(UnscaledValue(ss_coupon_amt#22))#126, avg(UnscaledValue(ss_sales_price#16))#127] Results [5]: [i_item_id#65, avg(ss_quantity#13)#124 AS agg1#120, cast((avg(UnscaledValue(ss_list_price#15))#125 / 100.0) as decimal(11,6)) AS agg2#121, cast((avg(UnscaledValue(ss_coupon_amt#22))#126 / 100.0) as decimal(11,6)) AS agg3#122, cast((avg(UnscaledValue(ss_sales_price#16))#127 / 100.0) as decimal(11,6)) AS agg4#123] "
          },
          "2" : {
            "sign" : 1013831532,
            "className" : "org.apache.spark.sql.execution.adaptive.ShuffleQueryStageExec",
            "sizeInBytes" : 7074856,
            "rowCount" : 104042,
            "isRuntime" : false,
            "predicate" : " (unknown) ShuffleQueryStage Output [9]: [i_item_id#65, sum#142, count#143L, sum#144, count#145L, sum#146, count#147L, sum#148, count#149L] Arguments: 4 "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "ShuffleQueryStage",
          "toId" : 1,
          "toName" : "HashAggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "HashAggregate",
          "toId" : 0,
          "toName" : "TakeOrderedAndProject",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "TakeOrderedAndProject(limit=100, orderBy=[i_item_id#65 ASC NULLS FIRST], output=[i_item_id#65,agg1#120,agg2#121,agg3#122,agg4#123])\n+- HashAggregate(keys=[i_item_id#65], functions=[avg(ss_quantity#13), avg(UnscaledValue(ss_list_price#15)), avg(UnscaledValue(ss_coupon_amt#22)), avg(UnscaledValue(ss_sales_price#16))], output=[i_item_id#65, agg1#120, agg2#121, agg3#122, agg4#123])\n   +- ShuffleQueryStage 4\n      +- Exchange hashpartitioning(i_item_id#65, 200), ENSURE_REQUIREMENTS, [plan_id=642]\n         +- *(5) HashAggregate(keys=[i_item_id#65], functions=[partial_avg(ss_quantity#13), partial_avg(UnscaledValue(ss_list_price#15)), partial_avg(UnscaledValue(ss_coupon_amt#22)), partial_avg(UnscaledValue(ss_sales_price#16))], output=[i_item_id#65, sum#142, count#143L, sum#144, count#145L, sum#146, count#147L, sum#148, count#149L])\n            +- *(5) Project [ss_quantity#13, ss_list_price#15, ss_sales_price#16, ss_coupon_amt#22, i_item_id#65]\n               +- *(5) BroadcastHashJoin [ss_promo_sk#11], [p_promo_sk#86], Inner, BuildRight, false\n                  :- *(5) Project [ss_promo_sk#11, ss_quantity#13, ss_list_price#15, ss_sales_price#16, ss_coupon_amt#22, i_item_id#65]\n                  :  +- *(5) BroadcastHashJoin [ss_item_sk#5], [i_item_sk#64], Inner, BuildRight, false\n                  :     :- *(5) Project [ss_item_sk#5, ss_promo_sk#11, ss_quantity#13, ss_list_price#15, ss_sales_price#16, ss_coupon_amt#22]\n                  :     :  +- *(5) BroadcastHashJoin [ss_cdemo_sk#7], [cd_demo_sk#27], Inner, BuildRight, false\n                  :     :     :- *(5) Project [ss_item_sk#5, ss_cdemo_sk#7, ss_promo_sk#11, ss_quantity#13, ss_list_price#15, ss_sales_price#16, ss_coupon_amt#22]\n                  :     :     :  +- *(5) BroadcastHashJoin [ss_sold_date_sk#26], [d_date_sk#36], Inner, BuildRight, false\n                  :     :     :     :- *(5) Filter ((isnotnull(ss_cdemo_sk#7) AND isnotnull(ss_item_sk#5)) AND isnotnull(ss_promo_sk#11))\n                  :     :     :     :  +- *(5) ColumnarToRow\n                  :     :     :     :     +- FileScan parquet spark_catalog.tpcds_100.store_sales[ss_item_sk#5,ss_cdemo_sk#7,ss_promo_sk#11,ss_quantity#13,ss_list_price#15,ss_sales_price#16,ss_coupon_amt#22,ss_sold_date_sk#26] Batched: true, DataFilters: [isnotnull(ss_cdemo_sk#7), isnotnull(ss_item_sk#5), isnotnull(ss_promo_sk#11)], Format: Parquet, Location: InMemoryFileIndex(1823 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/store_..., PartitionFilters: [isnotnull(ss_sold_date_sk#26), dynamicpruningexpression(ss_sold_date_sk#26 IN dynamicpruning#133)], PushedFilters: [IsNotNull(ss_cdemo_sk), IsNotNull(ss_item_sk), IsNotNull(ss_promo_sk)], ReadSchema: struct<ss_item_sk:int,ss_cdemo_sk:int,ss_promo_sk:int,ss_quantity:int,ss_list_price:decimal(7,2),...\n                  :     :     :     :           +- SubqueryBroadcast dynamicpruning#133, 0, [d_date_sk#36], [id=#578]\n                  :     :     :     :              +- AdaptiveSparkPlan isFinalPlan=true\n                                                      +- == Final Plan ==\n                                                         BroadcastQueryStage 1\n                                                         +- ReusedExchange [d_date_sk#36], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=196]\n                                                      +- == Initial Plan ==\n                                                         BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=575]\n                                                         +- Project [d_date_sk#36]\n                                                            +- Filter ((isnotnull(d_year#42) AND (d_year#42 = 1998)) AND isnotnull(d_date_sk#36))\n                                                               +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#36,d_year#42] Batched: true, DataFilters: [isnotnull(d_year#42), (d_year#42 = 1998), isnotnull(d_date_sk#36)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), EqualTo(d_year,1998), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>\n                  :     :     :     +- BroadcastQueryStage 0\n                  :     :     :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=196]\n                  :     :     :           +- *(1) Project [d_date_sk#36]\n                  :     :     :              +- *(1) Filter ((isnotnull(d_year#42) AND (d_year#42 = 1998)) AND isnotnull(d_date_sk#36))\n                  :     :     :                 +- *(1) ColumnarToRow\n                  :     :     :                    +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#36,d_year#42] Batched: true, DataFilters: [isnotnull(d_year#42), (d_year#42 = 1998), isnotnull(d_date_sk#36)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), EqualTo(d_year,1998), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>\n                  :     :     +- BroadcastQueryStage 1\n                  :     :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=217]\n                  :     :           +- *(2) Project [cd_demo_sk#27]\n                  :     :              +- *(2) Filter ((((((isnotnull(cd_gender#28) AND isnotnull(cd_marital_status#29)) AND isnotnull(cd_education_status#30)) AND (cd_gender#28 = F)) AND (cd_marital_status#29 = W)) AND (cd_education_status#30 = Primary)) AND isnotnull(cd_demo_sk#27))\n                  :     :                 +- *(2) ColumnarToRow\n                  :     :                    +- FileScan parquet spark_catalog.tpcds_100.customer_demographics[cd_demo_sk#27,cd_gender#28,cd_marital_status#29,cd_education_status#30] Batched: true, DataFilters: [isnotnull(cd_gender#28), isnotnull(cd_marital_status#29), isnotnull(cd_education_status#30), (cd..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/customer_..., PartitionFilters: [], PushedFilters: [IsNotNull(cd_gender), IsNotNull(cd_marital_status), IsNotNull(cd_education_status), EqualTo(cd_g..., ReadSchema: struct<cd_demo_sk:int,cd_gender:string,cd_marital_status:string,cd_education_status:string>\n                  :     +- BroadcastQueryStage 2\n                  :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=236]\n                  :           +- *(3) Filter isnotnull(i_item_sk#64)\n                  :              +- *(3) ColumnarToRow\n                  :                 +- FileScan parquet spark_catalog.tpcds_100.item[i_item_sk#64,i_item_id#65] Batched: true, DataFilters: [isnotnull(i_item_sk#64)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/item], PartitionFilters: [], PushedFilters: [IsNotNull(i_item_sk)], ReadSchema: struct<i_item_sk:int,i_item_id:string>\n                  +- BroadcastQueryStage 3\n                     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=255]\n                        +- *(4) Project [p_promo_sk#86]\n                           +- *(4) Filter (((p_channel_email#95 = N) OR (p_channel_event#100 = N)) AND isnotnull(p_promo_sk#86))\n                              +- *(4) ColumnarToRow\n                                 +- FileScan parquet spark_catalog.tpcds_100.promotion[p_promo_sk#86,p_channel_email#95,p_channel_event#100] Batched: true, DataFilters: [((p_channel_email#95 = N) OR (p_channel_event#100 = N)), isnotnull(p_promo_sk#86)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/promotion], PartitionFilters: [], PushedFilters: [Or(EqualTo(p_channel_email,N),EqualTo(p_channel_event,N)), IsNotNull(p_promo_sk)], ReadSchema: struct<p_promo_sk:int,p_channel_email:string,p_channel_event:string>\n"
      },
      "IM" : {
        "inputSizeInBytes" : 63716640,
        "inputRowCount" : 663715
      },
      "InitialPartitionNum" : 1,
      "PD" : {
        "0" : [ 112214, 108809, 115217, 103427, 107994, 118115, 100914, 104147, 105377, 112264, 110723, 105290, 106187, 107441, 107084, 109713, 105224, 106719, 104917, 113401, 110641, 107448, 107195, 110691, 103904, 116019, 106639, 109765, 104739, 115638, 100399, 109220, 112468, 115913, 115959, 114690, 117518, 107344, 114166, 101020, 112943, 111995, 108822, 105282, 113803, 110032, 110744, 100977, 105800, 105206, 111849, 104421, 105933, 108578, 111126, 109337, 106398, 109083, 103550, 107095, 116941, 108499, 109481, 111443, 111656, 106563, 105977, 115772, 108585, 110747, 112938, 106498, 107743, 107839, 106694, 108588, 118763, 109929, 120501, 107141, 102758, 104029, 115666, 102715, 108716, 108539, 109440, 110398, 106897, 107789, 111255, 115087, 107081, 102367, 115879, 112411, 112946, 116204, 110954, 101728, 103782, 104180, 109291, 107876, 106690, 106929, 108220, 104380, 107664, 111476, 109454, 112200, 104960, 109027, 106517, 102503, 109809, 110223, 120584, 106578, 109058, 109660, 115607, 110895, 101277, 107173, 112384, 109979, 111725, 112076, 106667, 105615, 108769, 114528, 110731, 107910, 111118, 114889, 119241, 102418, 113967, 115725, 111733, 115087, 105182, 109293, 109595, 109528, 120243, 111855, 107783, 106394, 110521, 106977, 110150, 116708, 104586, 121104, 116479, 108155, 117938, 115625, 117398, 107197, 117009, 111155, 107659, 112343, 97085, 106777, 109140, 111149, 107240, 107525, 114771, 106959, 110064, 105979, 111712, 110627, 114416, 107059, 108126, 106173, 116645, 107552, 115358, 99883, 107095, 105537, 108759, 113484, 112365, 104935, 106849, 105510, 113429, 111475, 112838, 115156 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 5,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 7 ],
      "Objectives" : {
        "DurationInMs" : 966,
        "TotalTasksDurationInMs" : 957,
        "IOBytes" : {
          "Total" : 20884509,
          "Details" : {
            "IR" : 0,
            "IW" : 0,
            "SR" : 20884509,
            "SW" : 0
          }
        }
      }
    },
    "1" : {
      "QSLogical" : {
        "operators" : {
          "0" : {
            "sign" : -205129481,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 329280,
                "rowCount" : 27440
              },
              "compileTime" : {
                "sizeInBytes" : 329280,
                "rowCount" : 27440
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cd_demo_sk#27] "
          },
          "1" : {
            "sign" : -1818072944,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 2606800,
                "rowCount" : 27440
              },
              "compileTime" : {
                "sizeInBytes" : 2606800,
                "rowCount" : 27440
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((((isnotnull(cd_gender#28) AND isnotnull(cd_marital_status#29)) AND isnotnull(cd_education_status#30)) AND (((cd_gender#28 = F) AND (cd_marital_status#29 = W)) AND (cd_education_status#30 = Primary))) AND isnotnull(cd_demo_sk#27)) "
          },
          "2" : {
            "sign" : 1196214447,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 182476000,
                "rowCount" : 1920800
              },
              "compileTime" : {
                "sizeInBytes" : 182476000,
                "rowCount" : 1920800
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [cd_demo_sk#27, cd_gender#28, cd_marital_status#29, cd_education_status#30, cd_purchase_estimate#31, cd_credit_rating#32, cd_dep_count#33, cd_dep_employed_count#34, cd_dep_college_count#35], `spark_catalog`.`tpcds_100`.`customer_demographics`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "LogicalRelation",
          "toId" : 1,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Filter",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [cd_demo_sk#27]\n+- Filter ((((isnotnull(cd_gender#28) AND isnotnull(cd_marital_status#29)) AND isnotnull(cd_education_status#30)) AND (((cd_gender#28 = F) AND (cd_marital_status#29 = W)) AND (cd_education_status#30 = Primary))) AND isnotnull(cd_demo_sk#27))\n   +- Relation spark_catalog.tpcds_100.customer_demographics[cd_demo_sk#27,cd_gender#28,cd_marital_status#29,cd_education_status#30,cd_purchase_estimate#31,cd_credit_rating#32,cd_dep_count#33,cd_dep_employed_count#34,cd_dep_college_count#35] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "0" : {
            "sign" : 1334842099,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 329280,
            "rowCount" : 27440,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [1]: [cd_demo_sk#27] Input [4]: [cd_demo_sk#27, cd_gender#28, cd_marital_status#29, cd_education_status#30] "
          },
          "1" : {
            "sign" : -1153839978,
            "className" : "org.apache.spark.sql.execution.FilterExec",
            "sizeInBytes" : 329280,
            "rowCount" : 27440,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Input [4]: [cd_demo_sk#27, cd_gender#28, cd_marital_status#29, cd_education_status#30] Condition : ((((((isnotnull(cd_gender#28) AND isnotnull(cd_marital_status#29)) AND isnotnull(cd_education_status#30)) AND (cd_gender#28 = F)) AND (cd_marital_status#29 = W)) AND (cd_education_status#30 = Primary)) AND isnotnull(cd_demo_sk#27)) "
          },
          "2" : {
            "sign" : -213488599,
            "className" : "org.apache.spark.sql.execution.FileSourceScanExec",
            "sizeInBytes" : 329280,
            "rowCount" : 27440,
            "isRuntime" : false,
            "predicate" : " (unknown) Scan parquet spark_catalog.tpcds_100.customer_demographics Output [4]: [cd_demo_sk#27, cd_gender#28, cd_marital_status#29, cd_education_status#30] Batched: true Location: InMemoryFileIndex [hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/customer_demographics] PushedFilters: [IsNotNull(cd_gender), IsNotNull(cd_marital_status), IsNotNull(cd_education_status), EqualTo(cd_gender,F), EqualTo(cd_marital_status,W), EqualTo(cd_education_status,Primary), IsNotNull(cd_demo_sk)] ReadSchema: struct<cd_demo_sk:int,cd_gender:string,cd_marital_status:string,cd_education_status:string> "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "Scan parquet spark_catalog.tpcds_100.customer_demographics",
          "toId" : 1,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Filter",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [cd_demo_sk#27]\n+- Filter ((((((isnotnull(cd_gender#28) AND isnotnull(cd_marital_status#29)) AND isnotnull(cd_education_status#30)) AND (cd_gender#28 = F)) AND (cd_marital_status#29 = W)) AND (cd_education_status#30 = Primary)) AND isnotnull(cd_demo_sk#27))\n   +- FileScan parquet spark_catalog.tpcds_100.customer_demographics[cd_demo_sk#27,cd_gender#28,cd_marital_status#29,cd_education_status#30] Batched: true, DataFilters: [isnotnull(cd_gender#28), isnotnull(cd_marital_status#29), isnotnull(cd_education_status#30), (cd..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/customer_..., PartitionFilters: [], PushedFilters: [IsNotNull(cd_gender), IsNotNull(cd_marital_status), IsNotNull(cd_education_status), EqualTo(cd_g..., ReadSchema: struct<cd_demo_sk:int,cd_gender:string,cd_marital_status:string,cd_education_status:string>\n"
      },
      "IM" : {
        "inputSizeInBytes" : 329280,
        "inputRowCount" : 27440
      },
      "InitialPartitionNum" : 0,
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 1,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 3 ],
      "Objectives" : {
        "DurationInMs" : 2040,
        "TotalTasksDurationInMs" : 3259,
        "IOBytes" : {
          "Total" : 7787281,
          "Details" : {
            "IR" : 7787281,
            "IW" : 0,
            "SR" : 0,
            "SW" : 0
          }
        }
      }
    },
    "0" : {
      "QSLogical" : {
        "operators" : {
          "0" : {
            "sign" : -525028844,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 6912,
                "rowCount" : 576
              },
              "compileTime" : {
                "sizeInBytes" : 6912,
                "rowCount" : 576
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#36] "
          },
          "1" : {
            "sign" : -957585321,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 141696,
                "rowCount" : 576
              },
              "compileTime" : {
                "sizeInBytes" : 141696,
                "rowCount" : 576
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(d_year#42) AND (d_year#42 = 1998)) AND isnotnull(d_date_sk#36)) "
          },
          "2" : {
            "sign" : -539619062,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 17970054,
                "rowCount" : 73049
              },
              "compileTime" : {
                "sizeInBytes" : 17970054,
                "rowCount" : 73049
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#36, d_date_id#37, d_date#38, d_month_seq#39, d_week_seq#40, d_quarter_seq#41, d_year#42, d_dow#43, d_moy#44, d_dom#45, d_qoy#46, d_fy_year#47, d_fy_quarter_seq#48, d_fy_week_seq#49, d_day_name#50, d_quarter_name#51, d_holiday#52, d_weekend#53, d_following_holiday#54, d_first_dom#55, d_last_dom#56, d_same_day_ly#57, d_same_day_lq#58, d_current_day#59, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "LogicalRelation",
          "toId" : 1,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Filter",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [d_date_sk#36]\n+- Filter ((isnotnull(d_year#42) AND (d_year#42 = 1998)) AND isnotnull(d_date_sk#36))\n   +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#36,d_date_id#37,d_date#38,d_month_seq#39,d_week_seq#40,d_quarter_seq#41,d_year#42,d_dow#43,d_moy#44,d_dom#45,d_qoy#46,d_fy_year#47,d_fy_quarter_seq#48,d_fy_week_seq#49,d_day_name#50,d_quarter_name#51,d_holiday#52,d_weekend#53,d_following_holiday#54,d_first_dom#55,d_last_dom#56,d_same_day_ly#57,d_same_day_lq#58,d_current_day#59,... 4 more fields] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "0" : {
            "sign" : 413851106,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 6912,
            "rowCount" : 576,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [1]: [d_date_sk#36] Input [2]: [d_date_sk#36, d_year#42] "
          },
          "1" : {
            "sign" : -458494299,
            "className" : "org.apache.spark.sql.execution.FilterExec",
            "sizeInBytes" : 6912,
            "rowCount" : 576,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Input [2]: [d_date_sk#36, d_year#42] Condition : ((isnotnull(d_year#42) AND (d_year#42 = 1998)) AND isnotnull(d_date_sk#36)) "
          },
          "2" : {
            "sign" : 1580890584,
            "className" : "org.apache.spark.sql.execution.FileSourceScanExec",
            "sizeInBytes" : 6912,
            "rowCount" : 576,
            "isRuntime" : false,
            "predicate" : " (unknown) Scan parquet spark_catalog.tpcds_100.date_dim Output [2]: [d_date_sk#36, d_year#42] Batched: true Location: InMemoryFileIndex [hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim] PushedFilters: [IsNotNull(d_year), EqualTo(d_year,1998), IsNotNull(d_date_sk)] ReadSchema: struct<d_date_sk:int,d_year:int> "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "Scan parquet spark_catalog.tpcds_100.date_dim",
          "toId" : 1,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Filter",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [d_date_sk#36]\n+- Filter ((isnotnull(d_year#42) AND (d_year#42 = 1998)) AND isnotnull(d_date_sk#36))\n   +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#36,d_year#42] Batched: true, DataFilters: [isnotnull(d_year#42), (d_year#42 = 1998), isnotnull(d_date_sk#36)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), EqualTo(d_year,1998), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>\n"
      },
      "IM" : {
        "inputSizeInBytes" : 6912,
        "inputRowCount" : 576
      },
      "InitialPartitionNum" : 0,
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 0,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 2 ],
      "Objectives" : {
        "DurationInMs" : 1822,
        "TotalTasksDurationInMs" : 1812,
        "IOBytes" : {
          "Total" : 93562,
          "Details" : {
            "IR" : 93562,
            "IW" : 0,
            "SR" : 0,
            "SW" : 0
          }
        }
      }
    },
    "2" : {
      "QSLogical" : {
        "operators" : {
          "0" : {
            "sign" : 199500188,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 8160000,
                "rowCount" : 204000
              },
              "compileTime" : {
                "sizeInBytes" : 8160000,
                "rowCount" : 204000
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_item_sk#64, i_item_id#65] "
          },
          "1" : {
            "sign" : 1715438015,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 86904000,
                "rowCount" : 204000
              },
              "compileTime" : {
                "sizeInBytes" : 86904000,
                "rowCount" : 204000
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: isnotnull(i_item_sk#64) "
          },
          "2" : {
            "sign" : -489216055,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 86904000,
                "rowCount" : 204000
              },
              "compileTime" : {
                "sizeInBytes" : 86904000,
                "rowCount" : 204000
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [i_item_sk#64, i_item_id#65, i_rec_start_date#66, i_rec_end_date#67, i_item_desc#68, i_current_price#69, i_wholesale_cost#70, i_brand_id#71, i_brand#72, i_class_id#73, i_class#74, i_category_id#75, i_category#76, i_manufact_id#77, i_manufact#78, i_size#79, i_formulation#80, i_color#81, i_units#82, i_container#83, i_manager_id#84, i_product_name#85], `spark_catalog`.`tpcds_100`.`item`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "LogicalRelation",
          "toId" : 1,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Filter",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [i_item_sk#64, i_item_id#65]\n+- Filter isnotnull(i_item_sk#64)\n   +- Relation spark_catalog.tpcds_100.item[i_item_sk#64,i_item_id#65,i_rec_start_date#66,i_rec_end_date#67,i_item_desc#68,i_current_price#69,i_wholesale_cost#70,i_brand_id#71,i_brand#72,i_class_id#73,i_class#74,i_category_id#75,i_category#76,i_manufact_id#77,i_manufact#78,i_size#79,i_formulation#80,i_color#81,i_units#82,i_container#83,i_manager_id#84,i_product_name#85] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "0" : {
            "sign" : 1889537497,
            "className" : "org.apache.spark.sql.execution.FilterExec",
            "sizeInBytes" : 8160000,
            "rowCount" : 204000,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Input [2]: [i_item_sk#64, i_item_id#65] Condition : isnotnull(i_item_sk#64) "
          },
          "1" : {
            "sign" : 1847680911,
            "className" : "org.apache.spark.sql.execution.FileSourceScanExec",
            "sizeInBytes" : 8160000,
            "rowCount" : 204000,
            "isRuntime" : false,
            "predicate" : " (unknown) Scan parquet spark_catalog.tpcds_100.item Output [2]: [i_item_sk#64, i_item_id#65] Batched: true Location: InMemoryFileIndex [hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/item] PushedFilters: [IsNotNull(i_item_sk)] ReadSchema: struct<i_item_sk:int,i_item_id:string> "
          }
        },
        "links" : [ {
          "fromId" : 1,
          "fromName" : "Scan parquet spark_catalog.tpcds_100.item",
          "toId" : 0,
          "toName" : "Filter",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Filter isnotnull(i_item_sk#64)\n+- FileScan parquet spark_catalog.tpcds_100.item[i_item_sk#64,i_item_id#65] Batched: true, DataFilters: [isnotnull(i_item_sk#64)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/item], PartitionFilters: [], PushedFilters: [IsNotNull(i_item_sk)], ReadSchema: struct<i_item_sk:int,i_item_id:string>\n"
      },
      "IM" : {
        "inputSizeInBytes" : 8160000,
        "inputRowCount" : 204000
      },
      "InitialPartitionNum" : 0,
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 2,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 4 ],
      "Objectives" : {
        "DurationInMs" : 8307,
        "TotalTasksDurationInMs" : 13867,
        "IOBytes" : {
          "Total" : 1618808,
          "Details" : {
            "IR" : 1618808,
            "IW" : 0,
            "SR" : 0,
            "SW" : 0
          }
        }
      }
    },
    "3" : {
      "QSLogical" : {
        "operators" : {
          "0" : {
            "sign" : 1227354505,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 12000,
                "rowCount" : 1000
              },
              "compileTime" : {
                "sizeInBytes" : 12000,
                "rowCount" : 1000
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [p_promo_sk#86] "
          },
          "1" : {
            "sign" : 1606523014,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 269000,
                "rowCount" : 1000
              },
              "compileTime" : {
                "sizeInBytes" : 269000,
                "rowCount" : 1000
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((p_channel_email#95 = N) OR (p_channel_event#100 = N)) AND isnotnull(p_promo_sk#86)) "
          },
          "2" : {
            "sign" : -946600356,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 269000,
                "rowCount" : 1000
              },
              "compileTime" : {
                "sizeInBytes" : 269000,
                "rowCount" : 1000
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [p_promo_sk#86, p_promo_id#87, p_start_date_sk#88, p_end_date_sk#89, p_item_sk#90, p_cost#91, p_response_target#92, p_promo_name#93, p_channel_dmail#94, p_channel_email#95, p_channel_catalog#96, p_channel_tv#97, p_channel_radio#98, p_channel_press#99, p_channel_event#100, p_channel_demo#101, p_channel_details#102, p_purpose#103, p_discount_active#104], `spark_catalog`.`tpcds_100`.`promotion`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "LogicalRelation",
          "toId" : 1,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Filter",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [p_promo_sk#86]\n+- Filter (((p_channel_email#95 = N) OR (p_channel_event#100 = N)) AND isnotnull(p_promo_sk#86))\n   +- Relation spark_catalog.tpcds_100.promotion[p_promo_sk#86,p_promo_id#87,p_start_date_sk#88,p_end_date_sk#89,p_item_sk#90,p_cost#91,p_response_target#92,p_promo_name#93,p_channel_dmail#94,p_channel_email#95,p_channel_catalog#96,p_channel_tv#97,p_channel_radio#98,p_channel_press#99,p_channel_event#100,p_channel_demo#101,p_channel_details#102,p_purpose#103,p_discount_active#104] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "0" : {
            "sign" : -1482843371,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 12000,
            "rowCount" : 1000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [1]: [p_promo_sk#86] Input [3]: [p_promo_sk#86, p_channel_email#95, p_channel_event#100] "
          },
          "1" : {
            "sign" : 562583480,
            "className" : "org.apache.spark.sql.execution.FilterExec",
            "sizeInBytes" : 12000,
            "rowCount" : 1000,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Input [3]: [p_promo_sk#86, p_channel_email#95, p_channel_event#100] Condition : (((p_channel_email#95 = N) OR (p_channel_event#100 = N)) AND isnotnull(p_promo_sk#86)) "
          },
          "2" : {
            "sign" : 1363991714,
            "className" : "org.apache.spark.sql.execution.FileSourceScanExec",
            "sizeInBytes" : 12000,
            "rowCount" : 1000,
            "isRuntime" : false,
            "predicate" : " (unknown) Scan parquet spark_catalog.tpcds_100.promotion Output [3]: [p_promo_sk#86, p_channel_email#95, p_channel_event#100] Batched: true Location: InMemoryFileIndex [hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/promotion] PushedFilters: [Or(EqualTo(p_channel_email,N),EqualTo(p_channel_event,N)), IsNotNull(p_promo_sk)] ReadSchema: struct<p_promo_sk:int,p_channel_email:string,p_channel_event:string> "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "Scan parquet spark_catalog.tpcds_100.promotion",
          "toId" : 1,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Filter",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [p_promo_sk#86]\n+- Filter (((p_channel_email#95 = N) OR (p_channel_event#100 = N)) AND isnotnull(p_promo_sk#86))\n   +- FileScan parquet spark_catalog.tpcds_100.promotion[p_promo_sk#86,p_channel_email#95,p_channel_event#100] Batched: true, DataFilters: [((p_channel_email#95 = N) OR (p_channel_event#100 = N)), isnotnull(p_promo_sk#86)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/promotion], PartitionFilters: [], PushedFilters: [Or(EqualTo(p_channel_email,N),EqualTo(p_channel_event,N)), IsNotNull(p_promo_sk)], ReadSchema: struct<p_promo_sk:int,p_channel_email:string,p_channel_event:string>\n"
      },
      "IM" : {
        "inputSizeInBytes" : 12000,
        "inputRowCount" : 1000
      },
      "InitialPartitionNum" : 0,
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 3,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 1 ],
      "Objectives" : {
        "DurationInMs" : 1884,
        "TotalTasksDurationInMs" : 1868,
        "IOBytes" : {
          "Total" : 12477,
          "Details" : {
            "IR" : 12477,
            "IW" : 0,
            "SR" : 0,
            "SW" : 0
          }
        }
      }
    }
  },
  "SQLStartTimeInMs" : 1702226497663,
  "SQLEndTimeInMs" : 1702226517614,
  "Objectives" : {
    "DurationInMs" : 19951,
    "IOBytes" : {
      "Total" : 852549806,
      "Details" : {
        "IR" : 810780788,
        "IW" : 0,
        "SR" : 20884509,
        "SW" : 20884509
      }
    }
  }
}
