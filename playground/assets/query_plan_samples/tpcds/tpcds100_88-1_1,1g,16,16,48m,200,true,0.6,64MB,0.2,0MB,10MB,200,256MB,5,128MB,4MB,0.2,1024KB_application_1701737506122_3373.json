{
  "CompileTimeLQP" : {
    "LQP" : {
      "operators" : {
        "45" : {
          "sign" : 2129362477,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
          "sizeInBytes" : 16,
          "rowCount" : 1,
          "isRuntime" : false,
          "predicate" : " (unknown) Aggregate Arguments: [count(1) AS h9_30_to_10#2L] "
        },
        "98" : {
          "sign" : -847664209,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 316800,
          "rowCount" : 7200,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [hd_demo_sk#307, hd_income_band_sk#308, hd_buy_potential#309, hd_dep_count#310, hd_vehicle_count#311], `spark_catalog`.`tpcds_100`.`household_demographics`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "113" : {
          "sign" : 1920620527,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 259308,
          "rowCount" : 2058,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: (((isnotnull(t_hour#382) AND isnotnull(t_minute#383)) AND ((t_hour#382 = 11) AND (t_minute#383 < 30))) AND isnotnull(t_time_sk#379)) "
        },
        "34" : {
          "sign" : 732582969,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 38130005144,
          "rowCount" : 250855297,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: (isnotnull(ss_hdemo_sk#87) AND (isnotnull(ss_sold_time_sk#83) AND isnotnull(ss_store_sk#89))) "
        },
        "67" : {
          "sign" : -472501024,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 3259567500,
          "rowCount" : 271630625,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [ss_store_sk#223] "
        },
        "120" : {
          "sign" : 968651310,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 192558,
          "rowCount" : 402,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [s_store_sk#389, s_store_id#390, s_rec_start_date#391, s_rec_end_date#392, s_closed_date_sk#393, s_store_name#394, s_number_employees#395, s_floor_space#396, s_hours#397, s_manager#398, s_market_id#399, s_geography_class#400, s_market_desc#401, s_market_manager#402, s_division_id#403, s_division_name#404, s_company_id#405, s_company_name#406, s_street_number#407, s_street_name#408, s_street_type#409, s_suite_number#410, s_city#411, s_county#412, ... 5 more fields], `spark_catalog`.`tpcds_100`.`store`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "153" : {
          "sign" : 17275605,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 20340,
          "rowCount" : 1695,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [hd_demo_sk#508] "
        },
        "93" : {
          "sign" : 751630492,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 24492,
          "rowCount" : 2041,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [t_time_sk#312] "
        },
        "158" : {
          "sign" : -400992482,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 192558,
          "rowCount" : 402,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [s_store_sk#523, s_store_id#524, s_rec_start_date#525, s_rec_end_date#526, s_closed_date_sk#527, s_store_name#528, s_number_employees#529, s_floor_space#530, s_hours#531, s_manager#532, s_market_id#533, s_geography_class#534, s_market_desc#535, s_market_manager#536, s_division_id#537, s_division_name#538, s_company_id#539, s_company_name#540, s_street_number#541, s_street_name#542, s_street_type#543, s_suite_number#544, s_city#545, s_county#546, ... 5 more fields], `spark_catalog`.`tpcds_100`.`store`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "142" : {
          "sign" : 2060196597,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 9245648624,
          "rowCount" : 577853039,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: Inner, (ss_store_sk#491 = s_store_sk#523) "
        },
        "147" : {
          "sign" : -1490527560,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 5017105940,
          "rowCount" : 250855297,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [ss_sold_time_sk#485, ss_hdemo_sk#489, ss_store_sk#491] "
        },
        "12" : {
          "sign" : -603471125,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 4332576176,
          "rowCount" : 270786011,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [ss_hdemo_sk#20, ss_store_sk#22] "
        },
        "66" : {
          "sign" : 311401769,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 9245648624,
          "rowCount" : 577853039,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: Inner, (ss_store_sk#223 = s_store_sk#255) "
        },
        "89" : {
          "sign" : -1766493722,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 6498864264,
          "rowCount" : 270786011,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_time_sk#284 = t_time_sk#312) "
        },
        "51" : {
          "sign" : -1320531871,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 6498864264,
          "rowCount" : 270786011,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_time_sk#150 = t_time_sk#178) "
        },
        "124" : {
          "sign" : -1834589281,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 3259567500,
          "rowCount" : 271630625,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [ss_store_sk#424] "
        },
        "84" : {
          "sign" : -762702851,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 4622824312,
          "rowCount" : 577853039,
          "isRuntime" : false,
          "predicate" : " (unknown) Project "
        },
        "8" : {
          "sign" : 1731141962,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 4622824312,
          "rowCount" : 577853039,
          "isRuntime" : false,
          "predicate" : " (unknown) Project "
        },
        "73" : {
          "sign" : -743044161,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 43776970976,
          "rowCount" : 288006388,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#217, ss_item_sk#218, ss_customer_sk#219, ss_cdemo_sk#220, ss_hdemo_sk#221, ss_addr_sk#222, ss_store_sk#223, ss_promo_sk#224, ss_ticket_number#225L, ss_quantity#226, ss_wholesale_cost#227, ss_list_price#228, ss_sales_price#229, ss_ext_discount_amt#230, ss_ext_sales_price#231, ss_ext_wholesale_cost#232, ss_ext_list_price#233, ss_ext_tax#234, ss_coupon_amt#235, ss_net_paid#236, ss_net_paid_inc_tax#237, ss_net_profit#238, ss_sold_date_sk#239], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "78" : {
          "sign" : -1561196760,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 74580,
          "rowCount" : 1695,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: (((((hd_dep_count#243 = 3) AND (hd_vehicle_count#244 <= 5)) OR ((hd_dep_count#243 = 0) AND (hd_vehicle_count#244 <= 2))) OR ((hd_dep_count#243 = 1) AND (hd_vehicle_count#244 <= 3))) AND isnotnull(hd_demo_sk#240)) "
        },
        "19" : {
          "sign" : 2106910510,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 10886400,
          "rowCount" : 86400,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [t_time_sk#44, t_time_id#45, t_time#46, t_hour#47, t_minute#48, t_second#49, t_am_pm#50, t_shift#51, t_sub_shift#52, t_meal_time#53], `spark_catalog`.`tpcds_100`.`time_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "100" : {
          "sign" : -580681299,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 19639,
          "rowCount" : 41,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: ((isnotnull(s_store_name#327) AND (s_store_name#327 = ese)) AND isnotnull(s_store_sk#322)) "
        },
        "23" : {
          "sign" : -1314060470,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 492,
          "rowCount" : 41,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [s_store_sk#54] "
        },
        "62" : {
          "sign" : -1534787393,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 19639,
          "rowCount" : 41,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: ((isnotnull(s_store_name#193) AND (s_store_name#193 = ese)) AND isnotnull(s_store_sk#188)) "
        },
        "135" : {
          "sign" : -1021916926,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 74580,
          "rowCount" : 1695,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: (((((hd_dep_count#444 = 3) AND (hd_vehicle_count#445 <= 5)) OR ((hd_dep_count#444 = 0) AND (hd_vehicle_count#445 <= 2))) OR ((hd_dep_count#444 = 1) AND (hd_vehicle_count#445 <= 3))) AND isnotnull(hd_demo_sk#441)) "
        },
        "128" : {
          "sign" : -882903969,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 5017105940,
          "rowCount" : 250855297,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [ss_sold_time_sk#418, ss_hdemo_sk#422, ss_store_sk#424] "
        },
        "4" : {
          "sign" : -546953755,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 40,
          "rowCount" : 1,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: Cross "
        },
        "121" : {
          "sign" : -1826003162,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
          "sizeInBytes" : 16,
          "rowCount" : 1,
          "isRuntime" : false,
          "predicate" : " (unknown) Aggregate Arguments: [count(1) AS h11_30_to_12#6L] "
        },
        "88" : {
          "sign" : -728305388,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 4332576176,
          "rowCount" : 270786011,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [ss_hdemo_sk#288, ss_store_sk#290] "
        },
        "77" : {
          "sign" : -2055962703,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 20340,
          "rowCount" : 1695,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [hd_demo_sk#240] "
        },
        "40" : {
          "sign" : 751450422,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 74580,
          "rowCount" : 1695,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: (((((hd_dep_count#109 = 3) AND (hd_vehicle_count#110 <= 5)) OR ((hd_dep_count#109 = 0) AND (hd_vehicle_count#110 <= 2))) OR ((hd_dep_count#109 = 1) AND (hd_vehicle_count#110 <= 3))) AND isnotnull(hd_demo_sk#106)) "
        },
        "110" : {
          "sign" : 831601535,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 38130005144,
          "rowCount" : 250855297,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: (isnotnull(ss_hdemo_sk#355) AND (isnotnull(ss_sold_time_sk#351) AND isnotnull(ss_store_sk#357))) "
        },
        "15" : {
          "sign" : 1156235223,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 38130005144,
          "rowCount" : 250855297,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: (isnotnull(ss_hdemo_sk#20) AND (isnotnull(ss_sold_time_sk#16) AND isnotnull(ss_store_sk#22))) "
        },
        "11" : {
          "sign" : 1041302071,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 5432612500,
          "rowCount" : 271630625,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: Inner, (ss_hdemo_sk#20 = hd_demo_sk#39) "
        },
        "104" : {
          "sign" : -1597901136,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 9245648624,
          "rowCount" : 577853039,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: Inner, (ss_store_sk#357 = s_store_sk#389) "
        },
        "90" : {
          "sign" : -251567094,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 5017105940,
          "rowCount" : 250855297,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [ss_sold_time_sk#284, ss_hdemo_sk#288, ss_store_sk#290] "
        },
        "9" : {
          "sign" : -1574160847,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 9245648624,
          "rowCount" : 577853039,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: Inner, (ss_store_sk#22 = s_store_sk#54) "
        },
        "141" : {
          "sign" : -2000511622,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 4622824312,
          "rowCount" : 577853039,
          "isRuntime" : false,
          "predicate" : " (unknown) Project "
        },
        "139" : {
          "sign" : 462782300,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 192558,
          "rowCount" : 402,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [s_store_sk#456, s_store_id#457, s_rec_start_date#458, s_rec_end_date#459, s_closed_date_sk#460, s_store_name#461, s_number_employees#462, s_floor_space#463, s_hours#464, s_manager#465, s_market_id#466, s_geography_class#467, s_market_desc#468, s_market_manager#469, s_division_id#470, s_division_name#471, s_company_id#472, s_company_name#473, s_street_number#474, s_street_name#475, s_street_type#476, s_suite_number#477, s_city#478, s_county#479, ... 5 more fields], `spark_catalog`.`tpcds_100`.`store`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "132" : {
          "sign" : 191662904,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 257166,
          "rowCount" : 2041,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: (((isnotnull(t_hour#449) AND isnotnull(t_minute#450)) AND ((t_hour#449 = 11) AND (t_minute#450 >= 30))) AND isnotnull(t_time_sk#446)) "
        },
        "44" : {
          "sign" : -747905390,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 192558,
          "rowCount" : 402,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [s_store_sk#121, s_store_id#122, s_rec_start_date#123, s_rec_end_date#124, s_closed_date_sk#125, s_store_name#126, s_number_employees#127, s_floor_space#128, s_hours#129, s_manager#130, s_market_id#131, s_geography_class#132, s_market_desc#133, s_market_manager#134, s_division_id#135, s_division_name#136, s_company_id#137, s_company_name#138, s_street_number#139, s_street_name#140, s_street_type#141, s_suite_number#142, s_city#143, s_county#144, ... 5 more fields], `spark_catalog`.`tpcds_100`.`store`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "33" : {
          "sign" : -710760586,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 5017105940,
          "rowCount" : 250855297,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [ss_sold_time_sk#83, ss_hdemo_sk#87, ss_store_sk#89] "
        },
        "117" : {
          "sign" : 756543865,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 316800,
          "rowCount" : 7200,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [hd_demo_sk#374, hd_income_band_sk#375, hd_buy_potential#376, hd_dep_count#377, hd_vehicle_count#378], `spark_catalog`.`tpcds_100`.`household_demographics`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "22" : {
          "sign" : -752415087,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 316800,
          "rowCount" : 7200,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [hd_demo_sk#39, hd_income_band_sk#40, hd_buy_potential#41, hd_dep_count#42, hd_vehicle_count#43], `spark_catalog`.`tpcds_100`.`household_demographics`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "56" : {
          "sign" : -1614179059,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 235746,
          "rowCount" : 1871,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: (((isnotnull(t_hour#181) AND isnotnull(t_minute#182)) AND ((t_hour#181 = 9) AND (t_minute#182 >= 30))) AND isnotnull(t_time_sk#178)) "
        },
        "55" : {
          "sign" : -1198915004,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 22452,
          "rowCount" : 1871,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [t_time_sk#178] "
        },
        "26" : {
          "sign" : 1133389489,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
          "sizeInBytes" : 16,
          "rowCount" : 1,
          "isRuntime" : false,
          "predicate" : " (unknown) Aggregate Arguments: [count(1) AS h9_to_9_30#1L] "
        },
        "134" : {
          "sign" : -1709428236,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 20340,
          "rowCount" : 1695,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [hd_demo_sk#441] "
        },
        "50" : {
          "sign" : 2032051970,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 4332576176,
          "rowCount" : 270786011,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [ss_hdemo_sk#154, ss_store_sk#156] "
        },
        "123" : {
          "sign" : 2062465216,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 9245648624,
          "rowCount" : 577853039,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: Inner, (ss_store_sk#424 = s_store_sk#456) "
        },
        "37" : {
          "sign" : 929899210,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 237636,
          "rowCount" : 1886,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: (((isnotnull(t_hour#114) AND isnotnull(t_minute#115)) AND ((t_hour#114 = 9) AND (t_minute#115 < 30))) AND isnotnull(t_time_sk#111)) "
        },
        "68" : {
          "sign" : -947528882,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 5432612500,
          "rowCount" : 271630625,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: Inner, (ss_hdemo_sk#221 = hd_demo_sk#240) "
        },
        "61" : {
          "sign" : -1849072184,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 492,
          "rowCount" : 41,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [s_store_sk#188] "
        },
        "107" : {
          "sign" : -1976302130,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 4332576176,
          "rowCount" : 270786011,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [ss_hdemo_sk#355, ss_store_sk#357] "
        },
        "13" : {
          "sign" : 1362900898,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 6498864264,
          "rowCount" : 270786011,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_time_sk#16 = t_time_sk#44) "
        },
        "46" : {
          "sign" : 1523564553,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 4622824312,
          "rowCount" : 577853039,
          "isRuntime" : false,
          "predicate" : " (unknown) Project "
        },
        "99" : {
          "sign" : -748471044,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 492,
          "rowCount" : 41,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [s_store_sk#322] "
        },
        "24" : {
          "sign" : 832786107,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 19639,
          "rowCount" : 41,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: ((isnotnull(s_store_name#59) AND (s_store_name#59 = ese)) AND isnotnull(s_store_sk#54)) "
        },
        "155" : {
          "sign" : -1696961503,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 316800,
          "rowCount" : 7200,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [hd_demo_sk#508, hd_income_band_sk#509, hd_buy_potential#510, hd_dep_count#511, hd_vehicle_count#512], `spark_catalog`.`tpcds_100`.`household_demographics`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "94" : {
          "sign" : 1698839173,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 257166,
          "rowCount" : 2041,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: (((isnotnull(t_hour#315) AND isnotnull(t_minute#316)) AND ((t_hour#315 = 10) AND (t_minute#316 >= 30))) AND isnotnull(t_time_sk#312)) "
        },
        "83" : {
          "sign" : 550724634,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
          "sizeInBytes" : 16,
          "rowCount" : 1,
          "isRuntime" : false,
          "predicate" : " (unknown) Aggregate Arguments: [count(1) AS h10_30_to_11#4L] "
        },
        "35" : {
          "sign" : 478738718,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 43776970976,
          "rowCount" : 288006388,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#83, ss_item_sk#84, ss_customer_sk#85, ss_cdemo_sk#86, ss_hdemo_sk#87, ss_addr_sk#88, ss_store_sk#89, ss_promo_sk#90, ss_ticket_number#91L, ss_quantity#92, ss_wholesale_cost#93, ss_list_price#94, ss_sales_price#95, ss_ext_discount_amt#96, ss_ext_sales_price#97, ss_ext_wholesale_cost#98, ss_ext_list_price#99, ss_ext_tax#100, ss_coupon_amt#101, ss_net_paid#102, ss_net_paid_inc_tax#103, ss_net_profit#104, ss_sold_date_sk#105], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "16" : {
          "sign" : 437822322,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 43776970976,
          "rowCount" : 288006388,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#16, ss_item_sk#17, ss_customer_sk#18, ss_cdemo_sk#19, ss_hdemo_sk#20, ss_addr_sk#21, ss_store_sk#22, ss_promo_sk#23, ss_ticket_number#24L, ss_quantity#25, ss_wholesale_cost#26, ss_list_price#27, ss_sales_price#28, ss_ext_discount_amt#29, ss_ext_sales_price#30, ss_ext_wholesale_cost#31, ss_ext_list_price#32, ss_ext_tax#33, ss_coupon_amt#34, ss_net_paid#35, ss_net_paid_inc_tax#36, ss_net_profit#37, ss_sold_date_sk#38], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "79" : {
          "sign" : 1495984219,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 316800,
          "rowCount" : 7200,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [hd_demo_sk#240, hd_income_band_sk#241, hd_buy_potential#242, hd_dep_count#243, hd_vehicle_count#244], `spark_catalog`.`tpcds_100`.`household_demographics`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "152" : {
          "sign" : 1118614683,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 10886400,
          "rowCount" : 86400,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [t_time_sk#513, t_time_id#514, t_time#515, t_hour#516, t_minute#517, t_second#518, t_am_pm#519, t_shift#520, t_sub_shift#521, t_meal_time#522], `spark_catalog`.`tpcds_100`.`time_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "5" : {
          "sign" : -666524319,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 32,
          "rowCount" : 1,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: Cross "
        },
        "103" : {
          "sign" : -586438373,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 4622824312,
          "rowCount" : 577853039,
          "isRuntime" : false,
          "predicate" : " (unknown) Project "
        },
        "112" : {
          "sign" : 823559443,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 24696,
          "rowCount" : 2058,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [t_time_sk#379] "
        },
        "72" : {
          "sign" : -727863965,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 38130005144,
          "rowCount" : 250855297,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: (isnotnull(ss_hdemo_sk#221) AND (isnotnull(ss_sold_time_sk#217) AND isnotnull(ss_store_sk#223))) "
        },
        "10" : {
          "sign" : -729326354,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 3259567500,
          "rowCount" : 271630625,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [ss_store_sk#22] "
        },
        "59" : {
          "sign" : -847848374,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 74580,
          "rowCount" : 1695,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: (((((hd_dep_count#176 = 3) AND (hd_vehicle_count#177 <= 5)) OR ((hd_dep_count#176 = 0) AND (hd_vehicle_count#177 <= 2))) OR ((hd_dep_count#176 = 1) AND (hd_vehicle_count#177 <= 3))) AND isnotnull(hd_demo_sk#173)) "
        },
        "144" : {
          "sign" : 837055716,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 5432612500,
          "rowCount" : 271630625,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: Inner, (ss_hdemo_sk#489 = hd_demo_sk#508) "
        },
        "87" : {
          "sign" : 1226718666,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 5432612500,
          "rowCount" : 271630625,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: Inner, (ss_hdemo_sk#288 = hd_demo_sk#307) "
        },
        "48" : {
          "sign" : -1946115459,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 3259567500,
          "rowCount" : 271630625,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [ss_store_sk#156] "
        },
        "21" : {
          "sign" : -1206547140,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 74580,
          "rowCount" : 1695,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: (((((hd_dep_count#42 = 3) AND (hd_vehicle_count#43 <= 5)) OR ((hd_dep_count#42 = 0) AND (hd_vehicle_count#43 <= 2))) OR ((hd_dep_count#42 = 1) AND (hd_vehicle_count#43 <= 3))) AND isnotnull(hd_demo_sk#39)) "
        },
        "116" : {
          "sign" : -308568540,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 74580,
          "rowCount" : 1695,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: (((((hd_dep_count#377 = 3) AND (hd_vehicle_count#378 <= 5)) OR ((hd_dep_count#377 = 0) AND (hd_vehicle_count#378 <= 2))) OR ((hd_dep_count#377 = 1) AND (hd_vehicle_count#378 <= 3))) AND isnotnull(hd_demo_sk#374)) "
        },
        "76" : {
          "sign" : 430264173,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 10886400,
          "rowCount" : 86400,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [t_time_sk#245, t_time_id#246, t_time#247, t_hour#248, t_minute#249, t_second#250, t_am_pm#251, t_shift#252, t_sub_shift#253, t_meal_time#254], `spark_catalog`.`tpcds_100`.`time_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "138" : {
          "sign" : 929249007,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 19639,
          "rowCount" : 41,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: ((isnotnull(s_store_name#461) AND (s_store_name#461 = ese)) AND isnotnull(s_store_sk#456)) "
        },
        "54" : {
          "sign" : -1459100101,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 43776970976,
          "rowCount" : 288006388,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#150, ss_item_sk#151, ss_customer_sk#152, ss_cdemo_sk#153, ss_hdemo_sk#154, ss_addr_sk#155, ss_store_sk#156, ss_promo_sk#157, ss_ticket_number#158L, ss_quantity#159, ss_wholesale_cost#160, ss_list_price#161, ss_sales_price#162, ss_ext_discount_amt#163, ss_ext_sales_price#164, ss_ext_wholesale_cost#165, ss_ext_list_price#166, ss_ext_tax#167, ss_coupon_amt#168, ss_net_paid#169, ss_net_paid_inc_tax#170, ss_net_profit#171, ss_sold_date_sk#172], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "43" : {
          "sign" : -766396310,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 19639,
          "rowCount" : 41,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: ((isnotnull(s_store_name#126) AND (s_store_name#126 = ese)) AND isnotnull(s_store_sk#121)) "
        },
        "148" : {
          "sign" : -1543899468,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 38130005144,
          "rowCount" : 250855297,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: (isnotnull(ss_hdemo_sk#489) AND (isnotnull(ss_sold_time_sk#485) AND isnotnull(ss_store_sk#491))) "
        },
        "127" : {
          "sign" : 642867295,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 6498864264,
          "rowCount" : 270786011,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_time_sk#418 = t_time_sk#446) "
        },
        "65" : {
          "sign" : -561984746,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 4622824312,
          "rowCount" : 577853039,
          "isRuntime" : false,
          "predicate" : " (unknown) Project "
        },
        "71" : {
          "sign" : -132492643,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 5017105940,
          "rowCount" : 250855297,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [ss_sold_time_sk#217, ss_hdemo_sk#221, ss_store_sk#223] "
        },
        "57" : {
          "sign" : -830276846,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 10886400,
          "rowCount" : 86400,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [t_time_sk#178, t_time_id#179, t_time#180, t_hour#181, t_minute#182, t_second#183, t_am_pm#184, t_shift#185, t_sub_shift#186, t_meal_time#187], `spark_catalog`.`tpcds_100`.`time_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "108" : {
          "sign" : -78813545,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 6498864264,
          "rowCount" : 270786011,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_time_sk#351 = t_time_sk#379) "
        },
        "32" : {
          "sign" : -804032286,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 6498864264,
          "rowCount" : 270786011,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_time_sk#83 = t_time_sk#111) "
        },
        "80" : {
          "sign" : 1592081336,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 492,
          "rowCount" : 41,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [s_store_sk#255] "
        },
        "106" : {
          "sign" : 1640046491,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 5432612500,
          "rowCount" : 271630625,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: Inner, (ss_hdemo_sk#355 = hd_demo_sk#374) "
        },
        "137" : {
          "sign" : 754672420,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 492,
          "rowCount" : 41,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [s_store_sk#456] "
        },
        "82" : {
          "sign" : -617948714,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 192558,
          "rowCount" : 402,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [s_store_sk#255, s_store_id#256, s_rec_start_date#257, s_rec_end_date#258, s_closed_date_sk#259, s_store_name#260, s_number_employees#261, s_floor_space#262, s_hours#263, s_manager#264, s_market_id#265, s_geography_class#266, s_market_desc#267, s_market_manager#268, s_division_id#269, s_division_name#270, s_company_id#271, s_company_name#272, s_street_number#273, s_street_name#274, s_street_type#275, s_suite_number#276, s_city#277, s_county#278, ... 5 more fields], `spark_catalog`.`tpcds_100`.`store`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "49" : {
          "sign" : 1299703176,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 5432612500,
          "rowCount" : 271630625,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: Inner, (ss_hdemo_sk#154 = hd_demo_sk#173) "
        },
        "6" : {
          "sign" : 1054692239,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 24,
          "rowCount" : 1,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: Cross "
        },
        "126" : {
          "sign" : 545108954,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 4332576176,
          "rowCount" : 270786011,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [ss_hdemo_sk#422, ss_store_sk#424] "
        },
        "36" : {
          "sign" : 1527546220,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 22632,
          "rowCount" : 1886,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [t_time_sk#111] "
        },
        "1" : {
          "sign" : 496474836,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 64,
          "rowCount" : 1,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: Cross "
        },
        "39" : {
          "sign" : 1257299076,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 20340,
          "rowCount" : 1695,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [hd_demo_sk#106] "
        },
        "140" : {
          "sign" : 2138143523,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
          "sizeInBytes" : 16,
          "rowCount" : 1,
          "isRuntime" : false,
          "predicate" : " (unknown) Aggregate Arguments: [count(1) AS h12_to_12_30#7L] "
        },
        "17" : {
          "sign" : 1788005933,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 24492,
          "rowCount" : 2041,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [t_time_sk#44] "
        },
        "25" : {
          "sign" : -1663611938,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 192558,
          "rowCount" : 402,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [s_store_sk#54, s_store_id#55, s_rec_start_date#56, s_rec_end_date#57, s_closed_date_sk#58, s_store_name#59, s_number_employees#60, s_floor_space#61, s_hours#62, s_manager#63, s_market_id#64, s_geography_class#65, s_market_desc#66, s_market_manager#67, s_division_id#68, s_division_name#69, s_company_id#70, s_company_name#71, s_street_number#72, s_street_name#73, s_street_type#74, s_suite_number#75, s_city#76, s_county#77, ... 5 more fields], `spark_catalog`.`tpcds_100`.`store`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "60" : {
          "sign" : 1442894620,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 316800,
          "rowCount" : 7200,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [hd_demo_sk#173, hd_income_band_sk#174, hd_buy_potential#175, hd_dep_count#176, hd_vehicle_count#177], `spark_catalog`.`tpcds_100`.`household_demographics`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "14" : {
          "sign" : 450172376,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 5017105940,
          "rowCount" : 250855297,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [ss_sold_time_sk#16, ss_hdemo_sk#20, ss_store_sk#22] "
        },
        "133" : {
          "sign" : 633930890,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 10886400,
          "rowCount" : 86400,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [t_time_sk#446, t_time_id#447, t_time#448, t_hour#449, t_minute#450, t_second#451, t_am_pm#452, t_shift#453, t_sub_shift#454, t_meal_time#455], `spark_catalog`.`tpcds_100`.`time_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "47" : {
          "sign" : -1173655148,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 9245648624,
          "rowCount" : 577853039,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: Inner, (ss_store_sk#156 = s_store_sk#188) "
        },
        "122" : {
          "sign" : 1249321099,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 4622824312,
          "rowCount" : 577853039,
          "isRuntime" : false,
          "predicate" : " (unknown) Project "
        },
        "111" : {
          "sign" : -120942492,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 43776970976,
          "rowCount" : 288006388,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#351, ss_item_sk#352, ss_customer_sk#353, ss_cdemo_sk#354, ss_hdemo_sk#355, ss_addr_sk#356, ss_store_sk#357, ss_promo_sk#358, ss_ticket_number#359L, ss_quantity#360, ss_wholesale_cost#361, ss_list_price#362, ss_sales_price#363, ss_ext_discount_amt#364, ss_ext_sales_price#365, ss_ext_wholesale_cost#366, ss_ext_list_price#367, ss_ext_tax#368, ss_coupon_amt#369, ss_net_paid#370, ss_net_paid_inc_tax#371, ss_net_profit#372, ss_sold_date_sk#373], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "102" : {
          "sign" : -368686434,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
          "sizeInBytes" : 16,
          "rowCount" : 1,
          "isRuntime" : false,
          "predicate" : " (unknown) Aggregate Arguments: [count(1) AS h11_to_11_30#5L] "
        },
        "31" : {
          "sign" : -1237606173,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 4332576176,
          "rowCount" : 270786011,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [ss_hdemo_sk#87, ss_store_sk#89] "
        },
        "96" : {
          "sign" : -166312323,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 20340,
          "rowCount" : 1695,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [hd_demo_sk#307] "
        },
        "69" : {
          "sign" : -1195645343,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 4332576176,
          "rowCount" : 270786011,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [ss_hdemo_sk#221, ss_store_sk#223] "
        },
        "151" : {
          "sign" : 73680528,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 237636,
          "rowCount" : 1886,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: (((isnotnull(t_hour#516) AND isnotnull(t_minute#517)) AND ((t_hour#516 = 12) AND (t_minute#517 < 30))) AND isnotnull(t_time_sk#513)) "
        },
        "95" : {
          "sign" : -1658698508,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 10886400,
          "rowCount" : 86400,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [t_time_sk#312, t_time_id#313, t_time#314, t_hour#315, t_minute#316, t_second#317, t_am_pm#318, t_shift#319, t_sub_shift#320, t_meal_time#321], `spark_catalog`.`tpcds_100`.`time_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "58" : {
          "sign" : 562132496,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 20340,
          "rowCount" : 1695,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [hd_demo_sk#173] "
        },
        "145" : {
          "sign" : 1575779496,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 4332576176,
          "rowCount" : 270786011,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [ss_hdemo_sk#489, ss_store_sk#491] "
        },
        "64" : {
          "sign" : -1670119593,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
          "sizeInBytes" : 16,
          "rowCount" : 1,
          "isRuntime" : false,
          "predicate" : " (unknown) Aggregate Arguments: [count(1) AS h10_to_10_30#3L] "
        },
        "53" : {
          "sign" : -160362253,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 38130005144,
          "rowCount" : 250855297,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: (isnotnull(ss_hdemo_sk#154) AND (isnotnull(ss_sold_time_sk#150) AND isnotnull(ss_store_sk#156))) "
        },
        "42" : {
          "sign" : 496105808,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 492,
          "rowCount" : 41,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [s_store_sk#121] "
        },
        "75" : {
          "sign" : -196070460,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 259308,
          "rowCount" : 2058,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: (((isnotnull(t_hour#248) AND isnotnull(t_minute#249)) AND ((t_hour#248 = 10) AND (t_minute#249 < 30))) AND isnotnull(t_time_sk#245)) "
        },
        "115" : {
          "sign" : 908666963,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 20340,
          "rowCount" : 1695,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [hd_demo_sk#374] "
        },
        "156" : {
          "sign" : 1301706152,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 492,
          "rowCount" : 41,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [s_store_sk#523] "
        },
        "109" : {
          "sign" : 1722543892,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 5017105940,
          "rowCount" : 250855297,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [ss_sold_time_sk#351, ss_hdemo_sk#355, ss_store_sk#357] "
        },
        "0" : {
          "sign" : 2034329516,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 72,
          "rowCount" : 1,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: Cross "
        },
        "149" : {
          "sign" : -2113634388,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 43776970976,
          "rowCount" : 288006388,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#485, ss_item_sk#486, ss_customer_sk#487, ss_cdemo_sk#488, ss_hdemo_sk#489, ss_addr_sk#490, ss_store_sk#491, ss_promo_sk#492, ss_ticket_number#493L, ss_quantity#494, ss_wholesale_cost#495, ss_list_price#496, ss_sales_price#497, ss_ext_discount_amt#498, ss_ext_sales_price#499, ss_ext_wholesale_cost#500, ss_ext_list_price#501, ss_ext_tax#502, ss_coupon_amt#503, ss_net_paid#504, ss_net_paid_inc_tax#505, ss_net_profit#506, ss_sold_date_sk#507], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "20" : {
          "sign" : 963373237,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 20340,
          "rowCount" : 1695,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [hd_demo_sk#39] "
        },
        "27" : {
          "sign" : 1257052496,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 4622824312,
          "rowCount" : 577853039,
          "isRuntime" : false,
          "predicate" : " (unknown) Project "
        },
        "70" : {
          "sign" : -37805016,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 6498864264,
          "rowCount" : 270786011,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_time_sk#217 = t_time_sk#245) "
        },
        "2" : {
          "sign" : -853845715,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 56,
          "rowCount" : 1,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: Cross "
        },
        "86" : {
          "sign" : -1216681968,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 3259567500,
          "rowCount" : 271630625,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [ss_store_sk#290] "
        },
        "38" : {
          "sign" : 307202893,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 10886400,
          "rowCount" : 86400,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [t_time_sk#111, t_time_id#112, t_time#113, t_hour#114, t_minute#115, t_second#116, t_am_pm#117, t_shift#118, t_sub_shift#119, t_meal_time#120], `spark_catalog`.`tpcds_100`.`time_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "81" : {
          "sign" : 336366060,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 19639,
          "rowCount" : 41,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: ((isnotnull(s_store_name#260) AND (s_store_name#260 = ese)) AND isnotnull(s_store_sk#255)) "
        },
        "118" : {
          "sign" : -447371372,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 492,
          "rowCount" : 41,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [s_store_sk#389] "
        },
        "92" : {
          "sign" : -859309192,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 43776970976,
          "rowCount" : 288006388,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#284, ss_item_sk#285, ss_customer_sk#286, ss_cdemo_sk#287, ss_hdemo_sk#288, ss_addr_sk#289, ss_store_sk#290, ss_promo_sk#291, ss_ticket_number#292L, ss_quantity#293, ss_wholesale_cost#294, ss_list_price#295, ss_sales_price#296, ss_ext_discount_amt#297, ss_ext_sales_price#298, ss_ext_wholesale_cost#299, ss_ext_list_price#300, ss_ext_tax#301, ss_coupon_amt#302, ss_net_paid#303, ss_net_paid_inc_tax#304, ss_net_profit#305, ss_sold_date_sk#306], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "125" : {
          "sign" : -1373061940,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 5432612500,
          "rowCount" : 271630625,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: Inner, (ss_hdemo_sk#422 = hd_demo_sk#441) "
        },
        "18" : {
          "sign" : -1389937556,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 257166,
          "rowCount" : 2041,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: (((isnotnull(t_hour#47) AND isnotnull(t_minute#48)) AND ((t_hour#47 = 8) AND (t_minute#48 >= 30))) AND isnotnull(t_time_sk#44)) "
        },
        "101" : {
          "sign" : -74342312,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 192558,
          "rowCount" : 402,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [s_store_sk#322, s_store_id#323, s_rec_start_date#324, s_rec_end_date#325, s_closed_date_sk#326, s_store_name#327, s_number_employees#328, s_floor_space#329, s_hours#330, s_manager#331, s_market_id#332, s_geography_class#333, s_market_desc#334, s_market_manager#335, s_division_id#336, s_division_name#337, s_company_id#338, s_company_name#339, s_street_number#340, s_street_name#341, s_street_type#342, s_suite_number#343, s_city#344, s_county#345, ... 5 more fields], `spark_catalog`.`tpcds_100`.`store`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "154" : {
          "sign" : -1346686529,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 74580,
          "rowCount" : 1695,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: (((((hd_dep_count#511 = 3) AND (hd_vehicle_count#512 <= 5)) OR ((hd_dep_count#511 = 0) AND (hd_vehicle_count#512 <= 2))) OR ((hd_dep_count#511 = 1) AND (hd_vehicle_count#512 <= 3))) AND isnotnull(hd_demo_sk#508)) "
        },
        "30" : {
          "sign" : 1028273614,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 5432612500,
          "rowCount" : 271630625,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: Inner, (ss_hdemo_sk#87 = hd_demo_sk#106) "
        },
        "7" : {
          "sign" : -900299441,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
          "sizeInBytes" : 16,
          "rowCount" : 1,
          "isRuntime" : false,
          "predicate" : " (unknown) Aggregate Arguments: [count(1) AS h8_30_to_9#0L] "
        },
        "143" : {
          "sign" : 1520846593,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 3259567500,
          "rowCount" : 271630625,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [ss_store_sk#491] "
        },
        "97" : {
          "sign" : -1723019824,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 74580,
          "rowCount" : 1695,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: (((((hd_dep_count#310 = 3) AND (hd_vehicle_count#311 <= 5)) OR ((hd_dep_count#310 = 0) AND (hd_vehicle_count#311 <= 2))) OR ((hd_dep_count#310 = 1) AND (hd_vehicle_count#311 <= 3))) AND isnotnull(hd_demo_sk#307)) "
        },
        "130" : {
          "sign" : -1508820217,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 43776970976,
          "rowCount" : 288006388,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#418, ss_item_sk#419, ss_customer_sk#420, ss_cdemo_sk#421, ss_hdemo_sk#422, ss_addr_sk#423, ss_store_sk#424, ss_promo_sk#425, ss_ticket_number#426L, ss_quantity#427, ss_wholesale_cost#428, ss_list_price#429, ss_sales_price#430, ss_ext_discount_amt#431, ss_ext_sales_price#432, ss_ext_wholesale_cost#433, ss_ext_list_price#434, ss_ext_tax#435, ss_coupon_amt#436, ss_net_paid#437, ss_net_paid_inc_tax#438, ss_net_profit#439, ss_sold_date_sk#440], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "114" : {
          "sign" : -588800583,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 10886400,
          "rowCount" : 86400,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [t_time_sk#379, t_time_id#380, t_time#381, t_hour#382, t_minute#383, t_second#384, t_am_pm#385, t_shift#386, t_sub_shift#387, t_meal_time#388], `spark_catalog`.`tpcds_100`.`time_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "129" : {
          "sign" : -1839833842,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 38130005144,
          "rowCount" : 250855297,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: (isnotnull(ss_hdemo_sk#422) AND (isnotnull(ss_sold_time_sk#418) AND isnotnull(ss_store_sk#424))) "
        },
        "29" : {
          "sign" : 1410011032,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 3259567500,
          "rowCount" : 271630625,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [ss_store_sk#89] "
        },
        "41" : {
          "sign" : -898805753,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 316800,
          "rowCount" : 7200,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [hd_demo_sk#106, hd_income_band_sk#107, hd_buy_potential#108, hd_dep_count#109, hd_vehicle_count#110], `spark_catalog`.`tpcds_100`.`household_demographics`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "105" : {
          "sign" : -1270560041,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 3259567500,
          "rowCount" : 271630625,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [ss_store_sk#357] "
        },
        "63" : {
          "sign" : 1943777864,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 192558,
          "rowCount" : 402,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [s_store_sk#188, s_store_id#189, s_rec_start_date#190, s_rec_end_date#191, s_closed_date_sk#192, s_store_name#193, s_number_employees#194, s_floor_space#195, s_hours#196, s_manager#197, s_market_id#198, s_geography_class#199, s_market_desc#200, s_market_manager#201, s_division_id#202, s_division_name#203, s_company_id#204, s_company_name#205, s_street_number#206, s_street_name#207, s_street_type#208, s_suite_number#209, s_city#210, s_county#211, ... 5 more fields], `spark_catalog`.`tpcds_100`.`store`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "150" : {
          "sign" : 1738994456,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 22632,
          "rowCount" : 1886,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [t_time_sk#513] "
        },
        "3" : {
          "sign" : 1968855154,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 48,
          "rowCount" : 1,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: Cross "
        },
        "74" : {
          "sign" : 1346632804,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 24696,
          "rowCount" : 2058,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [t_time_sk#245] "
        },
        "91" : {
          "sign" : 56619549,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 38130005144,
          "rowCount" : 250855297,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: (isnotnull(ss_hdemo_sk#288) AND (isnotnull(ss_sold_time_sk#284) AND isnotnull(ss_store_sk#290))) "
        },
        "52" : {
          "sign" : 369021553,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 5017105940,
          "rowCount" : 250855297,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [ss_sold_time_sk#150, ss_hdemo_sk#154, ss_store_sk#156] "
        },
        "85" : {
          "sign" : -2085474222,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 9245648624,
          "rowCount" : 577853039,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: Inner, (ss_store_sk#290 = s_store_sk#322) "
        },
        "131" : {
          "sign" : 641923475,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 24492,
          "rowCount" : 2041,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [t_time_sk#446] "
        },
        "28" : {
          "sign" : -1615796867,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 9245648624,
          "rowCount" : 577853039,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: Inner, (ss_store_sk#89 = s_store_sk#121) "
        },
        "119" : {
          "sign" : 1297205282,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 19639,
          "rowCount" : 41,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: ((isnotnull(s_store_name#394) AND (s_store_name#394 = ese)) AND isnotnull(s_store_sk#389)) "
        },
        "136" : {
          "sign" : 809633464,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 316800,
          "rowCount" : 7200,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [hd_demo_sk#441, hd_income_band_sk#442, hd_buy_potential#443, hd_dep_count#444, hd_vehicle_count#445], `spark_catalog`.`tpcds_100`.`household_demographics`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "157" : {
          "sign" : -1395179536,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 19639,
          "rowCount" : 41,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: ((isnotnull(s_store_name#528) AND (s_store_name#528 = ese)) AND isnotnull(s_store_sk#523)) "
        },
        "146" : {
          "sign" : 1892019448,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 6498864264,
          "rowCount" : 270786011,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_time_sk#485 = t_time_sk#513) "
        }
      },
      "links" : [ {
        "fromId" : 16,
        "fromName" : "LogicalRelation",
        "toId" : 15,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 15,
        "fromName" : "Filter",
        "toId" : 14,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 14,
        "fromName" : "Project",
        "toId" : 13,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 19,
        "fromName" : "LogicalRelation",
        "toId" : 18,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 18,
        "fromName" : "Filter",
        "toId" : 17,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 17,
        "fromName" : "Project",
        "toId" : 13,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 13,
        "fromName" : "Join",
        "toId" : 12,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 12,
        "fromName" : "Project",
        "toId" : 11,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 22,
        "fromName" : "LogicalRelation",
        "toId" : 21,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 21,
        "fromName" : "Filter",
        "toId" : 20,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 20,
        "fromName" : "Project",
        "toId" : 11,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 11,
        "fromName" : "Join",
        "toId" : 10,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 10,
        "fromName" : "Project",
        "toId" : 9,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 25,
        "fromName" : "LogicalRelation",
        "toId" : 24,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 24,
        "fromName" : "Filter",
        "toId" : 23,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 23,
        "fromName" : "Project",
        "toId" : 9,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 9,
        "fromName" : "Join",
        "toId" : 8,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 8,
        "fromName" : "Project",
        "toId" : 7,
        "toName" : "Aggregate",
        "linkType" : "Operator"
      }, {
        "fromId" : 7,
        "fromName" : "Aggregate",
        "toId" : 6,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 35,
        "fromName" : "LogicalRelation",
        "toId" : 34,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 34,
        "fromName" : "Filter",
        "toId" : 33,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 33,
        "fromName" : "Project",
        "toId" : 32,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 38,
        "fromName" : "LogicalRelation",
        "toId" : 37,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 37,
        "fromName" : "Filter",
        "toId" : 36,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 36,
        "fromName" : "Project",
        "toId" : 32,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 32,
        "fromName" : "Join",
        "toId" : 31,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 31,
        "fromName" : "Project",
        "toId" : 30,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 41,
        "fromName" : "LogicalRelation",
        "toId" : 40,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 40,
        "fromName" : "Filter",
        "toId" : 39,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 39,
        "fromName" : "Project",
        "toId" : 30,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 30,
        "fromName" : "Join",
        "toId" : 29,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 29,
        "fromName" : "Project",
        "toId" : 28,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 44,
        "fromName" : "LogicalRelation",
        "toId" : 43,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 43,
        "fromName" : "Filter",
        "toId" : 42,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 42,
        "fromName" : "Project",
        "toId" : 28,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 28,
        "fromName" : "Join",
        "toId" : 27,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 27,
        "fromName" : "Project",
        "toId" : 26,
        "toName" : "Aggregate",
        "linkType" : "Operator"
      }, {
        "fromId" : 26,
        "fromName" : "Aggregate",
        "toId" : 6,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 6,
        "fromName" : "Join",
        "toId" : 5,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 54,
        "fromName" : "LogicalRelation",
        "toId" : 53,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 53,
        "fromName" : "Filter",
        "toId" : 52,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 52,
        "fromName" : "Project",
        "toId" : 51,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 57,
        "fromName" : "LogicalRelation",
        "toId" : 56,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 56,
        "fromName" : "Filter",
        "toId" : 55,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 55,
        "fromName" : "Project",
        "toId" : 51,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 51,
        "fromName" : "Join",
        "toId" : 50,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 50,
        "fromName" : "Project",
        "toId" : 49,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 60,
        "fromName" : "LogicalRelation",
        "toId" : 59,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 59,
        "fromName" : "Filter",
        "toId" : 58,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 58,
        "fromName" : "Project",
        "toId" : 49,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 49,
        "fromName" : "Join",
        "toId" : 48,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 48,
        "fromName" : "Project",
        "toId" : 47,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 63,
        "fromName" : "LogicalRelation",
        "toId" : 62,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 62,
        "fromName" : "Filter",
        "toId" : 61,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 61,
        "fromName" : "Project",
        "toId" : 47,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 47,
        "fromName" : "Join",
        "toId" : 46,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 46,
        "fromName" : "Project",
        "toId" : 45,
        "toName" : "Aggregate",
        "linkType" : "Operator"
      }, {
        "fromId" : 45,
        "fromName" : "Aggregate",
        "toId" : 5,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 5,
        "fromName" : "Join",
        "toId" : 4,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 73,
        "fromName" : "LogicalRelation",
        "toId" : 72,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 72,
        "fromName" : "Filter",
        "toId" : 71,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 71,
        "fromName" : "Project",
        "toId" : 70,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 76,
        "fromName" : "LogicalRelation",
        "toId" : 75,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 75,
        "fromName" : "Filter",
        "toId" : 74,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 74,
        "fromName" : "Project",
        "toId" : 70,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 70,
        "fromName" : "Join",
        "toId" : 69,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 69,
        "fromName" : "Project",
        "toId" : 68,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 79,
        "fromName" : "LogicalRelation",
        "toId" : 78,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 78,
        "fromName" : "Filter",
        "toId" : 77,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 77,
        "fromName" : "Project",
        "toId" : 68,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 68,
        "fromName" : "Join",
        "toId" : 67,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 67,
        "fromName" : "Project",
        "toId" : 66,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 82,
        "fromName" : "LogicalRelation",
        "toId" : 81,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 81,
        "fromName" : "Filter",
        "toId" : 80,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 80,
        "fromName" : "Project",
        "toId" : 66,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 66,
        "fromName" : "Join",
        "toId" : 65,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 65,
        "fromName" : "Project",
        "toId" : 64,
        "toName" : "Aggregate",
        "linkType" : "Operator"
      }, {
        "fromId" : 64,
        "fromName" : "Aggregate",
        "toId" : 4,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 4,
        "fromName" : "Join",
        "toId" : 3,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 92,
        "fromName" : "LogicalRelation",
        "toId" : 91,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 91,
        "fromName" : "Filter",
        "toId" : 90,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 90,
        "fromName" : "Project",
        "toId" : 89,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 95,
        "fromName" : "LogicalRelation",
        "toId" : 94,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 94,
        "fromName" : "Filter",
        "toId" : 93,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 93,
        "fromName" : "Project",
        "toId" : 89,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 89,
        "fromName" : "Join",
        "toId" : 88,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 88,
        "fromName" : "Project",
        "toId" : 87,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 98,
        "fromName" : "LogicalRelation",
        "toId" : 97,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 97,
        "fromName" : "Filter",
        "toId" : 96,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 96,
        "fromName" : "Project",
        "toId" : 87,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 87,
        "fromName" : "Join",
        "toId" : 86,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 86,
        "fromName" : "Project",
        "toId" : 85,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 101,
        "fromName" : "LogicalRelation",
        "toId" : 100,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 100,
        "fromName" : "Filter",
        "toId" : 99,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 99,
        "fromName" : "Project",
        "toId" : 85,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 85,
        "fromName" : "Join",
        "toId" : 84,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 84,
        "fromName" : "Project",
        "toId" : 83,
        "toName" : "Aggregate",
        "linkType" : "Operator"
      }, {
        "fromId" : 83,
        "fromName" : "Aggregate",
        "toId" : 3,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 3,
        "fromName" : "Join",
        "toId" : 2,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 111,
        "fromName" : "LogicalRelation",
        "toId" : 110,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 110,
        "fromName" : "Filter",
        "toId" : 109,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 109,
        "fromName" : "Project",
        "toId" : 108,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 114,
        "fromName" : "LogicalRelation",
        "toId" : 113,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 113,
        "fromName" : "Filter",
        "toId" : 112,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 112,
        "fromName" : "Project",
        "toId" : 108,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 108,
        "fromName" : "Join",
        "toId" : 107,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 107,
        "fromName" : "Project",
        "toId" : 106,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 117,
        "fromName" : "LogicalRelation",
        "toId" : 116,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 116,
        "fromName" : "Filter",
        "toId" : 115,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 115,
        "fromName" : "Project",
        "toId" : 106,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 106,
        "fromName" : "Join",
        "toId" : 105,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 105,
        "fromName" : "Project",
        "toId" : 104,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 120,
        "fromName" : "LogicalRelation",
        "toId" : 119,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 119,
        "fromName" : "Filter",
        "toId" : 118,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 118,
        "fromName" : "Project",
        "toId" : 104,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 104,
        "fromName" : "Join",
        "toId" : 103,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 103,
        "fromName" : "Project",
        "toId" : 102,
        "toName" : "Aggregate",
        "linkType" : "Operator"
      }, {
        "fromId" : 102,
        "fromName" : "Aggregate",
        "toId" : 2,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 2,
        "fromName" : "Join",
        "toId" : 1,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 130,
        "fromName" : "LogicalRelation",
        "toId" : 129,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 129,
        "fromName" : "Filter",
        "toId" : 128,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 128,
        "fromName" : "Project",
        "toId" : 127,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 133,
        "fromName" : "LogicalRelation",
        "toId" : 132,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 132,
        "fromName" : "Filter",
        "toId" : 131,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 131,
        "fromName" : "Project",
        "toId" : 127,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 127,
        "fromName" : "Join",
        "toId" : 126,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 126,
        "fromName" : "Project",
        "toId" : 125,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 136,
        "fromName" : "LogicalRelation",
        "toId" : 135,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 135,
        "fromName" : "Filter",
        "toId" : 134,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 134,
        "fromName" : "Project",
        "toId" : 125,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 125,
        "fromName" : "Join",
        "toId" : 124,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 124,
        "fromName" : "Project",
        "toId" : 123,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 139,
        "fromName" : "LogicalRelation",
        "toId" : 138,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 138,
        "fromName" : "Filter",
        "toId" : 137,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 137,
        "fromName" : "Project",
        "toId" : 123,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 123,
        "fromName" : "Join",
        "toId" : 122,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 122,
        "fromName" : "Project",
        "toId" : 121,
        "toName" : "Aggregate",
        "linkType" : "Operator"
      }, {
        "fromId" : 121,
        "fromName" : "Aggregate",
        "toId" : 1,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 1,
        "fromName" : "Join",
        "toId" : 0,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 149,
        "fromName" : "LogicalRelation",
        "toId" : 148,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 148,
        "fromName" : "Filter",
        "toId" : 147,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 147,
        "fromName" : "Project",
        "toId" : 146,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 152,
        "fromName" : "LogicalRelation",
        "toId" : 151,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 151,
        "fromName" : "Filter",
        "toId" : 150,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 150,
        "fromName" : "Project",
        "toId" : 146,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 146,
        "fromName" : "Join",
        "toId" : 145,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 145,
        "fromName" : "Project",
        "toId" : 144,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 155,
        "fromName" : "LogicalRelation",
        "toId" : 154,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 154,
        "fromName" : "Filter",
        "toId" : 153,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 153,
        "fromName" : "Project",
        "toId" : 144,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 144,
        "fromName" : "Join",
        "toId" : 143,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 143,
        "fromName" : "Project",
        "toId" : 142,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 158,
        "fromName" : "LogicalRelation",
        "toId" : 157,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 157,
        "fromName" : "Filter",
        "toId" : 156,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 156,
        "fromName" : "Project",
        "toId" : 142,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 142,
        "fromName" : "Join",
        "toId" : 141,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 141,
        "fromName" : "Project",
        "toId" : 140,
        "toName" : "Aggregate",
        "linkType" : "Operator"
      }, {
        "fromId" : 140,
        "fromName" : "Aggregate",
        "toId" : 0,
        "toName" : "Join",
        "linkType" : "Operator"
      } ],
      "rawPlan" : "Join Cross\n:- Join Cross\n:  :- Join Cross\n:  :  :- Join Cross\n:  :  :  :- Join Cross\n:  :  :  :  :- Join Cross\n:  :  :  :  :  :- Join Cross\n:  :  :  :  :  :  :- Aggregate [count(1) AS h8_30_to_9#0L]\n:  :  :  :  :  :  :  +- Project\n:  :  :  :  :  :  :     +- Join Inner, (ss_store_sk#22 = s_store_sk#54)\n:  :  :  :  :  :  :        :- Project [ss_store_sk#22]\n:  :  :  :  :  :  :        :  +- Join Inner, (ss_hdemo_sk#20 = hd_demo_sk#39)\n:  :  :  :  :  :  :        :     :- Project [ss_hdemo_sk#20, ss_store_sk#22]\n:  :  :  :  :  :  :        :     :  +- Join Inner, (ss_sold_time_sk#16 = t_time_sk#44)\n:  :  :  :  :  :  :        :     :     :- Project [ss_sold_time_sk#16, ss_hdemo_sk#20, ss_store_sk#22]\n:  :  :  :  :  :  :        :     :     :  +- Filter (isnotnull(ss_hdemo_sk#20) AND (isnotnull(ss_sold_time_sk#16) AND isnotnull(ss_store_sk#22)))\n:  :  :  :  :  :  :        :     :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#16,ss_item_sk#17,ss_customer_sk#18,ss_cdemo_sk#19,ss_hdemo_sk#20,ss_addr_sk#21,ss_store_sk#22,ss_promo_sk#23,ss_ticket_number#24L,ss_quantity#25,ss_wholesale_cost#26,ss_list_price#27,ss_sales_price#28,ss_ext_discount_amt#29,ss_ext_sales_price#30,ss_ext_wholesale_cost#31,ss_ext_list_price#32,ss_ext_tax#33,ss_coupon_amt#34,ss_net_paid#35,ss_net_paid_inc_tax#36,ss_net_profit#37,ss_sold_date_sk#38] parquet\n:  :  :  :  :  :  :        :     :     +- Project [t_time_sk#44]\n:  :  :  :  :  :  :        :     :        +- Filter (((isnotnull(t_hour#47) AND isnotnull(t_minute#48)) AND ((t_hour#47 = 8) AND (t_minute#48 >= 30))) AND isnotnull(t_time_sk#44))\n:  :  :  :  :  :  :        :     :           +- Relation spark_catalog.tpcds_100.time_dim[t_time_sk#44,t_time_id#45,t_time#46,t_hour#47,t_minute#48,t_second#49,t_am_pm#50,t_shift#51,t_sub_shift#52,t_meal_time#53] parquet\n:  :  :  :  :  :  :        :     +- Project [hd_demo_sk#39]\n:  :  :  :  :  :  :        :        +- Filter (((((hd_dep_count#42 = 3) AND (hd_vehicle_count#43 <= 5)) OR ((hd_dep_count#42 = 0) AND (hd_vehicle_count#43 <= 2))) OR ((hd_dep_count#42 = 1) AND (hd_vehicle_count#43 <= 3))) AND isnotnull(hd_demo_sk#39))\n:  :  :  :  :  :  :        :           +- Relation spark_catalog.tpcds_100.household_demographics[hd_demo_sk#39,hd_income_band_sk#40,hd_buy_potential#41,hd_dep_count#42,hd_vehicle_count#43] parquet\n:  :  :  :  :  :  :        +- Project [s_store_sk#54]\n:  :  :  :  :  :  :           +- Filter ((isnotnull(s_store_name#59) AND (s_store_name#59 = ese)) AND isnotnull(s_store_sk#54))\n:  :  :  :  :  :  :              +- Relation spark_catalog.tpcds_100.store[s_store_sk#54,s_store_id#55,s_rec_start_date#56,s_rec_end_date#57,s_closed_date_sk#58,s_store_name#59,s_number_employees#60,s_floor_space#61,s_hours#62,s_manager#63,s_market_id#64,s_geography_class#65,s_market_desc#66,s_market_manager#67,s_division_id#68,s_division_name#69,s_company_id#70,s_company_name#71,s_street_number#72,s_street_name#73,s_street_type#74,s_suite_number#75,s_city#76,s_county#77,... 5 more fields] parquet\n:  :  :  :  :  :  +- Aggregate [count(1) AS h9_to_9_30#1L]\n:  :  :  :  :  :     +- Project\n:  :  :  :  :  :        +- Join Inner, (ss_store_sk#89 = s_store_sk#121)\n:  :  :  :  :  :           :- Project [ss_store_sk#89]\n:  :  :  :  :  :           :  +- Join Inner, (ss_hdemo_sk#87 = hd_demo_sk#106)\n:  :  :  :  :  :           :     :- Project [ss_hdemo_sk#87, ss_store_sk#89]\n:  :  :  :  :  :           :     :  +- Join Inner, (ss_sold_time_sk#83 = t_time_sk#111)\n:  :  :  :  :  :           :     :     :- Project [ss_sold_time_sk#83, ss_hdemo_sk#87, ss_store_sk#89]\n:  :  :  :  :  :           :     :     :  +- Filter (isnotnull(ss_hdemo_sk#87) AND (isnotnull(ss_sold_time_sk#83) AND isnotnull(ss_store_sk#89)))\n:  :  :  :  :  :           :     :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#83,ss_item_sk#84,ss_customer_sk#85,ss_cdemo_sk#86,ss_hdemo_sk#87,ss_addr_sk#88,ss_store_sk#89,ss_promo_sk#90,ss_ticket_number#91L,ss_quantity#92,ss_wholesale_cost#93,ss_list_price#94,ss_sales_price#95,ss_ext_discount_amt#96,ss_ext_sales_price#97,ss_ext_wholesale_cost#98,ss_ext_list_price#99,ss_ext_tax#100,ss_coupon_amt#101,ss_net_paid#102,ss_net_paid_inc_tax#103,ss_net_profit#104,ss_sold_date_sk#105] parquet\n:  :  :  :  :  :           :     :     +- Project [t_time_sk#111]\n:  :  :  :  :  :           :     :        +- Filter (((isnotnull(t_hour#114) AND isnotnull(t_minute#115)) AND ((t_hour#114 = 9) AND (t_minute#115 < 30))) AND isnotnull(t_time_sk#111))\n:  :  :  :  :  :           :     :           +- Relation spark_catalog.tpcds_100.time_dim[t_time_sk#111,t_time_id#112,t_time#113,t_hour#114,t_minute#115,t_second#116,t_am_pm#117,t_shift#118,t_sub_shift#119,t_meal_time#120] parquet\n:  :  :  :  :  :           :     +- Project [hd_demo_sk#106]\n:  :  :  :  :  :           :        +- Filter (((((hd_dep_count#109 = 3) AND (hd_vehicle_count#110 <= 5)) OR ((hd_dep_count#109 = 0) AND (hd_vehicle_count#110 <= 2))) OR ((hd_dep_count#109 = 1) AND (hd_vehicle_count#110 <= 3))) AND isnotnull(hd_demo_sk#106))\n:  :  :  :  :  :           :           +- Relation spark_catalog.tpcds_100.household_demographics[hd_demo_sk#106,hd_income_band_sk#107,hd_buy_potential#108,hd_dep_count#109,hd_vehicle_count#110] parquet\n:  :  :  :  :  :           +- Project [s_store_sk#121]\n:  :  :  :  :  :              +- Filter ((isnotnull(s_store_name#126) AND (s_store_name#126 = ese)) AND isnotnull(s_store_sk#121))\n:  :  :  :  :  :                 +- Relation spark_catalog.tpcds_100.store[s_store_sk#121,s_store_id#122,s_rec_start_date#123,s_rec_end_date#124,s_closed_date_sk#125,s_store_name#126,s_number_employees#127,s_floor_space#128,s_hours#129,s_manager#130,s_market_id#131,s_geography_class#132,s_market_desc#133,s_market_manager#134,s_division_id#135,s_division_name#136,s_company_id#137,s_company_name#138,s_street_number#139,s_street_name#140,s_street_type#141,s_suite_number#142,s_city#143,s_county#144,... 5 more fields] parquet\n:  :  :  :  :  +- Aggregate [count(1) AS h9_30_to_10#2L]\n:  :  :  :  :     +- Project\n:  :  :  :  :        +- Join Inner, (ss_store_sk#156 = s_store_sk#188)\n:  :  :  :  :           :- Project [ss_store_sk#156]\n:  :  :  :  :           :  +- Join Inner, (ss_hdemo_sk#154 = hd_demo_sk#173)\n:  :  :  :  :           :     :- Project [ss_hdemo_sk#154, ss_store_sk#156]\n:  :  :  :  :           :     :  +- Join Inner, (ss_sold_time_sk#150 = t_time_sk#178)\n:  :  :  :  :           :     :     :- Project [ss_sold_time_sk#150, ss_hdemo_sk#154, ss_store_sk#156]\n:  :  :  :  :           :     :     :  +- Filter (isnotnull(ss_hdemo_sk#154) AND (isnotnull(ss_sold_time_sk#150) AND isnotnull(ss_store_sk#156)))\n:  :  :  :  :           :     :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#150,ss_item_sk#151,ss_customer_sk#152,ss_cdemo_sk#153,ss_hdemo_sk#154,ss_addr_sk#155,ss_store_sk#156,ss_promo_sk#157,ss_ticket_number#158L,ss_quantity#159,ss_wholesale_cost#160,ss_list_price#161,ss_sales_price#162,ss_ext_discount_amt#163,ss_ext_sales_price#164,ss_ext_wholesale_cost#165,ss_ext_list_price#166,ss_ext_tax#167,ss_coupon_amt#168,ss_net_paid#169,ss_net_paid_inc_tax#170,ss_net_profit#171,ss_sold_date_sk#172] parquet\n:  :  :  :  :           :     :     +- Project [t_time_sk#178]\n:  :  :  :  :           :     :        +- Filter (((isnotnull(t_hour#181) AND isnotnull(t_minute#182)) AND ((t_hour#181 = 9) AND (t_minute#182 >= 30))) AND isnotnull(t_time_sk#178))\n:  :  :  :  :           :     :           +- Relation spark_catalog.tpcds_100.time_dim[t_time_sk#178,t_time_id#179,t_time#180,t_hour#181,t_minute#182,t_second#183,t_am_pm#184,t_shift#185,t_sub_shift#186,t_meal_time#187] parquet\n:  :  :  :  :           :     +- Project [hd_demo_sk#173]\n:  :  :  :  :           :        +- Filter (((((hd_dep_count#176 = 3) AND (hd_vehicle_count#177 <= 5)) OR ((hd_dep_count#176 = 0) AND (hd_vehicle_count#177 <= 2))) OR ((hd_dep_count#176 = 1) AND (hd_vehicle_count#177 <= 3))) AND isnotnull(hd_demo_sk#173))\n:  :  :  :  :           :           +- Relation spark_catalog.tpcds_100.household_demographics[hd_demo_sk#173,hd_income_band_sk#174,hd_buy_potential#175,hd_dep_count#176,hd_vehicle_count#177] parquet\n:  :  :  :  :           +- Project [s_store_sk#188]\n:  :  :  :  :              +- Filter ((isnotnull(s_store_name#193) AND (s_store_name#193 = ese)) AND isnotnull(s_store_sk#188))\n:  :  :  :  :                 +- Relation spark_catalog.tpcds_100.store[s_store_sk#188,s_store_id#189,s_rec_start_date#190,s_rec_end_date#191,s_closed_date_sk#192,s_store_name#193,s_number_employees#194,s_floor_space#195,s_hours#196,s_manager#197,s_market_id#198,s_geography_class#199,s_market_desc#200,s_market_manager#201,s_division_id#202,s_division_name#203,s_company_id#204,s_company_name#205,s_street_number#206,s_street_name#207,s_street_type#208,s_suite_number#209,s_city#210,s_county#211,... 5 more fields] parquet\n:  :  :  :  +- Aggregate [count(1) AS h10_to_10_30#3L]\n:  :  :  :     +- Project\n:  :  :  :        +- Join Inner, (ss_store_sk#223 = s_store_sk#255)\n:  :  :  :           :- Project [ss_store_sk#223]\n:  :  :  :           :  +- Join Inner, (ss_hdemo_sk#221 = hd_demo_sk#240)\n:  :  :  :           :     :- Project [ss_hdemo_sk#221, ss_store_sk#223]\n:  :  :  :           :     :  +- Join Inner, (ss_sold_time_sk#217 = t_time_sk#245)\n:  :  :  :           :     :     :- Project [ss_sold_time_sk#217, ss_hdemo_sk#221, ss_store_sk#223]\n:  :  :  :           :     :     :  +- Filter (isnotnull(ss_hdemo_sk#221) AND (isnotnull(ss_sold_time_sk#217) AND isnotnull(ss_store_sk#223)))\n:  :  :  :           :     :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#217,ss_item_sk#218,ss_customer_sk#219,ss_cdemo_sk#220,ss_hdemo_sk#221,ss_addr_sk#222,ss_store_sk#223,ss_promo_sk#224,ss_ticket_number#225L,ss_quantity#226,ss_wholesale_cost#227,ss_list_price#228,ss_sales_price#229,ss_ext_discount_amt#230,ss_ext_sales_price#231,ss_ext_wholesale_cost#232,ss_ext_list_price#233,ss_ext_tax#234,ss_coupon_amt#235,ss_net_paid#236,ss_net_paid_inc_tax#237,ss_net_profit#238,ss_sold_date_sk#239] parquet\n:  :  :  :           :     :     +- Project [t_time_sk#245]\n:  :  :  :           :     :        +- Filter (((isnotnull(t_hour#248) AND isnotnull(t_minute#249)) AND ((t_hour#248 = 10) AND (t_minute#249 < 30))) AND isnotnull(t_time_sk#245))\n:  :  :  :           :     :           +- Relation spark_catalog.tpcds_100.time_dim[t_time_sk#245,t_time_id#246,t_time#247,t_hour#248,t_minute#249,t_second#250,t_am_pm#251,t_shift#252,t_sub_shift#253,t_meal_time#254] parquet\n:  :  :  :           :     +- Project [hd_demo_sk#240]\n:  :  :  :           :        +- Filter (((((hd_dep_count#243 = 3) AND (hd_vehicle_count#244 <= 5)) OR ((hd_dep_count#243 = 0) AND (hd_vehicle_count#244 <= 2))) OR ((hd_dep_count#243 = 1) AND (hd_vehicle_count#244 <= 3))) AND isnotnull(hd_demo_sk#240))\n:  :  :  :           :           +- Relation spark_catalog.tpcds_100.household_demographics[hd_demo_sk#240,hd_income_band_sk#241,hd_buy_potential#242,hd_dep_count#243,hd_vehicle_count#244] parquet\n:  :  :  :           +- Project [s_store_sk#255]\n:  :  :  :              +- Filter ((isnotnull(s_store_name#260) AND (s_store_name#260 = ese)) AND isnotnull(s_store_sk#255))\n:  :  :  :                 +- Relation spark_catalog.tpcds_100.store[s_store_sk#255,s_store_id#256,s_rec_start_date#257,s_rec_end_date#258,s_closed_date_sk#259,s_store_name#260,s_number_employees#261,s_floor_space#262,s_hours#263,s_manager#264,s_market_id#265,s_geography_class#266,s_market_desc#267,s_market_manager#268,s_division_id#269,s_division_name#270,s_company_id#271,s_company_name#272,s_street_number#273,s_street_name#274,s_street_type#275,s_suite_number#276,s_city#277,s_county#278,... 5 more fields] parquet\n:  :  :  +- Aggregate [count(1) AS h10_30_to_11#4L]\n:  :  :     +- Project\n:  :  :        +- Join Inner, (ss_store_sk#290 = s_store_sk#322)\n:  :  :           :- Project [ss_store_sk#290]\n:  :  :           :  +- Join Inner, (ss_hdemo_sk#288 = hd_demo_sk#307)\n:  :  :           :     :- Project [ss_hdemo_sk#288, ss_store_sk#290]\n:  :  :           :     :  +- Join Inner, (ss_sold_time_sk#284 = t_time_sk#312)\n:  :  :           :     :     :- Project [ss_sold_time_sk#284, ss_hdemo_sk#288, ss_store_sk#290]\n:  :  :           :     :     :  +- Filter (isnotnull(ss_hdemo_sk#288) AND (isnotnull(ss_sold_time_sk#284) AND isnotnull(ss_store_sk#290)))\n:  :  :           :     :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#284,ss_item_sk#285,ss_customer_sk#286,ss_cdemo_sk#287,ss_hdemo_sk#288,ss_addr_sk#289,ss_store_sk#290,ss_promo_sk#291,ss_ticket_number#292L,ss_quantity#293,ss_wholesale_cost#294,ss_list_price#295,ss_sales_price#296,ss_ext_discount_amt#297,ss_ext_sales_price#298,ss_ext_wholesale_cost#299,ss_ext_list_price#300,ss_ext_tax#301,ss_coupon_amt#302,ss_net_paid#303,ss_net_paid_inc_tax#304,ss_net_profit#305,ss_sold_date_sk#306] parquet\n:  :  :           :     :     +- Project [t_time_sk#312]\n:  :  :           :     :        +- Filter (((isnotnull(t_hour#315) AND isnotnull(t_minute#316)) AND ((t_hour#315 = 10) AND (t_minute#316 >= 30))) AND isnotnull(t_time_sk#312))\n:  :  :           :     :           +- Relation spark_catalog.tpcds_100.time_dim[t_time_sk#312,t_time_id#313,t_time#314,t_hour#315,t_minute#316,t_second#317,t_am_pm#318,t_shift#319,t_sub_shift#320,t_meal_time#321] parquet\n:  :  :           :     +- Project [hd_demo_sk#307]\n:  :  :           :        +- Filter (((((hd_dep_count#310 = 3) AND (hd_vehicle_count#311 <= 5)) OR ((hd_dep_count#310 = 0) AND (hd_vehicle_count#311 <= 2))) OR ((hd_dep_count#310 = 1) AND (hd_vehicle_count#311 <= 3))) AND isnotnull(hd_demo_sk#307))\n:  :  :           :           +- Relation spark_catalog.tpcds_100.household_demographics[hd_demo_sk#307,hd_income_band_sk#308,hd_buy_potential#309,hd_dep_count#310,hd_vehicle_count#311] parquet\n:  :  :           +- Project [s_store_sk#322]\n:  :  :              +- Filter ((isnotnull(s_store_name#327) AND (s_store_name#327 = ese)) AND isnotnull(s_store_sk#322))\n:  :  :                 +- Relation spark_catalog.tpcds_100.store[s_store_sk#322,s_store_id#323,s_rec_start_date#324,s_rec_end_date#325,s_closed_date_sk#326,s_store_name#327,s_number_employees#328,s_floor_space#329,s_hours#330,s_manager#331,s_market_id#332,s_geography_class#333,s_market_desc#334,s_market_manager#335,s_division_id#336,s_division_name#337,s_company_id#338,s_company_name#339,s_street_number#340,s_street_name#341,s_street_type#342,s_suite_number#343,s_city#344,s_county#345,... 5 more fields] parquet\n:  :  +- Aggregate [count(1) AS h11_to_11_30#5L]\n:  :     +- Project\n:  :        +- Join Inner, (ss_store_sk#357 = s_store_sk#389)\n:  :           :- Project [ss_store_sk#357]\n:  :           :  +- Join Inner, (ss_hdemo_sk#355 = hd_demo_sk#374)\n:  :           :     :- Project [ss_hdemo_sk#355, ss_store_sk#357]\n:  :           :     :  +- Join Inner, (ss_sold_time_sk#351 = t_time_sk#379)\n:  :           :     :     :- Project [ss_sold_time_sk#351, ss_hdemo_sk#355, ss_store_sk#357]\n:  :           :     :     :  +- Filter (isnotnull(ss_hdemo_sk#355) AND (isnotnull(ss_sold_time_sk#351) AND isnotnull(ss_store_sk#357)))\n:  :           :     :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#351,ss_item_sk#352,ss_customer_sk#353,ss_cdemo_sk#354,ss_hdemo_sk#355,ss_addr_sk#356,ss_store_sk#357,ss_promo_sk#358,ss_ticket_number#359L,ss_quantity#360,ss_wholesale_cost#361,ss_list_price#362,ss_sales_price#363,ss_ext_discount_amt#364,ss_ext_sales_price#365,ss_ext_wholesale_cost#366,ss_ext_list_price#367,ss_ext_tax#368,ss_coupon_amt#369,ss_net_paid#370,ss_net_paid_inc_tax#371,ss_net_profit#372,ss_sold_date_sk#373] parquet\n:  :           :     :     +- Project [t_time_sk#379]\n:  :           :     :        +- Filter (((isnotnull(t_hour#382) AND isnotnull(t_minute#383)) AND ((t_hour#382 = 11) AND (t_minute#383 < 30))) AND isnotnull(t_time_sk#379))\n:  :           :     :           +- Relation spark_catalog.tpcds_100.time_dim[t_time_sk#379,t_time_id#380,t_time#381,t_hour#382,t_minute#383,t_second#384,t_am_pm#385,t_shift#386,t_sub_shift#387,t_meal_time#388] parquet\n:  :           :     +- Project [hd_demo_sk#374]\n:  :           :        +- Filter (((((hd_dep_count#377 = 3) AND (hd_vehicle_count#378 <= 5)) OR ((hd_dep_count#377 = 0) AND (hd_vehicle_count#378 <= 2))) OR ((hd_dep_count#377 = 1) AND (hd_vehicle_count#378 <= 3))) AND isnotnull(hd_demo_sk#374))\n:  :           :           +- Relation spark_catalog.tpcds_100.household_demographics[hd_demo_sk#374,hd_income_band_sk#375,hd_buy_potential#376,hd_dep_count#377,hd_vehicle_count#378] parquet\n:  :           +- Project [s_store_sk#389]\n:  :              +- Filter ((isnotnull(s_store_name#394) AND (s_store_name#394 = ese)) AND isnotnull(s_store_sk#389))\n:  :                 +- Relation spark_catalog.tpcds_100.store[s_store_sk#389,s_store_id#390,s_rec_start_date#391,s_rec_end_date#392,s_closed_date_sk#393,s_store_name#394,s_number_employees#395,s_floor_space#396,s_hours#397,s_manager#398,s_market_id#399,s_geography_class#400,s_market_desc#401,s_market_manager#402,s_division_id#403,s_division_name#404,s_company_id#405,s_company_name#406,s_street_number#407,s_street_name#408,s_street_type#409,s_suite_number#410,s_city#411,s_county#412,... 5 more fields] parquet\n:  +- Aggregate [count(1) AS h11_30_to_12#6L]\n:     +- Project\n:        +- Join Inner, (ss_store_sk#424 = s_store_sk#456)\n:           :- Project [ss_store_sk#424]\n:           :  +- Join Inner, (ss_hdemo_sk#422 = hd_demo_sk#441)\n:           :     :- Project [ss_hdemo_sk#422, ss_store_sk#424]\n:           :     :  +- Join Inner, (ss_sold_time_sk#418 = t_time_sk#446)\n:           :     :     :- Project [ss_sold_time_sk#418, ss_hdemo_sk#422, ss_store_sk#424]\n:           :     :     :  +- Filter (isnotnull(ss_hdemo_sk#422) AND (isnotnull(ss_sold_time_sk#418) AND isnotnull(ss_store_sk#424)))\n:           :     :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#418,ss_item_sk#419,ss_customer_sk#420,ss_cdemo_sk#421,ss_hdemo_sk#422,ss_addr_sk#423,ss_store_sk#424,ss_promo_sk#425,ss_ticket_number#426L,ss_quantity#427,ss_wholesale_cost#428,ss_list_price#429,ss_sales_price#430,ss_ext_discount_amt#431,ss_ext_sales_price#432,ss_ext_wholesale_cost#433,ss_ext_list_price#434,ss_ext_tax#435,ss_coupon_amt#436,ss_net_paid#437,ss_net_paid_inc_tax#438,ss_net_profit#439,ss_sold_date_sk#440] parquet\n:           :     :     +- Project [t_time_sk#446]\n:           :     :        +- Filter (((isnotnull(t_hour#449) AND isnotnull(t_minute#450)) AND ((t_hour#449 = 11) AND (t_minute#450 >= 30))) AND isnotnull(t_time_sk#446))\n:           :     :           +- Relation spark_catalog.tpcds_100.time_dim[t_time_sk#446,t_time_id#447,t_time#448,t_hour#449,t_minute#450,t_second#451,t_am_pm#452,t_shift#453,t_sub_shift#454,t_meal_time#455] parquet\n:           :     +- Project [hd_demo_sk#441]\n:           :        +- Filter (((((hd_dep_count#444 = 3) AND (hd_vehicle_count#445 <= 5)) OR ((hd_dep_count#444 = 0) AND (hd_vehicle_count#445 <= 2))) OR ((hd_dep_count#444 = 1) AND (hd_vehicle_count#445 <= 3))) AND isnotnull(hd_demo_sk#441))\n:           :           +- Relation spark_catalog.tpcds_100.household_demographics[hd_demo_sk#441,hd_income_band_sk#442,hd_buy_potential#443,hd_dep_count#444,hd_vehicle_count#445] parquet\n:           +- Project [s_store_sk#456]\n:              +- Filter ((isnotnull(s_store_name#461) AND (s_store_name#461 = ese)) AND isnotnull(s_store_sk#456))\n:                 +- Relation spark_catalog.tpcds_100.store[s_store_sk#456,s_store_id#457,s_rec_start_date#458,s_rec_end_date#459,s_closed_date_sk#460,s_store_name#461,s_number_employees#462,s_floor_space#463,s_hours#464,s_manager#465,s_market_id#466,s_geography_class#467,s_market_desc#468,s_market_manager#469,s_division_id#470,s_division_name#471,s_company_id#472,s_company_name#473,s_street_number#474,s_street_name#475,s_street_type#476,s_suite_number#477,s_city#478,s_county#479,... 5 more fields] parquet\n+- Aggregate [count(1) AS h12_to_12_30#7L]\n   +- Project\n      +- Join Inner, (ss_store_sk#491 = s_store_sk#523)\n         :- Project [ss_store_sk#491]\n         :  +- Join Inner, (ss_hdemo_sk#489 = hd_demo_sk#508)\n         :     :- Project [ss_hdemo_sk#489, ss_store_sk#491]\n         :     :  +- Join Inner, (ss_sold_time_sk#485 = t_time_sk#513)\n         :     :     :- Project [ss_sold_time_sk#485, ss_hdemo_sk#489, ss_store_sk#491]\n         :     :     :  +- Filter (isnotnull(ss_hdemo_sk#489) AND (isnotnull(ss_sold_time_sk#485) AND isnotnull(ss_store_sk#491)))\n         :     :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#485,ss_item_sk#486,ss_customer_sk#487,ss_cdemo_sk#488,ss_hdemo_sk#489,ss_addr_sk#490,ss_store_sk#491,ss_promo_sk#492,ss_ticket_number#493L,ss_quantity#494,ss_wholesale_cost#495,ss_list_price#496,ss_sales_price#497,ss_ext_discount_amt#498,ss_ext_sales_price#499,ss_ext_wholesale_cost#500,ss_ext_list_price#501,ss_ext_tax#502,ss_coupon_amt#503,ss_net_paid#504,ss_net_paid_inc_tax#505,ss_net_profit#506,ss_sold_date_sk#507] parquet\n         :     :     +- Project [t_time_sk#513]\n         :     :        +- Filter (((isnotnull(t_hour#516) AND isnotnull(t_minute#517)) AND ((t_hour#516 = 12) AND (t_minute#517 < 30))) AND isnotnull(t_time_sk#513))\n         :     :           +- Relation spark_catalog.tpcds_100.time_dim[t_time_sk#513,t_time_id#514,t_time#515,t_hour#516,t_minute#517,t_second#518,t_am_pm#519,t_shift#520,t_sub_shift#521,t_meal_time#522] parquet\n         :     +- Project [hd_demo_sk#508]\n         :        +- Filter (((((hd_dep_count#511 = 3) AND (hd_vehicle_count#512 <= 5)) OR ((hd_dep_count#511 = 0) AND (hd_vehicle_count#512 <= 2))) OR ((hd_dep_count#511 = 1) AND (hd_vehicle_count#512 <= 3))) AND isnotnull(hd_demo_sk#508))\n         :           +- Relation spark_catalog.tpcds_100.household_demographics[hd_demo_sk#508,hd_income_band_sk#509,hd_buy_potential#510,hd_dep_count#511,hd_vehicle_count#512] parquet\n         +- Project [s_store_sk#523]\n            +- Filter ((isnotnull(s_store_name#528) AND (s_store_name#528 = ese)) AND isnotnull(s_store_sk#523))\n               +- Relation spark_catalog.tpcds_100.store[s_store_sk#523,s_store_id#524,s_rec_start_date#525,s_rec_end_date#526,s_closed_date_sk#527,s_store_name#528,s_number_employees#529,s_floor_space#530,s_hours#531,s_manager#532,s_market_id#533,s_geography_class#534,s_market_desc#535,s_market_manager#536,s_division_id#537,s_division_name#538,s_company_id#539,s_company_name#540,s_street_number#541,s_street_name#542,s_street_type#543,s_suite_number#544,s_city#545,s_county#546,... 5 more fields] parquet\n"
    },
    "IM" : {
      "inputSizeInBytes" : 350306933872,
      "inputRowCount" : 2304803120
    },
    "PD" : { },
    "Configuration" : {
      "theta_c" : [ {
        "spark.executor.memory" : "1g"
      }, {
        "spark.executor.cores" : "1"
      }, {
        "spark.executor.instances" : "16"
      }, {
        "spark.default.parallelism" : "16"
      }, {
        "spark.reducer.maxSizeInFlight" : "48m"
      }, {
        "spark.shuffle.sort.bypassMergeThreshold" : "200"
      }, {
        "spark.shuffle.compress" : "true"
      }, {
        "spark.memory.fraction" : "0.6"
      } ],
      "theta_p" : [ {
        "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
      }, {
        "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
      }, {
        "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
      }, {
        "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
      }, {
        "spark.sql.shuffle.partitions" : "200"
      }, {
        "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
      }, {
        "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
      }, {
        "spark.sql.files.maxPartitionBytes" : "128MB"
      }, {
        "spark.sql.files.openCostInBytes" : "4MB"
      } ],
      "theta_s" : [ {
        "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
      }, {
        "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
      } ]
    }
  },
  "RuntimeLQPs" : {
    "12" : {
      "LQP" : {
        "operators" : {
          "12" : {
            "sign" : 465392224,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 16,
            "rowCount" : 1,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [count(1) AS h11_to_11_30#597L], HashAggregate(keys=[], functions=[count(1)]) "
          },
          "8" : {
            "sign" : -640907261,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 2576,
            "rowCount" : 161,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: LogicalQueryStage Aggregate [count(1) AS h9_to_9_30#593L], HashAggregate(keys=[], functions=[count(1)]), BroadcastQueryStage 50 "
          },
          "4" : {
            "sign" : -1632486951,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 166931240,
            "rowCount" : 4173281,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Cross "
          },
          "11" : {
            "sign" : 461391639,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 16,
            "rowCount" : 1,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: LogicalQueryStage Aggregate [count(1) AS h10_30_to_11#596L], HashAggregate(keys=[], functions=[count(1)]), BroadcastQueryStage 47 "
          },
          "9" : {
            "sign" : 1379352947,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 16,
            "rowCount" : 1,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: LogicalQueryStage Aggregate [count(1) AS h9_30_to_10#594L], HashAggregate(keys=[], functions=[count(1)]), BroadcastQueryStage 46 "
          },
          "13" : {
            "sign" : -672490412,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 2576,
            "rowCount" : 161,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: LogicalQueryStage Aggregate [count(1) AS h11_30_to_12#598L], HashAggregate(keys=[], functions=[count(1)]), BroadcastQueryStage 48 "
          },
          "5" : {
            "sign" : 1507049806,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 829472,
            "rowCount" : 25921,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Cross "
          },
          "10" : {
            "sign" : -353051992,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 2576,
            "rowCount" : 161,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: LogicalQueryStage Aggregate [count(1) AS h10_to_10_30#595L], HashAggregate(keys=[], functions=[count(1)]), BroadcastQueryStage 51 "
          },
          "6" : {
            "sign" : -612370776,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 622104,
            "rowCount" : 25921,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Cross "
          },
          "1" : {
            "sign" : 1275613619,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 43001487424,
            "rowCount" : 671898241,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Cross "
          },
          "14" : {
            "sign" : -222721313,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 2576,
            "rowCount" : 161,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: LogicalQueryStage Aggregate [count(1) AS h12_to_12_30#599L], HashAggregate(keys=[], functions=[count(1)]), BroadcastQueryStage 49 "
          },
          "0" : {
            "sign" : -1699269413,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 7788644409672,
            "rowCount" : 108175616801,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Cross "
          },
          "2" : {
            "sign" : -1498668284,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 233703736,
            "rowCount" : 4173281,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Cross "
          },
          "7" : {
            "sign" : -1999474772,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 2576,
            "rowCount" : 161,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [count(1) AS h8_30_to_9#592L], HashAggregate(keys=[], functions=[count(1)]) "
          },
          "3" : {
            "sign" : 54628865,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 200317488,
            "rowCount" : 4173281,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Cross "
          }
        },
        "links" : [ {
          "fromId" : 7,
          "fromName" : "LogicalQueryStage",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "LogicalQueryStage",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Join",
          "toId" : 5,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "LogicalQueryStage",
          "toId" : 5,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Join",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "LogicalQueryStage",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Join",
          "toId" : 3,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "LogicalQueryStage",
          "toId" : 3,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Join",
          "toId" : 2,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 12,
          "fromName" : "LogicalQueryStage",
          "toId" : 2,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Join",
          "toId" : 1,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 13,
          "fromName" : "LogicalQueryStage",
          "toId" : 1,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Join",
          "toId" : 0,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 14,
          "fromName" : "LogicalQueryStage",
          "toId" : 0,
          "toName" : "Join",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Join Cross\n:- Join Cross\n:  :- Join Cross\n:  :  :- Join Cross\n:  :  :  :- Join Cross\n:  :  :  :  :- Join Cross\n:  :  :  :  :  :- Join Cross\n:  :  :  :  :  :  :- LogicalQueryStage Aggregate [count(1) AS h8_30_to_9#592L], HashAggregate(keys=[], functions=[count(1)])\n:  :  :  :  :  :  +- LogicalQueryStage LogicalQueryStage Aggregate [count(1) AS h9_to_9_30#593L], HashAggregate(keys=[], functions=[count(1)]), BroadcastQueryStage 50\n:  :  :  :  :  +- LogicalQueryStage LogicalQueryStage Aggregate [count(1) AS h9_30_to_10#594L], HashAggregate(keys=[], functions=[count(1)]), BroadcastQueryStage 46\n:  :  :  :  +- LogicalQueryStage LogicalQueryStage Aggregate [count(1) AS h10_to_10_30#595L], HashAggregate(keys=[], functions=[count(1)]), BroadcastQueryStage 51\n:  :  :  +- LogicalQueryStage LogicalQueryStage Aggregate [count(1) AS h10_30_to_11#596L], HashAggregate(keys=[], functions=[count(1)]), BroadcastQueryStage 47\n:  :  +- LogicalQueryStage Aggregate [count(1) AS h11_to_11_30#597L], HashAggregate(keys=[], functions=[count(1)])\n:  +- LogicalQueryStage LogicalQueryStage Aggregate [count(1) AS h11_30_to_12#598L], HashAggregate(keys=[], functions=[count(1)]), BroadcastQueryStage 48\n+- LogicalQueryStage LogicalQueryStage Aggregate [count(1) AS h12_to_12_30#599L], HashAggregate(keys=[], functions=[count(1)]), BroadcastQueryStage 49\n"
      },
      "IM" : {
        "inputSizeInBytes" : 12928,
        "inputRowCount" : 808
      },
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 8,
        "FinishedTasksNum" : 157,
        "FinishedTasksTotalTimeInMs" : 53839.0,
        "FinishedTasksDistributionInMs" : [ 173.0, 240.0, 276.0, 338.0, 2596.0 ]
      },
      "StartTimeInMs" : 1702227486527,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 564,
        "IOBytes" : {
          "Total" : 480169739,
          "Details" : {
            "IR" : 480103249,
            "IW" : 0,
            "SR" : 56991,
            "SW" : 9499
          }
        }
      }
    },
    "8" : {
      "LQP" : {
        "operators" : {
          "12" : {
            "sign" : 465392224,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 16,
            "rowCount" : 1,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [count(1) AS h11_to_11_30#597L], HashAggregate(keys=[], functions=[count(1)]) "
          },
          "8" : {
            "sign" : -260755430,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 2576,
            "rowCount" : 161,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [count(1) AS h9_to_9_30#593L], HashAggregate(keys=[], functions=[count(1)]) "
          },
          "4" : {
            "sign" : -1554653464,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 1036840,
            "rowCount" : 25921,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Cross "
          },
          "11" : {
            "sign" : 461391639,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 2576,
            "rowCount" : 161,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: LogicalQueryStage Aggregate [count(1) AS h10_30_to_11#596L], HashAggregate(keys=[], functions=[count(1)]), BroadcastQueryStage 47 "
          },
          "9" : {
            "sign" : 1379352947,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 2576,
            "rowCount" : 161,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: LogicalQueryStage Aggregate [count(1) AS h9_30_to_10#594L], HashAggregate(keys=[], functions=[count(1)]), BroadcastQueryStage 46 "
          },
          "13" : {
            "sign" : -672490412,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 2576,
            "rowCount" : 161,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: LogicalQueryStage Aggregate [count(1) AS h11_30_to_12#598L], HashAggregate(keys=[], functions=[count(1)]), BroadcastQueryStage 48 "
          },
          "5" : {
            "sign" : 339560869,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 829472,
            "rowCount" : 25921,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Cross "
          },
          "10" : {
            "sign" : 524712160,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 16,
            "rowCount" : 1,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [count(1) AS h10_to_10_30#595L], HashAggregate(keys=[], functions=[count(1)]) "
          },
          "6" : {
            "sign" : 273911039,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 3864,
            "rowCount" : 161,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Cross "
          },
          "1" : {
            "sign" : 1031395714,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 43001487424,
            "rowCount" : 671898241,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Cross "
          },
          "14" : {
            "sign" : 406072288,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 2576,
            "rowCount" : 161,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [count(1) AS h12_to_12_30#599L], HashAggregate(keys=[], functions=[count(1)]) "
          },
          "0" : {
            "sign" : 1834023979,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 7788644409672,
            "rowCount" : 108175616801,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Cross "
          },
          "2" : {
            "sign" : -587683179,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 233703736,
            "rowCount" : 4173281,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Cross "
          },
          "7" : {
            "sign" : -1999474772,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 16,
            "rowCount" : 1,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [count(1) AS h8_30_to_9#592L], HashAggregate(keys=[], functions=[count(1)]) "
          },
          "3" : {
            "sign" : -816383406,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 200317488,
            "rowCount" : 4173281,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Cross "
          }
        },
        "links" : [ {
          "fromId" : 7,
          "fromName" : "LogicalQueryStage",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "LogicalQueryStage",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Join",
          "toId" : 5,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "LogicalQueryStage",
          "toId" : 5,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Join",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "LogicalQueryStage",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Join",
          "toId" : 3,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "LogicalQueryStage",
          "toId" : 3,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Join",
          "toId" : 2,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 12,
          "fromName" : "LogicalQueryStage",
          "toId" : 2,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Join",
          "toId" : 1,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 13,
          "fromName" : "LogicalQueryStage",
          "toId" : 1,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Join",
          "toId" : 0,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 14,
          "fromName" : "LogicalQueryStage",
          "toId" : 0,
          "toName" : "Join",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Join Cross\n:- Join Cross\n:  :- Join Cross\n:  :  :- Join Cross\n:  :  :  :- Join Cross\n:  :  :  :  :- Join Cross\n:  :  :  :  :  :- Join Cross\n:  :  :  :  :  :  :- LogicalQueryStage Aggregate [count(1) AS h8_30_to_9#592L], HashAggregate(keys=[], functions=[count(1)])\n:  :  :  :  :  :  +- LogicalQueryStage Aggregate [count(1) AS h9_to_9_30#593L], HashAggregate(keys=[], functions=[count(1)])\n:  :  :  :  :  +- LogicalQueryStage LogicalQueryStage Aggregate [count(1) AS h9_30_to_10#594L], HashAggregate(keys=[], functions=[count(1)]), BroadcastQueryStage 46\n:  :  :  :  +- LogicalQueryStage Aggregate [count(1) AS h10_to_10_30#595L], HashAggregate(keys=[], functions=[count(1)])\n:  :  :  +- LogicalQueryStage LogicalQueryStage Aggregate [count(1) AS h10_30_to_11#596L], HashAggregate(keys=[], functions=[count(1)]), BroadcastQueryStage 47\n:  :  +- LogicalQueryStage Aggregate [count(1) AS h11_to_11_30#597L], HashAggregate(keys=[], functions=[count(1)])\n:  +- LogicalQueryStage LogicalQueryStage Aggregate [count(1) AS h11_30_to_12#598L], HashAggregate(keys=[], functions=[count(1)]), BroadcastQueryStage 48\n+- LogicalQueryStage Aggregate [count(1) AS h12_to_12_30#599L], HashAggregate(keys=[], functions=[count(1)])\n"
      },
      "IM" : {
        "inputSizeInBytes" : 12928,
        "inputRowCount" : 808
      },
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 16,
        "FinishedTasksNum" : 9,
        "FinishedTasksTotalTimeInMs" : 2644.0,
        "FinishedTasksDistributionInMs" : [ 242.0, 268.0, 299.0, 310.0, 358.0 ]
      },
      "StartTimeInMs" : 1702227476307,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 10784,
        "IOBytes" : {
          "Total" : 1440414232,
          "Details" : {
            "IR" : 1440309747,
            "IW" : 0,
            "SR" : 75988,
            "SW" : 28497
          }
        }
      }
    },
    "4" : {
      "LQP" : {
        "operators" : {
          "12" : {
            "sign" : 465392224,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 16,
            "rowCount" : 1,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [count(1) AS h11_to_11_30#597L], HashAggregate(keys=[], functions=[count(1)]) "
          },
          "8" : {
            "sign" : -260755430,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 2576,
            "rowCount" : 161,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [count(1) AS h9_to_9_30#593L], HashAggregate(keys=[], functions=[count(1)]) "
          },
          "4" : {
            "sign" : 1808728296,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 6440,
            "rowCount" : 161,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Cross "
          },
          "11" : {
            "sign" : 655452758,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 16,
            "rowCount" : 1,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [count(1) AS h10_30_to_11#596L], HashAggregate(keys=[], functions=[count(1)]) "
          },
          "9" : {
            "sign" : -279950413,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 16,
            "rowCount" : 1,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [count(1) AS h9_30_to_10#594L], HashAggregate(keys=[], functions=[count(1)]) "
          },
          "13" : {
            "sign" : 403683700,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 16,
            "rowCount" : 1,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [count(1) AS h11_30_to_12#598L], HashAggregate(keys=[], functions=[count(1)]) "
          },
          "5" : {
            "sign" : -77671835,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 5152,
            "rowCount" : 161,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Cross "
          },
          "10" : {
            "sign" : 524712160,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 16,
            "rowCount" : 1,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [count(1) AS h10_to_10_30#595L], HashAggregate(keys=[], functions=[count(1)]) "
          },
          "6" : {
            "sign" : 273911039,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 3864,
            "rowCount" : 161,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Cross "
          },
          "1" : {
            "sign" : -1973901373,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 10304,
            "rowCount" : 161,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Cross "
          },
          "14" : {
            "sign" : 406072288,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 16,
            "rowCount" : 1,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [count(1) AS h12_to_12_30#599L], HashAggregate(keys=[], functions=[count(1)]) "
          },
          "0" : {
            "sign" : 140829322,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 11592,
            "rowCount" : 161,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Cross "
          },
          "2" : {
            "sign" : -185892426,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 9016,
            "rowCount" : 161,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Cross "
          },
          "7" : {
            "sign" : -1999474772,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 16,
            "rowCount" : 1,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [count(1) AS h8_30_to_9#592L], HashAggregate(keys=[], functions=[count(1)]) "
          },
          "3" : {
            "sign" : 771601937,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 7728,
            "rowCount" : 161,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Cross "
          }
        },
        "links" : [ {
          "fromId" : 7,
          "fromName" : "LogicalQueryStage",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "LogicalQueryStage",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Join",
          "toId" : 5,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "LogicalQueryStage",
          "toId" : 5,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Join",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "LogicalQueryStage",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Join",
          "toId" : 3,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "LogicalQueryStage",
          "toId" : 3,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Join",
          "toId" : 2,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 12,
          "fromName" : "LogicalQueryStage",
          "toId" : 2,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Join",
          "toId" : 1,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 13,
          "fromName" : "LogicalQueryStage",
          "toId" : 1,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Join",
          "toId" : 0,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 14,
          "fromName" : "LogicalQueryStage",
          "toId" : 0,
          "toName" : "Join",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Join Cross\n:- Join Cross\n:  :- Join Cross\n:  :  :- Join Cross\n:  :  :  :- Join Cross\n:  :  :  :  :- Join Cross\n:  :  :  :  :  :- Join Cross\n:  :  :  :  :  :  :- LogicalQueryStage Aggregate [count(1) AS h8_30_to_9#592L], HashAggregate(keys=[], functions=[count(1)])\n:  :  :  :  :  :  +- LogicalQueryStage Aggregate [count(1) AS h9_to_9_30#593L], HashAggregate(keys=[], functions=[count(1)])\n:  :  :  :  :  +- LogicalQueryStage Aggregate [count(1) AS h9_30_to_10#594L], HashAggregate(keys=[], functions=[count(1)])\n:  :  :  :  +- LogicalQueryStage Aggregate [count(1) AS h10_to_10_30#595L], HashAggregate(keys=[], functions=[count(1)])\n:  :  :  +- LogicalQueryStage Aggregate [count(1) AS h10_30_to_11#596L], HashAggregate(keys=[], functions=[count(1)])\n:  :  +- LogicalQueryStage Aggregate [count(1) AS h11_to_11_30#597L], HashAggregate(keys=[], functions=[count(1)])\n:  +- LogicalQueryStage Aggregate [count(1) AS h11_30_to_12#598L], HashAggregate(keys=[], functions=[count(1)])\n+- LogicalQueryStage Aggregate [count(1) AS h12_to_12_30#599L], HashAggregate(keys=[], functions=[count(1)])\n"
      },
      "IM" : {
        "inputSizeInBytes" : 2688,
        "inputRowCount" : 168
      },
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 16,
        "FinishedTasksNum" : 91,
        "FinishedTasksTotalTimeInMs" : 22137.0,
        "FinishedTasksDistributionInMs" : [ 164.0, 205.0, 232.0, 275.0, 479.0 ]
      },
      "StartTimeInMs" : 1702227465356,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 21735,
        "IOBytes" : {
          "Total" : 3360865220,
          "Details" : {
            "IR" : 3360722743,
            "IW" : 0,
            "SR" : 75988,
            "SW" : 66489
          }
        }
      }
    },
    "15" : {
      "LQP" : {
        "operators" : {
          "12" : {
            "sign" : 465392224,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 16,
            "rowCount" : 1,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [count(1) AS h11_to_11_30#597L], HashAggregate(keys=[], functions=[count(1)]) "
          },
          "8" : {
            "sign" : -640907261,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 16,
            "rowCount" : 1,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: LogicalQueryStage Aggregate [count(1) AS h9_to_9_30#593L], HashAggregate(keys=[], functions=[count(1)]), BroadcastQueryStage 50 "
          },
          "4" : {
            "sign" : -1632486951,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 6440,
            "rowCount" : 161,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Cross "
          },
          "11" : {
            "sign" : 461391639,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 16,
            "rowCount" : 1,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: LogicalQueryStage Aggregate [count(1) AS h10_30_to_11#596L], HashAggregate(keys=[], functions=[count(1)]), BroadcastQueryStage 47 "
          },
          "9" : {
            "sign" : 1379352947,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 16,
            "rowCount" : 1,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: LogicalQueryStage Aggregate [count(1) AS h9_30_to_10#594L], HashAggregate(keys=[], functions=[count(1)]), BroadcastQueryStage 46 "
          },
          "13" : {
            "sign" : -672490412,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 2576,
            "rowCount" : 161,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: LogicalQueryStage Aggregate [count(1) AS h11_30_to_12#598L], HashAggregate(keys=[], functions=[count(1)]), BroadcastQueryStage 48 "
          },
          "5" : {
            "sign" : 1507049806,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 5152,
            "rowCount" : 161,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Cross "
          },
          "10" : {
            "sign" : -353051992,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 16,
            "rowCount" : 1,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: LogicalQueryStage Aggregate [count(1) AS h10_to_10_30#595L], HashAggregate(keys=[], functions=[count(1)]), BroadcastQueryStage 51 "
          },
          "6" : {
            "sign" : -612370776,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 3864,
            "rowCount" : 161,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Cross "
          },
          "1" : {
            "sign" : 1275613619,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 1658944,
            "rowCount" : 25921,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Cross "
          },
          "14" : {
            "sign" : -222721313,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 16,
            "rowCount" : 1,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: LogicalQueryStage Aggregate [count(1) AS h12_to_12_30#599L], HashAggregate(keys=[], functions=[count(1)]), BroadcastQueryStage 49 "
          },
          "0" : {
            "sign" : -1699269413,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 1866312,
            "rowCount" : 25921,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Cross "
          },
          "2" : {
            "sign" : -1498668284,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 9016,
            "rowCount" : 161,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Cross "
          },
          "7" : {
            "sign" : -1999474772,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 2576,
            "rowCount" : 161,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [count(1) AS h8_30_to_9#592L], HashAggregate(keys=[], functions=[count(1)]) "
          },
          "3" : {
            "sign" : 54628865,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 7728,
            "rowCount" : 161,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Cross "
          }
        },
        "links" : [ {
          "fromId" : 7,
          "fromName" : "LogicalQueryStage",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "LogicalQueryStage",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Join",
          "toId" : 5,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "LogicalQueryStage",
          "toId" : 5,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Join",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "LogicalQueryStage",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Join",
          "toId" : 3,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "LogicalQueryStage",
          "toId" : 3,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Join",
          "toId" : 2,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 12,
          "fromName" : "LogicalQueryStage",
          "toId" : 2,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Join",
          "toId" : 1,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 13,
          "fromName" : "LogicalQueryStage",
          "toId" : 1,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Join",
          "toId" : 0,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 14,
          "fromName" : "LogicalQueryStage",
          "toId" : 0,
          "toName" : "Join",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Join Cross\n:- Join Cross\n:  :- Join Cross\n:  :  :- Join Cross\n:  :  :  :- Join Cross\n:  :  :  :  :- Join Cross\n:  :  :  :  :  :- Join Cross\n:  :  :  :  :  :  :- LogicalQueryStage Aggregate [count(1) AS h8_30_to_9#592L], HashAggregate(keys=[], functions=[count(1)])\n:  :  :  :  :  :  +- LogicalQueryStage LogicalQueryStage Aggregate [count(1) AS h9_to_9_30#593L], HashAggregate(keys=[], functions=[count(1)]), BroadcastQueryStage 50\n:  :  :  :  :  +- LogicalQueryStage LogicalQueryStage Aggregate [count(1) AS h9_30_to_10#594L], HashAggregate(keys=[], functions=[count(1)]), BroadcastQueryStage 46\n:  :  :  :  +- LogicalQueryStage LogicalQueryStage Aggregate [count(1) AS h10_to_10_30#595L], HashAggregate(keys=[], functions=[count(1)]), BroadcastQueryStage 51\n:  :  :  +- LogicalQueryStage LogicalQueryStage Aggregate [count(1) AS h10_30_to_11#596L], HashAggregate(keys=[], functions=[count(1)]), BroadcastQueryStage 47\n:  :  +- LogicalQueryStage Aggregate [count(1) AS h11_to_11_30#597L], HashAggregate(keys=[], functions=[count(1)])\n:  +- LogicalQueryStage LogicalQueryStage Aggregate [count(1) AS h11_30_to_12#598L], HashAggregate(keys=[], functions=[count(1)]), BroadcastQueryStage 48\n+- LogicalQueryStage LogicalQueryStage Aggregate [count(1) AS h12_to_12_30#599L], HashAggregate(keys=[], functions=[count(1)]), BroadcastQueryStage 49\n"
      },
      "IM" : {
        "inputSizeInBytes" : 5248,
        "inputRowCount" : 328
      },
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 3,
        "FinishedTasksNum" : 159,
        "FinishedTasksTotalTimeInMs" : 54427.0,
        "FinishedTasksDistributionInMs" : [ 173.0, 240.0, 277.0, 338.0, 2596.0 ]
      },
      "StartTimeInMs" : 1702227486568,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 523,
        "IOBytes" : {
          "Total" : 480141243,
          "Details" : {
            "IR" : 480103249,
            "IW" : 0,
            "SR" : 28495,
            "SW" : 9499
          }
        }
      }
    },
    "11" : {
      "LQP" : {
        "operators" : {
          "12" : {
            "sign" : 465392224,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 16,
            "rowCount" : 1,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [count(1) AS h11_to_11_30#597L], HashAggregate(keys=[], functions=[count(1)]) "
          },
          "8" : {
            "sign" : -640907261,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 2576,
            "rowCount" : 161,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: LogicalQueryStage Aggregate [count(1) AS h9_to_9_30#593L], HashAggregate(keys=[], functions=[count(1)]), BroadcastQueryStage 50 "
          },
          "4" : {
            "sign" : -1632486951,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 166931240,
            "rowCount" : 4173281,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Cross "
          },
          "11" : {
            "sign" : 461391639,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 2576,
            "rowCount" : 161,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: LogicalQueryStage Aggregate [count(1) AS h10_30_to_11#596L], HashAggregate(keys=[], functions=[count(1)]), BroadcastQueryStage 47 "
          },
          "9" : {
            "sign" : 1379352947,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 16,
            "rowCount" : 1,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: LogicalQueryStage Aggregate [count(1) AS h9_30_to_10#594L], HashAggregate(keys=[], functions=[count(1)]), BroadcastQueryStage 46 "
          },
          "13" : {
            "sign" : -672490412,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 2576,
            "rowCount" : 161,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: LogicalQueryStage Aggregate [count(1) AS h11_30_to_12#598L], HashAggregate(keys=[], functions=[count(1)]), BroadcastQueryStage 48 "
          },
          "5" : {
            "sign" : 1507049806,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 829472,
            "rowCount" : 25921,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Cross "
          },
          "10" : {
            "sign" : -353051992,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 2576,
            "rowCount" : 161,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: LogicalQueryStage Aggregate [count(1) AS h10_to_10_30#595L], HashAggregate(keys=[], functions=[count(1)]), BroadcastQueryStage 51 "
          },
          "6" : {
            "sign" : -612370776,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 622104,
            "rowCount" : 25921,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Cross "
          },
          "1" : {
            "sign" : 1275613619,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 6923239475264,
            "rowCount" : 108175616801,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Cross "
          },
          "14" : {
            "sign" : -222721313,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 2576,
            "rowCount" : 161,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: LogicalQueryStage Aggregate [count(1) AS h12_to_12_30#599L], HashAggregate(keys=[], functions=[count(1)]), BroadcastQueryStage 49 "
          },
          "0" : {
            "sign" : -1699269413,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 1253971749957192,
            "rowCount" : 17416274304961,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Cross "
          },
          "2" : {
            "sign" : -1498668284,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 37626301496,
            "rowCount" : 671898241,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Cross "
          },
          "7" : {
            "sign" : -1999474772,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 2576,
            "rowCount" : 161,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [count(1) AS h8_30_to_9#592L], HashAggregate(keys=[], functions=[count(1)]) "
          },
          "3" : {
            "sign" : 54628865,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 32251115568,
            "rowCount" : 671898241,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Cross "
          }
        },
        "links" : [ {
          "fromId" : 7,
          "fromName" : "LogicalQueryStage",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "LogicalQueryStage",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Join",
          "toId" : 5,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "LogicalQueryStage",
          "toId" : 5,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Join",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "LogicalQueryStage",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Join",
          "toId" : 3,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "LogicalQueryStage",
          "toId" : 3,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Join",
          "toId" : 2,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 12,
          "fromName" : "LogicalQueryStage",
          "toId" : 2,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Join",
          "toId" : 1,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 13,
          "fromName" : "LogicalQueryStage",
          "toId" : 1,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Join",
          "toId" : 0,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 14,
          "fromName" : "LogicalQueryStage",
          "toId" : 0,
          "toName" : "Join",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Join Cross\n:- Join Cross\n:  :- Join Cross\n:  :  :- Join Cross\n:  :  :  :- Join Cross\n:  :  :  :  :- Join Cross\n:  :  :  :  :  :- Join Cross\n:  :  :  :  :  :  :- LogicalQueryStage Aggregate [count(1) AS h8_30_to_9#592L], HashAggregate(keys=[], functions=[count(1)])\n:  :  :  :  :  :  +- LogicalQueryStage LogicalQueryStage Aggregate [count(1) AS h9_to_9_30#593L], HashAggregate(keys=[], functions=[count(1)]), BroadcastQueryStage 50\n:  :  :  :  :  +- LogicalQueryStage LogicalQueryStage Aggregate [count(1) AS h9_30_to_10#594L], HashAggregate(keys=[], functions=[count(1)]), BroadcastQueryStage 46\n:  :  :  :  +- LogicalQueryStage LogicalQueryStage Aggregate [count(1) AS h10_to_10_30#595L], HashAggregate(keys=[], functions=[count(1)]), BroadcastQueryStage 51\n:  :  :  +- LogicalQueryStage LogicalQueryStage Aggregate [count(1) AS h10_30_to_11#596L], HashAggregate(keys=[], functions=[count(1)]), BroadcastQueryStage 47\n:  :  +- LogicalQueryStage Aggregate [count(1) AS h11_to_11_30#597L], HashAggregate(keys=[], functions=[count(1)])\n:  +- LogicalQueryStage LogicalQueryStage Aggregate [count(1) AS h11_30_to_12#598L], HashAggregate(keys=[], functions=[count(1)]), BroadcastQueryStage 48\n+- LogicalQueryStage LogicalQueryStage Aggregate [count(1) AS h12_to_12_30#599L], HashAggregate(keys=[], functions=[count(1)]), BroadcastQueryStage 49\n"
      },
      "IM" : {
        "inputSizeInBytes" : 15488,
        "inputRowCount" : 968
      },
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 10,
        "FinishedTasksNum" : 156,
        "FinishedTasksTotalTimeInMs" : 53537.0,
        "FinishedTasksDistributionInMs" : [ 173.0, 240.0, 276.0, 352.0, 2596.0 ]
      },
      "StartTimeInMs" : 1702227486500,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 591,
        "IOBytes" : {
          "Total" : 480179238,
          "Details" : {
            "IR" : 480103249,
            "IW" : 0,
            "SR" : 66490,
            "SW" : 9499
          }
        }
      }
    },
    "9" : {
      "LQP" : {
        "operators" : {
          "12" : {
            "sign" : 465392224,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 16,
            "rowCount" : 1,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [count(1) AS h11_to_11_30#597L], HashAggregate(keys=[], functions=[count(1)]) "
          },
          "8" : {
            "sign" : -260755430,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 2576,
            "rowCount" : 161,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [count(1) AS h9_to_9_30#593L], HashAggregate(keys=[], functions=[count(1)]) "
          },
          "4" : {
            "sign" : -1554653464,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 166931240,
            "rowCount" : 4173281,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Cross "
          },
          "11" : {
            "sign" : 461391639,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 2576,
            "rowCount" : 161,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: LogicalQueryStage Aggregate [count(1) AS h10_30_to_11#596L], HashAggregate(keys=[], functions=[count(1)]), BroadcastQueryStage 47 "
          },
          "9" : {
            "sign" : 1379352947,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 2576,
            "rowCount" : 161,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: LogicalQueryStage Aggregate [count(1) AS h9_30_to_10#594L], HashAggregate(keys=[], functions=[count(1)]), BroadcastQueryStage 46 "
          },
          "13" : {
            "sign" : -672490412,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 2576,
            "rowCount" : 161,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: LogicalQueryStage Aggregate [count(1) AS h11_30_to_12#598L], HashAggregate(keys=[], functions=[count(1)]), BroadcastQueryStage 48 "
          },
          "5" : {
            "sign" : 339560869,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 133544992,
            "rowCount" : 4173281,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Cross "
          },
          "10" : {
            "sign" : 524712160,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 16,
            "rowCount" : 1,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [count(1) AS h10_to_10_30#595L], HashAggregate(keys=[], functions=[count(1)]) "
          },
          "6" : {
            "sign" : 273911039,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 622104,
            "rowCount" : 25921,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Cross "
          },
          "1" : {
            "sign" : 1031395714,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 6923239475264,
            "rowCount" : 108175616801,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Cross "
          },
          "14" : {
            "sign" : -222721313,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 2576,
            "rowCount" : 161,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: LogicalQueryStage Aggregate [count(1) AS h12_to_12_30#599L], HashAggregate(keys=[], functions=[count(1)]), BroadcastQueryStage 49 "
          },
          "0" : {
            "sign" : 2029899114,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 1253971749957192,
            "rowCount" : 17416274304961,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Cross "
          },
          "2" : {
            "sign" : -587683179,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 37626301496,
            "rowCount" : 671898241,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Cross "
          },
          "7" : {
            "sign" : -1999474772,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 2576,
            "rowCount" : 161,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [count(1) AS h8_30_to_9#592L], HashAggregate(keys=[], functions=[count(1)]) "
          },
          "3" : {
            "sign" : -816383406,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 32251115568,
            "rowCount" : 671898241,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Cross "
          }
        },
        "links" : [ {
          "fromId" : 7,
          "fromName" : "LogicalQueryStage",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "LogicalQueryStage",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Join",
          "toId" : 5,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "LogicalQueryStage",
          "toId" : 5,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Join",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "LogicalQueryStage",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Join",
          "toId" : 3,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "LogicalQueryStage",
          "toId" : 3,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Join",
          "toId" : 2,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 12,
          "fromName" : "LogicalQueryStage",
          "toId" : 2,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Join",
          "toId" : 1,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 13,
          "fromName" : "LogicalQueryStage",
          "toId" : 1,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Join",
          "toId" : 0,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 14,
          "fromName" : "LogicalQueryStage",
          "toId" : 0,
          "toName" : "Join",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Join Cross\n:- Join Cross\n:  :- Join Cross\n:  :  :- Join Cross\n:  :  :  :- Join Cross\n:  :  :  :  :- Join Cross\n:  :  :  :  :  :- Join Cross\n:  :  :  :  :  :  :- LogicalQueryStage Aggregate [count(1) AS h8_30_to_9#592L], HashAggregate(keys=[], functions=[count(1)])\n:  :  :  :  :  :  +- LogicalQueryStage Aggregate [count(1) AS h9_to_9_30#593L], HashAggregate(keys=[], functions=[count(1)])\n:  :  :  :  :  +- LogicalQueryStage LogicalQueryStage Aggregate [count(1) AS h9_30_to_10#594L], HashAggregate(keys=[], functions=[count(1)]), BroadcastQueryStage 46\n:  :  :  :  +- LogicalQueryStage Aggregate [count(1) AS h10_to_10_30#595L], HashAggregate(keys=[], functions=[count(1)])\n:  :  :  +- LogicalQueryStage LogicalQueryStage Aggregate [count(1) AS h10_30_to_11#596L], HashAggregate(keys=[], functions=[count(1)]), BroadcastQueryStage 47\n:  :  +- LogicalQueryStage Aggregate [count(1) AS h11_to_11_30#597L], HashAggregate(keys=[], functions=[count(1)])\n:  +- LogicalQueryStage LogicalQueryStage Aggregate [count(1) AS h11_30_to_12#598L], HashAggregate(keys=[], functions=[count(1)]), BroadcastQueryStage 48\n+- LogicalQueryStage LogicalQueryStage Aggregate [count(1) AS h12_to_12_30#599L], HashAggregate(keys=[], functions=[count(1)]), BroadcastQueryStage 49\n"
      },
      "IM" : {
        "inputSizeInBytes" : 15488,
        "inputRowCount" : 968
      },
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 16,
        "FinishedTasksNum" : 14,
        "FinishedTasksTotalTimeInMs" : 3783.0,
        "FinishedTasksDistributionInMs" : [ 178.0, 245.0, 267.0, 293.0, 386.0 ]
      },
      "StartTimeInMs" : 1702227478911,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 8180,
        "IOBytes" : {
          "Total" : 960301484,
          "Details" : {
            "IR" : 960206498,
            "IW" : 0,
            "SR" : 75988,
            "SW" : 18998
          }
        }
      }
    },
    "13" : {
      "LQP" : {
        "operators" : {
          "12" : {
            "sign" : 465392224,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 16,
            "rowCount" : 1,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [count(1) AS h11_to_11_30#597L], HashAggregate(keys=[], functions=[count(1)]) "
          },
          "8" : {
            "sign" : -640907261,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 2576,
            "rowCount" : 161,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: LogicalQueryStage Aggregate [count(1) AS h9_to_9_30#593L], HashAggregate(keys=[], functions=[count(1)]), BroadcastQueryStage 50 "
          },
          "4" : {
            "sign" : -1632486951,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 1036840,
            "rowCount" : 25921,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Cross "
          },
          "11" : {
            "sign" : 461391639,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 16,
            "rowCount" : 1,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: LogicalQueryStage Aggregate [count(1) AS h10_30_to_11#596L], HashAggregate(keys=[], functions=[count(1)]), BroadcastQueryStage 47 "
          },
          "9" : {
            "sign" : 1379352947,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 16,
            "rowCount" : 1,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: LogicalQueryStage Aggregate [count(1) AS h9_30_to_10#594L], HashAggregate(keys=[], functions=[count(1)]), BroadcastQueryStage 46 "
          },
          "13" : {
            "sign" : -672490412,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 2576,
            "rowCount" : 161,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: LogicalQueryStage Aggregate [count(1) AS h11_30_to_12#598L], HashAggregate(keys=[], functions=[count(1)]), BroadcastQueryStage 48 "
          },
          "5" : {
            "sign" : 1507049806,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 829472,
            "rowCount" : 25921,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Cross "
          },
          "10" : {
            "sign" : -353051992,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 16,
            "rowCount" : 1,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: LogicalQueryStage Aggregate [count(1) AS h10_to_10_30#595L], HashAggregate(keys=[], functions=[count(1)]), BroadcastQueryStage 51 "
          },
          "6" : {
            "sign" : -612370776,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 622104,
            "rowCount" : 25921,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Cross "
          },
          "1" : {
            "sign" : 1275613619,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 267089984,
            "rowCount" : 4173281,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Cross "
          },
          "14" : {
            "sign" : -222721313,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 2576,
            "rowCount" : 161,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: LogicalQueryStage Aggregate [count(1) AS h12_to_12_30#599L], HashAggregate(keys=[], functions=[count(1)]), BroadcastQueryStage 49 "
          },
          "0" : {
            "sign" : -1699269413,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 48376673352,
            "rowCount" : 671898241,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Cross "
          },
          "2" : {
            "sign" : -1498668284,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 1451576,
            "rowCount" : 25921,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Cross "
          },
          "7" : {
            "sign" : -1999474772,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 2576,
            "rowCount" : 161,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [count(1) AS h8_30_to_9#592L], HashAggregate(keys=[], functions=[count(1)]) "
          },
          "3" : {
            "sign" : 54628865,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 1244208,
            "rowCount" : 25921,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Cross "
          }
        },
        "links" : [ {
          "fromId" : 7,
          "fromName" : "LogicalQueryStage",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "LogicalQueryStage",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Join",
          "toId" : 5,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "LogicalQueryStage",
          "toId" : 5,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Join",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "LogicalQueryStage",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Join",
          "toId" : 3,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "LogicalQueryStage",
          "toId" : 3,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Join",
          "toId" : 2,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 12,
          "fromName" : "LogicalQueryStage",
          "toId" : 2,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Join",
          "toId" : 1,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 13,
          "fromName" : "LogicalQueryStage",
          "toId" : 1,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Join",
          "toId" : 0,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 14,
          "fromName" : "LogicalQueryStage",
          "toId" : 0,
          "toName" : "Join",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Join Cross\n:- Join Cross\n:  :- Join Cross\n:  :  :- Join Cross\n:  :  :  :- Join Cross\n:  :  :  :  :- Join Cross\n:  :  :  :  :  :- Join Cross\n:  :  :  :  :  :  :- LogicalQueryStage Aggregate [count(1) AS h8_30_to_9#592L], HashAggregate(keys=[], functions=[count(1)])\n:  :  :  :  :  :  +- LogicalQueryStage LogicalQueryStage Aggregate [count(1) AS h9_to_9_30#593L], HashAggregate(keys=[], functions=[count(1)]), BroadcastQueryStage 50\n:  :  :  :  :  +- LogicalQueryStage LogicalQueryStage Aggregate [count(1) AS h9_30_to_10#594L], HashAggregate(keys=[], functions=[count(1)]), BroadcastQueryStage 46\n:  :  :  :  +- LogicalQueryStage LogicalQueryStage Aggregate [count(1) AS h10_to_10_30#595L], HashAggregate(keys=[], functions=[count(1)]), BroadcastQueryStage 51\n:  :  :  +- LogicalQueryStage LogicalQueryStage Aggregate [count(1) AS h10_30_to_11#596L], HashAggregate(keys=[], functions=[count(1)]), BroadcastQueryStage 47\n:  :  +- LogicalQueryStage Aggregate [count(1) AS h11_to_11_30#597L], HashAggregate(keys=[], functions=[count(1)])\n:  +- LogicalQueryStage LogicalQueryStage Aggregate [count(1) AS h11_30_to_12#598L], HashAggregate(keys=[], functions=[count(1)]), BroadcastQueryStage 48\n+- LogicalQueryStage LogicalQueryStage Aggregate [count(1) AS h12_to_12_30#599L], HashAggregate(keys=[], functions=[count(1)]), BroadcastQueryStage 49\n"
      },
      "IM" : {
        "inputSizeInBytes" : 10368,
        "inputRowCount" : 648
      },
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 6,
        "FinishedTasksNum" : 158,
        "FinishedTasksTotalTimeInMs" : 54150.0,
        "FinishedTasksDistributionInMs" : [ 173.0, 240.0, 279.0, 338.0, 2596.0 ]
      },
      "StartTimeInMs" : 1702227486546,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 545,
        "IOBytes" : {
          "Total" : 480160240,
          "Details" : {
            "IR" : 480103249,
            "IW" : 0,
            "SR" : 47492,
            "SW" : 9499
          }
        }
      }
    },
    "16" : {
      "LQP" : {
        "operators" : {
          "12" : {
            "sign" : 465392224,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 16,
            "rowCount" : 1,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [count(1) AS h11_to_11_30#597L], HashAggregate(keys=[], functions=[count(1)]) "
          },
          "8" : {
            "sign" : -640907261,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 16,
            "rowCount" : 1,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: LogicalQueryStage Aggregate [count(1) AS h9_to_9_30#593L], HashAggregate(keys=[], functions=[count(1)]), BroadcastQueryStage 50 "
          },
          "4" : {
            "sign" : -1632486951,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 6440,
            "rowCount" : 161,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Cross "
          },
          "11" : {
            "sign" : 461391639,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 16,
            "rowCount" : 1,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: LogicalQueryStage Aggregate [count(1) AS h10_30_to_11#596L], HashAggregate(keys=[], functions=[count(1)]), BroadcastQueryStage 47 "
          },
          "9" : {
            "sign" : 1379352947,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 16,
            "rowCount" : 1,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: LogicalQueryStage Aggregate [count(1) AS h9_30_to_10#594L], HashAggregate(keys=[], functions=[count(1)]), BroadcastQueryStage 46 "
          },
          "13" : {
            "sign" : -672490412,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 16,
            "rowCount" : 1,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: LogicalQueryStage Aggregate [count(1) AS h11_30_to_12#598L], HashAggregate(keys=[], functions=[count(1)]), BroadcastQueryStage 48 "
          },
          "5" : {
            "sign" : 1507049806,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 5152,
            "rowCount" : 161,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Cross "
          },
          "10" : {
            "sign" : -353051992,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 16,
            "rowCount" : 1,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: LogicalQueryStage Aggregate [count(1) AS h10_to_10_30#595L], HashAggregate(keys=[], functions=[count(1)]), BroadcastQueryStage 51 "
          },
          "6" : {
            "sign" : -612370776,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 3864,
            "rowCount" : 161,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Cross "
          },
          "1" : {
            "sign" : 1275613619,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 10304,
            "rowCount" : 161,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Cross "
          },
          "14" : {
            "sign" : -222721313,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 16,
            "rowCount" : 1,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: LogicalQueryStage Aggregate [count(1) AS h12_to_12_30#599L], HashAggregate(keys=[], functions=[count(1)]), BroadcastQueryStage 49 "
          },
          "0" : {
            "sign" : -1699269413,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 11592,
            "rowCount" : 161,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Cross "
          },
          "2" : {
            "sign" : -1498668284,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 9016,
            "rowCount" : 161,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Cross "
          },
          "7" : {
            "sign" : -1999474772,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 2576,
            "rowCount" : 161,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [count(1) AS h8_30_to_9#592L], HashAggregate(keys=[], functions=[count(1)]) "
          },
          "3" : {
            "sign" : 54628865,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 7728,
            "rowCount" : 161,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Cross "
          }
        },
        "links" : [ {
          "fromId" : 7,
          "fromName" : "LogicalQueryStage",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "LogicalQueryStage",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Join",
          "toId" : 5,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "LogicalQueryStage",
          "toId" : 5,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Join",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "LogicalQueryStage",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Join",
          "toId" : 3,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "LogicalQueryStage",
          "toId" : 3,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Join",
          "toId" : 2,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 12,
          "fromName" : "LogicalQueryStage",
          "toId" : 2,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Join",
          "toId" : 1,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 13,
          "fromName" : "LogicalQueryStage",
          "toId" : 1,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Join",
          "toId" : 0,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 14,
          "fromName" : "LogicalQueryStage",
          "toId" : 0,
          "toName" : "Join",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Join Cross\n:- Join Cross\n:  :- Join Cross\n:  :  :- Join Cross\n:  :  :  :- Join Cross\n:  :  :  :  :- Join Cross\n:  :  :  :  :  :- Join Cross\n:  :  :  :  :  :  :- LogicalQueryStage Aggregate [count(1) AS h8_30_to_9#592L], HashAggregate(keys=[], functions=[count(1)])\n:  :  :  :  :  :  +- LogicalQueryStage LogicalQueryStage Aggregate [count(1) AS h9_to_9_30#593L], HashAggregate(keys=[], functions=[count(1)]), BroadcastQueryStage 50\n:  :  :  :  :  +- LogicalQueryStage LogicalQueryStage Aggregate [count(1) AS h9_30_to_10#594L], HashAggregate(keys=[], functions=[count(1)]), BroadcastQueryStage 46\n:  :  :  :  +- LogicalQueryStage LogicalQueryStage Aggregate [count(1) AS h10_to_10_30#595L], HashAggregate(keys=[], functions=[count(1)]), BroadcastQueryStage 51\n:  :  :  +- LogicalQueryStage LogicalQueryStage Aggregate [count(1) AS h10_30_to_11#596L], HashAggregate(keys=[], functions=[count(1)]), BroadcastQueryStage 47\n:  :  +- LogicalQueryStage Aggregate [count(1) AS h11_to_11_30#597L], HashAggregate(keys=[], functions=[count(1)])\n:  +- LogicalQueryStage LogicalQueryStage Aggregate [count(1) AS h11_30_to_12#598L], HashAggregate(keys=[], functions=[count(1)]), BroadcastQueryStage 48\n+- LogicalQueryStage LogicalQueryStage Aggregate [count(1) AS h12_to_12_30#599L], HashAggregate(keys=[], functions=[count(1)]), BroadcastQueryStage 49\n"
      },
      "IM" : {
        "inputSizeInBytes" : 2688,
        "inputRowCount" : 168
      },
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 2,
        "FinishedTasksNum" : 159,
        "FinishedTasksTotalTimeInMs" : 54427.0,
        "FinishedTasksDistributionInMs" : [ 173.0, 240.0, 277.0, 338.0, 2596.0 ]
      },
      "StartTimeInMs" : 1702227486578,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 513,
        "IOBytes" : {
          "Total" : 480131746,
          "Details" : {
            "IR" : 480103249,
            "IW" : 0,
            "SR" : 18998,
            "SW" : 9499
          }
        }
      }
    },
    "5" : {
      "LQP" : {
        "operators" : {
          "12" : {
            "sign" : 465392224,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 16,
            "rowCount" : 1,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [count(1) AS h11_to_11_30#597L], HashAggregate(keys=[], functions=[count(1)]) "
          },
          "8" : {
            "sign" : -260755430,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 2576,
            "rowCount" : 161,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [count(1) AS h9_to_9_30#593L], HashAggregate(keys=[], functions=[count(1)]) "
          },
          "4" : {
            "sign" : 1808728296,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 1036840,
            "rowCount" : 25921,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Cross "
          },
          "11" : {
            "sign" : 655452758,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 16,
            "rowCount" : 1,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [count(1) AS h10_30_to_11#596L], HashAggregate(keys=[], functions=[count(1)]) "
          },
          "9" : {
            "sign" : -279950413,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 2576,
            "rowCount" : 161,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [count(1) AS h9_30_to_10#594L], HashAggregate(keys=[], functions=[count(1)]) "
          },
          "13" : {
            "sign" : 403683700,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 16,
            "rowCount" : 1,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [count(1) AS h11_30_to_12#598L], HashAggregate(keys=[], functions=[count(1)]) "
          },
          "5" : {
            "sign" : -77671835,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 829472,
            "rowCount" : 25921,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Cross "
          },
          "10" : {
            "sign" : 524712160,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 16,
            "rowCount" : 1,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [count(1) AS h10_to_10_30#595L], HashAggregate(keys=[], functions=[count(1)]) "
          },
          "6" : {
            "sign" : 273911039,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 3864,
            "rowCount" : 161,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Cross "
          },
          "1" : {
            "sign" : -1973901373,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 1658944,
            "rowCount" : 25921,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Cross "
          },
          "14" : {
            "sign" : 406072288,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 16,
            "rowCount" : 1,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [count(1) AS h12_to_12_30#599L], HashAggregate(keys=[], functions=[count(1)]) "
          },
          "0" : {
            "sign" : 140829322,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 1866312,
            "rowCount" : 25921,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Cross "
          },
          "2" : {
            "sign" : -185892426,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 1451576,
            "rowCount" : 25921,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Cross "
          },
          "7" : {
            "sign" : -1999474772,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 16,
            "rowCount" : 1,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [count(1) AS h8_30_to_9#592L], HashAggregate(keys=[], functions=[count(1)]) "
          },
          "3" : {
            "sign" : 771601937,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 1244208,
            "rowCount" : 25921,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Cross "
          }
        },
        "links" : [ {
          "fromId" : 7,
          "fromName" : "LogicalQueryStage",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "LogicalQueryStage",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Join",
          "toId" : 5,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "LogicalQueryStage",
          "toId" : 5,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Join",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "LogicalQueryStage",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Join",
          "toId" : 3,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "LogicalQueryStage",
          "toId" : 3,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Join",
          "toId" : 2,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 12,
          "fromName" : "LogicalQueryStage",
          "toId" : 2,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Join",
          "toId" : 1,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 13,
          "fromName" : "LogicalQueryStage",
          "toId" : 1,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Join",
          "toId" : 0,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 14,
          "fromName" : "LogicalQueryStage",
          "toId" : 0,
          "toName" : "Join",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Join Cross\n:- Join Cross\n:  :- Join Cross\n:  :  :- Join Cross\n:  :  :  :- Join Cross\n:  :  :  :  :- Join Cross\n:  :  :  :  :  :- Join Cross\n:  :  :  :  :  :  :- LogicalQueryStage Aggregate [count(1) AS h8_30_to_9#592L], HashAggregate(keys=[], functions=[count(1)])\n:  :  :  :  :  :  +- LogicalQueryStage Aggregate [count(1) AS h9_to_9_30#593L], HashAggregate(keys=[], functions=[count(1)])\n:  :  :  :  :  +- LogicalQueryStage Aggregate [count(1) AS h9_30_to_10#594L], HashAggregate(keys=[], functions=[count(1)])\n:  :  :  :  +- LogicalQueryStage Aggregate [count(1) AS h10_to_10_30#595L], HashAggregate(keys=[], functions=[count(1)])\n:  :  :  +- LogicalQueryStage Aggregate [count(1) AS h10_30_to_11#596L], HashAggregate(keys=[], functions=[count(1)])\n:  :  +- LogicalQueryStage Aggregate [count(1) AS h11_to_11_30#597L], HashAggregate(keys=[], functions=[count(1)])\n:  +- LogicalQueryStage Aggregate [count(1) AS h11_30_to_12#598L], HashAggregate(keys=[], functions=[count(1)])\n+- LogicalQueryStage Aggregate [count(1) AS h12_to_12_30#599L], HashAggregate(keys=[], functions=[count(1)])\n"
      },
      "IM" : {
        "inputSizeInBytes" : 5248,
        "inputRowCount" : 328
      },
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 17,
        "FinishedTasksNum" : 83,
        "FinishedTasksTotalTimeInMs" : 27822.0,
        "FinishedTasksDistributionInMs" : [ 155.0, 201.0, 225.0, 306.0, 2017.0 ]
      },
      "StartTimeInMs" : 1702227469011,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 18080,
        "IOBytes" : {
          "Total" : 2880752473,
          "Details" : {
            "IR" : 2880619494,
            "IW" : 0,
            "SR" : 75988,
            "SW" : 56991
          }
        }
      }
    },
    "10" : {
      "LQP" : {
        "operators" : {
          "12" : {
            "sign" : 465392224,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 16,
            "rowCount" : 1,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [count(1) AS h11_to_11_30#597L], HashAggregate(keys=[], functions=[count(1)]) "
          },
          "8" : {
            "sign" : -640907261,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 2576,
            "rowCount" : 161,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: LogicalQueryStage Aggregate [count(1) AS h9_to_9_30#593L], HashAggregate(keys=[], functions=[count(1)]), BroadcastQueryStage 50 "
          },
          "4" : {
            "sign" : -218303151,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 26875929640,
            "rowCount" : 671898241,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Cross "
          },
          "11" : {
            "sign" : 461391639,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 2576,
            "rowCount" : 161,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: LogicalQueryStage Aggregate [count(1) AS h10_30_to_11#596L], HashAggregate(keys=[], functions=[count(1)]), BroadcastQueryStage 47 "
          },
          "9" : {
            "sign" : 1379352947,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 2576,
            "rowCount" : 161,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: LogicalQueryStage Aggregate [count(1) AS h9_30_to_10#594L], HashAggregate(keys=[], functions=[count(1)]), BroadcastQueryStage 46 "
          },
          "13" : {
            "sign" : -672490412,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 2576,
            "rowCount" : 161,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: LogicalQueryStage Aggregate [count(1) AS h11_30_to_12#598L], HashAggregate(keys=[], functions=[count(1)]), BroadcastQueryStage 48 "
          },
          "5" : {
            "sign" : 1507049806,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 133544992,
            "rowCount" : 4173281,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Cross "
          },
          "10" : {
            "sign" : 524712160,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 2576,
            "rowCount" : 161,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [count(1) AS h10_to_10_30#595L], HashAggregate(keys=[], functions=[count(1)]) "
          },
          "6" : {
            "sign" : -612370776,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 622104,
            "rowCount" : 25921,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Cross "
          },
          "1" : {
            "sign" : 1705454187,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 1114641555517504,
            "rowCount" : 17416274304961,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Cross "
          },
          "14" : {
            "sign" : -222721313,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 2576,
            "rowCount" : 161,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: LogicalQueryStage Aggregate [count(1) AS h12_to_12_30#599L], HashAggregate(keys=[], functions=[count(1)]), BroadcastQueryStage 49 "
          },
          "0" : {
            "sign" : 9401427,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 201889451743107912,
            "rowCount" : 2804020163098721,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Cross "
          },
          "2" : {
            "sign" : 442007820,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 6057834540856,
            "rowCount" : 108175616801,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Cross "
          },
          "7" : {
            "sign" : -1999474772,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 2576,
            "rowCount" : 161,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [count(1) AS h8_30_to_9#592L], HashAggregate(keys=[], functions=[count(1)]) "
          },
          "3" : {
            "sign" : 119254473,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 5192429606448,
            "rowCount" : 108175616801,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Cross "
          }
        },
        "links" : [ {
          "fromId" : 7,
          "fromName" : "LogicalQueryStage",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "LogicalQueryStage",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Join",
          "toId" : 5,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "LogicalQueryStage",
          "toId" : 5,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Join",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "LogicalQueryStage",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Join",
          "toId" : 3,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "LogicalQueryStage",
          "toId" : 3,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Join",
          "toId" : 2,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 12,
          "fromName" : "LogicalQueryStage",
          "toId" : 2,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Join",
          "toId" : 1,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 13,
          "fromName" : "LogicalQueryStage",
          "toId" : 1,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Join",
          "toId" : 0,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 14,
          "fromName" : "LogicalQueryStage",
          "toId" : 0,
          "toName" : "Join",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Join Cross\n:- Join Cross\n:  :- Join Cross\n:  :  :- Join Cross\n:  :  :  :- Join Cross\n:  :  :  :  :- Join Cross\n:  :  :  :  :  :- Join Cross\n:  :  :  :  :  :  :- LogicalQueryStage Aggregate [count(1) AS h8_30_to_9#592L], HashAggregate(keys=[], functions=[count(1)])\n:  :  :  :  :  :  +- LogicalQueryStage LogicalQueryStage Aggregate [count(1) AS h9_to_9_30#593L], HashAggregate(keys=[], functions=[count(1)]), BroadcastQueryStage 50\n:  :  :  :  :  +- LogicalQueryStage LogicalQueryStage Aggregate [count(1) AS h9_30_to_10#594L], HashAggregate(keys=[], functions=[count(1)]), BroadcastQueryStage 46\n:  :  :  :  +- LogicalQueryStage Aggregate [count(1) AS h10_to_10_30#595L], HashAggregate(keys=[], functions=[count(1)])\n:  :  :  +- LogicalQueryStage LogicalQueryStage Aggregate [count(1) AS h10_30_to_11#596L], HashAggregate(keys=[], functions=[count(1)]), BroadcastQueryStage 47\n:  :  +- LogicalQueryStage Aggregate [count(1) AS h11_to_11_30#597L], HashAggregate(keys=[], functions=[count(1)])\n:  +- LogicalQueryStage LogicalQueryStage Aggregate [count(1) AS h11_30_to_12#598L], HashAggregate(keys=[], functions=[count(1)]), BroadcastQueryStage 48\n+- LogicalQueryStage LogicalQueryStage Aggregate [count(1) AS h12_to_12_30#599L], HashAggregate(keys=[], functions=[count(1)]), BroadcastQueryStage 49\n"
      },
      "IM" : {
        "inputSizeInBytes" : 18048,
        "inputRowCount" : 1128
      },
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 16,
        "FinishedTasksNum" : 30,
        "FinishedTasksTotalTimeInMs" : 9046.0,
        "FinishedTasksDistributionInMs" : [ 185.0, 244.0, 271.0, 338.0, 541.0 ]
      },
      "StartTimeInMs" : 1702227483715,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 3376,
        "IOBytes" : {
          "Total" : 480188736,
          "Details" : {
            "IR" : 480103249,
            "IW" : 0,
            "SR" : 75988,
            "SW" : 9499
          }
        }
      }
    },
    "6" : {
      "LQP" : {
        "operators" : {
          "12" : {
            "sign" : 465392224,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 16,
            "rowCount" : 1,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [count(1) AS h11_to_11_30#597L], HashAggregate(keys=[], functions=[count(1)]) "
          },
          "8" : {
            "sign" : -260755430,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 2576,
            "rowCount" : 161,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [count(1) AS h9_to_9_30#593L], HashAggregate(keys=[], functions=[count(1)]) "
          },
          "4" : {
            "sign" : -1554653464,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 1036840,
            "rowCount" : 25921,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Cross "
          },
          "11" : {
            "sign" : 655452758,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 2576,
            "rowCount" : 161,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [count(1) AS h10_30_to_11#596L], HashAggregate(keys=[], functions=[count(1)]) "
          },
          "9" : {
            "sign" : 1379352947,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 2576,
            "rowCount" : 161,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: LogicalQueryStage Aggregate [count(1) AS h9_30_to_10#594L], HashAggregate(keys=[], functions=[count(1)]), BroadcastQueryStage 46 "
          },
          "13" : {
            "sign" : 403683700,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 16,
            "rowCount" : 1,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [count(1) AS h11_30_to_12#598L], HashAggregate(keys=[], functions=[count(1)]) "
          },
          "5" : {
            "sign" : 339560869,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 829472,
            "rowCount" : 25921,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Cross "
          },
          "10" : {
            "sign" : 524712160,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 16,
            "rowCount" : 1,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [count(1) AS h10_to_10_30#595L], HashAggregate(keys=[], functions=[count(1)]) "
          },
          "6" : {
            "sign" : 273911039,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 3864,
            "rowCount" : 161,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Cross "
          },
          "1" : {
            "sign" : -496406781,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 267089984,
            "rowCount" : 4173281,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Cross "
          },
          "14" : {
            "sign" : 406072288,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 16,
            "rowCount" : 1,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [count(1) AS h12_to_12_30#599L], HashAggregate(keys=[], functions=[count(1)]) "
          },
          "0" : {
            "sign" : -436494198,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 300476232,
            "rowCount" : 4173281,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Cross "
          },
          "2" : {
            "sign" : -2082602186,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 233703736,
            "rowCount" : 4173281,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Cross "
          },
          "7" : {
            "sign" : -1999474772,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 16,
            "rowCount" : 1,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [count(1) AS h8_30_to_9#592L], HashAggregate(keys=[], functions=[count(1)]) "
          },
          "3" : {
            "sign" : -500988079,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 200317488,
            "rowCount" : 4173281,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Cross "
          }
        },
        "links" : [ {
          "fromId" : 7,
          "fromName" : "LogicalQueryStage",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "LogicalQueryStage",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Join",
          "toId" : 5,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "LogicalQueryStage",
          "toId" : 5,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Join",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "LogicalQueryStage",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Join",
          "toId" : 3,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "LogicalQueryStage",
          "toId" : 3,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Join",
          "toId" : 2,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 12,
          "fromName" : "LogicalQueryStage",
          "toId" : 2,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Join",
          "toId" : 1,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 13,
          "fromName" : "LogicalQueryStage",
          "toId" : 1,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Join",
          "toId" : 0,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 14,
          "fromName" : "LogicalQueryStage",
          "toId" : 0,
          "toName" : "Join",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Join Cross\n:- Join Cross\n:  :- Join Cross\n:  :  :- Join Cross\n:  :  :  :- Join Cross\n:  :  :  :  :- Join Cross\n:  :  :  :  :  :- Join Cross\n:  :  :  :  :  :  :- LogicalQueryStage Aggregate [count(1) AS h8_30_to_9#592L], HashAggregate(keys=[], functions=[count(1)])\n:  :  :  :  :  :  +- LogicalQueryStage Aggregate [count(1) AS h9_to_9_30#593L], HashAggregate(keys=[], functions=[count(1)])\n:  :  :  :  :  +- LogicalQueryStage LogicalQueryStage Aggregate [count(1) AS h9_30_to_10#594L], HashAggregate(keys=[], functions=[count(1)]), BroadcastQueryStage 46\n:  :  :  :  +- LogicalQueryStage Aggregate [count(1) AS h10_to_10_30#595L], HashAggregate(keys=[], functions=[count(1)])\n:  :  :  +- LogicalQueryStage Aggregate [count(1) AS h10_30_to_11#596L], HashAggregate(keys=[], functions=[count(1)])\n:  :  +- LogicalQueryStage Aggregate [count(1) AS h11_to_11_30#597L], HashAggregate(keys=[], functions=[count(1)])\n:  +- LogicalQueryStage Aggregate [count(1) AS h11_30_to_12#598L], HashAggregate(keys=[], functions=[count(1)])\n+- LogicalQueryStage Aggregate [count(1) AS h12_to_12_30#599L], HashAggregate(keys=[], functions=[count(1)])\n"
      },
      "IM" : {
        "inputSizeInBytes" : 7808,
        "inputRowCount" : 488
      },
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 16,
        "FinishedTasksNum" : 59,
        "FinishedTasksTotalTimeInMs" : 17694.0,
        "FinishedTasksDistributionInMs" : [ 177.0, 218.0, 278.0, 310.0, 1178.0 ]
      },
      "StartTimeInMs" : 1702227471753,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 15338,
        "IOBytes" : {
          "Total" : 2400639725,
          "Details" : {
            "IR" : 2400516245,
            "IW" : 0,
            "SR" : 75988,
            "SW" : 47492
          }
        }
      }
    },
    "1" : {
      "LQP" : {
        "operators" : {
          "45" : {
            "sign" : 2026535322,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1051712,
            "rowCount" : 47,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [s_store_sk#713], BroadcastQueryStage 12 "
          },
          "98" : {
            "sign" : 978734478,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 16,
            "rowCount" : 1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [count(1) AS h12_to_12_30#599L] "
          },
          "34" : {
            "sign" : 1989771144,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 102133115000,
            "rowCount" : 12766639375,
            "isRuntime" : false,
            "predicate" : " (unknown) Project "
          },
          "67" : {
            "sign" : 1064892625,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 38130005144,
            "rowCount" : 250855297,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(ss_hdemo_sk#813) AND (isnotnull(ss_sold_time_sk#809) AND isnotnull(ss_store_sk#815))) "
          },
          "93" : {
            "sign" : -918152691,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 38130005144,
            "rowCount" : 250855297,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(ss_hdemo_sk#947) AND (isnotnull(ss_sold_time_sk#943) AND isnotnull(ss_store_sk#949))) "
          },
          "12" : {
            "sign" : 1026048955,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 4332576176,
            "rowCount" : 270786011,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_hdemo_sk#20, ss_store_sk#22] "
          },
          "66" : {
            "sign" : -1348331344,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 5017105940,
            "rowCount" : 250855297,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_sold_time_sk#809, ss_hdemo_sk#813, ss_store_sk#815] "
          },
          "89" : {
            "sign" : -2041066306,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 5432612500,
            "rowCount" : 271630625,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_hdemo_sk#947 = hd_demo_sk#966) "
          },
          "51" : {
            "sign" : 943638769,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 4332576176,
            "rowCount" : 270786011,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_hdemo_sk#746, ss_store_sk#748] "
          },
          "84" : {
            "sign" : 79386553,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1051712,
            "rowCount" : 47,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [s_store_sk#914], BroadcastQueryStage 27 "
          },
          "8" : {
            "sign" : -808324758,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 102133115000,
            "rowCount" : 12766639375,
            "isRuntime" : false,
            "predicate" : " (unknown) Project "
          },
          "73" : {
            "sign" : 519765418,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 102133115000,
            "rowCount" : 12766639375,
            "isRuntime" : false,
            "predicate" : " (unknown) Project "
          },
          "78" : {
            "sign" : 1908717271,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 6498864264,
            "rowCount" : 270786011,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_time_sk#876 = t_time_sk#904) "
          },
          "19" : {
            "sign" : -459201083,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1051712,
            "rowCount" : 47,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [s_store_sk#54], BroadcastQueryStage 2 "
          },
          "100" : {
            "sign" : -1495655718,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 204266230000,
            "rowCount" : 12766639375,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_store_sk#1016 = s_store_sk#1048) "
          },
          "23" : {
            "sign" : -546611451,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 3259567500,
            "rowCount" : 271630625,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_store_sk#614] "
          },
          "62" : {
            "sign" : 487348375,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 3259567500,
            "rowCount" : 271630625,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_store_sk#815] "
          },
          "4" : {
            "sign" : -1146553186,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 40,
            "rowCount" : 1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Cross "
          },
          "88" : {
            "sign" : 1761045979,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 3259567500,
            "rowCount" : 271630625,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_store_sk#949] "
          },
          "77" : {
            "sign" : -261117538,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 4332576176,
            "rowCount" : 270786011,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_hdemo_sk#880, ss_store_sk#882] "
          },
          "40" : {
            "sign" : 1269516271,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 5017105940,
            "rowCount" : 250855297,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_sold_time_sk#675, ss_hdemo_sk#679, ss_store_sk#681] "
          },
          "110" : {
            "sign" : 977145309,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1051712,
            "rowCount" : 47,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [s_store_sk#1048], BroadcastQueryStage 37 "
          },
          "15" : {
            "sign" : 1156235223,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 38130005144,
            "rowCount" : 250855297,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(ss_hdemo_sk#20) AND (isnotnull(ss_sold_time_sk#16) AND isnotnull(ss_store_sk#22))) "
          },
          "11" : {
            "sign" : 2024072566,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 5432612500,
            "rowCount" : 271630625,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_hdemo_sk#20 = hd_demo_sk#39) "
          },
          "104" : {
            "sign" : 430757074,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 6498864264,
            "rowCount" : 270786011,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_time_sk#1010 = t_time_sk#1038) "
          },
          "90" : {
            "sign" : -1829720947,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 4332576176,
            "rowCount" : 270786011,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_hdemo_sk#947, ss_store_sk#949] "
          },
          "9" : {
            "sign" : 1694061865,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 204266230000,
            "rowCount" : 12766639375,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_store_sk#22 = s_store_sk#54) "
          },
          "44" : {
            "sign" : 619438215,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 20340,
            "rowCount" : 1695,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [hd_demo_sk#698], BroadcastQueryStage 10 "
          },
          "33" : {
            "sign" : -1910435598,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 16,
            "rowCount" : 1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [count(1) AS h9_30_to_10#594L] "
          },
          "22" : {
            "sign" : -1756211101,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 204266230000,
            "rowCount" : 12766639375,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_store_sk#614 = s_store_sk#646) "
          },
          "56" : {
            "sign" : -1264438745,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 24696,
            "rowCount" : 2058,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [t_time_sk#770], BroadcastQueryStage 13 "
          },
          "55" : {
            "sign" : 1437773120,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 43776970976,
            "rowCount" : 288006388,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#742, ss_item_sk#743, ss_customer_sk#744, ss_cdemo_sk#745, ss_hdemo_sk#746, ss_addr_sk#747, ss_store_sk#748, ss_promo_sk#749, ss_ticket_number#750L, ss_quantity#751, ss_wholesale_cost#752, ss_list_price#753, ss_sales_price#754, ss_ext_discount_amt#755, ss_ext_sales_price#756, ss_ext_wholesale_cost#757, ss_ext_list_price#758, ss_ext_tax#759, ss_coupon_amt#760, ss_net_paid#761, ss_net_paid_inc_tax#762, ss_net_profit#763, ss_sold_date_sk#764], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "26" : {
            "sign" : -208305298,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 6498864264,
            "rowCount" : 270786011,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_time_sk#608 = t_time_sk#636) "
          },
          "50" : {
            "sign" : 1162177060,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 5432612500,
            "rowCount" : 271630625,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_hdemo_sk#746 = hd_demo_sk#765) "
          },
          "37" : {
            "sign" : -1235971817,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 5432612500,
            "rowCount" : 271630625,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_hdemo_sk#679 = hd_demo_sk#698) "
          },
          "68" : {
            "sign" : -2000254428,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 43776970976,
            "rowCount" : 288006388,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#809, ss_item_sk#810, ss_customer_sk#811, ss_cdemo_sk#812, ss_hdemo_sk#813, ss_addr_sk#814, ss_store_sk#815, ss_promo_sk#816, ss_ticket_number#817L, ss_quantity#818, ss_wholesale_cost#819, ss_list_price#820, ss_sales_price#821, ss_ext_discount_amt#822, ss_ext_sales_price#823, ss_ext_wholesale_cost#824, ss_ext_list_price#825, ss_ext_tax#826, ss_coupon_amt#827, ss_net_paid#828, ss_net_paid_inc_tax#829, ss_net_profit#830, ss_sold_date_sk#831], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "61" : {
            "sign" : 810836803,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 204266230000,
            "rowCount" : 12766639375,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_store_sk#815 = s_store_sk#847) "
          },
          "107" : {
            "sign" : 1327837637,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 43776970976,
            "rowCount" : 288006388,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#1010, ss_item_sk#1011, ss_customer_sk#1012, ss_cdemo_sk#1013, ss_hdemo_sk#1014, ss_addr_sk#1015, ss_store_sk#1016, ss_promo_sk#1017, ss_ticket_number#1018L, ss_quantity#1019, ss_wholesale_cost#1020, ss_list_price#1021, ss_sales_price#1022, ss_ext_discount_amt#1023, ss_ext_sales_price#1024, ss_ext_wholesale_cost#1025, ss_ext_list_price#1026, ss_ext_tax#1027, ss_coupon_amt#1028, ss_net_paid#1029, ss_net_paid_inc_tax#1030, ss_net_profit#1031, ss_sold_date_sk#1032], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "13" : {
            "sign" : -1660176330,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 6498864264,
            "rowCount" : 270786011,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_time_sk#16 = t_time_sk#44) "
          },
          "46" : {
            "sign" : 250273269,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 16,
            "rowCount" : 1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [count(1) AS h10_to_10_30#595L] "
          },
          "99" : {
            "sign" : -462968903,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 102133115000,
            "rowCount" : 12766639375,
            "isRuntime" : false,
            "predicate" : " (unknown) Project "
          },
          "24" : {
            "sign" : -2050258145,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 5432612500,
            "rowCount" : 271630625,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_hdemo_sk#612 = hd_demo_sk#631) "
          },
          "94" : {
            "sign" : -625696279,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 43776970976,
            "rowCount" : 288006388,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#943, ss_item_sk#944, ss_customer_sk#945, ss_cdemo_sk#946, ss_hdemo_sk#947, ss_addr_sk#948, ss_store_sk#949, ss_promo_sk#950, ss_ticket_number#951L, ss_quantity#952, ss_wholesale_cost#953, ss_list_price#954, ss_sales_price#955, ss_ext_discount_amt#956, ss_ext_sales_price#957, ss_ext_wholesale_cost#958, ss_ext_list_price#959, ss_ext_tax#960, ss_coupon_amt#961, ss_net_paid#962, ss_net_paid_inc_tax#963, ss_net_profit#964, ss_sold_date_sk#965], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "83" : {
            "sign" : -1327710554,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 20340,
            "rowCount" : 1695,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [hd_demo_sk#899], BroadcastQueryStage 25 "
          },
          "35" : {
            "sign" : 953076873,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 204266230000,
            "rowCount" : 12766639375,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_store_sk#681 = s_store_sk#713) "
          },
          "16" : {
            "sign" : 437822322,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 43776970976,
            "rowCount" : 288006388,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#16, ss_item_sk#17, ss_customer_sk#18, ss_cdemo_sk#19, ss_hdemo_sk#20, ss_addr_sk#21, ss_store_sk#22, ss_promo_sk#23, ss_ticket_number#24L, ss_quantity#25, ss_wholesale_cost#26, ss_list_price#27, ss_sales_price#28, ss_ext_discount_amt#29, ss_ext_sales_price#30, ss_ext_wholesale_cost#31, ss_ext_list_price#32, ss_ext_tax#33, ss_coupon_amt#34, ss_net_paid#35, ss_net_paid_inc_tax#36, ss_net_profit#37, ss_sold_date_sk#38], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "79" : {
            "sign" : -1328452110,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 5017105940,
            "rowCount" : 250855297,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_sold_time_sk#876, ss_hdemo_sk#880, ss_store_sk#882] "
          },
          "5" : {
            "sign" : -38630686,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 32,
            "rowCount" : 1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Cross "
          },
          "103" : {
            "sign" : -1032073199,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 4332576176,
            "rowCount" : 270786011,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_hdemo_sk#1014, ss_store_sk#1016] "
          },
          "72" : {
            "sign" : -1039753015,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 16,
            "rowCount" : 1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [count(1) AS h11_to_11_30#597L] "
          },
          "10" : {
            "sign" : -1215002415,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 3259567500,
            "rowCount" : 271630625,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_store_sk#22] "
          },
          "59" : {
            "sign" : -137132071,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 16,
            "rowCount" : 1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [count(1) AS h10_30_to_11#596L] "
          },
          "87" : {
            "sign" : 11877264,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 204266230000,
            "rowCount" : 12766639375,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_store_sk#949 = s_store_sk#981) "
          },
          "48" : {
            "sign" : 987083689,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 204266230000,
            "rowCount" : 12766639375,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_store_sk#748 = s_store_sk#780) "
          },
          "21" : {
            "sign" : -117586114,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 102133115000,
            "rowCount" : 12766639375,
            "isRuntime" : false,
            "predicate" : " (unknown) Project "
          },
          "76" : {
            "sign" : -657041431,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 5432612500,
            "rowCount" : 271630625,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_hdemo_sk#880 = hd_demo_sk#899) "
          },
          "54" : {
            "sign" : 1491510529,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 38130005144,
            "rowCount" : 250855297,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(ss_hdemo_sk#746) AND (isnotnull(ss_sold_time_sk#742) AND isnotnull(ss_store_sk#748))) "
          },
          "43" : {
            "sign" : -305849591,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 22452,
            "rowCount" : 1871,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [t_time_sk#703], BroadcastQueryStage 8 "
          },
          "65" : {
            "sign" : -1169767019,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 6498864264,
            "rowCount" : 270786011,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_time_sk#809 = t_time_sk#837) "
          },
          "71" : {
            "sign" : 1506917117,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1051712,
            "rowCount" : 47,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [s_store_sk#847], BroadcastQueryStage 22 "
          },
          "57" : {
            "sign" : -808092349,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 20340,
            "rowCount" : 1695,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [hd_demo_sk#765], BroadcastQueryStage 15 "
          },
          "108" : {
            "sign" : 1663047275,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 22632,
            "rowCount" : 1886,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [t_time_sk#1038], BroadcastQueryStage 33 "
          },
          "32" : {
            "sign" : 249968963,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1051712,
            "rowCount" : 47,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [s_store_sk#646], BroadcastQueryStage 7 "
          },
          "80" : {
            "sign" : 1091438933,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 38130005144,
            "rowCount" : 250855297,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(ss_hdemo_sk#880) AND (isnotnull(ss_sold_time_sk#876) AND isnotnull(ss_store_sk#882))) "
          },
          "106" : {
            "sign" : 98567939,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 38130005144,
            "rowCount" : 250855297,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(ss_hdemo_sk#1014) AND (isnotnull(ss_sold_time_sk#1010) AND isnotnull(ss_store_sk#1016))) "
          },
          "82" : {
            "sign" : 1456410197,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 24696,
            "rowCount" : 2058,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [t_time_sk#904], BroadcastQueryStage 23 "
          },
          "49" : {
            "sign" : -1364202966,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 3259567500,
            "rowCount" : 271630625,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_store_sk#748] "
          },
          "6" : {
            "sign" : 1998875759,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 24,
            "rowCount" : 1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Cross "
          },
          "36" : {
            "sign" : 904390647,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 3259567500,
            "rowCount" : 271630625,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_store_sk#681] "
          },
          "1" : {
            "sign" : -884914985,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 64,
            "rowCount" : 1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Cross "
          },
          "39" : {
            "sign" : 363952334,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 6498864264,
            "rowCount" : 270786011,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_time_sk#675 = t_time_sk#703) "
          },
          "17" : {
            "sign" : 913310973,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 24492,
            "rowCount" : 2041,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [t_time_sk#44], BroadcastQueryStage 0 "
          },
          "25" : {
            "sign" : 1429698073,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 4332576176,
            "rowCount" : 270786011,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_hdemo_sk#612, ss_store_sk#614] "
          },
          "60" : {
            "sign" : 491217444,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 102133115000,
            "rowCount" : 12766639375,
            "isRuntime" : false,
            "predicate" : " (unknown) Project "
          },
          "14" : {
            "sign" : 450172376,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 5017105940,
            "rowCount" : 250855297,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_sold_time_sk#16, ss_hdemo_sk#20, ss_store_sk#22] "
          },
          "47" : {
            "sign" : -466410454,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 102133115000,
            "rowCount" : 12766639375,
            "isRuntime" : false,
            "predicate" : " (unknown) Project "
          },
          "102" : {
            "sign" : 425920781,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 5432612500,
            "rowCount" : 271630625,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_hdemo_sk#1014 = hd_demo_sk#1033) "
          },
          "31" : {
            "sign" : -147852838,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 20340,
            "rowCount" : 1695,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [hd_demo_sk#631], BroadcastQueryStage 5 "
          },
          "96" : {
            "sign" : 1539726829,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 20340,
            "rowCount" : 1695,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [hd_demo_sk#966], BroadcastQueryStage 30 "
          },
          "69" : {
            "sign" : -1411027186,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 24492,
            "rowCount" : 2041,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [t_time_sk#837], BroadcastQueryStage 18 "
          },
          "95" : {
            "sign" : 1083379782,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 24492,
            "rowCount" : 2041,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [t_time_sk#971], BroadcastQueryStage 28 "
          },
          "58" : {
            "sign" : 1653504907,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1051712,
            "rowCount" : 47,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [s_store_sk#780], BroadcastQueryStage 17 "
          },
          "64" : {
            "sign" : 1489909996,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 4332576176,
            "rowCount" : 270786011,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_hdemo_sk#813, ss_store_sk#815] "
          },
          "53" : {
            "sign" : -987700956,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 5017105940,
            "rowCount" : 250855297,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_sold_time_sk#742, ss_hdemo_sk#746, ss_store_sk#748] "
          },
          "42" : {
            "sign" : 635767337,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 43776970976,
            "rowCount" : 288006388,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#675, ss_item_sk#676, ss_customer_sk#677, ss_cdemo_sk#678, ss_hdemo_sk#679, ss_addr_sk#680, ss_store_sk#681, ss_promo_sk#682, ss_ticket_number#683L, ss_quantity#684, ss_wholesale_cost#685, ss_list_price#686, ss_sales_price#687, ss_ext_discount_amt#688, ss_ext_sales_price#689, ss_ext_wholesale_cost#690, ss_ext_list_price#691, ss_ext_tax#692, ss_coupon_amt#693, ss_net_paid#694, ss_net_paid_inc_tax#695, ss_net_profit#696, ss_sold_date_sk#697], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "75" : {
            "sign" : -691776830,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 3259567500,
            "rowCount" : 271630625,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_store_sk#882] "
          },
          "109" : {
            "sign" : 83596140,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 20340,
            "rowCount" : 1695,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [hd_demo_sk#1033], BroadcastQueryStage 35 "
          },
          "0" : {
            "sign" : 1414141494,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 72,
            "rowCount" : 1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Cross "
          },
          "20" : {
            "sign" : -1124850159,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 16,
            "rowCount" : 1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [count(1) AS h9_to_9_30#593L] "
          },
          "27" : {
            "sign" : -1106374654,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 5017105940,
            "rowCount" : 250855297,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_sold_time_sk#608, ss_hdemo_sk#612, ss_store_sk#614] "
          },
          "70" : {
            "sign" : 2059345034,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 20340,
            "rowCount" : 1695,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [hd_demo_sk#832], BroadcastQueryStage 20 "
          },
          "2" : {
            "sign" : 371361886,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 56,
            "rowCount" : 1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Cross "
          },
          "86" : {
            "sign" : -1277550237,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 102133115000,
            "rowCount" : 12766639375,
            "isRuntime" : false,
            "predicate" : " (unknown) Project "
          },
          "38" : {
            "sign" : -1982015416,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 4332576176,
            "rowCount" : 270786011,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_hdemo_sk#679, ss_store_sk#681] "
          },
          "81" : {
            "sign" : -1475086830,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 43776970976,
            "rowCount" : 288006388,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#876, ss_item_sk#877, ss_customer_sk#878, ss_cdemo_sk#879, ss_hdemo_sk#880, ss_addr_sk#881, ss_store_sk#882, ss_promo_sk#883, ss_ticket_number#884L, ss_quantity#885, ss_wholesale_cost#886, ss_list_price#887, ss_sales_price#888, ss_ext_discount_amt#889, ss_ext_sales_price#890, ss_ext_wholesale_cost#891, ss_ext_list_price#892, ss_ext_tax#893, ss_coupon_amt#894, ss_net_paid#895, ss_net_paid_inc_tax#896, ss_net_profit#897, ss_sold_date_sk#898], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "92" : {
            "sign" : 1259161671,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 5017105940,
            "rowCount" : 250855297,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_sold_time_sk#943, ss_hdemo_sk#947, ss_store_sk#949] "
          },
          "18" : {
            "sign" : -1511403410,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 20340,
            "rowCount" : 1695,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [hd_demo_sk#39], BroadcastQueryStage 1 "
          },
          "101" : {
            "sign" : -738934410,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 3259567500,
            "rowCount" : 271630625,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_store_sk#1016] "
          },
          "30" : {
            "sign" : -1368179025,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 22632,
            "rowCount" : 1886,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [t_time_sk#636], BroadcastQueryStage 3 "
          },
          "7" : {
            "sign" : 1728500457,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 16,
            "rowCount" : 1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [count(1) AS h8_30_to_9#592L] "
          },
          "97" : {
            "sign" : -293643211,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1051712,
            "rowCount" : 47,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [s_store_sk#981], BroadcastQueryStage 32 "
          },
          "29" : {
            "sign" : -1742933008,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 43776970976,
            "rowCount" : 288006388,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#608, ss_item_sk#609, ss_customer_sk#610, ss_cdemo_sk#611, ss_hdemo_sk#612, ss_addr_sk#613, ss_store_sk#614, ss_promo_sk#615, ss_ticket_number#616L, ss_quantity#617, ss_wholesale_cost#618, ss_list_price#619, ss_sales_price#620, ss_ext_discount_amt#621, ss_ext_sales_price#622, ss_ext_wholesale_cost#623, ss_ext_list_price#624, ss_ext_tax#625, ss_coupon_amt#626, ss_net_paid#627, ss_net_paid_inc_tax#628, ss_net_profit#629, ss_sold_date_sk#630], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "41" : {
            "sign" : 652889460,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 38130005144,
            "rowCount" : 250855297,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(ss_hdemo_sk#679) AND (isnotnull(ss_sold_time_sk#675) AND isnotnull(ss_store_sk#681))) "
          },
          "105" : {
            "sign" : 1563505905,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 5017105940,
            "rowCount" : 250855297,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_sold_time_sk#1010, ss_hdemo_sk#1014, ss_store_sk#1016] "
          },
          "63" : {
            "sign" : -914281514,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 5432612500,
            "rowCount" : 271630625,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_hdemo_sk#813 = hd_demo_sk#832) "
          },
          "3" : {
            "sign" : 476882298,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 48,
            "rowCount" : 1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Cross "
          },
          "74" : {
            "sign" : 2094668029,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 204266230000,
            "rowCount" : 12766639375,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_store_sk#882 = s_store_sk#914) "
          },
          "91" : {
            "sign" : 900128986,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 6498864264,
            "rowCount" : 270786011,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_time_sk#943 = t_time_sk#971) "
          },
          "52" : {
            "sign" : 1976333482,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 6498864264,
            "rowCount" : 270786011,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_time_sk#742 = t_time_sk#770) "
          },
          "85" : {
            "sign" : 664063112,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 16,
            "rowCount" : 1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [count(1) AS h11_30_to_12#598L] "
          },
          "28" : {
            "sign" : 1668407866,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 38130005144,
            "rowCount" : 250855297,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(ss_hdemo_sk#612) AND (isnotnull(ss_sold_time_sk#608) AND isnotnull(ss_store_sk#614))) "
          }
        },
        "links" : [ {
          "fromId" : 16,
          "fromName" : "LogicalRelation",
          "toId" : 15,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 15,
          "fromName" : "Filter",
          "toId" : 14,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 14,
          "fromName" : "Project",
          "toId" : 13,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 17,
          "fromName" : "LogicalQueryStage",
          "toId" : 13,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 13,
          "fromName" : "Join",
          "toId" : 12,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 12,
          "fromName" : "Project",
          "toId" : 11,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 18,
          "fromName" : "LogicalQueryStage",
          "toId" : 11,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "Join",
          "toId" : 10,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "Project",
          "toId" : 9,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 19,
          "fromName" : "LogicalQueryStage",
          "toId" : 9,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "Join",
          "toId" : 8,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "Project",
          "toId" : 7,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Aggregate",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 29,
          "fromName" : "LogicalRelation",
          "toId" : 28,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 28,
          "fromName" : "Filter",
          "toId" : 27,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 27,
          "fromName" : "Project",
          "toId" : 26,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 30,
          "fromName" : "LogicalQueryStage",
          "toId" : 26,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 26,
          "fromName" : "Join",
          "toId" : 25,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 25,
          "fromName" : "Project",
          "toId" : 24,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 31,
          "fromName" : "LogicalQueryStage",
          "toId" : 24,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 24,
          "fromName" : "Join",
          "toId" : 23,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 23,
          "fromName" : "Project",
          "toId" : 22,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 32,
          "fromName" : "LogicalQueryStage",
          "toId" : 22,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 22,
          "fromName" : "Join",
          "toId" : 21,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 21,
          "fromName" : "Project",
          "toId" : 20,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 20,
          "fromName" : "Aggregate",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Join",
          "toId" : 5,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 42,
          "fromName" : "LogicalRelation",
          "toId" : 41,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 41,
          "fromName" : "Filter",
          "toId" : 40,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 40,
          "fromName" : "Project",
          "toId" : 39,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 43,
          "fromName" : "LogicalQueryStage",
          "toId" : 39,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 39,
          "fromName" : "Join",
          "toId" : 38,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 38,
          "fromName" : "Project",
          "toId" : 37,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 44,
          "fromName" : "LogicalQueryStage",
          "toId" : 37,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 37,
          "fromName" : "Join",
          "toId" : 36,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 36,
          "fromName" : "Project",
          "toId" : 35,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 45,
          "fromName" : "LogicalQueryStage",
          "toId" : 35,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 35,
          "fromName" : "Join",
          "toId" : 34,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 34,
          "fromName" : "Project",
          "toId" : 33,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 33,
          "fromName" : "Aggregate",
          "toId" : 5,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Join",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 55,
          "fromName" : "LogicalRelation",
          "toId" : 54,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 54,
          "fromName" : "Filter",
          "toId" : 53,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 53,
          "fromName" : "Project",
          "toId" : 52,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 56,
          "fromName" : "LogicalQueryStage",
          "toId" : 52,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 52,
          "fromName" : "Join",
          "toId" : 51,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 51,
          "fromName" : "Project",
          "toId" : 50,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 57,
          "fromName" : "LogicalQueryStage",
          "toId" : 50,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 50,
          "fromName" : "Join",
          "toId" : 49,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 49,
          "fromName" : "Project",
          "toId" : 48,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 58,
          "fromName" : "LogicalQueryStage",
          "toId" : 48,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 48,
          "fromName" : "Join",
          "toId" : 47,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 47,
          "fromName" : "Project",
          "toId" : 46,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 46,
          "fromName" : "Aggregate",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Join",
          "toId" : 3,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 68,
          "fromName" : "LogicalRelation",
          "toId" : 67,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 67,
          "fromName" : "Filter",
          "toId" : 66,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 66,
          "fromName" : "Project",
          "toId" : 65,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 69,
          "fromName" : "LogicalQueryStage",
          "toId" : 65,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 65,
          "fromName" : "Join",
          "toId" : 64,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 64,
          "fromName" : "Project",
          "toId" : 63,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 70,
          "fromName" : "LogicalQueryStage",
          "toId" : 63,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 63,
          "fromName" : "Join",
          "toId" : 62,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 62,
          "fromName" : "Project",
          "toId" : 61,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 71,
          "fromName" : "LogicalQueryStage",
          "toId" : 61,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 61,
          "fromName" : "Join",
          "toId" : 60,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 60,
          "fromName" : "Project",
          "toId" : 59,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 59,
          "fromName" : "Aggregate",
          "toId" : 3,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Join",
          "toId" : 2,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 81,
          "fromName" : "LogicalRelation",
          "toId" : 80,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 80,
          "fromName" : "Filter",
          "toId" : 79,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 79,
          "fromName" : "Project",
          "toId" : 78,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 82,
          "fromName" : "LogicalQueryStage",
          "toId" : 78,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 78,
          "fromName" : "Join",
          "toId" : 77,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 77,
          "fromName" : "Project",
          "toId" : 76,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 83,
          "fromName" : "LogicalQueryStage",
          "toId" : 76,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 76,
          "fromName" : "Join",
          "toId" : 75,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 75,
          "fromName" : "Project",
          "toId" : 74,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 84,
          "fromName" : "LogicalQueryStage",
          "toId" : 74,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 74,
          "fromName" : "Join",
          "toId" : 73,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 73,
          "fromName" : "Project",
          "toId" : 72,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 72,
          "fromName" : "Aggregate",
          "toId" : 2,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Join",
          "toId" : 1,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 94,
          "fromName" : "LogicalRelation",
          "toId" : 93,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 93,
          "fromName" : "Filter",
          "toId" : 92,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 92,
          "fromName" : "Project",
          "toId" : 91,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 95,
          "fromName" : "LogicalQueryStage",
          "toId" : 91,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 91,
          "fromName" : "Join",
          "toId" : 90,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 90,
          "fromName" : "Project",
          "toId" : 89,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 96,
          "fromName" : "LogicalQueryStage",
          "toId" : 89,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 89,
          "fromName" : "Join",
          "toId" : 88,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 88,
          "fromName" : "Project",
          "toId" : 87,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 97,
          "fromName" : "LogicalQueryStage",
          "toId" : 87,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 87,
          "fromName" : "Join",
          "toId" : 86,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 86,
          "fromName" : "Project",
          "toId" : 85,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 85,
          "fromName" : "Aggregate",
          "toId" : 1,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Join",
          "toId" : 0,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 107,
          "fromName" : "LogicalRelation",
          "toId" : 106,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 106,
          "fromName" : "Filter",
          "toId" : 105,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 105,
          "fromName" : "Project",
          "toId" : 104,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 108,
          "fromName" : "LogicalQueryStage",
          "toId" : 104,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 104,
          "fromName" : "Join",
          "toId" : 103,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 103,
          "fromName" : "Project",
          "toId" : 102,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 109,
          "fromName" : "LogicalQueryStage",
          "toId" : 102,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 102,
          "fromName" : "Join",
          "toId" : 101,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 101,
          "fromName" : "Project",
          "toId" : 100,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 110,
          "fromName" : "LogicalQueryStage",
          "toId" : 100,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 100,
          "fromName" : "Join",
          "toId" : 99,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 99,
          "fromName" : "Project",
          "toId" : 98,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 98,
          "fromName" : "Aggregate",
          "toId" : 0,
          "toName" : "Join",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Join Cross\n:- Join Cross\n:  :- Join Cross\n:  :  :- Join Cross\n:  :  :  :- Join Cross\n:  :  :  :  :- Join Cross\n:  :  :  :  :  :- Join Cross\n:  :  :  :  :  :  :- Aggregate [count(1) AS h8_30_to_9#592L]\n:  :  :  :  :  :  :  +- Project\n:  :  :  :  :  :  :     +- Join Inner, (ss_store_sk#22 = s_store_sk#54)\n:  :  :  :  :  :  :        :- Project [ss_store_sk#22]\n:  :  :  :  :  :  :        :  +- Join Inner, (ss_hdemo_sk#20 = hd_demo_sk#39)\n:  :  :  :  :  :  :        :     :- Project [ss_hdemo_sk#20, ss_store_sk#22]\n:  :  :  :  :  :  :        :     :  +- Join Inner, (ss_sold_time_sk#16 = t_time_sk#44)\n:  :  :  :  :  :  :        :     :     :- Project [ss_sold_time_sk#16, ss_hdemo_sk#20, ss_store_sk#22]\n:  :  :  :  :  :  :        :     :     :  +- Filter (isnotnull(ss_hdemo_sk#20) AND (isnotnull(ss_sold_time_sk#16) AND isnotnull(ss_store_sk#22)))\n:  :  :  :  :  :  :        :     :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#16,ss_item_sk#17,ss_customer_sk#18,ss_cdemo_sk#19,ss_hdemo_sk#20,ss_addr_sk#21,ss_store_sk#22,ss_promo_sk#23,ss_ticket_number#24L,ss_quantity#25,ss_wholesale_cost#26,ss_list_price#27,ss_sales_price#28,ss_ext_discount_amt#29,ss_ext_sales_price#30,ss_ext_wholesale_cost#31,ss_ext_list_price#32,ss_ext_tax#33,ss_coupon_amt#34,ss_net_paid#35,ss_net_paid_inc_tax#36,ss_net_profit#37,ss_sold_date_sk#38] parquet\n:  :  :  :  :  :  :        :     :     +- LogicalQueryStage Project [t_time_sk#44], BroadcastQueryStage 0\n:  :  :  :  :  :  :        :     +- LogicalQueryStage Project [hd_demo_sk#39], BroadcastQueryStage 1\n:  :  :  :  :  :  :        +- LogicalQueryStage Project [s_store_sk#54], BroadcastQueryStage 2\n:  :  :  :  :  :  +- Aggregate [count(1) AS h9_to_9_30#593L]\n:  :  :  :  :  :     +- Project\n:  :  :  :  :  :        +- Join Inner, (ss_store_sk#614 = s_store_sk#646)\n:  :  :  :  :  :           :- Project [ss_store_sk#614]\n:  :  :  :  :  :           :  +- Join Inner, (ss_hdemo_sk#612 = hd_demo_sk#631)\n:  :  :  :  :  :           :     :- Project [ss_hdemo_sk#612, ss_store_sk#614]\n:  :  :  :  :  :           :     :  +- Join Inner, (ss_sold_time_sk#608 = t_time_sk#636)\n:  :  :  :  :  :           :     :     :- Project [ss_sold_time_sk#608, ss_hdemo_sk#612, ss_store_sk#614]\n:  :  :  :  :  :           :     :     :  +- Filter (isnotnull(ss_hdemo_sk#612) AND (isnotnull(ss_sold_time_sk#608) AND isnotnull(ss_store_sk#614)))\n:  :  :  :  :  :           :     :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#608,ss_item_sk#609,ss_customer_sk#610,ss_cdemo_sk#611,ss_hdemo_sk#612,ss_addr_sk#613,ss_store_sk#614,ss_promo_sk#615,ss_ticket_number#616L,ss_quantity#617,ss_wholesale_cost#618,ss_list_price#619,ss_sales_price#620,ss_ext_discount_amt#621,ss_ext_sales_price#622,ss_ext_wholesale_cost#623,ss_ext_list_price#624,ss_ext_tax#625,ss_coupon_amt#626,ss_net_paid#627,ss_net_paid_inc_tax#628,ss_net_profit#629,ss_sold_date_sk#630] parquet\n:  :  :  :  :  :           :     :     +- LogicalQueryStage Project [t_time_sk#636], BroadcastQueryStage 3\n:  :  :  :  :  :           :     +- LogicalQueryStage Project [hd_demo_sk#631], BroadcastQueryStage 5\n:  :  :  :  :  :           +- LogicalQueryStage Project [s_store_sk#646], BroadcastQueryStage 7\n:  :  :  :  :  +- Aggregate [count(1) AS h9_30_to_10#594L]\n:  :  :  :  :     +- Project\n:  :  :  :  :        +- Join Inner, (ss_store_sk#681 = s_store_sk#713)\n:  :  :  :  :           :- Project [ss_store_sk#681]\n:  :  :  :  :           :  +- Join Inner, (ss_hdemo_sk#679 = hd_demo_sk#698)\n:  :  :  :  :           :     :- Project [ss_hdemo_sk#679, ss_store_sk#681]\n:  :  :  :  :           :     :  +- Join Inner, (ss_sold_time_sk#675 = t_time_sk#703)\n:  :  :  :  :           :     :     :- Project [ss_sold_time_sk#675, ss_hdemo_sk#679, ss_store_sk#681]\n:  :  :  :  :           :     :     :  +- Filter (isnotnull(ss_hdemo_sk#679) AND (isnotnull(ss_sold_time_sk#675) AND isnotnull(ss_store_sk#681)))\n:  :  :  :  :           :     :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#675,ss_item_sk#676,ss_customer_sk#677,ss_cdemo_sk#678,ss_hdemo_sk#679,ss_addr_sk#680,ss_store_sk#681,ss_promo_sk#682,ss_ticket_number#683L,ss_quantity#684,ss_wholesale_cost#685,ss_list_price#686,ss_sales_price#687,ss_ext_discount_amt#688,ss_ext_sales_price#689,ss_ext_wholesale_cost#690,ss_ext_list_price#691,ss_ext_tax#692,ss_coupon_amt#693,ss_net_paid#694,ss_net_paid_inc_tax#695,ss_net_profit#696,ss_sold_date_sk#697] parquet\n:  :  :  :  :           :     :     +- LogicalQueryStage Project [t_time_sk#703], BroadcastQueryStage 8\n:  :  :  :  :           :     +- LogicalQueryStage Project [hd_demo_sk#698], BroadcastQueryStage 10\n:  :  :  :  :           +- LogicalQueryStage Project [s_store_sk#713], BroadcastQueryStage 12\n:  :  :  :  +- Aggregate [count(1) AS h10_to_10_30#595L]\n:  :  :  :     +- Project\n:  :  :  :        +- Join Inner, (ss_store_sk#748 = s_store_sk#780)\n:  :  :  :           :- Project [ss_store_sk#748]\n:  :  :  :           :  +- Join Inner, (ss_hdemo_sk#746 = hd_demo_sk#765)\n:  :  :  :           :     :- Project [ss_hdemo_sk#746, ss_store_sk#748]\n:  :  :  :           :     :  +- Join Inner, (ss_sold_time_sk#742 = t_time_sk#770)\n:  :  :  :           :     :     :- Project [ss_sold_time_sk#742, ss_hdemo_sk#746, ss_store_sk#748]\n:  :  :  :           :     :     :  +- Filter (isnotnull(ss_hdemo_sk#746) AND (isnotnull(ss_sold_time_sk#742) AND isnotnull(ss_store_sk#748)))\n:  :  :  :           :     :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#742,ss_item_sk#743,ss_customer_sk#744,ss_cdemo_sk#745,ss_hdemo_sk#746,ss_addr_sk#747,ss_store_sk#748,ss_promo_sk#749,ss_ticket_number#750L,ss_quantity#751,ss_wholesale_cost#752,ss_list_price#753,ss_sales_price#754,ss_ext_discount_amt#755,ss_ext_sales_price#756,ss_ext_wholesale_cost#757,ss_ext_list_price#758,ss_ext_tax#759,ss_coupon_amt#760,ss_net_paid#761,ss_net_paid_inc_tax#762,ss_net_profit#763,ss_sold_date_sk#764] parquet\n:  :  :  :           :     :     +- LogicalQueryStage Project [t_time_sk#770], BroadcastQueryStage 13\n:  :  :  :           :     +- LogicalQueryStage Project [hd_demo_sk#765], BroadcastQueryStage 15\n:  :  :  :           +- LogicalQueryStage Project [s_store_sk#780], BroadcastQueryStage 17\n:  :  :  +- Aggregate [count(1) AS h10_30_to_11#596L]\n:  :  :     +- Project\n:  :  :        +- Join Inner, (ss_store_sk#815 = s_store_sk#847)\n:  :  :           :- Project [ss_store_sk#815]\n:  :  :           :  +- Join Inner, (ss_hdemo_sk#813 = hd_demo_sk#832)\n:  :  :           :     :- Project [ss_hdemo_sk#813, ss_store_sk#815]\n:  :  :           :     :  +- Join Inner, (ss_sold_time_sk#809 = t_time_sk#837)\n:  :  :           :     :     :- Project [ss_sold_time_sk#809, ss_hdemo_sk#813, ss_store_sk#815]\n:  :  :           :     :     :  +- Filter (isnotnull(ss_hdemo_sk#813) AND (isnotnull(ss_sold_time_sk#809) AND isnotnull(ss_store_sk#815)))\n:  :  :           :     :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#809,ss_item_sk#810,ss_customer_sk#811,ss_cdemo_sk#812,ss_hdemo_sk#813,ss_addr_sk#814,ss_store_sk#815,ss_promo_sk#816,ss_ticket_number#817L,ss_quantity#818,ss_wholesale_cost#819,ss_list_price#820,ss_sales_price#821,ss_ext_discount_amt#822,ss_ext_sales_price#823,ss_ext_wholesale_cost#824,ss_ext_list_price#825,ss_ext_tax#826,ss_coupon_amt#827,ss_net_paid#828,ss_net_paid_inc_tax#829,ss_net_profit#830,ss_sold_date_sk#831] parquet\n:  :  :           :     :     +- LogicalQueryStage Project [t_time_sk#837], BroadcastQueryStage 18\n:  :  :           :     +- LogicalQueryStage Project [hd_demo_sk#832], BroadcastQueryStage 20\n:  :  :           +- LogicalQueryStage Project [s_store_sk#847], BroadcastQueryStage 22\n:  :  +- Aggregate [count(1) AS h11_to_11_30#597L]\n:  :     +- Project\n:  :        +- Join Inner, (ss_store_sk#882 = s_store_sk#914)\n:  :           :- Project [ss_store_sk#882]\n:  :           :  +- Join Inner, (ss_hdemo_sk#880 = hd_demo_sk#899)\n:  :           :     :- Project [ss_hdemo_sk#880, ss_store_sk#882]\n:  :           :     :  +- Join Inner, (ss_sold_time_sk#876 = t_time_sk#904)\n:  :           :     :     :- Project [ss_sold_time_sk#876, ss_hdemo_sk#880, ss_store_sk#882]\n:  :           :     :     :  +- Filter (isnotnull(ss_hdemo_sk#880) AND (isnotnull(ss_sold_time_sk#876) AND isnotnull(ss_store_sk#882)))\n:  :           :     :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#876,ss_item_sk#877,ss_customer_sk#878,ss_cdemo_sk#879,ss_hdemo_sk#880,ss_addr_sk#881,ss_store_sk#882,ss_promo_sk#883,ss_ticket_number#884L,ss_quantity#885,ss_wholesale_cost#886,ss_list_price#887,ss_sales_price#888,ss_ext_discount_amt#889,ss_ext_sales_price#890,ss_ext_wholesale_cost#891,ss_ext_list_price#892,ss_ext_tax#893,ss_coupon_amt#894,ss_net_paid#895,ss_net_paid_inc_tax#896,ss_net_profit#897,ss_sold_date_sk#898] parquet\n:  :           :     :     +- LogicalQueryStage Project [t_time_sk#904], BroadcastQueryStage 23\n:  :           :     +- LogicalQueryStage Project [hd_demo_sk#899], BroadcastQueryStage 25\n:  :           +- LogicalQueryStage Project [s_store_sk#914], BroadcastQueryStage 27\n:  +- Aggregate [count(1) AS h11_30_to_12#598L]\n:     +- Project\n:        +- Join Inner, (ss_store_sk#949 = s_store_sk#981)\n:           :- Project [ss_store_sk#949]\n:           :  +- Join Inner, (ss_hdemo_sk#947 = hd_demo_sk#966)\n:           :     :- Project [ss_hdemo_sk#947, ss_store_sk#949]\n:           :     :  +- Join Inner, (ss_sold_time_sk#943 = t_time_sk#971)\n:           :     :     :- Project [ss_sold_time_sk#943, ss_hdemo_sk#947, ss_store_sk#949]\n:           :     :     :  +- Filter (isnotnull(ss_hdemo_sk#947) AND (isnotnull(ss_sold_time_sk#943) AND isnotnull(ss_store_sk#949)))\n:           :     :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#943,ss_item_sk#944,ss_customer_sk#945,ss_cdemo_sk#946,ss_hdemo_sk#947,ss_addr_sk#948,ss_store_sk#949,ss_promo_sk#950,ss_ticket_number#951L,ss_quantity#952,ss_wholesale_cost#953,ss_list_price#954,ss_sales_price#955,ss_ext_discount_amt#956,ss_ext_sales_price#957,ss_ext_wholesale_cost#958,ss_ext_list_price#959,ss_ext_tax#960,ss_coupon_amt#961,ss_net_paid#962,ss_net_paid_inc_tax#963,ss_net_profit#964,ss_sold_date_sk#965] parquet\n:           :     :     +- LogicalQueryStage Project [t_time_sk#971], BroadcastQueryStage 28\n:           :     +- LogicalQueryStage Project [hd_demo_sk#966], BroadcastQueryStage 30\n:           +- LogicalQueryStage Project [s_store_sk#981], BroadcastQueryStage 32\n+- Aggregate [count(1) AS h12_to_12_30#599L]\n   +- Project\n      +- Join Inner, (ss_store_sk#1016 = s_store_sk#1048)\n         :- Project [ss_store_sk#1016]\n         :  +- Join Inner, (ss_hdemo_sk#1014 = hd_demo_sk#1033)\n         :     :- Project [ss_hdemo_sk#1014, ss_store_sk#1016]\n         :     :  +- Join Inner, (ss_sold_time_sk#1010 = t_time_sk#1038)\n         :     :     :- Project [ss_sold_time_sk#1010, ss_hdemo_sk#1014, ss_store_sk#1016]\n         :     :     :  +- Filter (isnotnull(ss_hdemo_sk#1014) AND (isnotnull(ss_sold_time_sk#1010) AND isnotnull(ss_store_sk#1016)))\n         :     :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#1010,ss_item_sk#1011,ss_customer_sk#1012,ss_cdemo_sk#1013,ss_hdemo_sk#1014,ss_addr_sk#1015,ss_store_sk#1016,ss_promo_sk#1017,ss_ticket_number#1018L,ss_quantity#1019,ss_wholesale_cost#1020,ss_list_price#1021,ss_sales_price#1022,ss_ext_discount_amt#1023,ss_ext_sales_price#1024,ss_ext_wholesale_cost#1025,ss_ext_list_price#1026,ss_ext_tax#1027,ss_coupon_amt#1028,ss_net_paid#1029,ss_net_paid_inc_tax#1030,ss_net_profit#1031,ss_sold_date_sk#1032] parquet\n         :     :     +- LogicalQueryStage Project [t_time_sk#1038], BroadcastQueryStage 33\n         :     +- LogicalQueryStage Project [hd_demo_sk#1033], BroadcastQueryStage 35\n         +- LogicalQueryStage Project [s_store_sk#1048], BroadcastQueryStage 37\n"
      },
      "IM" : {
        "inputSizeInBytes" : 350224534808,
        "inputRowCount" : 2304080922
      },
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 3,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "StartTimeInMs" : 1702227452101,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 34990,
        "IOBytes" : {
          "Total" : 3841315439,
          "Details" : {
            "IR" : 3841163463,
            "IW" : 0,
            "SR" : 75988,
            "SW" : 75988
          }
        }
      }
    },
    "17" : {
      "LQP" : {
        "operators" : {
          "12" : {
            "sign" : 465392224,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 2576,
            "rowCount" : 161,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [count(1) AS h11_to_11_30#597L], HashAggregate(keys=[], functions=[count(1)]) "
          },
          "8" : {
            "sign" : -640907261,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 16,
            "rowCount" : 1,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: LogicalQueryStage Aggregate [count(1) AS h9_to_9_30#593L], HashAggregate(keys=[], functions=[count(1)]), BroadcastQueryStage 50 "
          },
          "4" : {
            "sign" : -1632486951,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 6440,
            "rowCount" : 161,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Cross "
          },
          "11" : {
            "sign" : 461391639,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 16,
            "rowCount" : 1,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: LogicalQueryStage Aggregate [count(1) AS h10_30_to_11#596L], HashAggregate(keys=[], functions=[count(1)]), BroadcastQueryStage 47 "
          },
          "9" : {
            "sign" : 1379352947,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 16,
            "rowCount" : 1,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: LogicalQueryStage Aggregate [count(1) AS h9_30_to_10#594L], HashAggregate(keys=[], functions=[count(1)]), BroadcastQueryStage 46 "
          },
          "13" : {
            "sign" : -672490412,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 16,
            "rowCount" : 1,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: LogicalQueryStage Aggregate [count(1) AS h11_30_to_12#598L], HashAggregate(keys=[], functions=[count(1)]), BroadcastQueryStage 48 "
          },
          "5" : {
            "sign" : 1507049806,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 5152,
            "rowCount" : 161,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Cross "
          },
          "10" : {
            "sign" : -353051992,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 16,
            "rowCount" : 1,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: LogicalQueryStage Aggregate [count(1) AS h10_to_10_30#595L], HashAggregate(keys=[], functions=[count(1)]), BroadcastQueryStage 51 "
          },
          "6" : {
            "sign" : -612370776,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 3864,
            "rowCount" : 161,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Cross "
          },
          "1" : {
            "sign" : 1275613619,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 1658944,
            "rowCount" : 25921,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Cross "
          },
          "14" : {
            "sign" : -222721313,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 16,
            "rowCount" : 1,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: LogicalQueryStage Aggregate [count(1) AS h12_to_12_30#599L], HashAggregate(keys=[], functions=[count(1)]), BroadcastQueryStage 49 "
          },
          "0" : {
            "sign" : -1699269413,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 1866312,
            "rowCount" : 25921,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Cross "
          },
          "2" : {
            "sign" : -1498668284,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 1451576,
            "rowCount" : 25921,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Cross "
          },
          "7" : {
            "sign" : -1999474772,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 2576,
            "rowCount" : 161,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [count(1) AS h8_30_to_9#592L], HashAggregate(keys=[], functions=[count(1)]) "
          },
          "3" : {
            "sign" : 54628865,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 7728,
            "rowCount" : 161,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Cross "
          }
        },
        "links" : [ {
          "fromId" : 7,
          "fromName" : "LogicalQueryStage",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "LogicalQueryStage",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Join",
          "toId" : 5,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "LogicalQueryStage",
          "toId" : 5,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Join",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "LogicalQueryStage",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Join",
          "toId" : 3,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "LogicalQueryStage",
          "toId" : 3,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Join",
          "toId" : 2,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 12,
          "fromName" : "LogicalQueryStage",
          "toId" : 2,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Join",
          "toId" : 1,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 13,
          "fromName" : "LogicalQueryStage",
          "toId" : 1,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Join",
          "toId" : 0,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 14,
          "fromName" : "LogicalQueryStage",
          "toId" : 0,
          "toName" : "Join",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Join Cross\n:- Join Cross\n:  :- Join Cross\n:  :  :- Join Cross\n:  :  :  :- Join Cross\n:  :  :  :  :- Join Cross\n:  :  :  :  :  :- Join Cross\n:  :  :  :  :  :  :- LogicalQueryStage Aggregate [count(1) AS h8_30_to_9#592L], HashAggregate(keys=[], functions=[count(1)])\n:  :  :  :  :  :  +- LogicalQueryStage LogicalQueryStage Aggregate [count(1) AS h9_to_9_30#593L], HashAggregate(keys=[], functions=[count(1)]), BroadcastQueryStage 50\n:  :  :  :  :  +- LogicalQueryStage LogicalQueryStage Aggregate [count(1) AS h9_30_to_10#594L], HashAggregate(keys=[], functions=[count(1)]), BroadcastQueryStage 46\n:  :  :  :  +- LogicalQueryStage LogicalQueryStage Aggregate [count(1) AS h10_to_10_30#595L], HashAggregate(keys=[], functions=[count(1)]), BroadcastQueryStage 51\n:  :  :  +- LogicalQueryStage LogicalQueryStage Aggregate [count(1) AS h10_30_to_11#596L], HashAggregate(keys=[], functions=[count(1)]), BroadcastQueryStage 47\n:  :  +- LogicalQueryStage Aggregate [count(1) AS h11_to_11_30#597L], HashAggregate(keys=[], functions=[count(1)])\n:  +- LogicalQueryStage LogicalQueryStage Aggregate [count(1) AS h11_30_to_12#598L], HashAggregate(keys=[], functions=[count(1)]), BroadcastQueryStage 48\n+- LogicalQueryStage LogicalQueryStage Aggregate [count(1) AS h12_to_12_30#599L], HashAggregate(keys=[], functions=[count(1)]), BroadcastQueryStage 49\n"
      },
      "IM" : {
        "inputSizeInBytes" : 5248,
        "inputRowCount" : 328
      },
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "StartTimeInMs" : 1702227486715,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 376,
        "IOBytes" : {
          "Total" : 18998,
          "Details" : {
            "IR" : 0,
            "IW" : 0,
            "SR" : 18998,
            "SW" : 0
          }
        }
      }
    },
    "14" : {
      "LQP" : {
        "operators" : {
          "12" : {
            "sign" : 465392224,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 16,
            "rowCount" : 1,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [count(1) AS h11_to_11_30#597L], HashAggregate(keys=[], functions=[count(1)]) "
          },
          "8" : {
            "sign" : -640907261,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 2576,
            "rowCount" : 161,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: LogicalQueryStage Aggregate [count(1) AS h9_to_9_30#593L], HashAggregate(keys=[], functions=[count(1)]), BroadcastQueryStage 50 "
          },
          "4" : {
            "sign" : -1632486951,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 1036840,
            "rowCount" : 25921,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Cross "
          },
          "11" : {
            "sign" : 461391639,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 16,
            "rowCount" : 1,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: LogicalQueryStage Aggregate [count(1) AS h10_30_to_11#596L], HashAggregate(keys=[], functions=[count(1)]), BroadcastQueryStage 47 "
          },
          "9" : {
            "sign" : 1379352947,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 16,
            "rowCount" : 1,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: LogicalQueryStage Aggregate [count(1) AS h9_30_to_10#594L], HashAggregate(keys=[], functions=[count(1)]), BroadcastQueryStage 46 "
          },
          "13" : {
            "sign" : -672490412,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 2576,
            "rowCount" : 161,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: LogicalQueryStage Aggregate [count(1) AS h11_30_to_12#598L], HashAggregate(keys=[], functions=[count(1)]), BroadcastQueryStage 48 "
          },
          "5" : {
            "sign" : 1507049806,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 829472,
            "rowCount" : 25921,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Cross "
          },
          "10" : {
            "sign" : -353051992,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 16,
            "rowCount" : 1,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: LogicalQueryStage Aggregate [count(1) AS h10_to_10_30#595L], HashAggregate(keys=[], functions=[count(1)]), BroadcastQueryStage 51 "
          },
          "6" : {
            "sign" : -612370776,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 622104,
            "rowCount" : 25921,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Cross "
          },
          "1" : {
            "sign" : 1275613619,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 267089984,
            "rowCount" : 4173281,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Cross "
          },
          "14" : {
            "sign" : -222721313,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 16,
            "rowCount" : 1,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: LogicalQueryStage Aggregate [count(1) AS h12_to_12_30#599L], HashAggregate(keys=[], functions=[count(1)]), BroadcastQueryStage 49 "
          },
          "0" : {
            "sign" : -1699269413,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 300476232,
            "rowCount" : 4173281,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Cross "
          },
          "2" : {
            "sign" : -1498668284,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 1451576,
            "rowCount" : 25921,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Cross "
          },
          "7" : {
            "sign" : -1999474772,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 2576,
            "rowCount" : 161,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [count(1) AS h8_30_to_9#592L], HashAggregate(keys=[], functions=[count(1)]) "
          },
          "3" : {
            "sign" : 54628865,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 1244208,
            "rowCount" : 25921,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Cross "
          }
        },
        "links" : [ {
          "fromId" : 7,
          "fromName" : "LogicalQueryStage",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "LogicalQueryStage",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Join",
          "toId" : 5,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "LogicalQueryStage",
          "toId" : 5,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Join",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "LogicalQueryStage",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Join",
          "toId" : 3,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "LogicalQueryStage",
          "toId" : 3,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Join",
          "toId" : 2,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 12,
          "fromName" : "LogicalQueryStage",
          "toId" : 2,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Join",
          "toId" : 1,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 13,
          "fromName" : "LogicalQueryStage",
          "toId" : 1,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Join",
          "toId" : 0,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 14,
          "fromName" : "LogicalQueryStage",
          "toId" : 0,
          "toName" : "Join",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Join Cross\n:- Join Cross\n:  :- Join Cross\n:  :  :- Join Cross\n:  :  :  :- Join Cross\n:  :  :  :  :- Join Cross\n:  :  :  :  :  :- Join Cross\n:  :  :  :  :  :  :- LogicalQueryStage Aggregate [count(1) AS h8_30_to_9#592L], HashAggregate(keys=[], functions=[count(1)])\n:  :  :  :  :  :  +- LogicalQueryStage LogicalQueryStage Aggregate [count(1) AS h9_to_9_30#593L], HashAggregate(keys=[], functions=[count(1)]), BroadcastQueryStage 50\n:  :  :  :  :  +- LogicalQueryStage LogicalQueryStage Aggregate [count(1) AS h9_30_to_10#594L], HashAggregate(keys=[], functions=[count(1)]), BroadcastQueryStage 46\n:  :  :  :  +- LogicalQueryStage LogicalQueryStage Aggregate [count(1) AS h10_to_10_30#595L], HashAggregate(keys=[], functions=[count(1)]), BroadcastQueryStage 51\n:  :  :  +- LogicalQueryStage LogicalQueryStage Aggregate [count(1) AS h10_30_to_11#596L], HashAggregate(keys=[], functions=[count(1)]), BroadcastQueryStage 47\n:  :  +- LogicalQueryStage Aggregate [count(1) AS h11_to_11_30#597L], HashAggregate(keys=[], functions=[count(1)])\n:  +- LogicalQueryStage LogicalQueryStage Aggregate [count(1) AS h11_30_to_12#598L], HashAggregate(keys=[], functions=[count(1)]), BroadcastQueryStage 48\n+- LogicalQueryStage LogicalQueryStage Aggregate [count(1) AS h12_to_12_30#599L], HashAggregate(keys=[], functions=[count(1)]), BroadcastQueryStage 49\n"
      },
      "IM" : {
        "inputSizeInBytes" : 7808,
        "inputRowCount" : 488
      },
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 3,
        "FinishedTasksNum" : 159,
        "FinishedTasksTotalTimeInMs" : 54427.0,
        "FinishedTasksDistributionInMs" : [ 173.0, 240.0, 277.0, 338.0, 2596.0 ]
      },
      "StartTimeInMs" : 1702227486564,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 527,
        "IOBytes" : {
          "Total" : 480141243,
          "Details" : {
            "IR" : 480103249,
            "IW" : 0,
            "SR" : 28495,
            "SW" : 9499
          }
        }
      }
    },
    "2" : {
      "LQP" : {
        "operators" : {
          "45" : {
            "sign" : 2026535322,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1051712,
            "rowCount" : 47,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [s_store_sk#713], BroadcastQueryStage 12 "
          },
          "98" : {
            "sign" : 978734478,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 16,
            "rowCount" : 1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [count(1) AS h12_to_12_30#599L] "
          },
          "34" : {
            "sign" : 1989771144,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 305601957017280000,
            "rowCount" : 38200244627160000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project "
          },
          "67" : {
            "sign" : 1064892625,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 38130005144,
            "rowCount" : 250855297,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(ss_hdemo_sk#813) AND (isnotnull(ss_sold_time_sk#809) AND isnotnull(ss_store_sk#815))) "
          },
          "93" : {
            "sign" : -918152691,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 38130005144,
            "rowCount" : 250855297,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(ss_hdemo_sk#947) AND (isnotnull(ss_sold_time_sk#943) AND isnotnull(ss_store_sk#949))) "
          },
          "12" : {
            "sign" : 1026048955,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 4332576176,
            "rowCount" : 270786011,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_hdemo_sk#20, ss_store_sk#22] "
          },
          "66" : {
            "sign" : -1348331344,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 5017105940,
            "rowCount" : 250855297,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_sold_time_sk#809, ss_hdemo_sk#813, ss_store_sk#815] "
          },
          "89" : {
            "sign" : -2041066306,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 16255423245600000,
            "rowCount" : 812771162280000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_hdemo_sk#947 = hd_demo_sk#966) "
          },
          "51" : {
            "sign" : 943638769,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 4332576176,
            "rowCount" : 270786011,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_hdemo_sk#746, ss_store_sk#748] "
          },
          "84" : {
            "sign" : 79386553,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1051712,
            "rowCount" : 47,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [s_store_sk#914], BroadcastQueryStage 27 "
          },
          "8" : {
            "sign" : -808324758,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 183267972244800,
            "rowCount" : 22908496530600,
            "isRuntime" : false,
            "predicate" : " (unknown) Project "
          },
          "73" : {
            "sign" : 519765418,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 183267972244800,
            "rowCount" : 22908496530600,
            "isRuntime" : false,
            "predicate" : " (unknown) Project "
          },
          "78" : {
            "sign" : 1908717271,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 6498864264,
            "rowCount" : 270786011,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_time_sk#876 = t_time_sk#904) "
          },
          "19" : {
            "sign" : -459201083,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1051712,
            "rowCount" : 47,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [s_store_sk#54], BroadcastQueryStage 2 "
          },
          "100" : {
            "sign" : -1495655718,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 611203914034560000,
            "rowCount" : 38200244627160000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_store_sk#1016 = s_store_sk#1048) "
          },
          "23" : {
            "sign" : -546611451,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 9753253947360000,
            "rowCount" : 812771162280000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_store_sk#614] "
          },
          "62" : {
            "sign" : 487348375,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 9753253947360000,
            "rowCount" : 812771162280000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_store_sk#815] "
          },
          "4" : {
            "sign" : -1146553186,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 40,
            "rowCount" : 1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Cross "
          },
          "88" : {
            "sign" : 1761045979,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 9753253947360000,
            "rowCount" : 812771162280000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_store_sk#949] "
          },
          "77" : {
            "sign" : -261117538,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 4332576176,
            "rowCount" : 270786011,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_hdemo_sk#880, ss_store_sk#882] "
          },
          "40" : {
            "sign" : 1269516271,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 5017105940,
            "rowCount" : 250855297,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_sold_time_sk#675, ss_hdemo_sk#679, ss_store_sk#681] "
          },
          "110" : {
            "sign" : 977145309,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1051712,
            "rowCount" : 47,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [s_store_sk#1048], BroadcastQueryStage 37 "
          },
          "15" : {
            "sign" : 1156235223,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 38130005144,
            "rowCount" : 250855297,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(ss_hdemo_sk#20) AND (isnotnull(ss_sold_time_sk#16) AND isnotnull(ss_store_sk#22))) "
          },
          "11" : {
            "sign" : 2024072566,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 9748296396000,
            "rowCount" : 487414819800,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_hdemo_sk#20 = hd_demo_sk#39) "
          },
          "104" : {
            "sign" : 430757074,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 10836948830400,
            "rowCount" : 451539534600,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_time_sk#1010 = t_time_sk#1038) "
          },
          "90" : {
            "sign" : -1829720947,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 7224632553600,
            "rowCount" : 451539534600,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_hdemo_sk#947, ss_store_sk#949] "
          },
          "9" : {
            "sign" : 1694061865,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 366535944489600,
            "rowCount" : 22908496530600,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_store_sk#22 = s_store_sk#54) "
          },
          "44" : {
            "sign" : 619438215,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1106176,
            "rowCount" : 1800,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [hd_demo_sk#698], BroadcastQueryStage 10 "
          },
          "33" : {
            "sign" : -1910435598,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 16,
            "rowCount" : 1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [count(1) AS h9_30_to_10#594L] "
          },
          "22" : {
            "sign" : -1756211101,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 611203914034560000,
            "rowCount" : 38200244627160000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_store_sk#614 = s_store_sk#646) "
          },
          "56" : {
            "sign" : -1264438745,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 24696,
            "rowCount" : 2058,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [t_time_sk#770], BroadcastQueryStage 13 "
          },
          "55" : {
            "sign" : 1437773120,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 43776970976,
            "rowCount" : 288006388,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#742, ss_item_sk#743, ss_customer_sk#744, ss_cdemo_sk#745, ss_hdemo_sk#746, ss_addr_sk#747, ss_store_sk#748, ss_promo_sk#749, ss_ticket_number#750L, ss_quantity#751, ss_wholesale_cost#752, ss_list_price#753, ss_sales_price#754, ss_ext_discount_amt#755, ss_ext_sales_price#756, ss_ext_wholesale_cost#757, ss_ext_list_price#758, ss_ext_tax#759, ss_coupon_amt#760, ss_net_paid#761, ss_net_paid_inc_tax#762, ss_net_profit#763, ss_sold_date_sk#764], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "26" : {
            "sign" : -208305298,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 10836948830400,
            "rowCount" : 451539534600,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_time_sk#608 = t_time_sk#636) "
          },
          "50" : {
            "sign" : 1162177060,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 9748296396000,
            "rowCount" : 487414819800,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_hdemo_sk#746 = hd_demo_sk#765) "
          },
          "37" : {
            "sign" : -1235971817,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 16255423245600000,
            "rowCount" : 812771162280000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_hdemo_sk#679 = hd_demo_sk#698) "
          },
          "68" : {
            "sign" : -2000254428,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 43776970976,
            "rowCount" : 288006388,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#809, ss_item_sk#810, ss_customer_sk#811, ss_cdemo_sk#812, ss_hdemo_sk#813, ss_addr_sk#814, ss_store_sk#815, ss_promo_sk#816, ss_ticket_number#817L, ss_quantity#818, ss_wholesale_cost#819, ss_list_price#820, ss_sales_price#821, ss_ext_discount_amt#822, ss_ext_sales_price#823, ss_ext_wholesale_cost#824, ss_ext_list_price#825, ss_ext_tax#826, ss_coupon_amt#827, ss_net_paid#828, ss_net_paid_inc_tax#829, ss_net_profit#830, ss_sold_date_sk#831], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "61" : {
            "sign" : 810836803,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 611203914034560000,
            "rowCount" : 38200244627160000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_store_sk#815 = s_store_sk#847) "
          },
          "107" : {
            "sign" : 1327837637,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 43776970976,
            "rowCount" : 288006388,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#1010, ss_item_sk#1011, ss_customer_sk#1012, ss_cdemo_sk#1013, ss_hdemo_sk#1014, ss_addr_sk#1015, ss_store_sk#1016, ss_promo_sk#1017, ss_ticket_number#1018L, ss_quantity#1019, ss_wholesale_cost#1020, ss_list_price#1021, ss_sales_price#1022, ss_ext_discount_amt#1023, ss_ext_sales_price#1024, ss_ext_wholesale_cost#1025, ss_ext_list_price#1026, ss_ext_tax#1027, ss_coupon_amt#1028, ss_net_paid#1029, ss_net_paid_inc_tax#1030, ss_net_profit#1031, ss_sold_date_sk#1032], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "13" : {
            "sign" : -1660176330,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 6498864264,
            "rowCount" : 270786011,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_time_sk#16 = t_time_sk#44) "
          },
          "46" : {
            "sign" : 250273269,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 16,
            "rowCount" : 1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [count(1) AS h10_to_10_30#595L] "
          },
          "99" : {
            "sign" : -462968903,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 305601957017280000,
            "rowCount" : 38200244627160000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project "
          },
          "24" : {
            "sign" : -2050258145,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 16255423245600000,
            "rowCount" : 812771162280000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_hdemo_sk#612 = hd_demo_sk#631) "
          },
          "94" : {
            "sign" : -625696279,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 43776970976,
            "rowCount" : 288006388,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#943, ss_item_sk#944, ss_customer_sk#945, ss_cdemo_sk#946, ss_hdemo_sk#947, ss_addr_sk#948, ss_store_sk#949, ss_promo_sk#950, ss_ticket_number#951L, ss_quantity#952, ss_wholesale_cost#953, ss_list_price#954, ss_sales_price#955, ss_ext_discount_amt#956, ss_ext_sales_price#957, ss_ext_wholesale_cost#958, ss_ext_list_price#959, ss_ext_tax#960, ss_coupon_amt#961, ss_net_paid#962, ss_net_paid_inc_tax#963, ss_net_profit#964, ss_sold_date_sk#965], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "83" : {
            "sign" : -1327710554,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1106176,
            "rowCount" : 1800,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [hd_demo_sk#899], BroadcastQueryStage 25 "
          },
          "35" : {
            "sign" : 953076873,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 611203914034560000,
            "rowCount" : 38200244627160000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_store_sk#681 = s_store_sk#713) "
          },
          "16" : {
            "sign" : 437822322,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 43776970976,
            "rowCount" : 288006388,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#16, ss_item_sk#17, ss_customer_sk#18, ss_cdemo_sk#19, ss_hdemo_sk#20, ss_addr_sk#21, ss_store_sk#22, ss_promo_sk#23, ss_ticket_number#24L, ss_quantity#25, ss_wholesale_cost#26, ss_list_price#27, ss_sales_price#28, ss_ext_discount_amt#29, ss_ext_sales_price#30, ss_ext_wholesale_cost#31, ss_ext_list_price#32, ss_ext_tax#33, ss_coupon_amt#34, ss_net_paid#35, ss_net_paid_inc_tax#36, ss_net_profit#37, ss_sold_date_sk#38], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "79" : {
            "sign" : -1328452110,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 5017105940,
            "rowCount" : 250855297,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_sold_time_sk#876, ss_hdemo_sk#880, ss_store_sk#882] "
          },
          "5" : {
            "sign" : -38630686,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 32,
            "rowCount" : 1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Cross "
          },
          "103" : {
            "sign" : -1032073199,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 7224632553600,
            "rowCount" : 451539534600,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_hdemo_sk#1014, ss_store_sk#1016] "
          },
          "72" : {
            "sign" : -1039753015,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 16,
            "rowCount" : 1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [count(1) AS h11_to_11_30#597L] "
          },
          "10" : {
            "sign" : -1215002415,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 5848977837600,
            "rowCount" : 487414819800,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_store_sk#22] "
          },
          "59" : {
            "sign" : -137132071,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 16,
            "rowCount" : 1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [count(1) AS h10_30_to_11#596L] "
          },
          "87" : {
            "sign" : 11877264,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 611203914034560000,
            "rowCount" : 38200244627160000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_store_sk#949 = s_store_sk#981) "
          },
          "48" : {
            "sign" : 987083689,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 366535944489600,
            "rowCount" : 22908496530600,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_store_sk#748 = s_store_sk#780) "
          },
          "21" : {
            "sign" : -117586114,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 305601957017280000,
            "rowCount" : 38200244627160000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project "
          },
          "76" : {
            "sign" : -657041431,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 9748296396000,
            "rowCount" : 487414819800,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_hdemo_sk#880 = hd_demo_sk#899) "
          },
          "54" : {
            "sign" : 1491510529,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 38130005144,
            "rowCount" : 250855297,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(ss_hdemo_sk#746) AND (isnotnull(ss_sold_time_sk#742) AND isnotnull(ss_store_sk#748))) "
          },
          "43" : {
            "sign" : -305849591,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1062976,
            "rowCount" : 1800,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [t_time_sk#703], BroadcastQueryStage 8 "
          },
          "65" : {
            "sign" : -1169767019,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 10836948830400,
            "rowCount" : 451539534600,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_time_sk#809 = t_time_sk#837) "
          },
          "71" : {
            "sign" : 1506917117,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1051712,
            "rowCount" : 47,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [s_store_sk#847], BroadcastQueryStage 22 "
          },
          "57" : {
            "sign" : -808092349,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1106176,
            "rowCount" : 1800,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [hd_demo_sk#765], BroadcastQueryStage 15 "
          },
          "108" : {
            "sign" : 1663047275,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1062976,
            "rowCount" : 1800,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [t_time_sk#1038], BroadcastQueryStage 33 "
          },
          "32" : {
            "sign" : 249968963,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1051712,
            "rowCount" : 47,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [s_store_sk#646], BroadcastQueryStage 7 "
          },
          "80" : {
            "sign" : 1091438933,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 38130005144,
            "rowCount" : 250855297,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(ss_hdemo_sk#880) AND (isnotnull(ss_sold_time_sk#876) AND isnotnull(ss_store_sk#882))) "
          },
          "106" : {
            "sign" : 98567939,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 38130005144,
            "rowCount" : 250855297,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(ss_hdemo_sk#1014) AND (isnotnull(ss_sold_time_sk#1010) AND isnotnull(ss_store_sk#1016))) "
          },
          "82" : {
            "sign" : 1456410197,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 24696,
            "rowCount" : 2058,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [t_time_sk#904], BroadcastQueryStage 23 "
          },
          "49" : {
            "sign" : -1364202966,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 5848977837600,
            "rowCount" : 487414819800,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_store_sk#748] "
          },
          "6" : {
            "sign" : 1998875759,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 24,
            "rowCount" : 1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Cross "
          },
          "36" : {
            "sign" : 904390647,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 9753253947360000,
            "rowCount" : 812771162280000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_store_sk#681] "
          },
          "1" : {
            "sign" : -884914985,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 64,
            "rowCount" : 1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Cross "
          },
          "39" : {
            "sign" : 363952334,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 10836948830400,
            "rowCount" : 451539534600,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_time_sk#675 = t_time_sk#703) "
          },
          "17" : {
            "sign" : 913310973,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 24492,
            "rowCount" : 2041,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [t_time_sk#44], BroadcastQueryStage 0 "
          },
          "25" : {
            "sign" : 1429698073,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 7224632553600,
            "rowCount" : 451539534600,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_hdemo_sk#612, ss_store_sk#614] "
          },
          "60" : {
            "sign" : 491217444,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 305601957017280000,
            "rowCount" : 38200244627160000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project "
          },
          "14" : {
            "sign" : 450172376,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 5017105940,
            "rowCount" : 250855297,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_sold_time_sk#16, ss_hdemo_sk#20, ss_store_sk#22] "
          },
          "47" : {
            "sign" : -466410454,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 183267972244800,
            "rowCount" : 22908496530600,
            "isRuntime" : false,
            "predicate" : " (unknown) Project "
          },
          "102" : {
            "sign" : 425920781,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 16255423245600000,
            "rowCount" : 812771162280000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_hdemo_sk#1014 = hd_demo_sk#1033) "
          },
          "31" : {
            "sign" : -147852838,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1106176,
            "rowCount" : 1800,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [hd_demo_sk#631], BroadcastQueryStage 5 "
          },
          "96" : {
            "sign" : 1539726829,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1106176,
            "rowCount" : 1800,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [hd_demo_sk#966], BroadcastQueryStage 30 "
          },
          "69" : {
            "sign" : -1411027186,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1062976,
            "rowCount" : 1800,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [t_time_sk#837], BroadcastQueryStage 18 "
          },
          "95" : {
            "sign" : 1083379782,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1062976,
            "rowCount" : 1800,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [t_time_sk#971], BroadcastQueryStage 28 "
          },
          "58" : {
            "sign" : 1653504907,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1051712,
            "rowCount" : 47,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [s_store_sk#780], BroadcastQueryStage 17 "
          },
          "64" : {
            "sign" : 1489909996,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 7224632553600,
            "rowCount" : 451539534600,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_hdemo_sk#813, ss_store_sk#815] "
          },
          "53" : {
            "sign" : -987700956,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 5017105940,
            "rowCount" : 250855297,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_sold_time_sk#742, ss_hdemo_sk#746, ss_store_sk#748] "
          },
          "42" : {
            "sign" : 635767337,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 43776970976,
            "rowCount" : 288006388,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#675, ss_item_sk#676, ss_customer_sk#677, ss_cdemo_sk#678, ss_hdemo_sk#679, ss_addr_sk#680, ss_store_sk#681, ss_promo_sk#682, ss_ticket_number#683L, ss_quantity#684, ss_wholesale_cost#685, ss_list_price#686, ss_sales_price#687, ss_ext_discount_amt#688, ss_ext_sales_price#689, ss_ext_wholesale_cost#690, ss_ext_list_price#691, ss_ext_tax#692, ss_coupon_amt#693, ss_net_paid#694, ss_net_paid_inc_tax#695, ss_net_profit#696, ss_sold_date_sk#697], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "75" : {
            "sign" : -691776830,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 5848977837600,
            "rowCount" : 487414819800,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_store_sk#882] "
          },
          "109" : {
            "sign" : 83596140,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1106176,
            "rowCount" : 1800,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [hd_demo_sk#1033], BroadcastQueryStage 35 "
          },
          "0" : {
            "sign" : 1414141494,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 72,
            "rowCount" : 1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Cross "
          },
          "20" : {
            "sign" : -1124850159,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 16,
            "rowCount" : 1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [count(1) AS h9_to_9_30#593L] "
          },
          "27" : {
            "sign" : -1106374654,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 5017105940,
            "rowCount" : 250855297,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_sold_time_sk#608, ss_hdemo_sk#612, ss_store_sk#614] "
          },
          "70" : {
            "sign" : 2059345034,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1106176,
            "rowCount" : 1800,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [hd_demo_sk#832], BroadcastQueryStage 20 "
          },
          "2" : {
            "sign" : 371361886,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 56,
            "rowCount" : 1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Cross "
          },
          "86" : {
            "sign" : -1277550237,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 305601957017280000,
            "rowCount" : 38200244627160000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project "
          },
          "38" : {
            "sign" : -1982015416,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 7224632553600,
            "rowCount" : 451539534600,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_hdemo_sk#679, ss_store_sk#681] "
          },
          "81" : {
            "sign" : -1475086830,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 43776970976,
            "rowCount" : 288006388,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#876, ss_item_sk#877, ss_customer_sk#878, ss_cdemo_sk#879, ss_hdemo_sk#880, ss_addr_sk#881, ss_store_sk#882, ss_promo_sk#883, ss_ticket_number#884L, ss_quantity#885, ss_wholesale_cost#886, ss_list_price#887, ss_sales_price#888, ss_ext_discount_amt#889, ss_ext_sales_price#890, ss_ext_wholesale_cost#891, ss_ext_list_price#892, ss_ext_tax#893, ss_coupon_amt#894, ss_net_paid#895, ss_net_paid_inc_tax#896, ss_net_profit#897, ss_sold_date_sk#898], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "92" : {
            "sign" : 1259161671,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 5017105940,
            "rowCount" : 250855297,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_sold_time_sk#943, ss_hdemo_sk#947, ss_store_sk#949] "
          },
          "18" : {
            "sign" : -1511403410,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1106176,
            "rowCount" : 1800,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [hd_demo_sk#39], BroadcastQueryStage 1 "
          },
          "101" : {
            "sign" : -738934410,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 9753253947360000,
            "rowCount" : 812771162280000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_store_sk#1016] "
          },
          "30" : {
            "sign" : -1368179025,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1062976,
            "rowCount" : 1800,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [t_time_sk#636], BroadcastQueryStage 3 "
          },
          "7" : {
            "sign" : 1728500457,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 16,
            "rowCount" : 1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [count(1) AS h8_30_to_9#592L] "
          },
          "97" : {
            "sign" : -293643211,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1051712,
            "rowCount" : 47,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [s_store_sk#981], BroadcastQueryStage 32 "
          },
          "29" : {
            "sign" : -1742933008,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 43776970976,
            "rowCount" : 288006388,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#608, ss_item_sk#609, ss_customer_sk#610, ss_cdemo_sk#611, ss_hdemo_sk#612, ss_addr_sk#613, ss_store_sk#614, ss_promo_sk#615, ss_ticket_number#616L, ss_quantity#617, ss_wholesale_cost#618, ss_list_price#619, ss_sales_price#620, ss_ext_discount_amt#621, ss_ext_sales_price#622, ss_ext_wholesale_cost#623, ss_ext_list_price#624, ss_ext_tax#625, ss_coupon_amt#626, ss_net_paid#627, ss_net_paid_inc_tax#628, ss_net_profit#629, ss_sold_date_sk#630], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "41" : {
            "sign" : 652889460,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 38130005144,
            "rowCount" : 250855297,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(ss_hdemo_sk#679) AND (isnotnull(ss_sold_time_sk#675) AND isnotnull(ss_store_sk#681))) "
          },
          "105" : {
            "sign" : 1563505905,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 5017105940,
            "rowCount" : 250855297,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_sold_time_sk#1010, ss_hdemo_sk#1014, ss_store_sk#1016] "
          },
          "63" : {
            "sign" : -914281514,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 16255423245600000,
            "rowCount" : 812771162280000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_hdemo_sk#813 = hd_demo_sk#832) "
          },
          "3" : {
            "sign" : 476882298,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 48,
            "rowCount" : 1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Cross "
          },
          "74" : {
            "sign" : 2094668029,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 366535944489600,
            "rowCount" : 22908496530600,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_store_sk#882 = s_store_sk#914) "
          },
          "91" : {
            "sign" : 900128986,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 10836948830400,
            "rowCount" : 451539534600,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_time_sk#943 = t_time_sk#971) "
          },
          "52" : {
            "sign" : 1976333482,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 6498864264,
            "rowCount" : 270786011,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_time_sk#742 = t_time_sk#770) "
          },
          "85" : {
            "sign" : 664063112,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 16,
            "rowCount" : 1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [count(1) AS h11_30_to_12#598L] "
          },
          "28" : {
            "sign" : 1668407866,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 38130005144,
            "rowCount" : 250855297,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(ss_hdemo_sk#612) AND (isnotnull(ss_sold_time_sk#608) AND isnotnull(ss_store_sk#614))) "
          }
        },
        "links" : [ {
          "fromId" : 16,
          "fromName" : "LogicalRelation",
          "toId" : 15,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 15,
          "fromName" : "Filter",
          "toId" : 14,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 14,
          "fromName" : "Project",
          "toId" : 13,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 17,
          "fromName" : "LogicalQueryStage",
          "toId" : 13,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 13,
          "fromName" : "Join",
          "toId" : 12,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 12,
          "fromName" : "Project",
          "toId" : 11,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 18,
          "fromName" : "LogicalQueryStage",
          "toId" : 11,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "Join",
          "toId" : 10,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "Project",
          "toId" : 9,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 19,
          "fromName" : "LogicalQueryStage",
          "toId" : 9,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "Join",
          "toId" : 8,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "Project",
          "toId" : 7,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Aggregate",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 29,
          "fromName" : "LogicalRelation",
          "toId" : 28,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 28,
          "fromName" : "Filter",
          "toId" : 27,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 27,
          "fromName" : "Project",
          "toId" : 26,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 30,
          "fromName" : "LogicalQueryStage",
          "toId" : 26,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 26,
          "fromName" : "Join",
          "toId" : 25,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 25,
          "fromName" : "Project",
          "toId" : 24,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 31,
          "fromName" : "LogicalQueryStage",
          "toId" : 24,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 24,
          "fromName" : "Join",
          "toId" : 23,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 23,
          "fromName" : "Project",
          "toId" : 22,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 32,
          "fromName" : "LogicalQueryStage",
          "toId" : 22,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 22,
          "fromName" : "Join",
          "toId" : 21,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 21,
          "fromName" : "Project",
          "toId" : 20,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 20,
          "fromName" : "Aggregate",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Join",
          "toId" : 5,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 42,
          "fromName" : "LogicalRelation",
          "toId" : 41,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 41,
          "fromName" : "Filter",
          "toId" : 40,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 40,
          "fromName" : "Project",
          "toId" : 39,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 43,
          "fromName" : "LogicalQueryStage",
          "toId" : 39,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 39,
          "fromName" : "Join",
          "toId" : 38,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 38,
          "fromName" : "Project",
          "toId" : 37,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 44,
          "fromName" : "LogicalQueryStage",
          "toId" : 37,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 37,
          "fromName" : "Join",
          "toId" : 36,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 36,
          "fromName" : "Project",
          "toId" : 35,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 45,
          "fromName" : "LogicalQueryStage",
          "toId" : 35,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 35,
          "fromName" : "Join",
          "toId" : 34,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 34,
          "fromName" : "Project",
          "toId" : 33,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 33,
          "fromName" : "Aggregate",
          "toId" : 5,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Join",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 55,
          "fromName" : "LogicalRelation",
          "toId" : 54,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 54,
          "fromName" : "Filter",
          "toId" : 53,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 53,
          "fromName" : "Project",
          "toId" : 52,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 56,
          "fromName" : "LogicalQueryStage",
          "toId" : 52,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 52,
          "fromName" : "Join",
          "toId" : 51,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 51,
          "fromName" : "Project",
          "toId" : 50,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 57,
          "fromName" : "LogicalQueryStage",
          "toId" : 50,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 50,
          "fromName" : "Join",
          "toId" : 49,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 49,
          "fromName" : "Project",
          "toId" : 48,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 58,
          "fromName" : "LogicalQueryStage",
          "toId" : 48,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 48,
          "fromName" : "Join",
          "toId" : 47,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 47,
          "fromName" : "Project",
          "toId" : 46,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 46,
          "fromName" : "Aggregate",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Join",
          "toId" : 3,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 68,
          "fromName" : "LogicalRelation",
          "toId" : 67,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 67,
          "fromName" : "Filter",
          "toId" : 66,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 66,
          "fromName" : "Project",
          "toId" : 65,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 69,
          "fromName" : "LogicalQueryStage",
          "toId" : 65,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 65,
          "fromName" : "Join",
          "toId" : 64,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 64,
          "fromName" : "Project",
          "toId" : 63,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 70,
          "fromName" : "LogicalQueryStage",
          "toId" : 63,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 63,
          "fromName" : "Join",
          "toId" : 62,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 62,
          "fromName" : "Project",
          "toId" : 61,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 71,
          "fromName" : "LogicalQueryStage",
          "toId" : 61,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 61,
          "fromName" : "Join",
          "toId" : 60,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 60,
          "fromName" : "Project",
          "toId" : 59,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 59,
          "fromName" : "Aggregate",
          "toId" : 3,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Join",
          "toId" : 2,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 81,
          "fromName" : "LogicalRelation",
          "toId" : 80,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 80,
          "fromName" : "Filter",
          "toId" : 79,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 79,
          "fromName" : "Project",
          "toId" : 78,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 82,
          "fromName" : "LogicalQueryStage",
          "toId" : 78,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 78,
          "fromName" : "Join",
          "toId" : 77,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 77,
          "fromName" : "Project",
          "toId" : 76,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 83,
          "fromName" : "LogicalQueryStage",
          "toId" : 76,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 76,
          "fromName" : "Join",
          "toId" : 75,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 75,
          "fromName" : "Project",
          "toId" : 74,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 84,
          "fromName" : "LogicalQueryStage",
          "toId" : 74,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 74,
          "fromName" : "Join",
          "toId" : 73,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 73,
          "fromName" : "Project",
          "toId" : 72,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 72,
          "fromName" : "Aggregate",
          "toId" : 2,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Join",
          "toId" : 1,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 94,
          "fromName" : "LogicalRelation",
          "toId" : 93,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 93,
          "fromName" : "Filter",
          "toId" : 92,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 92,
          "fromName" : "Project",
          "toId" : 91,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 95,
          "fromName" : "LogicalQueryStage",
          "toId" : 91,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 91,
          "fromName" : "Join",
          "toId" : 90,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 90,
          "fromName" : "Project",
          "toId" : 89,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 96,
          "fromName" : "LogicalQueryStage",
          "toId" : 89,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 89,
          "fromName" : "Join",
          "toId" : 88,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 88,
          "fromName" : "Project",
          "toId" : 87,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 97,
          "fromName" : "LogicalQueryStage",
          "toId" : 87,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 87,
          "fromName" : "Join",
          "toId" : 86,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 86,
          "fromName" : "Project",
          "toId" : 85,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 85,
          "fromName" : "Aggregate",
          "toId" : 1,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Join",
          "toId" : 0,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 107,
          "fromName" : "LogicalRelation",
          "toId" : 106,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 106,
          "fromName" : "Filter",
          "toId" : 105,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 105,
          "fromName" : "Project",
          "toId" : 104,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 108,
          "fromName" : "LogicalQueryStage",
          "toId" : 104,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 104,
          "fromName" : "Join",
          "toId" : 103,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 103,
          "fromName" : "Project",
          "toId" : 102,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 109,
          "fromName" : "LogicalQueryStage",
          "toId" : 102,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 102,
          "fromName" : "Join",
          "toId" : 101,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 101,
          "fromName" : "Project",
          "toId" : 100,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 110,
          "fromName" : "LogicalQueryStage",
          "toId" : 100,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 100,
          "fromName" : "Join",
          "toId" : 99,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 99,
          "fromName" : "Project",
          "toId" : 98,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 98,
          "fromName" : "Aggregate",
          "toId" : 0,
          "toName" : "Join",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Join Cross\n:- Join Cross\n:  :- Join Cross\n:  :  :- Join Cross\n:  :  :  :- Join Cross\n:  :  :  :  :- Join Cross\n:  :  :  :  :  :- Join Cross\n:  :  :  :  :  :  :- Aggregate [count(1) AS h8_30_to_9#592L]\n:  :  :  :  :  :  :  +- Project\n:  :  :  :  :  :  :     +- Join Inner, (ss_store_sk#22 = s_store_sk#54)\n:  :  :  :  :  :  :        :- Project [ss_store_sk#22]\n:  :  :  :  :  :  :        :  +- Join Inner, (ss_hdemo_sk#20 = hd_demo_sk#39)\n:  :  :  :  :  :  :        :     :- Project [ss_hdemo_sk#20, ss_store_sk#22]\n:  :  :  :  :  :  :        :     :  +- Join Inner, (ss_sold_time_sk#16 = t_time_sk#44)\n:  :  :  :  :  :  :        :     :     :- Project [ss_sold_time_sk#16, ss_hdemo_sk#20, ss_store_sk#22]\n:  :  :  :  :  :  :        :     :     :  +- Filter (isnotnull(ss_hdemo_sk#20) AND (isnotnull(ss_sold_time_sk#16) AND isnotnull(ss_store_sk#22)))\n:  :  :  :  :  :  :        :     :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#16,ss_item_sk#17,ss_customer_sk#18,ss_cdemo_sk#19,ss_hdemo_sk#20,ss_addr_sk#21,ss_store_sk#22,ss_promo_sk#23,ss_ticket_number#24L,ss_quantity#25,ss_wholesale_cost#26,ss_list_price#27,ss_sales_price#28,ss_ext_discount_amt#29,ss_ext_sales_price#30,ss_ext_wholesale_cost#31,ss_ext_list_price#32,ss_ext_tax#33,ss_coupon_amt#34,ss_net_paid#35,ss_net_paid_inc_tax#36,ss_net_profit#37,ss_sold_date_sk#38] parquet\n:  :  :  :  :  :  :        :     :     +- LogicalQueryStage Project [t_time_sk#44], BroadcastQueryStage 0\n:  :  :  :  :  :  :        :     +- LogicalQueryStage Project [hd_demo_sk#39], BroadcastQueryStage 1\n:  :  :  :  :  :  :        +- LogicalQueryStage Project [s_store_sk#54], BroadcastQueryStage 2\n:  :  :  :  :  :  +- Aggregate [count(1) AS h9_to_9_30#593L]\n:  :  :  :  :  :     +- Project\n:  :  :  :  :  :        +- Join Inner, (ss_store_sk#614 = s_store_sk#646)\n:  :  :  :  :  :           :- Project [ss_store_sk#614]\n:  :  :  :  :  :           :  +- Join Inner, (ss_hdemo_sk#612 = hd_demo_sk#631)\n:  :  :  :  :  :           :     :- Project [ss_hdemo_sk#612, ss_store_sk#614]\n:  :  :  :  :  :           :     :  +- Join Inner, (ss_sold_time_sk#608 = t_time_sk#636)\n:  :  :  :  :  :           :     :     :- Project [ss_sold_time_sk#608, ss_hdemo_sk#612, ss_store_sk#614]\n:  :  :  :  :  :           :     :     :  +- Filter (isnotnull(ss_hdemo_sk#612) AND (isnotnull(ss_sold_time_sk#608) AND isnotnull(ss_store_sk#614)))\n:  :  :  :  :  :           :     :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#608,ss_item_sk#609,ss_customer_sk#610,ss_cdemo_sk#611,ss_hdemo_sk#612,ss_addr_sk#613,ss_store_sk#614,ss_promo_sk#615,ss_ticket_number#616L,ss_quantity#617,ss_wholesale_cost#618,ss_list_price#619,ss_sales_price#620,ss_ext_discount_amt#621,ss_ext_sales_price#622,ss_ext_wholesale_cost#623,ss_ext_list_price#624,ss_ext_tax#625,ss_coupon_amt#626,ss_net_paid#627,ss_net_paid_inc_tax#628,ss_net_profit#629,ss_sold_date_sk#630] parquet\n:  :  :  :  :  :           :     :     +- LogicalQueryStage Project [t_time_sk#636], BroadcastQueryStage 3\n:  :  :  :  :  :           :     +- LogicalQueryStage Project [hd_demo_sk#631], BroadcastQueryStage 5\n:  :  :  :  :  :           +- LogicalQueryStage Project [s_store_sk#646], BroadcastQueryStage 7\n:  :  :  :  :  +- Aggregate [count(1) AS h9_30_to_10#594L]\n:  :  :  :  :     +- Project\n:  :  :  :  :        +- Join Inner, (ss_store_sk#681 = s_store_sk#713)\n:  :  :  :  :           :- Project [ss_store_sk#681]\n:  :  :  :  :           :  +- Join Inner, (ss_hdemo_sk#679 = hd_demo_sk#698)\n:  :  :  :  :           :     :- Project [ss_hdemo_sk#679, ss_store_sk#681]\n:  :  :  :  :           :     :  +- Join Inner, (ss_sold_time_sk#675 = t_time_sk#703)\n:  :  :  :  :           :     :     :- Project [ss_sold_time_sk#675, ss_hdemo_sk#679, ss_store_sk#681]\n:  :  :  :  :           :     :     :  +- Filter (isnotnull(ss_hdemo_sk#679) AND (isnotnull(ss_sold_time_sk#675) AND isnotnull(ss_store_sk#681)))\n:  :  :  :  :           :     :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#675,ss_item_sk#676,ss_customer_sk#677,ss_cdemo_sk#678,ss_hdemo_sk#679,ss_addr_sk#680,ss_store_sk#681,ss_promo_sk#682,ss_ticket_number#683L,ss_quantity#684,ss_wholesale_cost#685,ss_list_price#686,ss_sales_price#687,ss_ext_discount_amt#688,ss_ext_sales_price#689,ss_ext_wholesale_cost#690,ss_ext_list_price#691,ss_ext_tax#692,ss_coupon_amt#693,ss_net_paid#694,ss_net_paid_inc_tax#695,ss_net_profit#696,ss_sold_date_sk#697] parquet\n:  :  :  :  :           :     :     +- LogicalQueryStage Project [t_time_sk#703], BroadcastQueryStage 8\n:  :  :  :  :           :     +- LogicalQueryStage Project [hd_demo_sk#698], BroadcastQueryStage 10\n:  :  :  :  :           +- LogicalQueryStage Project [s_store_sk#713], BroadcastQueryStage 12\n:  :  :  :  +- Aggregate [count(1) AS h10_to_10_30#595L]\n:  :  :  :     +- Project\n:  :  :  :        +- Join Inner, (ss_store_sk#748 = s_store_sk#780)\n:  :  :  :           :- Project [ss_store_sk#748]\n:  :  :  :           :  +- Join Inner, (ss_hdemo_sk#746 = hd_demo_sk#765)\n:  :  :  :           :     :- Project [ss_hdemo_sk#746, ss_store_sk#748]\n:  :  :  :           :     :  +- Join Inner, (ss_sold_time_sk#742 = t_time_sk#770)\n:  :  :  :           :     :     :- Project [ss_sold_time_sk#742, ss_hdemo_sk#746, ss_store_sk#748]\n:  :  :  :           :     :     :  +- Filter (isnotnull(ss_hdemo_sk#746) AND (isnotnull(ss_sold_time_sk#742) AND isnotnull(ss_store_sk#748)))\n:  :  :  :           :     :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#742,ss_item_sk#743,ss_customer_sk#744,ss_cdemo_sk#745,ss_hdemo_sk#746,ss_addr_sk#747,ss_store_sk#748,ss_promo_sk#749,ss_ticket_number#750L,ss_quantity#751,ss_wholesale_cost#752,ss_list_price#753,ss_sales_price#754,ss_ext_discount_amt#755,ss_ext_sales_price#756,ss_ext_wholesale_cost#757,ss_ext_list_price#758,ss_ext_tax#759,ss_coupon_amt#760,ss_net_paid#761,ss_net_paid_inc_tax#762,ss_net_profit#763,ss_sold_date_sk#764] parquet\n:  :  :  :           :     :     +- LogicalQueryStage Project [t_time_sk#770], BroadcastQueryStage 13\n:  :  :  :           :     +- LogicalQueryStage Project [hd_demo_sk#765], BroadcastQueryStage 15\n:  :  :  :           +- LogicalQueryStage Project [s_store_sk#780], BroadcastQueryStage 17\n:  :  :  +- Aggregate [count(1) AS h10_30_to_11#596L]\n:  :  :     +- Project\n:  :  :        +- Join Inner, (ss_store_sk#815 = s_store_sk#847)\n:  :  :           :- Project [ss_store_sk#815]\n:  :  :           :  +- Join Inner, (ss_hdemo_sk#813 = hd_demo_sk#832)\n:  :  :           :     :- Project [ss_hdemo_sk#813, ss_store_sk#815]\n:  :  :           :     :  +- Join Inner, (ss_sold_time_sk#809 = t_time_sk#837)\n:  :  :           :     :     :- Project [ss_sold_time_sk#809, ss_hdemo_sk#813, ss_store_sk#815]\n:  :  :           :     :     :  +- Filter (isnotnull(ss_hdemo_sk#813) AND (isnotnull(ss_sold_time_sk#809) AND isnotnull(ss_store_sk#815)))\n:  :  :           :     :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#809,ss_item_sk#810,ss_customer_sk#811,ss_cdemo_sk#812,ss_hdemo_sk#813,ss_addr_sk#814,ss_store_sk#815,ss_promo_sk#816,ss_ticket_number#817L,ss_quantity#818,ss_wholesale_cost#819,ss_list_price#820,ss_sales_price#821,ss_ext_discount_amt#822,ss_ext_sales_price#823,ss_ext_wholesale_cost#824,ss_ext_list_price#825,ss_ext_tax#826,ss_coupon_amt#827,ss_net_paid#828,ss_net_paid_inc_tax#829,ss_net_profit#830,ss_sold_date_sk#831] parquet\n:  :  :           :     :     +- LogicalQueryStage Project [t_time_sk#837], BroadcastQueryStage 18\n:  :  :           :     +- LogicalQueryStage Project [hd_demo_sk#832], BroadcastQueryStage 20\n:  :  :           +- LogicalQueryStage Project [s_store_sk#847], BroadcastQueryStage 22\n:  :  +- Aggregate [count(1) AS h11_to_11_30#597L]\n:  :     +- Project\n:  :        +- Join Inner, (ss_store_sk#882 = s_store_sk#914)\n:  :           :- Project [ss_store_sk#882]\n:  :           :  +- Join Inner, (ss_hdemo_sk#880 = hd_demo_sk#899)\n:  :           :     :- Project [ss_hdemo_sk#880, ss_store_sk#882]\n:  :           :     :  +- Join Inner, (ss_sold_time_sk#876 = t_time_sk#904)\n:  :           :     :     :- Project [ss_sold_time_sk#876, ss_hdemo_sk#880, ss_store_sk#882]\n:  :           :     :     :  +- Filter (isnotnull(ss_hdemo_sk#880) AND (isnotnull(ss_sold_time_sk#876) AND isnotnull(ss_store_sk#882)))\n:  :           :     :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#876,ss_item_sk#877,ss_customer_sk#878,ss_cdemo_sk#879,ss_hdemo_sk#880,ss_addr_sk#881,ss_store_sk#882,ss_promo_sk#883,ss_ticket_number#884L,ss_quantity#885,ss_wholesale_cost#886,ss_list_price#887,ss_sales_price#888,ss_ext_discount_amt#889,ss_ext_sales_price#890,ss_ext_wholesale_cost#891,ss_ext_list_price#892,ss_ext_tax#893,ss_coupon_amt#894,ss_net_paid#895,ss_net_paid_inc_tax#896,ss_net_profit#897,ss_sold_date_sk#898] parquet\n:  :           :     :     +- LogicalQueryStage Project [t_time_sk#904], BroadcastQueryStage 23\n:  :           :     +- LogicalQueryStage Project [hd_demo_sk#899], BroadcastQueryStage 25\n:  :           +- LogicalQueryStage Project [s_store_sk#914], BroadcastQueryStage 27\n:  +- Aggregate [count(1) AS h11_30_to_12#598L]\n:     +- Project\n:        +- Join Inner, (ss_store_sk#949 = s_store_sk#981)\n:           :- Project [ss_store_sk#949]\n:           :  +- Join Inner, (ss_hdemo_sk#947 = hd_demo_sk#966)\n:           :     :- Project [ss_hdemo_sk#947, ss_store_sk#949]\n:           :     :  +- Join Inner, (ss_sold_time_sk#943 = t_time_sk#971)\n:           :     :     :- Project [ss_sold_time_sk#943, ss_hdemo_sk#947, ss_store_sk#949]\n:           :     :     :  +- Filter (isnotnull(ss_hdemo_sk#947) AND (isnotnull(ss_sold_time_sk#943) AND isnotnull(ss_store_sk#949)))\n:           :     :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#943,ss_item_sk#944,ss_customer_sk#945,ss_cdemo_sk#946,ss_hdemo_sk#947,ss_addr_sk#948,ss_store_sk#949,ss_promo_sk#950,ss_ticket_number#951L,ss_quantity#952,ss_wholesale_cost#953,ss_list_price#954,ss_sales_price#955,ss_ext_discount_amt#956,ss_ext_sales_price#957,ss_ext_wholesale_cost#958,ss_ext_list_price#959,ss_ext_tax#960,ss_coupon_amt#961,ss_net_paid#962,ss_net_paid_inc_tax#963,ss_net_profit#964,ss_sold_date_sk#965] parquet\n:           :     :     +- LogicalQueryStage Project [t_time_sk#971], BroadcastQueryStage 28\n:           :     +- LogicalQueryStage Project [hd_demo_sk#966], BroadcastQueryStage 30\n:           +- LogicalQueryStage Project [s_store_sk#981], BroadcastQueryStage 32\n+- Aggregate [count(1) AS h12_to_12_30#599L]\n   +- Project\n      +- Join Inner, (ss_store_sk#1016 = s_store_sk#1048)\n         :- Project [ss_store_sk#1016]\n         :  +- Join Inner, (ss_hdemo_sk#1014 = hd_demo_sk#1033)\n         :     :- Project [ss_hdemo_sk#1014, ss_store_sk#1016]\n         :     :  +- Join Inner, (ss_sold_time_sk#1010 = t_time_sk#1038)\n         :     :     :- Project [ss_sold_time_sk#1010, ss_hdemo_sk#1014, ss_store_sk#1016]\n         :     :     :  +- Filter (isnotnull(ss_hdemo_sk#1014) AND (isnotnull(ss_sold_time_sk#1010) AND isnotnull(ss_store_sk#1016)))\n         :     :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#1010,ss_item_sk#1011,ss_customer_sk#1012,ss_cdemo_sk#1013,ss_hdemo_sk#1014,ss_addr_sk#1015,ss_store_sk#1016,ss_promo_sk#1017,ss_ticket_number#1018L,ss_quantity#1019,ss_wholesale_cost#1020,ss_list_price#1021,ss_sales_price#1022,ss_ext_discount_amt#1023,ss_ext_sales_price#1024,ss_ext_wholesale_cost#1025,ss_ext_list_price#1026,ss_ext_tax#1027,ss_coupon_amt#1028,ss_net_paid#1029,ss_net_paid_inc_tax#1030,ss_net_profit#1031,ss_sold_date_sk#1032] parquet\n         :     :     +- LogicalQueryStage Project [t_time_sk#1038], BroadcastQueryStage 33\n         :     +- LogicalQueryStage Project [hd_demo_sk#1033], BroadcastQueryStage 35\n         +- LogicalQueryStage Project [s_store_sk#1048], BroadcastQueryStage 37\n"
      },
      "IM" : {
        "inputSizeInBytes" : 350238419676,
        "inputRowCount" : 2304081037
      },
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 2,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "StartTimeInMs" : 1702227452199,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 34892,
        "IOBytes" : {
          "Total" : 3841229711,
          "Details" : {
            "IR" : 3841077735,
            "IW" : 0,
            "SR" : 75988,
            "SW" : 75988
          }
        }
      }
    },
    "18" : {
      "LQP" : {
        "operators" : {
          "12" : {
            "sign" : 1859597383,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 16,
            "rowCount" : 1,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: LogicalQueryStage Aggregate [count(1) AS h11_to_11_30#597L], HashAggregate(keys=[], functions=[count(1)]), BroadcastQueryStage 52 "
          },
          "8" : {
            "sign" : -640907261,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 16,
            "rowCount" : 1,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: LogicalQueryStage Aggregate [count(1) AS h9_to_9_30#593L], HashAggregate(keys=[], functions=[count(1)]), BroadcastQueryStage 50 "
          },
          "4" : {
            "sign" : -1632486951,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 6440,
            "rowCount" : 161,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Cross "
          },
          "11" : {
            "sign" : 461391639,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 16,
            "rowCount" : 1,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: LogicalQueryStage Aggregate [count(1) AS h10_30_to_11#596L], HashAggregate(keys=[], functions=[count(1)]), BroadcastQueryStage 47 "
          },
          "9" : {
            "sign" : 1379352947,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 16,
            "rowCount" : 1,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: LogicalQueryStage Aggregate [count(1) AS h9_30_to_10#594L], HashAggregate(keys=[], functions=[count(1)]), BroadcastQueryStage 46 "
          },
          "13" : {
            "sign" : -672490412,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 16,
            "rowCount" : 1,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: LogicalQueryStage Aggregate [count(1) AS h11_30_to_12#598L], HashAggregate(keys=[], functions=[count(1)]), BroadcastQueryStage 48 "
          },
          "5" : {
            "sign" : 1507049806,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 5152,
            "rowCount" : 161,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Cross "
          },
          "10" : {
            "sign" : -353051992,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 16,
            "rowCount" : 1,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: LogicalQueryStage Aggregate [count(1) AS h10_to_10_30#595L], HashAggregate(keys=[], functions=[count(1)]), BroadcastQueryStage 51 "
          },
          "6" : {
            "sign" : -612370776,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 3864,
            "rowCount" : 161,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Cross "
          },
          "1" : {
            "sign" : -1281070420,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 10304,
            "rowCount" : 161,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Cross "
          },
          "14" : {
            "sign" : -222721313,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 16,
            "rowCount" : 1,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: LogicalQueryStage Aggregate [count(1) AS h12_to_12_30#599L], HashAggregate(keys=[], functions=[count(1)]), BroadcastQueryStage 49 "
          },
          "0" : {
            "sign" : -769132972,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 11592,
            "rowCount" : 161,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Cross "
          },
          "2" : {
            "sign" : 2016212971,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 9016,
            "rowCount" : 161,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Cross "
          },
          "7" : {
            "sign" : -1999474772,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 2576,
            "rowCount" : 161,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [count(1) AS h8_30_to_9#592L], HashAggregate(keys=[], functions=[count(1)]) "
          },
          "3" : {
            "sign" : 54628865,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 7728,
            "rowCount" : 161,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Cross "
          }
        },
        "links" : [ {
          "fromId" : 7,
          "fromName" : "LogicalQueryStage",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "LogicalQueryStage",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Join",
          "toId" : 5,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "LogicalQueryStage",
          "toId" : 5,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Join",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "LogicalQueryStage",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Join",
          "toId" : 3,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "LogicalQueryStage",
          "toId" : 3,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Join",
          "toId" : 2,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 12,
          "fromName" : "LogicalQueryStage",
          "toId" : 2,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Join",
          "toId" : 1,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 13,
          "fromName" : "LogicalQueryStage",
          "toId" : 1,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Join",
          "toId" : 0,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 14,
          "fromName" : "LogicalQueryStage",
          "toId" : 0,
          "toName" : "Join",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Join Cross\n:- Join Cross\n:  :- Join Cross\n:  :  :- Join Cross\n:  :  :  :- Join Cross\n:  :  :  :  :- Join Cross\n:  :  :  :  :  :- Join Cross\n:  :  :  :  :  :  :- LogicalQueryStage Aggregate [count(1) AS h8_30_to_9#592L], HashAggregate(keys=[], functions=[count(1)])\n:  :  :  :  :  :  +- LogicalQueryStage LogicalQueryStage Aggregate [count(1) AS h9_to_9_30#593L], HashAggregate(keys=[], functions=[count(1)]), BroadcastQueryStage 50\n:  :  :  :  :  +- LogicalQueryStage LogicalQueryStage Aggregate [count(1) AS h9_30_to_10#594L], HashAggregate(keys=[], functions=[count(1)]), BroadcastQueryStage 46\n:  :  :  :  +- LogicalQueryStage LogicalQueryStage Aggregate [count(1) AS h10_to_10_30#595L], HashAggregate(keys=[], functions=[count(1)]), BroadcastQueryStage 51\n:  :  :  +- LogicalQueryStage LogicalQueryStage Aggregate [count(1) AS h10_30_to_11#596L], HashAggregate(keys=[], functions=[count(1)]), BroadcastQueryStage 47\n:  :  +- LogicalQueryStage LogicalQueryStage Aggregate [count(1) AS h11_to_11_30#597L], HashAggregate(keys=[], functions=[count(1)]), BroadcastQueryStage 52\n:  +- LogicalQueryStage LogicalQueryStage Aggregate [count(1) AS h11_30_to_12#598L], HashAggregate(keys=[], functions=[count(1)]), BroadcastQueryStage 48\n+- LogicalQueryStage LogicalQueryStage Aggregate [count(1) AS h12_to_12_30#599L], HashAggregate(keys=[], functions=[count(1)]), BroadcastQueryStage 49\n"
      },
      "IM" : {
        "inputSizeInBytes" : 2688,
        "inputRowCount" : 168
      },
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "StartTimeInMs" : 1702227486926,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 165,
        "IOBytes" : {
          "Total" : 9499,
          "Details" : {
            "IR" : 0,
            "IW" : 0,
            "SR" : 9499,
            "SW" : 0
          }
        }
      }
    },
    "7" : {
      "LQP" : {
        "operators" : {
          "12" : {
            "sign" : 465392224,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 16,
            "rowCount" : 1,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [count(1) AS h11_to_11_30#597L], HashAggregate(keys=[], functions=[count(1)]) "
          },
          "8" : {
            "sign" : -260755430,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 2576,
            "rowCount" : 161,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [count(1) AS h9_to_9_30#593L], HashAggregate(keys=[], functions=[count(1)]) "
          },
          "4" : {
            "sign" : -1554653464,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 1036840,
            "rowCount" : 25921,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Cross "
          },
          "11" : {
            "sign" : 461391639,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 2576,
            "rowCount" : 161,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: LogicalQueryStage Aggregate [count(1) AS h10_30_to_11#596L], HashAggregate(keys=[], functions=[count(1)]), BroadcastQueryStage 47 "
          },
          "9" : {
            "sign" : 1379352947,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 2576,
            "rowCount" : 161,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: LogicalQueryStage Aggregate [count(1) AS h9_30_to_10#594L], HashAggregate(keys=[], functions=[count(1)]), BroadcastQueryStage 46 "
          },
          "13" : {
            "sign" : 403683700,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 2576,
            "rowCount" : 161,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [count(1) AS h11_30_to_12#598L], HashAggregate(keys=[], functions=[count(1)]) "
          },
          "5" : {
            "sign" : 339560869,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 829472,
            "rowCount" : 25921,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Cross "
          },
          "10" : {
            "sign" : 524712160,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 16,
            "rowCount" : 1,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [count(1) AS h10_to_10_30#595L], HashAggregate(keys=[], functions=[count(1)]) "
          },
          "6" : {
            "sign" : 273911039,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 3864,
            "rowCount" : 161,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Cross "
          },
          "1" : {
            "sign" : 760819746,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 43001487424,
            "rowCount" : 671898241,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Cross "
          },
          "14" : {
            "sign" : 406072288,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 16,
            "rowCount" : 1,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [count(1) AS h12_to_12_30#599L], HashAggregate(keys=[], functions=[count(1)]) "
          },
          "0" : {
            "sign" : -1829036981,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 48376673352,
            "rowCount" : 671898241,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Cross "
          },
          "2" : {
            "sign" : -587683179,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 233703736,
            "rowCount" : 4173281,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Cross "
          },
          "7" : {
            "sign" : -1999474772,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 16,
            "rowCount" : 1,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [count(1) AS h8_30_to_9#592L], HashAggregate(keys=[], functions=[count(1)]) "
          },
          "3" : {
            "sign" : -816383406,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 200317488,
            "rowCount" : 4173281,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Cross "
          }
        },
        "links" : [ {
          "fromId" : 7,
          "fromName" : "LogicalQueryStage",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "LogicalQueryStage",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Join",
          "toId" : 5,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "LogicalQueryStage",
          "toId" : 5,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Join",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "LogicalQueryStage",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Join",
          "toId" : 3,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "LogicalQueryStage",
          "toId" : 3,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Join",
          "toId" : 2,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 12,
          "fromName" : "LogicalQueryStage",
          "toId" : 2,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Join",
          "toId" : 1,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 13,
          "fromName" : "LogicalQueryStage",
          "toId" : 1,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Join",
          "toId" : 0,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 14,
          "fromName" : "LogicalQueryStage",
          "toId" : 0,
          "toName" : "Join",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Join Cross\n:- Join Cross\n:  :- Join Cross\n:  :  :- Join Cross\n:  :  :  :- Join Cross\n:  :  :  :  :- Join Cross\n:  :  :  :  :  :- Join Cross\n:  :  :  :  :  :  :- LogicalQueryStage Aggregate [count(1) AS h8_30_to_9#592L], HashAggregate(keys=[], functions=[count(1)])\n:  :  :  :  :  :  +- LogicalQueryStage Aggregate [count(1) AS h9_to_9_30#593L], HashAggregate(keys=[], functions=[count(1)])\n:  :  :  :  :  +- LogicalQueryStage LogicalQueryStage Aggregate [count(1) AS h9_30_to_10#594L], HashAggregate(keys=[], functions=[count(1)]), BroadcastQueryStage 46\n:  :  :  :  +- LogicalQueryStage Aggregate [count(1) AS h10_to_10_30#595L], HashAggregate(keys=[], functions=[count(1)])\n:  :  :  +- LogicalQueryStage LogicalQueryStage Aggregate [count(1) AS h10_30_to_11#596L], HashAggregate(keys=[], functions=[count(1)]), BroadcastQueryStage 47\n:  :  +- LogicalQueryStage Aggregate [count(1) AS h11_to_11_30#597L], HashAggregate(keys=[], functions=[count(1)])\n:  +- LogicalQueryStage Aggregate [count(1) AS h11_30_to_12#598L], HashAggregate(keys=[], functions=[count(1)])\n+- LogicalQueryStage Aggregate [count(1) AS h12_to_12_30#599L], HashAggregate(keys=[], functions=[count(1)])\n"
      },
      "IM" : {
        "inputSizeInBytes" : 10368,
        "inputRowCount" : 648
      },
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 16,
        "FinishedTasksNum" : 5,
        "FinishedTasksTotalTimeInMs" : 1549.0,
        "FinishedTasksDistributionInMs" : [ 263.0, 286.0, 300.0, 337.0, 363.0 ]
      },
      "StartTimeInMs" : 1702227473799,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 13292,
        "IOBytes" : {
          "Total" : 1920526979,
          "Details" : {
            "IR" : 1920412996,
            "IW" : 0,
            "SR" : 75988,
            "SW" : 37995
          }
        }
      }
    },
    "3" : {
      "LQP" : {
        "operators" : {
          "45" : {
            "sign" : -1475086830,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 43776970976,
            "rowCount" : 288006388,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#876, ss_item_sk#877, ss_customer_sk#878, ss_cdemo_sk#879, ss_hdemo_sk#880, ss_addr_sk#881, ss_store_sk#882, ss_promo_sk#883, ss_ticket_number#884L, ss_quantity#885, ss_wholesale_cost#886, ss_list_price#887, ss_sales_price#888, ss_ext_discount_amt#889, ss_ext_sales_price#890, ss_ext_wholesale_cost#891, ss_ext_list_price#892, ss_ext_tax#893, ss_coupon_amt#894, ss_net_paid#895, ss_net_paid_inc_tax#896, ss_net_profit#897, ss_sold_date_sk#898], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "34" : {
            "sign" : 1653504907,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1051712,
            "rowCount" : 47,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [s_store_sk#780], BroadcastQueryStage 17 "
          },
          "12" : {
            "sign" : 1026048955,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 7224632553600,
            "rowCount" : 451539534600,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_hdemo_sk#20, ss_store_sk#22] "
          },
          "8" : {
            "sign" : -808324758,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 305601957017280000,
            "rowCount" : 38200244627160000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project "
          },
          "19" : {
            "sign" : -459201083,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1051712,
            "rowCount" : 47,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [s_store_sk#54], BroadcastQueryStage 2 "
          },
          "23" : {
            "sign" : -466410454,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 305601957017280000,
            "rowCount" : 38200244627160000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project "
          },
          "4" : {
            "sign" : -1791535100,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 40,
            "rowCount" : 1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Cross "
          },
          "40" : {
            "sign" : -657041431,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 16255423245600000,
            "rowCount" : 812771162280000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_hdemo_sk#880 = hd_demo_sk#899) "
          },
          "15" : {
            "sign" : 1156235223,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 38130005144,
            "rowCount" : 250855297,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(ss_hdemo_sk#20) AND (isnotnull(ss_sold_time_sk#16) AND isnotnull(ss_store_sk#22))) "
          },
          "11" : {
            "sign" : 2024072566,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 16255423245600000,
            "rowCount" : 812771162280000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_hdemo_sk#20 = hd_demo_sk#39) "
          },
          "9" : {
            "sign" : 1694061865,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 611203914034560000,
            "rowCount" : 38200244627160000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_store_sk#22 = s_store_sk#54) "
          },
          "44" : {
            "sign" : 1091438933,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 38130005144,
            "rowCount" : 250855297,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(ss_hdemo_sk#880) AND (isnotnull(ss_sold_time_sk#876) AND isnotnull(ss_store_sk#882))) "
          },
          "33" : {
            "sign" : -808092349,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1106176,
            "rowCount" : 1800,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [hd_demo_sk#765], BroadcastQueryStage 15 "
          },
          "22" : {
            "sign" : 250273269,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 16,
            "rowCount" : 1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [count(1) AS h10_to_10_30#595L] "
          },
          "26" : {
            "sign" : 1162177060,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 16255423245600000,
            "rowCount" : 812771162280000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_hdemo_sk#746 = hd_demo_sk#765) "
          },
          "50" : {
            "sign" : 406072288,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 16,
            "rowCount" : 1,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [count(1) AS h12_to_12_30#599L], HashAggregate(keys=[], functions=[count(1)]) "
          },
          "37" : {
            "sign" : 519765418,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 305601957017280000,
            "rowCount" : 38200244627160000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project "
          },
          "13" : {
            "sign" : -1660176330,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 10836948830400,
            "rowCount" : 451539534600,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_time_sk#16 = t_time_sk#44) "
          },
          "46" : {
            "sign" : 1456410197,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1062976,
            "rowCount" : 1800,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [t_time_sk#904], BroadcastQueryStage 23 "
          },
          "24" : {
            "sign" : 987083689,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 611203914034560000,
            "rowCount" : 38200244627160000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_store_sk#748 = s_store_sk#780) "
          },
          "35" : {
            "sign" : 655452758,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 16,
            "rowCount" : 1,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [count(1) AS h10_30_to_11#596L], HashAggregate(keys=[], functions=[count(1)]) "
          },
          "16" : {
            "sign" : 437822322,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 43776970976,
            "rowCount" : 288006388,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#16, ss_item_sk#17, ss_customer_sk#18, ss_cdemo_sk#19, ss_hdemo_sk#20, ss_addr_sk#21, ss_store_sk#22, ss_promo_sk#23, ss_ticket_number#24L, ss_quantity#25, ss_wholesale_cost#26, ss_list_price#27, ss_sales_price#28, ss_ext_discount_amt#29, ss_ext_sales_price#30, ss_ext_wholesale_cost#31, ss_ext_list_price#32, ss_ext_tax#33, ss_coupon_amt#34, ss_net_paid#35, ss_net_paid_inc_tax#36, ss_net_profit#37, ss_sold_date_sk#38], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "5" : {
            "sign" : 596032534,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 32,
            "rowCount" : 1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Cross "
          },
          "10" : {
            "sign" : -1215002415,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 9753253947360000,
            "rowCount" : 812771162280000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_store_sk#22] "
          },
          "48" : {
            "sign" : 79386553,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1051712,
            "rowCount" : 47,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [s_store_sk#914], BroadcastQueryStage 27 "
          },
          "21" : {
            "sign" : -279950413,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 16,
            "rowCount" : 1,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [count(1) AS h9_30_to_10#594L], HashAggregate(keys=[], functions=[count(1)]) "
          },
          "43" : {
            "sign" : -1328452110,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 5017105940,
            "rowCount" : 250855297,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_sold_time_sk#876, ss_hdemo_sk#880, ss_store_sk#882] "
          },
          "32" : {
            "sign" : -1264438745,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1062976,
            "rowCount" : 1800,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [t_time_sk#770], BroadcastQueryStage 13 "
          },
          "49" : {
            "sign" : 403683700,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 16,
            "rowCount" : 1,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [count(1) AS h11_30_to_12#598L], HashAggregate(keys=[], functions=[count(1)]) "
          },
          "6" : {
            "sign" : -1179342190,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 24,
            "rowCount" : 1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Cross "
          },
          "36" : {
            "sign" : -1039753015,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 16,
            "rowCount" : 1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [count(1) AS h11_to_11_30#597L] "
          },
          "1" : {
            "sign" : 1707224806,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 64,
            "rowCount" : 1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Cross "
          },
          "39" : {
            "sign" : -691776830,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 9753253947360000,
            "rowCount" : 812771162280000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_store_sk#882] "
          },
          "17" : {
            "sign" : 913310973,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1062976,
            "rowCount" : 1800,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [t_time_sk#44], BroadcastQueryStage 0 "
          },
          "25" : {
            "sign" : -1364202966,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 9753253947360000,
            "rowCount" : 812771162280000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_store_sk#748] "
          },
          "14" : {
            "sign" : 450172376,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 5017105940,
            "rowCount" : 250855297,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_sold_time_sk#16, ss_hdemo_sk#20, ss_store_sk#22] "
          },
          "47" : {
            "sign" : -1327710554,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1106176,
            "rowCount" : 1800,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [hd_demo_sk#899], BroadcastQueryStage 25 "
          },
          "31" : {
            "sign" : 1437773120,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 43776970976,
            "rowCount" : 288006388,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#742, ss_item_sk#743, ss_customer_sk#744, ss_cdemo_sk#745, ss_hdemo_sk#746, ss_addr_sk#747, ss_store_sk#748, ss_promo_sk#749, ss_ticket_number#750L, ss_quantity#751, ss_wholesale_cost#752, ss_list_price#753, ss_sales_price#754, ss_ext_discount_amt#755, ss_ext_sales_price#756, ss_ext_wholesale_cost#757, ss_ext_list_price#758, ss_ext_tax#759, ss_coupon_amt#760, ss_net_paid#761, ss_net_paid_inc_tax#762, ss_net_profit#763, ss_sold_date_sk#764], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "42" : {
            "sign" : 1908717271,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 10836948830400,
            "rowCount" : 451539534600,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_time_sk#876 = t_time_sk#904) "
          },
          "0" : {
            "sign" : 1035087451,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 72,
            "rowCount" : 1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Cross "
          },
          "20" : {
            "sign" : -260755430,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 16,
            "rowCount" : 1,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [count(1) AS h9_to_9_30#593L], HashAggregate(keys=[], functions=[count(1)]) "
          },
          "27" : {
            "sign" : 943638769,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 7224632553600,
            "rowCount" : 451539534600,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_hdemo_sk#746, ss_store_sk#748] "
          },
          "2" : {
            "sign" : -323989807,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 56,
            "rowCount" : 1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Cross "
          },
          "38" : {
            "sign" : 2094668029,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 611203914034560000,
            "rowCount" : 38200244627160000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_store_sk#882 = s_store_sk#914) "
          },
          "18" : {
            "sign" : -1511403410,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1106176,
            "rowCount" : 1800,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [hd_demo_sk#39], BroadcastQueryStage 1 "
          },
          "30" : {
            "sign" : 1491510529,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 38130005144,
            "rowCount" : 250855297,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(ss_hdemo_sk#746) AND (isnotnull(ss_sold_time_sk#742) AND isnotnull(ss_store_sk#748))) "
          },
          "7" : {
            "sign" : 1728500457,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 16,
            "rowCount" : 1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [count(1) AS h8_30_to_9#592L] "
          },
          "29" : {
            "sign" : -987700956,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 5017105940,
            "rowCount" : 250855297,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_sold_time_sk#742, ss_hdemo_sk#746, ss_store_sk#748] "
          },
          "41" : {
            "sign" : -261117538,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 7224632553600,
            "rowCount" : 451539534600,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_hdemo_sk#880, ss_store_sk#882] "
          },
          "3" : {
            "sign" : 1417313279,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 48,
            "rowCount" : 1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Cross "
          },
          "28" : {
            "sign" : 1976333482,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 10836948830400,
            "rowCount" : 451539534600,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_time_sk#742 = t_time_sk#770) "
          }
        },
        "links" : [ {
          "fromId" : 16,
          "fromName" : "LogicalRelation",
          "toId" : 15,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 15,
          "fromName" : "Filter",
          "toId" : 14,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 14,
          "fromName" : "Project",
          "toId" : 13,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 17,
          "fromName" : "LogicalQueryStage",
          "toId" : 13,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 13,
          "fromName" : "Join",
          "toId" : 12,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 12,
          "fromName" : "Project",
          "toId" : 11,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 18,
          "fromName" : "LogicalQueryStage",
          "toId" : 11,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "Join",
          "toId" : 10,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "Project",
          "toId" : 9,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 19,
          "fromName" : "LogicalQueryStage",
          "toId" : 9,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "Join",
          "toId" : 8,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "Project",
          "toId" : 7,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Aggregate",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 20,
          "fromName" : "LogicalQueryStage",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Join",
          "toId" : 5,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 21,
          "fromName" : "LogicalQueryStage",
          "toId" : 5,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Join",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 31,
          "fromName" : "LogicalRelation",
          "toId" : 30,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 30,
          "fromName" : "Filter",
          "toId" : 29,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 29,
          "fromName" : "Project",
          "toId" : 28,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 32,
          "fromName" : "LogicalQueryStage",
          "toId" : 28,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 28,
          "fromName" : "Join",
          "toId" : 27,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 27,
          "fromName" : "Project",
          "toId" : 26,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 33,
          "fromName" : "LogicalQueryStage",
          "toId" : 26,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 26,
          "fromName" : "Join",
          "toId" : 25,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 25,
          "fromName" : "Project",
          "toId" : 24,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 34,
          "fromName" : "LogicalQueryStage",
          "toId" : 24,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 24,
          "fromName" : "Join",
          "toId" : 23,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 23,
          "fromName" : "Project",
          "toId" : 22,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 22,
          "fromName" : "Aggregate",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Join",
          "toId" : 3,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 35,
          "fromName" : "LogicalQueryStage",
          "toId" : 3,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Join",
          "toId" : 2,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 45,
          "fromName" : "LogicalRelation",
          "toId" : 44,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 44,
          "fromName" : "Filter",
          "toId" : 43,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 43,
          "fromName" : "Project",
          "toId" : 42,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 46,
          "fromName" : "LogicalQueryStage",
          "toId" : 42,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 42,
          "fromName" : "Join",
          "toId" : 41,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 41,
          "fromName" : "Project",
          "toId" : 40,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 47,
          "fromName" : "LogicalQueryStage",
          "toId" : 40,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 40,
          "fromName" : "Join",
          "toId" : 39,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 39,
          "fromName" : "Project",
          "toId" : 38,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 48,
          "fromName" : "LogicalQueryStage",
          "toId" : 38,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 38,
          "fromName" : "Join",
          "toId" : 37,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 37,
          "fromName" : "Project",
          "toId" : 36,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 36,
          "fromName" : "Aggregate",
          "toId" : 2,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Join",
          "toId" : 1,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 49,
          "fromName" : "LogicalQueryStage",
          "toId" : 1,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Join",
          "toId" : 0,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 50,
          "fromName" : "LogicalQueryStage",
          "toId" : 0,
          "toName" : "Join",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Join Cross\n:- Join Cross\n:  :- Join Cross\n:  :  :- Join Cross\n:  :  :  :- Join Cross\n:  :  :  :  :- Join Cross\n:  :  :  :  :  :- Join Cross\n:  :  :  :  :  :  :- Aggregate [count(1) AS h8_30_to_9#592L]\n:  :  :  :  :  :  :  +- Project\n:  :  :  :  :  :  :     +- Join Inner, (ss_store_sk#22 = s_store_sk#54)\n:  :  :  :  :  :  :        :- Project [ss_store_sk#22]\n:  :  :  :  :  :  :        :  +- Join Inner, (ss_hdemo_sk#20 = hd_demo_sk#39)\n:  :  :  :  :  :  :        :     :- Project [ss_hdemo_sk#20, ss_store_sk#22]\n:  :  :  :  :  :  :        :     :  +- Join Inner, (ss_sold_time_sk#16 = t_time_sk#44)\n:  :  :  :  :  :  :        :     :     :- Project [ss_sold_time_sk#16, ss_hdemo_sk#20, ss_store_sk#22]\n:  :  :  :  :  :  :        :     :     :  +- Filter (isnotnull(ss_hdemo_sk#20) AND (isnotnull(ss_sold_time_sk#16) AND isnotnull(ss_store_sk#22)))\n:  :  :  :  :  :  :        :     :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#16,ss_item_sk#17,ss_customer_sk#18,ss_cdemo_sk#19,ss_hdemo_sk#20,ss_addr_sk#21,ss_store_sk#22,ss_promo_sk#23,ss_ticket_number#24L,ss_quantity#25,ss_wholesale_cost#26,ss_list_price#27,ss_sales_price#28,ss_ext_discount_amt#29,ss_ext_sales_price#30,ss_ext_wholesale_cost#31,ss_ext_list_price#32,ss_ext_tax#33,ss_coupon_amt#34,ss_net_paid#35,ss_net_paid_inc_tax#36,ss_net_profit#37,ss_sold_date_sk#38] parquet\n:  :  :  :  :  :  :        :     :     +- LogicalQueryStage Project [t_time_sk#44], BroadcastQueryStage 0\n:  :  :  :  :  :  :        :     +- LogicalQueryStage Project [hd_demo_sk#39], BroadcastQueryStage 1\n:  :  :  :  :  :  :        +- LogicalQueryStage Project [s_store_sk#54], BroadcastQueryStage 2\n:  :  :  :  :  :  +- LogicalQueryStage Aggregate [count(1) AS h9_to_9_30#593L], HashAggregate(keys=[], functions=[count(1)])\n:  :  :  :  :  +- LogicalQueryStage Aggregate [count(1) AS h9_30_to_10#594L], HashAggregate(keys=[], functions=[count(1)])\n:  :  :  :  +- Aggregate [count(1) AS h10_to_10_30#595L]\n:  :  :  :     +- Project\n:  :  :  :        +- Join Inner, (ss_store_sk#748 = s_store_sk#780)\n:  :  :  :           :- Project [ss_store_sk#748]\n:  :  :  :           :  +- Join Inner, (ss_hdemo_sk#746 = hd_demo_sk#765)\n:  :  :  :           :     :- Project [ss_hdemo_sk#746, ss_store_sk#748]\n:  :  :  :           :     :  +- Join Inner, (ss_sold_time_sk#742 = t_time_sk#770)\n:  :  :  :           :     :     :- Project [ss_sold_time_sk#742, ss_hdemo_sk#746, ss_store_sk#748]\n:  :  :  :           :     :     :  +- Filter (isnotnull(ss_hdemo_sk#746) AND (isnotnull(ss_sold_time_sk#742) AND isnotnull(ss_store_sk#748)))\n:  :  :  :           :     :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#742,ss_item_sk#743,ss_customer_sk#744,ss_cdemo_sk#745,ss_hdemo_sk#746,ss_addr_sk#747,ss_store_sk#748,ss_promo_sk#749,ss_ticket_number#750L,ss_quantity#751,ss_wholesale_cost#752,ss_list_price#753,ss_sales_price#754,ss_ext_discount_amt#755,ss_ext_sales_price#756,ss_ext_wholesale_cost#757,ss_ext_list_price#758,ss_ext_tax#759,ss_coupon_amt#760,ss_net_paid#761,ss_net_paid_inc_tax#762,ss_net_profit#763,ss_sold_date_sk#764] parquet\n:  :  :  :           :     :     +- LogicalQueryStage Project [t_time_sk#770], BroadcastQueryStage 13\n:  :  :  :           :     +- LogicalQueryStage Project [hd_demo_sk#765], BroadcastQueryStage 15\n:  :  :  :           +- LogicalQueryStage Project [s_store_sk#780], BroadcastQueryStage 17\n:  :  :  +- LogicalQueryStage Aggregate [count(1) AS h10_30_to_11#596L], HashAggregate(keys=[], functions=[count(1)])\n:  :  +- Aggregate [count(1) AS h11_to_11_30#597L]\n:  :     +- Project\n:  :        +- Join Inner, (ss_store_sk#882 = s_store_sk#914)\n:  :           :- Project [ss_store_sk#882]\n:  :           :  +- Join Inner, (ss_hdemo_sk#880 = hd_demo_sk#899)\n:  :           :     :- Project [ss_hdemo_sk#880, ss_store_sk#882]\n:  :           :     :  +- Join Inner, (ss_sold_time_sk#876 = t_time_sk#904)\n:  :           :     :     :- Project [ss_sold_time_sk#876, ss_hdemo_sk#880, ss_store_sk#882]\n:  :           :     :     :  +- Filter (isnotnull(ss_hdemo_sk#880) AND (isnotnull(ss_sold_time_sk#876) AND isnotnull(ss_store_sk#882)))\n:  :           :     :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#876,ss_item_sk#877,ss_customer_sk#878,ss_cdemo_sk#879,ss_hdemo_sk#880,ss_addr_sk#881,ss_store_sk#882,ss_promo_sk#883,ss_ticket_number#884L,ss_quantity#885,ss_wholesale_cost#886,ss_list_price#887,ss_sales_price#888,ss_ext_discount_amt#889,ss_ext_sales_price#890,ss_ext_wholesale_cost#891,ss_ext_list_price#892,ss_ext_tax#893,ss_coupon_amt#894,ss_net_paid#895,ss_net_paid_inc_tax#896,ss_net_profit#897,ss_sold_date_sk#898] parquet\n:  :           :     :     +- LogicalQueryStage Project [t_time_sk#904], BroadcastQueryStage 23\n:  :           :     +- LogicalQueryStage Project [hd_demo_sk#899], BroadcastQueryStage 25\n:  :           +- LogicalQueryStage Project [s_store_sk#914], BroadcastQueryStage 27\n:  +- LogicalQueryStage Aggregate [count(1) AS h11_30_to_12#598L], HashAggregate(keys=[], functions=[count(1)])\n+- LogicalQueryStage Aggregate [count(1) AS h12_to_12_30#599L], HashAggregate(keys=[], functions=[count(1)])\n"
      },
      "IM" : {
        "inputSizeInBytes" : 131340575600,
        "inputRowCount" : 864030110
      },
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 16,
        "FinishedTasksNum" : 1,
        "FinishedTasksTotalTimeInMs" : 1150.0,
        "FinishedTasksDistributionInMs" : [ 1150.0, 1150.0, 1150.0, 1150.0, 1150.0 ]
      },
      "StartTimeInMs" : 1702227457905,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 29186,
        "IOBytes" : {
          "Total" : 3840977968,
          "Details" : {
            "IR" : 3840825992,
            "IW" : 0,
            "SR" : 75988,
            "SW" : 75988
          }
        }
      }
    }
  },
  "RuntimeQSs" : {
    "12" : {
      "QSLogical" : {
        "operators" : {
          "8" : {
            "sign" : 1064892625,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 38130005144,
                "rowCount" : 250855297
              },
              "compileTime" : {
                "sizeInBytes" : 38130005144,
                "rowCount" : 250855297
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(ss_hdemo_sk#813) AND (isnotnull(ss_sold_time_sk#809) AND isnotnull(ss_store_sk#815))) "
          },
          "4" : {
            "sign" : -760417347,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 5432612500,
                "rowCount" : 271630625
              },
              "compileTime" : {
                "sizeInBytes" : 5432612500,
                "rowCount" : 271630625
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_hdemo_sk#813 = hd_demo_sk#832) "
          },
          "9" : {
            "sign" : -2000254428,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 43776970976,
                "rowCount" : 288006388
              },
              "compileTime" : {
                "sizeInBytes" : 43776970976,
                "rowCount" : 288006388
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#809, ss_item_sk#810, ss_customer_sk#811, ss_cdemo_sk#812, ss_hdemo_sk#813, ss_addr_sk#814, ss_store_sk#815, ss_promo_sk#816, ss_ticket_number#817L, ss_quantity#818, ss_wholesale_cost#819, ss_list_price#820, ss_sales_price#821, ss_ext_discount_amt#822, ss_ext_sales_price#823, ss_ext_wholesale_cost#824, ss_ext_list_price#825, ss_ext_tax#826, ss_coupon_amt#827, ss_net_paid#828, ss_net_paid_inc_tax#829, ss_net_profit#830, ss_sold_date_sk#831], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "5" : {
            "sign" : 1841835277,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 4332576176,
                "rowCount" : 270786011
              },
              "compileTime" : {
                "sizeInBytes" : 4332576176,
                "rowCount" : 270786011
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_hdemo_sk#813, ss_store_sk#815] "
          },
          "6" : {
            "sign" : -1969494538,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 6498864264,
                "rowCount" : 270786011
              },
              "compileTime" : {
                "sizeInBytes" : 6498864264,
                "rowCount" : 270786011
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_time_sk#809 = t_time_sk#837) "
          },
          "1" : {
            "sign" : 1520500353,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 4622824312,
                "rowCount" : 577853039
              },
              "compileTime" : {
                "sizeInBytes" : 4622824312,
                "rowCount" : 577853039
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project "
          },
          "0" : {
            "sign" : 1686448300,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 16,
                "rowCount" : 1
              },
              "compileTime" : {
                "sizeInBytes" : 16,
                "rowCount" : 1
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [count(1) AS h10_30_to_11#596L] "
          },
          "2" : {
            "sign" : -1565363710,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 9245648624,
                "rowCount" : 577853039
              },
              "compileTime" : {
                "sizeInBytes" : 9245648624,
                "rowCount" : 577853039
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_store_sk#815 = s_store_sk#847) "
          },
          "7" : {
            "sign" : -1348331344,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 5017105940,
                "rowCount" : 250855297
              },
              "compileTime" : {
                "sizeInBytes" : 5017105940,
                "rowCount" : 250855297
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_sold_time_sk#809, ss_hdemo_sk#813, ss_store_sk#815] "
          },
          "3" : {
            "sign" : 1362909388,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 3259567500,
                "rowCount" : 271630625
              },
              "compileTime" : {
                "sizeInBytes" : 3259567500,
                "rowCount" : 271630625
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_store_sk#815] "
          }
        },
        "links" : [ {
          "fromId" : 9,
          "fromName" : "LogicalRelation",
          "toId" : 8,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "Filter",
          "toId" : 7,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Project",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Join",
          "toId" : 5,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Project",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Join",
          "toId" : 3,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Project",
          "toId" : 2,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Join",
          "toId" : 1,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Project",
          "toId" : 0,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Aggregate [count(1) AS h10_30_to_11#596L]\n+- Project\n   +- Join Inner, (ss_store_sk#815 = s_store_sk#847)\n      :- Project [ss_store_sk#815]\n      :  +- Join Inner, (ss_hdemo_sk#813 = hd_demo_sk#832)\n      :     :- Project [ss_hdemo_sk#813, ss_store_sk#815]\n      :     :  +- Join Inner, (ss_sold_time_sk#809 = t_time_sk#837)\n      :     :     :- Project [ss_sold_time_sk#809, ss_hdemo_sk#813, ss_store_sk#815]\n      :     :     :  +- Filter (isnotnull(ss_hdemo_sk#813) AND (isnotnull(ss_sold_time_sk#809) AND isnotnull(ss_store_sk#815)))\n      :     :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#809,ss_item_sk#810,ss_customer_sk#811,ss_cdemo_sk#812,ss_hdemo_sk#813,ss_addr_sk#814,ss_store_sk#815,ss_promo_sk#816,ss_ticket_number#817L,ss_quantity#818,ss_wholesale_cost#819,ss_list_price#820,ss_sales_price#821,ss_ext_discount_amt#822,ss_ext_sales_price#823,ss_ext_wholesale_cost#824,ss_ext_list_price#825,ss_ext_tax#826,ss_coupon_amt#827,ss_net_paid#828,ss_net_paid_inc_tax#829,ss_net_profit#830,ss_sold_date_sk#831] parquet\n      :     :     +- Project [t_time_sk#837]\n      :     :        +- Filter (((isnotnull(t_hour#840) AND isnotnull(t_minute#841)) AND ((t_hour#840 = 10) AND (t_minute#841 >= 30))) AND isnotnull(t_time_sk#837))\n      :     :           +- Relation spark_catalog.tpcds_100.time_dim[t_time_sk#837,t_time_id#838,t_time#839,t_hour#840,t_minute#841,t_second#842,t_am_pm#843,t_shift#844,t_sub_shift#845,t_meal_time#846] parquet\n      :     +- Project [hd_demo_sk#832]\n      :        +- Filter (((((hd_dep_count#835 = 3) AND (hd_vehicle_count#836 <= 5)) OR ((hd_dep_count#835 = 0) AND (hd_vehicle_count#836 <= 2))) OR ((hd_dep_count#835 = 1) AND (hd_vehicle_count#836 <= 3))) AND isnotnull(hd_demo_sk#832))\n      :           +- Relation spark_catalog.tpcds_100.household_demographics[hd_demo_sk#832,hd_income_band_sk#833,hd_buy_potential#834,hd_dep_count#835,hd_vehicle_count#836] parquet\n      +- Project [s_store_sk#847]\n         +- Filter ((isnotnull(s_store_name#852) AND (s_store_name#852 = ese)) AND isnotnull(s_store_sk#847))\n            +- Relation spark_catalog.tpcds_100.store[s_store_sk#847,s_store_id#848,s_rec_start_date#849,s_rec_end_date#850,s_closed_date_sk#851,s_store_name#852,s_number_employees#853,s_floor_space#854,s_hours#855,s_manager#856,s_market_id#857,s_geography_class#858,s_market_desc#859,s_market_manager#860,s_division_id#861,s_division_name#862,s_company_id#863,s_company_name#864,s_street_number#865,s_street_name#866,s_street_type#867,s_suite_number#868,s_city#869,s_county#870,... 5 more fields] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "12" : {
            "sign" : -720333223,
            "className" : "org.apache.spark.sql.execution.adaptive.BroadcastQueryStageExec",
            "sizeInBytes" : 1051712,
            "rowCount" : 47,
            "isRuntime" : true,
            "predicate" : " (unknown) BroadcastQueryStage Output [1]: [s_store_sk#847] Arguments: 22 "
          },
          "8" : {
            "sign" : 1134933926,
            "className" : "org.apache.spark.sql.execution.FilterExec",
            "sizeInBytes" : 5017105940,
            "rowCount" : 250855297,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Input [4]: [ss_sold_time_sk#809, ss_hdemo_sk#813, ss_store_sk#815, ss_sold_date_sk#831] Condition : ((isnotnull(ss_hdemo_sk#813) AND isnotnull(ss_sold_time_sk#809)) AND isnotnull(ss_store_sk#815)) "
          },
          "4" : {
            "sign" : -452419248,
            "className" : "org.apache.spark.sql.execution.joins.BroadcastHashJoinExec",
            "sizeInBytes" : 5432612500,
            "rowCount" : 271630625,
            "isRuntime" : false,
            "predicate" : " (unknown) BroadcastHashJoin Left keys [1]: [ss_hdemo_sk#813] Right keys [1]: [hd_demo_sk#832] Join type: Inner Join condition: None "
          },
          "11" : {
            "sign" : 1932426993,
            "className" : "org.apache.spark.sql.execution.adaptive.BroadcastQueryStageExec",
            "sizeInBytes" : 1106176,
            "rowCount" : 1800,
            "isRuntime" : true,
            "predicate" : " (unknown) BroadcastQueryStage Output [1]: [hd_demo_sk#832] Arguments: 20 "
          },
          "9" : {
            "sign" : 1790433833,
            "className" : "org.apache.spark.sql.execution.FileSourceScanExec",
            "sizeInBytes" : 5017105940,
            "rowCount" : 250855297,
            "isRuntime" : false,
            "predicate" : " (unknown) Scan parquet spark_catalog.tpcds_100.store_sales Output [4]: [ss_sold_time_sk#809, ss_hdemo_sk#813, ss_store_sk#815, ss_sold_date_sk#831] Batched: true Location: CatalogFileIndex [hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/store_sales] PushedFilters: [IsNotNull(ss_hdemo_sk), IsNotNull(ss_sold_time_sk), IsNotNull(ss_store_sk)] ReadSchema: struct<ss_sold_time_sk:int,ss_hdemo_sk:int,ss_store_sk:int> "
          },
          "5" : {
            "sign" : -2057473037,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 4332576176,
            "rowCount" : 270786011,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [2]: [ss_hdemo_sk#813, ss_store_sk#815] Input [4]: [ss_sold_time_sk#809, ss_hdemo_sk#813, ss_store_sk#815, t_time_sk#837] "
          },
          "10" : {
            "sign" : 1181607634,
            "className" : "org.apache.spark.sql.execution.adaptive.BroadcastQueryStageExec",
            "sizeInBytes" : 1062976,
            "rowCount" : 1800,
            "isRuntime" : true,
            "predicate" : " (unknown) BroadcastQueryStage Output [1]: [t_time_sk#837] Arguments: 18 "
          },
          "6" : {
            "sign" : -104133864,
            "className" : "org.apache.spark.sql.execution.joins.BroadcastHashJoinExec",
            "sizeInBytes" : 6498864264,
            "rowCount" : 270786011,
            "isRuntime" : false,
            "predicate" : " (unknown) BroadcastHashJoin Left keys [1]: [ss_sold_time_sk#809] Right keys [1]: [t_time_sk#837] Join type: Inner Join condition: None "
          },
          "1" : {
            "sign" : 475157834,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 4622824312,
            "rowCount" : 577853039,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output: [] Input [2]: [ss_store_sk#815, s_store_sk#847] "
          },
          "0" : {
            "sign" : -2026266608,
            "className" : "org.apache.spark.sql.execution.aggregate.HashAggregateExec",
            "sizeInBytes" : 16,
            "rowCount" : 1,
            "isRuntime" : false,
            "predicate" : " (unknown) HashAggregate Input: [] Keys: [] Functions [1]: [partial_count(1)] Aggregate Attributes [1]: [count#1121L] Results [1]: [count#1122L] "
          },
          "2" : {
            "sign" : 830131463,
            "className" : "org.apache.spark.sql.execution.joins.BroadcastHashJoinExec",
            "sizeInBytes" : 9245648624,
            "rowCount" : 577853039,
            "isRuntime" : false,
            "predicate" : " (unknown) BroadcastHashJoin Left keys [1]: [ss_store_sk#815] Right keys [1]: [s_store_sk#847] Join type: Inner Join condition: None "
          },
          "7" : {
            "sign" : -1867764013,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 5017105940,
            "rowCount" : 250855297,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [3]: [ss_sold_time_sk#809, ss_hdemo_sk#813, ss_store_sk#815] Input [4]: [ss_sold_time_sk#809, ss_hdemo_sk#813, ss_store_sk#815, ss_sold_date_sk#831] "
          },
          "3" : {
            "sign" : 693982839,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 3259567500,
            "rowCount" : 271630625,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [1]: [ss_store_sk#815] Input [3]: [ss_hdemo_sk#813, ss_store_sk#815, hd_demo_sk#832] "
          }
        },
        "links" : [ {
          "fromId" : 9,
          "fromName" : "Scan parquet spark_catalog.tpcds_100.store_sales",
          "toId" : 8,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "Filter",
          "toId" : 7,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Project",
          "toId" : 6,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "BroadcastQueryStage",
          "toId" : 6,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "BroadcastHashJoin",
          "toId" : 5,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Project",
          "toId" : 4,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "BroadcastQueryStage",
          "toId" : 4,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "BroadcastHashJoin",
          "toId" : 3,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Project",
          "toId" : 2,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 12,
          "fromName" : "BroadcastQueryStage",
          "toId" : 2,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "BroadcastHashJoin",
          "toId" : 1,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Project",
          "toId" : 0,
          "toName" : "HashAggregate",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "HashAggregate(keys=[], functions=[partial_count(1)], output=[count#1122L])\n+- Project\n   +- BroadcastHashJoin [ss_store_sk#815], [s_store_sk#847], Inner, BuildRight, false\n      :- Project [ss_store_sk#815]\n      :  +- BroadcastHashJoin [ss_hdemo_sk#813], [hd_demo_sk#832], Inner, BuildRight, false\n      :     :- Project [ss_hdemo_sk#813, ss_store_sk#815]\n      :     :  +- BroadcastHashJoin [ss_sold_time_sk#809], [t_time_sk#837], Inner, BuildRight, false\n      :     :     :- Project [ss_sold_time_sk#809, ss_hdemo_sk#813, ss_store_sk#815]\n      :     :     :  +- Filter ((isnotnull(ss_hdemo_sk#813) AND isnotnull(ss_sold_time_sk#809)) AND isnotnull(ss_store_sk#815))\n      :     :     :     +- FileScan parquet spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#809,ss_hdemo_sk#813,ss_store_sk#815,ss_sold_date_sk#831] Batched: true, DataFilters: [isnotnull(ss_hdemo_sk#813), isnotnull(ss_sold_time_sk#809), isnotnull(ss_store_sk#815)], Format: Parquet, Location: CatalogFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/store_sales], PartitionFilters: [], PushedFilters: [IsNotNull(ss_hdemo_sk), IsNotNull(ss_sold_time_sk), IsNotNull(ss_store_sk)], ReadSchema: struct<ss_sold_time_sk:int,ss_hdemo_sk:int,ss_store_sk:int>\n      :     :     +- BroadcastQueryStage 18\n      :     :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=1164]\n      :     :           +- *(13) Project [t_time_sk#837]\n      :     :              +- *(13) Filter ((((isnotnull(t_hour#840) AND isnotnull(t_minute#841)) AND (t_hour#840 = 10)) AND (t_minute#841 >= 30)) AND isnotnull(t_time_sk#837))\n      :     :                 +- *(13) ColumnarToRow\n      :     :                    +- FileScan parquet spark_catalog.tpcds_100.time_dim[t_time_sk#837,t_hour#840,t_minute#841] Batched: true, DataFilters: [isnotnull(t_hour#840), isnotnull(t_minute#841), (t_hour#840 = 10), (t_minute#841 >= 30), isnotnu..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/time_dim], PartitionFilters: [], PushedFilters: [IsNotNull(t_hour), IsNotNull(t_minute), EqualTo(t_hour,10), GreaterThanOrEqual(t_minute,30), IsN..., ReadSchema: struct<t_time_sk:int,t_hour:int,t_minute:int>\n      :     +- BroadcastQueryStage 20\n      :        +- ReusedExchange [hd_demo_sk#832], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=743]\n      +- BroadcastQueryStage 22\n         +- ReusedExchange [s_store_sk#847], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=764]\n"
      },
      "IM" : {
        "inputSizeInBytes" : 5020326804,
        "inputRowCount" : 250858944
      },
      "InitialPartitionNum" : 0,
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 2,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 12,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 13 ],
      "Objectives" : {
        "DurationInMs" : 14460,
        "TotalTasksDurationInMs" : 56739,
        "IOBytes" : {
          "Total" : 480112748,
          "Details" : {
            "IR" : 480103249,
            "IW" : 0,
            "SR" : 0,
            "SW" : 9499
          }
        }
      }
    },
    "8" : {
      "QSLogical" : {
        "operators" : {
          "0" : {
            "sign" : 1514151522,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 24492,
                "rowCount" : 2041
              },
              "compileTime" : {
                "sizeInBytes" : 24492,
                "rowCount" : 2041
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [t_time_sk#971] "
          },
          "1" : {
            "sign" : 795553386,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 257166,
                "rowCount" : 2041
              },
              "compileTime" : {
                "sizeInBytes" : 257166,
                "rowCount" : 2041
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(t_hour#974) AND isnotnull(t_minute#975)) AND ((t_hour#974 = 11) AND (t_minute#975 >= 30))) AND isnotnull(t_time_sk#971)) "
          },
          "2" : {
            "sign" : -301958055,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 10886400,
                "rowCount" : 86400
              },
              "compileTime" : {
                "sizeInBytes" : 10886400,
                "rowCount" : 86400
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [t_time_sk#971, t_time_id#972, t_time#973, t_hour#974, t_minute#975, t_second#976, t_am_pm#977, t_shift#978, t_sub_shift#979, t_meal_time#980], `spark_catalog`.`tpcds_100`.`time_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "LogicalRelation",
          "toId" : 1,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Filter",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [t_time_sk#971]\n+- Filter (((isnotnull(t_hour#974) AND isnotnull(t_minute#975)) AND ((t_hour#974 = 11) AND (t_minute#975 >= 30))) AND isnotnull(t_time_sk#971))\n   +- Relation spark_catalog.tpcds_100.time_dim[t_time_sk#971,t_time_id#972,t_time#973,t_hour#974,t_minute#975,t_second#976,t_am_pm#977,t_shift#978,t_sub_shift#979,t_meal_time#980] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "0" : {
            "sign" : -1143551267,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 24492,
            "rowCount" : 2041,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [1]: [t_time_sk#971] Input [3]: [t_time_sk#971, t_hour#974, t_minute#975] "
          },
          "1" : {
            "sign" : -2007858043,
            "className" : "org.apache.spark.sql.execution.FilterExec",
            "sizeInBytes" : 24492,
            "rowCount" : 2041,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Input [3]: [t_time_sk#971, t_hour#974, t_minute#975] Condition : ((((isnotnull(t_hour#974) AND isnotnull(t_minute#975)) AND (t_hour#974 = 11)) AND (t_minute#975 >= 30)) AND isnotnull(t_time_sk#971)) "
          },
          "2" : {
            "sign" : -1346140706,
            "className" : "org.apache.spark.sql.execution.FileSourceScanExec",
            "sizeInBytes" : 24492,
            "rowCount" : 2041,
            "isRuntime" : false,
            "predicate" : " (unknown) Scan parquet spark_catalog.tpcds_100.time_dim Output [3]: [t_time_sk#971, t_hour#974, t_minute#975] Batched: true Location: InMemoryFileIndex [hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/time_dim] PushedFilters: [IsNotNull(t_hour), IsNotNull(t_minute), EqualTo(t_hour,11), GreaterThanOrEqual(t_minute,30), IsNotNull(t_time_sk)] ReadSchema: struct<t_time_sk:int,t_hour:int,t_minute:int> "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "Scan parquet spark_catalog.tpcds_100.time_dim",
          "toId" : 1,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Filter",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [t_time_sk#971]\n+- Filter ((((isnotnull(t_hour#974) AND isnotnull(t_minute#975)) AND (t_hour#974 = 11)) AND (t_minute#975 >= 30)) AND isnotnull(t_time_sk#971))\n   +- FileScan parquet spark_catalog.tpcds_100.time_dim[t_time_sk#971,t_hour#974,t_minute#975] Batched: true, DataFilters: [isnotnull(t_hour#974), isnotnull(t_minute#975), (t_hour#974 = 11), (t_minute#975 >= 30), isnotnu..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/time_dim], PartitionFilters: [], PushedFilters: [IsNotNull(t_hour), IsNotNull(t_minute), EqualTo(t_hour,11), GreaterThanOrEqual(t_minute,30), IsN..., ReadSchema: struct<t_time_sk:int,t_hour:int,t_minute:int>\n"
      },
      "IM" : {
        "inputSizeInBytes" : 24492,
        "inputRowCount" : 2041
      },
      "InitialPartitionNum" : 0,
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 8,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 8 ],
      "Objectives" : {
        "DurationInMs" : 3040,
        "TotalTasksDurationInMs" : 3034,
        "IOBytes" : {
          "Total" : 85728,
          "Details" : {
            "IR" : 85728,
            "IW" : 0,
            "SR" : 0,
            "SW" : 0
          }
        }
      }
    },
    "19" : {
      "QSLogical" : {
        "operators" : {
          "0" : {
            "sign" : 655452758,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 2576,
                "rowCount" : 161
              },
              "compileTime" : {
                "sizeInBytes" : 16,
                "rowCount" : 1
              }
            },
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [count(1) AS h10_30_to_11#596L], HashAggregate(keys=[], functions=[count(1)]) "
          }
        },
        "links" : [ ],
        "rawPlan" : "LogicalQueryStage Aggregate [count(1) AS h10_30_to_11#596L], HashAggregate(keys=[], functions=[count(1)])\n"
      },
      "QSPhysical" : {
        "operators" : {
          "0" : {
            "sign" : -1646264500,
            "className" : "org.apache.spark.sql.execution.aggregate.HashAggregateExec",
            "sizeInBytes" : 2576,
            "rowCount" : 161,
            "isRuntime" : true,
            "predicate" : " (unknown) HashAggregate Input [1]: [count#1122L] Keys: [] Functions [1]: [count(1)] Aggregate Attributes [1]: [count(1)#604L] Results [1]: [count(1)#604L AS h10_30_to_11#596L] "
          },
          "1" : {
            "sign" : -1264275539,
            "className" : "org.apache.spark.sql.execution.adaptive.ShuffleQueryStageExec",
            "sizeInBytes" : 16,
            "rowCount" : 1,
            "isRuntime" : false,
            "predicate" : " (unknown) ShuffleQueryStage Output [1]: [count#1122L] Arguments: 40 "
          }
        },
        "links" : [ {
          "fromId" : 1,
          "fromName" : "ShuffleQueryStage",
          "toId" : 0,
          "toName" : "HashAggregate",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "HashAggregate(keys=[], functions=[count(1)], output=[h10_30_to_11#596L])\n+- ShuffleQueryStage 40\n   +- Exchange SinglePartition, ENSURE_REQUIREMENTS, [plan_id=2491]\n      +- *(27) HashAggregate(keys=[], functions=[partial_count(1)], output=[count#1122L])\n         +- *(27) Project\n            +- *(27) BroadcastHashJoin [ss_store_sk#815], [s_store_sk#847], Inner, BuildRight, false\n               :- *(27) Project [ss_store_sk#815]\n               :  +- *(27) BroadcastHashJoin [ss_hdemo_sk#813], [hd_demo_sk#832], Inner, BuildRight, false\n               :     :- *(27) Project [ss_hdemo_sk#813, ss_store_sk#815]\n               :     :  +- *(27) BroadcastHashJoin [ss_sold_time_sk#809], [t_time_sk#837], Inner, BuildRight, false\n               :     :     :- *(27) Project [ss_sold_time_sk#809, ss_hdemo_sk#813, ss_store_sk#815]\n               :     :     :  +- *(27) Filter ((isnotnull(ss_hdemo_sk#813) AND isnotnull(ss_sold_time_sk#809)) AND isnotnull(ss_store_sk#815))\n               :     :     :     +- *(27) ColumnarToRow\n               :     :     :        +- FileScan parquet spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#809,ss_hdemo_sk#813,ss_store_sk#815,ss_sold_date_sk#831] Batched: true, DataFilters: [isnotnull(ss_hdemo_sk#813), isnotnull(ss_sold_time_sk#809), isnotnull(ss_store_sk#815)], Format: Parquet, Location: CatalogFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/store_sales], PartitionFilters: [], PushedFilters: [IsNotNull(ss_hdemo_sk), IsNotNull(ss_sold_time_sk), IsNotNull(ss_store_sk)], ReadSchema: struct<ss_sold_time_sk:int,ss_hdemo_sk:int,ss_store_sk:int>\n               :     :     +- BroadcastQueryStage 18\n               :     :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=1164]\n               :     :           +- *(13) Project [t_time_sk#837]\n               :     :              +- *(13) Filter ((((isnotnull(t_hour#840) AND isnotnull(t_minute#841)) AND (t_hour#840 = 10)) AND (t_minute#841 >= 30)) AND isnotnull(t_time_sk#837))\n               :     :                 +- *(13) ColumnarToRow\n               :     :                    +- FileScan parquet spark_catalog.tpcds_100.time_dim[t_time_sk#837,t_hour#840,t_minute#841] Batched: true, DataFilters: [isnotnull(t_hour#840), isnotnull(t_minute#841), (t_hour#840 = 10), (t_minute#841 >= 30), isnotnu..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/time_dim], PartitionFilters: [], PushedFilters: [IsNotNull(t_hour), IsNotNull(t_minute), EqualTo(t_hour,10), GreaterThanOrEqual(t_minute,30), IsN..., ReadSchema: struct<t_time_sk:int,t_hour:int,t_minute:int>\n               :     +- BroadcastQueryStage 20\n               :        +- ReusedExchange [hd_demo_sk#832], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=743]\n               +- BroadcastQueryStage 22\n                  +- ReusedExchange [s_store_sk#847], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=764]\n"
      },
      "IM" : {
        "inputSizeInBytes" : 2576,
        "inputRowCount" : 161
      },
      "InitialPartitionNum" : 1,
      "PD" : {
        "2" : [ 9660 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 16,
        "FinishedTasksNum" : 59,
        "FinishedTasksTotalTimeInMs" : 17694.0,
        "FinishedTasksDistributionInMs" : [ 177.0, 218.0, 278.0, 310.0, 1178.0 ]
      },
      "QueryStageOptimizationId" : 19,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 22 ],
      "Objectives" : {
        "DurationInMs" : 14712,
        "TotalTasksDurationInMs" : 194,
        "IOBytes" : {
          "Total" : 9499,
          "Details" : {
            "IR" : 0,
            "IW" : 0,
            "SR" : 9499,
            "SW" : 0
          }
        }
      }
    },
    "23" : {
      "QSLogical" : {
        "operators" : {
          "0" : {
            "sign" : 524712160,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 2576,
                "rowCount" : 161
              },
              "compileTime" : {
                "sizeInBytes" : 16,
                "rowCount" : 1
              }
            },
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [count(1) AS h10_to_10_30#595L], HashAggregate(keys=[], functions=[count(1)]) "
          }
        },
        "links" : [ ],
        "rawPlan" : "LogicalQueryStage Aggregate [count(1) AS h10_to_10_30#595L], HashAggregate(keys=[], functions=[count(1)])\n"
      },
      "QSPhysical" : {
        "operators" : {
          "0" : {
            "sign" : -1699803253,
            "className" : "org.apache.spark.sql.execution.aggregate.HashAggregateExec",
            "sizeInBytes" : 2576,
            "rowCount" : 161,
            "isRuntime" : true,
            "predicate" : " (unknown) HashAggregate Input [1]: [count#1120L] Keys: [] Functions [1]: [count(1)] Aggregate Attributes [1]: [count(1)#603L] Results [1]: [count(1)#603L AS h10_to_10_30#595L] "
          },
          "1" : {
            "sign" : -2082601826,
            "className" : "org.apache.spark.sql.execution.adaptive.ShuffleQueryStageExec",
            "sizeInBytes" : 16,
            "rowCount" : 1,
            "isRuntime" : false,
            "predicate" : " (unknown) ShuffleQueryStage Output [1]: [count#1120L] Arguments: 44 "
          }
        },
        "links" : [ {
          "fromId" : 1,
          "fromName" : "ShuffleQueryStage",
          "toId" : 0,
          "toName" : "HashAggregate",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "HashAggregate(keys=[], functions=[count(1)], output=[h10_to_10_30#595L])\n+- ShuffleQueryStage 44\n   +- Exchange SinglePartition, ENSURE_REQUIREMENTS, [plan_id=2877]\n      +- *(31) HashAggregate(keys=[], functions=[partial_count(1)], output=[count#1120L])\n         +- *(31) Project\n            +- *(31) BroadcastHashJoin [ss_store_sk#748], [s_store_sk#780], Inner, BuildRight, false\n               :- *(31) Project [ss_store_sk#748]\n               :  +- *(31) BroadcastHashJoin [ss_hdemo_sk#746], [hd_demo_sk#765], Inner, BuildRight, false\n               :     :- *(31) Project [ss_hdemo_sk#746, ss_store_sk#748]\n               :     :  +- *(31) BroadcastHashJoin [ss_sold_time_sk#742], [t_time_sk#770], Inner, BuildRight, false\n               :     :     :- *(31) Project [ss_sold_time_sk#742, ss_hdemo_sk#746, ss_store_sk#748]\n               :     :     :  +- *(31) Filter ((isnotnull(ss_hdemo_sk#746) AND isnotnull(ss_sold_time_sk#742)) AND isnotnull(ss_store_sk#748))\n               :     :     :     +- *(31) ColumnarToRow\n               :     :     :        +- FileScan parquet spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#742,ss_hdemo_sk#746,ss_store_sk#748,ss_sold_date_sk#764] Batched: true, DataFilters: [isnotnull(ss_hdemo_sk#746), isnotnull(ss_sold_time_sk#742), isnotnull(ss_store_sk#748)], Format: Parquet, Location: CatalogFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/store_sales], PartitionFilters: [], PushedFilters: [IsNotNull(ss_hdemo_sk), IsNotNull(ss_sold_time_sk), IsNotNull(ss_store_sk)], ReadSchema: struct<ss_sold_time_sk:int,ss_hdemo_sk:int,ss_store_sk:int>\n               :     :     +- BroadcastQueryStage 13\n               :     :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=1052]\n               :     :           +- *(10) Project [t_time_sk#770]\n               :     :              +- *(10) Filter ((((isnotnull(t_hour#773) AND isnotnull(t_minute#774)) AND (t_hour#773 = 10)) AND (t_minute#774 < 30)) AND isnotnull(t_time_sk#770))\n               :     :                 +- *(10) ColumnarToRow\n               :     :                    +- FileScan parquet spark_catalog.tpcds_100.time_dim[t_time_sk#770,t_hour#773,t_minute#774] Batched: true, DataFilters: [isnotnull(t_hour#773), isnotnull(t_minute#774), (t_hour#773 = 10), (t_minute#774 < 30), isnotnul..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/time_dim], PartitionFilters: [], PushedFilters: [IsNotNull(t_hour), IsNotNull(t_minute), EqualTo(t_hour,10), LessThan(t_minute,30), IsNotNull(t_t..., ReadSchema: struct<t_time_sk:int,t_hour:int,t_minute:int>\n               :     +- BroadcastQueryStage 15\n               :        +- ReusedExchange [hd_demo_sk#765], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=743]\n               +- BroadcastQueryStage 17\n                  +- ReusedExchange [s_store_sk#780], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=764]\n"
      },
      "IM" : {
        "inputSizeInBytes" : 2576,
        "inputRowCount" : 161
      },
      "InitialPartitionNum" : 1,
      "PD" : {
        "6" : [ 9660 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 16,
        "FinishedTasksNum" : 30,
        "FinishedTasksTotalTimeInMs" : 9046.0,
        "FinishedTasksDistributionInMs" : [ 185.0, 244.0, 271.0, 338.0, 541.0 ]
      },
      "QueryStageOptimizationId" : 23,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 30 ],
      "Objectives" : {
        "DurationInMs" : 2781,
        "TotalTasksDurationInMs" : 170,
        "IOBytes" : {
          "Total" : 9499,
          "Details" : {
            "IR" : 0,
            "IW" : 0,
            "SR" : 9499,
            "SW" : 0
          }
        }
      }
    },
    "4" : {
      "QSLogical" : {
        "operators" : {
          "0" : {
            "sign" : 1501833769,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 22452,
                "rowCount" : 1871
              },
              "compileTime" : {
                "sizeInBytes" : 22452,
                "rowCount" : 1871
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [t_time_sk#703] "
          },
          "1" : {
            "sign" : -76872378,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 235746,
                "rowCount" : 1871
              },
              "compileTime" : {
                "sizeInBytes" : 235746,
                "rowCount" : 1871
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(t_hour#706) AND isnotnull(t_minute#707)) AND ((t_hour#706 = 9) AND (t_minute#707 >= 30))) AND isnotnull(t_time_sk#703)) "
          },
          "2" : {
            "sign" : -1073707603,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 10886400,
                "rowCount" : 86400
              },
              "compileTime" : {
                "sizeInBytes" : 10886400,
                "rowCount" : 86400
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [t_time_sk#703, t_time_id#704, t_time#705, t_hour#706, t_minute#707, t_second#708, t_am_pm#709, t_shift#710, t_sub_shift#711, t_meal_time#712], `spark_catalog`.`tpcds_100`.`time_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "LogicalRelation",
          "toId" : 1,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Filter",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [t_time_sk#703]\n+- Filter (((isnotnull(t_hour#706) AND isnotnull(t_minute#707)) AND ((t_hour#706 = 9) AND (t_minute#707 >= 30))) AND isnotnull(t_time_sk#703))\n   +- Relation spark_catalog.tpcds_100.time_dim[t_time_sk#703,t_time_id#704,t_time#705,t_hour#706,t_minute#707,t_second#708,t_am_pm#709,t_shift#710,t_sub_shift#711,t_meal_time#712] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "0" : {
            "sign" : 2092966080,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 22452,
            "rowCount" : 1871,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [1]: [t_time_sk#703] Input [3]: [t_time_sk#703, t_hour#706, t_minute#707] "
          },
          "1" : {
            "sign" : 2087014055,
            "className" : "org.apache.spark.sql.execution.FilterExec",
            "sizeInBytes" : 22452,
            "rowCount" : 1871,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Input [3]: [t_time_sk#703, t_hour#706, t_minute#707] Condition : ((((isnotnull(t_hour#706) AND isnotnull(t_minute#707)) AND (t_hour#706 = 9)) AND (t_minute#707 >= 30)) AND isnotnull(t_time_sk#703)) "
          },
          "2" : {
            "sign" : -1802422482,
            "className" : "org.apache.spark.sql.execution.FileSourceScanExec",
            "sizeInBytes" : 22452,
            "rowCount" : 1871,
            "isRuntime" : false,
            "predicate" : " (unknown) Scan parquet spark_catalog.tpcds_100.time_dim Output [3]: [t_time_sk#703, t_hour#706, t_minute#707] Batched: true Location: InMemoryFileIndex [hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/time_dim] PushedFilters: [IsNotNull(t_hour), IsNotNull(t_minute), EqualTo(t_hour,9), GreaterThanOrEqual(t_minute,30), IsNotNull(t_time_sk)] ReadSchema: struct<t_time_sk:int,t_hour:int,t_minute:int> "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "Scan parquet spark_catalog.tpcds_100.time_dim",
          "toId" : 1,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Filter",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [t_time_sk#703]\n+- Filter ((((isnotnull(t_hour#706) AND isnotnull(t_minute#707)) AND (t_hour#706 = 9)) AND (t_minute#707 >= 30)) AND isnotnull(t_time_sk#703))\n   +- FileScan parquet spark_catalog.tpcds_100.time_dim[t_time_sk#703,t_hour#706,t_minute#707] Batched: true, DataFilters: [isnotnull(t_hour#706), isnotnull(t_minute#707), (t_hour#706 = 9), (t_minute#707 >= 30), isnotnul..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/time_dim], PartitionFilters: [], PushedFilters: [IsNotNull(t_hour), IsNotNull(t_minute), EqualTo(t_hour,9), GreaterThanOrEqual(t_minute,30), IsNo..., ReadSchema: struct<t_time_sk:int,t_hour:int,t_minute:int>\n"
      },
      "IM" : {
        "inputSizeInBytes" : 22452,
        "inputRowCount" : 1871
      },
      "InitialPartitionNum" : 0,
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 4,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 2 ],
      "Objectives" : {
        "DurationInMs" : 3464,
        "TotalTasksDurationInMs" : 3452,
        "IOBytes" : {
          "Total" : 166015,
          "Details" : {
            "IR" : 166015,
            "IW" : 0,
            "SR" : 0,
            "SW" : 0
          }
        }
      }
    },
    "15" : {
      "QSLogical" : {
        "operators" : {
          "8" : {
            "sign" : 1156235223,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 38130005144,
                "rowCount" : 250855297
              },
              "compileTime" : {
                "sizeInBytes" : 38130005144,
                "rowCount" : 250855297
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(ss_hdemo_sk#20) AND (isnotnull(ss_sold_time_sk#16) AND isnotnull(ss_store_sk#22))) "
          },
          "4" : {
            "sign" : 1041302071,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 5432612500,
                "rowCount" : 271630625
              },
              "compileTime" : {
                "sizeInBytes" : 5432612500,
                "rowCount" : 271630625
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_hdemo_sk#20 = hd_demo_sk#39) "
          },
          "9" : {
            "sign" : 437822322,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 43776970976,
                "rowCount" : 288006388
              },
              "compileTime" : {
                "sizeInBytes" : 43776970976,
                "rowCount" : 288006388
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#16, ss_item_sk#17, ss_customer_sk#18, ss_cdemo_sk#19, ss_hdemo_sk#20, ss_addr_sk#21, ss_store_sk#22, ss_promo_sk#23, ss_ticket_number#24L, ss_quantity#25, ss_wholesale_cost#26, ss_list_price#27, ss_sales_price#28, ss_ext_discount_amt#29, ss_ext_sales_price#30, ss_ext_wholesale_cost#31, ss_ext_list_price#32, ss_ext_tax#33, ss_coupon_amt#34, ss_net_paid#35, ss_net_paid_inc_tax#36, ss_net_profit#37, ss_sold_date_sk#38], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "5" : {
            "sign" : -603471125,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 4332576176,
                "rowCount" : 270786011
              },
              "compileTime" : {
                "sizeInBytes" : 4332576176,
                "rowCount" : 270786011
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_hdemo_sk#20, ss_store_sk#22] "
          },
          "6" : {
            "sign" : 1362900898,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 6498864264,
                "rowCount" : 270786011
              },
              "compileTime" : {
                "sizeInBytes" : 6498864264,
                "rowCount" : 270786011
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_time_sk#16 = t_time_sk#44) "
          },
          "1" : {
            "sign" : 1731141962,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 4622824312,
                "rowCount" : 577853039
              },
              "compileTime" : {
                "sizeInBytes" : 4622824312,
                "rowCount" : 577853039
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project "
          },
          "0" : {
            "sign" : -1002549711,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 16,
                "rowCount" : 1
              },
              "compileTime" : {
                "sizeInBytes" : 16,
                "rowCount" : 1
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [count(1) AS h8_30_to_9#592L] "
          },
          "2" : {
            "sign" : -1574160847,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 9245648624,
                "rowCount" : 577853039
              },
              "compileTime" : {
                "sizeInBytes" : 9245648624,
                "rowCount" : 577853039
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_store_sk#22 = s_store_sk#54) "
          },
          "7" : {
            "sign" : 450172376,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 5017105940,
                "rowCount" : 250855297
              },
              "compileTime" : {
                "sizeInBytes" : 5017105940,
                "rowCount" : 250855297
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_sold_time_sk#16, ss_hdemo_sk#20, ss_store_sk#22] "
          },
          "3" : {
            "sign" : -729326354,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 3259567500,
                "rowCount" : 271630625
              },
              "compileTime" : {
                "sizeInBytes" : 3259567500,
                "rowCount" : 271630625
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_store_sk#22] "
          }
        },
        "links" : [ {
          "fromId" : 9,
          "fromName" : "LogicalRelation",
          "toId" : 8,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "Filter",
          "toId" : 7,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Project",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Join",
          "toId" : 5,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Project",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Join",
          "toId" : 3,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Project",
          "toId" : 2,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Join",
          "toId" : 1,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Project",
          "toId" : 0,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Aggregate [count(1) AS h8_30_to_9#592L]\n+- Project\n   +- Join Inner, (ss_store_sk#22 = s_store_sk#54)\n      :- Project [ss_store_sk#22]\n      :  +- Join Inner, (ss_hdemo_sk#20 = hd_demo_sk#39)\n      :     :- Project [ss_hdemo_sk#20, ss_store_sk#22]\n      :     :  +- Join Inner, (ss_sold_time_sk#16 = t_time_sk#44)\n      :     :     :- Project [ss_sold_time_sk#16, ss_hdemo_sk#20, ss_store_sk#22]\n      :     :     :  +- Filter (isnotnull(ss_hdemo_sk#20) AND (isnotnull(ss_sold_time_sk#16) AND isnotnull(ss_store_sk#22)))\n      :     :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#16,ss_item_sk#17,ss_customer_sk#18,ss_cdemo_sk#19,ss_hdemo_sk#20,ss_addr_sk#21,ss_store_sk#22,ss_promo_sk#23,ss_ticket_number#24L,ss_quantity#25,ss_wholesale_cost#26,ss_list_price#27,ss_sales_price#28,ss_ext_discount_amt#29,ss_ext_sales_price#30,ss_ext_wholesale_cost#31,ss_ext_list_price#32,ss_ext_tax#33,ss_coupon_amt#34,ss_net_paid#35,ss_net_paid_inc_tax#36,ss_net_profit#37,ss_sold_date_sk#38] parquet\n      :     :     +- Project [t_time_sk#44]\n      :     :        +- Filter (((isnotnull(t_hour#47) AND isnotnull(t_minute#48)) AND ((t_hour#47 = 8) AND (t_minute#48 >= 30))) AND isnotnull(t_time_sk#44))\n      :     :           +- Relation spark_catalog.tpcds_100.time_dim[t_time_sk#44,t_time_id#45,t_time#46,t_hour#47,t_minute#48,t_second#49,t_am_pm#50,t_shift#51,t_sub_shift#52,t_meal_time#53] parquet\n      :     +- Project [hd_demo_sk#39]\n      :        +- Filter (((((hd_dep_count#42 = 3) AND (hd_vehicle_count#43 <= 5)) OR ((hd_dep_count#42 = 0) AND (hd_vehicle_count#43 <= 2))) OR ((hd_dep_count#42 = 1) AND (hd_vehicle_count#43 <= 3))) AND isnotnull(hd_demo_sk#39))\n      :           +- Relation spark_catalog.tpcds_100.household_demographics[hd_demo_sk#39,hd_income_band_sk#40,hd_buy_potential#41,hd_dep_count#42,hd_vehicle_count#43] parquet\n      +- Project [s_store_sk#54]\n         +- Filter ((isnotnull(s_store_name#59) AND (s_store_name#59 = ese)) AND isnotnull(s_store_sk#54))\n            +- Relation spark_catalog.tpcds_100.store[s_store_sk#54,s_store_id#55,s_rec_start_date#56,s_rec_end_date#57,s_closed_date_sk#58,s_store_name#59,s_number_employees#60,s_floor_space#61,s_hours#62,s_manager#63,s_market_id#64,s_geography_class#65,s_market_desc#66,s_market_manager#67,s_division_id#68,s_division_name#69,s_company_id#70,s_company_name#71,s_street_number#72,s_street_name#73,s_street_type#74,s_suite_number#75,s_city#76,s_county#77,... 5 more fields] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "12" : {
            "sign" : 1028290288,
            "className" : "org.apache.spark.sql.execution.adaptive.BroadcastQueryStageExec",
            "sizeInBytes" : 1051712,
            "rowCount" : 47,
            "isRuntime" : true,
            "predicate" : " (unknown) BroadcastQueryStage Output [1]: [s_store_sk#54] Arguments: 2 "
          },
          "8" : {
            "sign" : 1656010203,
            "className" : "org.apache.spark.sql.execution.FilterExec",
            "sizeInBytes" : 5017105940,
            "rowCount" : 250855297,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Input [4]: [ss_sold_time_sk#16, ss_hdemo_sk#20, ss_store_sk#22, ss_sold_date_sk#38] Condition : ((isnotnull(ss_hdemo_sk#20) AND isnotnull(ss_sold_time_sk#16)) AND isnotnull(ss_store_sk#22)) "
          },
          "4" : {
            "sign" : 593478956,
            "className" : "org.apache.spark.sql.execution.joins.BroadcastHashJoinExec",
            "sizeInBytes" : 5432612500,
            "rowCount" : 271630625,
            "isRuntime" : false,
            "predicate" : " (unknown) BroadcastHashJoin Left keys [1]: [ss_hdemo_sk#20] Right keys [1]: [hd_demo_sk#39] Join type: Inner Join condition: None "
          },
          "11" : {
            "sign" : 130443015,
            "className" : "org.apache.spark.sql.execution.adaptive.BroadcastQueryStageExec",
            "sizeInBytes" : 1106176,
            "rowCount" : 1800,
            "isRuntime" : true,
            "predicate" : " (unknown) BroadcastQueryStage Output [1]: [hd_demo_sk#39] Arguments: 1 "
          },
          "9" : {
            "sign" : 125853744,
            "className" : "org.apache.spark.sql.execution.FileSourceScanExec",
            "sizeInBytes" : 5017105940,
            "rowCount" : 250855297,
            "isRuntime" : false,
            "predicate" : " (unknown) Scan parquet spark_catalog.tpcds_100.store_sales Output [4]: [ss_sold_time_sk#16, ss_hdemo_sk#20, ss_store_sk#22, ss_sold_date_sk#38] Batched: true Location: CatalogFileIndex [hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/store_sales] PushedFilters: [IsNotNull(ss_hdemo_sk), IsNotNull(ss_sold_time_sk), IsNotNull(ss_store_sk)] ReadSchema: struct<ss_sold_time_sk:int,ss_hdemo_sk:int,ss_store_sk:int> "
          },
          "5" : {
            "sign" : 629067160,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 4332576176,
            "rowCount" : 270786011,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [2]: [ss_hdemo_sk#20, ss_store_sk#22] Input [4]: [ss_sold_time_sk#16, ss_hdemo_sk#20, ss_store_sk#22, t_time_sk#44] "
          },
          "10" : {
            "sign" : 703920334,
            "className" : "org.apache.spark.sql.execution.adaptive.BroadcastQueryStageExec",
            "sizeInBytes" : 1062976,
            "rowCount" : 1800,
            "isRuntime" : true,
            "predicate" : " (unknown) BroadcastQueryStage Output [1]: [t_time_sk#44] Arguments: 0 "
          },
          "6" : {
            "sign" : -1848305997,
            "className" : "org.apache.spark.sql.execution.joins.BroadcastHashJoinExec",
            "sizeInBytes" : 6498864264,
            "rowCount" : 270786011,
            "isRuntime" : false,
            "predicate" : " (unknown) BroadcastHashJoin Left keys [1]: [ss_sold_time_sk#16] Right keys [1]: [t_time_sk#44] Join type: Inner Join condition: None "
          },
          "1" : {
            "sign" : -1505750915,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 4622824312,
            "rowCount" : 577853039,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output: [] Input [2]: [ss_store_sk#22, s_store_sk#54] "
          },
          "0" : {
            "sign" : 222783324,
            "className" : "org.apache.spark.sql.execution.aggregate.HashAggregateExec",
            "sizeInBytes" : 16,
            "rowCount" : 1,
            "isRuntime" : false,
            "predicate" : " (unknown) HashAggregate Input: [] Keys: [] Functions [1]: [partial_count(1)] Aggregate Attributes [1]: [count#1113L] Results [1]: [count#1114L] "
          },
          "2" : {
            "sign" : 1339551792,
            "className" : "org.apache.spark.sql.execution.joins.BroadcastHashJoinExec",
            "sizeInBytes" : 9245648624,
            "rowCount" : 577853039,
            "isRuntime" : false,
            "predicate" : " (unknown) BroadcastHashJoin Left keys [1]: [ss_store_sk#22] Right keys [1]: [s_store_sk#54] Join type: Inner Join condition: None "
          },
          "7" : {
            "sign" : -2097272166,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 5017105940,
            "rowCount" : 250855297,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [3]: [ss_sold_time_sk#16, ss_hdemo_sk#20, ss_store_sk#22] Input [4]: [ss_sold_time_sk#16, ss_hdemo_sk#20, ss_store_sk#22, ss_sold_date_sk#38] "
          },
          "3" : {
            "sign" : 1069372211,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 3259567500,
            "rowCount" : 271630625,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [1]: [ss_store_sk#22] Input [3]: [ss_hdemo_sk#20, ss_store_sk#22, hd_demo_sk#39] "
          }
        },
        "links" : [ {
          "fromId" : 9,
          "fromName" : "Scan parquet spark_catalog.tpcds_100.store_sales",
          "toId" : 8,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "Filter",
          "toId" : 7,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Project",
          "toId" : 6,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "BroadcastQueryStage",
          "toId" : 6,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "BroadcastHashJoin",
          "toId" : 5,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Project",
          "toId" : 4,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "BroadcastQueryStage",
          "toId" : 4,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "BroadcastHashJoin",
          "toId" : 3,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Project",
          "toId" : 2,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 12,
          "fromName" : "BroadcastQueryStage",
          "toId" : 2,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "BroadcastHashJoin",
          "toId" : 1,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Project",
          "toId" : 0,
          "toName" : "HashAggregate",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "HashAggregate(keys=[], functions=[partial_count(1)], output=[count#1114L])\n+- Project\n   +- BroadcastHashJoin [ss_store_sk#22], [s_store_sk#54], Inner, BuildRight, false\n      :- Project [ss_store_sk#22]\n      :  +- BroadcastHashJoin [ss_hdemo_sk#20], [hd_demo_sk#39], Inner, BuildRight, false\n      :     :- Project [ss_hdemo_sk#20, ss_store_sk#22]\n      :     :  +- BroadcastHashJoin [ss_sold_time_sk#16], [t_time_sk#44], Inner, BuildRight, false\n      :     :     :- Project [ss_sold_time_sk#16, ss_hdemo_sk#20, ss_store_sk#22]\n      :     :     :  +- Filter ((isnotnull(ss_hdemo_sk#20) AND isnotnull(ss_sold_time_sk#16)) AND isnotnull(ss_store_sk#22))\n      :     :     :     +- FileScan parquet spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#16,ss_hdemo_sk#20,ss_store_sk#22,ss_sold_date_sk#38] Batched: true, DataFilters: [isnotnull(ss_hdemo_sk#20), isnotnull(ss_sold_time_sk#16), isnotnull(ss_store_sk#22)], Format: Parquet, Location: CatalogFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/store_sales], PartitionFilters: [], PushedFilters: [IsNotNull(ss_hdemo_sk), IsNotNull(ss_sold_time_sk), IsNotNull(ss_store_sk)], ReadSchema: struct<ss_sold_time_sk:int,ss_hdemo_sk:int,ss_store_sk:int>\n      :     :     +- BroadcastQueryStage 0\n      :     :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=722]\n      :     :           +- *(1) Project [t_time_sk#44]\n      :     :              +- *(1) Filter ((((isnotnull(t_hour#47) AND isnotnull(t_minute#48)) AND (t_hour#47 = 8)) AND (t_minute#48 >= 30)) AND isnotnull(t_time_sk#44))\n      :     :                 +- *(1) ColumnarToRow\n      :     :                    +- FileScan parquet spark_catalog.tpcds_100.time_dim[t_time_sk#44,t_hour#47,t_minute#48] Batched: true, DataFilters: [isnotnull(t_hour#47), isnotnull(t_minute#48), (t_hour#47 = 8), (t_minute#48 >= 30), isnotnull(t_..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/time_dim], PartitionFilters: [], PushedFilters: [IsNotNull(t_hour), IsNotNull(t_minute), EqualTo(t_hour,8), GreaterThanOrEqual(t_minute,30), IsNo..., ReadSchema: struct<t_time_sk:int,t_hour:int,t_minute:int>\n      :     +- BroadcastQueryStage 1\n      :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=743]\n      :           +- *(2) Project [hd_demo_sk#39]\n      :              +- *(2) Filter (((((hd_dep_count#42 = 3) AND (hd_vehicle_count#43 <= 5)) OR ((hd_dep_count#42 = 0) AND (hd_vehicle_count#43 <= 2))) OR ((hd_dep_count#42 = 1) AND (hd_vehicle_count#43 <= 3))) AND isnotnull(hd_demo_sk#39))\n      :                 +- *(2) ColumnarToRow\n      :                    +- FileScan parquet spark_catalog.tpcds_100.household_demographics[hd_demo_sk#39,hd_dep_count#42,hd_vehicle_count#43] Batched: true, DataFilters: [((((hd_dep_count#42 = 3) AND (hd_vehicle_count#43 <= 5)) OR ((hd_dep_count#42 = 0) AND (hd_vehic..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/household..., PartitionFilters: [], PushedFilters: [Or(Or(And(EqualTo(hd_dep_count,3),LessThanOrEqual(hd_vehicle_count,5)),And(EqualTo(hd_dep_count,..., ReadSchema: struct<hd_demo_sk:int,hd_dep_count:int,hd_vehicle_count:int>\n      +- BroadcastQueryStage 2\n         +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=764]\n            +- *(3) Project [s_store_sk#54]\n               +- *(3) Filter ((isnotnull(s_store_name#59) AND (s_store_name#59 = ese)) AND isnotnull(s_store_sk#54))\n                  +- *(3) ColumnarToRow\n                     +- FileScan parquet spark_catalog.tpcds_100.store[s_store_sk#54,s_store_name#59] Batched: true, DataFilters: [isnotnull(s_store_name#59), (s_store_name#59 = ese), isnotnull(s_store_sk#54)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/store], PartitionFilters: [], PushedFilters: [IsNotNull(s_store_name), EqualTo(s_store_name,ese), IsNotNull(s_store_sk)], ReadSchema: struct<s_store_sk:int,s_store_name:string>\n"
      },
      "IM" : {
        "inputSizeInBytes" : 5020326804,
        "inputRowCount" : 250858944
      },
      "InitialPartitionNum" : 0,
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 16,
        "FinishedTasksNum" : 1,
        "FinishedTasksTotalTimeInMs" : 1150.0,
        "FinishedTasksDistributionInMs" : [ 1150.0, 1150.0, 1150.0, 1150.0, 1150.0 ]
      },
      "QueryStageOptimizationId" : 15,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 16 ],
      "Objectives" : {
        "DurationInMs" : 20624,
        "TotalTasksDurationInMs" : 40713,
        "IOBytes" : {
          "Total" : 480112748,
          "Details" : {
            "IR" : 480103249,
            "IW" : 0,
            "SR" : 0,
            "SW" : 9499
          }
        }
      }
    },
    "11" : {
      "QSLogical" : {
        "operators" : {
          "8" : {
            "sign" : 652889460,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 38130005144,
                "rowCount" : 250855297
              },
              "compileTime" : {
                "sizeInBytes" : 38130005144,
                "rowCount" : 250855297
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(ss_hdemo_sk#679) AND (isnotnull(ss_sold_time_sk#675) AND isnotnull(ss_store_sk#681))) "
          },
          "4" : {
            "sign" : -739244840,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 5432612500,
                "rowCount" : 271630625
              },
              "compileTime" : {
                "sizeInBytes" : 5432612500,
                "rowCount" : 271630625
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_hdemo_sk#679 = hd_demo_sk#698) "
          },
          "9" : {
            "sign" : 635767337,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 43776970976,
                "rowCount" : 288006388
              },
              "compileTime" : {
                "sizeInBytes" : 43776970976,
                "rowCount" : 288006388
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#675, ss_item_sk#676, ss_customer_sk#677, ss_cdemo_sk#678, ss_hdemo_sk#679, ss_addr_sk#680, ss_store_sk#681, ss_promo_sk#682, ss_ticket_number#683L, ss_quantity#684, ss_wholesale_cost#685, ss_list_price#686, ss_sales_price#687, ss_ext_discount_amt#688, ss_ext_sales_price#689, ss_ext_wholesale_cost#690, ss_ext_list_price#691, ss_ext_tax#692, ss_coupon_amt#693, ss_net_paid#694, ss_net_paid_inc_tax#695, ss_net_profit#696, ss_sold_date_sk#697], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "5" : {
            "sign" : 1504620618,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 4332576176,
                "rowCount" : 270786011
              },
              "compileTime" : {
                "sizeInBytes" : 4332576176,
                "rowCount" : 270786011
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_hdemo_sk#679, ss_store_sk#681] "
          },
          "6" : {
            "sign" : -1515671410,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 6498864264,
                "rowCount" : 270786011
              },
              "compileTime" : {
                "sizeInBytes" : 6498864264,
                "rowCount" : 270786011
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_time_sk#675 = t_time_sk#703) "
          },
          "1" : {
            "sign" : -650883315,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 4622824312,
                "rowCount" : 577853039
              },
              "compileTime" : {
                "sizeInBytes" : 4622824312,
                "rowCount" : 577853039
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project "
          },
          "0" : {
            "sign" : -1362582711,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 16,
                "rowCount" : 1
              },
              "compileTime" : {
                "sizeInBytes" : 16,
                "rowCount" : 1
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [count(1) AS h9_30_to_10#594L] "
          },
          "2" : {
            "sign" : -1712801326,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 9245648624,
                "rowCount" : 577853039
              },
              "compileTime" : {
                "sizeInBytes" : 9245648624,
                "rowCount" : 577853039
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_store_sk#681 = s_store_sk#713) "
          },
          "7" : {
            "sign" : 1269516271,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 5017105940,
                "rowCount" : 250855297
              },
              "compileTime" : {
                "sizeInBytes" : 5017105940,
                "rowCount" : 250855297
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_sold_time_sk#675, ss_hdemo_sk#679, ss_store_sk#681] "
          },
          "3" : {
            "sign" : 1508860538,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 3259567500,
                "rowCount" : 271630625
              },
              "compileTime" : {
                "sizeInBytes" : 3259567500,
                "rowCount" : 271630625
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_store_sk#681] "
          }
        },
        "links" : [ {
          "fromId" : 9,
          "fromName" : "LogicalRelation",
          "toId" : 8,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "Filter",
          "toId" : 7,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Project",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Join",
          "toId" : 5,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Project",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Join",
          "toId" : 3,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Project",
          "toId" : 2,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Join",
          "toId" : 1,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Project",
          "toId" : 0,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Aggregate [count(1) AS h9_30_to_10#594L]\n+- Project\n   +- Join Inner, (ss_store_sk#681 = s_store_sk#713)\n      :- Project [ss_store_sk#681]\n      :  +- Join Inner, (ss_hdemo_sk#679 = hd_demo_sk#698)\n      :     :- Project [ss_hdemo_sk#679, ss_store_sk#681]\n      :     :  +- Join Inner, (ss_sold_time_sk#675 = t_time_sk#703)\n      :     :     :- Project [ss_sold_time_sk#675, ss_hdemo_sk#679, ss_store_sk#681]\n      :     :     :  +- Filter (isnotnull(ss_hdemo_sk#679) AND (isnotnull(ss_sold_time_sk#675) AND isnotnull(ss_store_sk#681)))\n      :     :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#675,ss_item_sk#676,ss_customer_sk#677,ss_cdemo_sk#678,ss_hdemo_sk#679,ss_addr_sk#680,ss_store_sk#681,ss_promo_sk#682,ss_ticket_number#683L,ss_quantity#684,ss_wholesale_cost#685,ss_list_price#686,ss_sales_price#687,ss_ext_discount_amt#688,ss_ext_sales_price#689,ss_ext_wholesale_cost#690,ss_ext_list_price#691,ss_ext_tax#692,ss_coupon_amt#693,ss_net_paid#694,ss_net_paid_inc_tax#695,ss_net_profit#696,ss_sold_date_sk#697] parquet\n      :     :     +- Project [t_time_sk#703]\n      :     :        +- Filter (((isnotnull(t_hour#706) AND isnotnull(t_minute#707)) AND ((t_hour#706 = 9) AND (t_minute#707 >= 30))) AND isnotnull(t_time_sk#703))\n      :     :           +- Relation spark_catalog.tpcds_100.time_dim[t_time_sk#703,t_time_id#704,t_time#705,t_hour#706,t_minute#707,t_second#708,t_am_pm#709,t_shift#710,t_sub_shift#711,t_meal_time#712] parquet\n      :     +- Project [hd_demo_sk#698]\n      :        +- Filter (((((hd_dep_count#701 = 3) AND (hd_vehicle_count#702 <= 5)) OR ((hd_dep_count#701 = 0) AND (hd_vehicle_count#702 <= 2))) OR ((hd_dep_count#701 = 1) AND (hd_vehicle_count#702 <= 3))) AND isnotnull(hd_demo_sk#698))\n      :           +- Relation spark_catalog.tpcds_100.household_demographics[hd_demo_sk#698,hd_income_band_sk#699,hd_buy_potential#700,hd_dep_count#701,hd_vehicle_count#702] parquet\n      +- Project [s_store_sk#713]\n         +- Filter ((isnotnull(s_store_name#718) AND (s_store_name#718 = ese)) AND isnotnull(s_store_sk#713))\n            +- Relation spark_catalog.tpcds_100.store[s_store_sk#713,s_store_id#714,s_rec_start_date#715,s_rec_end_date#716,s_closed_date_sk#717,s_store_name#718,s_number_employees#719,s_floor_space#720,s_hours#721,s_manager#722,s_market_id#723,s_geography_class#724,s_market_desc#725,s_market_manager#726,s_division_id#727,s_division_name#728,s_company_id#729,s_company_name#730,s_street_number#731,s_street_name#732,s_street_type#733,s_suite_number#734,s_city#735,s_county#736,... 5 more fields] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "12" : {
            "sign" : 945820858,
            "className" : "org.apache.spark.sql.execution.adaptive.BroadcastQueryStageExec",
            "sizeInBytes" : 1051712,
            "rowCount" : 47,
            "isRuntime" : true,
            "predicate" : " (unknown) BroadcastQueryStage Output [1]: [s_store_sk#713] Arguments: 12 "
          },
          "8" : {
            "sign" : -1030601544,
            "className" : "org.apache.spark.sql.execution.FilterExec",
            "sizeInBytes" : 5017105940,
            "rowCount" : 250855297,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Input [4]: [ss_sold_time_sk#675, ss_hdemo_sk#679, ss_store_sk#681, ss_sold_date_sk#697] Condition : ((isnotnull(ss_hdemo_sk#679) AND isnotnull(ss_sold_time_sk#675)) AND isnotnull(ss_store_sk#681)) "
          },
          "4" : {
            "sign" : -266417921,
            "className" : "org.apache.spark.sql.execution.joins.BroadcastHashJoinExec",
            "sizeInBytes" : 5432612500,
            "rowCount" : 271630625,
            "isRuntime" : false,
            "predicate" : " (unknown) BroadcastHashJoin Left keys [1]: [ss_hdemo_sk#679] Right keys [1]: [hd_demo_sk#698] Join type: Inner Join condition: None "
          },
          "11" : {
            "sign" : 979692530,
            "className" : "org.apache.spark.sql.execution.adaptive.BroadcastQueryStageExec",
            "sizeInBytes" : 1106176,
            "rowCount" : 1800,
            "isRuntime" : true,
            "predicate" : " (unknown) BroadcastQueryStage Output [1]: [hd_demo_sk#698] Arguments: 10 "
          },
          "9" : {
            "sign" : -672253213,
            "className" : "org.apache.spark.sql.execution.FileSourceScanExec",
            "sizeInBytes" : 5017105940,
            "rowCount" : 250855297,
            "isRuntime" : false,
            "predicate" : " (unknown) Scan parquet spark_catalog.tpcds_100.store_sales Output [4]: [ss_sold_time_sk#675, ss_hdemo_sk#679, ss_store_sk#681, ss_sold_date_sk#697] Batched: true Location: CatalogFileIndex [hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/store_sales] PushedFilters: [IsNotNull(ss_hdemo_sk), IsNotNull(ss_sold_time_sk), IsNotNull(ss_store_sk)] ReadSchema: struct<ss_sold_time_sk:int,ss_hdemo_sk:int,ss_store_sk:int> "
          },
          "5" : {
            "sign" : 547063771,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 4332576176,
            "rowCount" : 270786011,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [2]: [ss_hdemo_sk#679, ss_store_sk#681] Input [4]: [ss_sold_time_sk#675, ss_hdemo_sk#679, ss_store_sk#681, t_time_sk#703] "
          },
          "10" : {
            "sign" : -1369052880,
            "className" : "org.apache.spark.sql.execution.adaptive.BroadcastQueryStageExec",
            "sizeInBytes" : 1062976,
            "rowCount" : 1800,
            "isRuntime" : true,
            "predicate" : " (unknown) BroadcastQueryStage Output [1]: [t_time_sk#703] Arguments: 8 "
          },
          "6" : {
            "sign" : 22018439,
            "className" : "org.apache.spark.sql.execution.joins.BroadcastHashJoinExec",
            "sizeInBytes" : 6498864264,
            "rowCount" : 270786011,
            "isRuntime" : false,
            "predicate" : " (unknown) BroadcastHashJoin Left keys [1]: [ss_sold_time_sk#675] Right keys [1]: [t_time_sk#703] Join type: Inner Join condition: None "
          },
          "1" : {
            "sign" : -2074781326,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 4622824312,
            "rowCount" : 577853039,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output: [] Input [2]: [ss_store_sk#681, s_store_sk#713] "
          },
          "0" : {
            "sign" : 1833362209,
            "className" : "org.apache.spark.sql.execution.aggregate.HashAggregateExec",
            "sizeInBytes" : 16,
            "rowCount" : 1,
            "isRuntime" : false,
            "predicate" : " (unknown) HashAggregate Input: [] Keys: [] Functions [1]: [partial_count(1)] Aggregate Attributes [1]: [count#1117L] Results [1]: [count#1118L] "
          },
          "2" : {
            "sign" : 323949297,
            "className" : "org.apache.spark.sql.execution.joins.BroadcastHashJoinExec",
            "sizeInBytes" : 9245648624,
            "rowCount" : 577853039,
            "isRuntime" : false,
            "predicate" : " (unknown) BroadcastHashJoin Left keys [1]: [ss_store_sk#681] Right keys [1]: [s_store_sk#713] Join type: Inner Join condition: None "
          },
          "7" : {
            "sign" : 2010518173,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 5017105940,
            "rowCount" : 250855297,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [3]: [ss_sold_time_sk#675, ss_hdemo_sk#679, ss_store_sk#681] Input [4]: [ss_sold_time_sk#675, ss_hdemo_sk#679, ss_store_sk#681, ss_sold_date_sk#697] "
          },
          "3" : {
            "sign" : -2022946819,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 3259567500,
            "rowCount" : 271630625,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [1]: [ss_store_sk#681] Input [3]: [ss_hdemo_sk#679, ss_store_sk#681, hd_demo_sk#698] "
          }
        },
        "links" : [ {
          "fromId" : 9,
          "fromName" : "Scan parquet spark_catalog.tpcds_100.store_sales",
          "toId" : 8,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "Filter",
          "toId" : 7,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Project",
          "toId" : 6,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "BroadcastQueryStage",
          "toId" : 6,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "BroadcastHashJoin",
          "toId" : 5,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Project",
          "toId" : 4,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "BroadcastQueryStage",
          "toId" : 4,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "BroadcastHashJoin",
          "toId" : 3,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Project",
          "toId" : 2,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 12,
          "fromName" : "BroadcastQueryStage",
          "toId" : 2,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "BroadcastHashJoin",
          "toId" : 1,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Project",
          "toId" : 0,
          "toName" : "HashAggregate",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "HashAggregate(keys=[], functions=[partial_count(1)], output=[count#1118L])\n+- Project\n   +- BroadcastHashJoin [ss_store_sk#681], [s_store_sk#713], Inner, BuildRight, false\n      :- Project [ss_store_sk#681]\n      :  +- BroadcastHashJoin [ss_hdemo_sk#679], [hd_demo_sk#698], Inner, BuildRight, false\n      :     :- Project [ss_hdemo_sk#679, ss_store_sk#681]\n      :     :  +- BroadcastHashJoin [ss_sold_time_sk#675], [t_time_sk#703], Inner, BuildRight, false\n      :     :     :- Project [ss_sold_time_sk#675, ss_hdemo_sk#679, ss_store_sk#681]\n      :     :     :  +- Filter ((isnotnull(ss_hdemo_sk#679) AND isnotnull(ss_sold_time_sk#675)) AND isnotnull(ss_store_sk#681))\n      :     :     :     +- FileScan parquet spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#675,ss_hdemo_sk#679,ss_store_sk#681,ss_sold_date_sk#697] Batched: true, DataFilters: [isnotnull(ss_hdemo_sk#679), isnotnull(ss_sold_time_sk#675), isnotnull(ss_store_sk#681)], Format: Parquet, Location: CatalogFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/store_sales], PartitionFilters: [], PushedFilters: [IsNotNull(ss_hdemo_sk), IsNotNull(ss_sold_time_sk), IsNotNull(ss_store_sk)], ReadSchema: struct<ss_sold_time_sk:int,ss_hdemo_sk:int,ss_store_sk:int>\n      :     :     +- BroadcastQueryStage 8\n      :     :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=940]\n      :     :           +- *(7) Project [t_time_sk#703]\n      :     :              +- *(7) Filter ((((isnotnull(t_hour#706) AND isnotnull(t_minute#707)) AND (t_hour#706 = 9)) AND (t_minute#707 >= 30)) AND isnotnull(t_time_sk#703))\n      :     :                 +- *(7) ColumnarToRow\n      :     :                    +- FileScan parquet spark_catalog.tpcds_100.time_dim[t_time_sk#703,t_hour#706,t_minute#707] Batched: true, DataFilters: [isnotnull(t_hour#706), isnotnull(t_minute#707), (t_hour#706 = 9), (t_minute#707 >= 30), isnotnul..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/time_dim], PartitionFilters: [], PushedFilters: [IsNotNull(t_hour), IsNotNull(t_minute), EqualTo(t_hour,9), GreaterThanOrEqual(t_minute,30), IsNo..., ReadSchema: struct<t_time_sk:int,t_hour:int,t_minute:int>\n      :     +- BroadcastQueryStage 10\n      :        +- ReusedExchange [hd_demo_sk#698], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=743]\n      +- BroadcastQueryStage 12\n         +- ReusedExchange [s_store_sk#713], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=764]\n"
      },
      "IM" : {
        "inputSizeInBytes" : 5020326804,
        "inputRowCount" : 250858944
      },
      "InitialPartitionNum" : 0,
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 2,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 11,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 12 ],
      "Objectives" : {
        "DurationInMs" : 12059,
        "TotalTasksDurationInMs" : 52986,
        "IOBytes" : {
          "Total" : 480112747,
          "Details" : {
            "IR" : 480103249,
            "IW" : 0,
            "SR" : 0,
            "SW" : 9498
          }
        }
      }
    },
    "9" : {
      "QSLogical" : {
        "operators" : {
          "0" : {
            "sign" : -1347890757,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 22632,
                "rowCount" : 1886
              },
              "compileTime" : {
                "sizeInBytes" : 22632,
                "rowCount" : 1886
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [t_time_sk#1038] "
          },
          "1" : {
            "sign" : -1539931550,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 237636,
                "rowCount" : 1886
              },
              "compileTime" : {
                "sizeInBytes" : 237636,
                "rowCount" : 1886
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(t_hour#1041) AND isnotnull(t_minute#1042)) AND ((t_hour#1041 = 12) AND (t_minute#1042 < 30))) AND isnotnull(t_time_sk#1038)) "
          },
          "2" : {
            "sign" : -1624686254,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 10886400,
                "rowCount" : 86400
              },
              "compileTime" : {
                "sizeInBytes" : 10886400,
                "rowCount" : 86400
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [t_time_sk#1038, t_time_id#1039, t_time#1040, t_hour#1041, t_minute#1042, t_second#1043, t_am_pm#1044, t_shift#1045, t_sub_shift#1046, t_meal_time#1047], `spark_catalog`.`tpcds_100`.`time_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "LogicalRelation",
          "toId" : 1,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Filter",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [t_time_sk#1038]\n+- Filter (((isnotnull(t_hour#1041) AND isnotnull(t_minute#1042)) AND ((t_hour#1041 = 12) AND (t_minute#1042 < 30))) AND isnotnull(t_time_sk#1038))\n   +- Relation spark_catalog.tpcds_100.time_dim[t_time_sk#1038,t_time_id#1039,t_time#1040,t_hour#1041,t_minute#1042,t_second#1043,t_am_pm#1044,t_shift#1045,t_sub_shift#1046,t_meal_time#1047] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "0" : {
            "sign" : 2040066289,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 22632,
            "rowCount" : 1886,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [1]: [t_time_sk#1038] Input [3]: [t_time_sk#1038, t_hour#1041, t_minute#1042] "
          },
          "1" : {
            "sign" : 145125972,
            "className" : "org.apache.spark.sql.execution.FilterExec",
            "sizeInBytes" : 22632,
            "rowCount" : 1886,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Input [3]: [t_time_sk#1038, t_hour#1041, t_minute#1042] Condition : ((((isnotnull(t_hour#1041) AND isnotnull(t_minute#1042)) AND (t_hour#1041 = 12)) AND (t_minute#1042 < 30)) AND isnotnull(t_time_sk#1038)) "
          },
          "2" : {
            "sign" : 462807878,
            "className" : "org.apache.spark.sql.execution.FileSourceScanExec",
            "sizeInBytes" : 22632,
            "rowCount" : 1886,
            "isRuntime" : false,
            "predicate" : " (unknown) Scan parquet spark_catalog.tpcds_100.time_dim Output [3]: [t_time_sk#1038, t_hour#1041, t_minute#1042] Batched: true Location: InMemoryFileIndex [hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/time_dim] PushedFilters: [IsNotNull(t_hour), IsNotNull(t_minute), EqualTo(t_hour,12), LessThan(t_minute,30), IsNotNull(t_time_sk)] ReadSchema: struct<t_time_sk:int,t_hour:int,t_minute:int> "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "Scan parquet spark_catalog.tpcds_100.time_dim",
          "toId" : 1,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Filter",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [t_time_sk#1038]\n+- Filter ((((isnotnull(t_hour#1041) AND isnotnull(t_minute#1042)) AND (t_hour#1041 = 12)) AND (t_minute#1042 < 30)) AND isnotnull(t_time_sk#1038))\n   +- FileScan parquet spark_catalog.tpcds_100.time_dim[t_time_sk#1038,t_hour#1041,t_minute#1042] Batched: true, DataFilters: [isnotnull(t_hour#1041), isnotnull(t_minute#1042), (t_hour#1041 = 12), (t_minute#1042 < 30), isno..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/time_dim], PartitionFilters: [], PushedFilters: [IsNotNull(t_hour), IsNotNull(t_minute), EqualTo(t_hour,12), LessThan(t_minute,30), IsNotNull(t_t..., ReadSchema: struct<t_time_sk:int,t_hour:int,t_minute:int>\n"
      },
      "IM" : {
        "inputSizeInBytes" : 22632,
        "inputRowCount" : 1886
      },
      "InitialPartitionNum" : 0,
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 9,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 9 ],
      "Objectives" : {
        "DurationInMs" : 3108,
        "TotalTasksDurationInMs" : 3101,
        "IOBytes" : {
          "Total" : 85721,
          "Details" : {
            "IR" : 85721,
            "IW" : 0,
            "SR" : 0,
            "SW" : 0
          }
        }
      }
    },
    "22" : {
      "QSLogical" : {
        "operators" : {
          "0" : {
            "sign" : -260755430,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 2576,
                "rowCount" : 161
              },
              "compileTime" : {
                "sizeInBytes" : 16,
                "rowCount" : 1
              }
            },
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [count(1) AS h9_to_9_30#593L], HashAggregate(keys=[], functions=[count(1)]) "
          }
        },
        "links" : [ ],
        "rawPlan" : "LogicalQueryStage Aggregate [count(1) AS h9_to_9_30#593L], HashAggregate(keys=[], functions=[count(1)])\n"
      },
      "QSPhysical" : {
        "operators" : {
          "0" : {
            "sign" : 1099368079,
            "className" : "org.apache.spark.sql.execution.aggregate.HashAggregateExec",
            "sizeInBytes" : 2576,
            "rowCount" : 161,
            "isRuntime" : true,
            "predicate" : " (unknown) HashAggregate Input [1]: [count#1116L] Keys: [] Functions [1]: [count(1)] Aggregate Attributes [1]: [count(1)#601L] Results [1]: [count(1)#601L AS h9_to_9_30#593L] "
          },
          "1" : {
            "sign" : -971917558,
            "className" : "org.apache.spark.sql.execution.adaptive.ShuffleQueryStageExec",
            "sizeInBytes" : 16,
            "rowCount" : 1,
            "isRuntime" : false,
            "predicate" : " (unknown) ShuffleQueryStage Output [1]: [count#1116L] Arguments: 38 "
          }
        },
        "links" : [ {
          "fromId" : 1,
          "fromName" : "ShuffleQueryStage",
          "toId" : 0,
          "toName" : "HashAggregate",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "HashAggregate(keys=[], functions=[count(1)], output=[h9_to_9_30#593L])\n+- ShuffleQueryStage 38\n   +- Exchange SinglePartition, ENSURE_REQUIREMENTS, [plan_id=2380]\n      +- *(25) HashAggregate(keys=[], functions=[partial_count(1)], output=[count#1116L])\n         +- *(25) Project\n            +- *(25) BroadcastHashJoin [ss_store_sk#614], [s_store_sk#646], Inner, BuildRight, false\n               :- *(25) Project [ss_store_sk#614]\n               :  +- *(25) BroadcastHashJoin [ss_hdemo_sk#612], [hd_demo_sk#631], Inner, BuildRight, false\n               :     :- *(25) Project [ss_hdemo_sk#612, ss_store_sk#614]\n               :     :  +- *(25) BroadcastHashJoin [ss_sold_time_sk#608], [t_time_sk#636], Inner, BuildRight, false\n               :     :     :- *(25) Project [ss_sold_time_sk#608, ss_hdemo_sk#612, ss_store_sk#614]\n               :     :     :  +- *(25) Filter ((isnotnull(ss_hdemo_sk#612) AND isnotnull(ss_sold_time_sk#608)) AND isnotnull(ss_store_sk#614))\n               :     :     :     +- *(25) ColumnarToRow\n               :     :     :        +- FileScan parquet spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#608,ss_hdemo_sk#612,ss_store_sk#614,ss_sold_date_sk#630] Batched: true, DataFilters: [isnotnull(ss_hdemo_sk#612), isnotnull(ss_sold_time_sk#608), isnotnull(ss_store_sk#614)], Format: Parquet, Location: CatalogFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/store_sales], PartitionFilters: [], PushedFilters: [IsNotNull(ss_hdemo_sk), IsNotNull(ss_sold_time_sk), IsNotNull(ss_store_sk)], ReadSchema: struct<ss_sold_time_sk:int,ss_hdemo_sk:int,ss_store_sk:int>\n               :     :     +- BroadcastQueryStage 3\n               :     :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=828]\n               :     :           +- *(4) Project [t_time_sk#636]\n               :     :              +- *(4) Filter ((((isnotnull(t_hour#639) AND isnotnull(t_minute#640)) AND (t_hour#639 = 9)) AND (t_minute#640 < 30)) AND isnotnull(t_time_sk#636))\n               :     :                 +- *(4) ColumnarToRow\n               :     :                    +- FileScan parquet spark_catalog.tpcds_100.time_dim[t_time_sk#636,t_hour#639,t_minute#640] Batched: true, DataFilters: [isnotnull(t_hour#639), isnotnull(t_minute#640), (t_hour#639 = 9), (t_minute#640 < 30), isnotnull..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/time_dim], PartitionFilters: [], PushedFilters: [IsNotNull(t_hour), IsNotNull(t_minute), EqualTo(t_hour,9), LessThan(t_minute,30), IsNotNull(t_ti..., ReadSchema: struct<t_time_sk:int,t_hour:int,t_minute:int>\n               :     +- BroadcastQueryStage 5\n               :        +- ReusedExchange [hd_demo_sk#631], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=743]\n               +- BroadcastQueryStage 7\n                  +- ReusedExchange [s_store_sk#646], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=764]\n"
      },
      "IM" : {
        "inputSizeInBytes" : 2576,
        "inputRowCount" : 161
      },
      "InitialPartitionNum" : 1,
      "PD" : {
        "0" : [ 9660 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 16,
        "FinishedTasksNum" : 14,
        "FinishedTasksTotalTimeInMs" : 3783.0,
        "FinishedTasksDistributionInMs" : [ 178.0, 245.0, 267.0, 293.0, 386.0 ]
      },
      "QueryStageOptimizationId" : 22,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 28 ],
      "Objectives" : {
        "DurationInMs" : 7593,
        "TotalTasksDurationInMs" : 199,
        "IOBytes" : {
          "Total" : 9499,
          "Details" : {
            "IR" : 0,
            "IW" : 0,
            "SR" : 9499,
            "SW" : 0
          }
        }
      }
    },
    "13" : {
      "QSLogical" : {
        "operators" : {
          "8" : {
            "sign" : -918152691,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 38130005144,
                "rowCount" : 250855297
              },
              "compileTime" : {
                "sizeInBytes" : 38130005144,
                "rowCount" : 250855297
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(ss_hdemo_sk#947) AND (isnotnull(ss_sold_time_sk#943) AND isnotnull(ss_store_sk#949))) "
          },
          "4" : {
            "sign" : -662140171,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 5432612500,
                "rowCount" : 271630625
              },
              "compileTime" : {
                "sizeInBytes" : 5432612500,
                "rowCount" : 271630625
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_hdemo_sk#947 = hd_demo_sk#966) "
          },
          "9" : {
            "sign" : -625696279,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 43776970976,
                "rowCount" : 288006388
              },
              "compileTime" : {
                "sizeInBytes" : 43776970976,
                "rowCount" : 288006388
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#943, ss_item_sk#944, ss_customer_sk#945, ss_cdemo_sk#946, ss_hdemo_sk#947, ss_addr_sk#948, ss_store_sk#949, ss_promo_sk#950, ss_ticket_number#951L, ss_quantity#952, ss_wholesale_cost#953, ss_list_price#954, ss_sales_price#955, ss_ext_discount_amt#956, ss_ext_sales_price#957, ss_ext_wholesale_cost#958, ss_ext_list_price#959, ss_ext_tax#960, ss_coupon_amt#961, ss_net_paid#962, ss_net_paid_inc_tax#963, ss_net_profit#964, ss_sold_date_sk#965], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "5" : {
            "sign" : -1169476613,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 4332576176,
                "rowCount" : 270786011
              },
              "compileTime" : {
                "sizeInBytes" : 4332576176,
                "rowCount" : 270786011
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_hdemo_sk#947, ss_store_sk#949] "
          },
          "6" : {
            "sign" : -205805744,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 6498864264,
                "rowCount" : 270786011
              },
              "compileTime" : {
                "sizeInBytes" : 6498864264,
                "rowCount" : 270786011
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_time_sk#943 = t_time_sk#971) "
          },
          "1" : {
            "sign" : -2065053279,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 4622824312,
                "rowCount" : 577853039
              },
              "compileTime" : {
                "sizeInBytes" : 4622824312,
                "rowCount" : 577853039
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project "
          },
          "0" : {
            "sign" : 1753462292,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 16,
                "rowCount" : 1
              },
              "compileTime" : {
                "sizeInBytes" : 16,
                "rowCount" : 1
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [count(1) AS h11_30_to_12#598L] "
          },
          "2" : {
            "sign" : 140921308,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 9245648624,
                "rowCount" : 577853039
              },
              "compileTime" : {
                "sizeInBytes" : 9245648624,
                "rowCount" : 577853039
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_store_sk#949 = s_store_sk#981) "
          },
          "7" : {
            "sign" : 1259161671,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 5017105940,
                "rowCount" : 250855297
              },
              "compileTime" : {
                "sizeInBytes" : 5017105940,
                "rowCount" : 250855297
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_sold_time_sk#943, ss_hdemo_sk#947, ss_store_sk#949] "
          },
          "3" : {
            "sign" : 394858792,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 3259567500,
                "rowCount" : 271630625
              },
              "compileTime" : {
                "sizeInBytes" : 3259567500,
                "rowCount" : 271630625
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_store_sk#949] "
          }
        },
        "links" : [ {
          "fromId" : 9,
          "fromName" : "LogicalRelation",
          "toId" : 8,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "Filter",
          "toId" : 7,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Project",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Join",
          "toId" : 5,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Project",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Join",
          "toId" : 3,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Project",
          "toId" : 2,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Join",
          "toId" : 1,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Project",
          "toId" : 0,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Aggregate [count(1) AS h11_30_to_12#598L]\n+- Project\n   +- Join Inner, (ss_store_sk#949 = s_store_sk#981)\n      :- Project [ss_store_sk#949]\n      :  +- Join Inner, (ss_hdemo_sk#947 = hd_demo_sk#966)\n      :     :- Project [ss_hdemo_sk#947, ss_store_sk#949]\n      :     :  +- Join Inner, (ss_sold_time_sk#943 = t_time_sk#971)\n      :     :     :- Project [ss_sold_time_sk#943, ss_hdemo_sk#947, ss_store_sk#949]\n      :     :     :  +- Filter (isnotnull(ss_hdemo_sk#947) AND (isnotnull(ss_sold_time_sk#943) AND isnotnull(ss_store_sk#949)))\n      :     :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#943,ss_item_sk#944,ss_customer_sk#945,ss_cdemo_sk#946,ss_hdemo_sk#947,ss_addr_sk#948,ss_store_sk#949,ss_promo_sk#950,ss_ticket_number#951L,ss_quantity#952,ss_wholesale_cost#953,ss_list_price#954,ss_sales_price#955,ss_ext_discount_amt#956,ss_ext_sales_price#957,ss_ext_wholesale_cost#958,ss_ext_list_price#959,ss_ext_tax#960,ss_coupon_amt#961,ss_net_paid#962,ss_net_paid_inc_tax#963,ss_net_profit#964,ss_sold_date_sk#965] parquet\n      :     :     +- Project [t_time_sk#971]\n      :     :        +- Filter (((isnotnull(t_hour#974) AND isnotnull(t_minute#975)) AND ((t_hour#974 = 11) AND (t_minute#975 >= 30))) AND isnotnull(t_time_sk#971))\n      :     :           +- Relation spark_catalog.tpcds_100.time_dim[t_time_sk#971,t_time_id#972,t_time#973,t_hour#974,t_minute#975,t_second#976,t_am_pm#977,t_shift#978,t_sub_shift#979,t_meal_time#980] parquet\n      :     +- Project [hd_demo_sk#966]\n      :        +- Filter (((((hd_dep_count#969 = 3) AND (hd_vehicle_count#970 <= 5)) OR ((hd_dep_count#969 = 0) AND (hd_vehicle_count#970 <= 2))) OR ((hd_dep_count#969 = 1) AND (hd_vehicle_count#970 <= 3))) AND isnotnull(hd_demo_sk#966))\n      :           +- Relation spark_catalog.tpcds_100.household_demographics[hd_demo_sk#966,hd_income_band_sk#967,hd_buy_potential#968,hd_dep_count#969,hd_vehicle_count#970] parquet\n      +- Project [s_store_sk#981]\n         +- Filter ((isnotnull(s_store_name#986) AND (s_store_name#986 = ese)) AND isnotnull(s_store_sk#981))\n            +- Relation spark_catalog.tpcds_100.store[s_store_sk#981,s_store_id#982,s_rec_start_date#983,s_rec_end_date#984,s_closed_date_sk#985,s_store_name#986,s_number_employees#987,s_floor_space#988,s_hours#989,s_manager#990,s_market_id#991,s_geography_class#992,s_market_desc#993,s_market_manager#994,s_division_id#995,s_division_name#996,s_company_id#997,s_company_name#998,s_street_number#999,s_street_name#1000,s_street_type#1001,s_suite_number#1002,s_city#1003,s_county#1004,... 5 more fields] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "12" : {
            "sign" : -694034301,
            "className" : "org.apache.spark.sql.execution.adaptive.BroadcastQueryStageExec",
            "sizeInBytes" : 1051712,
            "rowCount" : 47,
            "isRuntime" : true,
            "predicate" : " (unknown) BroadcastQueryStage Output [1]: [s_store_sk#981] Arguments: 32 "
          },
          "8" : {
            "sign" : 1277875831,
            "className" : "org.apache.spark.sql.execution.FilterExec",
            "sizeInBytes" : 5017105940,
            "rowCount" : 250855297,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Input [4]: [ss_sold_time_sk#943, ss_hdemo_sk#947, ss_store_sk#949, ss_sold_date_sk#965] Condition : ((isnotnull(ss_hdemo_sk#947) AND isnotnull(ss_sold_time_sk#943)) AND isnotnull(ss_store_sk#949)) "
          },
          "4" : {
            "sign" : -2049444260,
            "className" : "org.apache.spark.sql.execution.joins.BroadcastHashJoinExec",
            "sizeInBytes" : 5432612500,
            "rowCount" : 271630625,
            "isRuntime" : false,
            "predicate" : " (unknown) BroadcastHashJoin Left keys [1]: [ss_hdemo_sk#947] Right keys [1]: [hd_demo_sk#966] Join type: Inner Join condition: None "
          },
          "11" : {
            "sign" : 266272912,
            "className" : "org.apache.spark.sql.execution.adaptive.BroadcastQueryStageExec",
            "sizeInBytes" : 1106176,
            "rowCount" : 1800,
            "isRuntime" : true,
            "predicate" : " (unknown) BroadcastQueryStage Output [1]: [hd_demo_sk#966] Arguments: 30 "
          },
          "9" : {
            "sign" : 652147089,
            "className" : "org.apache.spark.sql.execution.FileSourceScanExec",
            "sizeInBytes" : 5017105940,
            "rowCount" : 250855297,
            "isRuntime" : false,
            "predicate" : " (unknown) Scan parquet spark_catalog.tpcds_100.store_sales Output [4]: [ss_sold_time_sk#943, ss_hdemo_sk#947, ss_store_sk#949, ss_sold_date_sk#965] Batched: true Location: CatalogFileIndex [hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/store_sales] PushedFilters: [IsNotNull(ss_hdemo_sk), IsNotNull(ss_sold_time_sk), IsNotNull(ss_store_sk)] ReadSchema: struct<ss_sold_time_sk:int,ss_hdemo_sk:int,ss_store_sk:int> "
          },
          "5" : {
            "sign" : -592663674,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 4332576176,
            "rowCount" : 270786011,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [2]: [ss_hdemo_sk#947, ss_store_sk#949] Input [4]: [ss_sold_time_sk#943, ss_hdemo_sk#947, ss_store_sk#949, t_time_sk#971] "
          },
          "10" : {
            "sign" : -1093628497,
            "className" : "org.apache.spark.sql.execution.adaptive.BroadcastQueryStageExec",
            "sizeInBytes" : 1062976,
            "rowCount" : 1800,
            "isRuntime" : true,
            "predicate" : " (unknown) BroadcastQueryStage Output [1]: [t_time_sk#971] Arguments: 28 "
          },
          "6" : {
            "sign" : 1516584869,
            "className" : "org.apache.spark.sql.execution.joins.BroadcastHashJoinExec",
            "sizeInBytes" : 6498864264,
            "rowCount" : 270786011,
            "isRuntime" : false,
            "predicate" : " (unknown) BroadcastHashJoin Left keys [1]: [ss_sold_time_sk#943] Right keys [1]: [t_time_sk#971] Join type: Inner Join condition: None "
          },
          "1" : {
            "sign" : -1365943169,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 4622824312,
            "rowCount" : 577853039,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output: [] Input [2]: [ss_store_sk#949, s_store_sk#981] "
          },
          "0" : {
            "sign" : -1785220999,
            "className" : "org.apache.spark.sql.execution.aggregate.HashAggregateExec",
            "sizeInBytes" : 16,
            "rowCount" : 1,
            "isRuntime" : false,
            "predicate" : " (unknown) HashAggregate Input: [] Keys: [] Functions [1]: [partial_count(1)] Aggregate Attributes [1]: [count#1125L] Results [1]: [count#1126L] "
          },
          "2" : {
            "sign" : 442240236,
            "className" : "org.apache.spark.sql.execution.joins.BroadcastHashJoinExec",
            "sizeInBytes" : 9245648624,
            "rowCount" : 577853039,
            "isRuntime" : false,
            "predicate" : " (unknown) BroadcastHashJoin Left keys [1]: [ss_store_sk#949] Right keys [1]: [s_store_sk#981] Join type: Inner Join condition: None "
          },
          "7" : {
            "sign" : 776653609,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 5017105940,
            "rowCount" : 250855297,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [3]: [ss_sold_time_sk#943, ss_hdemo_sk#947, ss_store_sk#949] Input [4]: [ss_sold_time_sk#943, ss_hdemo_sk#947, ss_store_sk#949, ss_sold_date_sk#965] "
          },
          "3" : {
            "sign" : 783480773,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 3259567500,
            "rowCount" : 271630625,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [1]: [ss_store_sk#949] Input [3]: [ss_hdemo_sk#947, ss_store_sk#949, hd_demo_sk#966] "
          }
        },
        "links" : [ {
          "fromId" : 9,
          "fromName" : "Scan parquet spark_catalog.tpcds_100.store_sales",
          "toId" : 8,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "Filter",
          "toId" : 7,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Project",
          "toId" : 6,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "BroadcastQueryStage",
          "toId" : 6,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "BroadcastHashJoin",
          "toId" : 5,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Project",
          "toId" : 4,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "BroadcastQueryStage",
          "toId" : 4,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "BroadcastHashJoin",
          "toId" : 3,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Project",
          "toId" : 2,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 12,
          "fromName" : "BroadcastQueryStage",
          "toId" : 2,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "BroadcastHashJoin",
          "toId" : 1,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Project",
          "toId" : 0,
          "toName" : "HashAggregate",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "HashAggregate(keys=[], functions=[partial_count(1)], output=[count#1126L])\n+- Project\n   +- BroadcastHashJoin [ss_store_sk#949], [s_store_sk#981], Inner, BuildRight, false\n      :- Project [ss_store_sk#949]\n      :  +- BroadcastHashJoin [ss_hdemo_sk#947], [hd_demo_sk#966], Inner, BuildRight, false\n      :     :- Project [ss_hdemo_sk#947, ss_store_sk#949]\n      :     :  +- BroadcastHashJoin [ss_sold_time_sk#943], [t_time_sk#971], Inner, BuildRight, false\n      :     :     :- Project [ss_sold_time_sk#943, ss_hdemo_sk#947, ss_store_sk#949]\n      :     :     :  +- Filter ((isnotnull(ss_hdemo_sk#947) AND isnotnull(ss_sold_time_sk#943)) AND isnotnull(ss_store_sk#949))\n      :     :     :     +- FileScan parquet spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#943,ss_hdemo_sk#947,ss_store_sk#949,ss_sold_date_sk#965] Batched: true, DataFilters: [isnotnull(ss_hdemo_sk#947), isnotnull(ss_sold_time_sk#943), isnotnull(ss_store_sk#949)], Format: Parquet, Location: CatalogFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/store_sales], PartitionFilters: [], PushedFilters: [IsNotNull(ss_hdemo_sk), IsNotNull(ss_sold_time_sk), IsNotNull(ss_store_sk)], ReadSchema: struct<ss_sold_time_sk:int,ss_hdemo_sk:int,ss_store_sk:int>\n      :     :     +- BroadcastQueryStage 28\n      :     :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=1388]\n      :     :           +- *(19) Project [t_time_sk#971]\n      :     :              +- *(19) Filter ((((isnotnull(t_hour#974) AND isnotnull(t_minute#975)) AND (t_hour#974 = 11)) AND (t_minute#975 >= 30)) AND isnotnull(t_time_sk#971))\n      :     :                 +- *(19) ColumnarToRow\n      :     :                    +- FileScan parquet spark_catalog.tpcds_100.time_dim[t_time_sk#971,t_hour#974,t_minute#975] Batched: true, DataFilters: [isnotnull(t_hour#974), isnotnull(t_minute#975), (t_hour#974 = 11), (t_minute#975 >= 30), isnotnu..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/time_dim], PartitionFilters: [], PushedFilters: [IsNotNull(t_hour), IsNotNull(t_minute), EqualTo(t_hour,11), GreaterThanOrEqual(t_minute,30), IsN..., ReadSchema: struct<t_time_sk:int,t_hour:int,t_minute:int>\n      :     +- BroadcastQueryStage 30\n      :        +- ReusedExchange [hd_demo_sk#966], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=743]\n      +- BroadcastQueryStage 32\n         +- ReusedExchange [s_store_sk#981], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=764]\n"
      },
      "IM" : {
        "inputSizeInBytes" : 5020326804,
        "inputRowCount" : 250858944
      },
      "InitialPartitionNum" : 0,
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 2,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 13,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 14 ],
      "Objectives" : {
        "DurationInMs" : 16195,
        "TotalTasksDurationInMs" : 48622,
        "IOBytes" : {
          "Total" : 480112746,
          "Details" : {
            "IR" : 480103249,
            "IW" : 0,
            "SR" : 0,
            "SW" : 9497
          }
        }
      }
    },
    "24" : {
      "QSLogical" : {
        "operators" : {
          "0" : {
            "sign" : 465392224,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 2576,
                "rowCount" : 161
              },
              "compileTime" : {
                "sizeInBytes" : 16,
                "rowCount" : 1
              }
            },
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [count(1) AS h11_to_11_30#597L], HashAggregate(keys=[], functions=[count(1)]) "
          }
        },
        "links" : [ ],
        "rawPlan" : "LogicalQueryStage Aggregate [count(1) AS h11_to_11_30#597L], HashAggregate(keys=[], functions=[count(1)])\n"
      },
      "QSPhysical" : {
        "operators" : {
          "0" : {
            "sign" : 1036706769,
            "className" : "org.apache.spark.sql.execution.aggregate.HashAggregateExec",
            "sizeInBytes" : 2576,
            "rowCount" : 161,
            "isRuntime" : true,
            "predicate" : " (unknown) HashAggregate Input [1]: [count#1124L] Keys: [] Functions [1]: [count(1)] Aggregate Attributes [1]: [count(1)#605L] Results [1]: [count(1)#605L AS h11_to_11_30#597L] "
          },
          "1" : {
            "sign" : -1398514080,
            "className" : "org.apache.spark.sql.execution.adaptive.ShuffleQueryStageExec",
            "sizeInBytes" : 16,
            "rowCount" : 1,
            "isRuntime" : false,
            "predicate" : " (unknown) ShuffleQueryStage Output [1]: [count#1124L] Arguments: 45 "
          }
        },
        "links" : [ {
          "fromId" : 1,
          "fromName" : "ShuffleQueryStage",
          "toId" : 0,
          "toName" : "HashAggregate",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "HashAggregate(keys=[], functions=[count(1)], output=[h11_to_11_30#597L])\n+- ShuffleQueryStage 45\n   +- Exchange SinglePartition, ENSURE_REQUIREMENTS, [plan_id=2936]\n      +- *(32) HashAggregate(keys=[], functions=[partial_count(1)], output=[count#1124L])\n         +- *(32) Project\n            +- *(32) BroadcastHashJoin [ss_store_sk#882], [s_store_sk#914], Inner, BuildRight, false\n               :- *(32) Project [ss_store_sk#882]\n               :  +- *(32) BroadcastHashJoin [ss_hdemo_sk#880], [hd_demo_sk#899], Inner, BuildRight, false\n               :     :- *(32) Project [ss_hdemo_sk#880, ss_store_sk#882]\n               :     :  +- *(32) BroadcastHashJoin [ss_sold_time_sk#876], [t_time_sk#904], Inner, BuildRight, false\n               :     :     :- *(32) Project [ss_sold_time_sk#876, ss_hdemo_sk#880, ss_store_sk#882]\n               :     :     :  +- *(32) Filter ((isnotnull(ss_hdemo_sk#880) AND isnotnull(ss_sold_time_sk#876)) AND isnotnull(ss_store_sk#882))\n               :     :     :     +- *(32) ColumnarToRow\n               :     :     :        +- FileScan parquet spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#876,ss_hdemo_sk#880,ss_store_sk#882,ss_sold_date_sk#898] Batched: true, DataFilters: [isnotnull(ss_hdemo_sk#880), isnotnull(ss_sold_time_sk#876), isnotnull(ss_store_sk#882)], Format: Parquet, Location: CatalogFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/store_sales], PartitionFilters: [], PushedFilters: [IsNotNull(ss_hdemo_sk), IsNotNull(ss_sold_time_sk), IsNotNull(ss_store_sk)], ReadSchema: struct<ss_sold_time_sk:int,ss_hdemo_sk:int,ss_store_sk:int>\n               :     :     +- BroadcastQueryStage 23\n               :     :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=1276]\n               :     :           +- *(16) Project [t_time_sk#904]\n               :     :              +- *(16) Filter ((((isnotnull(t_hour#907) AND isnotnull(t_minute#908)) AND (t_hour#907 = 11)) AND (t_minute#908 < 30)) AND isnotnull(t_time_sk#904))\n               :     :                 +- *(16) ColumnarToRow\n               :     :                    +- FileScan parquet spark_catalog.tpcds_100.time_dim[t_time_sk#904,t_hour#907,t_minute#908] Batched: true, DataFilters: [isnotnull(t_hour#907), isnotnull(t_minute#908), (t_hour#907 = 11), (t_minute#908 < 30), isnotnul..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/time_dim], PartitionFilters: [], PushedFilters: [IsNotNull(t_hour), IsNotNull(t_minute), EqualTo(t_hour,11), LessThan(t_minute,30), IsNotNull(t_t..., ReadSchema: struct<t_time_sk:int,t_hour:int,t_minute:int>\n               :     +- BroadcastQueryStage 25\n               :        +- ReusedExchange [hd_demo_sk#899], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=743]\n               +- BroadcastQueryStage 27\n                  +- ReusedExchange [s_store_sk#914], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=764]\n"
      },
      "IM" : {
        "inputSizeInBytes" : 2576,
        "inputRowCount" : 161
      },
      "InitialPartitionNum" : 1,
      "PD" : {
        "7" : [ 9660 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 24,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 32 ],
      "Objectives" : {
        "DurationInMs" : 166,
        "TotalTasksDurationInMs" : 160,
        "IOBytes" : {
          "Total" : 9499,
          "Details" : {
            "IR" : 0,
            "IW" : 0,
            "SR" : 9499,
            "SW" : 0
          }
        }
      }
    },
    "16" : {
      "QSLogical" : {
        "operators" : {
          "8" : {
            "sign" : 1491510529,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 38130005144,
                "rowCount" : 250855297
              },
              "compileTime" : {
                "sizeInBytes" : 38130005144,
                "rowCount" : 250855297
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(ss_hdemo_sk#746) AND (isnotnull(ss_sold_time_sk#742) AND isnotnull(ss_store_sk#748))) "
          },
          "4" : {
            "sign" : -1749465680,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 5432612500,
                "rowCount" : 271630625
              },
              "compileTime" : {
                "sizeInBytes" : 5432612500,
                "rowCount" : 271630625
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_hdemo_sk#746 = hd_demo_sk#765) "
          },
          "9" : {
            "sign" : 1437773120,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 43776970976,
                "rowCount" : 288006388
              },
              "compileTime" : {
                "sizeInBytes" : 43776970976,
                "rowCount" : 288006388
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#742, ss_item_sk#743, ss_customer_sk#744, ss_cdemo_sk#745, ss_hdemo_sk#746, ss_addr_sk#747, ss_store_sk#748, ss_promo_sk#749, ss_ticket_number#750L, ss_quantity#751, ss_wholesale_cost#752, ss_list_price#753, ss_sales_price#754, ss_ext_discount_amt#755, ss_ext_sales_price#756, ss_ext_wholesale_cost#757, ss_ext_list_price#758, ss_ext_tax#759, ss_coupon_amt#760, ss_net_paid#761, ss_net_paid_inc_tax#762, ss_net_profit#763, ss_sold_date_sk#764], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "5" : {
            "sign" : 1068194221,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 4332576176,
                "rowCount" : 270786011
              },
              "compileTime" : {
                "sizeInBytes" : 4332576176,
                "rowCount" : 270786011
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_hdemo_sk#746, ss_store_sk#748] "
          },
          "6" : {
            "sign" : 617279698,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 6498864264,
                "rowCount" : 270786011
              },
              "compileTime" : {
                "sizeInBytes" : 6498864264,
                "rowCount" : 270786011
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_time_sk#742 = t_time_sk#770) "
          },
          "1" : {
            "sign" : 846154513,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 4622824312,
                "rowCount" : 577853039
              },
              "compileTime" : {
                "sizeInBytes" : 4622824312,
                "rowCount" : 577853039
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project "
          },
          "0" : {
            "sign" : -73625084,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 16,
                "rowCount" : 1
              },
              "compileTime" : {
                "sizeInBytes" : 16,
                "rowCount" : 1
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [count(1) AS h10_to_10_30#595L] "
          },
          "2" : {
            "sign" : 1535448120,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 9245648624,
                "rowCount" : 577853039
              },
              "compileTime" : {
                "sizeInBytes" : 9245648624,
                "rowCount" : 577853039
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_store_sk#748 = s_store_sk#780) "
          },
          "7" : {
            "sign" : -987700956,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 5017105940,
                "rowCount" : 250855297
              },
              "compileTime" : {
                "sizeInBytes" : 5017105940,
                "rowCount" : 250855297
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_sold_time_sk#742, ss_hdemo_sk#746, ss_store_sk#748] "
          },
          "3" : {
            "sign" : -181870364,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 3259567500,
                "rowCount" : 271630625
              },
              "compileTime" : {
                "sizeInBytes" : 3259567500,
                "rowCount" : 271630625
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_store_sk#748] "
          }
        },
        "links" : [ {
          "fromId" : 9,
          "fromName" : "LogicalRelation",
          "toId" : 8,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "Filter",
          "toId" : 7,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Project",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Join",
          "toId" : 5,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Project",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Join",
          "toId" : 3,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Project",
          "toId" : 2,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Join",
          "toId" : 1,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Project",
          "toId" : 0,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Aggregate [count(1) AS h10_to_10_30#595L]\n+- Project\n   +- Join Inner, (ss_store_sk#748 = s_store_sk#780)\n      :- Project [ss_store_sk#748]\n      :  +- Join Inner, (ss_hdemo_sk#746 = hd_demo_sk#765)\n      :     :- Project [ss_hdemo_sk#746, ss_store_sk#748]\n      :     :  +- Join Inner, (ss_sold_time_sk#742 = t_time_sk#770)\n      :     :     :- Project [ss_sold_time_sk#742, ss_hdemo_sk#746, ss_store_sk#748]\n      :     :     :  +- Filter (isnotnull(ss_hdemo_sk#746) AND (isnotnull(ss_sold_time_sk#742) AND isnotnull(ss_store_sk#748)))\n      :     :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#742,ss_item_sk#743,ss_customer_sk#744,ss_cdemo_sk#745,ss_hdemo_sk#746,ss_addr_sk#747,ss_store_sk#748,ss_promo_sk#749,ss_ticket_number#750L,ss_quantity#751,ss_wholesale_cost#752,ss_list_price#753,ss_sales_price#754,ss_ext_discount_amt#755,ss_ext_sales_price#756,ss_ext_wholesale_cost#757,ss_ext_list_price#758,ss_ext_tax#759,ss_coupon_amt#760,ss_net_paid#761,ss_net_paid_inc_tax#762,ss_net_profit#763,ss_sold_date_sk#764] parquet\n      :     :     +- Project [t_time_sk#770]\n      :     :        +- Filter (((isnotnull(t_hour#773) AND isnotnull(t_minute#774)) AND ((t_hour#773 = 10) AND (t_minute#774 < 30))) AND isnotnull(t_time_sk#770))\n      :     :           +- Relation spark_catalog.tpcds_100.time_dim[t_time_sk#770,t_time_id#771,t_time#772,t_hour#773,t_minute#774,t_second#775,t_am_pm#776,t_shift#777,t_sub_shift#778,t_meal_time#779] parquet\n      :     +- Project [hd_demo_sk#765]\n      :        +- Filter (((((hd_dep_count#768 = 3) AND (hd_vehicle_count#769 <= 5)) OR ((hd_dep_count#768 = 0) AND (hd_vehicle_count#769 <= 2))) OR ((hd_dep_count#768 = 1) AND (hd_vehicle_count#769 <= 3))) AND isnotnull(hd_demo_sk#765))\n      :           +- Relation spark_catalog.tpcds_100.household_demographics[hd_demo_sk#765,hd_income_band_sk#766,hd_buy_potential#767,hd_dep_count#768,hd_vehicle_count#769] parquet\n      +- Project [s_store_sk#780]\n         +- Filter ((isnotnull(s_store_name#785) AND (s_store_name#785 = ese)) AND isnotnull(s_store_sk#780))\n            +- Relation spark_catalog.tpcds_100.store[s_store_sk#780,s_store_id#781,s_rec_start_date#782,s_rec_end_date#783,s_closed_date_sk#784,s_store_name#785,s_number_employees#786,s_floor_space#787,s_hours#788,s_manager#789,s_market_id#790,s_geography_class#791,s_market_desc#792,s_market_manager#793,s_division_id#794,s_division_name#795,s_company_id#796,s_company_name#797,s_street_number#798,s_street_name#799,s_street_type#800,s_suite_number#801,s_city#802,s_county#803,... 5 more fields] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "12" : {
            "sign" : -262331777,
            "className" : "org.apache.spark.sql.execution.adaptive.BroadcastQueryStageExec",
            "sizeInBytes" : 1051712,
            "rowCount" : 47,
            "isRuntime" : true,
            "predicate" : " (unknown) BroadcastQueryStage Output [1]: [s_store_sk#780] Arguments: 17 "
          },
          "8" : {
            "sign" : -1947677969,
            "className" : "org.apache.spark.sql.execution.FilterExec",
            "sizeInBytes" : 5017105940,
            "rowCount" : 250855297,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Input [4]: [ss_sold_time_sk#742, ss_hdemo_sk#746, ss_store_sk#748, ss_sold_date_sk#764] Condition : ((isnotnull(ss_hdemo_sk#746) AND isnotnull(ss_sold_time_sk#742)) AND isnotnull(ss_store_sk#748)) "
          },
          "4" : {
            "sign" : -896730753,
            "className" : "org.apache.spark.sql.execution.joins.BroadcastHashJoinExec",
            "sizeInBytes" : 5432612500,
            "rowCount" : 271630625,
            "isRuntime" : false,
            "predicate" : " (unknown) BroadcastHashJoin Left keys [1]: [ss_hdemo_sk#746] Right keys [1]: [hd_demo_sk#765] Join type: Inner Join condition: None "
          },
          "11" : {
            "sign" : 697975436,
            "className" : "org.apache.spark.sql.execution.adaptive.BroadcastQueryStageExec",
            "sizeInBytes" : 1106176,
            "rowCount" : 1800,
            "isRuntime" : true,
            "predicate" : " (unknown) BroadcastQueryStage Output [1]: [hd_demo_sk#765] Arguments: 15 "
          },
          "9" : {
            "sign" : -1415361210,
            "className" : "org.apache.spark.sql.execution.FileSourceScanExec",
            "sizeInBytes" : 5017105940,
            "rowCount" : 250855297,
            "isRuntime" : false,
            "predicate" : " (unknown) Scan parquet spark_catalog.tpcds_100.store_sales Output [4]: [ss_sold_time_sk#742, ss_hdemo_sk#746, ss_store_sk#748, ss_sold_date_sk#764] Batched: true Location: CatalogFileIndex [hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/store_sales] PushedFilters: [IsNotNull(ss_hdemo_sk), IsNotNull(ss_sold_time_sk), IsNotNull(ss_store_sk)] ReadSchema: struct<ss_sold_time_sk:int,ss_hdemo_sk:int,ss_store_sk:int> "
          },
          "5" : {
            "sign" : 1325619395,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 4332576176,
            "rowCount" : 270786011,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [2]: [ss_hdemo_sk#746, ss_store_sk#748] Input [4]: [ss_sold_time_sk#742, ss_hdemo_sk#746, ss_store_sk#748, t_time_sk#770] "
          },
          "10" : {
            "sign" : -1061368439,
            "className" : "org.apache.spark.sql.execution.adaptive.BroadcastQueryStageExec",
            "sizeInBytes" : 1062976,
            "rowCount" : 1800,
            "isRuntime" : true,
            "predicate" : " (unknown) BroadcastQueryStage Output [1]: [t_time_sk#770] Arguments: 13 "
          },
          "6" : {
            "sign" : -2037007920,
            "className" : "org.apache.spark.sql.execution.joins.BroadcastHashJoinExec",
            "sizeInBytes" : 6498864264,
            "rowCount" : 270786011,
            "isRuntime" : false,
            "predicate" : " (unknown) BroadcastHashJoin Left keys [1]: [ss_sold_time_sk#742] Right keys [1]: [t_time_sk#770] Join type: Inner Join condition: None "
          },
          "1" : {
            "sign" : 696943875,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 4622824312,
            "rowCount" : 577853039,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output: [] Input [2]: [ss_store_sk#748, s_store_sk#780] "
          },
          "0" : {
            "sign" : -1325151957,
            "className" : "org.apache.spark.sql.execution.aggregate.HashAggregateExec",
            "sizeInBytes" : 16,
            "rowCount" : 1,
            "isRuntime" : false,
            "predicate" : " (unknown) HashAggregate Input: [] Keys: [] Functions [1]: [partial_count(1)] Aggregate Attributes [1]: [count#1119L] Results [1]: [count#1120L] "
          },
          "2" : {
            "sign" : 569573650,
            "className" : "org.apache.spark.sql.execution.joins.BroadcastHashJoinExec",
            "sizeInBytes" : 9245648624,
            "rowCount" : 577853039,
            "isRuntime" : false,
            "predicate" : " (unknown) BroadcastHashJoin Left keys [1]: [ss_store_sk#748] Right keys [1]: [s_store_sk#780] Join type: Inner Join condition: None "
          },
          "7" : {
            "sign" : -1632166184,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 5017105940,
            "rowCount" : 250855297,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [3]: [ss_sold_time_sk#742, ss_hdemo_sk#746, ss_store_sk#748] Input [4]: [ss_sold_time_sk#742, ss_hdemo_sk#746, ss_store_sk#748, ss_sold_date_sk#764] "
          },
          "3" : {
            "sign" : -529860739,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 3259567500,
            "rowCount" : 271630625,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [1]: [ss_store_sk#748] Input [3]: [ss_hdemo_sk#746, ss_store_sk#748, hd_demo_sk#765] "
          }
        },
        "links" : [ {
          "fromId" : 9,
          "fromName" : "Scan parquet spark_catalog.tpcds_100.store_sales",
          "toId" : 8,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "Filter",
          "toId" : 7,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Project",
          "toId" : 6,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "BroadcastQueryStage",
          "toId" : 6,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "BroadcastHashJoin",
          "toId" : 5,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Project",
          "toId" : 4,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "BroadcastQueryStage",
          "toId" : 4,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "BroadcastHashJoin",
          "toId" : 3,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Project",
          "toId" : 2,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 12,
          "fromName" : "BroadcastQueryStage",
          "toId" : 2,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "BroadcastHashJoin",
          "toId" : 1,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Project",
          "toId" : 0,
          "toName" : "HashAggregate",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "HashAggregate(keys=[], functions=[partial_count(1)], output=[count#1120L])\n+- Project\n   +- BroadcastHashJoin [ss_store_sk#748], [s_store_sk#780], Inner, BuildRight, false\n      :- Project [ss_store_sk#748]\n      :  +- BroadcastHashJoin [ss_hdemo_sk#746], [hd_demo_sk#765], Inner, BuildRight, false\n      :     :- Project [ss_hdemo_sk#746, ss_store_sk#748]\n      :     :  +- BroadcastHashJoin [ss_sold_time_sk#742], [t_time_sk#770], Inner, BuildRight, false\n      :     :     :- Project [ss_sold_time_sk#742, ss_hdemo_sk#746, ss_store_sk#748]\n      :     :     :  +- Filter ((isnotnull(ss_hdemo_sk#746) AND isnotnull(ss_sold_time_sk#742)) AND isnotnull(ss_store_sk#748))\n      :     :     :     +- FileScan parquet spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#742,ss_hdemo_sk#746,ss_store_sk#748,ss_sold_date_sk#764] Batched: true, DataFilters: [isnotnull(ss_hdemo_sk#746), isnotnull(ss_sold_time_sk#742), isnotnull(ss_store_sk#748)], Format: Parquet, Location: CatalogFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/store_sales], PartitionFilters: [], PushedFilters: [IsNotNull(ss_hdemo_sk), IsNotNull(ss_sold_time_sk), IsNotNull(ss_store_sk)], ReadSchema: struct<ss_sold_time_sk:int,ss_hdemo_sk:int,ss_store_sk:int>\n      :     :     +- BroadcastQueryStage 13\n      :     :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=1052]\n      :     :           +- *(10) Project [t_time_sk#770]\n      :     :              +- *(10) Filter ((((isnotnull(t_hour#773) AND isnotnull(t_minute#774)) AND (t_hour#773 = 10)) AND (t_minute#774 < 30)) AND isnotnull(t_time_sk#770))\n      :     :                 +- *(10) ColumnarToRow\n      :     :                    +- FileScan parquet spark_catalog.tpcds_100.time_dim[t_time_sk#770,t_hour#773,t_minute#774] Batched: true, DataFilters: [isnotnull(t_hour#773), isnotnull(t_minute#774), (t_hour#773 = 10), (t_minute#774 < 30), isnotnul..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/time_dim], PartitionFilters: [], PushedFilters: [IsNotNull(t_hour), IsNotNull(t_minute), EqualTo(t_hour,10), LessThan(t_minute,30), IsNotNull(t_t..., ReadSchema: struct<t_time_sk:int,t_hour:int,t_minute:int>\n      :     +- BroadcastQueryStage 15\n      :        +- ReusedExchange [hd_demo_sk#765], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=743]\n      +- BroadcastQueryStage 17\n         +- ReusedExchange [s_store_sk#780], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=764]\n"
      },
      "IM" : {
        "inputSizeInBytes" : 5020326804,
        "inputRowCount" : 250858944
      },
      "InitialPartitionNum" : 0,
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 16,
        "FinishedTasksNum" : 1,
        "FinishedTasksTotalTimeInMs" : 1150.0,
        "FinishedTasksDistributionInMs" : [ 1150.0, 1150.0, 1150.0, 1150.0, 1150.0 ]
      },
      "QueryStageOptimizationId" : 16,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 17 ],
      "Objectives" : {
        "DurationInMs" : 25112,
        "TotalTasksDurationInMs" : 68930,
        "IOBytes" : {
          "Total" : 480112748,
          "Details" : {
            "IR" : 480103249,
            "IW" : 0,
            "SR" : 0,
            "SW" : 9499
          }
        }
      }
    },
    "5" : {
      "QSLogical" : {
        "operators" : {
          "0" : {
            "sign" : 1200724835,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 24696,
                "rowCount" : 2058
              },
              "compileTime" : {
                "sizeInBytes" : 24696,
                "rowCount" : 2058
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [t_time_sk#770] "
          },
          "1" : {
            "sign" : -1134329652,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 259308,
                "rowCount" : 2058
              },
              "compileTime" : {
                "sizeInBytes" : 259308,
                "rowCount" : 2058
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(t_hour#773) AND isnotnull(t_minute#774)) AND ((t_hour#773 = 10) AND (t_minute#774 < 30))) AND isnotnull(t_time_sk#770)) "
          },
          "2" : {
            "sign" : -535725902,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 10886400,
                "rowCount" : 86400
              },
              "compileTime" : {
                "sizeInBytes" : 10886400,
                "rowCount" : 86400
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [t_time_sk#770, t_time_id#771, t_time#772, t_hour#773, t_minute#774, t_second#775, t_am_pm#776, t_shift#777, t_sub_shift#778, t_meal_time#779], `spark_catalog`.`tpcds_100`.`time_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "LogicalRelation",
          "toId" : 1,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Filter",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [t_time_sk#770]\n+- Filter (((isnotnull(t_hour#773) AND isnotnull(t_minute#774)) AND ((t_hour#773 = 10) AND (t_minute#774 < 30))) AND isnotnull(t_time_sk#770))\n   +- Relation spark_catalog.tpcds_100.time_dim[t_time_sk#770,t_time_id#771,t_time#772,t_hour#773,t_minute#774,t_second#775,t_am_pm#776,t_shift#777,t_sub_shift#778,t_meal_time#779] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "0" : {
            "sign" : 1537821846,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 24696,
            "rowCount" : 2058,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [1]: [t_time_sk#770] Input [3]: [t_time_sk#770, t_hour#773, t_minute#774] "
          },
          "1" : {
            "sign" : -519163095,
            "className" : "org.apache.spark.sql.execution.FilterExec",
            "sizeInBytes" : 24696,
            "rowCount" : 2058,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Input [3]: [t_time_sk#770, t_hour#773, t_minute#774] Condition : ((((isnotnull(t_hour#773) AND isnotnull(t_minute#774)) AND (t_hour#773 = 10)) AND (t_minute#774 < 30)) AND isnotnull(t_time_sk#770)) "
          },
          "2" : {
            "sign" : -815051819,
            "className" : "org.apache.spark.sql.execution.FileSourceScanExec",
            "sizeInBytes" : 24696,
            "rowCount" : 2058,
            "isRuntime" : false,
            "predicate" : " (unknown) Scan parquet spark_catalog.tpcds_100.time_dim Output [3]: [t_time_sk#770, t_hour#773, t_minute#774] Batched: true Location: InMemoryFileIndex [hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/time_dim] PushedFilters: [IsNotNull(t_hour), IsNotNull(t_minute), EqualTo(t_hour,10), LessThan(t_minute,30), IsNotNull(t_time_sk)] ReadSchema: struct<t_time_sk:int,t_hour:int,t_minute:int> "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "Scan parquet spark_catalog.tpcds_100.time_dim",
          "toId" : 1,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Filter",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [t_time_sk#770]\n+- Filter ((((isnotnull(t_hour#773) AND isnotnull(t_minute#774)) AND (t_hour#773 = 10)) AND (t_minute#774 < 30)) AND isnotnull(t_time_sk#770))\n   +- FileScan parquet spark_catalog.tpcds_100.time_dim[t_time_sk#770,t_hour#773,t_minute#774] Batched: true, DataFilters: [isnotnull(t_hour#773), isnotnull(t_minute#774), (t_hour#773 = 10), (t_minute#774 < 30), isnotnul..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/time_dim], PartitionFilters: [], PushedFilters: [IsNotNull(t_hour), IsNotNull(t_minute), EqualTo(t_hour,10), LessThan(t_minute,30), IsNotNull(t_t..., ReadSchema: struct<t_time_sk:int,t_hour:int,t_minute:int>\n"
      },
      "IM" : {
        "inputSizeInBytes" : 24696,
        "inputRowCount" : 2058
      },
      "InitialPartitionNum" : 0,
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 5,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 3 ],
      "Objectives" : {
        "DurationInMs" : 3230,
        "TotalTasksDurationInMs" : 3220,
        "IOBytes" : {
          "Total" : 85728,
          "Details" : {
            "IR" : 85728,
            "IW" : 0,
            "SR" : 0,
            "SW" : 0
          }
        }
      }
    },
    "10" : {
      "QSLogical" : {
        "operators" : {
          "8" : {
            "sign" : 1668407866,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 38130005144,
                "rowCount" : 250855297
              },
              "compileTime" : {
                "sizeInBytes" : 38130005144,
                "rowCount" : 250855297
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(ss_hdemo_sk#612) AND (isnotnull(ss_sold_time_sk#608) AND isnotnull(ss_store_sk#614))) "
          },
          "4" : {
            "sign" : -1289726796,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 5432612500,
                "rowCount" : 271630625
              },
              "compileTime" : {
                "sizeInBytes" : 5432612500,
                "rowCount" : 271630625
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_hdemo_sk#612 = hd_demo_sk#631) "
          },
          "9" : {
            "sign" : -1742933008,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 43776970976,
                "rowCount" : 288006388
              },
              "compileTime" : {
                "sizeInBytes" : 43776970976,
                "rowCount" : 288006388
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#608, ss_item_sk#609, ss_customer_sk#610, ss_cdemo_sk#611, ss_hdemo_sk#612, ss_addr_sk#613, ss_store_sk#614, ss_promo_sk#615, ss_ticket_number#616L, ss_quantity#617, ss_wholesale_cost#618, ss_list_price#619, ss_sales_price#620, ss_ext_discount_amt#621, ss_ext_sales_price#622, ss_ext_wholesale_cost#623, ss_ext_list_price#624, ss_ext_tax#625, ss_coupon_amt#626, ss_net_paid#627, ss_net_paid_inc_tax#628, ss_net_profit#629, ss_sold_date_sk#630], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "5" : {
            "sign" : -2056650273,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 4332576176,
                "rowCount" : 270786011
              },
              "compileTime" : {
                "sizeInBytes" : 4332576176,
                "rowCount" : 270786011
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_hdemo_sk#612, ss_store_sk#614] "
          },
          "6" : {
            "sign" : -687206134,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 6498864264,
                "rowCount" : 270786011
              },
              "compileTime" : {
                "sizeInBytes" : 6498864264,
                "rowCount" : 270786011
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_time_sk#608 = t_time_sk#636) "
          },
          "1" : {
            "sign" : 1720727356,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 4622824312,
                "rowCount" : 577853039
              },
              "compileTime" : {
                "sizeInBytes" : 4622824312,
                "rowCount" : 577853039
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project "
          },
          "0" : {
            "sign" : 1801770265,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 16,
                "rowCount" : 1
              },
              "compileTime" : {
                "sizeInBytes" : 16,
                "rowCount" : 1
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [count(1) AS h9_to_9_30#593L] "
          },
          "2" : {
            "sign" : 424315051,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 9245648624,
                "rowCount" : 577853039
              },
              "compileTime" : {
                "sizeInBytes" : 9245648624,
                "rowCount" : 577853039
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_store_sk#614 = s_store_sk#646) "
          },
          "7" : {
            "sign" : -1106374654,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 5017105940,
                "rowCount" : 250855297
              },
              "compileTime" : {
                "sizeInBytes" : 5017105940,
                "rowCount" : 250855297
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_sold_time_sk#608, ss_hdemo_sk#612, ss_store_sk#614] "
          },
          "3" : {
            "sign" : 1021386106,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 3259567500,
                "rowCount" : 271630625
              },
              "compileTime" : {
                "sizeInBytes" : 3259567500,
                "rowCount" : 271630625
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_store_sk#614] "
          }
        },
        "links" : [ {
          "fromId" : 9,
          "fromName" : "LogicalRelation",
          "toId" : 8,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "Filter",
          "toId" : 7,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Project",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Join",
          "toId" : 5,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Project",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Join",
          "toId" : 3,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Project",
          "toId" : 2,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Join",
          "toId" : 1,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Project",
          "toId" : 0,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Aggregate [count(1) AS h9_to_9_30#593L]\n+- Project\n   +- Join Inner, (ss_store_sk#614 = s_store_sk#646)\n      :- Project [ss_store_sk#614]\n      :  +- Join Inner, (ss_hdemo_sk#612 = hd_demo_sk#631)\n      :     :- Project [ss_hdemo_sk#612, ss_store_sk#614]\n      :     :  +- Join Inner, (ss_sold_time_sk#608 = t_time_sk#636)\n      :     :     :- Project [ss_sold_time_sk#608, ss_hdemo_sk#612, ss_store_sk#614]\n      :     :     :  +- Filter (isnotnull(ss_hdemo_sk#612) AND (isnotnull(ss_sold_time_sk#608) AND isnotnull(ss_store_sk#614)))\n      :     :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#608,ss_item_sk#609,ss_customer_sk#610,ss_cdemo_sk#611,ss_hdemo_sk#612,ss_addr_sk#613,ss_store_sk#614,ss_promo_sk#615,ss_ticket_number#616L,ss_quantity#617,ss_wholesale_cost#618,ss_list_price#619,ss_sales_price#620,ss_ext_discount_amt#621,ss_ext_sales_price#622,ss_ext_wholesale_cost#623,ss_ext_list_price#624,ss_ext_tax#625,ss_coupon_amt#626,ss_net_paid#627,ss_net_paid_inc_tax#628,ss_net_profit#629,ss_sold_date_sk#630] parquet\n      :     :     +- Project [t_time_sk#636]\n      :     :        +- Filter (((isnotnull(t_hour#639) AND isnotnull(t_minute#640)) AND ((t_hour#639 = 9) AND (t_minute#640 < 30))) AND isnotnull(t_time_sk#636))\n      :     :           +- Relation spark_catalog.tpcds_100.time_dim[t_time_sk#636,t_time_id#637,t_time#638,t_hour#639,t_minute#640,t_second#641,t_am_pm#642,t_shift#643,t_sub_shift#644,t_meal_time#645] parquet\n      :     +- Project [hd_demo_sk#631]\n      :        +- Filter (((((hd_dep_count#634 = 3) AND (hd_vehicle_count#635 <= 5)) OR ((hd_dep_count#634 = 0) AND (hd_vehicle_count#635 <= 2))) OR ((hd_dep_count#634 = 1) AND (hd_vehicle_count#635 <= 3))) AND isnotnull(hd_demo_sk#631))\n      :           +- Relation spark_catalog.tpcds_100.household_demographics[hd_demo_sk#631,hd_income_band_sk#632,hd_buy_potential#633,hd_dep_count#634,hd_vehicle_count#635] parquet\n      +- Project [s_store_sk#646]\n         +- Filter ((isnotnull(s_store_name#651) AND (s_store_name#651 = ese)) AND isnotnull(s_store_sk#646))\n            +- Relation spark_catalog.tpcds_100.store[s_store_sk#646,s_store_id#647,s_rec_start_date#648,s_rec_end_date#649,s_closed_date_sk#650,s_store_name#651,s_number_employees#652,s_floor_space#653,s_hours#654,s_manager#655,s_market_id#656,s_geography_class#657,s_market_desc#658,s_market_manager#659,s_division_id#660,s_division_name#661,s_company_id#662,s_company_name#663,s_street_number#664,s_street_name#665,s_street_type#666,s_suite_number#667,s_city#668,s_county#669,... 5 more fields] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "12" : {
            "sign" : -1959235881,
            "className" : "org.apache.spark.sql.execution.adaptive.BroadcastQueryStageExec",
            "sizeInBytes" : 1051712,
            "rowCount" : 47,
            "isRuntime" : true,
            "predicate" : " (unknown) BroadcastQueryStage Output [1]: [s_store_sk#646] Arguments: 7 "
          },
          "8" : {
            "sign" : -2090619874,
            "className" : "org.apache.spark.sql.execution.FilterExec",
            "sizeInBytes" : 5017105940,
            "rowCount" : 250855297,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Input [4]: [ss_sold_time_sk#608, ss_hdemo_sk#612, ss_store_sk#614, ss_sold_date_sk#630] Condition : ((isnotnull(ss_hdemo_sk#612) AND isnotnull(ss_sold_time_sk#608)) AND isnotnull(ss_store_sk#614)) "
          },
          "4" : {
            "sign" : 1878124577,
            "className" : "org.apache.spark.sql.execution.joins.BroadcastHashJoinExec",
            "sizeInBytes" : 5432612500,
            "rowCount" : 271630625,
            "isRuntime" : false,
            "predicate" : " (unknown) BroadcastHashJoin Left keys [1]: [ss_hdemo_sk#612] Right keys [1]: [hd_demo_sk#631] Join type: Inner Join condition: None "
          },
          "11" : {
            "sign" : 693524335,
            "className" : "org.apache.spark.sql.execution.adaptive.BroadcastQueryStageExec",
            "sizeInBytes" : 1106176,
            "rowCount" : 1800,
            "isRuntime" : true,
            "predicate" : " (unknown) BroadcastQueryStage Output [1]: [hd_demo_sk#631] Arguments: 5 "
          },
          "9" : {
            "sign" : -277074466,
            "className" : "org.apache.spark.sql.execution.FileSourceScanExec",
            "sizeInBytes" : 5017105940,
            "rowCount" : 250855297,
            "isRuntime" : false,
            "predicate" : " (unknown) Scan parquet spark_catalog.tpcds_100.store_sales Output [4]: [ss_sold_time_sk#608, ss_hdemo_sk#612, ss_store_sk#614, ss_sold_date_sk#630] Batched: true Location: CatalogFileIndex [hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/store_sales] PushedFilters: [IsNotNull(ss_hdemo_sk), IsNotNull(ss_sold_time_sk), IsNotNull(ss_store_sk)] ReadSchema: struct<ss_sold_time_sk:int,ss_hdemo_sk:int,ss_store_sk:int> "
          },
          "5" : {
            "sign" : -673240732,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 4332576176,
            "rowCount" : 270786011,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [2]: [ss_hdemo_sk#612, ss_store_sk#614] Input [4]: [ss_sold_time_sk#608, ss_hdemo_sk#612, ss_store_sk#614, t_time_sk#636] "
          },
          "10" : {
            "sign" : 1823028532,
            "className" : "org.apache.spark.sql.execution.adaptive.BroadcastQueryStageExec",
            "sizeInBytes" : 1062976,
            "rowCount" : 1800,
            "isRuntime" : true,
            "predicate" : " (unknown) BroadcastQueryStage Output [1]: [t_time_sk#636] Arguments: 3 "
          },
          "6" : {
            "sign" : -403340349,
            "className" : "org.apache.spark.sql.execution.joins.BroadcastHashJoinExec",
            "sizeInBytes" : 6498864264,
            "rowCount" : 270786011,
            "isRuntime" : false,
            "predicate" : " (unknown) BroadcastHashJoin Left keys [1]: [ss_sold_time_sk#608] Right keys [1]: [t_time_sk#636] Join type: Inner Join condition: None "
          },
          "1" : {
            "sign" : -1478252778,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 4622824312,
            "rowCount" : 577853039,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output: [] Input [2]: [ss_store_sk#614, s_store_sk#646] "
          },
          "0" : {
            "sign" : 1747579839,
            "className" : "org.apache.spark.sql.execution.aggregate.HashAggregateExec",
            "sizeInBytes" : 16,
            "rowCount" : 1,
            "isRuntime" : false,
            "predicate" : " (unknown) HashAggregate Input: [] Keys: [] Functions [1]: [partial_count(1)] Aggregate Attributes [1]: [count#1115L] Results [1]: [count#1116L] "
          },
          "2" : {
            "sign" : 752630125,
            "className" : "org.apache.spark.sql.execution.joins.BroadcastHashJoinExec",
            "sizeInBytes" : 9245648624,
            "rowCount" : 577853039,
            "isRuntime" : false,
            "predicate" : " (unknown) BroadcastHashJoin Left keys [1]: [ss_store_sk#614] Right keys [1]: [s_store_sk#646] Join type: Inner Join condition: None "
          },
          "7" : {
            "sign" : 18383490,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 5017105940,
            "rowCount" : 250855297,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [3]: [ss_sold_time_sk#608, ss_hdemo_sk#612, ss_store_sk#614] Input [4]: [ss_sold_time_sk#608, ss_hdemo_sk#612, ss_store_sk#614, ss_sold_date_sk#630] "
          },
          "3" : {
            "sign" : 227404585,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 3259567500,
            "rowCount" : 271630625,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [1]: [ss_store_sk#614] Input [3]: [ss_hdemo_sk#612, ss_store_sk#614, hd_demo_sk#631] "
          }
        },
        "links" : [ {
          "fromId" : 9,
          "fromName" : "Scan parquet spark_catalog.tpcds_100.store_sales",
          "toId" : 8,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "Filter",
          "toId" : 7,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Project",
          "toId" : 6,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "BroadcastQueryStage",
          "toId" : 6,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "BroadcastHashJoin",
          "toId" : 5,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Project",
          "toId" : 4,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "BroadcastQueryStage",
          "toId" : 4,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "BroadcastHashJoin",
          "toId" : 3,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Project",
          "toId" : 2,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 12,
          "fromName" : "BroadcastQueryStage",
          "toId" : 2,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "BroadcastHashJoin",
          "toId" : 1,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Project",
          "toId" : 0,
          "toName" : "HashAggregate",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "HashAggregate(keys=[], functions=[partial_count(1)], output=[count#1116L])\n+- Project\n   +- BroadcastHashJoin [ss_store_sk#614], [s_store_sk#646], Inner, BuildRight, false\n      :- Project [ss_store_sk#614]\n      :  +- BroadcastHashJoin [ss_hdemo_sk#612], [hd_demo_sk#631], Inner, BuildRight, false\n      :     :- Project [ss_hdemo_sk#612, ss_store_sk#614]\n      :     :  +- BroadcastHashJoin [ss_sold_time_sk#608], [t_time_sk#636], Inner, BuildRight, false\n      :     :     :- Project [ss_sold_time_sk#608, ss_hdemo_sk#612, ss_store_sk#614]\n      :     :     :  +- Filter ((isnotnull(ss_hdemo_sk#612) AND isnotnull(ss_sold_time_sk#608)) AND isnotnull(ss_store_sk#614))\n      :     :     :     +- FileScan parquet spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#608,ss_hdemo_sk#612,ss_store_sk#614,ss_sold_date_sk#630] Batched: true, DataFilters: [isnotnull(ss_hdemo_sk#612), isnotnull(ss_sold_time_sk#608), isnotnull(ss_store_sk#614)], Format: Parquet, Location: CatalogFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/store_sales], PartitionFilters: [], PushedFilters: [IsNotNull(ss_hdemo_sk), IsNotNull(ss_sold_time_sk), IsNotNull(ss_store_sk)], ReadSchema: struct<ss_sold_time_sk:int,ss_hdemo_sk:int,ss_store_sk:int>\n      :     :     +- BroadcastQueryStage 3\n      :     :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=828]\n      :     :           +- *(4) Project [t_time_sk#636]\n      :     :              +- *(4) Filter ((((isnotnull(t_hour#639) AND isnotnull(t_minute#640)) AND (t_hour#639 = 9)) AND (t_minute#640 < 30)) AND isnotnull(t_time_sk#636))\n      :     :                 +- *(4) ColumnarToRow\n      :     :                    +- FileScan parquet spark_catalog.tpcds_100.time_dim[t_time_sk#636,t_hour#639,t_minute#640] Batched: true, DataFilters: [isnotnull(t_hour#639), isnotnull(t_minute#640), (t_hour#639 = 9), (t_minute#640 < 30), isnotnull..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/time_dim], PartitionFilters: [], PushedFilters: [IsNotNull(t_hour), IsNotNull(t_minute), EqualTo(t_hour,9), LessThan(t_minute,30), IsNotNull(t_ti..., ReadSchema: struct<t_time_sk:int,t_hour:int,t_minute:int>\n      :     +- BroadcastQueryStage 5\n      :        +- ReusedExchange [hd_demo_sk#631], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=743]\n      +- BroadcastQueryStage 7\n         +- ReusedExchange [s_store_sk#646], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=764]\n"
      },
      "IM" : {
        "inputSizeInBytes" : 5020326804,
        "inputRowCount" : 250858944
      },
      "InitialPartitionNum" : 0,
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 2,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 10,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 11 ],
      "Objectives" : {
        "DurationInMs" : 8771,
        "TotalTasksDurationInMs" : 114150,
        "IOBytes" : {
          "Total" : 480112748,
          "Details" : {
            "IR" : 480103249,
            "IW" : 0,
            "SR" : 0,
            "SW" : 9499
          }
        }
      }
    },
    "21" : {
      "QSLogical" : {
        "operators" : {
          "0" : {
            "sign" : 406072288,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 2576,
                "rowCount" : 161
              },
              "compileTime" : {
                "sizeInBytes" : 16,
                "rowCount" : 1
              }
            },
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [count(1) AS h12_to_12_30#599L], HashAggregate(keys=[], functions=[count(1)]) "
          }
        },
        "links" : [ ],
        "rawPlan" : "LogicalQueryStage Aggregate [count(1) AS h12_to_12_30#599L], HashAggregate(keys=[], functions=[count(1)])\n"
      },
      "QSPhysical" : {
        "operators" : {
          "0" : {
            "sign" : -355949844,
            "className" : "org.apache.spark.sql.execution.aggregate.HashAggregateExec",
            "sizeInBytes" : 2576,
            "rowCount" : 161,
            "isRuntime" : true,
            "predicate" : " (unknown) HashAggregate Input [1]: [count#1128L] Keys: [] Functions [1]: [count(1)] Aggregate Attributes [1]: [count(1)#607L] Results [1]: [count(1)#607L AS h12_to_12_30#599L] "
          },
          "1" : {
            "sign" : -1325792725,
            "className" : "org.apache.spark.sql.execution.adaptive.ShuffleQueryStageExec",
            "sizeInBytes" : 16,
            "rowCount" : 1,
            "isRuntime" : false,
            "predicate" : " (unknown) ShuffleQueryStage Output [1]: [count#1128L] Arguments: 42 "
          }
        },
        "links" : [ {
          "fromId" : 1,
          "fromName" : "ShuffleQueryStage",
          "toId" : 0,
          "toName" : "HashAggregate",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "HashAggregate(keys=[], functions=[count(1)], output=[h12_to_12_30#599L])\n+- ShuffleQueryStage 42\n   +- Exchange SinglePartition, ENSURE_REQUIREMENTS, [plan_id=2602]\n      +- *(29) HashAggregate(keys=[], functions=[partial_count(1)], output=[count#1128L])\n         +- *(29) Project\n            +- *(29) BroadcastHashJoin [ss_store_sk#1016], [s_store_sk#1048], Inner, BuildRight, false\n               :- *(29) Project [ss_store_sk#1016]\n               :  +- *(29) BroadcastHashJoin [ss_hdemo_sk#1014], [hd_demo_sk#1033], Inner, BuildRight, false\n               :     :- *(29) Project [ss_hdemo_sk#1014, ss_store_sk#1016]\n               :     :  +- *(29) BroadcastHashJoin [ss_sold_time_sk#1010], [t_time_sk#1038], Inner, BuildRight, false\n               :     :     :- *(29) Project [ss_sold_time_sk#1010, ss_hdemo_sk#1014, ss_store_sk#1016]\n               :     :     :  +- *(29) Filter ((isnotnull(ss_hdemo_sk#1014) AND isnotnull(ss_sold_time_sk#1010)) AND isnotnull(ss_store_sk#1016))\n               :     :     :     +- *(29) ColumnarToRow\n               :     :     :        +- FileScan parquet spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#1010,ss_hdemo_sk#1014,ss_store_sk#1016,ss_sold_date_sk#1032] Batched: true, DataFilters: [isnotnull(ss_hdemo_sk#1014), isnotnull(ss_sold_time_sk#1010), isnotnull(ss_store_sk#1016)], Format: Parquet, Location: CatalogFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/store_sales], PartitionFilters: [], PushedFilters: [IsNotNull(ss_hdemo_sk), IsNotNull(ss_sold_time_sk), IsNotNull(ss_store_sk)], ReadSchema: struct<ss_sold_time_sk:int,ss_hdemo_sk:int,ss_store_sk:int>\n               :     :     +- BroadcastQueryStage 33\n               :     :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=1500]\n               :     :           +- *(22) Project [t_time_sk#1038]\n               :     :              +- *(22) Filter ((((isnotnull(t_hour#1041) AND isnotnull(t_minute#1042)) AND (t_hour#1041 = 12)) AND (t_minute#1042 < 30)) AND isnotnull(t_time_sk#1038))\n               :     :                 +- *(22) ColumnarToRow\n               :     :                    +- FileScan parquet spark_catalog.tpcds_100.time_dim[t_time_sk#1038,t_hour#1041,t_minute#1042] Batched: true, DataFilters: [isnotnull(t_hour#1041), isnotnull(t_minute#1042), (t_hour#1041 = 12), (t_minute#1042 < 30), isno..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/time_dim], PartitionFilters: [], PushedFilters: [IsNotNull(t_hour), IsNotNull(t_minute), EqualTo(t_hour,12), LessThan(t_minute,30), IsNotNull(t_t..., ReadSchema: struct<t_time_sk:int,t_hour:int,t_minute:int>\n               :     +- BroadcastQueryStage 35\n               :        +- ReusedExchange [hd_demo_sk#1033], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=743]\n               +- BroadcastQueryStage 37\n                  +- ReusedExchange [s_store_sk#1048], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=764]\n"
      },
      "IM" : {
        "inputSizeInBytes" : 2576,
        "inputRowCount" : 161
      },
      "InitialPartitionNum" : 1,
      "PD" : {
        "4" : [ 9660 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 16,
        "FinishedTasksNum" : 9,
        "FinishedTasksTotalTimeInMs" : 2644.0,
        "FinishedTasksDistributionInMs" : [ 242.0, 268.0, 299.0, 310.0, 358.0 ]
      },
      "QueryStageOptimizationId" : 21,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 26 ],
      "Objectives" : {
        "DurationInMs" : 10176,
        "TotalTasksDurationInMs" : 203,
        "IOBytes" : {
          "Total" : 9498,
          "Details" : {
            "IR" : 0,
            "IW" : 0,
            "SR" : 9498,
            "SW" : 0
          }
        }
      }
    },
    "6" : {
      "QSLogical" : {
        "operators" : {
          "0" : {
            "sign" : -137262485,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 24492,
                "rowCount" : 2041
              },
              "compileTime" : {
                "sizeInBytes" : 24492,
                "rowCount" : 2041
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [t_time_sk#837] "
          },
          "1" : {
            "sign" : 1690950604,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 257166,
                "rowCount" : 2041
              },
              "compileTime" : {
                "sizeInBytes" : 257166,
                "rowCount" : 2041
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(t_hour#840) AND isnotnull(t_minute#841)) AND ((t_hour#840 = 10) AND (t_minute#841 >= 30))) AND isnotnull(t_time_sk#837)) "
          },
          "2" : {
            "sign" : 1364706819,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 10886400,
                "rowCount" : 86400
              },
              "compileTime" : {
                "sizeInBytes" : 10886400,
                "rowCount" : 86400
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [t_time_sk#837, t_time_id#838, t_time#839, t_hour#840, t_minute#841, t_second#842, t_am_pm#843, t_shift#844, t_sub_shift#845, t_meal_time#846], `spark_catalog`.`tpcds_100`.`time_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "LogicalRelation",
          "toId" : 1,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Filter",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [t_time_sk#837]\n+- Filter (((isnotnull(t_hour#840) AND isnotnull(t_minute#841)) AND ((t_hour#840 = 10) AND (t_minute#841 >= 30))) AND isnotnull(t_time_sk#837))\n   +- Relation spark_catalog.tpcds_100.time_dim[t_time_sk#837,t_time_id#838,t_time#839,t_hour#840,t_minute#841,t_second#842,t_am_pm#843,t_shift#844,t_sub_shift#845,t_meal_time#846] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "0" : {
            "sign" : -1654286545,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 24492,
            "rowCount" : 2041,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [1]: [t_time_sk#837] Input [3]: [t_time_sk#837, t_hour#840, t_minute#841] "
          },
          "1" : {
            "sign" : 274592230,
            "className" : "org.apache.spark.sql.execution.FilterExec",
            "sizeInBytes" : 24492,
            "rowCount" : 2041,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Input [3]: [t_time_sk#837, t_hour#840, t_minute#841] Condition : ((((isnotnull(t_hour#840) AND isnotnull(t_minute#841)) AND (t_hour#840 = 10)) AND (t_minute#841 >= 30)) AND isnotnull(t_time_sk#837)) "
          },
          "2" : {
            "sign" : -1094963469,
            "className" : "org.apache.spark.sql.execution.FileSourceScanExec",
            "sizeInBytes" : 24492,
            "rowCount" : 2041,
            "isRuntime" : false,
            "predicate" : " (unknown) Scan parquet spark_catalog.tpcds_100.time_dim Output [3]: [t_time_sk#837, t_hour#840, t_minute#841] Batched: true Location: InMemoryFileIndex [hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/time_dim] PushedFilters: [IsNotNull(t_hour), IsNotNull(t_minute), EqualTo(t_hour,10), GreaterThanOrEqual(t_minute,30), IsNotNull(t_time_sk)] ReadSchema: struct<t_time_sk:int,t_hour:int,t_minute:int> "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "Scan parquet spark_catalog.tpcds_100.time_dim",
          "toId" : 1,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Filter",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [t_time_sk#837]\n+- Filter ((((isnotnull(t_hour#840) AND isnotnull(t_minute#841)) AND (t_hour#840 = 10)) AND (t_minute#841 >= 30)) AND isnotnull(t_time_sk#837))\n   +- FileScan parquet spark_catalog.tpcds_100.time_dim[t_time_sk#837,t_hour#840,t_minute#841] Batched: true, DataFilters: [isnotnull(t_hour#840), isnotnull(t_minute#841), (t_hour#840 = 10), (t_minute#841 >= 30), isnotnu..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/time_dim], PartitionFilters: [], PushedFilters: [IsNotNull(t_hour), IsNotNull(t_minute), EqualTo(t_hour,10), GreaterThanOrEqual(t_minute,30), IsN..., ReadSchema: struct<t_time_sk:int,t_hour:int,t_minute:int>\n"
      },
      "IM" : {
        "inputSizeInBytes" : 24492,
        "inputRowCount" : 2041
      },
      "InitialPartitionNum" : 0,
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 6,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 5 ],
      "Objectives" : {
        "DurationInMs" : 3184,
        "TotalTasksDurationInMs" : 3179,
        "IOBytes" : {
          "Total" : 166015,
          "Details" : {
            "IR" : 166015,
            "IW" : 0,
            "SR" : 0,
            "SW" : 0
          }
        }
      }
    },
    "1" : {
      "QSLogical" : {
        "operators" : {
          "0" : {
            "sign" : 963373237,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 20340,
                "rowCount" : 1695
              },
              "compileTime" : {
                "sizeInBytes" : 20340,
                "rowCount" : 1695
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [hd_demo_sk#39] "
          },
          "1" : {
            "sign" : -1206547140,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 74580,
                "rowCount" : 1695
              },
              "compileTime" : {
                "sizeInBytes" : 74580,
                "rowCount" : 1695
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((((hd_dep_count#42 = 3) AND (hd_vehicle_count#43 <= 5)) OR ((hd_dep_count#42 = 0) AND (hd_vehicle_count#43 <= 2))) OR ((hd_dep_count#42 = 1) AND (hd_vehicle_count#43 <= 3))) AND isnotnull(hd_demo_sk#39)) "
          },
          "2" : {
            "sign" : -752415087,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 316800,
                "rowCount" : 7200
              },
              "compileTime" : {
                "sizeInBytes" : 316800,
                "rowCount" : 7200
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [hd_demo_sk#39, hd_income_band_sk#40, hd_buy_potential#41, hd_dep_count#42, hd_vehicle_count#43], `spark_catalog`.`tpcds_100`.`household_demographics`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "LogicalRelation",
          "toId" : 1,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Filter",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [hd_demo_sk#39]\n+- Filter (((((hd_dep_count#42 = 3) AND (hd_vehicle_count#43 <= 5)) OR ((hd_dep_count#42 = 0) AND (hd_vehicle_count#43 <= 2))) OR ((hd_dep_count#42 = 1) AND (hd_vehicle_count#43 <= 3))) AND isnotnull(hd_demo_sk#39))\n   +- Relation spark_catalog.tpcds_100.household_demographics[hd_demo_sk#39,hd_income_band_sk#40,hd_buy_potential#41,hd_dep_count#42,hd_vehicle_count#43] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "0" : {
            "sign" : -1289335142,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 20340,
            "rowCount" : 1695,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [1]: [hd_demo_sk#39] Input [3]: [hd_demo_sk#39, hd_dep_count#42, hd_vehicle_count#43] "
          },
          "1" : {
            "sign" : -1042755871,
            "className" : "org.apache.spark.sql.execution.FilterExec",
            "sizeInBytes" : 20340,
            "rowCount" : 1695,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Input [3]: [hd_demo_sk#39, hd_dep_count#42, hd_vehicle_count#43] Condition : (((((hd_dep_count#42 = 3) AND (hd_vehicle_count#43 <= 5)) OR ((hd_dep_count#42 = 0) AND (hd_vehicle_count#43 <= 2))) OR ((hd_dep_count#42 = 1) AND (hd_vehicle_count#43 <= 3))) AND isnotnull(hd_demo_sk#39)) "
          },
          "2" : {
            "sign" : 1839485814,
            "className" : "org.apache.spark.sql.execution.FileSourceScanExec",
            "sizeInBytes" : 20340,
            "rowCount" : 1695,
            "isRuntime" : false,
            "predicate" : " (unknown) Scan parquet spark_catalog.tpcds_100.household_demographics Output [3]: [hd_demo_sk#39, hd_dep_count#42, hd_vehicle_count#43] Batched: true Location: InMemoryFileIndex [hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/household_demographics] PushedFilters: [Or(Or(And(EqualTo(hd_dep_count,3),LessThanOrEqual(hd_vehicle_count,5)),And(EqualTo(hd_dep_count,0),LessThanOrEqual(hd_vehicle_count,2))),And(EqualTo(hd_dep_count,1),LessThanOrEqual(hd_vehicle_count,3))), IsNotNull(hd_demo_sk)] ReadSchema: struct<hd_demo_sk:int,hd_dep_count:int,hd_vehicle_count:int> "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "Scan parquet spark_catalog.tpcds_100.household_demographics",
          "toId" : 1,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Filter",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [hd_demo_sk#39]\n+- Filter (((((hd_dep_count#42 = 3) AND (hd_vehicle_count#43 <= 5)) OR ((hd_dep_count#42 = 0) AND (hd_vehicle_count#43 <= 2))) OR ((hd_dep_count#42 = 1) AND (hd_vehicle_count#43 <= 3))) AND isnotnull(hd_demo_sk#39))\n   +- FileScan parquet spark_catalog.tpcds_100.household_demographics[hd_demo_sk#39,hd_dep_count#42,hd_vehicle_count#43] Batched: true, DataFilters: [((((hd_dep_count#42 = 3) AND (hd_vehicle_count#43 <= 5)) OR ((hd_dep_count#42 = 0) AND (hd_vehic..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/household..., PartitionFilters: [], PushedFilters: [Or(Or(And(EqualTo(hd_dep_count,3),LessThanOrEqual(hd_vehicle_count,5)),And(EqualTo(hd_dep_count,..., ReadSchema: struct<hd_demo_sk:int,hd_dep_count:int,hd_vehicle_count:int>\n"
      },
      "IM" : {
        "inputSizeInBytes" : 20340,
        "inputRowCount" : 1695
      },
      "InitialPartitionNum" : 0,
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 1,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 4 ],
      "Objectives" : {
        "DurationInMs" : 3147,
        "TotalTasksDurationInMs" : 3140,
        "IOBytes" : {
          "Total" : 31784,
          "Details" : {
            "IR" : 31784,
            "IW" : 0,
            "SR" : 0,
            "SW" : 0
          }
        }
      }
    },
    "17" : {
      "QSLogical" : {
        "operators" : {
          "8" : {
            "sign" : 1091438933,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 38130005144,
                "rowCount" : 250855297
              },
              "compileTime" : {
                "sizeInBytes" : 38130005144,
                "rowCount" : 250855297
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(ss_hdemo_sk#880) AND (isnotnull(ss_sold_time_sk#876) AND isnotnull(ss_store_sk#882))) "
          },
          "4" : {
            "sign" : 1642842373,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 5432612500,
                "rowCount" : 271630625
              },
              "compileTime" : {
                "sizeInBytes" : 5432612500,
                "rowCount" : 271630625
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_hdemo_sk#880 = hd_demo_sk#899) "
          },
          "9" : {
            "sign" : -1475086830,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 43776970976,
                "rowCount" : 288006388
              },
              "compileTime" : {
                "sizeInBytes" : 43776970976,
                "rowCount" : 288006388
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#876, ss_item_sk#877, ss_customer_sk#878, ss_cdemo_sk#879, ss_hdemo_sk#880, ss_addr_sk#881, ss_store_sk#882, ss_promo_sk#883, ss_ticket_number#884L, ss_quantity#885, ss_wholesale_cost#886, ss_list_price#887, ss_sales_price#888, ss_ext_discount_amt#889, ss_ext_sales_price#890, ss_ext_wholesale_cost#891, ss_ext_list_price#892, ss_ext_tax#893, ss_coupon_amt#894, ss_net_paid#895, ss_net_paid_inc_tax#896, ss_net_profit#897, ss_sold_date_sk#898], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "5" : {
            "sign" : -635815865,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 4332576176,
                "rowCount" : 270786011
              },
              "compileTime" : {
                "sizeInBytes" : 4332576176,
                "rowCount" : 270786011
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_hdemo_sk#880, ss_store_sk#882] "
          },
          "6" : {
            "sign" : -311959596,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 6498864264,
                "rowCount" : 270786011
              },
              "compileTime" : {
                "sizeInBytes" : 6498864264,
                "rowCount" : 270786011
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_time_sk#876 = t_time_sk#904) "
          },
          "1" : {
            "sign" : 1728236143,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 4622824312,
                "rowCount" : 577853039
              },
              "compileTime" : {
                "sizeInBytes" : 4622824312,
                "rowCount" : 577853039
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project "
          },
          "0" : {
            "sign" : 783708926,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 16,
                "rowCount" : 1
              },
              "compileTime" : {
                "sizeInBytes" : 16,
                "rowCount" : 1
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [count(1) AS h11_to_11_30#597L] "
          },
          "2" : {
            "sign" : 657694130,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 9245648624,
                "rowCount" : 577853039
              },
              "compileTime" : {
                "sizeInBytes" : 9245648624,
                "rowCount" : 577853039
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_store_sk#882 = s_store_sk#914) "
          },
          "7" : {
            "sign" : -1328452110,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 5017105940,
                "rowCount" : 250855297
              },
              "compileTime" : {
                "sizeInBytes" : 5017105940,
                "rowCount" : 250855297
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_sold_time_sk#876, ss_hdemo_sk#880, ss_store_sk#882] "
          },
          "3" : {
            "sign" : 167297390,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 3259567500,
                "rowCount" : 271630625
              },
              "compileTime" : {
                "sizeInBytes" : 3259567500,
                "rowCount" : 271630625
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_store_sk#882] "
          }
        },
        "links" : [ {
          "fromId" : 9,
          "fromName" : "LogicalRelation",
          "toId" : 8,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "Filter",
          "toId" : 7,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Project",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Join",
          "toId" : 5,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Project",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Join",
          "toId" : 3,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Project",
          "toId" : 2,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Join",
          "toId" : 1,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Project",
          "toId" : 0,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Aggregate [count(1) AS h11_to_11_30#597L]\n+- Project\n   +- Join Inner, (ss_store_sk#882 = s_store_sk#914)\n      :- Project [ss_store_sk#882]\n      :  +- Join Inner, (ss_hdemo_sk#880 = hd_demo_sk#899)\n      :     :- Project [ss_hdemo_sk#880, ss_store_sk#882]\n      :     :  +- Join Inner, (ss_sold_time_sk#876 = t_time_sk#904)\n      :     :     :- Project [ss_sold_time_sk#876, ss_hdemo_sk#880, ss_store_sk#882]\n      :     :     :  +- Filter (isnotnull(ss_hdemo_sk#880) AND (isnotnull(ss_sold_time_sk#876) AND isnotnull(ss_store_sk#882)))\n      :     :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#876,ss_item_sk#877,ss_customer_sk#878,ss_cdemo_sk#879,ss_hdemo_sk#880,ss_addr_sk#881,ss_store_sk#882,ss_promo_sk#883,ss_ticket_number#884L,ss_quantity#885,ss_wholesale_cost#886,ss_list_price#887,ss_sales_price#888,ss_ext_discount_amt#889,ss_ext_sales_price#890,ss_ext_wholesale_cost#891,ss_ext_list_price#892,ss_ext_tax#893,ss_coupon_amt#894,ss_net_paid#895,ss_net_paid_inc_tax#896,ss_net_profit#897,ss_sold_date_sk#898] parquet\n      :     :     +- Project [t_time_sk#904]\n      :     :        +- Filter (((isnotnull(t_hour#907) AND isnotnull(t_minute#908)) AND ((t_hour#907 = 11) AND (t_minute#908 < 30))) AND isnotnull(t_time_sk#904))\n      :     :           +- Relation spark_catalog.tpcds_100.time_dim[t_time_sk#904,t_time_id#905,t_time#906,t_hour#907,t_minute#908,t_second#909,t_am_pm#910,t_shift#911,t_sub_shift#912,t_meal_time#913] parquet\n      :     +- Project [hd_demo_sk#899]\n      :        +- Filter (((((hd_dep_count#902 = 3) AND (hd_vehicle_count#903 <= 5)) OR ((hd_dep_count#902 = 0) AND (hd_vehicle_count#903 <= 2))) OR ((hd_dep_count#902 = 1) AND (hd_vehicle_count#903 <= 3))) AND isnotnull(hd_demo_sk#899))\n      :           +- Relation spark_catalog.tpcds_100.household_demographics[hd_demo_sk#899,hd_income_band_sk#900,hd_buy_potential#901,hd_dep_count#902,hd_vehicle_count#903] parquet\n      +- Project [s_store_sk#914]\n         +- Filter ((isnotnull(s_store_name#919) AND (s_store_name#919 = ese)) AND isnotnull(s_store_sk#914))\n            +- Relation spark_catalog.tpcds_100.store[s_store_sk#914,s_store_id#915,s_rec_start_date#916,s_rec_end_date#917,s_closed_date_sk#918,s_store_name#919,s_number_employees#920,s_floor_space#921,s_hours#922,s_manager#923,s_market_id#924,s_geography_class#925,s_market_desc#926,s_market_manager#927,s_division_id#928,s_division_name#929,s_company_id#930,s_company_name#931,s_street_number#932,s_street_name#933,s_street_type#934,s_suite_number#935,s_city#936,s_county#937,... 5 more fields] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "12" : {
            "sign" : -1002050317,
            "className" : "org.apache.spark.sql.execution.adaptive.BroadcastQueryStageExec",
            "sizeInBytes" : 1051712,
            "rowCount" : 47,
            "isRuntime" : true,
            "predicate" : " (unknown) BroadcastQueryStage Output [1]: [s_store_sk#914] Arguments: 27 "
          },
          "8" : {
            "sign" : -323294101,
            "className" : "org.apache.spark.sql.execution.FilterExec",
            "sizeInBytes" : 5017105940,
            "rowCount" : 250855297,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Input [4]: [ss_sold_time_sk#876, ss_hdemo_sk#880, ss_store_sk#882, ss_sold_date_sk#898] Condition : ((isnotnull(ss_hdemo_sk#880) AND isnotnull(ss_sold_time_sk#876)) AND isnotnull(ss_store_sk#882)) "
          },
          "4" : {
            "sign" : -1351070275,
            "className" : "org.apache.spark.sql.execution.joins.BroadcastHashJoinExec",
            "sizeInBytes" : 5432612500,
            "rowCount" : 271630625,
            "isRuntime" : false,
            "predicate" : " (unknown) BroadcastHashJoin Left keys [1]: [ss_hdemo_sk#880] Right keys [1]: [hd_demo_sk#899] Join type: Inner Join condition: None "
          },
          "11" : {
            "sign" : -968178645,
            "className" : "org.apache.spark.sql.execution.adaptive.BroadcastQueryStageExec",
            "sizeInBytes" : 1106176,
            "rowCount" : 1800,
            "isRuntime" : true,
            "predicate" : " (unknown) BroadcastQueryStage Output [1]: [hd_demo_sk#899] Arguments: 25 "
          },
          "9" : {
            "sign" : -868733372,
            "className" : "org.apache.spark.sql.execution.FileSourceScanExec",
            "sizeInBytes" : 5017105940,
            "rowCount" : 250855297,
            "isRuntime" : false,
            "predicate" : " (unknown) Scan parquet spark_catalog.tpcds_100.store_sales Output [4]: [ss_sold_time_sk#876, ss_hdemo_sk#880, ss_store_sk#882, ss_sold_date_sk#898] Batched: true Location: CatalogFileIndex [hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/store_sales] PushedFilters: [IsNotNull(ss_hdemo_sk), IsNotNull(ss_sold_time_sk), IsNotNull(ss_store_sk)] ReadSchema: struct<ss_sold_time_sk:int,ss_hdemo_sk:int,ss_store_sk:int> "
          },
          "5" : {
            "sign" : -1856670467,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 4332576176,
            "rowCount" : 270786011,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [2]: [ss_hdemo_sk#880, ss_store_sk#882] Input [4]: [ss_sold_time_sk#876, ss_hdemo_sk#880, ss_store_sk#882, t_time_sk#904] "
          },
          "10" : {
            "sign" : 258996944,
            "className" : "org.apache.spark.sql.execution.adaptive.BroadcastQueryStageExec",
            "sizeInBytes" : 1062976,
            "rowCount" : 1800,
            "isRuntime" : true,
            "predicate" : " (unknown) BroadcastQueryStage Output [1]: [t_time_sk#904] Arguments: 23 "
          },
          "6" : {
            "sign" : 227404744,
            "className" : "org.apache.spark.sql.execution.joins.BroadcastHashJoinExec",
            "sizeInBytes" : 6498864264,
            "rowCount" : 270786011,
            "isRuntime" : false,
            "predicate" : " (unknown) BroadcastHashJoin Left keys [1]: [ss_sold_time_sk#876] Right keys [1]: [t_time_sk#904] Join type: Inner Join condition: None "
          },
          "1" : {
            "sign" : 1216225168,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 4622824312,
            "rowCount" : 577853039,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output: [] Input [2]: [ss_store_sk#882, s_store_sk#914] "
          },
          "0" : {
            "sign" : -397137528,
            "className" : "org.apache.spark.sql.execution.aggregate.HashAggregateExec",
            "sizeInBytes" : 16,
            "rowCount" : 1,
            "isRuntime" : false,
            "predicate" : " (unknown) HashAggregate Input: [] Keys: [] Functions [1]: [partial_count(1)] Aggregate Attributes [1]: [count#1123L] Results [1]: [count#1124L] "
          },
          "2" : {
            "sign" : 494357491,
            "className" : "org.apache.spark.sql.execution.joins.BroadcastHashJoinExec",
            "sizeInBytes" : 9245648624,
            "rowCount" : 577853039,
            "isRuntime" : false,
            "predicate" : " (unknown) BroadcastHashJoin Left keys [1]: [ss_store_sk#882] Right keys [1]: [s_store_sk#914] Join type: Inner Join condition: None "
          },
          "7" : {
            "sign" : 1347114650,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 5017105940,
            "rowCount" : 250855297,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [3]: [ss_sold_time_sk#876, ss_hdemo_sk#880, ss_store_sk#882] Input [4]: [ss_sold_time_sk#876, ss_hdemo_sk#880, ss_store_sk#882, ss_sold_date_sk#898] "
          },
          "3" : {
            "sign" : 1980202528,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 3259567500,
            "rowCount" : 271630625,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [1]: [ss_store_sk#882] Input [3]: [ss_hdemo_sk#880, ss_store_sk#882, hd_demo_sk#899] "
          }
        },
        "links" : [ {
          "fromId" : 9,
          "fromName" : "Scan parquet spark_catalog.tpcds_100.store_sales",
          "toId" : 8,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "Filter",
          "toId" : 7,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Project",
          "toId" : 6,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "BroadcastQueryStage",
          "toId" : 6,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "BroadcastHashJoin",
          "toId" : 5,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Project",
          "toId" : 4,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "BroadcastQueryStage",
          "toId" : 4,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "BroadcastHashJoin",
          "toId" : 3,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Project",
          "toId" : 2,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 12,
          "fromName" : "BroadcastQueryStage",
          "toId" : 2,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "BroadcastHashJoin",
          "toId" : 1,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Project",
          "toId" : 0,
          "toName" : "HashAggregate",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "HashAggregate(keys=[], functions=[partial_count(1)], output=[count#1124L])\n+- Project\n   +- BroadcastHashJoin [ss_store_sk#882], [s_store_sk#914], Inner, BuildRight, false\n      :- Project [ss_store_sk#882]\n      :  +- BroadcastHashJoin [ss_hdemo_sk#880], [hd_demo_sk#899], Inner, BuildRight, false\n      :     :- Project [ss_hdemo_sk#880, ss_store_sk#882]\n      :     :  +- BroadcastHashJoin [ss_sold_time_sk#876], [t_time_sk#904], Inner, BuildRight, false\n      :     :     :- Project [ss_sold_time_sk#876, ss_hdemo_sk#880, ss_store_sk#882]\n      :     :     :  +- Filter ((isnotnull(ss_hdemo_sk#880) AND isnotnull(ss_sold_time_sk#876)) AND isnotnull(ss_store_sk#882))\n      :     :     :     +- FileScan parquet spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#876,ss_hdemo_sk#880,ss_store_sk#882,ss_sold_date_sk#898] Batched: true, DataFilters: [isnotnull(ss_hdemo_sk#880), isnotnull(ss_sold_time_sk#876), isnotnull(ss_store_sk#882)], Format: Parquet, Location: CatalogFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/store_sales], PartitionFilters: [], PushedFilters: [IsNotNull(ss_hdemo_sk), IsNotNull(ss_sold_time_sk), IsNotNull(ss_store_sk)], ReadSchema: struct<ss_sold_time_sk:int,ss_hdemo_sk:int,ss_store_sk:int>\n      :     :     +- BroadcastQueryStage 23\n      :     :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=1276]\n      :     :           +- *(16) Project [t_time_sk#904]\n      :     :              +- *(16) Filter ((((isnotnull(t_hour#907) AND isnotnull(t_minute#908)) AND (t_hour#907 = 11)) AND (t_minute#908 < 30)) AND isnotnull(t_time_sk#904))\n      :     :                 +- *(16) ColumnarToRow\n      :     :                    +- FileScan parquet spark_catalog.tpcds_100.time_dim[t_time_sk#904,t_hour#907,t_minute#908] Batched: true, DataFilters: [isnotnull(t_hour#907), isnotnull(t_minute#908), (t_hour#907 = 11), (t_minute#908 < 30), isnotnul..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/time_dim], PartitionFilters: [], PushedFilters: [IsNotNull(t_hour), IsNotNull(t_minute), EqualTo(t_hour,11), LessThan(t_minute,30), IsNotNull(t_t..., ReadSchema: struct<t_time_sk:int,t_hour:int,t_minute:int>\n      :     +- BroadcastQueryStage 25\n      :        +- ReusedExchange [hd_demo_sk#899], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=743]\n      +- BroadcastQueryStage 27\n         +- ReusedExchange [s_store_sk#914], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=764]\n"
      },
      "IM" : {
        "inputSizeInBytes" : 5020326804,
        "inputRowCount" : 250858944
      },
      "InitialPartitionNum" : 0,
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 16,
        "FinishedTasksNum" : 1,
        "FinishedTasksTotalTimeInMs" : 1150.0,
        "FinishedTasksDistributionInMs" : [ 1150.0, 1150.0, 1150.0, 1150.0, 1150.0 ]
      },
      "QueryStageOptimizationId" : 17,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 18 ],
      "Objectives" : {
        "DurationInMs" : 27810,
        "TotalTasksDurationInMs" : 57837,
        "IOBytes" : {
          "Total" : 480112748,
          "Details" : {
            "IR" : 480103249,
            "IW" : 0,
            "SR" : 0,
            "SW" : 9499
          }
        }
      }
    },
    "25" : {
      "QSLogical" : {
        "operators" : {
          "8" : {
            "sign" : 1379352947,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 16,
                "rowCount" : 1
              },
              "compileTime" : {
                "sizeInBytes" : 2576,
                "rowCount" : 161
              }
            },
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: LogicalQueryStage Aggregate [count(1) AS h9_30_to_10#594L], HashAggregate(keys=[], functions=[count(1)]), BroadcastQueryStage 46 "
          },
          "4" : {
            "sign" : -1554653464,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 166931240,
                "rowCount" : 4173281
              },
              "compileTime" : {
                "sizeInBytes" : 166931240,
                "rowCount" : 4173281
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Cross "
          },
          "11" : {
            "sign" : -222721313,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 16,
                "rowCount" : 1
              },
              "compileTime" : {
                "sizeInBytes" : 2576,
                "rowCount" : 161
              }
            },
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: LogicalQueryStage Aggregate [count(1) AS h12_to_12_30#599L], HashAggregate(keys=[], functions=[count(1)]), BroadcastQueryStage 49 "
          },
          "9" : {
            "sign" : 461391639,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 16,
                "rowCount" : 1
              },
              "compileTime" : {
                "sizeInBytes" : 2576,
                "rowCount" : 161
              }
            },
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: LogicalQueryStage Aggregate [count(1) AS h10_30_to_11#596L], HashAggregate(keys=[], functions=[count(1)]), BroadcastQueryStage 47 "
          },
          "5" : {
            "sign" : 339560869,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 133544992,
                "rowCount" : 4173281
              },
              "compileTime" : {
                "sizeInBytes" : 133544992,
                "rowCount" : 4173281
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Cross "
          },
          "10" : {
            "sign" : -672490412,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 16,
                "rowCount" : 1
              },
              "compileTime" : {
                "sizeInBytes" : 2576,
                "rowCount" : 161
              }
            },
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: LogicalQueryStage Aggregate [count(1) AS h11_30_to_12#598L], HashAggregate(keys=[], functions=[count(1)]), BroadcastQueryStage 48 "
          },
          "6" : {
            "sign" : 273911039,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 622104,
                "rowCount" : 25921
              },
              "compileTime" : {
                "sizeInBytes" : 622104,
                "rowCount" : 25921
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Cross "
          },
          "1" : {
            "sign" : 1031395714,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 6923239475264,
                "rowCount" : 108175616801
              },
              "compileTime" : {
                "sizeInBytes" : 6923239475264,
                "rowCount" : 108175616801
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Cross "
          },
          "0" : {
            "sign" : 2029899114,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 1253971749957192,
                "rowCount" : 17416274304961
              },
              "compileTime" : {
                "sizeInBytes" : 1253971749957192,
                "rowCount" : 17416274304961
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Cross "
          },
          "2" : {
            "sign" : -587683179,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 37626301496,
                "rowCount" : 671898241
              },
              "compileTime" : {
                "sizeInBytes" : 37626301496,
                "rowCount" : 671898241
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Cross "
          },
          "7" : {
            "sign" : -1999474772,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 2576,
                "rowCount" : 161
              },
              "compileTime" : {
                "sizeInBytes" : 16,
                "rowCount" : 1
              }
            },
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [count(1) AS h8_30_to_9#592L], HashAggregate(keys=[], functions=[count(1)]) "
          },
          "3" : {
            "sign" : -816383406,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 32251115568,
                "rowCount" : 671898241
              },
              "compileTime" : {
                "sizeInBytes" : 32251115568,
                "rowCount" : 671898241
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Cross "
          }
        },
        "links" : [ {
          "fromId" : 7,
          "fromName" : "LogicalQueryStage",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Join",
          "toId" : 5,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "LogicalQueryStage",
          "toId" : 5,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Join",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Join",
          "toId" : 3,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "LogicalQueryStage",
          "toId" : 3,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Join",
          "toId" : 2,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Join",
          "toId" : 1,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "LogicalQueryStage",
          "toId" : 1,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Join",
          "toId" : 0,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "LogicalQueryStage",
          "toId" : 0,
          "toName" : "Join",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Join Cross\n:- Join Cross\n:  :- Join Cross\n:  :  :- Join Cross\n:  :  :  :- Join Cross\n:  :  :  :  :- Join Cross\n:  :  :  :  :  :- Join Cross\n:  :  :  :  :  :  :- LogicalQueryStage Aggregate [count(1) AS h8_30_to_9#592L], HashAggregate(keys=[], functions=[count(1)])\n:  :  :  :  :  :  +- LogicalQueryStage Aggregate [count(1) AS h9_to_9_30#593L], HashAggregate(keys=[], functions=[count(1)])\n:  :  :  :  :  +- LogicalQueryStage LogicalQueryStage Aggregate [count(1) AS h9_30_to_10#594L], HashAggregate(keys=[], functions=[count(1)]), BroadcastQueryStage 46\n:  :  :  :  +- LogicalQueryStage Aggregate [count(1) AS h10_to_10_30#595L], HashAggregate(keys=[], functions=[count(1)])\n:  :  :  +- LogicalQueryStage LogicalQueryStage Aggregate [count(1) AS h10_30_to_11#596L], HashAggregate(keys=[], functions=[count(1)]), BroadcastQueryStage 47\n:  :  +- LogicalQueryStage Aggregate [count(1) AS h11_to_11_30#597L], HashAggregate(keys=[], functions=[count(1)])\n:  +- LogicalQueryStage LogicalQueryStage Aggregate [count(1) AS h11_30_to_12#598L], HashAggregate(keys=[], functions=[count(1)]), BroadcastQueryStage 48\n+- LogicalQueryStage LogicalQueryStage Aggregate [count(1) AS h12_to_12_30#599L], HashAggregate(keys=[], functions=[count(1)]), BroadcastQueryStage 49\n"
      },
      "QSPhysical" : {
        "operators" : {
          "12" : {
            "sign" : -1147653686,
            "className" : "org.apache.spark.sql.execution.adaptive.BroadcastQueryStageExec",
            "sizeInBytes" : 16,
            "rowCount" : 1,
            "isRuntime" : true,
            "predicate" : " (unknown) BroadcastQueryStage Output [1]: [h10_30_to_11#596L] Arguments: 47 "
          },
          "8" : {
            "sign" : 1882707205,
            "className" : "org.apache.spark.sql.execution.adaptive.ShuffleQueryStageExec",
            "sizeInBytes" : 16,
            "rowCount" : 1,
            "isRuntime" : false,
            "predicate" : " (unknown) ShuffleQueryStage Output [1]: [count#1114L] Arguments: 43 "
          },
          "4" : {
            "sign" : -1482532365,
            "className" : "org.apache.spark.sql.execution.joins.BroadcastNestedLoopJoinExec",
            "sizeInBytes" : 166931240,
            "rowCount" : 4173281,
            "isRuntime" : false,
            "predicate" : " (unknown) BroadcastNestedLoopJoin Join type: Cross Join condition: None "
          },
          "15" : {
            "sign" : -1736535233,
            "className" : "org.apache.spark.sql.execution.adaptive.BroadcastQueryStageExec",
            "sizeInBytes" : 16,
            "rowCount" : 1,
            "isRuntime" : true,
            "predicate" : " (unknown) BroadcastQueryStage Output [1]: [h12_to_12_30#599L] Arguments: 49 "
          },
          "11" : {
            "sign" : 1634395923,
            "className" : "org.apache.spark.sql.execution.adaptive.BroadcastQueryStageExec",
            "sizeInBytes" : 16,
            "rowCount" : 1,
            "isRuntime" : true,
            "predicate" : " (unknown) BroadcastQueryStage Output [1]: [h10_to_10_30#595L] Arguments: 51 "
          },
          "9" : {
            "sign" : 923169528,
            "className" : "org.apache.spark.sql.execution.adaptive.BroadcastQueryStageExec",
            "sizeInBytes" : 16,
            "rowCount" : 1,
            "isRuntime" : true,
            "predicate" : " (unknown) BroadcastQueryStage Output [1]: [h9_to_9_30#593L] Arguments: 50 "
          },
          "13" : {
            "sign" : 1399391684,
            "className" : "org.apache.spark.sql.execution.adaptive.BroadcastQueryStageExec",
            "sizeInBytes" : 16,
            "rowCount" : 1,
            "isRuntime" : true,
            "predicate" : " (unknown) BroadcastQueryStage Output [1]: [h11_to_11_30#597L] Arguments: 52 "
          },
          "5" : {
            "sign" : -1946783397,
            "className" : "org.apache.spark.sql.execution.joins.BroadcastNestedLoopJoinExec",
            "sizeInBytes" : 133544992,
            "rowCount" : 4173281,
            "isRuntime" : false,
            "predicate" : " (unknown) BroadcastNestedLoopJoin Join type: Cross Join condition: None "
          },
          "10" : {
            "sign" : -1447249209,
            "className" : "org.apache.spark.sql.execution.adaptive.BroadcastQueryStageExec",
            "sizeInBytes" : 16,
            "rowCount" : 1,
            "isRuntime" : true,
            "predicate" : " (unknown) BroadcastQueryStage Output [1]: [h9_30_to_10#594L] Arguments: 46 "
          },
          "6" : {
            "sign" : 1234188779,
            "className" : "org.apache.spark.sql.execution.joins.BroadcastNestedLoopJoinExec",
            "sizeInBytes" : 622104,
            "rowCount" : 25921,
            "isRuntime" : false,
            "predicate" : " (unknown) BroadcastNestedLoopJoin Join type: Cross Join condition: None "
          },
          "1" : {
            "sign" : -1591813541,
            "className" : "org.apache.spark.sql.execution.joins.BroadcastNestedLoopJoinExec",
            "sizeInBytes" : 6923239475264,
            "rowCount" : 108175616801,
            "isRuntime" : false,
            "predicate" : " (unknown) BroadcastNestedLoopJoin Join type: Cross Join condition: None "
          },
          "14" : {
            "sign" : -1706339429,
            "className" : "org.apache.spark.sql.execution.adaptive.BroadcastQueryStageExec",
            "sizeInBytes" : 16,
            "rowCount" : 1,
            "isRuntime" : true,
            "predicate" : " (unknown) BroadcastQueryStage Output [1]: [h11_30_to_12#598L] Arguments: 48 "
          },
          "0" : {
            "sign" : 489195031,
            "className" : "org.apache.spark.sql.execution.joins.BroadcastNestedLoopJoinExec",
            "sizeInBytes" : 1253971749957192,
            "rowCount" : 17416274304961,
            "isRuntime" : false,
            "predicate" : " (unknown) BroadcastNestedLoopJoin Join type: Cross Join condition: None "
          },
          "2" : {
            "sign" : -82308683,
            "className" : "org.apache.spark.sql.execution.joins.BroadcastNestedLoopJoinExec",
            "sizeInBytes" : 37626301496,
            "rowCount" : 671898241,
            "isRuntime" : false,
            "predicate" : " (unknown) BroadcastNestedLoopJoin Join type: Cross Join condition: None "
          },
          "7" : {
            "sign" : 2099221912,
            "className" : "org.apache.spark.sql.execution.aggregate.HashAggregateExec",
            "sizeInBytes" : 2576,
            "rowCount" : 161,
            "isRuntime" : true,
            "predicate" : " (unknown) HashAggregate Input [1]: [count#1114L] Keys: [] Functions [1]: [count(1)] Aggregate Attributes [1]: [count(1)#600L] Results [1]: [count(1)#600L AS h8_30_to_9#592L] "
          },
          "3" : {
            "sign" : 1844383630,
            "className" : "org.apache.spark.sql.execution.joins.BroadcastNestedLoopJoinExec",
            "sizeInBytes" : 32251115568,
            "rowCount" : 671898241,
            "isRuntime" : false,
            "predicate" : " (unknown) BroadcastNestedLoopJoin Join type: Cross Join condition: None "
          }
        },
        "links" : [ {
          "fromId" : 8,
          "fromName" : "ShuffleQueryStage",
          "toId" : 7,
          "toName" : "HashAggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "HashAggregate",
          "toId" : 6,
          "toName" : "BroadcastNestedLoopJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "BroadcastQueryStage",
          "toId" : 6,
          "toName" : "BroadcastNestedLoopJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "BroadcastNestedLoopJoin",
          "toId" : 5,
          "toName" : "BroadcastNestedLoopJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "BroadcastQueryStage",
          "toId" : 5,
          "toName" : "BroadcastNestedLoopJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "BroadcastNestedLoopJoin",
          "toId" : 4,
          "toName" : "BroadcastNestedLoopJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "BroadcastQueryStage",
          "toId" : 4,
          "toName" : "BroadcastNestedLoopJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "BroadcastNestedLoopJoin",
          "toId" : 3,
          "toName" : "BroadcastNestedLoopJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 12,
          "fromName" : "BroadcastQueryStage",
          "toId" : 3,
          "toName" : "BroadcastNestedLoopJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "BroadcastNestedLoopJoin",
          "toId" : 2,
          "toName" : "BroadcastNestedLoopJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 13,
          "fromName" : "BroadcastQueryStage",
          "toId" : 2,
          "toName" : "BroadcastNestedLoopJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "BroadcastNestedLoopJoin",
          "toId" : 1,
          "toName" : "BroadcastNestedLoopJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 14,
          "fromName" : "BroadcastQueryStage",
          "toId" : 1,
          "toName" : "BroadcastNestedLoopJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "BroadcastNestedLoopJoin",
          "toId" : 0,
          "toName" : "BroadcastNestedLoopJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 15,
          "fromName" : "BroadcastQueryStage",
          "toId" : 0,
          "toName" : "BroadcastNestedLoopJoin",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "BroadcastNestedLoopJoin BuildRight, Cross\n:- BroadcastNestedLoopJoin BuildRight, Cross\n:  :- BroadcastNestedLoopJoin BuildRight, Cross\n:  :  :- BroadcastNestedLoopJoin BuildRight, Cross\n:  :  :  :- BroadcastNestedLoopJoin BuildRight, Cross\n:  :  :  :  :- BroadcastNestedLoopJoin BuildRight, Cross\n:  :  :  :  :  :- BroadcastNestedLoopJoin BuildRight, Cross\n:  :  :  :  :  :  :- HashAggregate(keys=[], functions=[count(1)], output=[h8_30_to_9#592L])\n:  :  :  :  :  :  :  +- ShuffleQueryStage 43\n:  :  :  :  :  :  :     +- Exchange SinglePartition, ENSURE_REQUIREMENTS, [plan_id=2816]\n:  :  :  :  :  :  :        +- *(30) HashAggregate(keys=[], functions=[partial_count(1)], output=[count#1114L])\n:  :  :  :  :  :  :           +- *(30) Project\n:  :  :  :  :  :  :              +- *(30) BroadcastHashJoin [ss_store_sk#22], [s_store_sk#54], Inner, BuildRight, false\n:  :  :  :  :  :  :                 :- *(30) Project [ss_store_sk#22]\n:  :  :  :  :  :  :                 :  +- *(30) BroadcastHashJoin [ss_hdemo_sk#20], [hd_demo_sk#39], Inner, BuildRight, false\n:  :  :  :  :  :  :                 :     :- *(30) Project [ss_hdemo_sk#20, ss_store_sk#22]\n:  :  :  :  :  :  :                 :     :  +- *(30) BroadcastHashJoin [ss_sold_time_sk#16], [t_time_sk#44], Inner, BuildRight, false\n:  :  :  :  :  :  :                 :     :     :- *(30) Project [ss_sold_time_sk#16, ss_hdemo_sk#20, ss_store_sk#22]\n:  :  :  :  :  :  :                 :     :     :  +- *(30) Filter ((isnotnull(ss_hdemo_sk#20) AND isnotnull(ss_sold_time_sk#16)) AND isnotnull(ss_store_sk#22))\n:  :  :  :  :  :  :                 :     :     :     +- *(30) ColumnarToRow\n:  :  :  :  :  :  :                 :     :     :        +- FileScan parquet spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#16,ss_hdemo_sk#20,ss_store_sk#22,ss_sold_date_sk#38] Batched: true, DataFilters: [isnotnull(ss_hdemo_sk#20), isnotnull(ss_sold_time_sk#16), isnotnull(ss_store_sk#22)], Format: Parquet, Location: CatalogFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/store_sales], PartitionFilters: [], PushedFilters: [IsNotNull(ss_hdemo_sk), IsNotNull(ss_sold_time_sk), IsNotNull(ss_store_sk)], ReadSchema: struct<ss_sold_time_sk:int,ss_hdemo_sk:int,ss_store_sk:int>\n:  :  :  :  :  :  :                 :     :     +- BroadcastQueryStage 0\n:  :  :  :  :  :  :                 :     :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=722]\n:  :  :  :  :  :  :                 :     :           +- *(1) Project [t_time_sk#44]\n:  :  :  :  :  :  :                 :     :              +- *(1) Filter ((((isnotnull(t_hour#47) AND isnotnull(t_minute#48)) AND (t_hour#47 = 8)) AND (t_minute#48 >= 30)) AND isnotnull(t_time_sk#44))\n:  :  :  :  :  :  :                 :     :                 +- *(1) ColumnarToRow\n:  :  :  :  :  :  :                 :     :                    +- FileScan parquet spark_catalog.tpcds_100.time_dim[t_time_sk#44,t_hour#47,t_minute#48] Batched: true, DataFilters: [isnotnull(t_hour#47), isnotnull(t_minute#48), (t_hour#47 = 8), (t_minute#48 >= 30), isnotnull(t_..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/time_dim], PartitionFilters: [], PushedFilters: [IsNotNull(t_hour), IsNotNull(t_minute), EqualTo(t_hour,8), GreaterThanOrEqual(t_minute,30), IsNo..., ReadSchema: struct<t_time_sk:int,t_hour:int,t_minute:int>\n:  :  :  :  :  :  :                 :     +- BroadcastQueryStage 1\n:  :  :  :  :  :  :                 :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=743]\n:  :  :  :  :  :  :                 :           +- *(2) Project [hd_demo_sk#39]\n:  :  :  :  :  :  :                 :              +- *(2) Filter (((((hd_dep_count#42 = 3) AND (hd_vehicle_count#43 <= 5)) OR ((hd_dep_count#42 = 0) AND (hd_vehicle_count#43 <= 2))) OR ((hd_dep_count#42 = 1) AND (hd_vehicle_count#43 <= 3))) AND isnotnull(hd_demo_sk#39))\n:  :  :  :  :  :  :                 :                 +- *(2) ColumnarToRow\n:  :  :  :  :  :  :                 :                    +- FileScan parquet spark_catalog.tpcds_100.household_demographics[hd_demo_sk#39,hd_dep_count#42,hd_vehicle_count#43] Batched: true, DataFilters: [((((hd_dep_count#42 = 3) AND (hd_vehicle_count#43 <= 5)) OR ((hd_dep_count#42 = 0) AND (hd_vehic..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/household..., PartitionFilters: [], PushedFilters: [Or(Or(And(EqualTo(hd_dep_count,3),LessThanOrEqual(hd_vehicle_count,5)),And(EqualTo(hd_dep_count,..., ReadSchema: struct<hd_demo_sk:int,hd_dep_count:int,hd_vehicle_count:int>\n:  :  :  :  :  :  :                 +- BroadcastQueryStage 2\n:  :  :  :  :  :  :                    +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=764]\n:  :  :  :  :  :  :                       +- *(3) Project [s_store_sk#54]\n:  :  :  :  :  :  :                          +- *(3) Filter ((isnotnull(s_store_name#59) AND (s_store_name#59 = ese)) AND isnotnull(s_store_sk#54))\n:  :  :  :  :  :  :                             +- *(3) ColumnarToRow\n:  :  :  :  :  :  :                                +- FileScan parquet spark_catalog.tpcds_100.store[s_store_sk#54,s_store_name#59] Batched: true, DataFilters: [isnotnull(s_store_name#59), (s_store_name#59 = ese), isnotnull(s_store_sk#54)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/store], PartitionFilters: [], PushedFilters: [IsNotNull(s_store_name), EqualTo(s_store_name,ese), IsNotNull(s_store_sk)], ReadSchema: struct<s_store_sk:int,s_store_name:string>\n:  :  :  :  :  :  +- BroadcastQueryStage 50\n:  :  :  :  :  :     +- BroadcastExchange IdentityBroadcastMode, [plan_id=3359]\n:  :  :  :  :  :        +- *(37) HashAggregate(keys=[], functions=[count(1)], output=[h9_to_9_30#593L])\n:  :  :  :  :  :           +- ShuffleQueryStage 38\n:  :  :  :  :  :              +- Exchange SinglePartition, ENSURE_REQUIREMENTS, [plan_id=2380]\n:  :  :  :  :  :                 +- *(25) HashAggregate(keys=[], functions=[partial_count(1)], output=[count#1116L])\n:  :  :  :  :  :                    +- *(25) Project\n:  :  :  :  :  :                       +- *(25) BroadcastHashJoin [ss_store_sk#614], [s_store_sk#646], Inner, BuildRight, false\n:  :  :  :  :  :                          :- *(25) Project [ss_store_sk#614]\n:  :  :  :  :  :                          :  +- *(25) BroadcastHashJoin [ss_hdemo_sk#612], [hd_demo_sk#631], Inner, BuildRight, false\n:  :  :  :  :  :                          :     :- *(25) Project [ss_hdemo_sk#612, ss_store_sk#614]\n:  :  :  :  :  :                          :     :  +- *(25) BroadcastHashJoin [ss_sold_time_sk#608], [t_time_sk#636], Inner, BuildRight, false\n:  :  :  :  :  :                          :     :     :- *(25) Project [ss_sold_time_sk#608, ss_hdemo_sk#612, ss_store_sk#614]\n:  :  :  :  :  :                          :     :     :  +- *(25) Filter ((isnotnull(ss_hdemo_sk#612) AND isnotnull(ss_sold_time_sk#608)) AND isnotnull(ss_store_sk#614))\n:  :  :  :  :  :                          :     :     :     +- *(25) ColumnarToRow\n:  :  :  :  :  :                          :     :     :        +- FileScan parquet spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#608,ss_hdemo_sk#612,ss_store_sk#614,ss_sold_date_sk#630] Batched: true, DataFilters: [isnotnull(ss_hdemo_sk#612), isnotnull(ss_sold_time_sk#608), isnotnull(ss_store_sk#614)], Format: Parquet, Location: CatalogFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/store_sales], PartitionFilters: [], PushedFilters: [IsNotNull(ss_hdemo_sk), IsNotNull(ss_sold_time_sk), IsNotNull(ss_store_sk)], ReadSchema: struct<ss_sold_time_sk:int,ss_hdemo_sk:int,ss_store_sk:int>\n:  :  :  :  :  :                          :     :     +- BroadcastQueryStage 3\n:  :  :  :  :  :                          :     :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=828]\n:  :  :  :  :  :                          :     :           +- *(4) Project [t_time_sk#636]\n:  :  :  :  :  :                          :     :              +- *(4) Filter ((((isnotnull(t_hour#639) AND isnotnull(t_minute#640)) AND (t_hour#639 = 9)) AND (t_minute#640 < 30)) AND isnotnull(t_time_sk#636))\n:  :  :  :  :  :                          :     :                 +- *(4) ColumnarToRow\n:  :  :  :  :  :                          :     :                    +- FileScan parquet spark_catalog.tpcds_100.time_dim[t_time_sk#636,t_hour#639,t_minute#640] Batched: true, DataFilters: [isnotnull(t_hour#639), isnotnull(t_minute#640), (t_hour#639 = 9), (t_minute#640 < 30), isnotnull..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/time_dim], PartitionFilters: [], PushedFilters: [IsNotNull(t_hour), IsNotNull(t_minute), EqualTo(t_hour,9), LessThan(t_minute,30), IsNotNull(t_ti..., ReadSchema: struct<t_time_sk:int,t_hour:int,t_minute:int>\n:  :  :  :  :  :                          :     +- BroadcastQueryStage 5\n:  :  :  :  :  :                          :        +- ReusedExchange [hd_demo_sk#631], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=743]\n:  :  :  :  :  :                          +- BroadcastQueryStage 7\n:  :  :  :  :  :                             +- ReusedExchange [s_store_sk#646], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=764]\n:  :  :  :  :  +- BroadcastQueryStage 46\n:  :  :  :  :     +- BroadcastExchange IdentityBroadcastMode, [plan_id=3101]\n:  :  :  :  :        +- *(33) HashAggregate(keys=[], functions=[count(1)], output=[h9_30_to_10#594L])\n:  :  :  :  :           +- ShuffleQueryStage 39\n:  :  :  :  :              +- Exchange SinglePartition, ENSURE_REQUIREMENTS, [plan_id=2435]\n:  :  :  :  :                 +- *(26) HashAggregate(keys=[], functions=[partial_count(1)], output=[count#1118L])\n:  :  :  :  :                    +- *(26) Project\n:  :  :  :  :                       +- *(26) BroadcastHashJoin [ss_store_sk#681], [s_store_sk#713], Inner, BuildRight, false\n:  :  :  :  :                          :- *(26) Project [ss_store_sk#681]\n:  :  :  :  :                          :  +- *(26) BroadcastHashJoin [ss_hdemo_sk#679], [hd_demo_sk#698], Inner, BuildRight, false\n:  :  :  :  :                          :     :- *(26) Project [ss_hdemo_sk#679, ss_store_sk#681]\n:  :  :  :  :                          :     :  +- *(26) BroadcastHashJoin [ss_sold_time_sk#675], [t_time_sk#703], Inner, BuildRight, false\n:  :  :  :  :                          :     :     :- *(26) Project [ss_sold_time_sk#675, ss_hdemo_sk#679, ss_store_sk#681]\n:  :  :  :  :                          :     :     :  +- *(26) Filter ((isnotnull(ss_hdemo_sk#679) AND isnotnull(ss_sold_time_sk#675)) AND isnotnull(ss_store_sk#681))\n:  :  :  :  :                          :     :     :     +- *(26) ColumnarToRow\n:  :  :  :  :                          :     :     :        +- FileScan parquet spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#675,ss_hdemo_sk#679,ss_store_sk#681,ss_sold_date_sk#697] Batched: true, DataFilters: [isnotnull(ss_hdemo_sk#679), isnotnull(ss_sold_time_sk#675), isnotnull(ss_store_sk#681)], Format: Parquet, Location: CatalogFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/store_sales], PartitionFilters: [], PushedFilters: [IsNotNull(ss_hdemo_sk), IsNotNull(ss_sold_time_sk), IsNotNull(ss_store_sk)], ReadSchema: struct<ss_sold_time_sk:int,ss_hdemo_sk:int,ss_store_sk:int>\n:  :  :  :  :                          :     :     +- BroadcastQueryStage 8\n:  :  :  :  :                          :     :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=940]\n:  :  :  :  :                          :     :           +- *(7) Project [t_time_sk#703]\n:  :  :  :  :                          :     :              +- *(7) Filter ((((isnotnull(t_hour#706) AND isnotnull(t_minute#707)) AND (t_hour#706 = 9)) AND (t_minute#707 >= 30)) AND isnotnull(t_time_sk#703))\n:  :  :  :  :                          :     :                 +- *(7) ColumnarToRow\n:  :  :  :  :                          :     :                    +- FileScan parquet spark_catalog.tpcds_100.time_dim[t_time_sk#703,t_hour#706,t_minute#707] Batched: true, DataFilters: [isnotnull(t_hour#706), isnotnull(t_minute#707), (t_hour#706 = 9), (t_minute#707 >= 30), isnotnul..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/time_dim], PartitionFilters: [], PushedFilters: [IsNotNull(t_hour), IsNotNull(t_minute), EqualTo(t_hour,9), GreaterThanOrEqual(t_minute,30), IsNo..., ReadSchema: struct<t_time_sk:int,t_hour:int,t_minute:int>\n:  :  :  :  :                          :     +- BroadcastQueryStage 10\n:  :  :  :  :                          :        +- ReusedExchange [hd_demo_sk#698], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=743]\n:  :  :  :  :                          +- BroadcastQueryStage 12\n:  :  :  :  :                             +- ReusedExchange [s_store_sk#713], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=764]\n:  :  :  :  +- BroadcastQueryStage 51\n:  :  :  :     +- BroadcastExchange IdentityBroadcastMode, [plan_id=3422]\n:  :  :  :        +- *(38) HashAggregate(keys=[], functions=[count(1)], output=[h10_to_10_30#595L])\n:  :  :  :           +- ShuffleQueryStage 44\n:  :  :  :              +- Exchange SinglePartition, ENSURE_REQUIREMENTS, [plan_id=2877]\n:  :  :  :                 +- *(31) HashAggregate(keys=[], functions=[partial_count(1)], output=[count#1120L])\n:  :  :  :                    +- *(31) Project\n:  :  :  :                       +- *(31) BroadcastHashJoin [ss_store_sk#748], [s_store_sk#780], Inner, BuildRight, false\n:  :  :  :                          :- *(31) Project [ss_store_sk#748]\n:  :  :  :                          :  +- *(31) BroadcastHashJoin [ss_hdemo_sk#746], [hd_demo_sk#765], Inner, BuildRight, false\n:  :  :  :                          :     :- *(31) Project [ss_hdemo_sk#746, ss_store_sk#748]\n:  :  :  :                          :     :  +- *(31) BroadcastHashJoin [ss_sold_time_sk#742], [t_time_sk#770], Inner, BuildRight, false\n:  :  :  :                          :     :     :- *(31) Project [ss_sold_time_sk#742, ss_hdemo_sk#746, ss_store_sk#748]\n:  :  :  :                          :     :     :  +- *(31) Filter ((isnotnull(ss_hdemo_sk#746) AND isnotnull(ss_sold_time_sk#742)) AND isnotnull(ss_store_sk#748))\n:  :  :  :                          :     :     :     +- *(31) ColumnarToRow\n:  :  :  :                          :     :     :        +- FileScan parquet spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#742,ss_hdemo_sk#746,ss_store_sk#748,ss_sold_date_sk#764] Batched: true, DataFilters: [isnotnull(ss_hdemo_sk#746), isnotnull(ss_sold_time_sk#742), isnotnull(ss_store_sk#748)], Format: Parquet, Location: CatalogFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/store_sales], PartitionFilters: [], PushedFilters: [IsNotNull(ss_hdemo_sk), IsNotNull(ss_sold_time_sk), IsNotNull(ss_store_sk)], ReadSchema: struct<ss_sold_time_sk:int,ss_hdemo_sk:int,ss_store_sk:int>\n:  :  :  :                          :     :     +- BroadcastQueryStage 13\n:  :  :  :                          :     :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=1052]\n:  :  :  :                          :     :           +- *(10) Project [t_time_sk#770]\n:  :  :  :                          :     :              +- *(10) Filter ((((isnotnull(t_hour#773) AND isnotnull(t_minute#774)) AND (t_hour#773 = 10)) AND (t_minute#774 < 30)) AND isnotnull(t_time_sk#770))\n:  :  :  :                          :     :                 +- *(10) ColumnarToRow\n:  :  :  :                          :     :                    +- FileScan parquet spark_catalog.tpcds_100.time_dim[t_time_sk#770,t_hour#773,t_minute#774] Batched: true, DataFilters: [isnotnull(t_hour#773), isnotnull(t_minute#774), (t_hour#773 = 10), (t_minute#774 < 30), isnotnul..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/time_dim], PartitionFilters: [], PushedFilters: [IsNotNull(t_hour), IsNotNull(t_minute), EqualTo(t_hour,10), LessThan(t_minute,30), IsNotNull(t_t..., ReadSchema: struct<t_time_sk:int,t_hour:int,t_minute:int>\n:  :  :  :                          :     +- BroadcastQueryStage 15\n:  :  :  :                          :        +- ReusedExchange [hd_demo_sk#765], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=743]\n:  :  :  :                          +- BroadcastQueryStage 17\n:  :  :  :                             +- ReusedExchange [s_store_sk#780], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=764]\n:  :  :  +- BroadcastQueryStage 47\n:  :  :     +- BroadcastExchange IdentityBroadcastMode, [plan_id=3171]\n:  :  :        +- *(34) HashAggregate(keys=[], functions=[count(1)], output=[h10_30_to_11#596L])\n:  :  :           +- ShuffleQueryStage 40\n:  :  :              +- Exchange SinglePartition, ENSURE_REQUIREMENTS, [plan_id=2491]\n:  :  :                 +- *(27) HashAggregate(keys=[], functions=[partial_count(1)], output=[count#1122L])\n:  :  :                    +- *(27) Project\n:  :  :                       +- *(27) BroadcastHashJoin [ss_store_sk#815], [s_store_sk#847], Inner, BuildRight, false\n:  :  :                          :- *(27) Project [ss_store_sk#815]\n:  :  :                          :  +- *(27) BroadcastHashJoin [ss_hdemo_sk#813], [hd_demo_sk#832], Inner, BuildRight, false\n:  :  :                          :     :- *(27) Project [ss_hdemo_sk#813, ss_store_sk#815]\n:  :  :                          :     :  +- *(27) BroadcastHashJoin [ss_sold_time_sk#809], [t_time_sk#837], Inner, BuildRight, false\n:  :  :                          :     :     :- *(27) Project [ss_sold_time_sk#809, ss_hdemo_sk#813, ss_store_sk#815]\n:  :  :                          :     :     :  +- *(27) Filter ((isnotnull(ss_hdemo_sk#813) AND isnotnull(ss_sold_time_sk#809)) AND isnotnull(ss_store_sk#815))\n:  :  :                          :     :     :     +- *(27) ColumnarToRow\n:  :  :                          :     :     :        +- FileScan parquet spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#809,ss_hdemo_sk#813,ss_store_sk#815,ss_sold_date_sk#831] Batched: true, DataFilters: [isnotnull(ss_hdemo_sk#813), isnotnull(ss_sold_time_sk#809), isnotnull(ss_store_sk#815)], Format: Parquet, Location: CatalogFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/store_sales], PartitionFilters: [], PushedFilters: [IsNotNull(ss_hdemo_sk), IsNotNull(ss_sold_time_sk), IsNotNull(ss_store_sk)], ReadSchema: struct<ss_sold_time_sk:int,ss_hdemo_sk:int,ss_store_sk:int>\n:  :  :                          :     :     +- BroadcastQueryStage 18\n:  :  :                          :     :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=1164]\n:  :  :                          :     :           +- *(13) Project [t_time_sk#837]\n:  :  :                          :     :              +- *(13) Filter ((((isnotnull(t_hour#840) AND isnotnull(t_minute#841)) AND (t_hour#840 = 10)) AND (t_minute#841 >= 30)) AND isnotnull(t_time_sk#837))\n:  :  :                          :     :                 +- *(13) ColumnarToRow\n:  :  :                          :     :                    +- FileScan parquet spark_catalog.tpcds_100.time_dim[t_time_sk#837,t_hour#840,t_minute#841] Batched: true, DataFilters: [isnotnull(t_hour#840), isnotnull(t_minute#841), (t_hour#840 = 10), (t_minute#841 >= 30), isnotnu..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/time_dim], PartitionFilters: [], PushedFilters: [IsNotNull(t_hour), IsNotNull(t_minute), EqualTo(t_hour,10), GreaterThanOrEqual(t_minute,30), IsN..., ReadSchema: struct<t_time_sk:int,t_hour:int,t_minute:int>\n:  :  :                          :     +- BroadcastQueryStage 20\n:  :  :                          :        +- ReusedExchange [hd_demo_sk#832], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=743]\n:  :  :                          +- BroadcastQueryStage 22\n:  :  :                             +- ReusedExchange [s_store_sk#847], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=764]\n:  :  +- BroadcastQueryStage 52\n:  :     +- BroadcastExchange IdentityBroadcastMode, [plan_id=3717]\n:  :        +- *(39) HashAggregate(keys=[], functions=[count(1)], output=[h11_to_11_30#597L])\n:  :           +- ShuffleQueryStage 45\n:  :              +- Exchange SinglePartition, ENSURE_REQUIREMENTS, [plan_id=2936]\n:  :                 +- *(32) HashAggregate(keys=[], functions=[partial_count(1)], output=[count#1124L])\n:  :                    +- *(32) Project\n:  :                       +- *(32) BroadcastHashJoin [ss_store_sk#882], [s_store_sk#914], Inner, BuildRight, false\n:  :                          :- *(32) Project [ss_store_sk#882]\n:  :                          :  +- *(32) BroadcastHashJoin [ss_hdemo_sk#880], [hd_demo_sk#899], Inner, BuildRight, false\n:  :                          :     :- *(32) Project [ss_hdemo_sk#880, ss_store_sk#882]\n:  :                          :     :  +- *(32) BroadcastHashJoin [ss_sold_time_sk#876], [t_time_sk#904], Inner, BuildRight, false\n:  :                          :     :     :- *(32) Project [ss_sold_time_sk#876, ss_hdemo_sk#880, ss_store_sk#882]\n:  :                          :     :     :  +- *(32) Filter ((isnotnull(ss_hdemo_sk#880) AND isnotnull(ss_sold_time_sk#876)) AND isnotnull(ss_store_sk#882))\n:  :                          :     :     :     +- *(32) ColumnarToRow\n:  :                          :     :     :        +- FileScan parquet spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#876,ss_hdemo_sk#880,ss_store_sk#882,ss_sold_date_sk#898] Batched: true, DataFilters: [isnotnull(ss_hdemo_sk#880), isnotnull(ss_sold_time_sk#876), isnotnull(ss_store_sk#882)], Format: Parquet, Location: CatalogFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/store_sales], PartitionFilters: [], PushedFilters: [IsNotNull(ss_hdemo_sk), IsNotNull(ss_sold_time_sk), IsNotNull(ss_store_sk)], ReadSchema: struct<ss_sold_time_sk:int,ss_hdemo_sk:int,ss_store_sk:int>\n:  :                          :     :     +- BroadcastQueryStage 23\n:  :                          :     :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=1276]\n:  :                          :     :           +- *(16) Project [t_time_sk#904]\n:  :                          :     :              +- *(16) Filter ((((isnotnull(t_hour#907) AND isnotnull(t_minute#908)) AND (t_hour#907 = 11)) AND (t_minute#908 < 30)) AND isnotnull(t_time_sk#904))\n:  :                          :     :                 +- *(16) ColumnarToRow\n:  :                          :     :                    +- FileScan parquet spark_catalog.tpcds_100.time_dim[t_time_sk#904,t_hour#907,t_minute#908] Batched: true, DataFilters: [isnotnull(t_hour#907), isnotnull(t_minute#908), (t_hour#907 = 11), (t_minute#908 < 30), isnotnul..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/time_dim], PartitionFilters: [], PushedFilters: [IsNotNull(t_hour), IsNotNull(t_minute), EqualTo(t_hour,11), LessThan(t_minute,30), IsNotNull(t_t..., ReadSchema: struct<t_time_sk:int,t_hour:int,t_minute:int>\n:  :                          :     +- BroadcastQueryStage 25\n:  :                          :        +- ReusedExchange [hd_demo_sk#899], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=743]\n:  :                          +- BroadcastQueryStage 27\n:  :                             +- ReusedExchange [s_store_sk#914], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=764]\n:  +- BroadcastQueryStage 48\n:     +- BroadcastExchange IdentityBroadcastMode, [plan_id=3237]\n:        +- *(35) HashAggregate(keys=[], functions=[count(1)], output=[h11_30_to_12#598L])\n:           +- ShuffleQueryStage 41\n:              +- Exchange SinglePartition, ENSURE_REQUIREMENTS, [plan_id=2547]\n:                 +- *(28) HashAggregate(keys=[], functions=[partial_count(1)], output=[count#1126L])\n:                    +- *(28) Project\n:                       +- *(28) BroadcastHashJoin [ss_store_sk#949], [s_store_sk#981], Inner, BuildRight, false\n:                          :- *(28) Project [ss_store_sk#949]\n:                          :  +- *(28) BroadcastHashJoin [ss_hdemo_sk#947], [hd_demo_sk#966], Inner, BuildRight, false\n:                          :     :- *(28) Project [ss_hdemo_sk#947, ss_store_sk#949]\n:                          :     :  +- *(28) BroadcastHashJoin [ss_sold_time_sk#943], [t_time_sk#971], Inner, BuildRight, false\n:                          :     :     :- *(28) Project [ss_sold_time_sk#943, ss_hdemo_sk#947, ss_store_sk#949]\n:                          :     :     :  +- *(28) Filter ((isnotnull(ss_hdemo_sk#947) AND isnotnull(ss_sold_time_sk#943)) AND isnotnull(ss_store_sk#949))\n:                          :     :     :     +- *(28) ColumnarToRow\n:                          :     :     :        +- FileScan parquet spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#943,ss_hdemo_sk#947,ss_store_sk#949,ss_sold_date_sk#965] Batched: true, DataFilters: [isnotnull(ss_hdemo_sk#947), isnotnull(ss_sold_time_sk#943), isnotnull(ss_store_sk#949)], Format: Parquet, Location: CatalogFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/store_sales], PartitionFilters: [], PushedFilters: [IsNotNull(ss_hdemo_sk), IsNotNull(ss_sold_time_sk), IsNotNull(ss_store_sk)], ReadSchema: struct<ss_sold_time_sk:int,ss_hdemo_sk:int,ss_store_sk:int>\n:                          :     :     +- BroadcastQueryStage 28\n:                          :     :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=1388]\n:                          :     :           +- *(19) Project [t_time_sk#971]\n:                          :     :              +- *(19) Filter ((((isnotnull(t_hour#974) AND isnotnull(t_minute#975)) AND (t_hour#974 = 11)) AND (t_minute#975 >= 30)) AND isnotnull(t_time_sk#971))\n:                          :     :                 +- *(19) ColumnarToRow\n:                          :     :                    +- FileScan parquet spark_catalog.tpcds_100.time_dim[t_time_sk#971,t_hour#974,t_minute#975] Batched: true, DataFilters: [isnotnull(t_hour#974), isnotnull(t_minute#975), (t_hour#974 = 11), (t_minute#975 >= 30), isnotnu..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/time_dim], PartitionFilters: [], PushedFilters: [IsNotNull(t_hour), IsNotNull(t_minute), EqualTo(t_hour,11), GreaterThanOrEqual(t_minute,30), IsN..., ReadSchema: struct<t_time_sk:int,t_hour:int,t_minute:int>\n:                          :     +- BroadcastQueryStage 30\n:                          :        +- ReusedExchange [hd_demo_sk#966], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=743]\n:                          +- BroadcastQueryStage 32\n:                             +- ReusedExchange [s_store_sk#981], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=764]\n+- BroadcastQueryStage 49\n   +- BroadcastExchange IdentityBroadcastMode, [plan_id=3299]\n      +- *(36) HashAggregate(keys=[], functions=[count(1)], output=[h12_to_12_30#599L])\n         +- ShuffleQueryStage 42\n            +- Exchange SinglePartition, ENSURE_REQUIREMENTS, [plan_id=2602]\n               +- *(29) HashAggregate(keys=[], functions=[partial_count(1)], output=[count#1128L])\n                  +- *(29) Project\n                     +- *(29) BroadcastHashJoin [ss_store_sk#1016], [s_store_sk#1048], Inner, BuildRight, false\n                        :- *(29) Project [ss_store_sk#1016]\n                        :  +- *(29) BroadcastHashJoin [ss_hdemo_sk#1014], [hd_demo_sk#1033], Inner, BuildRight, false\n                        :     :- *(29) Project [ss_hdemo_sk#1014, ss_store_sk#1016]\n                        :     :  +- *(29) BroadcastHashJoin [ss_sold_time_sk#1010], [t_time_sk#1038], Inner, BuildRight, false\n                        :     :     :- *(29) Project [ss_sold_time_sk#1010, ss_hdemo_sk#1014, ss_store_sk#1016]\n                        :     :     :  +- *(29) Filter ((isnotnull(ss_hdemo_sk#1014) AND isnotnull(ss_sold_time_sk#1010)) AND isnotnull(ss_store_sk#1016))\n                        :     :     :     +- *(29) ColumnarToRow\n                        :     :     :        +- FileScan parquet spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#1010,ss_hdemo_sk#1014,ss_store_sk#1016,ss_sold_date_sk#1032] Batched: true, DataFilters: [isnotnull(ss_hdemo_sk#1014), isnotnull(ss_sold_time_sk#1010), isnotnull(ss_store_sk#1016)], Format: Parquet, Location: CatalogFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/store_sales], PartitionFilters: [], PushedFilters: [IsNotNull(ss_hdemo_sk), IsNotNull(ss_sold_time_sk), IsNotNull(ss_store_sk)], ReadSchema: struct<ss_sold_time_sk:int,ss_hdemo_sk:int,ss_store_sk:int>\n                        :     :     +- BroadcastQueryStage 33\n                        :     :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=1500]\n                        :     :           +- *(22) Project [t_time_sk#1038]\n                        :     :              +- *(22) Filter ((((isnotnull(t_hour#1041) AND isnotnull(t_minute#1042)) AND (t_hour#1041 = 12)) AND (t_minute#1042 < 30)) AND isnotnull(t_time_sk#1038))\n                        :     :                 +- *(22) ColumnarToRow\n                        :     :                    +- FileScan parquet spark_catalog.tpcds_100.time_dim[t_time_sk#1038,t_hour#1041,t_minute#1042] Batched: true, DataFilters: [isnotnull(t_hour#1041), isnotnull(t_minute#1042), (t_hour#1041 = 12), (t_minute#1042 < 30), isno..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/time_dim], PartitionFilters: [], PushedFilters: [IsNotNull(t_hour), IsNotNull(t_minute), EqualTo(t_hour,12), LessThan(t_minute,30), IsNotNull(t_t..., ReadSchema: struct<t_time_sk:int,t_hour:int,t_minute:int>\n                        :     +- BroadcastQueryStage 35\n                        :        +- ReusedExchange [hd_demo_sk#1033], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=743]\n                        +- BroadcastQueryStage 37\n                           +- ReusedExchange [s_store_sk#1048], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=764]\n"
      },
      "IM" : {
        "inputSizeInBytes" : 2688,
        "inputRowCount" : 168
      },
      "InitialPartitionNum" : 1,
      "PD" : {
        "5" : [ 9660 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 25,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 34 ],
      "Objectives" : {
        "DurationInMs" : 67,
        "TotalTasksDurationInMs" : 62,
        "IOBytes" : {
          "Total" : 9499,
          "Details" : {
            "IR" : 0,
            "IW" : 0,
            "SR" : 9499,
            "SW" : 0
          }
        }
      }
    },
    "14" : {
      "QSLogical" : {
        "operators" : {
          "8" : {
            "sign" : 98567939,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 38130005144,
                "rowCount" : 250855297
              },
              "compileTime" : {
                "sizeInBytes" : 38130005144,
                "rowCount" : 250855297
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(ss_hdemo_sk#1014) AND (isnotnull(ss_sold_time_sk#1010) AND isnotnull(ss_store_sk#1016))) "
          },
          "4" : {
            "sign" : 1093625217,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 5432612500,
                "rowCount" : 271630625
              },
              "compileTime" : {
                "sizeInBytes" : 5432612500,
                "rowCount" : 271630625
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_hdemo_sk#1014 = hd_demo_sk#1033) "
          },
          "9" : {
            "sign" : 1327837637,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 43776970976,
                "rowCount" : 288006388
              },
              "compileTime" : {
                "sizeInBytes" : 43776970976,
                "rowCount" : 288006388
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#1010, ss_item_sk#1011, ss_customer_sk#1012, ss_cdemo_sk#1013, ss_hdemo_sk#1014, ss_addr_sk#1015, ss_store_sk#1016, ss_promo_sk#1017, ss_ticket_number#1018L, ss_quantity#1019, ss_wholesale_cost#1020, ss_list_price#1021, ss_sales_price#1022, ss_ext_discount_amt#1023, ss_ext_sales_price#1024, ss_ext_wholesale_cost#1025, ss_ext_list_price#1026, ss_ext_tax#1027, ss_coupon_amt#1028, ss_net_paid#1029, ss_net_paid_inc_tax#1030, ss_net_profit#1031, ss_sold_date_sk#1032], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "5" : {
            "sign" : 140436309,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 4332576176,
                "rowCount" : 270786011
              },
              "compileTime" : {
                "sizeInBytes" : 4332576176,
                "rowCount" : 270786011
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_hdemo_sk#1014, ss_store_sk#1016] "
          },
          "6" : {
            "sign" : -945412012,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 6498864264,
                "rowCount" : 270786011
              },
              "compileTime" : {
                "sizeInBytes" : 6498864264,
                "rowCount" : 270786011
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_time_sk#1010 = t_time_sk#1038) "
          },
          "1" : {
            "sign" : 282245422,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 4622824312,
                "rowCount" : 577853039
              },
              "compileTime" : {
                "sizeInBytes" : 4622824312,
                "rowCount" : 577853039
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project "
          },
          "0" : {
            "sign" : 34745205,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 16,
                "rowCount" : 1
              },
              "compileTime" : {
                "sizeInBytes" : 16,
                "rowCount" : 1
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [count(1) AS h12_to_12_30#599L] "
          },
          "2" : {
            "sign" : 1929643905,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 9245648624,
                "rowCount" : 577853039
              },
              "compileTime" : {
                "sizeInBytes" : 9245648624,
                "rowCount" : 577853039
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_store_sk#1016 = s_store_sk#1048) "
          },
          "7" : {
            "sign" : 1563505905,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 5017105940,
                "rowCount" : 250855297
              },
              "compileTime" : {
                "sizeInBytes" : 5017105940,
                "rowCount" : 250855297
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_sold_time_sk#1010, ss_hdemo_sk#1014, ss_store_sk#1016] "
          },
          "3" : {
            "sign" : -998178312,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 3259567500,
                "rowCount" : 271630625
              },
              "compileTime" : {
                "sizeInBytes" : 3259567500,
                "rowCount" : 271630625
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_store_sk#1016] "
          }
        },
        "links" : [ {
          "fromId" : 9,
          "fromName" : "LogicalRelation",
          "toId" : 8,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "Filter",
          "toId" : 7,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Project",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Join",
          "toId" : 5,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Project",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Join",
          "toId" : 3,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Project",
          "toId" : 2,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Join",
          "toId" : 1,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Project",
          "toId" : 0,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Aggregate [count(1) AS h12_to_12_30#599L]\n+- Project\n   +- Join Inner, (ss_store_sk#1016 = s_store_sk#1048)\n      :- Project [ss_store_sk#1016]\n      :  +- Join Inner, (ss_hdemo_sk#1014 = hd_demo_sk#1033)\n      :     :- Project [ss_hdemo_sk#1014, ss_store_sk#1016]\n      :     :  +- Join Inner, (ss_sold_time_sk#1010 = t_time_sk#1038)\n      :     :     :- Project [ss_sold_time_sk#1010, ss_hdemo_sk#1014, ss_store_sk#1016]\n      :     :     :  +- Filter (isnotnull(ss_hdemo_sk#1014) AND (isnotnull(ss_sold_time_sk#1010) AND isnotnull(ss_store_sk#1016)))\n      :     :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#1010,ss_item_sk#1011,ss_customer_sk#1012,ss_cdemo_sk#1013,ss_hdemo_sk#1014,ss_addr_sk#1015,ss_store_sk#1016,ss_promo_sk#1017,ss_ticket_number#1018L,ss_quantity#1019,ss_wholesale_cost#1020,ss_list_price#1021,ss_sales_price#1022,ss_ext_discount_amt#1023,ss_ext_sales_price#1024,ss_ext_wholesale_cost#1025,ss_ext_list_price#1026,ss_ext_tax#1027,ss_coupon_amt#1028,ss_net_paid#1029,ss_net_paid_inc_tax#1030,ss_net_profit#1031,ss_sold_date_sk#1032] parquet\n      :     :     +- Project [t_time_sk#1038]\n      :     :        +- Filter (((isnotnull(t_hour#1041) AND isnotnull(t_minute#1042)) AND ((t_hour#1041 = 12) AND (t_minute#1042 < 30))) AND isnotnull(t_time_sk#1038))\n      :     :           +- Relation spark_catalog.tpcds_100.time_dim[t_time_sk#1038,t_time_id#1039,t_time#1040,t_hour#1041,t_minute#1042,t_second#1043,t_am_pm#1044,t_shift#1045,t_sub_shift#1046,t_meal_time#1047] parquet\n      :     +- Project [hd_demo_sk#1033]\n      :        +- Filter (((((hd_dep_count#1036 = 3) AND (hd_vehicle_count#1037 <= 5)) OR ((hd_dep_count#1036 = 0) AND (hd_vehicle_count#1037 <= 2))) OR ((hd_dep_count#1036 = 1) AND (hd_vehicle_count#1037 <= 3))) AND isnotnull(hd_demo_sk#1033))\n      :           +- Relation spark_catalog.tpcds_100.household_demographics[hd_demo_sk#1033,hd_income_band_sk#1034,hd_buy_potential#1035,hd_dep_count#1036,hd_vehicle_count#1037] parquet\n      +- Project [s_store_sk#1048]\n         +- Filter ((isnotnull(s_store_name#1053) AND (s_store_name#1053 = ese)) AND isnotnull(s_store_sk#1048))\n            +- Relation spark_catalog.tpcds_100.store[s_store_sk#1048,s_store_id#1049,s_rec_start_date#1050,s_rec_end_date#1051,s_closed_date_sk#1052,s_store_name#1053,s_number_employees#1054,s_floor_space#1055,s_hours#1056,s_manager#1057,s_market_id#1058,s_geography_class#1059,s_market_desc#1060,s_market_manager#1061,s_division_id#1062,s_division_name#1063,s_company_id#1064,s_company_name#1065,s_street_number#1066,s_street_name#1067,s_street_type#1068,s_suite_number#1069,s_city#1070,s_county#1071,... 5 more fields] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "12" : {
            "sign" : 523252329,
            "className" : "org.apache.spark.sql.execution.adaptive.BroadcastQueryStageExec",
            "sizeInBytes" : 1051712,
            "rowCount" : 47,
            "isRuntime" : true,
            "predicate" : " (unknown) BroadcastQueryStage Output [1]: [s_store_sk#1048] Arguments: 37 "
          },
          "8" : {
            "sign" : 1787563859,
            "className" : "org.apache.spark.sql.execution.FilterExec",
            "sizeInBytes" : 5017105940,
            "rowCount" : 250855297,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Input [4]: [ss_sold_time_sk#1010, ss_hdemo_sk#1014, ss_store_sk#1016, ss_sold_date_sk#1032] Condition : ((isnotnull(ss_hdemo_sk#1014) AND isnotnull(ss_sold_time_sk#1010)) AND isnotnull(ss_store_sk#1016)) "
          },
          "4" : {
            "sign" : 1265078038,
            "className" : "org.apache.spark.sql.execution.joins.BroadcastHashJoinExec",
            "sizeInBytes" : 5432612500,
            "rowCount" : 271630625,
            "isRuntime" : false,
            "predicate" : " (unknown) BroadcastHashJoin Left keys [1]: [ss_hdemo_sk#1014] Right keys [1]: [hd_demo_sk#1033] Join type: Inner Join condition: None "
          },
          "11" : {
            "sign" : -156916101,
            "className" : "org.apache.spark.sql.execution.adaptive.BroadcastQueryStageExec",
            "sizeInBytes" : 1106176,
            "rowCount" : 1800,
            "isRuntime" : true,
            "predicate" : " (unknown) BroadcastQueryStage Output [1]: [hd_demo_sk#1033] Arguments: 35 "
          },
          "9" : {
            "sign" : -1908274911,
            "className" : "org.apache.spark.sql.execution.FileSourceScanExec",
            "sizeInBytes" : 5017105940,
            "rowCount" : 250855297,
            "isRuntime" : false,
            "predicate" : " (unknown) Scan parquet spark_catalog.tpcds_100.store_sales Output [4]: [ss_sold_time_sk#1010, ss_hdemo_sk#1014, ss_store_sk#1016, ss_sold_date_sk#1032] Batched: true Location: CatalogFileIndex [hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/store_sales] PushedFilters: [IsNotNull(ss_hdemo_sk), IsNotNull(ss_sold_time_sk), IsNotNull(ss_store_sk)] ReadSchema: struct<ss_sold_time_sk:int,ss_hdemo_sk:int,ss_store_sk:int> "
          },
          "5" : {
            "sign" : -1124530513,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 4332576176,
            "rowCount" : 270786011,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [2]: [ss_hdemo_sk#1014, ss_store_sk#1016] Input [4]: [ss_sold_time_sk#1010, ss_hdemo_sk#1014, ss_store_sk#1016, t_time_sk#1038] "
          },
          "10" : {
            "sign" : -1685228781,
            "className" : "org.apache.spark.sql.execution.adaptive.BroadcastQueryStageExec",
            "sizeInBytes" : 1062976,
            "rowCount" : 1800,
            "isRuntime" : true,
            "predicate" : " (unknown) BroadcastQueryStage Output [1]: [t_time_sk#1038] Arguments: 33 "
          },
          "6" : {
            "sign" : 634931432,
            "className" : "org.apache.spark.sql.execution.joins.BroadcastHashJoinExec",
            "sizeInBytes" : 6498864264,
            "rowCount" : 270786011,
            "isRuntime" : false,
            "predicate" : " (unknown) BroadcastHashJoin Left keys [1]: [ss_sold_time_sk#1010] Right keys [1]: [t_time_sk#1038] Join type: Inner Join condition: None "
          },
          "1" : {
            "sign" : 1313323610,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 4622824312,
            "rowCount" : 577853039,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output: [] Input [2]: [ss_store_sk#1016, s_store_sk#1048] "
          },
          "0" : {
            "sign" : -455690704,
            "className" : "org.apache.spark.sql.execution.aggregate.HashAggregateExec",
            "sizeInBytes" : 16,
            "rowCount" : 1,
            "isRuntime" : false,
            "predicate" : " (unknown) HashAggregate Input: [] Keys: [] Functions [1]: [partial_count(1)] Aggregate Attributes [1]: [count#1127L] Results [1]: [count#1128L] "
          },
          "2" : {
            "sign" : 491317217,
            "className" : "org.apache.spark.sql.execution.joins.BroadcastHashJoinExec",
            "sizeInBytes" : 9245648624,
            "rowCount" : 577853039,
            "isRuntime" : false,
            "predicate" : " (unknown) BroadcastHashJoin Left keys [1]: [ss_store_sk#1016] Right keys [1]: [s_store_sk#1048] Join type: Inner Join condition: None "
          },
          "7" : {
            "sign" : -1021273403,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 5017105940,
            "rowCount" : 250855297,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [3]: [ss_sold_time_sk#1010, ss_hdemo_sk#1014, ss_store_sk#1016] Input [4]: [ss_sold_time_sk#1010, ss_hdemo_sk#1014, ss_store_sk#1016, ss_sold_date_sk#1032] "
          },
          "3" : {
            "sign" : 1481331119,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 3259567500,
            "rowCount" : 271630625,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [1]: [ss_store_sk#1016] Input [3]: [ss_hdemo_sk#1014, ss_store_sk#1016, hd_demo_sk#1033] "
          }
        },
        "links" : [ {
          "fromId" : 9,
          "fromName" : "Scan parquet spark_catalog.tpcds_100.store_sales",
          "toId" : 8,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "Filter",
          "toId" : 7,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Project",
          "toId" : 6,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "BroadcastQueryStage",
          "toId" : 6,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "BroadcastHashJoin",
          "toId" : 5,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Project",
          "toId" : 4,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "BroadcastQueryStage",
          "toId" : 4,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "BroadcastHashJoin",
          "toId" : 3,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Project",
          "toId" : 2,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 12,
          "fromName" : "BroadcastQueryStage",
          "toId" : 2,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "BroadcastHashJoin",
          "toId" : 1,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Project",
          "toId" : 0,
          "toName" : "HashAggregate",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "HashAggregate(keys=[], functions=[partial_count(1)], output=[count#1128L])\n+- Project\n   +- BroadcastHashJoin [ss_store_sk#1016], [s_store_sk#1048], Inner, BuildRight, false\n      :- Project [ss_store_sk#1016]\n      :  +- BroadcastHashJoin [ss_hdemo_sk#1014], [hd_demo_sk#1033], Inner, BuildRight, false\n      :     :- Project [ss_hdemo_sk#1014, ss_store_sk#1016]\n      :     :  +- BroadcastHashJoin [ss_sold_time_sk#1010], [t_time_sk#1038], Inner, BuildRight, false\n      :     :     :- Project [ss_sold_time_sk#1010, ss_hdemo_sk#1014, ss_store_sk#1016]\n      :     :     :  +- Filter ((isnotnull(ss_hdemo_sk#1014) AND isnotnull(ss_sold_time_sk#1010)) AND isnotnull(ss_store_sk#1016))\n      :     :     :     +- FileScan parquet spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#1010,ss_hdemo_sk#1014,ss_store_sk#1016,ss_sold_date_sk#1032] Batched: true, DataFilters: [isnotnull(ss_hdemo_sk#1014), isnotnull(ss_sold_time_sk#1010), isnotnull(ss_store_sk#1016)], Format: Parquet, Location: CatalogFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/store_sales], PartitionFilters: [], PushedFilters: [IsNotNull(ss_hdemo_sk), IsNotNull(ss_sold_time_sk), IsNotNull(ss_store_sk)], ReadSchema: struct<ss_sold_time_sk:int,ss_hdemo_sk:int,ss_store_sk:int>\n      :     :     +- BroadcastQueryStage 33\n      :     :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=1500]\n      :     :           +- *(22) Project [t_time_sk#1038]\n      :     :              +- *(22) Filter ((((isnotnull(t_hour#1041) AND isnotnull(t_minute#1042)) AND (t_hour#1041 = 12)) AND (t_minute#1042 < 30)) AND isnotnull(t_time_sk#1038))\n      :     :                 +- *(22) ColumnarToRow\n      :     :                    +- FileScan parquet spark_catalog.tpcds_100.time_dim[t_time_sk#1038,t_hour#1041,t_minute#1042] Batched: true, DataFilters: [isnotnull(t_hour#1041), isnotnull(t_minute#1042), (t_hour#1041 = 12), (t_minute#1042 < 30), isno..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/time_dim], PartitionFilters: [], PushedFilters: [IsNotNull(t_hour), IsNotNull(t_minute), EqualTo(t_hour,12), LessThan(t_minute,30), IsNotNull(t_t..., ReadSchema: struct<t_time_sk:int,t_hour:int,t_minute:int>\n      :     +- BroadcastQueryStage 35\n      :        +- ReusedExchange [hd_demo_sk#1033], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=743]\n      +- BroadcastQueryStage 37\n         +- ReusedExchange [s_store_sk#1048], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=764]\n"
      },
      "IM" : {
        "inputSizeInBytes" : 5020326804,
        "inputRowCount" : 250858944
      },
      "InitialPartitionNum" : 0,
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 2,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 14,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 15 ],
      "Objectives" : {
        "DurationInMs" : 18415,
        "TotalTasksDurationInMs" : 39535,
        "IOBytes" : {
          "Total" : 480112747,
          "Details" : {
            "IR" : 480103249,
            "IW" : 0,
            "SR" : 0,
            "SW" : 9498
          }
        }
      }
    },
    "0" : {
      "QSLogical" : {
        "operators" : {
          "0" : {
            "sign" : 1788005933,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 24492,
                "rowCount" : 2041
              },
              "compileTime" : {
                "sizeInBytes" : 24492,
                "rowCount" : 2041
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [t_time_sk#44] "
          },
          "1" : {
            "sign" : -1389937556,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 257166,
                "rowCount" : 2041
              },
              "compileTime" : {
                "sizeInBytes" : 257166,
                "rowCount" : 2041
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(t_hour#47) AND isnotnull(t_minute#48)) AND ((t_hour#47 = 8) AND (t_minute#48 >= 30))) AND isnotnull(t_time_sk#44)) "
          },
          "2" : {
            "sign" : 2106910510,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 10886400,
                "rowCount" : 86400
              },
              "compileTime" : {
                "sizeInBytes" : 10886400,
                "rowCount" : 86400
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [t_time_sk#44, t_time_id#45, t_time#46, t_hour#47, t_minute#48, t_second#49, t_am_pm#50, t_shift#51, t_sub_shift#52, t_meal_time#53], `spark_catalog`.`tpcds_100`.`time_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "LogicalRelation",
          "toId" : 1,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Filter",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [t_time_sk#44]\n+- Filter (((isnotnull(t_hour#47) AND isnotnull(t_minute#48)) AND ((t_hour#47 = 8) AND (t_minute#48 >= 30))) AND isnotnull(t_time_sk#44))\n   +- Relation spark_catalog.tpcds_100.time_dim[t_time_sk#44,t_time_id#45,t_time#46,t_hour#47,t_minute#48,t_second#49,t_am_pm#50,t_shift#51,t_sub_shift#52,t_meal_time#53] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "0" : {
            "sign" : 1335062842,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 24492,
            "rowCount" : 2041,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [1]: [t_time_sk#44] Input [3]: [t_time_sk#44, t_hour#47, t_minute#48] "
          },
          "1" : {
            "sign" : -463528591,
            "className" : "org.apache.spark.sql.execution.FilterExec",
            "sizeInBytes" : 24492,
            "rowCount" : 2041,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Input [3]: [t_time_sk#44, t_hour#47, t_minute#48] Condition : ((((isnotnull(t_hour#47) AND isnotnull(t_minute#48)) AND (t_hour#47 = 8)) AND (t_minute#48 >= 30)) AND isnotnull(t_time_sk#44)) "
          },
          "2" : {
            "sign" : -833854121,
            "className" : "org.apache.spark.sql.execution.FileSourceScanExec",
            "sizeInBytes" : 24492,
            "rowCount" : 2041,
            "isRuntime" : false,
            "predicate" : " (unknown) Scan parquet spark_catalog.tpcds_100.time_dim Output [3]: [t_time_sk#44, t_hour#47, t_minute#48] Batched: true Location: InMemoryFileIndex [hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/time_dim] PushedFilters: [IsNotNull(t_hour), IsNotNull(t_minute), EqualTo(t_hour,8), GreaterThanOrEqual(t_minute,30), IsNotNull(t_time_sk)] ReadSchema: struct<t_time_sk:int,t_hour:int,t_minute:int> "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "Scan parquet spark_catalog.tpcds_100.time_dim",
          "toId" : 1,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Filter",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [t_time_sk#44]\n+- Filter ((((isnotnull(t_hour#47) AND isnotnull(t_minute#48)) AND (t_hour#47 = 8)) AND (t_minute#48 >= 30)) AND isnotnull(t_time_sk#44))\n   +- FileScan parquet spark_catalog.tpcds_100.time_dim[t_time_sk#44,t_hour#47,t_minute#48] Batched: true, DataFilters: [isnotnull(t_hour#47), isnotnull(t_minute#48), (t_hour#47 = 8), (t_minute#48 >= 30), isnotnull(t_..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/time_dim], PartitionFilters: [], PushedFilters: [IsNotNull(t_hour), IsNotNull(t_minute), EqualTo(t_hour,8), GreaterThanOrEqual(t_minute,30), IsNo..., ReadSchema: struct<t_time_sk:int,t_hour:int,t_minute:int>\n"
      },
      "IM" : {
        "inputSizeInBytes" : 24492,
        "inputRowCount" : 2041
      },
      "InitialPartitionNum" : 0,
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 0,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 0 ],
      "Objectives" : {
        "DurationInMs" : 3543,
        "TotalTasksDurationInMs" : 3489,
        "IOBytes" : {
          "Total" : 85728,
          "Details" : {
            "IR" : 85728,
            "IW" : 0,
            "SR" : 0,
            "SW" : 0
          }
        }
      }
    },
    "20" : {
      "QSLogical" : {
        "operators" : {
          "0" : {
            "sign" : 403683700,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 2576,
                "rowCount" : 161
              },
              "compileTime" : {
                "sizeInBytes" : 16,
                "rowCount" : 1
              }
            },
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [count(1) AS h11_30_to_12#598L], HashAggregate(keys=[], functions=[count(1)]) "
          }
        },
        "links" : [ ],
        "rawPlan" : "LogicalQueryStage Aggregate [count(1) AS h11_30_to_12#598L], HashAggregate(keys=[], functions=[count(1)])\n"
      },
      "QSPhysical" : {
        "operators" : {
          "0" : {
            "sign" : 1001142794,
            "className" : "org.apache.spark.sql.execution.aggregate.HashAggregateExec",
            "sizeInBytes" : 2576,
            "rowCount" : 161,
            "isRuntime" : true,
            "predicate" : " (unknown) HashAggregate Input [1]: [count#1126L] Keys: [] Functions [1]: [count(1)] Aggregate Attributes [1]: [count(1)#606L] Results [1]: [count(1)#606L AS h11_30_to_12#598L] "
          },
          "1" : {
            "sign" : 146971881,
            "className" : "org.apache.spark.sql.execution.adaptive.ShuffleQueryStageExec",
            "sizeInBytes" : 16,
            "rowCount" : 1,
            "isRuntime" : false,
            "predicate" : " (unknown) ShuffleQueryStage Output [1]: [count#1126L] Arguments: 41 "
          }
        },
        "links" : [ {
          "fromId" : 1,
          "fromName" : "ShuffleQueryStage",
          "toId" : 0,
          "toName" : "HashAggregate",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "HashAggregate(keys=[], functions=[count(1)], output=[h11_30_to_12#598L])\n+- ShuffleQueryStage 41\n   +- Exchange SinglePartition, ENSURE_REQUIREMENTS, [plan_id=2547]\n      +- *(28) HashAggregate(keys=[], functions=[partial_count(1)], output=[count#1126L])\n         +- *(28) Project\n            +- *(28) BroadcastHashJoin [ss_store_sk#949], [s_store_sk#981], Inner, BuildRight, false\n               :- *(28) Project [ss_store_sk#949]\n               :  +- *(28) BroadcastHashJoin [ss_hdemo_sk#947], [hd_demo_sk#966], Inner, BuildRight, false\n               :     :- *(28) Project [ss_hdemo_sk#947, ss_store_sk#949]\n               :     :  +- *(28) BroadcastHashJoin [ss_sold_time_sk#943], [t_time_sk#971], Inner, BuildRight, false\n               :     :     :- *(28) Project [ss_sold_time_sk#943, ss_hdemo_sk#947, ss_store_sk#949]\n               :     :     :  +- *(28) Filter ((isnotnull(ss_hdemo_sk#947) AND isnotnull(ss_sold_time_sk#943)) AND isnotnull(ss_store_sk#949))\n               :     :     :     +- *(28) ColumnarToRow\n               :     :     :        +- FileScan parquet spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#943,ss_hdemo_sk#947,ss_store_sk#949,ss_sold_date_sk#965] Batched: true, DataFilters: [isnotnull(ss_hdemo_sk#947), isnotnull(ss_sold_time_sk#943), isnotnull(ss_store_sk#949)], Format: Parquet, Location: CatalogFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/store_sales], PartitionFilters: [], PushedFilters: [IsNotNull(ss_hdemo_sk), IsNotNull(ss_sold_time_sk), IsNotNull(ss_store_sk)], ReadSchema: struct<ss_sold_time_sk:int,ss_hdemo_sk:int,ss_store_sk:int>\n               :     :     +- BroadcastQueryStage 28\n               :     :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=1388]\n               :     :           +- *(19) Project [t_time_sk#971]\n               :     :              +- *(19) Filter ((((isnotnull(t_hour#974) AND isnotnull(t_minute#975)) AND (t_hour#974 = 11)) AND (t_minute#975 >= 30)) AND isnotnull(t_time_sk#971))\n               :     :                 +- *(19) ColumnarToRow\n               :     :                    +- FileScan parquet spark_catalog.tpcds_100.time_dim[t_time_sk#971,t_hour#974,t_minute#975] Batched: true, DataFilters: [isnotnull(t_hour#974), isnotnull(t_minute#975), (t_hour#974 = 11), (t_minute#975 >= 30), isnotnu..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/time_dim], PartitionFilters: [], PushedFilters: [IsNotNull(t_hour), IsNotNull(t_minute), EqualTo(t_hour,11), GreaterThanOrEqual(t_minute,30), IsN..., ReadSchema: struct<t_time_sk:int,t_hour:int,t_minute:int>\n               :     +- BroadcastQueryStage 30\n               :        +- ReusedExchange [hd_demo_sk#966], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=743]\n               +- BroadcastQueryStage 32\n                  +- ReusedExchange [s_store_sk#981], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=764]\n"
      },
      "IM" : {
        "inputSizeInBytes" : 2576,
        "inputRowCount" : 161
      },
      "InitialPartitionNum" : 1,
      "PD" : {
        "3" : [ 9660 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 16,
        "FinishedTasksNum" : 5,
        "FinishedTasksTotalTimeInMs" : 1549.0,
        "FinishedTasksDistributionInMs" : [ 263.0, 286.0, 300.0, 337.0, 363.0 ]
      },
      "QueryStageOptimizationId" : 20,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 24 ],
      "Objectives" : {
        "DurationInMs" : 12726,
        "TotalTasksDurationInMs" : 246,
        "IOBytes" : {
          "Total" : 9497,
          "Details" : {
            "IR" : 0,
            "IW" : 0,
            "SR" : 9497,
            "SW" : 0
          }
        }
      }
    },
    "2" : {
      "QSLogical" : {
        "operators" : {
          "0" : {
            "sign" : -1314060470,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 492,
                "rowCount" : 41
              },
              "compileTime" : {
                "sizeInBytes" : 492,
                "rowCount" : 41
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [s_store_sk#54] "
          },
          "1" : {
            "sign" : 832786107,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 19639,
                "rowCount" : 41
              },
              "compileTime" : {
                "sizeInBytes" : 19639,
                "rowCount" : 41
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(s_store_name#59) AND (s_store_name#59 = ese)) AND isnotnull(s_store_sk#54)) "
          },
          "2" : {
            "sign" : -1663611938,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 192558,
                "rowCount" : 402
              },
              "compileTime" : {
                "sizeInBytes" : 192558,
                "rowCount" : 402
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [s_store_sk#54, s_store_id#55, s_rec_start_date#56, s_rec_end_date#57, s_closed_date_sk#58, s_store_name#59, s_number_employees#60, s_floor_space#61, s_hours#62, s_manager#63, s_market_id#64, s_geography_class#65, s_market_desc#66, s_market_manager#67, s_division_id#68, s_division_name#69, s_company_id#70, s_company_name#71, s_street_number#72, s_street_name#73, s_street_type#74, s_suite_number#75, s_city#76, s_county#77, ... 5 more fields], `spark_catalog`.`tpcds_100`.`store`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "LogicalRelation",
          "toId" : 1,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Filter",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [s_store_sk#54]\n+- Filter ((isnotnull(s_store_name#59) AND (s_store_name#59 = ese)) AND isnotnull(s_store_sk#54))\n   +- Relation spark_catalog.tpcds_100.store[s_store_sk#54,s_store_id#55,s_rec_start_date#56,s_rec_end_date#57,s_closed_date_sk#58,s_store_name#59,s_number_employees#60,s_floor_space#61,s_hours#62,s_manager#63,s_market_id#64,s_geography_class#65,s_market_desc#66,s_market_manager#67,s_division_id#68,s_division_name#69,s_company_id#70,s_company_name#71,s_street_number#72,s_street_name#73,s_street_type#74,s_suite_number#75,s_city#76,s_county#77,... 5 more fields] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "0" : {
            "sign" : 1845328362,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 492,
            "rowCount" : 41,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [1]: [s_store_sk#54] Input [2]: [s_store_sk#54, s_store_name#59] "
          },
          "1" : {
            "sign" : 1268195291,
            "className" : "org.apache.spark.sql.execution.FilterExec",
            "sizeInBytes" : 492,
            "rowCount" : 41,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Input [2]: [s_store_sk#54, s_store_name#59] Condition : ((isnotnull(s_store_name#59) AND (s_store_name#59 = ese)) AND isnotnull(s_store_sk#54)) "
          },
          "2" : {
            "sign" : -1683914626,
            "className" : "org.apache.spark.sql.execution.FileSourceScanExec",
            "sizeInBytes" : 492,
            "rowCount" : 41,
            "isRuntime" : false,
            "predicate" : " (unknown) Scan parquet spark_catalog.tpcds_100.store Output [2]: [s_store_sk#54, s_store_name#59] Batched: true Location: InMemoryFileIndex [hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/store] PushedFilters: [IsNotNull(s_store_name), EqualTo(s_store_name,ese), IsNotNull(s_store_sk)] ReadSchema: struct<s_store_sk:int,s_store_name:string> "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "Scan parquet spark_catalog.tpcds_100.store",
          "toId" : 1,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Filter",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [s_store_sk#54]\n+- Filter ((isnotnull(s_store_name#59) AND (s_store_name#59 = ese)) AND isnotnull(s_store_sk#54))\n   +- FileScan parquet spark_catalog.tpcds_100.store[s_store_sk#54,s_store_name#59] Batched: true, DataFilters: [isnotnull(s_store_name#59), (s_store_name#59 = ese), isnotnull(s_store_sk#54)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/store], PartitionFilters: [], PushedFilters: [IsNotNull(s_store_name), EqualTo(s_store_name,ese), IsNotNull(s_store_sk)], ReadSchema: struct<s_store_sk:int,s_store_name:string>\n"
      },
      "IM" : {
        "inputSizeInBytes" : 492,
        "inputRowCount" : 41
      },
      "InitialPartitionNum" : 0,
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 2,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 6 ],
      "Objectives" : {
        "DurationInMs" : 3015,
        "TotalTasksDurationInMs" : 3003,
        "IOBytes" : {
          "Total" : 14470,
          "Details" : {
            "IR" : 14470,
            "IW" : 0,
            "SR" : 0,
            "SW" : 0
          }
        }
      }
    },
    "18" : {
      "QSLogical" : {
        "operators" : {
          "0" : {
            "sign" : -279950413,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 2576,
                "rowCount" : 161
              },
              "compileTime" : {
                "sizeInBytes" : 16,
                "rowCount" : 1
              }
            },
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [count(1) AS h9_30_to_10#594L], HashAggregate(keys=[], functions=[count(1)]) "
          }
        },
        "links" : [ ],
        "rawPlan" : "LogicalQueryStage Aggregate [count(1) AS h9_30_to_10#594L], HashAggregate(keys=[], functions=[count(1)])\n"
      },
      "QSPhysical" : {
        "operators" : {
          "0" : {
            "sign" : 245040032,
            "className" : "org.apache.spark.sql.execution.aggregate.HashAggregateExec",
            "sizeInBytes" : 2576,
            "rowCount" : 161,
            "isRuntime" : true,
            "predicate" : " (unknown) HashAggregate Input [1]: [count#1118L] Keys: [] Functions [1]: [count(1)] Aggregate Attributes [1]: [count(1)#602L] Results [1]: [count(1)#602L AS h9_30_to_10#594L] "
          },
          "1" : {
            "sign" : -749143190,
            "className" : "org.apache.spark.sql.execution.adaptive.ShuffleQueryStageExec",
            "sizeInBytes" : 16,
            "rowCount" : 1,
            "isRuntime" : false,
            "predicate" : " (unknown) ShuffleQueryStage Output [1]: [count#1118L] Arguments: 39 "
          }
        },
        "links" : [ {
          "fromId" : 1,
          "fromName" : "ShuffleQueryStage",
          "toId" : 0,
          "toName" : "HashAggregate",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "HashAggregate(keys=[], functions=[count(1)], output=[h9_30_to_10#594L])\n+- ShuffleQueryStage 39\n   +- Exchange SinglePartition, ENSURE_REQUIREMENTS, [plan_id=2435]\n      +- *(26) HashAggregate(keys=[], functions=[partial_count(1)], output=[count#1118L])\n         +- *(26) Project\n            +- *(26) BroadcastHashJoin [ss_store_sk#681], [s_store_sk#713], Inner, BuildRight, false\n               :- *(26) Project [ss_store_sk#681]\n               :  +- *(26) BroadcastHashJoin [ss_hdemo_sk#679], [hd_demo_sk#698], Inner, BuildRight, false\n               :     :- *(26) Project [ss_hdemo_sk#679, ss_store_sk#681]\n               :     :  +- *(26) BroadcastHashJoin [ss_sold_time_sk#675], [t_time_sk#703], Inner, BuildRight, false\n               :     :     :- *(26) Project [ss_sold_time_sk#675, ss_hdemo_sk#679, ss_store_sk#681]\n               :     :     :  +- *(26) Filter ((isnotnull(ss_hdemo_sk#679) AND isnotnull(ss_sold_time_sk#675)) AND isnotnull(ss_store_sk#681))\n               :     :     :     +- *(26) ColumnarToRow\n               :     :     :        +- FileScan parquet spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#675,ss_hdemo_sk#679,ss_store_sk#681,ss_sold_date_sk#697] Batched: true, DataFilters: [isnotnull(ss_hdemo_sk#679), isnotnull(ss_sold_time_sk#675), isnotnull(ss_store_sk#681)], Format: Parquet, Location: CatalogFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/store_sales], PartitionFilters: [], PushedFilters: [IsNotNull(ss_hdemo_sk), IsNotNull(ss_sold_time_sk), IsNotNull(ss_store_sk)], ReadSchema: struct<ss_sold_time_sk:int,ss_hdemo_sk:int,ss_store_sk:int>\n               :     :     +- BroadcastQueryStage 8\n               :     :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=940]\n               :     :           +- *(7) Project [t_time_sk#703]\n               :     :              +- *(7) Filter ((((isnotnull(t_hour#706) AND isnotnull(t_minute#707)) AND (t_hour#706 = 9)) AND (t_minute#707 >= 30)) AND isnotnull(t_time_sk#703))\n               :     :                 +- *(7) ColumnarToRow\n               :     :                    +- FileScan parquet spark_catalog.tpcds_100.time_dim[t_time_sk#703,t_hour#706,t_minute#707] Batched: true, DataFilters: [isnotnull(t_hour#706), isnotnull(t_minute#707), (t_hour#706 = 9), (t_minute#707 >= 30), isnotnul..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/time_dim], PartitionFilters: [], PushedFilters: [IsNotNull(t_hour), IsNotNull(t_minute), EqualTo(t_hour,9), GreaterThanOrEqual(t_minute,30), IsNo..., ReadSchema: struct<t_time_sk:int,t_hour:int,t_minute:int>\n               :     +- BroadcastQueryStage 10\n               :        +- ReusedExchange [hd_demo_sk#698], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=743]\n               +- BroadcastQueryStage 12\n                  +- ReusedExchange [s_store_sk#713], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=764]\n"
      },
      "IM" : {
        "inputSizeInBytes" : 2576,
        "inputRowCount" : 161
      },
      "InitialPartitionNum" : 1,
      "PD" : {
        "1" : [ 9660 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 17,
        "FinishedTasksNum" : 83,
        "FinishedTasksTotalTimeInMs" : 27822.0,
        "FinishedTasksDistributionInMs" : [ 155.0, 201.0, 225.0, 306.0, 2017.0 ]
      },
      "QueryStageOptimizationId" : 18,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 20 ],
      "Objectives" : {
        "DurationInMs" : 17406,
        "TotalTasksDurationInMs" : 190,
        "IOBytes" : {
          "Total" : 9498,
          "Details" : {
            "IR" : 0,
            "IW" : 0,
            "SR" : 9498,
            "SW" : 0
          }
        }
      }
    },
    "7" : {
      "QSLogical" : {
        "operators" : {
          "0" : {
            "sign" : 1899946046,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 24696,
                "rowCount" : 2058
              },
              "compileTime" : {
                "sizeInBytes" : 24696,
                "rowCount" : 2058
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [t_time_sk#904] "
          },
          "1" : {
            "sign" : 733693346,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 259308,
                "rowCount" : 2058
              },
              "compileTime" : {
                "sizeInBytes" : 259308,
                "rowCount" : 2058
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(t_hour#907) AND isnotnull(t_minute#908)) AND ((t_hour#907 = 11) AND (t_minute#908 < 30))) AND isnotnull(t_time_sk#904)) "
          },
          "2" : {
            "sign" : -82321964,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 10886400,
                "rowCount" : 86400
              },
              "compileTime" : {
                "sizeInBytes" : 10886400,
                "rowCount" : 86400
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [t_time_sk#904, t_time_id#905, t_time#906, t_hour#907, t_minute#908, t_second#909, t_am_pm#910, t_shift#911, t_sub_shift#912, t_meal_time#913], `spark_catalog`.`tpcds_100`.`time_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "LogicalRelation",
          "toId" : 1,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Filter",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [t_time_sk#904]\n+- Filter (((isnotnull(t_hour#907) AND isnotnull(t_minute#908)) AND ((t_hour#907 = 11) AND (t_minute#908 < 30))) AND isnotnull(t_time_sk#904))\n   +- Relation spark_catalog.tpcds_100.time_dim[t_time_sk#904,t_time_id#905,t_time#906,t_hour#907,t_minute#908,t_second#909,t_am_pm#910,t_shift#911,t_sub_shift#912,t_meal_time#913] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "0" : {
            "sign" : -675811240,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 24696,
            "rowCount" : 2058,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [1]: [t_time_sk#904] Input [3]: [t_time_sk#904, t_hour#907, t_minute#908] "
          },
          "1" : {
            "sign" : -505452092,
            "className" : "org.apache.spark.sql.execution.FilterExec",
            "sizeInBytes" : 24696,
            "rowCount" : 2058,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Input [3]: [t_time_sk#904, t_hour#907, t_minute#908] Condition : ((((isnotnull(t_hour#907) AND isnotnull(t_minute#908)) AND (t_hour#907 = 11)) AND (t_minute#908 < 30)) AND isnotnull(t_time_sk#904)) "
          },
          "2" : {
            "sign" : 1007985194,
            "className" : "org.apache.spark.sql.execution.FileSourceScanExec",
            "sizeInBytes" : 24696,
            "rowCount" : 2058,
            "isRuntime" : false,
            "predicate" : " (unknown) Scan parquet spark_catalog.tpcds_100.time_dim Output [3]: [t_time_sk#904, t_hour#907, t_minute#908] Batched: true Location: InMemoryFileIndex [hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/time_dim] PushedFilters: [IsNotNull(t_hour), IsNotNull(t_minute), EqualTo(t_hour,11), LessThan(t_minute,30), IsNotNull(t_time_sk)] ReadSchema: struct<t_time_sk:int,t_hour:int,t_minute:int> "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "Scan parquet spark_catalog.tpcds_100.time_dim",
          "toId" : 1,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Filter",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [t_time_sk#904]\n+- Filter ((((isnotnull(t_hour#907) AND isnotnull(t_minute#908)) AND (t_hour#907 = 11)) AND (t_minute#908 < 30)) AND isnotnull(t_time_sk#904))\n   +- FileScan parquet spark_catalog.tpcds_100.time_dim[t_time_sk#904,t_hour#907,t_minute#908] Batched: true, DataFilters: [isnotnull(t_hour#907), isnotnull(t_minute#908), (t_hour#907 = 11), (t_minute#908 < 30), isnotnul..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/time_dim], PartitionFilters: [], PushedFilters: [IsNotNull(t_hour), IsNotNull(t_minute), EqualTo(t_hour,11), LessThan(t_minute,30), IsNotNull(t_t..., ReadSchema: struct<t_time_sk:int,t_hour:int,t_minute:int>\n"
      },
      "IM" : {
        "inputSizeInBytes" : 24696,
        "inputRowCount" : 2058
      },
      "InitialPartitionNum" : 0,
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 7,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 7 ],
      "Objectives" : {
        "DurationInMs" : 3163,
        "TotalTasksDurationInMs" : 3158,
        "IOBytes" : {
          "Total" : 85728,
          "Details" : {
            "IR" : 85728,
            "IW" : 0,
            "SR" : 0,
            "SW" : 0
          }
        }
      }
    },
    "3" : {
      "QSLogical" : {
        "operators" : {
          "0" : {
            "sign" : -604440907,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 22632,
                "rowCount" : 1886
              },
              "compileTime" : {
                "sizeInBytes" : 22632,
                "rowCount" : 1886
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [t_time_sk#636] "
          },
          "1" : {
            "sign" : 1941244759,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 237636,
                "rowCount" : 1886
              },
              "compileTime" : {
                "sizeInBytes" : 237636,
                "rowCount" : 1886
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(t_hour#639) AND isnotnull(t_minute#640)) AND ((t_hour#639 = 9) AND (t_minute#640 < 30))) AND isnotnull(t_time_sk#636)) "
          },
          "2" : {
            "sign" : -1558391396,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 10886400,
                "rowCount" : 86400
              },
              "compileTime" : {
                "sizeInBytes" : 10886400,
                "rowCount" : 86400
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [t_time_sk#636, t_time_id#637, t_time#638, t_hour#639, t_minute#640, t_second#641, t_am_pm#642, t_shift#643, t_sub_shift#644, t_meal_time#645], `spark_catalog`.`tpcds_100`.`time_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "LogicalRelation",
          "toId" : 1,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Filter",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [t_time_sk#636]\n+- Filter (((isnotnull(t_hour#639) AND isnotnull(t_minute#640)) AND ((t_hour#639 = 9) AND (t_minute#640 < 30))) AND isnotnull(t_time_sk#636))\n   +- Relation spark_catalog.tpcds_100.time_dim[t_time_sk#636,t_time_id#637,t_time#638,t_hour#639,t_minute#640,t_second#641,t_am_pm#642,t_shift#643,t_sub_shift#644,t_meal_time#645] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "0" : {
            "sign" : -1978131619,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 22632,
            "rowCount" : 1886,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [1]: [t_time_sk#636] Input [3]: [t_time_sk#636, t_hour#639, t_minute#640] "
          },
          "1" : {
            "sign" : -1825257709,
            "className" : "org.apache.spark.sql.execution.FilterExec",
            "sizeInBytes" : 22632,
            "rowCount" : 1886,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Input [3]: [t_time_sk#636, t_hour#639, t_minute#640] Condition : ((((isnotnull(t_hour#639) AND isnotnull(t_minute#640)) AND (t_hour#639 = 9)) AND (t_minute#640 < 30)) AND isnotnull(t_time_sk#636)) "
          },
          "2" : {
            "sign" : -2084221534,
            "className" : "org.apache.spark.sql.execution.FileSourceScanExec",
            "sizeInBytes" : 22632,
            "rowCount" : 1886,
            "isRuntime" : false,
            "predicate" : " (unknown) Scan parquet spark_catalog.tpcds_100.time_dim Output [3]: [t_time_sk#636, t_hour#639, t_minute#640] Batched: true Location: InMemoryFileIndex [hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/time_dim] PushedFilters: [IsNotNull(t_hour), IsNotNull(t_minute), EqualTo(t_hour,9), LessThan(t_minute,30), IsNotNull(t_time_sk)] ReadSchema: struct<t_time_sk:int,t_hour:int,t_minute:int> "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "Scan parquet spark_catalog.tpcds_100.time_dim",
          "toId" : 1,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Filter",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [t_time_sk#636]\n+- Filter ((((isnotnull(t_hour#639) AND isnotnull(t_minute#640)) AND (t_hour#639 = 9)) AND (t_minute#640 < 30)) AND isnotnull(t_time_sk#636))\n   +- FileScan parquet spark_catalog.tpcds_100.time_dim[t_time_sk#636,t_hour#639,t_minute#640] Batched: true, DataFilters: [isnotnull(t_hour#639), isnotnull(t_minute#640), (t_hour#639 = 9), (t_minute#640 < 30), isnotnull..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/time_dim], PartitionFilters: [], PushedFilters: [IsNotNull(t_hour), IsNotNull(t_minute), EqualTo(t_hour,9), LessThan(t_minute,30), IsNotNull(t_ti..., ReadSchema: struct<t_time_sk:int,t_hour:int,t_minute:int>\n"
      },
      "IM" : {
        "inputSizeInBytes" : 22632,
        "inputRowCount" : 1886
      },
      "InitialPartitionNum" : 0,
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 3,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 1 ],
      "Objectives" : {
        "DurationInMs" : 3363,
        "TotalTasksDurationInMs" : 3325,
        "IOBytes" : {
          "Total" : 85728,
          "Details" : {
            "IR" : 85728,
            "IW" : 0,
            "SR" : 0,
            "SW" : 0
          }
        }
      }
    }
  },
  "SQLStartTimeInMs" : 1702227447183,
  "SQLEndTimeInMs" : 1702227487091,
  "Objectives" : {
    "DurationInMs" : 39908,
    "IOBytes" : {
      "Total" : 3841870613,
      "Details" : {
        "IR" : 3841718637,
        "IW" : 0,
        "SR" : 75988,
        "SW" : 75988
      }
    }
  }
}
