{
  "CompileTimeLQP" : {
    "LQP" : {
      "operators" : {
        "45" : {
          "sign" : -197427346,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 8160000,
          "rowCount" : 204000,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [i_item_sk#202, i_item_id#203] "
        },
        "34" : {
          "sign" : -433582503,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 4432520384,
          "rowCount" : 138516262,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: Inner, (cs_sold_date_sk#126 = d_date_sk#161) "
        },
        "67" : {
          "sign" : -923656987,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 8160000,
          "rowCount" : 204000,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: LeftSemi, (i_item_id#266 = i_item_id#333) "
        },
        "12" : {
          "sign" : -2018513313,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 7354676784,
          "rowCount" : 262667028,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [ss_item_sk#8, ss_addr_sk#12, ss_ext_sales_price#21, ss_sold_date_sk#29] "
        },
        "66" : {
          "sign" : -1038388340,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 246000000,
          "rowCount" : 1000000,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ca_address_sk#252, ca_address_id#253, ca_street_number#254, ca_street_name#255, ca_street_type#256, ca_suite_number#257, ca_city#258, ca_county#259, ca_state#260, ca_zip#261, ca_country#262, ca_gmt_offset#263, ca_location_type#264], `spark_catalog`.`tpcds_100`.`customer_address`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "51" : {
          "sign" : -666093042,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
          "sizeInBytes" : 4577848,
          "rowCount" : 104042,
          "isRuntime" : false,
          "predicate" : " (unknown) Aggregate Arguments: [i_item_id#266], [i_item_id#266, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#149)),17,2) AS total_sales#5] "
        },
        "8" : {
          "sign" : -217154000,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 5504661760,
          "rowCount" : 275233088,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [ss_item_sk#8, ss_ext_sales_price#21] "
        },
        "73" : {
          "sign" : 23213801,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 86904000,
          "rowCount" : 204000,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [i_item_sk#332, i_item_id#333, i_rec_start_date#334, i_rec_end_date#335, i_item_desc#336, i_current_price#337, i_wholesale_cost#338, i_brand_id#339, i_brand#340, i_class_id#341, i_class#342, i_category_id#343, i_category#344, i_manufact_id#345, i_manufact#346, i_size#347, i_formulation#348, i_color#349, i_units#350, i_container#351, i_manager_id#352, i_product_name#353], `spark_catalog`.`tpcds_100`.`item`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "19" : {
          "sign" : -1312455616,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 109927068,
          "rowCount" : 446858,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: ((isnotnull(ca_gmt_offset#69) AND (ca_gmt_offset#69 = -6.00)) AND isnotnull(ca_address_sk#58)) "
        },
        "23" : {
          "sign" : -1729853405,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 86904000,
          "rowCount" : 204000,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: isnotnull(i_item_sk#71) "
        },
        "62" : {
          "sign" : 1122587295,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 18450,
          "rowCount" : 75,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: (((isnotnull(d_year#230) AND isnotnull(d_moy#232)) AND ((d_year#230 = 1999) AND (d_moy#232 = 9))) AND isnotnull(d_date_sk#224)) "
        },
        "4" : {
          "sign" : -1823794452,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Union",
          "sizeInBytes" : 13733544,
          "rowCount" : 312126,
          "isRuntime" : false,
          "predicate" : " (unknown) Union Arguments: false, false "
        },
        "40" : {
          "sign" : -1082958336,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 17970054,
          "rowCount" : 73049,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#161, d_date_id#162, d_date#163, d_month_seq#164, d_week_seq#165, d_quarter_seq#166, d_year#167, d_dow#168, d_moy#169, d_dom#170, d_qoy#171, d_fy_year#172, d_fy_quarter_seq#173, d_fy_week_seq#174, d_day_name#175, d_quarter_name#176, d_holiday#177, d_weekend#178, d_following_holiday#179, d_first_dom#180, d_last_dom#181, d_same_day_ly#182, d_same_day_lq#183, d_current_day#184, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "15" : {
          "sign" : -337637781,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 900,
          "rowCount" : 75,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [d_date_sk#30] "
        },
        "11" : {
          "sign" : 1141913214,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 8497298720,
          "rowCount" : 265540585,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#29 = d_date_sk#30) "
        },
        "9" : {
          "sign" : 1431981218,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 7706526464,
          "rowCount" : 275233088,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: Inner, (ss_addr_sk#12 = ca_address_sk#58) "
        },
        "44" : {
          "sign" : 141371269,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 8160000,
          "rowCount" : 204000,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: LeftSemi, (i_item_id#203 = i_item_id#311) "
        },
        "33" : {
          "sign" : -891295008,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 3324390288,
          "rowCount" : 138516262,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [cs_bill_addr_sk#98, cs_item_sk#107, cs_ext_sales_price#115] "
        },
        "22" : {
          "sign" : -1934725616,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 8160000,
          "rowCount" : 204000,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [i_item_sk#71, i_item_id#72] "
        },
        "56" : {
          "sign" : 1763034367,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 1667894520,
          "rowCount" : 69495605,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [ws_item_sk#129, ws_bill_addr_sk#133, ws_ext_sales_price#149] "
        },
        "55" : {
          "sign" : -290999833,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 2015528872,
          "rowCount" : 71983174,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: Inner, (ws_bill_addr_sk#133 = ca_address_sk#252) "
        },
        "26" : {
          "sign" : 913117219,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 8669952,
          "rowCount" : 20352,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: (isnotnull(i_category#300) AND (i_category#300 = Children)) "
        },
        "50" : {
          "sign" : -1643866209,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 86904000,
          "rowCount" : 204000,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [i_item_sk#310, i_item_id#311, i_rec_start_date#312, i_rec_end_date#313, i_item_desc#314, i_current_price#315, i_wholesale_cost#316, i_brand_id#317, i_brand#318, i_class_id#319, i_class#320, i_category_id#321, i_category#322, i_manufact_id#323, i_manufact#324, i_size#325, i_formulation#326, i_color#327, i_units#328, i_container#329, i_manager_id#330, i_product_name#331], `spark_catalog`.`tpcds_100`.`item`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "37" : {
          "sign" : 899995805,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 29800787536,
          "rowCount" : 143273017,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [cs_sold_time_sk#93, cs_ship_date_sk#94, cs_bill_customer_sk#95, cs_bill_cdemo_sk#96, cs_bill_hdemo_sk#97, cs_bill_addr_sk#98, cs_ship_customer_sk#99, cs_ship_cdemo_sk#100, cs_ship_hdemo_sk#101, cs_ship_addr_sk#102, cs_call_center_sk#103, cs_catalog_page_sk#104, cs_ship_mode_sk#105, cs_warehouse_sk#106, cs_item_sk#107, cs_promo_sk#108, cs_order_number#109L, cs_quantity#110, cs_wholesale_cost#111, cs_list_price#112, cs_sales_price#113, cs_ext_discount_amt#114, cs_ext_sales_price#115, cs_ext_wholesale_cost#116, ... 10 more fields], `spark_catalog`.`tpcds_100`.`catalog_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "68" : {
          "sign" : 685675757,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 8160000,
          "rowCount" : 204000,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [i_item_sk#265, i_item_id#266] "
        },
        "61" : {
          "sign" : 1686670839,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 900,
          "rowCount" : 75,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [d_date_sk#224] "
        },
        "13" : {
          "sign" : 2140615979,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 39925388256,
          "rowCount" : 262667028,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: (((isnotnull(ss_sold_date_sk#29) AND isnotnull(ss_addr_sk#12)) AND isnotnull(ss_item_sk#8)) AND dynamicpruning#371 [ss_sold_date_sk#29]) "
        },
        "46" : {
          "sign" : 1034201051,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 86904000,
          "rowCount" : 204000,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: isnotnull(i_item_sk#202) "
        },
        "24" : {
          "sign" : 655949841,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 86904000,
          "rowCount" : 204000,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [i_item_sk#71, i_item_id#72, i_rec_start_date#73, i_rec_end_date#74, i_item_desc#75, i_current_price#76, i_wholesale_cost#77, i_brand_id#78, i_brand#79, i_class_id#80, i_class#81, i_category_id#82, i_category#83, i_manufact_id#84, i_manufact#85, i_size#86, i_formulation#87, i_color#88, i_units#89, i_container#90, i_manager_id#91, i_product_name#92], `spark_catalog`.`tpcds_100`.`item`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "35" : {
          "sign" : 143107177,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 3991556324,
          "rowCount" : 142555583,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [cs_bill_addr_sk#98, cs_item_sk#107, cs_ext_sales_price#115, cs_sold_date_sk#126] "
        },
        "16" : {
          "sign" : 1189050492,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 18450,
          "rowCount" : 75,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: (((isnotnull(d_year#36) AND isnotnull(d_moy#38)) AND ((d_year#36 = 1999) AND (d_moy#38 = 9))) AND isnotnull(d_date_sk#30)) "
        },
        "5" : {
          "sign" : -1425437728,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
          "sizeInBytes" : 4577848,
          "rowCount" : 104042,
          "isRuntime" : false,
          "predicate" : " (unknown) Aggregate Arguments: [i_item_id#72], [i_item_id#72, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#21)),17,2) AS total_sales#1] "
        },
        "72" : {
          "sign" : 1006476035,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 8669952,
          "rowCount" : 20352,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: (isnotnull(i_category#344) AND (i_category#344 = Children)) "
        },
        "10" : {
          "sign" : -1547504171,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 6372974040,
          "rowCount" : 265540585,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [ss_item_sk#8, ss_addr_sk#12, ss_ext_sales_price#21] "
        },
        "59" : {
          "sign" : -983473512,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 14968824624,
          "rowCount" : 71965503,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: (((isnotnull(ws_sold_date_sk#160) AND isnotnull(ws_bill_addr_sk#133)) AND isnotnull(ws_item_sk#129)) AND dynamicpruning#373 [ws_sold_date_sk#160]) "
        },
        "48" : {
          "sign" : 1945741389,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 732672,
          "rowCount" : 20352,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [i_item_id#311] "
        },
        "21" : {
          "sign" : 1330107225,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 8160000,
          "rowCount" : 204000,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: LeftSemi, (i_item_id#72 = i_item_id#289) "
        },
        "54" : {
          "sign" : -2110312076,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 1439663480,
          "rowCount" : 71983174,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [ws_item_sk#129, ws_ext_sales_price#149] "
        },
        "43" : {
          "sign" : -436579858,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 246000000,
          "rowCount" : 1000000,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ca_address_sk#189, ca_address_id#190, ca_street_number#191, ca_street_name#192, ca_street_type#193, ca_suite_number#194, ca_city#195, ca_county#196, ca_state#197, ca_zip#198, ca_country#199, ca_gmt_offset#200, ca_location_type#201], `spark_catalog`.`tpcds_100`.`customer_address`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "65" : {
          "sign" : 621874635,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 109927068,
          "rowCount" : 446858,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: ((isnotnull(ca_gmt_offset#263) AND (ca_gmt_offset#263 = -6.00)) AND isnotnull(ca_address_sk#252)) "
        },
        "71" : {
          "sign" : 902657879,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 732672,
          "rowCount" : 20352,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [i_item_id#333] "
        },
        "57" : {
          "sign" : 889261269,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 2223859360,
          "rowCount" : 69495605,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: Inner, (ws_sold_date_sk#160 = d_date_sk#224) "
        },
        "32" : {
          "sign" : 1738136247,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 4014046764,
          "rowCount" : 143358813,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: Inner, (cs_bill_addr_sk#98 = ca_address_sk#189) "
        },
        "49" : {
          "sign" : -1077455943,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 8669952,
          "rowCount" : 20352,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: (isnotnull(i_category#322) AND (i_category#322 = Children)) "
        },
        "6" : {
          "sign" : 1377450468,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 12639348524,
          "rowCount" : 287257921,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [ss_ext_sales_price#21, i_item_id#72] "
        },
        "36" : {
          "sign" : 1302429317,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 29651561264,
          "rowCount" : 142555583,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: (((isnotnull(cs_sold_date_sk#126) AND isnotnull(cs_bill_addr_sk#98)) AND isnotnull(cs_item_sk#107)) AND dynamicpruning#372 [cs_sold_date_sk#126]) "
        },
        "1" : {
          "sign" : -307958100,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
          "sizeInBytes" : 16785442,
          "rowCount" : -1,
          "isRuntime" : false,
          "predicate" : " (unknown) LocalLimit Arguments: 100 "
        },
        "39" : {
          "sign" : -710453273,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 18450,
          "rowCount" : 75,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: (((isnotnull(d_year#167) AND isnotnull(d_moy#169)) AND ((d_year#167 = 1999) AND (d_moy#169 = 9))) AND isnotnull(d_date_sk#161)) "
        },
        "17" : {
          "sign" : -607567904,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 17970054,
          "rowCount" : 73049,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#30, d_date_id#31, d_date#32, d_month_seq#33, d_week_seq#34, d_quarter_seq#35, d_year#36, d_dow#37, d_moy#38, d_dom#39, d_qoy#40, d_fy_year#41, d_fy_quarter_seq#42, d_fy_week_seq#43, d_day_name#44, d_quarter_name#45, d_holiday#46, d_weekend#47, d_following_holiday#48, d_first_dom#49, d_last_dom#50, d_same_day_ly#51, d_same_day_lq#52, d_current_day#53, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "25" : {
          "sign" : -458521705,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 732672,
          "rowCount" : 20352,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [i_item_id#289] "
        },
        "60" : {
          "sign" : 542040227,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 14972593792,
          "rowCount" : 71983624,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ws_sold_time_sk#127, ws_ship_date_sk#128, ws_item_sk#129, ws_bill_customer_sk#130, ws_bill_cdemo_sk#131, ws_bill_hdemo_sk#132, ws_bill_addr_sk#133, ws_ship_customer_sk#134, ws_ship_cdemo_sk#135, ws_ship_hdemo_sk#136, ws_ship_addr_sk#137, ws_web_page_sk#138, ws_web_site_sk#139, ws_ship_mode_sk#140, ws_warehouse_sk#141, ws_promo_sk#142, ws_order_number#143L, ws_quantity#144, ws_wholesale_cost#145, ws_list_price#146, ws_sales_price#147, ws_ext_discount_amt#148, ws_ext_sales_price#149, ws_ext_wholesale_cost#150, ... 10 more fields], `spark_catalog`.`tpcds_100`.`web_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "14" : {
          "sign" : 1918777458,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 41806893656,
          "rowCount" : 275045353,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#7, ss_item_sk#8, ss_customer_sk#9, ss_cdemo_sk#10, ss_hdemo_sk#11, ss_addr_sk#12, ss_store_sk#13, ss_promo_sk#14, ss_ticket_number#15L, ss_quantity#16, ss_wholesale_cost#17, ss_list_price#18, ss_sales_price#19, ss_ext_discount_amt#20, ss_ext_sales_price#21, ss_ext_wholesale_cost#22, ss_ext_list_price#23, ss_ext_tax#24, ss_coupon_amt#25, ss_net_paid#26, ss_net_paid_inc_tax#27, ss_net_profit#28, ss_sold_date_sk#29], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "47" : {
          "sign" : 798586169,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 86904000,
          "rowCount" : 204000,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [i_item_sk#202, i_item_id#203, i_rec_start_date#204, i_rec_end_date#205, i_item_desc#206, i_current_price#207, i_wholesale_cost#208, i_brand_id#209, i_brand#210, i_class_id#211, i_class#212, i_category_id#213, i_category#214, i_manufact_id#215, i_manufact#216, i_size#217, i_formulation#218, i_color#219, i_units#220, i_container#221, i_manager_id#222, i_product_name#223], `spark_catalog`.`tpcds_100`.`item`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "31" : {
          "sign" : 237322153,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 2867176260,
          "rowCount" : 143358813,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [cs_item_sk#107, cs_ext_sales_price#115] "
        },
        "69" : {
          "sign" : -2010901740,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 86904000,
          "rowCount" : 204000,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: isnotnull(i_item_sk#265) "
        },
        "58" : {
          "sign" : 2047260113,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 2015034084,
          "rowCount" : 71965503,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [ws_item_sk#129, ws_bill_addr_sk#133, ws_ext_sales_price#149, ws_sold_date_sk#160] "
        },
        "64" : {
          "sign" : 1625158004,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 5362296,
          "rowCount" : 446858,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [ca_address_sk#252] "
        },
        "53" : {
          "sign" : -745484690,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 3739679060,
          "rowCount" : 71916905,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: Inner, (ws_item_sk#129 = i_item_sk#265) "
        },
        "42" : {
          "sign" : -1008435370,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 109927068,
          "rowCount" : 446858,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: ((isnotnull(ca_gmt_offset#200) AND (ca_gmt_offset#200 = -6.00)) AND isnotnull(ca_address_sk#189)) "
        },
        "0" : {
          "sign" : -117646223,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
          "sizeInBytes" : 4400,
          "rowCount" : 100,
          "isRuntime" : false,
          "predicate" : " (unknown) GlobalLimit Arguments: 100 "
        },
        "20" : {
          "sign" : 783351469,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 246000000,
          "rowCount" : 1000000,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ca_address_sk#58, ca_address_id#59, ca_street_number#60, ca_street_name#61, ca_street_type#62, ca_suite_number#63, ca_city#64, ca_county#65, ca_state#66, ca_zip#67, ca_country#68, ca_gmt_offset#69, ca_location_type#70], `spark_catalog`.`tpcds_100`.`customer_address`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "27" : {
          "sign" : 763558921,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 86904000,
          "rowCount" : 204000,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [i_item_sk#288, i_item_id#289, i_rec_start_date#290, i_rec_end_date#291, i_item_desc#292, i_current_price#293, i_wholesale_cost#294, i_brand_id#295, i_brand#296, i_class_id#297, i_class#298, i_category_id#299, i_category#300, i_manufact_id#301, i_manufact#302, i_size#303, i_formulation#304, i_color#305, i_units#306, i_container#307, i_manager_id#308, i_product_name#309], `spark_catalog`.`tpcds_100`.`item`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "70" : {
          "sign" : 1487742197,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 86904000,
          "rowCount" : 204000,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [i_item_sk#265, i_item_id#266, i_rec_start_date#267, i_rec_end_date#268, i_item_desc#269, i_current_price#270, i_wholesale_cost#271, i_brand_id#272, i_brand#273, i_class_id#274, i_class#275, i_category_id#276, i_category#277, i_manufact_id#278, i_manufact#279, i_size#280, i_formulation#281, i_color#282, i_units#283, i_container#284, i_manager_id#285, i_product_name#286], `spark_catalog`.`tpcds_100`.`item`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "2" : {
          "sign" : -969829,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
          "sizeInBytes" : 16785442,
          "rowCount" : -1,
          "isRuntime" : false,
          "predicate" : " (unknown) Sort Arguments: [i_item_id#72 ASC NULLS FIRST, total_sales#0 ASC NULLS FIRST], true "
        },
        "38" : {
          "sign" : -1087308409,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 900,
          "rowCount" : 75,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [d_date_sk#161] "
        },
        "18" : {
          "sign" : 808682787,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 5362296,
          "rowCount" : 446858,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [ca_address_sk#58] "
        },
        "30" : {
          "sign" : -1645612232,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 7481471556,
          "rowCount" : 143874453,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: Inner, (cs_item_sk#107 = i_item_sk#202) "
        },
        "7" : {
          "sign" : -1446511549,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 14937411892,
          "rowCount" : 287257921,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: Inner, (ss_item_sk#8 = i_item_sk#71) "
        },
        "29" : {
          "sign" : 902952875,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 6330475932,
          "rowCount" : 143874453,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [cs_ext_sales_price#115, i_item_id#203] "
        },
        "41" : {
          "sign" : -391299856,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 5362296,
          "rowCount" : 446858,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [ca_address_sk#189] "
        },
        "63" : {
          "sign" : -513036944,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 17970054,
          "rowCount" : 73049,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#224, d_date_id#225, d_date#226, d_month_seq#227, d_week_seq#228, d_quarter_seq#229, d_year#230, d_dow#231, d_moy#232, d_dom#233, d_qoy#234, d_fy_year#235, d_fy_quarter_seq#236, d_fy_week_seq#237, d_day_name#238, d_quarter_name#239, d_holiday#240, d_weekend#241, d_following_holiday#242, d_first_dom#243, d_last_dom#244, d_same_day_ly#245, d_same_day_lq#246, d_current_day#247, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "3" : {
          "sign" : 918645972,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
          "sizeInBytes" : 16785442,
          "rowCount" : -1,
          "isRuntime" : false,
          "predicate" : " (unknown) Aggregate Arguments: [i_item_id#72], [i_item_id#72, sum(total_sales#1) AS total_sales#0] "
        },
        "52" : {
          "sign" : -700663231,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 3164343820,
          "rowCount" : 71916905,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [ws_ext_sales_price#149, i_item_id#266] "
        },
        "28" : {
          "sign" : -1915118627,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
          "sizeInBytes" : 4577848,
          "rowCount" : 104042,
          "isRuntime" : false,
          "predicate" : " (unknown) Aggregate Arguments: [i_item_id#203], [i_item_id#203, MakeDecimal(sum(UnscaledValue(cs_ext_sales_price#115)),17,2) AS total_sales#3] "
        }
      },
      "links" : [ {
        "fromId" : 14,
        "fromName" : "LogicalRelation",
        "toId" : 13,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 17,
        "fromName" : "LogicalRelation",
        "toId" : 16,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 16,
        "fromName" : "Filter",
        "toId" : 15,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 15,
        "fromName" : "Project",
        "toId" : 13,
        "toName" : "Filter",
        "linkType" : "Subquery"
      }, {
        "fromId" : 13,
        "fromName" : "Filter",
        "toId" : 12,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 12,
        "fromName" : "Project",
        "toId" : 11,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 15,
        "fromName" : "Project",
        "toId" : 11,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 11,
        "fromName" : "Join",
        "toId" : 10,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 10,
        "fromName" : "Project",
        "toId" : 9,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 20,
        "fromName" : "LogicalRelation",
        "toId" : 19,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 19,
        "fromName" : "Filter",
        "toId" : 18,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 18,
        "fromName" : "Project",
        "toId" : 9,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 9,
        "fromName" : "Join",
        "toId" : 8,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 8,
        "fromName" : "Project",
        "toId" : 7,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 24,
        "fromName" : "LogicalRelation",
        "toId" : 23,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 23,
        "fromName" : "Filter",
        "toId" : 22,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 22,
        "fromName" : "Project",
        "toId" : 21,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 27,
        "fromName" : "LogicalRelation",
        "toId" : 26,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 26,
        "fromName" : "Filter",
        "toId" : 25,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 25,
        "fromName" : "Project",
        "toId" : 21,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 21,
        "fromName" : "Join",
        "toId" : 7,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 7,
        "fromName" : "Join",
        "toId" : 6,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 6,
        "fromName" : "Project",
        "toId" : 5,
        "toName" : "Aggregate",
        "linkType" : "Operator"
      }, {
        "fromId" : 5,
        "fromName" : "Aggregate",
        "toId" : 4,
        "toName" : "Union",
        "linkType" : "Operator"
      }, {
        "fromId" : 37,
        "fromName" : "LogicalRelation",
        "toId" : 36,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 40,
        "fromName" : "LogicalRelation",
        "toId" : 39,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 39,
        "fromName" : "Filter",
        "toId" : 38,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 38,
        "fromName" : "Project",
        "toId" : 36,
        "toName" : "Filter",
        "linkType" : "Subquery"
      }, {
        "fromId" : 36,
        "fromName" : "Filter",
        "toId" : 35,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 35,
        "fromName" : "Project",
        "toId" : 34,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 38,
        "fromName" : "Project",
        "toId" : 34,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 34,
        "fromName" : "Join",
        "toId" : 33,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 33,
        "fromName" : "Project",
        "toId" : 32,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 43,
        "fromName" : "LogicalRelation",
        "toId" : 42,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 42,
        "fromName" : "Filter",
        "toId" : 41,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 41,
        "fromName" : "Project",
        "toId" : 32,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 32,
        "fromName" : "Join",
        "toId" : 31,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 31,
        "fromName" : "Project",
        "toId" : 30,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 47,
        "fromName" : "LogicalRelation",
        "toId" : 46,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 46,
        "fromName" : "Filter",
        "toId" : 45,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 45,
        "fromName" : "Project",
        "toId" : 44,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 50,
        "fromName" : "LogicalRelation",
        "toId" : 49,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 49,
        "fromName" : "Filter",
        "toId" : 48,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 48,
        "fromName" : "Project",
        "toId" : 44,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 44,
        "fromName" : "Join",
        "toId" : 30,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 30,
        "fromName" : "Join",
        "toId" : 29,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 29,
        "fromName" : "Project",
        "toId" : 28,
        "toName" : "Aggregate",
        "linkType" : "Operator"
      }, {
        "fromId" : 28,
        "fromName" : "Aggregate",
        "toId" : 4,
        "toName" : "Union",
        "linkType" : "Operator"
      }, {
        "fromId" : 60,
        "fromName" : "LogicalRelation",
        "toId" : 59,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 63,
        "fromName" : "LogicalRelation",
        "toId" : 62,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 62,
        "fromName" : "Filter",
        "toId" : 61,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 61,
        "fromName" : "Project",
        "toId" : 59,
        "toName" : "Filter",
        "linkType" : "Subquery"
      }, {
        "fromId" : 59,
        "fromName" : "Filter",
        "toId" : 58,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 58,
        "fromName" : "Project",
        "toId" : 57,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 61,
        "fromName" : "Project",
        "toId" : 57,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 57,
        "fromName" : "Join",
        "toId" : 56,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 56,
        "fromName" : "Project",
        "toId" : 55,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 66,
        "fromName" : "LogicalRelation",
        "toId" : 65,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 65,
        "fromName" : "Filter",
        "toId" : 64,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 64,
        "fromName" : "Project",
        "toId" : 55,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 55,
        "fromName" : "Join",
        "toId" : 54,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 54,
        "fromName" : "Project",
        "toId" : 53,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 70,
        "fromName" : "LogicalRelation",
        "toId" : 69,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 69,
        "fromName" : "Filter",
        "toId" : 68,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 68,
        "fromName" : "Project",
        "toId" : 67,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 73,
        "fromName" : "LogicalRelation",
        "toId" : 72,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 72,
        "fromName" : "Filter",
        "toId" : 71,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 71,
        "fromName" : "Project",
        "toId" : 67,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 67,
        "fromName" : "Join",
        "toId" : 53,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 53,
        "fromName" : "Join",
        "toId" : 52,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 52,
        "fromName" : "Project",
        "toId" : 51,
        "toName" : "Aggregate",
        "linkType" : "Operator"
      }, {
        "fromId" : 51,
        "fromName" : "Aggregate",
        "toId" : 4,
        "toName" : "Union",
        "linkType" : "Operator"
      }, {
        "fromId" : 4,
        "fromName" : "Union",
        "toId" : 3,
        "toName" : "Aggregate",
        "linkType" : "Operator"
      }, {
        "fromId" : 3,
        "fromName" : "Aggregate",
        "toId" : 2,
        "toName" : "Sort",
        "linkType" : "Operator"
      }, {
        "fromId" : 2,
        "fromName" : "Sort",
        "toId" : 1,
        "toName" : "LocalLimit",
        "linkType" : "Operator"
      }, {
        "fromId" : 1,
        "fromName" : "LocalLimit",
        "toId" : 0,
        "toName" : "GlobalLimit",
        "linkType" : "Operator"
      } ],
      "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [i_item_id#72 ASC NULLS FIRST, total_sales#0 ASC NULLS FIRST], true\n      +- Aggregate [i_item_id#72], [i_item_id#72, sum(total_sales#1) AS total_sales#0]\n         +- Union false, false\n            :- Aggregate [i_item_id#72], [i_item_id#72, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#21)),17,2) AS total_sales#1]\n            :  +- Project [ss_ext_sales_price#21, i_item_id#72]\n            :     +- Join Inner, (ss_item_sk#8 = i_item_sk#71)\n            :        :- Project [ss_item_sk#8, ss_ext_sales_price#21]\n            :        :  +- Join Inner, (ss_addr_sk#12 = ca_address_sk#58)\n            :        :     :- Project [ss_item_sk#8, ss_addr_sk#12, ss_ext_sales_price#21]\n            :        :     :  +- Join Inner, (ss_sold_date_sk#29 = d_date_sk#30)\n            :        :     :     :- Project [ss_item_sk#8, ss_addr_sk#12, ss_ext_sales_price#21, ss_sold_date_sk#29]\n            :        :     :     :  +- Filter (((isnotnull(ss_sold_date_sk#29) AND isnotnull(ss_addr_sk#12)) AND isnotnull(ss_item_sk#8)) AND dynamicpruning#371 [ss_sold_date_sk#29])\n            :        :     :     :     :  +- Project [d_date_sk#30]\n            :        :     :     :     :     +- Filter (((isnotnull(d_year#36) AND isnotnull(d_moy#38)) AND ((d_year#36 = 1999) AND (d_moy#38 = 9))) AND isnotnull(d_date_sk#30))\n            :        :     :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#30,d_date_id#31,d_date#32,d_month_seq#33,d_week_seq#34,d_quarter_seq#35,d_year#36,d_dow#37,d_moy#38,d_dom#39,d_qoy#40,d_fy_year#41,d_fy_quarter_seq#42,d_fy_week_seq#43,d_day_name#44,d_quarter_name#45,d_holiday#46,d_weekend#47,d_following_holiday#48,d_first_dom#49,d_last_dom#50,d_same_day_ly#51,d_same_day_lq#52,d_current_day#53,... 4 more fields] parquet\n            :        :     :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#7,ss_item_sk#8,ss_customer_sk#9,ss_cdemo_sk#10,ss_hdemo_sk#11,ss_addr_sk#12,ss_store_sk#13,ss_promo_sk#14,ss_ticket_number#15L,ss_quantity#16,ss_wholesale_cost#17,ss_list_price#18,ss_sales_price#19,ss_ext_discount_amt#20,ss_ext_sales_price#21,ss_ext_wholesale_cost#22,ss_ext_list_price#23,ss_ext_tax#24,ss_coupon_amt#25,ss_net_paid#26,ss_net_paid_inc_tax#27,ss_net_profit#28,ss_sold_date_sk#29] parquet\n            :        :     :     +- Project [d_date_sk#30]\n            :        :     :        +- Filter (((isnotnull(d_year#36) AND isnotnull(d_moy#38)) AND ((d_year#36 = 1999) AND (d_moy#38 = 9))) AND isnotnull(d_date_sk#30))\n            :        :     :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#30,d_date_id#31,d_date#32,d_month_seq#33,d_week_seq#34,d_quarter_seq#35,d_year#36,d_dow#37,d_moy#38,d_dom#39,d_qoy#40,d_fy_year#41,d_fy_quarter_seq#42,d_fy_week_seq#43,d_day_name#44,d_quarter_name#45,d_holiday#46,d_weekend#47,d_following_holiday#48,d_first_dom#49,d_last_dom#50,d_same_day_ly#51,d_same_day_lq#52,d_current_day#53,... 4 more fields] parquet\n            :        :     +- Project [ca_address_sk#58]\n            :        :        +- Filter ((isnotnull(ca_gmt_offset#69) AND (ca_gmt_offset#69 = -6.00)) AND isnotnull(ca_address_sk#58))\n            :        :           +- Relation spark_catalog.tpcds_100.customer_address[ca_address_sk#58,ca_address_id#59,ca_street_number#60,ca_street_name#61,ca_street_type#62,ca_suite_number#63,ca_city#64,ca_county#65,ca_state#66,ca_zip#67,ca_country#68,ca_gmt_offset#69,ca_location_type#70] parquet\n            :        +- Join LeftSemi, (i_item_id#72 = i_item_id#289)\n            :           :- Project [i_item_sk#71, i_item_id#72]\n            :           :  +- Filter isnotnull(i_item_sk#71)\n            :           :     +- Relation spark_catalog.tpcds_100.item[i_item_sk#71,i_item_id#72,i_rec_start_date#73,i_rec_end_date#74,i_item_desc#75,i_current_price#76,i_wholesale_cost#77,i_brand_id#78,i_brand#79,i_class_id#80,i_class#81,i_category_id#82,i_category#83,i_manufact_id#84,i_manufact#85,i_size#86,i_formulation#87,i_color#88,i_units#89,i_container#90,i_manager_id#91,i_product_name#92] parquet\n            :           +- Project [i_item_id#289]\n            :              +- Filter (isnotnull(i_category#300) AND (i_category#300 = Children))\n            :                 +- Relation spark_catalog.tpcds_100.item[i_item_sk#288,i_item_id#289,i_rec_start_date#290,i_rec_end_date#291,i_item_desc#292,i_current_price#293,i_wholesale_cost#294,i_brand_id#295,i_brand#296,i_class_id#297,i_class#298,i_category_id#299,i_category#300,i_manufact_id#301,i_manufact#302,i_size#303,i_formulation#304,i_color#305,i_units#306,i_container#307,i_manager_id#308,i_product_name#309] parquet\n            :- Aggregate [i_item_id#203], [i_item_id#203, MakeDecimal(sum(UnscaledValue(cs_ext_sales_price#115)),17,2) AS total_sales#3]\n            :  +- Project [cs_ext_sales_price#115, i_item_id#203]\n            :     +- Join Inner, (cs_item_sk#107 = i_item_sk#202)\n            :        :- Project [cs_item_sk#107, cs_ext_sales_price#115]\n            :        :  +- Join Inner, (cs_bill_addr_sk#98 = ca_address_sk#189)\n            :        :     :- Project [cs_bill_addr_sk#98, cs_item_sk#107, cs_ext_sales_price#115]\n            :        :     :  +- Join Inner, (cs_sold_date_sk#126 = d_date_sk#161)\n            :        :     :     :- Project [cs_bill_addr_sk#98, cs_item_sk#107, cs_ext_sales_price#115, cs_sold_date_sk#126]\n            :        :     :     :  +- Filter (((isnotnull(cs_sold_date_sk#126) AND isnotnull(cs_bill_addr_sk#98)) AND isnotnull(cs_item_sk#107)) AND dynamicpruning#372 [cs_sold_date_sk#126])\n            :        :     :     :     :  +- Project [d_date_sk#161]\n            :        :     :     :     :     +- Filter (((isnotnull(d_year#167) AND isnotnull(d_moy#169)) AND ((d_year#167 = 1999) AND (d_moy#169 = 9))) AND isnotnull(d_date_sk#161))\n            :        :     :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#161,d_date_id#162,d_date#163,d_month_seq#164,d_week_seq#165,d_quarter_seq#166,d_year#167,d_dow#168,d_moy#169,d_dom#170,d_qoy#171,d_fy_year#172,d_fy_quarter_seq#173,d_fy_week_seq#174,d_day_name#175,d_quarter_name#176,d_holiday#177,d_weekend#178,d_following_holiday#179,d_first_dom#180,d_last_dom#181,d_same_day_ly#182,d_same_day_lq#183,d_current_day#184,... 4 more fields] parquet\n            :        :     :     :     +- Relation spark_catalog.tpcds_100.catalog_sales[cs_sold_time_sk#93,cs_ship_date_sk#94,cs_bill_customer_sk#95,cs_bill_cdemo_sk#96,cs_bill_hdemo_sk#97,cs_bill_addr_sk#98,cs_ship_customer_sk#99,cs_ship_cdemo_sk#100,cs_ship_hdemo_sk#101,cs_ship_addr_sk#102,cs_call_center_sk#103,cs_catalog_page_sk#104,cs_ship_mode_sk#105,cs_warehouse_sk#106,cs_item_sk#107,cs_promo_sk#108,cs_order_number#109L,cs_quantity#110,cs_wholesale_cost#111,cs_list_price#112,cs_sales_price#113,cs_ext_discount_amt#114,cs_ext_sales_price#115,cs_ext_wholesale_cost#116,... 10 more fields] parquet\n            :        :     :     +- Project [d_date_sk#161]\n            :        :     :        +- Filter (((isnotnull(d_year#167) AND isnotnull(d_moy#169)) AND ((d_year#167 = 1999) AND (d_moy#169 = 9))) AND isnotnull(d_date_sk#161))\n            :        :     :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#161,d_date_id#162,d_date#163,d_month_seq#164,d_week_seq#165,d_quarter_seq#166,d_year#167,d_dow#168,d_moy#169,d_dom#170,d_qoy#171,d_fy_year#172,d_fy_quarter_seq#173,d_fy_week_seq#174,d_day_name#175,d_quarter_name#176,d_holiday#177,d_weekend#178,d_following_holiday#179,d_first_dom#180,d_last_dom#181,d_same_day_ly#182,d_same_day_lq#183,d_current_day#184,... 4 more fields] parquet\n            :        :     +- Project [ca_address_sk#189]\n            :        :        +- Filter ((isnotnull(ca_gmt_offset#200) AND (ca_gmt_offset#200 = -6.00)) AND isnotnull(ca_address_sk#189))\n            :        :           +- Relation spark_catalog.tpcds_100.customer_address[ca_address_sk#189,ca_address_id#190,ca_street_number#191,ca_street_name#192,ca_street_type#193,ca_suite_number#194,ca_city#195,ca_county#196,ca_state#197,ca_zip#198,ca_country#199,ca_gmt_offset#200,ca_location_type#201] parquet\n            :        +- Join LeftSemi, (i_item_id#203 = i_item_id#311)\n            :           :- Project [i_item_sk#202, i_item_id#203]\n            :           :  +- Filter isnotnull(i_item_sk#202)\n            :           :     +- Relation spark_catalog.tpcds_100.item[i_item_sk#202,i_item_id#203,i_rec_start_date#204,i_rec_end_date#205,i_item_desc#206,i_current_price#207,i_wholesale_cost#208,i_brand_id#209,i_brand#210,i_class_id#211,i_class#212,i_category_id#213,i_category#214,i_manufact_id#215,i_manufact#216,i_size#217,i_formulation#218,i_color#219,i_units#220,i_container#221,i_manager_id#222,i_product_name#223] parquet\n            :           +- Project [i_item_id#311]\n            :              +- Filter (isnotnull(i_category#322) AND (i_category#322 = Children))\n            :                 +- Relation spark_catalog.tpcds_100.item[i_item_sk#310,i_item_id#311,i_rec_start_date#312,i_rec_end_date#313,i_item_desc#314,i_current_price#315,i_wholesale_cost#316,i_brand_id#317,i_brand#318,i_class_id#319,i_class#320,i_category_id#321,i_category#322,i_manufact_id#323,i_manufact#324,i_size#325,i_formulation#326,i_color#327,i_units#328,i_container#329,i_manager_id#330,i_product_name#331] parquet\n            +- Aggregate [i_item_id#266], [i_item_id#266, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#149)),17,2) AS total_sales#5]\n               +- Project [ws_ext_sales_price#149, i_item_id#266]\n                  +- Join Inner, (ws_item_sk#129 = i_item_sk#265)\n                     :- Project [ws_item_sk#129, ws_ext_sales_price#149]\n                     :  +- Join Inner, (ws_bill_addr_sk#133 = ca_address_sk#252)\n                     :     :- Project [ws_item_sk#129, ws_bill_addr_sk#133, ws_ext_sales_price#149]\n                     :     :  +- Join Inner, (ws_sold_date_sk#160 = d_date_sk#224)\n                     :     :     :- Project [ws_item_sk#129, ws_bill_addr_sk#133, ws_ext_sales_price#149, ws_sold_date_sk#160]\n                     :     :     :  +- Filter (((isnotnull(ws_sold_date_sk#160) AND isnotnull(ws_bill_addr_sk#133)) AND isnotnull(ws_item_sk#129)) AND dynamicpruning#373 [ws_sold_date_sk#160])\n                     :     :     :     :  +- Project [d_date_sk#224]\n                     :     :     :     :     +- Filter (((isnotnull(d_year#230) AND isnotnull(d_moy#232)) AND ((d_year#230 = 1999) AND (d_moy#232 = 9))) AND isnotnull(d_date_sk#224))\n                     :     :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#224,d_date_id#225,d_date#226,d_month_seq#227,d_week_seq#228,d_quarter_seq#229,d_year#230,d_dow#231,d_moy#232,d_dom#233,d_qoy#234,d_fy_year#235,d_fy_quarter_seq#236,d_fy_week_seq#237,d_day_name#238,d_quarter_name#239,d_holiday#240,d_weekend#241,d_following_holiday#242,d_first_dom#243,d_last_dom#244,d_same_day_ly#245,d_same_day_lq#246,d_current_day#247,... 4 more fields] parquet\n                     :     :     :     +- Relation spark_catalog.tpcds_100.web_sales[ws_sold_time_sk#127,ws_ship_date_sk#128,ws_item_sk#129,ws_bill_customer_sk#130,ws_bill_cdemo_sk#131,ws_bill_hdemo_sk#132,ws_bill_addr_sk#133,ws_ship_customer_sk#134,ws_ship_cdemo_sk#135,ws_ship_hdemo_sk#136,ws_ship_addr_sk#137,ws_web_page_sk#138,ws_web_site_sk#139,ws_ship_mode_sk#140,ws_warehouse_sk#141,ws_promo_sk#142,ws_order_number#143L,ws_quantity#144,ws_wholesale_cost#145,ws_list_price#146,ws_sales_price#147,ws_ext_discount_amt#148,ws_ext_sales_price#149,ws_ext_wholesale_cost#150,... 10 more fields] parquet\n                     :     :     +- Project [d_date_sk#224]\n                     :     :        +- Filter (((isnotnull(d_year#230) AND isnotnull(d_moy#232)) AND ((d_year#230 = 1999) AND (d_moy#232 = 9))) AND isnotnull(d_date_sk#224))\n                     :     :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#224,d_date_id#225,d_date#226,d_month_seq#227,d_week_seq#228,d_quarter_seq#229,d_year#230,d_dow#231,d_moy#232,d_dom#233,d_qoy#234,d_fy_year#235,d_fy_quarter_seq#236,d_fy_week_seq#237,d_day_name#238,d_quarter_name#239,d_holiday#240,d_weekend#241,d_following_holiday#242,d_first_dom#243,d_last_dom#244,d_same_day_ly#245,d_same_day_lq#246,d_current_day#247,... 4 more fields] parquet\n                     :     +- Project [ca_address_sk#252]\n                     :        +- Filter ((isnotnull(ca_gmt_offset#263) AND (ca_gmt_offset#263 = -6.00)) AND isnotnull(ca_address_sk#252))\n                     :           +- Relation spark_catalog.tpcds_100.customer_address[ca_address_sk#252,ca_address_id#253,ca_street_number#254,ca_street_name#255,ca_street_type#256,ca_suite_number#257,ca_city#258,ca_county#259,ca_state#260,ca_zip#261,ca_country#262,ca_gmt_offset#263,ca_location_type#264] parquet\n                     +- Join LeftSemi, (i_item_id#266 = i_item_id#333)\n                        :- Project [i_item_sk#265, i_item_id#266]\n                        :  +- Filter isnotnull(i_item_sk#265)\n                        :     +- Relation spark_catalog.tpcds_100.item[i_item_sk#265,i_item_id#266,i_rec_start_date#267,i_rec_end_date#268,i_item_desc#269,i_current_price#270,i_wholesale_cost#271,i_brand_id#272,i_brand#273,i_class_id#274,i_class#275,i_category_id#276,i_category#277,i_manufact_id#278,i_manufact#279,i_size#280,i_formulation#281,i_color#282,i_units#283,i_container#284,i_manager_id#285,i_product_name#286] parquet\n                        +- Project [i_item_id#333]\n                           +- Filter (isnotnull(i_category#344) AND (i_category#344 = Children))\n                              +- Relation spark_catalog.tpcds_100.item[i_item_sk#332,i_item_id#333,i_rec_start_date#334,i_rec_end_date#335,i_item_desc#336,i_current_price#337,i_wholesale_cost#338,i_brand_id#339,i_brand#340,i_class_id#341,i_class#342,i_category_id#343,i_category#344,i_manufact_id#345,i_manufact#346,i_size#347,i_formulation#348,i_color#349,i_units#350,i_container#351,i_manager_id#352,i_product_name#353] parquet\n"
    },
    "IM" : {
      "inputSizeInBytes" : 87893609146,
      "inputRowCount" : 494745141
    },
    "PD" : { },
    "Configuration" : {
      "theta_c" : [ {
        "spark.executor.memory" : "1g"
      }, {
        "spark.executor.cores" : "1"
      }, {
        "spark.executor.instances" : "16"
      }, {
        "spark.default.parallelism" : "16"
      }, {
        "spark.reducer.maxSizeInFlight" : "48m"
      }, {
        "spark.shuffle.sort.bypassMergeThreshold" : "200"
      }, {
        "spark.shuffle.compress" : "true"
      }, {
        "spark.memory.fraction" : "0.6"
      } ],
      "theta_p" : [ {
        "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
      }, {
        "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
      }, {
        "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
      }, {
        "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
      }, {
        "spark.sql.shuffle.partitions" : "200"
      }, {
        "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
      }, {
        "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
      }, {
        "spark.sql.files.maxPartitionBytes" : "128MB"
      }, {
        "spark.sql.files.openCostInBytes" : "4MB"
      } ],
      "theta_s" : [ {
        "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
      }, {
        "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
      } ]
    }
  },
  "RuntimeLQPs" : {
    "8" : {
      "LQP" : {
        "operators" : {
          "4" : {
            "sign" : 1671614867,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Union",
            "sizeInBytes" : 20270480,
            "rowCount" : 506762,
            "isRuntime" : false,
            "predicate" : " (unknown) Union Arguments: false, false "
          },
          "5" : {
            "sign" : 142525367,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 9333800,
            "rowCount" : 233345,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [i_item_id#72], [i_item_id#72, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#21)),17,2) AS total_sales#375], HashAggregate(keys=[i_item_id#72], functions=[sum(UnscaledValue(ss_ext_sales_price#21))]) "
          },
          "6" : {
            "sign" : 382348755,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 6772040,
            "rowCount" : 169301,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [i_item_id#423], [i_item_id#423, MakeDecimal(sum(UnscaledValue(cs_ext_sales_price#115)),17,2) AS total_sales#377], HashAggregate(keys=[i_item_id#423], functions=[sum(UnscaledValue(cs_ext_sales_price#115))]) "
          },
          "1" : {
            "sign" : -1492076833,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
            "sizeInBytes" : 24775031,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) LocalLimit Arguments: 100 "
          },
          "0" : {
            "sign" : -1100361266,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
            "sizeInBytes" : 4400,
            "rowCount" : 100,
            "isRuntime" : false,
            "predicate" : " (unknown) GlobalLimit Arguments: 100 "
          },
          "2" : {
            "sign" : 2128402468,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 24775031,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [i_item_id#72 ASC NULLS FIRST, total_sales#374 ASC NULLS FIRST], true "
          },
          "7" : {
            "sign" : -25814476,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 4164640,
            "rowCount" : 104116,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [i_item_id#486], [i_item_id#486, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#149)),17,2) AS total_sales#379], HashAggregate(keys=[i_item_id#486], functions=[sum(UnscaledValue(ws_ext_sales_price#149))]) "
          },
          "3" : {
            "sign" : -1469468953,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 24775031,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [i_item_id#72], [i_item_id#72, sum(total_sales#375) AS total_sales#374] "
          }
        },
        "links" : [ {
          "fromId" : 5,
          "fromName" : "LogicalQueryStage",
          "toId" : 4,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "LogicalQueryStage",
          "toId" : 4,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "LogicalQueryStage",
          "toId" : 4,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Union",
          "toId" : 3,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Aggregate",
          "toId" : 2,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "LocalLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "LocalLimit",
          "toId" : 0,
          "toName" : "GlobalLimit",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [i_item_id#72 ASC NULLS FIRST, total_sales#374 ASC NULLS FIRST], true\n      +- Aggregate [i_item_id#72], [i_item_id#72, sum(total_sales#375) AS total_sales#374]\n         +- Union false, false\n            :- LogicalQueryStage Aggregate [i_item_id#72], [i_item_id#72, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#21)),17,2) AS total_sales#375], HashAggregate(keys=[i_item_id#72], functions=[sum(UnscaledValue(ss_ext_sales_price#21))])\n            :- LogicalQueryStage Aggregate [i_item_id#423], [i_item_id#423, MakeDecimal(sum(UnscaledValue(cs_ext_sales_price#115)),17,2) AS total_sales#377], HashAggregate(keys=[i_item_id#423], functions=[sum(UnscaledValue(cs_ext_sales_price#115))])\n            +- LogicalQueryStage Aggregate [i_item_id#486], [i_item_id#486, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#149)),17,2) AS total_sales#379], HashAggregate(keys=[i_item_id#486], functions=[sum(UnscaledValue(ws_ext_sales_price#149))])\n"
      },
      "IM" : {
        "inputSizeInBytes" : 20270480,
        "inputRowCount" : 506762
      },
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "StartTimeInMs" : 1702227177376,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 1115,
        "IOBytes" : {
          "Total" : 10035503,
          "Details" : {
            "IR" : 0,
            "IW" : 0,
            "SR" : 8951072,
            "SW" : 1084431
          }
        }
      }
    },
    "4" : {
      "LQP" : {
        "operators" : {
          "45" : {
            "sign" : 1576487933,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 14968824624,
            "rowCount" : 71965503,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(ws_sold_date_sk#160) AND isnotnull(ws_bill_addr_sk#133)) AND isnotnull(ws_item_sk#129)) AND dynamicpruning#587 [ws_sold_date_sk#160]) "
          },
          "34" : {
            "sign" : 223472588,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1048816,
            "rowCount" : 30,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#381], BroadcastQueryStage 4 "
          },
          "12" : {
            "sign" : -9668412,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 7354676784,
            "rowCount" : 262667028,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#8, ss_addr_sk#12, ss_ext_sales_price#21, ss_sold_date_sk#29] "
          },
          "51" : {
            "sign" : -772210292,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 24777216,
            "rowCount" : 441450,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ca_address_sk#472], BroadcastQueryStage 12 "
          },
          "8" : {
            "sign" : -469502694,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 69572615706360000,
            "rowCount" : 3478630785318000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#8, ss_ext_sales_price#21] "
          },
          "19" : {
            "sign" : 1204149022,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 24777216,
            "rowCount" : 441450,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ca_address_sk#58], BroadcastQueryStage 1 "
          },
          "23" : {
            "sign" : 1632135370,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 7481471556,
            "rowCount" : 143874453,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cs_item_sk#107 = i_item_sk#422) "
          },
          "4" : {
            "sign" : -1813241361,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Union",
            "sizeInBytes" : 13733544,
            "rowCount" : 312126,
            "isRuntime" : false,
            "predicate" : " (unknown) Union Arguments: false, false "
          },
          "40" : {
            "sign" : -1874390941,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 19061502779610000,
            "rowCount" : 953075138980500,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_item_sk#129, ws_ext_sales_price#149] "
          },
          "15" : {
            "sign" : -337637781,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 900,
            "rowCount" : 75,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#30] "
          },
          "11" : {
            "sign" : -140391299,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 252160346880,
            "rowCount" : 7880010840,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#29 = d_date_sk#30) "
          },
          "9" : {
            "sign" : 1492968274,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 97401661988904000,
            "rowCount" : 3478630785318000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_addr_sk#12 = ca_address_sk#58) "
          },
          "44" : {
            "sign" : 2013399350,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 2015034084,
            "rowCount" : 71965503,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_item_sk#129, ws_bill_addr_sk#133, ws_ext_sales_price#149, ws_sold_date_sk#160] "
          },
          "33" : {
            "sign" : 470547457,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#381, d_date_id#382, d_date#383, d_month_seq#384, d_week_seq#385, d_quarter_seq#386, d_year#387, d_dow#388, d_moy#389, d_dom#390, d_qoy#391, d_fy_year#392, d_fy_quarter_seq#393, d_fy_week_seq#394, d_day_name#395, d_quarter_name#396, d_holiday#397, d_weekend#398, d_following_holiday#399, d_first_dom#400, d_last_dom#401, d_same_day_ly#402, d_same_day_lq#403, d_current_day#404, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "22" : {
            "sign" : -1172096873,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 6330475932,
            "rowCount" : 143874453,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_ext_sales_price#115, i_item_id#423] "
          },
          "26" : {
            "sign" : -1618066801,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 102640019760,
            "rowCount" : 4276667490,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_bill_addr_sk#98, cs_item_sk#107, cs_ext_sales_price#115] "
          },
          "50" : {
            "sign" : -1360363427,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1048816,
            "rowCount" : 30,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#444], BroadcastQueryStage 10 "
          },
          "37" : {
            "sign" : 486655461,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 4577848,
            "rowCount" : 104042,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [i_item_id#486], [i_item_id#486, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#149)),17,2) AS total_sales#379] "
          },
          "13" : {
            "sign" : 657223440,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 39925388256,
            "rowCount" : 262667028,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(ss_sold_date_sk#29) AND isnotnull(ss_addr_sk#12)) AND isnotnull(ss_item_sk#8)) AND dynamicpruning#585 [ss_sold_date_sk#29]) "
          },
          "46" : {
            "sign" : 542040227,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 14972593792,
            "rowCount" : 71983624,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ws_sold_time_sk#127, ws_ship_date_sk#128, ws_item_sk#129, ws_bill_customer_sk#130, ws_bill_cdemo_sk#131, ws_bill_hdemo_sk#132, ws_bill_addr_sk#133, ws_ship_customer_sk#134, ws_ship_cdemo_sk#135, ws_ship_hdemo_sk#136, ws_ship_addr_sk#137, ws_web_page_sk#138, ws_web_site_sk#139, ws_ship_mode_sk#140, ws_warehouse_sk#141, ws_promo_sk#142, ws_order_number#143L, ws_quantity#144, ws_wholesale_cost#145, ws_list_price#146, ws_sales_price#147, ws_ext_discount_amt#148, ws_ext_sales_price#149, ws_ext_wholesale_cost#150, ... 10 more fields], `spark_catalog`.`tpcds_100`.`web_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "24" : {
            "sign" : 2018221832,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 37758697269210000,
            "rowCount" : 1887934863460500,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_item_sk#107, cs_ext_sales_price#115] "
          },
          "35" : {
            "sign" : 1773770563,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 24777216,
            "rowCount" : 441450,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ca_address_sk#409], BroadcastQueryStage 6 "
          },
          "16" : {
            "sign" : 1189050492,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 18450,
            "rowCount" : 75,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(d_year#36) AND isnotnull(d_moy#38)) AND ((d_year#36 = 1999) AND (d_moy#38 = 9))) AND isnotnull(d_date_sk#30)) "
          },
          "5" : {
            "sign" : -1520370996,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 4577848,
            "rowCount" : 104042,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [i_item_id#72], [i_item_id#72, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#21)),17,2) AS total_sales#375] "
          },
          "10" : {
            "sign" : -1492820802,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 189120260160,
            "rowCount" : 7880010840,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#8, ss_addr_sk#12, ss_ext_sales_price#21] "
          },
          "48" : {
            "sign" : -73903649,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 18450,
            "rowCount" : 75,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(d_year#450) AND isnotnull(d_moy#452)) AND ((d_year#450 = 1999) AND (d_moy#452 = 9))) AND isnotnull(d_date_sk#444)) "
          },
          "21" : {
            "sign" : -804068977,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 4577848,
            "rowCount" : 104042,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [i_item_id#423], [i_item_id#423, MakeDecimal(sum(UnscaledValue(cs_ext_sales_price#115)),17,2) AS total_sales#377] "
          },
          "43" : {
            "sign" : 1011816376,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 69086882880,
            "rowCount" : 2158965090,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ws_sold_date_sk#160 = d_date_sk#444) "
          },
          "32" : {
            "sign" : 2101292456,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 18450,
            "rowCount" : 75,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(d_year#387) AND isnotnull(d_moy#389)) AND ((d_year#387 = 1999) AND (d_moy#389 = 9))) AND isnotnull(d_date_sk#381)) "
          },
          "49" : {
            "sign" : 1327199472,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#444, d_date_id#445, d_date#446, d_month_seq#447, d_week_seq#448, d_quarter_seq#449, d_year#450, d_dow#451, d_moy#452, d_dom#453, d_qoy#454, d_fy_year#455, d_fy_quarter_seq#456, d_fy_week_seq#457, d_day_name#458, d_quarter_name#459, d_holiday#460, d_weekend#461, d_following_holiday#462, d_first_dom#463, d_last_dom#464, d_same_day_ly#465, d_same_day_lq#466, d_current_day#467, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "6" : {
            "sign" : -1551374928,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 12639348524,
            "rowCount" : 287257921,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_ext_sales_price#21, i_item_id#72] "
          },
          "36" : {
            "sign" : 873673748,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 8160000,
            "rowCount" : 204000,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Join LeftSemi, (i_item_id#423 = i_item_id#530), BroadcastQueryStage 17 "
          },
          "1" : {
            "sign" : -1908669067,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
            "sizeInBytes" : 16785442,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) LocalLimit Arguments: 100 "
          },
          "39" : {
            "sign" : -1964044955,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 3739679060,
            "rowCount" : 71916905,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ws_item_sk#129 = i_item_sk#485) "
          },
          "17" : {
            "sign" : -607567904,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#30, d_date_id#31, d_date#32, d_month_seq#33, d_week_seq#34, d_quarter_seq#35, d_year#36, d_dow#37, d_moy#38, d_dom#39, d_qoy#40, d_fy_year#41, d_fy_quarter_seq#42, d_fy_week_seq#43, d_day_name#44, d_quarter_name#45, d_holiday#46, d_weekend#47, d_following_holiday#48, d_first_dom#49, d_last_dom#50, d_same_day_ly#51, d_same_day_lq#52, d_current_day#53, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "25" : {
            "sign" : -966960688,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 52862176176894000,
            "rowCount" : 1887934863460500,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cs_bill_addr_sk#98 = ca_address_sk#409) "
          },
          "14" : {
            "sign" : 1918777458,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#7, ss_item_sk#8, ss_customer_sk#9, ss_cdemo_sk#10, ss_hdemo_sk#11, ss_addr_sk#12, ss_store_sk#13, ss_promo_sk#14, ss_ticket_number#15L, ss_quantity#16, ss_wholesale_cost#17, ss_list_price#18, ss_sales_price#19, ss_ext_discount_amt#20, ss_ext_sales_price#21, ss_ext_wholesale_cost#22, ss_ext_list_price#23, ss_ext_tax#24, ss_coupon_amt#25, ss_net_paid#26, ss_net_paid_inc_tax#27, ss_net_profit#28, ss_sold_date_sk#29], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "47" : {
            "sign" : 46144887,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 900,
            "rowCount" : 75,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#444] "
          },
          "31" : {
            "sign" : 1280402312,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 900,
            "rowCount" : 75,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#381] "
          },
          "42" : {
            "sign" : -793711286,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 51815162160,
            "rowCount" : 2158965090,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_item_sk#129, ws_bill_addr_sk#133, ws_ext_sales_price#149] "
          },
          "0" : {
            "sign" : 680260820,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
            "sizeInBytes" : 4400,
            "rowCount" : 100,
            "isRuntime" : false,
            "predicate" : " (unknown) GlobalLimit Arguments: 100 "
          },
          "20" : {
            "sign" : -944567265,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 8160000,
            "rowCount" : 204000,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Join LeftSemi, (i_item_id#72 = i_item_id#508), BroadcastQueryStage 15 "
          },
          "27" : {
            "sign" : -1785926450,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 136853359680,
            "rowCount" : 4276667490,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cs_sold_date_sk#126 = d_date_sk#381) "
          },
          "2" : {
            "sign" : -1853801282,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 16785442,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [i_item_id#72 ASC NULLS FIRST, total_sales#374 ASC NULLS FIRST], true "
          },
          "38" : {
            "sign" : 1671141828,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 3164343820,
            "rowCount" : 71916905,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_ext_sales_price#149, i_item_id#486] "
          },
          "18" : {
            "sign" : -711428433,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1048816,
            "rowCount" : 30,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#30], BroadcastQueryStage 0 "
          },
          "30" : {
            "sign" : 899995805,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 29800787536,
            "rowCount" : 143273017,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [cs_sold_time_sk#93, cs_ship_date_sk#94, cs_bill_customer_sk#95, cs_bill_cdemo_sk#96, cs_bill_hdemo_sk#97, cs_bill_addr_sk#98, cs_ship_customer_sk#99, cs_ship_cdemo_sk#100, cs_ship_hdemo_sk#101, cs_ship_addr_sk#102, cs_call_center_sk#103, cs_catalog_page_sk#104, cs_ship_mode_sk#105, cs_warehouse_sk#106, cs_item_sk#107, cs_promo_sk#108, cs_order_number#109L, cs_quantity#110, cs_wholesale_cost#111, cs_list_price#112, cs_sales_price#113, cs_ext_discount_amt#114, cs_ext_sales_price#115, cs_ext_wholesale_cost#116, ... 10 more fields], `spark_catalog`.`tpcds_100`.`catalog_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "7" : {
            "sign" : -980920497,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 14937411892,
            "rowCount" : 287257921,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_item_sk#8 = i_item_sk#71) "
          },
          "29" : {
            "sign" : -1311945493,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 29651561264,
            "rowCount" : 142555583,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(cs_sold_date_sk#126) AND isnotnull(cs_bill_addr_sk#98)) AND isnotnull(cs_item_sk#107)) AND dynamicpruning#586 [cs_sold_date_sk#126]) "
          },
          "41" : {
            "sign" : 190976030,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 26686103891454000,
            "rowCount" : 953075138980500,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ws_bill_addr_sk#133 = ca_address_sk#472) "
          },
          "3" : {
            "sign" : -827087683,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 16785442,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [i_item_id#72], [i_item_id#72, sum(total_sales#375) AS total_sales#374] "
          },
          "52" : {
            "sign" : -911857393,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 8160000,
            "rowCount" : 204000,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Join LeftSemi, (i_item_id#486 = i_item_id#552), BroadcastQueryStage 19 "
          },
          "28" : {
            "sign" : -1166024147,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 3991556324,
            "rowCount" : 142555583,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_bill_addr_sk#98, cs_item_sk#107, cs_ext_sales_price#115, cs_sold_date_sk#126] "
          }
        },
        "links" : [ {
          "fromId" : 14,
          "fromName" : "LogicalRelation",
          "toId" : 13,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 17,
          "fromName" : "LogicalRelation",
          "toId" : 16,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 16,
          "fromName" : "Filter",
          "toId" : 15,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 15,
          "fromName" : "Project",
          "toId" : 13,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 13,
          "fromName" : "Filter",
          "toId" : 12,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 12,
          "fromName" : "Project",
          "toId" : 11,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 18,
          "fromName" : "LogicalQueryStage",
          "toId" : 11,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "Join",
          "toId" : 10,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "Project",
          "toId" : 9,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 19,
          "fromName" : "LogicalQueryStage",
          "toId" : 9,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "Join",
          "toId" : 8,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "Project",
          "toId" : 7,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 20,
          "fromName" : "LogicalQueryStage",
          "toId" : 7,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Join",
          "toId" : 6,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Project",
          "toId" : 5,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Aggregate",
          "toId" : 4,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 30,
          "fromName" : "LogicalRelation",
          "toId" : 29,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 33,
          "fromName" : "LogicalRelation",
          "toId" : 32,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 32,
          "fromName" : "Filter",
          "toId" : 31,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 31,
          "fromName" : "Project",
          "toId" : 29,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 29,
          "fromName" : "Filter",
          "toId" : 28,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 28,
          "fromName" : "Project",
          "toId" : 27,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 34,
          "fromName" : "LogicalQueryStage",
          "toId" : 27,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 27,
          "fromName" : "Join",
          "toId" : 26,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 26,
          "fromName" : "Project",
          "toId" : 25,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 35,
          "fromName" : "LogicalQueryStage",
          "toId" : 25,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 25,
          "fromName" : "Join",
          "toId" : 24,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 24,
          "fromName" : "Project",
          "toId" : 23,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 36,
          "fromName" : "LogicalQueryStage",
          "toId" : 23,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 23,
          "fromName" : "Join",
          "toId" : 22,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 22,
          "fromName" : "Project",
          "toId" : 21,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 21,
          "fromName" : "Aggregate",
          "toId" : 4,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 46,
          "fromName" : "LogicalRelation",
          "toId" : 45,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 49,
          "fromName" : "LogicalRelation",
          "toId" : 48,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 48,
          "fromName" : "Filter",
          "toId" : 47,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 47,
          "fromName" : "Project",
          "toId" : 45,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 45,
          "fromName" : "Filter",
          "toId" : 44,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 44,
          "fromName" : "Project",
          "toId" : 43,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 50,
          "fromName" : "LogicalQueryStage",
          "toId" : 43,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 43,
          "fromName" : "Join",
          "toId" : 42,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 42,
          "fromName" : "Project",
          "toId" : 41,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 51,
          "fromName" : "LogicalQueryStage",
          "toId" : 41,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 41,
          "fromName" : "Join",
          "toId" : 40,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 40,
          "fromName" : "Project",
          "toId" : 39,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 52,
          "fromName" : "LogicalQueryStage",
          "toId" : 39,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 39,
          "fromName" : "Join",
          "toId" : 38,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 38,
          "fromName" : "Project",
          "toId" : 37,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 37,
          "fromName" : "Aggregate",
          "toId" : 4,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Union",
          "toId" : 3,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Aggregate",
          "toId" : 2,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "LocalLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "LocalLimit",
          "toId" : 0,
          "toName" : "GlobalLimit",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [i_item_id#72 ASC NULLS FIRST, total_sales#374 ASC NULLS FIRST], true\n      +- Aggregate [i_item_id#72], [i_item_id#72, sum(total_sales#375) AS total_sales#374]\n         +- Union false, false\n            :- Aggregate [i_item_id#72], [i_item_id#72, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#21)),17,2) AS total_sales#375]\n            :  +- Project [ss_ext_sales_price#21, i_item_id#72]\n            :     +- Join Inner, (ss_item_sk#8 = i_item_sk#71)\n            :        :- Project [ss_item_sk#8, ss_ext_sales_price#21]\n            :        :  +- Join Inner, (ss_addr_sk#12 = ca_address_sk#58)\n            :        :     :- Project [ss_item_sk#8, ss_addr_sk#12, ss_ext_sales_price#21]\n            :        :     :  +- Join Inner, (ss_sold_date_sk#29 = d_date_sk#30)\n            :        :     :     :- Project [ss_item_sk#8, ss_addr_sk#12, ss_ext_sales_price#21, ss_sold_date_sk#29]\n            :        :     :     :  +- Filter (((isnotnull(ss_sold_date_sk#29) AND isnotnull(ss_addr_sk#12)) AND isnotnull(ss_item_sk#8)) AND dynamicpruning#585 [ss_sold_date_sk#29])\n            :        :     :     :     :  +- Project [d_date_sk#30]\n            :        :     :     :     :     +- Filter (((isnotnull(d_year#36) AND isnotnull(d_moy#38)) AND ((d_year#36 = 1999) AND (d_moy#38 = 9))) AND isnotnull(d_date_sk#30))\n            :        :     :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#30,d_date_id#31,d_date#32,d_month_seq#33,d_week_seq#34,d_quarter_seq#35,d_year#36,d_dow#37,d_moy#38,d_dom#39,d_qoy#40,d_fy_year#41,d_fy_quarter_seq#42,d_fy_week_seq#43,d_day_name#44,d_quarter_name#45,d_holiday#46,d_weekend#47,d_following_holiday#48,d_first_dom#49,d_last_dom#50,d_same_day_ly#51,d_same_day_lq#52,d_current_day#53,... 4 more fields] parquet\n            :        :     :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#7,ss_item_sk#8,ss_customer_sk#9,ss_cdemo_sk#10,ss_hdemo_sk#11,ss_addr_sk#12,ss_store_sk#13,ss_promo_sk#14,ss_ticket_number#15L,ss_quantity#16,ss_wholesale_cost#17,ss_list_price#18,ss_sales_price#19,ss_ext_discount_amt#20,ss_ext_sales_price#21,ss_ext_wholesale_cost#22,ss_ext_list_price#23,ss_ext_tax#24,ss_coupon_amt#25,ss_net_paid#26,ss_net_paid_inc_tax#27,ss_net_profit#28,ss_sold_date_sk#29] parquet\n            :        :     :     +- LogicalQueryStage Project [d_date_sk#30], BroadcastQueryStage 0\n            :        :     +- LogicalQueryStage Project [ca_address_sk#58], BroadcastQueryStage 1\n            :        +- LogicalQueryStage Join LeftSemi, (i_item_id#72 = i_item_id#508), BroadcastQueryStage 15\n            :- Aggregate [i_item_id#423], [i_item_id#423, MakeDecimal(sum(UnscaledValue(cs_ext_sales_price#115)),17,2) AS total_sales#377]\n            :  +- Project [cs_ext_sales_price#115, i_item_id#423]\n            :     +- Join Inner, (cs_item_sk#107 = i_item_sk#422)\n            :        :- Project [cs_item_sk#107, cs_ext_sales_price#115]\n            :        :  +- Join Inner, (cs_bill_addr_sk#98 = ca_address_sk#409)\n            :        :     :- Project [cs_bill_addr_sk#98, cs_item_sk#107, cs_ext_sales_price#115]\n            :        :     :  +- Join Inner, (cs_sold_date_sk#126 = d_date_sk#381)\n            :        :     :     :- Project [cs_bill_addr_sk#98, cs_item_sk#107, cs_ext_sales_price#115, cs_sold_date_sk#126]\n            :        :     :     :  +- Filter (((isnotnull(cs_sold_date_sk#126) AND isnotnull(cs_bill_addr_sk#98)) AND isnotnull(cs_item_sk#107)) AND dynamicpruning#586 [cs_sold_date_sk#126])\n            :        :     :     :     :  +- Project [d_date_sk#381]\n            :        :     :     :     :     +- Filter (((isnotnull(d_year#387) AND isnotnull(d_moy#389)) AND ((d_year#387 = 1999) AND (d_moy#389 = 9))) AND isnotnull(d_date_sk#381))\n            :        :     :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#381,d_date_id#382,d_date#383,d_month_seq#384,d_week_seq#385,d_quarter_seq#386,d_year#387,d_dow#388,d_moy#389,d_dom#390,d_qoy#391,d_fy_year#392,d_fy_quarter_seq#393,d_fy_week_seq#394,d_day_name#395,d_quarter_name#396,d_holiday#397,d_weekend#398,d_following_holiday#399,d_first_dom#400,d_last_dom#401,d_same_day_ly#402,d_same_day_lq#403,d_current_day#404,... 4 more fields] parquet\n            :        :     :     :     +- Relation spark_catalog.tpcds_100.catalog_sales[cs_sold_time_sk#93,cs_ship_date_sk#94,cs_bill_customer_sk#95,cs_bill_cdemo_sk#96,cs_bill_hdemo_sk#97,cs_bill_addr_sk#98,cs_ship_customer_sk#99,cs_ship_cdemo_sk#100,cs_ship_hdemo_sk#101,cs_ship_addr_sk#102,cs_call_center_sk#103,cs_catalog_page_sk#104,cs_ship_mode_sk#105,cs_warehouse_sk#106,cs_item_sk#107,cs_promo_sk#108,cs_order_number#109L,cs_quantity#110,cs_wholesale_cost#111,cs_list_price#112,cs_sales_price#113,cs_ext_discount_amt#114,cs_ext_sales_price#115,cs_ext_wholesale_cost#116,... 10 more fields] parquet\n            :        :     :     +- LogicalQueryStage Project [d_date_sk#381], BroadcastQueryStage 4\n            :        :     +- LogicalQueryStage Project [ca_address_sk#409], BroadcastQueryStage 6\n            :        +- LogicalQueryStage Join LeftSemi, (i_item_id#423 = i_item_id#530), BroadcastQueryStage 17\n            +- Aggregate [i_item_id#486], [i_item_id#486, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#149)),17,2) AS total_sales#379]\n               +- Project [ws_ext_sales_price#149, i_item_id#486]\n                  +- Join Inner, (ws_item_sk#129 = i_item_sk#485)\n                     :- Project [ws_item_sk#129, ws_ext_sales_price#149]\n                     :  +- Join Inner, (ws_bill_addr_sk#133 = ca_address_sk#472)\n                     :     :- Project [ws_item_sk#129, ws_bill_addr_sk#133, ws_ext_sales_price#149]\n                     :     :  +- Join Inner, (ws_sold_date_sk#160 = d_date_sk#444)\n                     :     :     :- Project [ws_item_sk#129, ws_bill_addr_sk#133, ws_ext_sales_price#149, ws_sold_date_sk#160]\n                     :     :     :  +- Filter (((isnotnull(ws_sold_date_sk#160) AND isnotnull(ws_bill_addr_sk#133)) AND isnotnull(ws_item_sk#129)) AND dynamicpruning#587 [ws_sold_date_sk#160])\n                     :     :     :     :  +- Project [d_date_sk#444]\n                     :     :     :     :     +- Filter (((isnotnull(d_year#450) AND isnotnull(d_moy#452)) AND ((d_year#450 = 1999) AND (d_moy#452 = 9))) AND isnotnull(d_date_sk#444))\n                     :     :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#444,d_date_id#445,d_date#446,d_month_seq#447,d_week_seq#448,d_quarter_seq#449,d_year#450,d_dow#451,d_moy#452,d_dom#453,d_qoy#454,d_fy_year#455,d_fy_quarter_seq#456,d_fy_week_seq#457,d_day_name#458,d_quarter_name#459,d_holiday#460,d_weekend#461,d_following_holiday#462,d_first_dom#463,d_last_dom#464,d_same_day_ly#465,d_same_day_lq#466,d_current_day#467,... 4 more fields] parquet\n                     :     :     :     +- Relation spark_catalog.tpcds_100.web_sales[ws_sold_time_sk#127,ws_ship_date_sk#128,ws_item_sk#129,ws_bill_customer_sk#130,ws_bill_cdemo_sk#131,ws_bill_hdemo_sk#132,ws_bill_addr_sk#133,ws_ship_customer_sk#134,ws_ship_cdemo_sk#135,ws_ship_hdemo_sk#136,ws_ship_addr_sk#137,ws_web_page_sk#138,ws_web_site_sk#139,ws_ship_mode_sk#140,ws_warehouse_sk#141,ws_promo_sk#142,ws_order_number#143L,ws_quantity#144,ws_wholesale_cost#145,ws_list_price#146,ws_sales_price#147,ws_ext_discount_amt#148,ws_ext_sales_price#149,ws_ext_wholesale_cost#150,... 10 more fields] parquet\n                     :     :     +- LogicalQueryStage Project [d_date_sk#444], BroadcastQueryStage 10\n                     :     +- LogicalQueryStage Project [ca_address_sk#472], BroadcastQueryStage 12\n                     +- LogicalQueryStage Join LeftSemi, (i_item_id#486 = i_item_id#552), BroadcastQueryStage 19\n"
      },
      "IM" : {
        "inputSizeInBytes" : 86682233080,
        "inputRowCount" : 492238434
      },
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "StartTimeInMs" : 1702227172079,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 6412,
        "IOBytes" : {
          "Total" : 112966583,
          "Details" : {
            "IR" : 95064439,
            "IW" : 0,
            "SR" : 8951072,
            "SW" : 8951072
          }
        }
      }
    },
    "9" : {
      "LQP" : {
        "operators" : {
          "0" : {
            "sign" : -217692999,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
            "sizeInBytes" : 4400,
            "rowCount" : 100,
            "isRuntime" : false,
            "predicate" : " (unknown) GlobalLimit Arguments: 100 "
          },
          "1" : {
            "sign" : 1523788504,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
            "sizeInBytes" : 3674944,
            "rowCount" : 57421,
            "isRuntime" : true,
            "predicate" : " (unknown) LocalLimit Arguments: 100 "
          },
          "2" : {
            "sign" : 1101009231,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 3674944,
            "rowCount" : 57421,
            "isRuntime" : true,
            "predicate" : " (unknown) Sort Arguments: [i_item_id#72 ASC NULLS FIRST, total_sales#374 ASC NULLS FIRST], true "
          },
          "3" : {
            "sign" : -690832480,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 3674944,
            "rowCount" : 57421,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [i_item_id#72], [i_item_id#72, sum(total_sales#375) AS total_sales#374], HashAggregate(keys=[i_item_id#72], functions=[sum(total_sales#375)]) "
          }
        },
        "links" : [ {
          "fromId" : 3,
          "fromName" : "LogicalQueryStage",
          "toId" : 2,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "LocalLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "LocalLimit",
          "toId" : 0,
          "toName" : "GlobalLimit",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [i_item_id#72 ASC NULLS FIRST, total_sales#374 ASC NULLS FIRST], true\n      +- LogicalQueryStage Aggregate [i_item_id#72], [i_item_id#72, sum(total_sales#375) AS total_sales#374], HashAggregate(keys=[i_item_id#72], functions=[sum(total_sales#375)])\n"
      },
      "IM" : {
        "inputSizeInBytes" : 3674944,
        "inputRowCount" : 57421
      },
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "StartTimeInMs" : 1702227178182,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 309,
        "IOBytes" : {
          "Total" : 1084431,
          "Details" : {
            "IR" : 0,
            "IW" : 0,
            "SR" : 1084431,
            "SW" : 0
          }
        }
      }
    },
    "5" : {
      "LQP" : {
        "operators" : {
          "45" : {
            "sign" : 1576487933,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 14968824624,
            "rowCount" : 71965503,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(ws_sold_date_sk#160) AND isnotnull(ws_bill_addr_sk#133)) AND isnotnull(ws_item_sk#129)) AND dynamicpruning#587 [ws_sold_date_sk#160]) "
          },
          "34" : {
            "sign" : 223472588,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1048816,
            "rowCount" : 30,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#381], BroadcastQueryStage 4 "
          },
          "12" : {
            "sign" : -9668412,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 7354676784,
            "rowCount" : 262667028,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#8, ss_addr_sk#12, ss_ext_sales_price#21, ss_sold_date_sk#29] "
          },
          "51" : {
            "sign" : -772210292,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 24777216,
            "rowCount" : 441450,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ca_address_sk#472], BroadcastQueryStage 12 "
          },
          "8" : {
            "sign" : -469502694,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 69572615706360000,
            "rowCount" : 3478630785318000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#8, ss_ext_sales_price#21] "
          },
          "19" : {
            "sign" : 1204149022,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 24777216,
            "rowCount" : 441450,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ca_address_sk#58], BroadcastQueryStage 1 "
          },
          "23" : {
            "sign" : 1632135370,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 3665425537408560750000,
            "rowCount" : 83305125850194562500,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cs_item_sk#107 = i_item_sk#422) "
          },
          "4" : {
            "sign" : -1813241361,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Union",
            "sizeInBytes" : 10038749391355171500000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Union Arguments: false, false "
          },
          "40" : {
            "sign" : -1874390941,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 19061502779610000,
            "rowCount" : 953075138980500,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_item_sk#129, ws_ext_sales_price#149] "
          },
          "15" : {
            "sign" : -337637781,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 900,
            "rowCount" : 75,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#30] "
          },
          "11" : {
            "sign" : -140391299,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 252160346880,
            "rowCount" : 7880010840,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#29 = d_date_sk#30) "
          },
          "9" : {
            "sign" : 1492968274,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 97401661988904000,
            "rowCount" : 3478630785318000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_addr_sk#12 = ca_address_sk#58) "
          },
          "44" : {
            "sign" : 2013399350,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 2015034084,
            "rowCount" : 71965503,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_item_sk#129, ws_bill_addr_sk#133, ws_ext_sales_price#149, ws_sold_date_sk#160] "
          },
          "33" : {
            "sign" : 470547457,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#381, d_date_id#382, d_date#383, d_month_seq#384, d_week_seq#385, d_quarter_seq#386, d_year#387, d_dow#388, d_moy#389, d_dom#390, d_qoy#391, d_fy_year#392, d_fy_quarter_seq#393, d_fy_week_seq#394, d_day_name#395, d_quarter_name#396, d_holiday#397, d_weekend#398, d_following_holiday#399, d_first_dom#400, d_last_dom#401, d_same_day_ly#402, d_same_day_lq#403, d_current_day#404, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "22" : {
            "sign" : -1172096873,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 2998984530607004250000,
            "rowCount" : 83305125850194562500,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_ext_sales_price#115, i_item_id#423] "
          },
          "26" : {
            "sign" : -1618066801,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 102640019760,
            "rowCount" : 4276667490,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_bill_addr_sk#98, cs_item_sk#107, cs_ext_sales_price#115] "
          },
          "50" : {
            "sign" : -1360363427,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1048816,
            "rowCount" : 30,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#444], BroadcastQueryStage 10 "
          },
          "37" : {
            "sign" : 486655461,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 1513959858270524250000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [i_item_id#486], [i_item_id#486, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#149)),17,2) AS total_sales#379] "
          },
          "13" : {
            "sign" : 657223440,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 39925388256,
            "rowCount" : 262667028,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(ss_sold_date_sk#29) AND isnotnull(ss_addr_sk#12)) AND isnotnull(ss_item_sk#8)) AND dynamicpruning#585 [ss_sold_date_sk#29]) "
          },
          "46" : {
            "sign" : 542040227,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 14972593792,
            "rowCount" : 71983624,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ws_sold_time_sk#127, ws_ship_date_sk#128, ws_item_sk#129, ws_bill_customer_sk#130, ws_bill_cdemo_sk#131, ws_bill_hdemo_sk#132, ws_bill_addr_sk#133, ws_ship_customer_sk#134, ws_ship_cdemo_sk#135, ws_ship_hdemo_sk#136, ws_ship_addr_sk#137, ws_web_page_sk#138, ws_web_site_sk#139, ws_ship_mode_sk#140, ws_warehouse_sk#141, ws_promo_sk#142, ws_order_number#143L, ws_quantity#144, ws_wholesale_cost#145, ws_list_price#146, ws_sales_price#147, ws_ext_discount_amt#148, ws_ext_sales_price#149, ws_ext_wholesale_cost#150, ... 10 more fields], `spark_catalog`.`tpcds_100`.`web_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "24" : {
            "sign" : 2018221832,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 37758697269210000,
            "rowCount" : 1887934863460500,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_item_sk#107, cs_ext_sales_price#115] "
          },
          "35" : {
            "sign" : 1773770563,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 24777216,
            "rowCount" : 441450,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ca_address_sk#409], BroadcastQueryStage 6 "
          },
          "16" : {
            "sign" : 1189050492,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 18450,
            "rowCount" : 75,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(d_year#36) AND isnotnull(d_moy#38)) AND ((d_year#36 = 1999) AND (d_moy#38 = 9))) AND isnotnull(d_date_sk#30)) "
          },
          "5" : {
            "sign" : -1520370996,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 5525805002477643000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [i_item_id#72], [i_item_id#72, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#21)),17,2) AS total_sales#375] "
          },
          "10" : {
            "sign" : -1492820802,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 189120260160,
            "rowCount" : 7880010840,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#8, ss_addr_sk#12, ss_ext_sales_price#21] "
          },
          "48" : {
            "sign" : -73903649,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 18450,
            "rowCount" : 75,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(d_year#450) AND isnotnull(d_moy#452)) AND ((d_year#450 = 1999) AND (d_moy#452 = 9))) AND isnotnull(d_date_sk#444)) "
          },
          "21" : {
            "sign" : -804068977,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 2998984530607004250000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [i_item_id#423], [i_item_id#423, MakeDecimal(sum(UnscaledValue(cs_ext_sales_price#115)),17,2) AS total_sales#377] "
          },
          "43" : {
            "sign" : 1011816376,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 69086882880,
            "rowCount" : 2158965090,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ws_sold_date_sk#160 = d_date_sk#444) "
          },
          "32" : {
            "sign" : 2101292456,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 18450,
            "rowCount" : 75,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(d_year#387) AND isnotnull(d_moy#389)) AND ((d_year#387 = 1999) AND (d_moy#389 = 9))) AND isnotnull(d_date_sk#381)) "
          },
          "49" : {
            "sign" : 1327199472,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#444, d_date_id#445, d_date#446, d_month_seq#447, d_week_seq#448, d_quarter_seq#449, d_year#450, d_dow#451, d_moy#452, d_dom#453, d_qoy#454, d_fy_year#455, d_fy_quarter_seq#456, d_fy_week_seq#457, d_day_name#458, d_quarter_name#459, d_holiday#460, d_weekend#461, d_following_holiday#462, d_first_dom#463, d_last_dom#464, d_same_day_ly#465, d_same_day_lq#466, d_current_day#467, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "6" : {
            "sign" : -1551374928,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 5525805002477643000000,
            "rowCount" : 153494583402156750000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_ext_sales_price#21, i_item_id#72] "
          },
          "36" : {
            "sign" : 873673748,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 5826104,
            "rowCount" : 44125,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Join LeftSemi, (i_item_id#423 = i_item_id#530), BroadcastQueryStage 17 "
          },
          "1" : {
            "sign" : -1908669067,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
            "sizeInBytes" : 12269582589434098500000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) LocalLimit Arguments: 100 "
          },
          "39" : {
            "sign" : -1964044955,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 1850395382330640750000,
            "rowCount" : 42054440507514562500,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ws_item_sk#129 = i_item_sk#485) "
          },
          "17" : {
            "sign" : -607567904,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#30, d_date_id#31, d_date#32, d_month_seq#33, d_week_seq#34, d_quarter_seq#35, d_year#36, d_dow#37, d_moy#38, d_dom#39, d_qoy#40, d_fy_year#41, d_fy_quarter_seq#42, d_fy_week_seq#43, d_day_name#44, d_quarter_name#45, d_holiday#46, d_weekend#47, d_following_holiday#48, d_first_dom#49, d_last_dom#50, d_same_day_ly#51, d_same_day_lq#52, d_current_day#53, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "25" : {
            "sign" : -966960688,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 52862176176894000,
            "rowCount" : 1887934863460500,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cs_bill_addr_sk#98 = ca_address_sk#409) "
          },
          "14" : {
            "sign" : 1918777458,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#7, ss_item_sk#8, ss_customer_sk#9, ss_cdemo_sk#10, ss_hdemo_sk#11, ss_addr_sk#12, ss_store_sk#13, ss_promo_sk#14, ss_ticket_number#15L, ss_quantity#16, ss_wholesale_cost#17, ss_list_price#18, ss_sales_price#19, ss_ext_discount_amt#20, ss_ext_sales_price#21, ss_ext_wholesale_cost#22, ss_ext_list_price#23, ss_ext_tax#24, ss_coupon_amt#25, ss_net_paid#26, ss_net_paid_inc_tax#27, ss_net_profit#28, ss_sold_date_sk#29], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "47" : {
            "sign" : 46144887,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 900,
            "rowCount" : 75,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#444] "
          },
          "31" : {
            "sign" : 1280402312,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 900,
            "rowCount" : 75,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#381] "
          },
          "42" : {
            "sign" : -793711286,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 51815162160,
            "rowCount" : 2158965090,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_item_sk#129, ws_bill_addr_sk#133, ws_ext_sales_price#149] "
          },
          "0" : {
            "sign" : 680260820,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
            "sizeInBytes" : 4400,
            "rowCount" : 100,
            "isRuntime" : false,
            "predicate" : " (unknown) GlobalLimit Arguments: 100 "
          },
          "20" : {
            "sign" : -944567265,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 5826104,
            "rowCount" : 44125,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Join LeftSemi, (i_item_id#72 = i_item_id#508), BroadcastQueryStage 15 "
          },
          "27" : {
            "sign" : -1785926450,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 136853359680,
            "rowCount" : 4276667490,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cs_sold_date_sk#126 = d_date_sk#381) "
          },
          "2" : {
            "sign" : -1853801282,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 12269582589434098500000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [i_item_id#72 ASC NULLS FIRST, total_sales#374 ASC NULLS FIRST], true "
          },
          "38" : {
            "sign" : 1671141828,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 1513959858270524250000,
            "rowCount" : 42054440507514562500,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_ext_sales_price#149, i_item_id#486] "
          },
          "18" : {
            "sign" : -711428433,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1048816,
            "rowCount" : 30,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#30], BroadcastQueryStage 0 "
          },
          "30" : {
            "sign" : 899995805,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 29800787536,
            "rowCount" : 143273017,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [cs_sold_time_sk#93, cs_ship_date_sk#94, cs_bill_customer_sk#95, cs_bill_cdemo_sk#96, cs_bill_hdemo_sk#97, cs_bill_addr_sk#98, cs_ship_customer_sk#99, cs_ship_cdemo_sk#100, cs_ship_hdemo_sk#101, cs_ship_addr_sk#102, cs_call_center_sk#103, cs_catalog_page_sk#104, cs_ship_mode_sk#105, cs_warehouse_sk#106, cs_item_sk#107, cs_promo_sk#108, cs_order_number#109L, cs_quantity#110, cs_wholesale_cost#111, cs_list_price#112, cs_sales_price#113, cs_ext_discount_amt#114, cs_ext_sales_price#115, cs_ext_wholesale_cost#116, ... 10 more fields], `spark_catalog`.`tpcds_100`.`catalog_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "7" : {
            "sign" : -980920497,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 6753761669694897000000,
            "rowCount" : 153494583402156750000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_item_sk#8 = i_item_sk#71) "
          },
          "29" : {
            "sign" : -1311945493,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 29651561264,
            "rowCount" : 142555583,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(cs_sold_date_sk#126) AND isnotnull(cs_bill_addr_sk#98)) AND isnotnull(cs_item_sk#107)) AND dynamicpruning#586 [cs_sold_date_sk#126]) "
          },
          "41" : {
            "sign" : 190976030,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 26686103891454000,
            "rowCount" : 953075138980500,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ws_bill_addr_sk#133 = ca_address_sk#472) "
          },
          "3" : {
            "sign" : -827087683,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 12269582589434098500000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [i_item_id#72], [i_item_id#72, sum(total_sales#375) AS total_sales#374] "
          },
          "52" : {
            "sign" : -911857393,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 5826104,
            "rowCount" : 44125,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Join LeftSemi, (i_item_id#486 = i_item_id#552), BroadcastQueryStage 19 "
          },
          "28" : {
            "sign" : -1166024147,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 3991556324,
            "rowCount" : 142555583,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_bill_addr_sk#98, cs_item_sk#107, cs_ext_sales_price#115, cs_sold_date_sk#126] "
          }
        },
        "links" : [ {
          "fromId" : 14,
          "fromName" : "LogicalRelation",
          "toId" : 13,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 17,
          "fromName" : "LogicalRelation",
          "toId" : 16,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 16,
          "fromName" : "Filter",
          "toId" : 15,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 15,
          "fromName" : "Project",
          "toId" : 13,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 13,
          "fromName" : "Filter",
          "toId" : 12,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 12,
          "fromName" : "Project",
          "toId" : 11,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 18,
          "fromName" : "LogicalQueryStage",
          "toId" : 11,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "Join",
          "toId" : 10,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "Project",
          "toId" : 9,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 19,
          "fromName" : "LogicalQueryStage",
          "toId" : 9,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "Join",
          "toId" : 8,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "Project",
          "toId" : 7,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 20,
          "fromName" : "LogicalQueryStage",
          "toId" : 7,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Join",
          "toId" : 6,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Project",
          "toId" : 5,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Aggregate",
          "toId" : 4,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 30,
          "fromName" : "LogicalRelation",
          "toId" : 29,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 33,
          "fromName" : "LogicalRelation",
          "toId" : 32,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 32,
          "fromName" : "Filter",
          "toId" : 31,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 31,
          "fromName" : "Project",
          "toId" : 29,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 29,
          "fromName" : "Filter",
          "toId" : 28,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 28,
          "fromName" : "Project",
          "toId" : 27,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 34,
          "fromName" : "LogicalQueryStage",
          "toId" : 27,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 27,
          "fromName" : "Join",
          "toId" : 26,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 26,
          "fromName" : "Project",
          "toId" : 25,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 35,
          "fromName" : "LogicalQueryStage",
          "toId" : 25,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 25,
          "fromName" : "Join",
          "toId" : 24,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 24,
          "fromName" : "Project",
          "toId" : 23,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 36,
          "fromName" : "LogicalQueryStage",
          "toId" : 23,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 23,
          "fromName" : "Join",
          "toId" : 22,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 22,
          "fromName" : "Project",
          "toId" : 21,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 21,
          "fromName" : "Aggregate",
          "toId" : 4,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 46,
          "fromName" : "LogicalRelation",
          "toId" : 45,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 49,
          "fromName" : "LogicalRelation",
          "toId" : 48,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 48,
          "fromName" : "Filter",
          "toId" : 47,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 47,
          "fromName" : "Project",
          "toId" : 45,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 45,
          "fromName" : "Filter",
          "toId" : 44,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 44,
          "fromName" : "Project",
          "toId" : 43,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 50,
          "fromName" : "LogicalQueryStage",
          "toId" : 43,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 43,
          "fromName" : "Join",
          "toId" : 42,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 42,
          "fromName" : "Project",
          "toId" : 41,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 51,
          "fromName" : "LogicalQueryStage",
          "toId" : 41,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 41,
          "fromName" : "Join",
          "toId" : 40,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 40,
          "fromName" : "Project",
          "toId" : 39,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 52,
          "fromName" : "LogicalQueryStage",
          "toId" : 39,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 39,
          "fromName" : "Join",
          "toId" : 38,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 38,
          "fromName" : "Project",
          "toId" : 37,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 37,
          "fromName" : "Aggregate",
          "toId" : 4,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Union",
          "toId" : 3,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Aggregate",
          "toId" : 2,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "LocalLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "LocalLimit",
          "toId" : 0,
          "toName" : "GlobalLimit",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [i_item_id#72 ASC NULLS FIRST, total_sales#374 ASC NULLS FIRST], true\n      +- Aggregate [i_item_id#72], [i_item_id#72, sum(total_sales#375) AS total_sales#374]\n         +- Union false, false\n            :- Aggregate [i_item_id#72], [i_item_id#72, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#21)),17,2) AS total_sales#375]\n            :  +- Project [ss_ext_sales_price#21, i_item_id#72]\n            :     +- Join Inner, (ss_item_sk#8 = i_item_sk#71)\n            :        :- Project [ss_item_sk#8, ss_ext_sales_price#21]\n            :        :  +- Join Inner, (ss_addr_sk#12 = ca_address_sk#58)\n            :        :     :- Project [ss_item_sk#8, ss_addr_sk#12, ss_ext_sales_price#21]\n            :        :     :  +- Join Inner, (ss_sold_date_sk#29 = d_date_sk#30)\n            :        :     :     :- Project [ss_item_sk#8, ss_addr_sk#12, ss_ext_sales_price#21, ss_sold_date_sk#29]\n            :        :     :     :  +- Filter (((isnotnull(ss_sold_date_sk#29) AND isnotnull(ss_addr_sk#12)) AND isnotnull(ss_item_sk#8)) AND dynamicpruning#585 [ss_sold_date_sk#29])\n            :        :     :     :     :  +- Project [d_date_sk#30]\n            :        :     :     :     :     +- Filter (((isnotnull(d_year#36) AND isnotnull(d_moy#38)) AND ((d_year#36 = 1999) AND (d_moy#38 = 9))) AND isnotnull(d_date_sk#30))\n            :        :     :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#30,d_date_id#31,d_date#32,d_month_seq#33,d_week_seq#34,d_quarter_seq#35,d_year#36,d_dow#37,d_moy#38,d_dom#39,d_qoy#40,d_fy_year#41,d_fy_quarter_seq#42,d_fy_week_seq#43,d_day_name#44,d_quarter_name#45,d_holiday#46,d_weekend#47,d_following_holiday#48,d_first_dom#49,d_last_dom#50,d_same_day_ly#51,d_same_day_lq#52,d_current_day#53,... 4 more fields] parquet\n            :        :     :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#7,ss_item_sk#8,ss_customer_sk#9,ss_cdemo_sk#10,ss_hdemo_sk#11,ss_addr_sk#12,ss_store_sk#13,ss_promo_sk#14,ss_ticket_number#15L,ss_quantity#16,ss_wholesale_cost#17,ss_list_price#18,ss_sales_price#19,ss_ext_discount_amt#20,ss_ext_sales_price#21,ss_ext_wholesale_cost#22,ss_ext_list_price#23,ss_ext_tax#24,ss_coupon_amt#25,ss_net_paid#26,ss_net_paid_inc_tax#27,ss_net_profit#28,ss_sold_date_sk#29] parquet\n            :        :     :     +- LogicalQueryStage Project [d_date_sk#30], BroadcastQueryStage 0\n            :        :     +- LogicalQueryStage Project [ca_address_sk#58], BroadcastQueryStage 1\n            :        +- LogicalQueryStage Join LeftSemi, (i_item_id#72 = i_item_id#508), BroadcastQueryStage 15\n            :- Aggregate [i_item_id#423], [i_item_id#423, MakeDecimal(sum(UnscaledValue(cs_ext_sales_price#115)),17,2) AS total_sales#377]\n            :  +- Project [cs_ext_sales_price#115, i_item_id#423]\n            :     +- Join Inner, (cs_item_sk#107 = i_item_sk#422)\n            :        :- Project [cs_item_sk#107, cs_ext_sales_price#115]\n            :        :  +- Join Inner, (cs_bill_addr_sk#98 = ca_address_sk#409)\n            :        :     :- Project [cs_bill_addr_sk#98, cs_item_sk#107, cs_ext_sales_price#115]\n            :        :     :  +- Join Inner, (cs_sold_date_sk#126 = d_date_sk#381)\n            :        :     :     :- Project [cs_bill_addr_sk#98, cs_item_sk#107, cs_ext_sales_price#115, cs_sold_date_sk#126]\n            :        :     :     :  +- Filter (((isnotnull(cs_sold_date_sk#126) AND isnotnull(cs_bill_addr_sk#98)) AND isnotnull(cs_item_sk#107)) AND dynamicpruning#586 [cs_sold_date_sk#126])\n            :        :     :     :     :  +- Project [d_date_sk#381]\n            :        :     :     :     :     +- Filter (((isnotnull(d_year#387) AND isnotnull(d_moy#389)) AND ((d_year#387 = 1999) AND (d_moy#389 = 9))) AND isnotnull(d_date_sk#381))\n            :        :     :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#381,d_date_id#382,d_date#383,d_month_seq#384,d_week_seq#385,d_quarter_seq#386,d_year#387,d_dow#388,d_moy#389,d_dom#390,d_qoy#391,d_fy_year#392,d_fy_quarter_seq#393,d_fy_week_seq#394,d_day_name#395,d_quarter_name#396,d_holiday#397,d_weekend#398,d_following_holiday#399,d_first_dom#400,d_last_dom#401,d_same_day_ly#402,d_same_day_lq#403,d_current_day#404,... 4 more fields] parquet\n            :        :     :     :     +- Relation spark_catalog.tpcds_100.catalog_sales[cs_sold_time_sk#93,cs_ship_date_sk#94,cs_bill_customer_sk#95,cs_bill_cdemo_sk#96,cs_bill_hdemo_sk#97,cs_bill_addr_sk#98,cs_ship_customer_sk#99,cs_ship_cdemo_sk#100,cs_ship_hdemo_sk#101,cs_ship_addr_sk#102,cs_call_center_sk#103,cs_catalog_page_sk#104,cs_ship_mode_sk#105,cs_warehouse_sk#106,cs_item_sk#107,cs_promo_sk#108,cs_order_number#109L,cs_quantity#110,cs_wholesale_cost#111,cs_list_price#112,cs_sales_price#113,cs_ext_discount_amt#114,cs_ext_sales_price#115,cs_ext_wholesale_cost#116,... 10 more fields] parquet\n            :        :     :     +- LogicalQueryStage Project [d_date_sk#381], BroadcastQueryStage 4\n            :        :     +- LogicalQueryStage Project [ca_address_sk#409], BroadcastQueryStage 6\n            :        +- LogicalQueryStage Join LeftSemi, (i_item_id#423 = i_item_id#530), BroadcastQueryStage 17\n            +- Aggregate [i_item_id#486], [i_item_id#486, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#149)),17,2) AS total_sales#379]\n               +- Project [ws_ext_sales_price#149, i_item_id#486]\n                  +- Join Inner, (ws_item_sk#129 = i_item_sk#485)\n                     :- Project [ws_item_sk#129, ws_ext_sales_price#149]\n                     :  +- Join Inner, (ws_bill_addr_sk#133 = ca_address_sk#472)\n                     :     :- Project [ws_item_sk#129, ws_bill_addr_sk#133, ws_ext_sales_price#149]\n                     :     :  +- Join Inner, (ws_sold_date_sk#160 = d_date_sk#444)\n                     :     :     :- Project [ws_item_sk#129, ws_bill_addr_sk#133, ws_ext_sales_price#149, ws_sold_date_sk#160]\n                     :     :     :  +- Filter (((isnotnull(ws_sold_date_sk#160) AND isnotnull(ws_bill_addr_sk#133)) AND isnotnull(ws_item_sk#129)) AND dynamicpruning#587 [ws_sold_date_sk#160])\n                     :     :     :     :  +- Project [d_date_sk#444]\n                     :     :     :     :     +- Filter (((isnotnull(d_year#450) AND isnotnull(d_moy#452)) AND ((d_year#450 = 1999) AND (d_moy#452 = 9))) AND isnotnull(d_date_sk#444))\n                     :     :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#444,d_date_id#445,d_date#446,d_month_seq#447,d_week_seq#448,d_quarter_seq#449,d_year#450,d_dow#451,d_moy#452,d_dom#453,d_qoy#454,d_fy_year#455,d_fy_quarter_seq#456,d_fy_week_seq#457,d_day_name#458,d_quarter_name#459,d_holiday#460,d_weekend#461,d_following_holiday#462,d_first_dom#463,d_last_dom#464,d_same_day_ly#465,d_same_day_lq#466,d_current_day#467,... 4 more fields] parquet\n                     :     :     :     +- Relation spark_catalog.tpcds_100.web_sales[ws_sold_time_sk#127,ws_ship_date_sk#128,ws_item_sk#129,ws_bill_customer_sk#130,ws_bill_cdemo_sk#131,ws_bill_hdemo_sk#132,ws_bill_addr_sk#133,ws_ship_customer_sk#134,ws_ship_cdemo_sk#135,ws_ship_hdemo_sk#136,ws_ship_addr_sk#137,ws_web_page_sk#138,ws_web_site_sk#139,ws_ship_mode_sk#140,ws_warehouse_sk#141,ws_promo_sk#142,ws_order_number#143L,ws_quantity#144,ws_wholesale_cost#145,ws_list_price#146,ws_sales_price#147,ws_ext_discount_amt#148,ws_ext_sales_price#149,ws_ext_wholesale_cost#150,... 10 more fields] parquet\n                     :     :     +- LogicalQueryStage Project [d_date_sk#444], BroadcastQueryStage 10\n                     :     +- LogicalQueryStage Project [ca_address_sk#472], BroadcastQueryStage 12\n                     +- LogicalQueryStage Join LeftSemi, (i_item_id#486 = i_item_id#552), BroadcastQueryStage 19\n"
      },
      "IM" : {
        "inputSizeInBytes" : 86675231392,
        "inputRowCount" : 491758809
      },
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "StartTimeInMs" : 1702227172116,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 6375,
        "IOBytes" : {
          "Total" : 112966583,
          "Details" : {
            "IR" : 95064439,
            "IW" : 0,
            "SR" : 8951072,
            "SW" : 8951072
          }
        }
      }
    },
    "6" : {
      "LQP" : {
        "operators" : {
          "4" : {
            "sign" : 1671614867,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Union",
            "sizeInBytes" : 13320336,
            "rowCount" : 312200,
            "isRuntime" : false,
            "predicate" : " (unknown) Union Arguments: false, false "
          },
          "5" : {
            "sign" : 142525367,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 4577848,
            "rowCount" : 104042,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [i_item_id#72], [i_item_id#72, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#21)),17,2) AS total_sales#375], HashAggregate(keys=[i_item_id#72], functions=[sum(UnscaledValue(ss_ext_sales_price#21))]) "
          },
          "6" : {
            "sign" : 382348755,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 4577848,
            "rowCount" : 104042,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [i_item_id#423], [i_item_id#423, MakeDecimal(sum(UnscaledValue(cs_ext_sales_price#115)),17,2) AS total_sales#377], HashAggregate(keys=[i_item_id#423], functions=[sum(UnscaledValue(cs_ext_sales_price#115))]) "
          },
          "1" : {
            "sign" : -1492076833,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
            "sizeInBytes" : 16280410,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) LocalLimit Arguments: 100 "
          },
          "0" : {
            "sign" : -1100361266,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
            "sizeInBytes" : 4400,
            "rowCount" : 100,
            "isRuntime" : false,
            "predicate" : " (unknown) GlobalLimit Arguments: 100 "
          },
          "2" : {
            "sign" : 2128402468,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 16280410,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [i_item_id#72 ASC NULLS FIRST, total_sales#374 ASC NULLS FIRST], true "
          },
          "7" : {
            "sign" : -25814476,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 4164640,
            "rowCount" : 104116,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [i_item_id#486], [i_item_id#486, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#149)),17,2) AS total_sales#379], HashAggregate(keys=[i_item_id#486], functions=[sum(UnscaledValue(ws_ext_sales_price#149))]) "
          },
          "3" : {
            "sign" : -1469468953,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 16280410,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [i_item_id#72], [i_item_id#72, sum(total_sales#375) AS total_sales#374] "
          }
        },
        "links" : [ {
          "fromId" : 5,
          "fromName" : "LogicalQueryStage",
          "toId" : 4,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "LogicalQueryStage",
          "toId" : 4,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "LogicalQueryStage",
          "toId" : 4,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Union",
          "toId" : 3,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Aggregate",
          "toId" : 2,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "LocalLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "LocalLimit",
          "toId" : 0,
          "toName" : "GlobalLimit",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [i_item_id#72 ASC NULLS FIRST, total_sales#374 ASC NULLS FIRST], true\n      +- Aggregate [i_item_id#72], [i_item_id#72, sum(total_sales#375) AS total_sales#374]\n         +- Union false, false\n            :- LogicalQueryStage Aggregate [i_item_id#72], [i_item_id#72, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#21)),17,2) AS total_sales#375], HashAggregate(keys=[i_item_id#72], functions=[sum(UnscaledValue(ss_ext_sales_price#21))])\n            :- LogicalQueryStage Aggregate [i_item_id#423], [i_item_id#423, MakeDecimal(sum(UnscaledValue(cs_ext_sales_price#115)),17,2) AS total_sales#377], HashAggregate(keys=[i_item_id#423], functions=[sum(UnscaledValue(cs_ext_sales_price#115))])\n            +- LogicalQueryStage Aggregate [i_item_id#486], [i_item_id#486, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#149)),17,2) AS total_sales#379], HashAggregate(keys=[i_item_id#486], functions=[sum(UnscaledValue(ws_ext_sales_price#149))])\n"
      },
      "IM" : {
        "inputSizeInBytes" : 13320336,
        "inputRowCount" : 312200
      },
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 12,
        "FinishedTasksNum" : 18,
        "FinishedTasksTotalTimeInMs" : 12090.0,
        "FinishedTasksDistributionInMs" : [ 119.0, 128.0, 238.0, 396.0, 3537.0 ]
      },
      "StartTimeInMs" : 1702227176037,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 2454,
        "IOBytes" : {
          "Total" : 97430125,
          "Details" : {
            "IR" : 81281450,
            "IW" : 0,
            "SR" : 8951072,
            "SW" : 7197603
          }
        }
      }
    },
    "1" : {
      "LQP" : {
        "operators" : {
          "45" : {
            "sign" : -1655071132,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 4577848,
            "rowCount" : 104042,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [i_item_id#486], [i_item_id#486, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#149)),17,2) AS total_sales#379] "
          },
          "34" : {
            "sign" : 899995805,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 29800787536,
            "rowCount" : 143273017,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [cs_sold_time_sk#93, cs_ship_date_sk#94, cs_bill_customer_sk#95, cs_bill_cdemo_sk#96, cs_bill_hdemo_sk#97, cs_bill_addr_sk#98, cs_ship_customer_sk#99, cs_ship_cdemo_sk#100, cs_ship_hdemo_sk#101, cs_ship_addr_sk#102, cs_call_center_sk#103, cs_catalog_page_sk#104, cs_ship_mode_sk#105, cs_warehouse_sk#106, cs_item_sk#107, cs_promo_sk#108, cs_order_number#109L, cs_quantity#110, cs_wholesale_cost#111, cs_list_price#112, cs_sales_price#113, cs_ext_discount_amt#114, cs_ext_sales_price#115, cs_ext_wholesale_cost#116, ... 10 more fields], `spark_catalog`.`tpcds_100`.`catalog_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "12" : {
            "sign" : -9668412,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 7354676784,
            "rowCount" : 262667028,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#8, ss_addr_sk#12, ss_ext_sales_price#21, ss_sold_date_sk#29] "
          },
          "51" : {
            "sign" : 1011816376,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 69086882880,
            "rowCount" : 2158965090,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ws_sold_date_sk#160 = d_date_sk#444) "
          },
          "8" : {
            "sign" : -469502694,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 5504661760,
            "rowCount" : 275233088,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#8, ss_ext_sales_price#21] "
          },
          "19" : {
            "sign" : 1204149022,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 5362296,
            "rowCount" : 446858,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ca_address_sk#58], BroadcastQueryStage 1 "
          },
          "23" : {
            "sign" : 655949841,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 86904000,
            "rowCount" : 204000,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [i_item_sk#71, i_item_id#72, i_rec_start_date#73, i_rec_end_date#74, i_item_desc#75, i_current_price#76, i_wholesale_cost#77, i_brand_id#78, i_brand#79, i_class_id#80, i_class#81, i_category_id#82, i_category#83, i_manufact_id#84, i_manufact#85, i_size#86, i_formulation#87, i_color#88, i_units#89, i_container#90, i_manager_id#91, i_product_name#92], `spark_catalog`.`tpcds_100`.`item`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "62" : {
            "sign" : 182137899,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 86904000,
            "rowCount" : 204000,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: isnotnull(i_item_sk#485) "
          },
          "4" : {
            "sign" : -682173377,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Union",
            "sizeInBytes" : 13733544,
            "rowCount" : 312126,
            "isRuntime" : false,
            "predicate" : " (unknown) Union Arguments: false, false "
          },
          "40" : {
            "sign" : -1859382206,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 8160000,
            "rowCount" : 204000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (i_item_id#423 = i_item_id#530) "
          },
          "15" : {
            "sign" : -337637781,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 900,
            "rowCount" : 75,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#30] "
          },
          "11" : {
            "sign" : -140391299,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 252160346880,
            "rowCount" : 7880010840,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#29 = d_date_sk#30) "
          },
          "9" : {
            "sign" : 1492968274,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 7706526464,
            "rowCount" : 275233088,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_addr_sk#12 = ca_address_sk#58) "
          },
          "44" : {
            "sign" : 545625791,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 732672,
            "rowCount" : 20352,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_item_id#530], BroadcastQueryStage 8 "
          },
          "33" : {
            "sign" : -1311945493,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 29651561264,
            "rowCount" : 142555583,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(cs_sold_date_sk#126) AND isnotnull(cs_bill_addr_sk#98)) AND isnotnull(cs_item_sk#107)) AND dynamicpruning#586 [cs_sold_date_sk#126]) "
          },
          "22" : {
            "sign" : -1729853405,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 86904000,
            "rowCount" : 204000,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: isnotnull(i_item_sk#71) "
          },
          "56" : {
            "sign" : -73903649,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 18450,
            "rowCount" : 75,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(d_year#450) AND isnotnull(d_moy#452)) AND ((d_year#450 = 1999) AND (d_moy#452 = 9))) AND isnotnull(d_date_sk#444)) "
          },
          "55" : {
            "sign" : 46144887,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 900,
            "rowCount" : 75,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#444] "
          },
          "26" : {
            "sign" : -27866107,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 6330475932,
            "rowCount" : 143874453,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_ext_sales_price#115, i_item_id#423] "
          },
          "50" : {
            "sign" : -793711286,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 51815162160,
            "rowCount" : 2158965090,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_item_sk#129, ws_bill_addr_sk#133, ws_ext_sales_price#149] "
          },
          "37" : {
            "sign" : 470547457,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#381, d_date_id#382, d_date#383, d_month_seq#384, d_week_seq#385, d_quarter_seq#386, d_year#387, d_dow#388, d_moy#389, d_dom#390, d_qoy#391, d_fy_year#392, d_fy_quarter_seq#393, d_fy_week_seq#394, d_day_name#395, d_quarter_name#396, d_holiday#397, d_weekend#398, d_following_holiday#399, d_first_dom#400, d_last_dom#401, d_same_day_ly#402, d_same_day_lq#403, d_current_day#404, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "61" : {
            "sign" : -1607600508,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 8160000,
            "rowCount" : 204000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_item_sk#485, i_item_id#486] "
          },
          "13" : {
            "sign" : 657223440,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 39925388256,
            "rowCount" : 262667028,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(ss_sold_date_sk#29) AND isnotnull(ss_addr_sk#12)) AND isnotnull(ss_item_sk#8)) AND dynamicpruning#585 [ss_sold_date_sk#29]) "
          },
          "46" : {
            "sign" : -576761995,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 3164343820,
            "rowCount" : 71916905,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_ext_sales_price#149, i_item_id#486] "
          },
          "24" : {
            "sign" : -2091057990,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 732672,
            "rowCount" : 20352,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_item_id#508], BroadcastQueryStage 2 "
          },
          "35" : {
            "sign" : 1280402312,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 900,
            "rowCount" : 75,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#381] "
          },
          "16" : {
            "sign" : 1189050492,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 18450,
            "rowCount" : 75,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(d_year#36) AND isnotnull(d_moy#38)) AND ((d_year#36 = 1999) AND (d_moy#38 = 9))) AND isnotnull(d_date_sk#30)) "
          },
          "5" : {
            "sign" : -1521361433,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 4577848,
            "rowCount" : 104042,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [i_item_id#72], [i_item_id#72, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#21)),17,2) AS total_sales#375] "
          },
          "10" : {
            "sign" : -1492820802,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 189120260160,
            "rowCount" : 7880010840,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#8, ss_addr_sk#12, ss_ext_sales_price#21] "
          },
          "59" : {
            "sign" : -772210292,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 5362296,
            "rowCount" : 446858,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ca_address_sk#472], BroadcastQueryStage 12 "
          },
          "48" : {
            "sign" : -1874390941,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 1439663480,
            "rowCount" : 71983174,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_item_sk#129, ws_ext_sales_price#149] "
          },
          "21" : {
            "sign" : -1934725616,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 8160000,
            "rowCount" : 204000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_item_sk#71, i_item_id#72] "
          },
          "54" : {
            "sign" : 542040227,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 14972593792,
            "rowCount" : 71983624,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ws_sold_time_sk#127, ws_ship_date_sk#128, ws_item_sk#129, ws_bill_customer_sk#130, ws_bill_cdemo_sk#131, ws_bill_hdemo_sk#132, ws_bill_addr_sk#133, ws_ship_customer_sk#134, ws_ship_cdemo_sk#135, ws_ship_hdemo_sk#136, ws_ship_addr_sk#137, ws_web_page_sk#138, ws_web_site_sk#139, ws_ship_mode_sk#140, ws_warehouse_sk#141, ws_promo_sk#142, ws_order_number#143L, ws_quantity#144, ws_wholesale_cost#145, ws_list_price#146, ws_sales_price#147, ws_ext_discount_amt#148, ws_ext_sales_price#149, ws_ext_wholesale_cost#150, ... 10 more fields], `spark_catalog`.`tpcds_100`.`web_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "43" : {
            "sign" : 1107577657,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 86904000,
            "rowCount" : 204000,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [i_item_sk#422, i_item_id#423, i_rec_start_date#424, i_rec_end_date#425, i_item_desc#426, i_current_price#427, i_wholesale_cost#428, i_brand_id#429, i_brand#430, i_class_id#431, i_class#432, i_category_id#433, i_category#434, i_manufact_id#435, i_manufact#436, i_size#437, i_formulation#438, i_color#439, i_units#440, i_container#441, i_manager_id#442, i_product_name#443], `spark_catalog`.`tpcds_100`.`item`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "57" : {
            "sign" : 1327199472,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#444, d_date_id#445, d_date#446, d_month_seq#447, d_week_seq#448, d_quarter_seq#449, d_year#450, d_dow#451, d_moy#452, d_dom#453, d_qoy#454, d_fy_year#455, d_fy_quarter_seq#456, d_fy_week_seq#457, d_day_name#458, d_quarter_name#459, d_holiday#460, d_weekend#461, d_following_holiday#462, d_first_dom#463, d_last_dom#464, d_same_day_ly#465, d_same_day_lq#466, d_current_day#467, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "32" : {
            "sign" : -1166024147,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 3991556324,
            "rowCount" : 142555583,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_bill_addr_sk#98, cs_item_sk#107, cs_ext_sales_price#115, cs_sold_date_sk#126] "
          },
          "49" : {
            "sign" : 190976030,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 2015528872,
            "rowCount" : 71983174,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ws_bill_addr_sk#133 = ca_address_sk#472) "
          },
          "6" : {
            "sign" : -2068709747,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 12639348524,
            "rowCount" : 287257921,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_ext_sales_price#21, i_item_id#72] "
          },
          "36" : {
            "sign" : 2101292456,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 18450,
            "rowCount" : 75,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(d_year#387) AND isnotnull(d_moy#389)) AND ((d_year#387 = 1999) AND (d_moy#389 = 9))) AND isnotnull(d_date_sk#381)) "
          },
          "1" : {
            "sign" : -781032687,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
            "sizeInBytes" : 16785442,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) LocalLimit Arguments: 100 "
          },
          "39" : {
            "sign" : 1773770563,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 5362296,
            "rowCount" : 446858,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ca_address_sk#409], BroadcastQueryStage 6 "
          },
          "17" : {
            "sign" : -607567904,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#30, d_date_id#31, d_date#32, d_month_seq#33, d_week_seq#34, d_quarter_seq#35, d_year#36, d_dow#37, d_moy#38, d_dom#39, d_qoy#40, d_fy_year#41, d_fy_quarter_seq#42, d_fy_week_seq#43, d_day_name#44, d_quarter_name#45, d_holiday#46, d_weekend#47, d_following_holiday#48, d_first_dom#49, d_last_dom#50, d_same_day_ly#51, d_same_day_lq#52, d_current_day#53, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "25" : {
            "sign" : -131685101,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 4577848,
            "rowCount" : 104042,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [i_item_id#423], [i_item_id#423, MakeDecimal(sum(UnscaledValue(cs_ext_sales_price#115)),17,2) AS total_sales#377] "
          },
          "60" : {
            "sign" : 864741898,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 8160000,
            "rowCount" : 204000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (i_item_id#486 = i_item_id#552) "
          },
          "14" : {
            "sign" : 1918777458,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#7, ss_item_sk#8, ss_customer_sk#9, ss_cdemo_sk#10, ss_hdemo_sk#11, ss_addr_sk#12, ss_store_sk#13, ss_promo_sk#14, ss_ticket_number#15L, ss_quantity#16, ss_wholesale_cost#17, ss_list_price#18, ss_sales_price#19, ss_ext_discount_amt#20, ss_ext_sales_price#21, ss_ext_wholesale_cost#22, ss_ext_list_price#23, ss_ext_tax#24, ss_coupon_amt#25, ss_net_paid#26, ss_net_paid_inc_tax#27, ss_net_profit#28, ss_sold_date_sk#29], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "47" : {
            "sign" : -1967938460,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 3739679060,
            "rowCount" : 71916905,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ws_item_sk#129 = i_item_sk#485) "
          },
          "31" : {
            "sign" : -1785926450,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 136853359680,
            "rowCount" : 4276667490,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cs_sold_date_sk#126 = d_date_sk#381) "
          },
          "58" : {
            "sign" : -1360363427,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1048816,
            "rowCount" : 30,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#444], BroadcastQueryStage 10 "
          },
          "64" : {
            "sign" : 1148279866,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 732672,
            "rowCount" : 20352,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_item_id#552], BroadcastQueryStage 14 "
          },
          "53" : {
            "sign" : 1576487933,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 14968824624,
            "rowCount" : 71965503,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(ws_sold_date_sk#160) AND isnotnull(ws_bill_addr_sk#133)) AND isnotnull(ws_item_sk#129)) AND dynamicpruning#587 [ws_sold_date_sk#160]) "
          },
          "42" : {
            "sign" : -724494949,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 86904000,
            "rowCount" : 204000,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: isnotnull(i_item_sk#422) "
          },
          "0" : {
            "sign" : -1375868380,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
            "sizeInBytes" : 4400,
            "rowCount" : 100,
            "isRuntime" : false,
            "predicate" : " (unknown) GlobalLimit Arguments: 100 "
          },
          "20" : {
            "sign" : -74192642,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 8160000,
            "rowCount" : 204000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (i_item_id#72 = i_item_id#508) "
          },
          "27" : {
            "sign" : -1172964082,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 7481471556,
            "rowCount" : 143874453,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cs_item_sk#107 = i_item_sk#422) "
          },
          "2" : {
            "sign" : 477660942,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 16785442,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [i_item_id#72 ASC NULLS FIRST, total_sales#374 ASC NULLS FIRST], true "
          },
          "38" : {
            "sign" : 223472588,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1048816,
            "rowCount" : 30,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#381], BroadcastQueryStage 4 "
          },
          "18" : {
            "sign" : -711428433,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1048816,
            "rowCount" : 30,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#30], BroadcastQueryStage 0 "
          },
          "30" : {
            "sign" : -1618066801,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 102640019760,
            "rowCount" : 4276667490,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_bill_addr_sk#98, cs_item_sk#107, cs_ext_sales_price#115] "
          },
          "7" : {
            "sign" : -1404868412,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 14937411892,
            "rowCount" : 287257921,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_item_sk#8 = i_item_sk#71) "
          },
          "29" : {
            "sign" : -966960688,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 4014046764,
            "rowCount" : 143358813,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cs_bill_addr_sk#98 = ca_address_sk#409) "
          },
          "41" : {
            "sign" : -2147471954,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 8160000,
            "rowCount" : 204000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_item_sk#422, i_item_id#423] "
          },
          "63" : {
            "sign" : 1453502028,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 86904000,
            "rowCount" : 204000,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [i_item_sk#485, i_item_id#486, i_rec_start_date#487, i_rec_end_date#488, i_item_desc#489, i_current_price#490, i_wholesale_cost#491, i_brand_id#492, i_brand#493, i_class_id#494, i_class#495, i_category_id#496, i_category#497, i_manufact_id#498, i_manufact#499, i_size#500, i_formulation#501, i_color#502, i_units#503, i_container#504, i_manager_id#505, i_product_name#506], `spark_catalog`.`tpcds_100`.`item`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "3" : {
            "sign" : -1506833063,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 16785442,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [i_item_id#72], [i_item_id#72, sum(total_sales#375) AS total_sales#374] "
          },
          "52" : {
            "sign" : 2013399350,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 2015034084,
            "rowCount" : 71965503,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_item_sk#129, ws_bill_addr_sk#133, ws_ext_sales_price#149, ws_sold_date_sk#160] "
          },
          "28" : {
            "sign" : 2018221832,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 2867176260,
            "rowCount" : 143358813,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_item_sk#107, cs_ext_sales_price#115] "
          }
        },
        "links" : [ {
          "fromId" : 14,
          "fromName" : "LogicalRelation",
          "toId" : 13,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 17,
          "fromName" : "LogicalRelation",
          "toId" : 16,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 16,
          "fromName" : "Filter",
          "toId" : 15,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 15,
          "fromName" : "Project",
          "toId" : 13,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 13,
          "fromName" : "Filter",
          "toId" : 12,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 12,
          "fromName" : "Project",
          "toId" : 11,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 18,
          "fromName" : "LogicalQueryStage",
          "toId" : 11,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "Join",
          "toId" : 10,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "Project",
          "toId" : 9,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 19,
          "fromName" : "LogicalQueryStage",
          "toId" : 9,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "Join",
          "toId" : 8,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "Project",
          "toId" : 7,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 23,
          "fromName" : "LogicalRelation",
          "toId" : 22,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 22,
          "fromName" : "Filter",
          "toId" : 21,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 21,
          "fromName" : "Project",
          "toId" : 20,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 24,
          "fromName" : "LogicalQueryStage",
          "toId" : 20,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 20,
          "fromName" : "Join",
          "toId" : 7,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Join",
          "toId" : 6,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Project",
          "toId" : 5,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Aggregate",
          "toId" : 4,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 34,
          "fromName" : "LogicalRelation",
          "toId" : 33,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 37,
          "fromName" : "LogicalRelation",
          "toId" : 36,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 36,
          "fromName" : "Filter",
          "toId" : 35,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 35,
          "fromName" : "Project",
          "toId" : 33,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 33,
          "fromName" : "Filter",
          "toId" : 32,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 32,
          "fromName" : "Project",
          "toId" : 31,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 38,
          "fromName" : "LogicalQueryStage",
          "toId" : 31,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 31,
          "fromName" : "Join",
          "toId" : 30,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 30,
          "fromName" : "Project",
          "toId" : 29,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 39,
          "fromName" : "LogicalQueryStage",
          "toId" : 29,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 29,
          "fromName" : "Join",
          "toId" : 28,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 28,
          "fromName" : "Project",
          "toId" : 27,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 43,
          "fromName" : "LogicalRelation",
          "toId" : 42,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 42,
          "fromName" : "Filter",
          "toId" : 41,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 41,
          "fromName" : "Project",
          "toId" : 40,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 44,
          "fromName" : "LogicalQueryStage",
          "toId" : 40,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 40,
          "fromName" : "Join",
          "toId" : 27,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 27,
          "fromName" : "Join",
          "toId" : 26,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 26,
          "fromName" : "Project",
          "toId" : 25,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 25,
          "fromName" : "Aggregate",
          "toId" : 4,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 54,
          "fromName" : "LogicalRelation",
          "toId" : 53,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 57,
          "fromName" : "LogicalRelation",
          "toId" : 56,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 56,
          "fromName" : "Filter",
          "toId" : 55,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 55,
          "fromName" : "Project",
          "toId" : 53,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 53,
          "fromName" : "Filter",
          "toId" : 52,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 52,
          "fromName" : "Project",
          "toId" : 51,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 58,
          "fromName" : "LogicalQueryStage",
          "toId" : 51,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 51,
          "fromName" : "Join",
          "toId" : 50,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 50,
          "fromName" : "Project",
          "toId" : 49,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 59,
          "fromName" : "LogicalQueryStage",
          "toId" : 49,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 49,
          "fromName" : "Join",
          "toId" : 48,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 48,
          "fromName" : "Project",
          "toId" : 47,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 63,
          "fromName" : "LogicalRelation",
          "toId" : 62,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 62,
          "fromName" : "Filter",
          "toId" : 61,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 61,
          "fromName" : "Project",
          "toId" : 60,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 64,
          "fromName" : "LogicalQueryStage",
          "toId" : 60,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 60,
          "fromName" : "Join",
          "toId" : 47,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 47,
          "fromName" : "Join",
          "toId" : 46,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 46,
          "fromName" : "Project",
          "toId" : 45,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 45,
          "fromName" : "Aggregate",
          "toId" : 4,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Union",
          "toId" : 3,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Aggregate",
          "toId" : 2,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "LocalLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "LocalLimit",
          "toId" : 0,
          "toName" : "GlobalLimit",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [i_item_id#72 ASC NULLS FIRST, total_sales#374 ASC NULLS FIRST], true\n      +- Aggregate [i_item_id#72], [i_item_id#72, sum(total_sales#375) AS total_sales#374]\n         +- Union false, false\n            :- Aggregate [i_item_id#72], [i_item_id#72, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#21)),17,2) AS total_sales#375]\n            :  +- Project [ss_ext_sales_price#21, i_item_id#72]\n            :     +- Join Inner, (ss_item_sk#8 = i_item_sk#71)\n            :        :- Project [ss_item_sk#8, ss_ext_sales_price#21]\n            :        :  +- Join Inner, (ss_addr_sk#12 = ca_address_sk#58)\n            :        :     :- Project [ss_item_sk#8, ss_addr_sk#12, ss_ext_sales_price#21]\n            :        :     :  +- Join Inner, (ss_sold_date_sk#29 = d_date_sk#30)\n            :        :     :     :- Project [ss_item_sk#8, ss_addr_sk#12, ss_ext_sales_price#21, ss_sold_date_sk#29]\n            :        :     :     :  +- Filter (((isnotnull(ss_sold_date_sk#29) AND isnotnull(ss_addr_sk#12)) AND isnotnull(ss_item_sk#8)) AND dynamicpruning#585 [ss_sold_date_sk#29])\n            :        :     :     :     :  +- Project [d_date_sk#30]\n            :        :     :     :     :     +- Filter (((isnotnull(d_year#36) AND isnotnull(d_moy#38)) AND ((d_year#36 = 1999) AND (d_moy#38 = 9))) AND isnotnull(d_date_sk#30))\n            :        :     :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#30,d_date_id#31,d_date#32,d_month_seq#33,d_week_seq#34,d_quarter_seq#35,d_year#36,d_dow#37,d_moy#38,d_dom#39,d_qoy#40,d_fy_year#41,d_fy_quarter_seq#42,d_fy_week_seq#43,d_day_name#44,d_quarter_name#45,d_holiday#46,d_weekend#47,d_following_holiday#48,d_first_dom#49,d_last_dom#50,d_same_day_ly#51,d_same_day_lq#52,d_current_day#53,... 4 more fields] parquet\n            :        :     :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#7,ss_item_sk#8,ss_customer_sk#9,ss_cdemo_sk#10,ss_hdemo_sk#11,ss_addr_sk#12,ss_store_sk#13,ss_promo_sk#14,ss_ticket_number#15L,ss_quantity#16,ss_wholesale_cost#17,ss_list_price#18,ss_sales_price#19,ss_ext_discount_amt#20,ss_ext_sales_price#21,ss_ext_wholesale_cost#22,ss_ext_list_price#23,ss_ext_tax#24,ss_coupon_amt#25,ss_net_paid#26,ss_net_paid_inc_tax#27,ss_net_profit#28,ss_sold_date_sk#29] parquet\n            :        :     :     +- LogicalQueryStage Project [d_date_sk#30], BroadcastQueryStage 0\n            :        :     +- LogicalQueryStage Project [ca_address_sk#58], BroadcastQueryStage 1\n            :        +- Join LeftSemi, (i_item_id#72 = i_item_id#508)\n            :           :- Project [i_item_sk#71, i_item_id#72]\n            :           :  +- Filter isnotnull(i_item_sk#71)\n            :           :     +- Relation spark_catalog.tpcds_100.item[i_item_sk#71,i_item_id#72,i_rec_start_date#73,i_rec_end_date#74,i_item_desc#75,i_current_price#76,i_wholesale_cost#77,i_brand_id#78,i_brand#79,i_class_id#80,i_class#81,i_category_id#82,i_category#83,i_manufact_id#84,i_manufact#85,i_size#86,i_formulation#87,i_color#88,i_units#89,i_container#90,i_manager_id#91,i_product_name#92] parquet\n            :           +- LogicalQueryStage Project [i_item_id#508], BroadcastQueryStage 2\n            :- Aggregate [i_item_id#423], [i_item_id#423, MakeDecimal(sum(UnscaledValue(cs_ext_sales_price#115)),17,2) AS total_sales#377]\n            :  +- Project [cs_ext_sales_price#115, i_item_id#423]\n            :     +- Join Inner, (cs_item_sk#107 = i_item_sk#422)\n            :        :- Project [cs_item_sk#107, cs_ext_sales_price#115]\n            :        :  +- Join Inner, (cs_bill_addr_sk#98 = ca_address_sk#409)\n            :        :     :- Project [cs_bill_addr_sk#98, cs_item_sk#107, cs_ext_sales_price#115]\n            :        :     :  +- Join Inner, (cs_sold_date_sk#126 = d_date_sk#381)\n            :        :     :     :- Project [cs_bill_addr_sk#98, cs_item_sk#107, cs_ext_sales_price#115, cs_sold_date_sk#126]\n            :        :     :     :  +- Filter (((isnotnull(cs_sold_date_sk#126) AND isnotnull(cs_bill_addr_sk#98)) AND isnotnull(cs_item_sk#107)) AND dynamicpruning#586 [cs_sold_date_sk#126])\n            :        :     :     :     :  +- Project [d_date_sk#381]\n            :        :     :     :     :     +- Filter (((isnotnull(d_year#387) AND isnotnull(d_moy#389)) AND ((d_year#387 = 1999) AND (d_moy#389 = 9))) AND isnotnull(d_date_sk#381))\n            :        :     :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#381,d_date_id#382,d_date#383,d_month_seq#384,d_week_seq#385,d_quarter_seq#386,d_year#387,d_dow#388,d_moy#389,d_dom#390,d_qoy#391,d_fy_year#392,d_fy_quarter_seq#393,d_fy_week_seq#394,d_day_name#395,d_quarter_name#396,d_holiday#397,d_weekend#398,d_following_holiday#399,d_first_dom#400,d_last_dom#401,d_same_day_ly#402,d_same_day_lq#403,d_current_day#404,... 4 more fields] parquet\n            :        :     :     :     +- Relation spark_catalog.tpcds_100.catalog_sales[cs_sold_time_sk#93,cs_ship_date_sk#94,cs_bill_customer_sk#95,cs_bill_cdemo_sk#96,cs_bill_hdemo_sk#97,cs_bill_addr_sk#98,cs_ship_customer_sk#99,cs_ship_cdemo_sk#100,cs_ship_hdemo_sk#101,cs_ship_addr_sk#102,cs_call_center_sk#103,cs_catalog_page_sk#104,cs_ship_mode_sk#105,cs_warehouse_sk#106,cs_item_sk#107,cs_promo_sk#108,cs_order_number#109L,cs_quantity#110,cs_wholesale_cost#111,cs_list_price#112,cs_sales_price#113,cs_ext_discount_amt#114,cs_ext_sales_price#115,cs_ext_wholesale_cost#116,... 10 more fields] parquet\n            :        :     :     +- LogicalQueryStage Project [d_date_sk#381], BroadcastQueryStage 4\n            :        :     +- LogicalQueryStage Project [ca_address_sk#409], BroadcastQueryStage 6\n            :        +- Join LeftSemi, (i_item_id#423 = i_item_id#530)\n            :           :- Project [i_item_sk#422, i_item_id#423]\n            :           :  +- Filter isnotnull(i_item_sk#422)\n            :           :     +- Relation spark_catalog.tpcds_100.item[i_item_sk#422,i_item_id#423,i_rec_start_date#424,i_rec_end_date#425,i_item_desc#426,i_current_price#427,i_wholesale_cost#428,i_brand_id#429,i_brand#430,i_class_id#431,i_class#432,i_category_id#433,i_category#434,i_manufact_id#435,i_manufact#436,i_size#437,i_formulation#438,i_color#439,i_units#440,i_container#441,i_manager_id#442,i_product_name#443] parquet\n            :           +- LogicalQueryStage Project [i_item_id#530], BroadcastQueryStage 8\n            +- Aggregate [i_item_id#486], [i_item_id#486, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#149)),17,2) AS total_sales#379]\n               +- Project [ws_ext_sales_price#149, i_item_id#486]\n                  +- Join Inner, (ws_item_sk#129 = i_item_sk#485)\n                     :- Project [ws_item_sk#129, ws_ext_sales_price#149]\n                     :  +- Join Inner, (ws_bill_addr_sk#133 = ca_address_sk#472)\n                     :     :- Project [ws_item_sk#129, ws_bill_addr_sk#133, ws_ext_sales_price#149]\n                     :     :  +- Join Inner, (ws_sold_date_sk#160 = d_date_sk#444)\n                     :     :     :- Project [ws_item_sk#129, ws_bill_addr_sk#133, ws_ext_sales_price#149, ws_sold_date_sk#160]\n                     :     :     :  +- Filter (((isnotnull(ws_sold_date_sk#160) AND isnotnull(ws_bill_addr_sk#133)) AND isnotnull(ws_item_sk#129)) AND dynamicpruning#587 [ws_sold_date_sk#160])\n                     :     :     :     :  +- Project [d_date_sk#444]\n                     :     :     :     :     +- Filter (((isnotnull(d_year#450) AND isnotnull(d_moy#452)) AND ((d_year#450 = 1999) AND (d_moy#452 = 9))) AND isnotnull(d_date_sk#444))\n                     :     :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#444,d_date_id#445,d_date#446,d_month_seq#447,d_week_seq#448,d_quarter_seq#449,d_year#450,d_dow#451,d_moy#452,d_dom#453,d_qoy#454,d_fy_year#455,d_fy_quarter_seq#456,d_fy_week_seq#457,d_day_name#458,d_quarter_name#459,d_holiday#460,d_weekend#461,d_following_holiday#462,d_first_dom#463,d_last_dom#464,d_same_day_ly#465,d_same_day_lq#466,d_current_day#467,... 4 more fields] parquet\n                     :     :     :     +- Relation spark_catalog.tpcds_100.web_sales[ws_sold_time_sk#127,ws_ship_date_sk#128,ws_item_sk#129,ws_bill_customer_sk#130,ws_bill_cdemo_sk#131,ws_bill_hdemo_sk#132,ws_bill_addr_sk#133,ws_ship_customer_sk#134,ws_ship_cdemo_sk#135,ws_ship_hdemo_sk#136,ws_ship_addr_sk#137,ws_web_page_sk#138,ws_web_site_sk#139,ws_ship_mode_sk#140,ws_warehouse_sk#141,ws_promo_sk#142,ws_order_number#143L,ws_quantity#144,ws_wholesale_cost#145,ws_list_price#146,ws_sales_price#147,ws_ext_discount_amt#148,ws_ext_sales_price#149,ws_ext_wholesale_cost#150,... 10 more fields] parquet\n                     :     :     +- LogicalQueryStage Project [d_date_sk#444], BroadcastQueryStage 10\n                     :     +- LogicalQueryStage Project [ca_address_sk#472], BroadcastQueryStage 12\n                     +- Join LeftSemi, (i_item_id#486 = i_item_id#552)\n                        :- Project [i_item_sk#485, i_item_id#486]\n                        :  +- Filter isnotnull(i_item_sk#485)\n                        :     +- Relation spark_catalog.tpcds_100.item[i_item_sk#485,i_item_id#486,i_rec_start_date#487,i_rec_end_date#488,i_item_desc#489,i_current_price#490,i_wholesale_cost#491,i_brand_id#492,i_brand#493,i_class_id#494,i_class#495,i_category_id#496,i_category#497,i_manufact_id#498,i_manufact#499,i_size#500,i_formulation#501,i_color#502,i_units#503,i_container#504,i_manager_id#505,i_product_name#506] parquet\n                        +- LogicalQueryStage Project [i_item_id#552], BroadcastQueryStage 14\n"
      },
      "IM" : {
        "inputSizeInBytes" : 86862418336,
        "inputRowCount" : 492315714
      },
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 5,
        "FinishedTasksNum" : 5,
        "FinishedTasksTotalTimeInMs" : 6306.0,
        "FinishedTasksDistributionInMs" : [ 1083.0, 1123.0, 1245.0, 1251.0, 1604.0 ]
      },
      "StartTimeInMs" : 1702227169748,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 8743,
        "IOBytes" : {
          "Total" : 119960879,
          "Details" : {
            "IR" : 102058735,
            "IW" : 0,
            "SR" : 8951072,
            "SW" : 8951072
          }
        }
      }
    },
    "2" : {
      "LQP" : {
        "operators" : {
          "45" : {
            "sign" : -1655071132,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 4577848,
            "rowCount" : 104042,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [i_item_id#486], [i_item_id#486, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#149)),17,2) AS total_sales#379] "
          },
          "34" : {
            "sign" : 899995805,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 29800787536,
            "rowCount" : 143273017,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [cs_sold_time_sk#93, cs_ship_date_sk#94, cs_bill_customer_sk#95, cs_bill_cdemo_sk#96, cs_bill_hdemo_sk#97, cs_bill_addr_sk#98, cs_ship_customer_sk#99, cs_ship_cdemo_sk#100, cs_ship_hdemo_sk#101, cs_ship_addr_sk#102, cs_call_center_sk#103, cs_catalog_page_sk#104, cs_ship_mode_sk#105, cs_warehouse_sk#106, cs_item_sk#107, cs_promo_sk#108, cs_order_number#109L, cs_quantity#110, cs_wholesale_cost#111, cs_list_price#112, cs_sales_price#113, cs_ext_discount_amt#114, cs_ext_sales_price#115, cs_ext_wholesale_cost#116, ... 10 more fields], `spark_catalog`.`tpcds_100`.`catalog_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "12" : {
            "sign" : -9668412,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 7354676784,
            "rowCount" : 262667028,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#8, ss_addr_sk#12, ss_ext_sales_price#21, ss_sold_date_sk#29] "
          },
          "51" : {
            "sign" : 1011816376,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 69086882880,
            "rowCount" : 2158965090,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ws_sold_date_sk#160 = d_date_sk#444) "
          },
          "8" : {
            "sign" : -469502694,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 5504661760,
            "rowCount" : 275233088,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#8, ss_ext_sales_price#21] "
          },
          "19" : {
            "sign" : 1204149022,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 5362296,
            "rowCount" : 446858,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ca_address_sk#58], BroadcastQueryStage 1 "
          },
          "23" : {
            "sign" : 655949841,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 86904000,
            "rowCount" : 204000,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [i_item_sk#71, i_item_id#72, i_rec_start_date#73, i_rec_end_date#74, i_item_desc#75, i_current_price#76, i_wholesale_cost#77, i_brand_id#78, i_brand#79, i_class_id#80, i_class#81, i_category_id#82, i_category#83, i_manufact_id#84, i_manufact#85, i_size#86, i_formulation#87, i_color#88, i_units#89, i_container#90, i_manager_id#91, i_product_name#92], `spark_catalog`.`tpcds_100`.`item`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "62" : {
            "sign" : 182137899,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 86904000,
            "rowCount" : 204000,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: isnotnull(i_item_sk#485) "
          },
          "4" : {
            "sign" : -682173377,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Union",
            "sizeInBytes" : 13733544,
            "rowCount" : 312126,
            "isRuntime" : false,
            "predicate" : " (unknown) Union Arguments: false, false "
          },
          "40" : {
            "sign" : -1859382206,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 8160000,
            "rowCount" : 204000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (i_item_id#423 = i_item_id#530) "
          },
          "15" : {
            "sign" : -337637781,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 900,
            "rowCount" : 75,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#30] "
          },
          "11" : {
            "sign" : -140391299,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 252160346880,
            "rowCount" : 7880010840,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#29 = d_date_sk#30) "
          },
          "9" : {
            "sign" : 1492968274,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 7706526464,
            "rowCount" : 275233088,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_addr_sk#12 = ca_address_sk#58) "
          },
          "44" : {
            "sign" : 545625791,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 34603008,
            "rowCount" : 20490,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_item_id#530], BroadcastQueryStage 8 "
          },
          "33" : {
            "sign" : -1311945493,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 29651561264,
            "rowCount" : 142555583,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(cs_sold_date_sk#126) AND isnotnull(cs_bill_addr_sk#98)) AND isnotnull(cs_item_sk#107)) AND dynamicpruning#586 [cs_sold_date_sk#126]) "
          },
          "22" : {
            "sign" : -1729853405,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 86904000,
            "rowCount" : 204000,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: isnotnull(i_item_sk#71) "
          },
          "56" : {
            "sign" : -73903649,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 18450,
            "rowCount" : 75,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(d_year#450) AND isnotnull(d_moy#452)) AND ((d_year#450 = 1999) AND (d_moy#452 = 9))) AND isnotnull(d_date_sk#444)) "
          },
          "55" : {
            "sign" : 46144887,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 900,
            "rowCount" : 75,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#444] "
          },
          "26" : {
            "sign" : -27866107,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 6330475932,
            "rowCount" : 143874453,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_ext_sales_price#115, i_item_id#423] "
          },
          "50" : {
            "sign" : -793711286,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 51815162160,
            "rowCount" : 2158965090,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_item_sk#129, ws_bill_addr_sk#133, ws_ext_sales_price#149] "
          },
          "37" : {
            "sign" : 470547457,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#381, d_date_id#382, d_date#383, d_month_seq#384, d_week_seq#385, d_quarter_seq#386, d_year#387, d_dow#388, d_moy#389, d_dom#390, d_qoy#391, d_fy_year#392, d_fy_quarter_seq#393, d_fy_week_seq#394, d_day_name#395, d_quarter_name#396, d_holiday#397, d_weekend#398, d_following_holiday#399, d_first_dom#400, d_last_dom#401, d_same_day_ly#402, d_same_day_lq#403, d_current_day#404, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "61" : {
            "sign" : -1607600508,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 8160000,
            "rowCount" : 204000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_item_sk#485, i_item_id#486] "
          },
          "13" : {
            "sign" : 657223440,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 39925388256,
            "rowCount" : 262667028,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(ss_sold_date_sk#29) AND isnotnull(ss_addr_sk#12)) AND isnotnull(ss_item_sk#8)) AND dynamicpruning#585 [ss_sold_date_sk#29]) "
          },
          "46" : {
            "sign" : -576761995,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 3164343820,
            "rowCount" : 71916905,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_ext_sales_price#149, i_item_id#486] "
          },
          "24" : {
            "sign" : -2091057990,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 34603008,
            "rowCount" : 20490,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_item_id#508], BroadcastQueryStage 2 "
          },
          "35" : {
            "sign" : 1280402312,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 900,
            "rowCount" : 75,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#381] "
          },
          "16" : {
            "sign" : 1189050492,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 18450,
            "rowCount" : 75,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(d_year#36) AND isnotnull(d_moy#38)) AND ((d_year#36 = 1999) AND (d_moy#38 = 9))) AND isnotnull(d_date_sk#30)) "
          },
          "5" : {
            "sign" : -1521361433,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 4577848,
            "rowCount" : 104042,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [i_item_id#72], [i_item_id#72, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#21)),17,2) AS total_sales#375] "
          },
          "10" : {
            "sign" : -1492820802,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 189120260160,
            "rowCount" : 7880010840,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#8, ss_addr_sk#12, ss_ext_sales_price#21] "
          },
          "59" : {
            "sign" : -772210292,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 5362296,
            "rowCount" : 446858,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ca_address_sk#472], BroadcastQueryStage 12 "
          },
          "48" : {
            "sign" : -1874390941,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 1439663480,
            "rowCount" : 71983174,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_item_sk#129, ws_ext_sales_price#149] "
          },
          "21" : {
            "sign" : -1934725616,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 8160000,
            "rowCount" : 204000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_item_sk#71, i_item_id#72] "
          },
          "54" : {
            "sign" : 542040227,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 14972593792,
            "rowCount" : 71983624,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ws_sold_time_sk#127, ws_ship_date_sk#128, ws_item_sk#129, ws_bill_customer_sk#130, ws_bill_cdemo_sk#131, ws_bill_hdemo_sk#132, ws_bill_addr_sk#133, ws_ship_customer_sk#134, ws_ship_cdemo_sk#135, ws_ship_hdemo_sk#136, ws_ship_addr_sk#137, ws_web_page_sk#138, ws_web_site_sk#139, ws_ship_mode_sk#140, ws_warehouse_sk#141, ws_promo_sk#142, ws_order_number#143L, ws_quantity#144, ws_wholesale_cost#145, ws_list_price#146, ws_sales_price#147, ws_ext_discount_amt#148, ws_ext_sales_price#149, ws_ext_wholesale_cost#150, ... 10 more fields], `spark_catalog`.`tpcds_100`.`web_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "43" : {
            "sign" : 1107577657,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 86904000,
            "rowCount" : 204000,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [i_item_sk#422, i_item_id#423, i_rec_start_date#424, i_rec_end_date#425, i_item_desc#426, i_current_price#427, i_wholesale_cost#428, i_brand_id#429, i_brand#430, i_class_id#431, i_class#432, i_category_id#433, i_category#434, i_manufact_id#435, i_manufact#436, i_size#437, i_formulation#438, i_color#439, i_units#440, i_container#441, i_manager_id#442, i_product_name#443], `spark_catalog`.`tpcds_100`.`item`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "57" : {
            "sign" : 1327199472,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#444, d_date_id#445, d_date#446, d_month_seq#447, d_week_seq#448, d_quarter_seq#449, d_year#450, d_dow#451, d_moy#452, d_dom#453, d_qoy#454, d_fy_year#455, d_fy_quarter_seq#456, d_fy_week_seq#457, d_day_name#458, d_quarter_name#459, d_holiday#460, d_weekend#461, d_following_holiday#462, d_first_dom#463, d_last_dom#464, d_same_day_ly#465, d_same_day_lq#466, d_current_day#467, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "32" : {
            "sign" : -1166024147,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 3991556324,
            "rowCount" : 142555583,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_bill_addr_sk#98, cs_item_sk#107, cs_ext_sales_price#115, cs_sold_date_sk#126] "
          },
          "49" : {
            "sign" : 190976030,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 2015528872,
            "rowCount" : 71983174,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ws_bill_addr_sk#133 = ca_address_sk#472) "
          },
          "6" : {
            "sign" : -2068709747,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 12639348524,
            "rowCount" : 287257921,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_ext_sales_price#21, i_item_id#72] "
          },
          "36" : {
            "sign" : 2101292456,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 18450,
            "rowCount" : 75,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(d_year#387) AND isnotnull(d_moy#389)) AND ((d_year#387 = 1999) AND (d_moy#389 = 9))) AND isnotnull(d_date_sk#381)) "
          },
          "1" : {
            "sign" : -781032687,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
            "sizeInBytes" : 16785442,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) LocalLimit Arguments: 100 "
          },
          "39" : {
            "sign" : 1773770563,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 5362296,
            "rowCount" : 446858,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ca_address_sk#409], BroadcastQueryStage 6 "
          },
          "17" : {
            "sign" : -607567904,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#30, d_date_id#31, d_date#32, d_month_seq#33, d_week_seq#34, d_quarter_seq#35, d_year#36, d_dow#37, d_moy#38, d_dom#39, d_qoy#40, d_fy_year#41, d_fy_quarter_seq#42, d_fy_week_seq#43, d_day_name#44, d_quarter_name#45, d_holiday#46, d_weekend#47, d_following_holiday#48, d_first_dom#49, d_last_dom#50, d_same_day_ly#51, d_same_day_lq#52, d_current_day#53, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "25" : {
            "sign" : -131685101,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 4577848,
            "rowCount" : 104042,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [i_item_id#423], [i_item_id#423, MakeDecimal(sum(UnscaledValue(cs_ext_sales_price#115)),17,2) AS total_sales#377] "
          },
          "60" : {
            "sign" : 864741898,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 8160000,
            "rowCount" : 204000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (i_item_id#486 = i_item_id#552) "
          },
          "14" : {
            "sign" : 1918777458,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#7, ss_item_sk#8, ss_customer_sk#9, ss_cdemo_sk#10, ss_hdemo_sk#11, ss_addr_sk#12, ss_store_sk#13, ss_promo_sk#14, ss_ticket_number#15L, ss_quantity#16, ss_wholesale_cost#17, ss_list_price#18, ss_sales_price#19, ss_ext_discount_amt#20, ss_ext_sales_price#21, ss_ext_wholesale_cost#22, ss_ext_list_price#23, ss_ext_tax#24, ss_coupon_amt#25, ss_net_paid#26, ss_net_paid_inc_tax#27, ss_net_profit#28, ss_sold_date_sk#29], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "47" : {
            "sign" : -1967938460,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 3739679060,
            "rowCount" : 71916905,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ws_item_sk#129 = i_item_sk#485) "
          },
          "31" : {
            "sign" : -1785926450,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 136853359680,
            "rowCount" : 4276667490,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cs_sold_date_sk#126 = d_date_sk#381) "
          },
          "58" : {
            "sign" : -1360363427,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1048816,
            "rowCount" : 30,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#444], BroadcastQueryStage 10 "
          },
          "64" : {
            "sign" : 1148279866,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 34603008,
            "rowCount" : 20490,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_item_id#552], BroadcastQueryStage 14 "
          },
          "53" : {
            "sign" : 1576487933,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 14968824624,
            "rowCount" : 71965503,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(ws_sold_date_sk#160) AND isnotnull(ws_bill_addr_sk#133)) AND isnotnull(ws_item_sk#129)) AND dynamicpruning#587 [ws_sold_date_sk#160]) "
          },
          "42" : {
            "sign" : -724494949,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 86904000,
            "rowCount" : 204000,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: isnotnull(i_item_sk#422) "
          },
          "0" : {
            "sign" : -1375868380,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
            "sizeInBytes" : 4400,
            "rowCount" : 100,
            "isRuntime" : false,
            "predicate" : " (unknown) GlobalLimit Arguments: 100 "
          },
          "20" : {
            "sign" : -74192642,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 8160000,
            "rowCount" : 204000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (i_item_id#72 = i_item_id#508) "
          },
          "27" : {
            "sign" : -1172964082,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 7481471556,
            "rowCount" : 143874453,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cs_item_sk#107 = i_item_sk#422) "
          },
          "2" : {
            "sign" : 477660942,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 16785442,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [i_item_id#72 ASC NULLS FIRST, total_sales#374 ASC NULLS FIRST], true "
          },
          "38" : {
            "sign" : 223472588,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1048816,
            "rowCount" : 30,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#381], BroadcastQueryStage 4 "
          },
          "18" : {
            "sign" : -711428433,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1048816,
            "rowCount" : 30,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#30], BroadcastQueryStage 0 "
          },
          "30" : {
            "sign" : -1618066801,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 102640019760,
            "rowCount" : 4276667490,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_bill_addr_sk#98, cs_item_sk#107, cs_ext_sales_price#115] "
          },
          "7" : {
            "sign" : -1404868412,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 14937411892,
            "rowCount" : 287257921,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_item_sk#8 = i_item_sk#71) "
          },
          "29" : {
            "sign" : -966960688,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 4014046764,
            "rowCount" : 143358813,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cs_bill_addr_sk#98 = ca_address_sk#409) "
          },
          "41" : {
            "sign" : -2147471954,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 8160000,
            "rowCount" : 204000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_item_sk#422, i_item_id#423] "
          },
          "63" : {
            "sign" : 1453502028,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 86904000,
            "rowCount" : 204000,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [i_item_sk#485, i_item_id#486, i_rec_start_date#487, i_rec_end_date#488, i_item_desc#489, i_current_price#490, i_wholesale_cost#491, i_brand_id#492, i_brand#493, i_class_id#494, i_class#495, i_category_id#496, i_category#497, i_manufact_id#498, i_manufact#499, i_size#500, i_formulation#501, i_color#502, i_units#503, i_container#504, i_manager_id#505, i_product_name#506], `spark_catalog`.`tpcds_100`.`item`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "3" : {
            "sign" : -1506833063,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 16785442,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [i_item_id#72], [i_item_id#72, sum(total_sales#375) AS total_sales#374] "
          },
          "52" : {
            "sign" : 2013399350,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 2015034084,
            "rowCount" : 71965503,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_item_sk#129, ws_bill_addr_sk#133, ws_ext_sales_price#149, ws_sold_date_sk#160] "
          },
          "28" : {
            "sign" : 2018221832,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 2867176260,
            "rowCount" : 143358813,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_item_sk#107, cs_ext_sales_price#115] "
          }
        },
        "links" : [ {
          "fromId" : 14,
          "fromName" : "LogicalRelation",
          "toId" : 13,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 17,
          "fromName" : "LogicalRelation",
          "toId" : 16,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 16,
          "fromName" : "Filter",
          "toId" : 15,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 15,
          "fromName" : "Project",
          "toId" : 13,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 13,
          "fromName" : "Filter",
          "toId" : 12,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 12,
          "fromName" : "Project",
          "toId" : 11,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 18,
          "fromName" : "LogicalQueryStage",
          "toId" : 11,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "Join",
          "toId" : 10,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "Project",
          "toId" : 9,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 19,
          "fromName" : "LogicalQueryStage",
          "toId" : 9,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "Join",
          "toId" : 8,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "Project",
          "toId" : 7,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 23,
          "fromName" : "LogicalRelation",
          "toId" : 22,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 22,
          "fromName" : "Filter",
          "toId" : 21,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 21,
          "fromName" : "Project",
          "toId" : 20,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 24,
          "fromName" : "LogicalQueryStage",
          "toId" : 20,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 20,
          "fromName" : "Join",
          "toId" : 7,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Join",
          "toId" : 6,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Project",
          "toId" : 5,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Aggregate",
          "toId" : 4,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 34,
          "fromName" : "LogicalRelation",
          "toId" : 33,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 37,
          "fromName" : "LogicalRelation",
          "toId" : 36,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 36,
          "fromName" : "Filter",
          "toId" : 35,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 35,
          "fromName" : "Project",
          "toId" : 33,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 33,
          "fromName" : "Filter",
          "toId" : 32,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 32,
          "fromName" : "Project",
          "toId" : 31,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 38,
          "fromName" : "LogicalQueryStage",
          "toId" : 31,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 31,
          "fromName" : "Join",
          "toId" : 30,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 30,
          "fromName" : "Project",
          "toId" : 29,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 39,
          "fromName" : "LogicalQueryStage",
          "toId" : 29,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 29,
          "fromName" : "Join",
          "toId" : 28,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 28,
          "fromName" : "Project",
          "toId" : 27,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 43,
          "fromName" : "LogicalRelation",
          "toId" : 42,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 42,
          "fromName" : "Filter",
          "toId" : 41,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 41,
          "fromName" : "Project",
          "toId" : 40,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 44,
          "fromName" : "LogicalQueryStage",
          "toId" : 40,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 40,
          "fromName" : "Join",
          "toId" : 27,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 27,
          "fromName" : "Join",
          "toId" : 26,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 26,
          "fromName" : "Project",
          "toId" : 25,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 25,
          "fromName" : "Aggregate",
          "toId" : 4,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 54,
          "fromName" : "LogicalRelation",
          "toId" : 53,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 57,
          "fromName" : "LogicalRelation",
          "toId" : 56,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 56,
          "fromName" : "Filter",
          "toId" : 55,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 55,
          "fromName" : "Project",
          "toId" : 53,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 53,
          "fromName" : "Filter",
          "toId" : 52,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 52,
          "fromName" : "Project",
          "toId" : 51,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 58,
          "fromName" : "LogicalQueryStage",
          "toId" : 51,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 51,
          "fromName" : "Join",
          "toId" : 50,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 50,
          "fromName" : "Project",
          "toId" : 49,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 59,
          "fromName" : "LogicalQueryStage",
          "toId" : 49,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 49,
          "fromName" : "Join",
          "toId" : 48,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 48,
          "fromName" : "Project",
          "toId" : 47,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 63,
          "fromName" : "LogicalRelation",
          "toId" : 62,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 62,
          "fromName" : "Filter",
          "toId" : 61,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 61,
          "fromName" : "Project",
          "toId" : 60,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 64,
          "fromName" : "LogicalQueryStage",
          "toId" : 60,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 60,
          "fromName" : "Join",
          "toId" : 47,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 47,
          "fromName" : "Join",
          "toId" : 46,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 46,
          "fromName" : "Project",
          "toId" : 45,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 45,
          "fromName" : "Aggregate",
          "toId" : 4,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Union",
          "toId" : 3,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Aggregate",
          "toId" : 2,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "LocalLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "LocalLimit",
          "toId" : 0,
          "toName" : "GlobalLimit",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [i_item_id#72 ASC NULLS FIRST, total_sales#374 ASC NULLS FIRST], true\n      +- Aggregate [i_item_id#72], [i_item_id#72, sum(total_sales#375) AS total_sales#374]\n         +- Union false, false\n            :- Aggregate [i_item_id#72], [i_item_id#72, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#21)),17,2) AS total_sales#375]\n            :  +- Project [ss_ext_sales_price#21, i_item_id#72]\n            :     +- Join Inner, (ss_item_sk#8 = i_item_sk#71)\n            :        :- Project [ss_item_sk#8, ss_ext_sales_price#21]\n            :        :  +- Join Inner, (ss_addr_sk#12 = ca_address_sk#58)\n            :        :     :- Project [ss_item_sk#8, ss_addr_sk#12, ss_ext_sales_price#21]\n            :        :     :  +- Join Inner, (ss_sold_date_sk#29 = d_date_sk#30)\n            :        :     :     :- Project [ss_item_sk#8, ss_addr_sk#12, ss_ext_sales_price#21, ss_sold_date_sk#29]\n            :        :     :     :  +- Filter (((isnotnull(ss_sold_date_sk#29) AND isnotnull(ss_addr_sk#12)) AND isnotnull(ss_item_sk#8)) AND dynamicpruning#585 [ss_sold_date_sk#29])\n            :        :     :     :     :  +- Project [d_date_sk#30]\n            :        :     :     :     :     +- Filter (((isnotnull(d_year#36) AND isnotnull(d_moy#38)) AND ((d_year#36 = 1999) AND (d_moy#38 = 9))) AND isnotnull(d_date_sk#30))\n            :        :     :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#30,d_date_id#31,d_date#32,d_month_seq#33,d_week_seq#34,d_quarter_seq#35,d_year#36,d_dow#37,d_moy#38,d_dom#39,d_qoy#40,d_fy_year#41,d_fy_quarter_seq#42,d_fy_week_seq#43,d_day_name#44,d_quarter_name#45,d_holiday#46,d_weekend#47,d_following_holiday#48,d_first_dom#49,d_last_dom#50,d_same_day_ly#51,d_same_day_lq#52,d_current_day#53,... 4 more fields] parquet\n            :        :     :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#7,ss_item_sk#8,ss_customer_sk#9,ss_cdemo_sk#10,ss_hdemo_sk#11,ss_addr_sk#12,ss_store_sk#13,ss_promo_sk#14,ss_ticket_number#15L,ss_quantity#16,ss_wholesale_cost#17,ss_list_price#18,ss_sales_price#19,ss_ext_discount_amt#20,ss_ext_sales_price#21,ss_ext_wholesale_cost#22,ss_ext_list_price#23,ss_ext_tax#24,ss_coupon_amt#25,ss_net_paid#26,ss_net_paid_inc_tax#27,ss_net_profit#28,ss_sold_date_sk#29] parquet\n            :        :     :     +- LogicalQueryStage Project [d_date_sk#30], BroadcastQueryStage 0\n            :        :     +- LogicalQueryStage Project [ca_address_sk#58], BroadcastQueryStage 1\n            :        +- Join LeftSemi, (i_item_id#72 = i_item_id#508)\n            :           :- Project [i_item_sk#71, i_item_id#72]\n            :           :  +- Filter isnotnull(i_item_sk#71)\n            :           :     +- Relation spark_catalog.tpcds_100.item[i_item_sk#71,i_item_id#72,i_rec_start_date#73,i_rec_end_date#74,i_item_desc#75,i_current_price#76,i_wholesale_cost#77,i_brand_id#78,i_brand#79,i_class_id#80,i_class#81,i_category_id#82,i_category#83,i_manufact_id#84,i_manufact#85,i_size#86,i_formulation#87,i_color#88,i_units#89,i_container#90,i_manager_id#91,i_product_name#92] parquet\n            :           +- LogicalQueryStage Project [i_item_id#508], BroadcastQueryStage 2\n            :- Aggregate [i_item_id#423], [i_item_id#423, MakeDecimal(sum(UnscaledValue(cs_ext_sales_price#115)),17,2) AS total_sales#377]\n            :  +- Project [cs_ext_sales_price#115, i_item_id#423]\n            :     +- Join Inner, (cs_item_sk#107 = i_item_sk#422)\n            :        :- Project [cs_item_sk#107, cs_ext_sales_price#115]\n            :        :  +- Join Inner, (cs_bill_addr_sk#98 = ca_address_sk#409)\n            :        :     :- Project [cs_bill_addr_sk#98, cs_item_sk#107, cs_ext_sales_price#115]\n            :        :     :  +- Join Inner, (cs_sold_date_sk#126 = d_date_sk#381)\n            :        :     :     :- Project [cs_bill_addr_sk#98, cs_item_sk#107, cs_ext_sales_price#115, cs_sold_date_sk#126]\n            :        :     :     :  +- Filter (((isnotnull(cs_sold_date_sk#126) AND isnotnull(cs_bill_addr_sk#98)) AND isnotnull(cs_item_sk#107)) AND dynamicpruning#586 [cs_sold_date_sk#126])\n            :        :     :     :     :  +- Project [d_date_sk#381]\n            :        :     :     :     :     +- Filter (((isnotnull(d_year#387) AND isnotnull(d_moy#389)) AND ((d_year#387 = 1999) AND (d_moy#389 = 9))) AND isnotnull(d_date_sk#381))\n            :        :     :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#381,d_date_id#382,d_date#383,d_month_seq#384,d_week_seq#385,d_quarter_seq#386,d_year#387,d_dow#388,d_moy#389,d_dom#390,d_qoy#391,d_fy_year#392,d_fy_quarter_seq#393,d_fy_week_seq#394,d_day_name#395,d_quarter_name#396,d_holiday#397,d_weekend#398,d_following_holiday#399,d_first_dom#400,d_last_dom#401,d_same_day_ly#402,d_same_day_lq#403,d_current_day#404,... 4 more fields] parquet\n            :        :     :     :     +- Relation spark_catalog.tpcds_100.catalog_sales[cs_sold_time_sk#93,cs_ship_date_sk#94,cs_bill_customer_sk#95,cs_bill_cdemo_sk#96,cs_bill_hdemo_sk#97,cs_bill_addr_sk#98,cs_ship_customer_sk#99,cs_ship_cdemo_sk#100,cs_ship_hdemo_sk#101,cs_ship_addr_sk#102,cs_call_center_sk#103,cs_catalog_page_sk#104,cs_ship_mode_sk#105,cs_warehouse_sk#106,cs_item_sk#107,cs_promo_sk#108,cs_order_number#109L,cs_quantity#110,cs_wholesale_cost#111,cs_list_price#112,cs_sales_price#113,cs_ext_discount_amt#114,cs_ext_sales_price#115,cs_ext_wholesale_cost#116,... 10 more fields] parquet\n            :        :     :     +- LogicalQueryStage Project [d_date_sk#381], BroadcastQueryStage 4\n            :        :     +- LogicalQueryStage Project [ca_address_sk#409], BroadcastQueryStage 6\n            :        +- Join LeftSemi, (i_item_id#423 = i_item_id#530)\n            :           :- Project [i_item_sk#422, i_item_id#423]\n            :           :  +- Filter isnotnull(i_item_sk#422)\n            :           :     +- Relation spark_catalog.tpcds_100.item[i_item_sk#422,i_item_id#423,i_rec_start_date#424,i_rec_end_date#425,i_item_desc#426,i_current_price#427,i_wholesale_cost#428,i_brand_id#429,i_brand#430,i_class_id#431,i_class#432,i_category_id#433,i_category#434,i_manufact_id#435,i_manufact#436,i_size#437,i_formulation#438,i_color#439,i_units#440,i_container#441,i_manager_id#442,i_product_name#443] parquet\n            :           +- LogicalQueryStage Project [i_item_id#530], BroadcastQueryStage 8\n            +- Aggregate [i_item_id#486], [i_item_id#486, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#149)),17,2) AS total_sales#379]\n               +- Project [ws_ext_sales_price#149, i_item_id#486]\n                  +- Join Inner, (ws_item_sk#129 = i_item_sk#485)\n                     :- Project [ws_item_sk#129, ws_ext_sales_price#149]\n                     :  +- Join Inner, (ws_bill_addr_sk#133 = ca_address_sk#472)\n                     :     :- Project [ws_item_sk#129, ws_bill_addr_sk#133, ws_ext_sales_price#149]\n                     :     :  +- Join Inner, (ws_sold_date_sk#160 = d_date_sk#444)\n                     :     :     :- Project [ws_item_sk#129, ws_bill_addr_sk#133, ws_ext_sales_price#149, ws_sold_date_sk#160]\n                     :     :     :  +- Filter (((isnotnull(ws_sold_date_sk#160) AND isnotnull(ws_bill_addr_sk#133)) AND isnotnull(ws_item_sk#129)) AND dynamicpruning#587 [ws_sold_date_sk#160])\n                     :     :     :     :  +- Project [d_date_sk#444]\n                     :     :     :     :     +- Filter (((isnotnull(d_year#450) AND isnotnull(d_moy#452)) AND ((d_year#450 = 1999) AND (d_moy#452 = 9))) AND isnotnull(d_date_sk#444))\n                     :     :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#444,d_date_id#445,d_date#446,d_month_seq#447,d_week_seq#448,d_quarter_seq#449,d_year#450,d_dow#451,d_moy#452,d_dom#453,d_qoy#454,d_fy_year#455,d_fy_quarter_seq#456,d_fy_week_seq#457,d_day_name#458,d_quarter_name#459,d_holiday#460,d_weekend#461,d_following_holiday#462,d_first_dom#463,d_last_dom#464,d_same_day_ly#465,d_same_day_lq#466,d_current_day#467,... 4 more fields] parquet\n                     :     :     :     +- Relation spark_catalog.tpcds_100.web_sales[ws_sold_time_sk#127,ws_ship_date_sk#128,ws_item_sk#129,ws_bill_customer_sk#130,ws_bill_cdemo_sk#131,ws_bill_hdemo_sk#132,ws_bill_addr_sk#133,ws_ship_customer_sk#134,ws_ship_cdemo_sk#135,ws_ship_hdemo_sk#136,ws_ship_addr_sk#137,ws_web_page_sk#138,ws_web_site_sk#139,ws_ship_mode_sk#140,ws_warehouse_sk#141,ws_promo_sk#142,ws_order_number#143L,ws_quantity#144,ws_wholesale_cost#145,ws_list_price#146,ws_sales_price#147,ws_ext_discount_amt#148,ws_ext_sales_price#149,ws_ext_wholesale_cost#150,... 10 more fields] parquet\n                     :     :     +- LogicalQueryStage Project [d_date_sk#444], BroadcastQueryStage 10\n                     :     +- LogicalQueryStage Project [ca_address_sk#472], BroadcastQueryStage 12\n                     +- Join LeftSemi, (i_item_id#486 = i_item_id#552)\n                        :- Project [i_item_sk#485, i_item_id#486]\n                        :  +- Filter isnotnull(i_item_sk#485)\n                        :     +- Relation spark_catalog.tpcds_100.item[i_item_sk#485,i_item_id#486,i_rec_start_date#487,i_rec_end_date#488,i_item_desc#489,i_current_price#490,i_wholesale_cost#491,i_brand_id#492,i_brand#493,i_class_id#494,i_class#495,i_category_id#496,i_category#497,i_manufact_id#498,i_manufact#499,i_size#500,i_formulation#501,i_color#502,i_units#503,i_container#504,i_manager_id#505,i_product_name#506] parquet\n                        +- LogicalQueryStage Project [i_item_id#552], BroadcastQueryStage 14\n"
      },
      "IM" : {
        "inputSizeInBytes" : 86964029344,
        "inputRowCount" : 492316128
      },
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 3,
        "FinishedTasksNum" : 2,
        "FinishedTasksTotalTimeInMs" : 2862.0,
        "FinishedTasksDistributionInMs" : [ 1083.0, 1083.0, 1779.0, 1779.0, 1779.0 ]
      },
      "StartTimeInMs" : 1702227169968,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 8523,
        "IOBytes" : {
          "Total" : 119053636,
          "Details" : {
            "IR" : 101151492,
            "IW" : 0,
            "SR" : 8951072,
            "SW" : 8951072
          }
        }
      }
    },
    "7" : {
      "LQP" : {
        "operators" : {
          "4" : {
            "sign" : 1671614867,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Union",
            "sizeInBytes" : 15514528,
            "rowCount" : 377459,
            "isRuntime" : false,
            "predicate" : " (unknown) Union Arguments: false, false "
          },
          "5" : {
            "sign" : 142525367,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 4577848,
            "rowCount" : 104042,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [i_item_id#72], [i_item_id#72, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#21)),17,2) AS total_sales#375], HashAggregate(keys=[i_item_id#72], functions=[sum(UnscaledValue(ss_ext_sales_price#21))]) "
          },
          "6" : {
            "sign" : 382348755,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 6772040,
            "rowCount" : 169301,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [i_item_id#423], [i_item_id#423, MakeDecimal(sum(UnscaledValue(cs_ext_sales_price#115)),17,2) AS total_sales#377], HashAggregate(keys=[i_item_id#423], functions=[sum(UnscaledValue(cs_ext_sales_price#115))]) "
          },
          "1" : {
            "sign" : -1492076833,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
            "sizeInBytes" : 18962200,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) LocalLimit Arguments: 100 "
          },
          "0" : {
            "sign" : -1100361266,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
            "sizeInBytes" : 4400,
            "rowCount" : 100,
            "isRuntime" : false,
            "predicate" : " (unknown) GlobalLimit Arguments: 100 "
          },
          "2" : {
            "sign" : 2128402468,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 18962200,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [i_item_id#72 ASC NULLS FIRST, total_sales#374 ASC NULLS FIRST], true "
          },
          "7" : {
            "sign" : -25814476,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 4164640,
            "rowCount" : 104116,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [i_item_id#486], [i_item_id#486, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#149)),17,2) AS total_sales#379], HashAggregate(keys=[i_item_id#486], functions=[sum(UnscaledValue(ws_ext_sales_price#149))]) "
          },
          "3" : {
            "sign" : -1469468953,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 18962200,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [i_item_id#72], [i_item_id#72, sum(total_sales#375) AS total_sales#374] "
          }
        },
        "links" : [ {
          "fromId" : 5,
          "fromName" : "LogicalQueryStage",
          "toId" : 4,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "LogicalQueryStage",
          "toId" : 4,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "LogicalQueryStage",
          "toId" : 4,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Union",
          "toId" : 3,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Aggregate",
          "toId" : 2,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "LocalLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "LocalLimit",
          "toId" : 0,
          "toName" : "GlobalLimit",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [i_item_id#72 ASC NULLS FIRST, total_sales#374 ASC NULLS FIRST], true\n      +- Aggregate [i_item_id#72], [i_item_id#72, sum(total_sales#375) AS total_sales#374]\n         +- Union false, false\n            :- LogicalQueryStage Aggregate [i_item_id#72], [i_item_id#72, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#21)),17,2) AS total_sales#375], HashAggregate(keys=[i_item_id#72], functions=[sum(UnscaledValue(ss_ext_sales_price#21))])\n            :- LogicalQueryStage Aggregate [i_item_id#423], [i_item_id#423, MakeDecimal(sum(UnscaledValue(cs_ext_sales_price#115)),17,2) AS total_sales#377], HashAggregate(keys=[i_item_id#423], functions=[sum(UnscaledValue(cs_ext_sales_price#115))])\n            +- LogicalQueryStage Aggregate [i_item_id#486], [i_item_id#486, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#149)),17,2) AS total_sales#379], HashAggregate(keys=[i_item_id#486], functions=[sum(UnscaledValue(ws_ext_sales_price#149))])\n"
      },
      "IM" : {
        "inputSizeInBytes" : 15514528,
        "inputRowCount" : 377459
      },
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 6,
        "FinishedTasksNum" : 9,
        "FinishedTasksTotalTimeInMs" : 29471.0,
        "FinishedTasksDistributionInMs" : [ 1505.0, 2694.0, 3624.0, 4068.0, 4647.0 ]
      },
      "StartTimeInMs" : 1702227177137,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 1354,
        "IOBytes" : {
          "Total" : 65597558,
          "Details" : {
            "IR" : 52094287,
            "IW" : 0,
            "SR" : 8951072,
            "SW" : 4552199
          }
        }
      }
    },
    "3" : {
      "LQP" : {
        "operators" : {
          "45" : {
            "sign" : 1576487933,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 14968824624,
            "rowCount" : 71965503,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(ws_sold_date_sk#160) AND isnotnull(ws_bill_addr_sk#133)) AND isnotnull(ws_item_sk#129)) AND dynamicpruning#587 [ws_sold_date_sk#160]) "
          },
          "34" : {
            "sign" : 223472588,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1048816,
            "rowCount" : 30,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#381], BroadcastQueryStage 4 "
          },
          "12" : {
            "sign" : -9668412,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 7354676784,
            "rowCount" : 262667028,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#8, ss_addr_sk#12, ss_ext_sales_price#21, ss_sold_date_sk#29] "
          },
          "51" : {
            "sign" : -772210292,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 5362296,
            "rowCount" : 446858,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ca_address_sk#472], BroadcastQueryStage 12 "
          },
          "8" : {
            "sign" : -469502694,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 5504661760,
            "rowCount" : 275233088,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#8, ss_ext_sales_price#21] "
          },
          "19" : {
            "sign" : 1204149022,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 5362296,
            "rowCount" : 446858,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ca_address_sk#58], BroadcastQueryStage 1 "
          },
          "23" : {
            "sign" : 1632135370,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 7481471556,
            "rowCount" : 143874453,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cs_item_sk#107 = i_item_sk#422) "
          },
          "4" : {
            "sign" : -1813241361,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Union",
            "sizeInBytes" : 13733544,
            "rowCount" : 312126,
            "isRuntime" : false,
            "predicate" : " (unknown) Union Arguments: false, false "
          },
          "40" : {
            "sign" : -1874390941,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 1439663480,
            "rowCount" : 71983174,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_item_sk#129, ws_ext_sales_price#149] "
          },
          "15" : {
            "sign" : -337637781,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 900,
            "rowCount" : 75,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#30] "
          },
          "11" : {
            "sign" : -140391299,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 252160346880,
            "rowCount" : 7880010840,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#29 = d_date_sk#30) "
          },
          "9" : {
            "sign" : 1492968274,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 7706526464,
            "rowCount" : 275233088,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_addr_sk#12 = ca_address_sk#58) "
          },
          "44" : {
            "sign" : 2013399350,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 2015034084,
            "rowCount" : 71965503,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_item_sk#129, ws_bill_addr_sk#133, ws_ext_sales_price#149, ws_sold_date_sk#160] "
          },
          "33" : {
            "sign" : 470547457,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#381, d_date_id#382, d_date#383, d_month_seq#384, d_week_seq#385, d_quarter_seq#386, d_year#387, d_dow#388, d_moy#389, d_dom#390, d_qoy#391, d_fy_year#392, d_fy_quarter_seq#393, d_fy_week_seq#394, d_day_name#395, d_quarter_name#396, d_holiday#397, d_weekend#398, d_following_holiday#399, d_first_dom#400, d_last_dom#401, d_same_day_ly#402, d_same_day_lq#403, d_current_day#404, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "22" : {
            "sign" : -1172096873,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 6330475932,
            "rowCount" : 143874453,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_ext_sales_price#115, i_item_id#423] "
          },
          "26" : {
            "sign" : -1618066801,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 102640019760,
            "rowCount" : 4276667490,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_bill_addr_sk#98, cs_item_sk#107, cs_ext_sales_price#115] "
          },
          "50" : {
            "sign" : -1360363427,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1048816,
            "rowCount" : 30,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#444], BroadcastQueryStage 10 "
          },
          "37" : {
            "sign" : 486655461,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 4577848,
            "rowCount" : 104042,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [i_item_id#486], [i_item_id#486, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#149)),17,2) AS total_sales#379] "
          },
          "13" : {
            "sign" : 657223440,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 39925388256,
            "rowCount" : 262667028,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(ss_sold_date_sk#29) AND isnotnull(ss_addr_sk#12)) AND isnotnull(ss_item_sk#8)) AND dynamicpruning#585 [ss_sold_date_sk#29]) "
          },
          "46" : {
            "sign" : 542040227,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 14972593792,
            "rowCount" : 71983624,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ws_sold_time_sk#127, ws_ship_date_sk#128, ws_item_sk#129, ws_bill_customer_sk#130, ws_bill_cdemo_sk#131, ws_bill_hdemo_sk#132, ws_bill_addr_sk#133, ws_ship_customer_sk#134, ws_ship_cdemo_sk#135, ws_ship_hdemo_sk#136, ws_ship_addr_sk#137, ws_web_page_sk#138, ws_web_site_sk#139, ws_ship_mode_sk#140, ws_warehouse_sk#141, ws_promo_sk#142, ws_order_number#143L, ws_quantity#144, ws_wholesale_cost#145, ws_list_price#146, ws_sales_price#147, ws_ext_discount_amt#148, ws_ext_sales_price#149, ws_ext_wholesale_cost#150, ... 10 more fields], `spark_catalog`.`tpcds_100`.`web_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "24" : {
            "sign" : 2018221832,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 2867176260,
            "rowCount" : 143358813,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_item_sk#107, cs_ext_sales_price#115] "
          },
          "35" : {
            "sign" : 1773770563,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 5362296,
            "rowCount" : 446858,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ca_address_sk#409], BroadcastQueryStage 6 "
          },
          "16" : {
            "sign" : 1189050492,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 18450,
            "rowCount" : 75,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(d_year#36) AND isnotnull(d_moy#38)) AND ((d_year#36 = 1999) AND (d_moy#38 = 9))) AND isnotnull(d_date_sk#30)) "
          },
          "5" : {
            "sign" : -1520370996,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 4577848,
            "rowCount" : 104042,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [i_item_id#72], [i_item_id#72, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#21)),17,2) AS total_sales#375] "
          },
          "10" : {
            "sign" : -1492820802,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 189120260160,
            "rowCount" : 7880010840,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#8, ss_addr_sk#12, ss_ext_sales_price#21] "
          },
          "48" : {
            "sign" : -73903649,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 18450,
            "rowCount" : 75,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(d_year#450) AND isnotnull(d_moy#452)) AND ((d_year#450 = 1999) AND (d_moy#452 = 9))) AND isnotnull(d_date_sk#444)) "
          },
          "21" : {
            "sign" : -804068977,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 4577848,
            "rowCount" : 104042,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [i_item_id#423], [i_item_id#423, MakeDecimal(sum(UnscaledValue(cs_ext_sales_price#115)),17,2) AS total_sales#377] "
          },
          "43" : {
            "sign" : 1011816376,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 69086882880,
            "rowCount" : 2158965090,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ws_sold_date_sk#160 = d_date_sk#444) "
          },
          "32" : {
            "sign" : 2101292456,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 18450,
            "rowCount" : 75,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(d_year#387) AND isnotnull(d_moy#389)) AND ((d_year#387 = 1999) AND (d_moy#389 = 9))) AND isnotnull(d_date_sk#381)) "
          },
          "49" : {
            "sign" : 1327199472,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#444, d_date_id#445, d_date#446, d_month_seq#447, d_week_seq#448, d_quarter_seq#449, d_year#450, d_dow#451, d_moy#452, d_dom#453, d_qoy#454, d_fy_year#455, d_fy_quarter_seq#456, d_fy_week_seq#457, d_day_name#458, d_quarter_name#459, d_holiday#460, d_weekend#461, d_following_holiday#462, d_first_dom#463, d_last_dom#464, d_same_day_ly#465, d_same_day_lq#466, d_current_day#467, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "6" : {
            "sign" : -1551374928,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 12639348524,
            "rowCount" : 287257921,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_ext_sales_price#21, i_item_id#72] "
          },
          "36" : {
            "sign" : 873673748,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 8160000,
            "rowCount" : 204000,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Join LeftSemi, (i_item_id#423 = i_item_id#530), BroadcastQueryStage 17 "
          },
          "1" : {
            "sign" : -1908669067,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
            "sizeInBytes" : 16785442,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) LocalLimit Arguments: 100 "
          },
          "39" : {
            "sign" : -1964044955,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 3739679060,
            "rowCount" : 71916905,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ws_item_sk#129 = i_item_sk#485) "
          },
          "17" : {
            "sign" : -607567904,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#30, d_date_id#31, d_date#32, d_month_seq#33, d_week_seq#34, d_quarter_seq#35, d_year#36, d_dow#37, d_moy#38, d_dom#39, d_qoy#40, d_fy_year#41, d_fy_quarter_seq#42, d_fy_week_seq#43, d_day_name#44, d_quarter_name#45, d_holiday#46, d_weekend#47, d_following_holiday#48, d_first_dom#49, d_last_dom#50, d_same_day_ly#51, d_same_day_lq#52, d_current_day#53, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "25" : {
            "sign" : -966960688,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 4014046764,
            "rowCount" : 143358813,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cs_bill_addr_sk#98 = ca_address_sk#409) "
          },
          "14" : {
            "sign" : 1918777458,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#7, ss_item_sk#8, ss_customer_sk#9, ss_cdemo_sk#10, ss_hdemo_sk#11, ss_addr_sk#12, ss_store_sk#13, ss_promo_sk#14, ss_ticket_number#15L, ss_quantity#16, ss_wholesale_cost#17, ss_list_price#18, ss_sales_price#19, ss_ext_discount_amt#20, ss_ext_sales_price#21, ss_ext_wholesale_cost#22, ss_ext_list_price#23, ss_ext_tax#24, ss_coupon_amt#25, ss_net_paid#26, ss_net_paid_inc_tax#27, ss_net_profit#28, ss_sold_date_sk#29], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "47" : {
            "sign" : 46144887,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 900,
            "rowCount" : 75,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#444] "
          },
          "31" : {
            "sign" : 1280402312,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 900,
            "rowCount" : 75,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#381] "
          },
          "42" : {
            "sign" : -793711286,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 51815162160,
            "rowCount" : 2158965090,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_item_sk#129, ws_bill_addr_sk#133, ws_ext_sales_price#149] "
          },
          "0" : {
            "sign" : 680260820,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
            "sizeInBytes" : 4400,
            "rowCount" : 100,
            "isRuntime" : false,
            "predicate" : " (unknown) GlobalLimit Arguments: 100 "
          },
          "20" : {
            "sign" : -944567265,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 8160000,
            "rowCount" : 204000,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Join LeftSemi, (i_item_id#72 = i_item_id#508), BroadcastQueryStage 15 "
          },
          "27" : {
            "sign" : -1785926450,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 136853359680,
            "rowCount" : 4276667490,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cs_sold_date_sk#126 = d_date_sk#381) "
          },
          "2" : {
            "sign" : -1853801282,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 16785442,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [i_item_id#72 ASC NULLS FIRST, total_sales#374 ASC NULLS FIRST], true "
          },
          "38" : {
            "sign" : 1671141828,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 3164343820,
            "rowCount" : 71916905,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_ext_sales_price#149, i_item_id#486] "
          },
          "18" : {
            "sign" : -711428433,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1048816,
            "rowCount" : 30,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#30], BroadcastQueryStage 0 "
          },
          "30" : {
            "sign" : 899995805,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 29800787536,
            "rowCount" : 143273017,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [cs_sold_time_sk#93, cs_ship_date_sk#94, cs_bill_customer_sk#95, cs_bill_cdemo_sk#96, cs_bill_hdemo_sk#97, cs_bill_addr_sk#98, cs_ship_customer_sk#99, cs_ship_cdemo_sk#100, cs_ship_hdemo_sk#101, cs_ship_addr_sk#102, cs_call_center_sk#103, cs_catalog_page_sk#104, cs_ship_mode_sk#105, cs_warehouse_sk#106, cs_item_sk#107, cs_promo_sk#108, cs_order_number#109L, cs_quantity#110, cs_wholesale_cost#111, cs_list_price#112, cs_sales_price#113, cs_ext_discount_amt#114, cs_ext_sales_price#115, cs_ext_wholesale_cost#116, ... 10 more fields], `spark_catalog`.`tpcds_100`.`catalog_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "7" : {
            "sign" : -980920497,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 14937411892,
            "rowCount" : 287257921,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_item_sk#8 = i_item_sk#71) "
          },
          "29" : {
            "sign" : -1311945493,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 29651561264,
            "rowCount" : 142555583,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(cs_sold_date_sk#126) AND isnotnull(cs_bill_addr_sk#98)) AND isnotnull(cs_item_sk#107)) AND dynamicpruning#586 [cs_sold_date_sk#126]) "
          },
          "41" : {
            "sign" : 190976030,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 2015528872,
            "rowCount" : 71983174,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ws_bill_addr_sk#133 = ca_address_sk#472) "
          },
          "3" : {
            "sign" : -827087683,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 16785442,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [i_item_id#72], [i_item_id#72, sum(total_sales#375) AS total_sales#374] "
          },
          "52" : {
            "sign" : -911857393,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 8160000,
            "rowCount" : 204000,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Join LeftSemi, (i_item_id#486 = i_item_id#552), BroadcastQueryStage 19 "
          },
          "28" : {
            "sign" : -1166024147,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 3991556324,
            "rowCount" : 142555583,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_bill_addr_sk#98, cs_item_sk#107, cs_ext_sales_price#115, cs_sold_date_sk#126] "
          }
        },
        "links" : [ {
          "fromId" : 14,
          "fromName" : "LogicalRelation",
          "toId" : 13,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 17,
          "fromName" : "LogicalRelation",
          "toId" : 16,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 16,
          "fromName" : "Filter",
          "toId" : 15,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 15,
          "fromName" : "Project",
          "toId" : 13,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 13,
          "fromName" : "Filter",
          "toId" : 12,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 12,
          "fromName" : "Project",
          "toId" : 11,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 18,
          "fromName" : "LogicalQueryStage",
          "toId" : 11,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "Join",
          "toId" : 10,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "Project",
          "toId" : 9,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 19,
          "fromName" : "LogicalQueryStage",
          "toId" : 9,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "Join",
          "toId" : 8,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "Project",
          "toId" : 7,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 20,
          "fromName" : "LogicalQueryStage",
          "toId" : 7,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Join",
          "toId" : 6,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Project",
          "toId" : 5,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Aggregate",
          "toId" : 4,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 30,
          "fromName" : "LogicalRelation",
          "toId" : 29,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 33,
          "fromName" : "LogicalRelation",
          "toId" : 32,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 32,
          "fromName" : "Filter",
          "toId" : 31,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 31,
          "fromName" : "Project",
          "toId" : 29,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 29,
          "fromName" : "Filter",
          "toId" : 28,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 28,
          "fromName" : "Project",
          "toId" : 27,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 34,
          "fromName" : "LogicalQueryStage",
          "toId" : 27,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 27,
          "fromName" : "Join",
          "toId" : 26,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 26,
          "fromName" : "Project",
          "toId" : 25,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 35,
          "fromName" : "LogicalQueryStage",
          "toId" : 25,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 25,
          "fromName" : "Join",
          "toId" : 24,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 24,
          "fromName" : "Project",
          "toId" : 23,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 36,
          "fromName" : "LogicalQueryStage",
          "toId" : 23,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 23,
          "fromName" : "Join",
          "toId" : 22,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 22,
          "fromName" : "Project",
          "toId" : 21,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 21,
          "fromName" : "Aggregate",
          "toId" : 4,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 46,
          "fromName" : "LogicalRelation",
          "toId" : 45,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 49,
          "fromName" : "LogicalRelation",
          "toId" : 48,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 48,
          "fromName" : "Filter",
          "toId" : 47,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 47,
          "fromName" : "Project",
          "toId" : 45,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 45,
          "fromName" : "Filter",
          "toId" : 44,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 44,
          "fromName" : "Project",
          "toId" : 43,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 50,
          "fromName" : "LogicalQueryStage",
          "toId" : 43,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 43,
          "fromName" : "Join",
          "toId" : 42,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 42,
          "fromName" : "Project",
          "toId" : 41,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 51,
          "fromName" : "LogicalQueryStage",
          "toId" : 41,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 41,
          "fromName" : "Join",
          "toId" : 40,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 40,
          "fromName" : "Project",
          "toId" : 39,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 52,
          "fromName" : "LogicalQueryStage",
          "toId" : 39,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 39,
          "fromName" : "Join",
          "toId" : 38,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 38,
          "fromName" : "Project",
          "toId" : 37,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 37,
          "fromName" : "Aggregate",
          "toId" : 4,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Union",
          "toId" : 3,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Aggregate",
          "toId" : 2,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "LocalLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "LocalLimit",
          "toId" : 0,
          "toName" : "GlobalLimit",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [i_item_id#72 ASC NULLS FIRST, total_sales#374 ASC NULLS FIRST], true\n      +- Aggregate [i_item_id#72], [i_item_id#72, sum(total_sales#375) AS total_sales#374]\n         +- Union false, false\n            :- Aggregate [i_item_id#72], [i_item_id#72, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#21)),17,2) AS total_sales#375]\n            :  +- Project [ss_ext_sales_price#21, i_item_id#72]\n            :     +- Join Inner, (ss_item_sk#8 = i_item_sk#71)\n            :        :- Project [ss_item_sk#8, ss_ext_sales_price#21]\n            :        :  +- Join Inner, (ss_addr_sk#12 = ca_address_sk#58)\n            :        :     :- Project [ss_item_sk#8, ss_addr_sk#12, ss_ext_sales_price#21]\n            :        :     :  +- Join Inner, (ss_sold_date_sk#29 = d_date_sk#30)\n            :        :     :     :- Project [ss_item_sk#8, ss_addr_sk#12, ss_ext_sales_price#21, ss_sold_date_sk#29]\n            :        :     :     :  +- Filter (((isnotnull(ss_sold_date_sk#29) AND isnotnull(ss_addr_sk#12)) AND isnotnull(ss_item_sk#8)) AND dynamicpruning#585 [ss_sold_date_sk#29])\n            :        :     :     :     :  +- Project [d_date_sk#30]\n            :        :     :     :     :     +- Filter (((isnotnull(d_year#36) AND isnotnull(d_moy#38)) AND ((d_year#36 = 1999) AND (d_moy#38 = 9))) AND isnotnull(d_date_sk#30))\n            :        :     :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#30,d_date_id#31,d_date#32,d_month_seq#33,d_week_seq#34,d_quarter_seq#35,d_year#36,d_dow#37,d_moy#38,d_dom#39,d_qoy#40,d_fy_year#41,d_fy_quarter_seq#42,d_fy_week_seq#43,d_day_name#44,d_quarter_name#45,d_holiday#46,d_weekend#47,d_following_holiday#48,d_first_dom#49,d_last_dom#50,d_same_day_ly#51,d_same_day_lq#52,d_current_day#53,... 4 more fields] parquet\n            :        :     :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#7,ss_item_sk#8,ss_customer_sk#9,ss_cdemo_sk#10,ss_hdemo_sk#11,ss_addr_sk#12,ss_store_sk#13,ss_promo_sk#14,ss_ticket_number#15L,ss_quantity#16,ss_wholesale_cost#17,ss_list_price#18,ss_sales_price#19,ss_ext_discount_amt#20,ss_ext_sales_price#21,ss_ext_wholesale_cost#22,ss_ext_list_price#23,ss_ext_tax#24,ss_coupon_amt#25,ss_net_paid#26,ss_net_paid_inc_tax#27,ss_net_profit#28,ss_sold_date_sk#29] parquet\n            :        :     :     +- LogicalQueryStage Project [d_date_sk#30], BroadcastQueryStage 0\n            :        :     +- LogicalQueryStage Project [ca_address_sk#58], BroadcastQueryStage 1\n            :        +- LogicalQueryStage Join LeftSemi, (i_item_id#72 = i_item_id#508), BroadcastQueryStage 15\n            :- Aggregate [i_item_id#423], [i_item_id#423, MakeDecimal(sum(UnscaledValue(cs_ext_sales_price#115)),17,2) AS total_sales#377]\n            :  +- Project [cs_ext_sales_price#115, i_item_id#423]\n            :     +- Join Inner, (cs_item_sk#107 = i_item_sk#422)\n            :        :- Project [cs_item_sk#107, cs_ext_sales_price#115]\n            :        :  +- Join Inner, (cs_bill_addr_sk#98 = ca_address_sk#409)\n            :        :     :- Project [cs_bill_addr_sk#98, cs_item_sk#107, cs_ext_sales_price#115]\n            :        :     :  +- Join Inner, (cs_sold_date_sk#126 = d_date_sk#381)\n            :        :     :     :- Project [cs_bill_addr_sk#98, cs_item_sk#107, cs_ext_sales_price#115, cs_sold_date_sk#126]\n            :        :     :     :  +- Filter (((isnotnull(cs_sold_date_sk#126) AND isnotnull(cs_bill_addr_sk#98)) AND isnotnull(cs_item_sk#107)) AND dynamicpruning#586 [cs_sold_date_sk#126])\n            :        :     :     :     :  +- Project [d_date_sk#381]\n            :        :     :     :     :     +- Filter (((isnotnull(d_year#387) AND isnotnull(d_moy#389)) AND ((d_year#387 = 1999) AND (d_moy#389 = 9))) AND isnotnull(d_date_sk#381))\n            :        :     :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#381,d_date_id#382,d_date#383,d_month_seq#384,d_week_seq#385,d_quarter_seq#386,d_year#387,d_dow#388,d_moy#389,d_dom#390,d_qoy#391,d_fy_year#392,d_fy_quarter_seq#393,d_fy_week_seq#394,d_day_name#395,d_quarter_name#396,d_holiday#397,d_weekend#398,d_following_holiday#399,d_first_dom#400,d_last_dom#401,d_same_day_ly#402,d_same_day_lq#403,d_current_day#404,... 4 more fields] parquet\n            :        :     :     :     +- Relation spark_catalog.tpcds_100.catalog_sales[cs_sold_time_sk#93,cs_ship_date_sk#94,cs_bill_customer_sk#95,cs_bill_cdemo_sk#96,cs_bill_hdemo_sk#97,cs_bill_addr_sk#98,cs_ship_customer_sk#99,cs_ship_cdemo_sk#100,cs_ship_hdemo_sk#101,cs_ship_addr_sk#102,cs_call_center_sk#103,cs_catalog_page_sk#104,cs_ship_mode_sk#105,cs_warehouse_sk#106,cs_item_sk#107,cs_promo_sk#108,cs_order_number#109L,cs_quantity#110,cs_wholesale_cost#111,cs_list_price#112,cs_sales_price#113,cs_ext_discount_amt#114,cs_ext_sales_price#115,cs_ext_wholesale_cost#116,... 10 more fields] parquet\n            :        :     :     +- LogicalQueryStage Project [d_date_sk#381], BroadcastQueryStage 4\n            :        :     +- LogicalQueryStage Project [ca_address_sk#409], BroadcastQueryStage 6\n            :        +- LogicalQueryStage Join LeftSemi, (i_item_id#423 = i_item_id#530), BroadcastQueryStage 17\n            +- Aggregate [i_item_id#486], [i_item_id#486, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#149)),17,2) AS total_sales#379]\n               +- Project [ws_ext_sales_price#149, i_item_id#486]\n                  +- Join Inner, (ws_item_sk#129 = i_item_sk#485)\n                     :- Project [ws_item_sk#129, ws_ext_sales_price#149]\n                     :  +- Join Inner, (ws_bill_addr_sk#133 = ca_address_sk#472)\n                     :     :- Project [ws_item_sk#129, ws_bill_addr_sk#133, ws_ext_sales_price#149]\n                     :     :  +- Join Inner, (ws_sold_date_sk#160 = d_date_sk#444)\n                     :     :     :- Project [ws_item_sk#129, ws_bill_addr_sk#133, ws_ext_sales_price#149, ws_sold_date_sk#160]\n                     :     :     :  +- Filter (((isnotnull(ws_sold_date_sk#160) AND isnotnull(ws_bill_addr_sk#133)) AND isnotnull(ws_item_sk#129)) AND dynamicpruning#587 [ws_sold_date_sk#160])\n                     :     :     :     :  +- Project [d_date_sk#444]\n                     :     :     :     :     +- Filter (((isnotnull(d_year#450) AND isnotnull(d_moy#452)) AND ((d_year#450 = 1999) AND (d_moy#452 = 9))) AND isnotnull(d_date_sk#444))\n                     :     :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#444,d_date_id#445,d_date#446,d_month_seq#447,d_week_seq#448,d_quarter_seq#449,d_year#450,d_dow#451,d_moy#452,d_dom#453,d_qoy#454,d_fy_year#455,d_fy_quarter_seq#456,d_fy_week_seq#457,d_day_name#458,d_quarter_name#459,d_holiday#460,d_weekend#461,d_following_holiday#462,d_first_dom#463,d_last_dom#464,d_same_day_ly#465,d_same_day_lq#466,d_current_day#467,... 4 more fields] parquet\n                     :     :     :     +- Relation spark_catalog.tpcds_100.web_sales[ws_sold_time_sk#127,ws_ship_date_sk#128,ws_item_sk#129,ws_bill_customer_sk#130,ws_bill_cdemo_sk#131,ws_bill_hdemo_sk#132,ws_bill_addr_sk#133,ws_ship_customer_sk#134,ws_ship_cdemo_sk#135,ws_ship_hdemo_sk#136,ws_ship_addr_sk#137,ws_web_page_sk#138,ws_web_site_sk#139,ws_ship_mode_sk#140,ws_warehouse_sk#141,ws_promo_sk#142,ws_order_number#143L,ws_quantity#144,ws_wholesale_cost#145,ws_list_price#146,ws_sales_price#147,ws_ext_discount_amt#148,ws_ext_sales_price#149,ws_ext_wholesale_cost#150,... 10 more fields] parquet\n                     :     :     +- LogicalQueryStage Project [d_date_sk#444], BroadcastQueryStage 10\n                     :     +- LogicalQueryStage Project [ca_address_sk#472], BroadcastQueryStage 12\n                     +- LogicalQueryStage Join LeftSemi, (i_item_id#486 = i_item_id#552), BroadcastQueryStage 19\n"
      },
      "IM" : {
        "inputSizeInBytes" : 86623988320,
        "inputRowCount" : 492254658
      },
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 6,
        "FinishedTasksNum" : 4,
        "FinishedTasksTotalTimeInMs" : 6533.0,
        "FinishedTasksDistributionInMs" : [ 1083.0, 1779.0, 1827.0, 1844.0, 1844.0 ]
      },
      "StartTimeInMs" : 1702227170104,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 8387,
        "IOBytes" : {
          "Total" : 119053636,
          "Details" : {
            "IR" : 101151492,
            "IW" : 0,
            "SR" : 8951072,
            "SW" : 8951072
          }
        }
      }
    }
  },
  "RuntimeQSs" : {
    "8" : {
      "QSLogical" : {
        "operators" : {
          "0" : {
            "sign" : -1057996610,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 4400,
                "rowCount" : 100
              },
              "compileTime" : {
                "sizeInBytes" : 4400,
                "rowCount" : 100
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) GlobalLimit Arguments: 100 "
          },
          "1" : {
            "sign" : 649430943,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 16785442,
                "rowCount" : -1
              },
              "compileTime" : {
                "sizeInBytes" : 16785442,
                "rowCount" : -1
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) LocalLimit Arguments: 100 "
          },
          "2" : {
            "sign" : 1146985128,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 16785442,
                "rowCount" : -1
              },
              "compileTime" : {
                "sizeInBytes" : 16785442,
                "rowCount" : -1
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [i_item_id#72 ASC NULLS FIRST, total_sales#374 ASC NULLS FIRST], true "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "LocalLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "LocalLimit",
          "toId" : 0,
          "toName" : "GlobalLimit",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [i_item_id#72 ASC NULLS FIRST, total_sales#374 ASC NULLS FIRST], true\n      +- Aggregate [i_item_id#72], [i_item_id#72, sum(total_sales#375) AS total_sales#374]\n         +- Union false, false\n            :- Aggregate [i_item_id#72], [i_item_id#72, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#21)),17,2) AS total_sales#375]\n            :  +- Project [ss_ext_sales_price#21, i_item_id#72]\n            :     +- Join Inner, (ss_item_sk#8 = i_item_sk#71)\n            :        :- Project [ss_item_sk#8, ss_ext_sales_price#21]\n            :        :  +- Join Inner, (ss_addr_sk#12 = ca_address_sk#58)\n            :        :     :- Project [ss_item_sk#8, ss_addr_sk#12, ss_ext_sales_price#21]\n            :        :     :  +- Join Inner, (ss_sold_date_sk#29 = d_date_sk#30)\n            :        :     :     :- Project [ss_item_sk#8, ss_addr_sk#12, ss_ext_sales_price#21, ss_sold_date_sk#29]\n            :        :     :     :  +- Filter (((isnotnull(ss_sold_date_sk#29) AND isnotnull(ss_addr_sk#12)) AND isnotnull(ss_item_sk#8)) AND dynamicpruning#585 [ss_sold_date_sk#29])\n            :        :     :     :     :  +- Project [d_date_sk#30]\n            :        :     :     :     :     +- Filter (((isnotnull(d_year#36) AND isnotnull(d_moy#38)) AND ((d_year#36 = 1999) AND (d_moy#38 = 9))) AND isnotnull(d_date_sk#30))\n            :        :     :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#30,d_date_id#31,d_date#32,d_month_seq#33,d_week_seq#34,d_quarter_seq#35,d_year#36,d_dow#37,d_moy#38,d_dom#39,d_qoy#40,d_fy_year#41,d_fy_quarter_seq#42,d_fy_week_seq#43,d_day_name#44,d_quarter_name#45,d_holiday#46,d_weekend#47,d_following_holiday#48,d_first_dom#49,d_last_dom#50,d_same_day_ly#51,d_same_day_lq#52,d_current_day#53,... 4 more fields] parquet\n            :        :     :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#7,ss_item_sk#8,ss_customer_sk#9,ss_cdemo_sk#10,ss_hdemo_sk#11,ss_addr_sk#12,ss_store_sk#13,ss_promo_sk#14,ss_ticket_number#15L,ss_quantity#16,ss_wholesale_cost#17,ss_list_price#18,ss_sales_price#19,ss_ext_discount_amt#20,ss_ext_sales_price#21,ss_ext_wholesale_cost#22,ss_ext_list_price#23,ss_ext_tax#24,ss_coupon_amt#25,ss_net_paid#26,ss_net_paid_inc_tax#27,ss_net_profit#28,ss_sold_date_sk#29] parquet\n            :        :     :     +- Project [d_date_sk#30]\n            :        :     :        +- Filter (((isnotnull(d_year#36) AND isnotnull(d_moy#38)) AND ((d_year#36 = 1999) AND (d_moy#38 = 9))) AND isnotnull(d_date_sk#30))\n            :        :     :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#30,d_date_id#31,d_date#32,d_month_seq#33,d_week_seq#34,d_quarter_seq#35,d_year#36,d_dow#37,d_moy#38,d_dom#39,d_qoy#40,d_fy_year#41,d_fy_quarter_seq#42,d_fy_week_seq#43,d_day_name#44,d_quarter_name#45,d_holiday#46,d_weekend#47,d_following_holiday#48,d_first_dom#49,d_last_dom#50,d_same_day_ly#51,d_same_day_lq#52,d_current_day#53,... 4 more fields] parquet\n            :        :     +- Project [ca_address_sk#58]\n            :        :        +- Filter ((isnotnull(ca_gmt_offset#69) AND (ca_gmt_offset#69 = -6.00)) AND isnotnull(ca_address_sk#58))\n            :        :           +- Relation spark_catalog.tpcds_100.customer_address[ca_address_sk#58,ca_address_id#59,ca_street_number#60,ca_street_name#61,ca_street_type#62,ca_suite_number#63,ca_city#64,ca_county#65,ca_state#66,ca_zip#67,ca_country#68,ca_gmt_offset#69,ca_location_type#70] parquet\n            :        +- Join LeftSemi, (i_item_id#72 = i_item_id#508)\n            :           :- Project [i_item_sk#71, i_item_id#72]\n            :           :  +- Filter isnotnull(i_item_sk#71)\n            :           :     +- Relation spark_catalog.tpcds_100.item[i_item_sk#71,i_item_id#72,i_rec_start_date#73,i_rec_end_date#74,i_item_desc#75,i_current_price#76,i_wholesale_cost#77,i_brand_id#78,i_brand#79,i_class_id#80,i_class#81,i_category_id#82,i_category#83,i_manufact_id#84,i_manufact#85,i_size#86,i_formulation#87,i_color#88,i_units#89,i_container#90,i_manager_id#91,i_product_name#92] parquet\n            :           +- Project [i_item_id#508]\n            :              +- Filter (isnotnull(i_category#519) AND (i_category#519 = Children))\n            :                 +- Relation spark_catalog.tpcds_100.item[i_item_sk#507,i_item_id#508,i_rec_start_date#509,i_rec_end_date#510,i_item_desc#511,i_current_price#512,i_wholesale_cost#513,i_brand_id#514,i_brand#515,i_class_id#516,i_class#517,i_category_id#518,i_category#519,i_manufact_id#520,i_manufact#521,i_size#522,i_formulation#523,i_color#524,i_units#525,i_container#526,i_manager_id#527,i_product_name#528] parquet\n            :- Aggregate [i_item_id#423], [i_item_id#423, MakeDecimal(sum(UnscaledValue(cs_ext_sales_price#115)),17,2) AS total_sales#377]\n            :  +- Project [cs_ext_sales_price#115, i_item_id#423]\n            :     +- Join Inner, (cs_item_sk#107 = i_item_sk#422)\n            :        :- Project [cs_item_sk#107, cs_ext_sales_price#115]\n            :        :  +- Join Inner, (cs_bill_addr_sk#98 = ca_address_sk#409)\n            :        :     :- Project [cs_bill_addr_sk#98, cs_item_sk#107, cs_ext_sales_price#115]\n            :        :     :  +- Join Inner, (cs_sold_date_sk#126 = d_date_sk#381)\n            :        :     :     :- Project [cs_bill_addr_sk#98, cs_item_sk#107, cs_ext_sales_price#115, cs_sold_date_sk#126]\n            :        :     :     :  +- Filter (((isnotnull(cs_sold_date_sk#126) AND isnotnull(cs_bill_addr_sk#98)) AND isnotnull(cs_item_sk#107)) AND dynamicpruning#586 [cs_sold_date_sk#126])\n            :        :     :     :     :  +- Project [d_date_sk#381]\n            :        :     :     :     :     +- Filter (((isnotnull(d_year#387) AND isnotnull(d_moy#389)) AND ((d_year#387 = 1999) AND (d_moy#389 = 9))) AND isnotnull(d_date_sk#381))\n            :        :     :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#381,d_date_id#382,d_date#383,d_month_seq#384,d_week_seq#385,d_quarter_seq#386,d_year#387,d_dow#388,d_moy#389,d_dom#390,d_qoy#391,d_fy_year#392,d_fy_quarter_seq#393,d_fy_week_seq#394,d_day_name#395,d_quarter_name#396,d_holiday#397,d_weekend#398,d_following_holiday#399,d_first_dom#400,d_last_dom#401,d_same_day_ly#402,d_same_day_lq#403,d_current_day#404,... 4 more fields] parquet\n            :        :     :     :     +- Relation spark_catalog.tpcds_100.catalog_sales[cs_sold_time_sk#93,cs_ship_date_sk#94,cs_bill_customer_sk#95,cs_bill_cdemo_sk#96,cs_bill_hdemo_sk#97,cs_bill_addr_sk#98,cs_ship_customer_sk#99,cs_ship_cdemo_sk#100,cs_ship_hdemo_sk#101,cs_ship_addr_sk#102,cs_call_center_sk#103,cs_catalog_page_sk#104,cs_ship_mode_sk#105,cs_warehouse_sk#106,cs_item_sk#107,cs_promo_sk#108,cs_order_number#109L,cs_quantity#110,cs_wholesale_cost#111,cs_list_price#112,cs_sales_price#113,cs_ext_discount_amt#114,cs_ext_sales_price#115,cs_ext_wholesale_cost#116,... 10 more fields] parquet\n            :        :     :     +- Project [d_date_sk#381]\n            :        :     :        +- Filter (((isnotnull(d_year#387) AND isnotnull(d_moy#389)) AND ((d_year#387 = 1999) AND (d_moy#389 = 9))) AND isnotnull(d_date_sk#381))\n            :        :     :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#381,d_date_id#382,d_date#383,d_month_seq#384,d_week_seq#385,d_quarter_seq#386,d_year#387,d_dow#388,d_moy#389,d_dom#390,d_qoy#391,d_fy_year#392,d_fy_quarter_seq#393,d_fy_week_seq#394,d_day_name#395,d_quarter_name#396,d_holiday#397,d_weekend#398,d_following_holiday#399,d_first_dom#400,d_last_dom#401,d_same_day_ly#402,d_same_day_lq#403,d_current_day#404,... 4 more fields] parquet\n            :        :     +- Project [ca_address_sk#409]\n            :        :        +- Filter ((isnotnull(ca_gmt_offset#420) AND (ca_gmt_offset#420 = -6.00)) AND isnotnull(ca_address_sk#409))\n            :        :           +- Relation spark_catalog.tpcds_100.customer_address[ca_address_sk#409,ca_address_id#410,ca_street_number#411,ca_street_name#412,ca_street_type#413,ca_suite_number#414,ca_city#415,ca_county#416,ca_state#417,ca_zip#418,ca_country#419,ca_gmt_offset#420,ca_location_type#421] parquet\n            :        +- Join LeftSemi, (i_item_id#423 = i_item_id#530)\n            :           :- Project [i_item_sk#422, i_item_id#423]\n            :           :  +- Filter isnotnull(i_item_sk#422)\n            :           :     +- Relation spark_catalog.tpcds_100.item[i_item_sk#422,i_item_id#423,i_rec_start_date#424,i_rec_end_date#425,i_item_desc#426,i_current_price#427,i_wholesale_cost#428,i_brand_id#429,i_brand#430,i_class_id#431,i_class#432,i_category_id#433,i_category#434,i_manufact_id#435,i_manufact#436,i_size#437,i_formulation#438,i_color#439,i_units#440,i_container#441,i_manager_id#442,i_product_name#443] parquet\n            :           +- Project [i_item_id#530]\n            :              +- Filter (isnotnull(i_category#541) AND (i_category#541 = Children))\n            :                 +- Relation spark_catalog.tpcds_100.item[i_item_sk#529,i_item_id#530,i_rec_start_date#531,i_rec_end_date#532,i_item_desc#533,i_current_price#534,i_wholesale_cost#535,i_brand_id#536,i_brand#537,i_class_id#538,i_class#539,i_category_id#540,i_category#541,i_manufact_id#542,i_manufact#543,i_size#544,i_formulation#545,i_color#546,i_units#547,i_container#548,i_manager_id#549,i_product_name#550] parquet\n            +- Aggregate [i_item_id#486], [i_item_id#486, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#149)),17,2) AS total_sales#379]\n               +- Project [ws_ext_sales_price#149, i_item_id#486]\n                  +- Join Inner, (ws_item_sk#129 = i_item_sk#485)\n                     :- Project [ws_item_sk#129, ws_ext_sales_price#149]\n                     :  +- Join Inner, (ws_bill_addr_sk#133 = ca_address_sk#472)\n                     :     :- Project [ws_item_sk#129, ws_bill_addr_sk#133, ws_ext_sales_price#149]\n                     :     :  +- Join Inner, (ws_sold_date_sk#160 = d_date_sk#444)\n                     :     :     :- Project [ws_item_sk#129, ws_bill_addr_sk#133, ws_ext_sales_price#149, ws_sold_date_sk#160]\n                     :     :     :  +- Filter (((isnotnull(ws_sold_date_sk#160) AND isnotnull(ws_bill_addr_sk#133)) AND isnotnull(ws_item_sk#129)) AND dynamicpruning#587 [ws_sold_date_sk#160])\n                     :     :     :     :  +- Project [d_date_sk#444]\n                     :     :     :     :     +- Filter (((isnotnull(d_year#450) AND isnotnull(d_moy#452)) AND ((d_year#450 = 1999) AND (d_moy#452 = 9))) AND isnotnull(d_date_sk#444))\n                     :     :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#444,d_date_id#445,d_date#446,d_month_seq#447,d_week_seq#448,d_quarter_seq#449,d_year#450,d_dow#451,d_moy#452,d_dom#453,d_qoy#454,d_fy_year#455,d_fy_quarter_seq#456,d_fy_week_seq#457,d_day_name#458,d_quarter_name#459,d_holiday#460,d_weekend#461,d_following_holiday#462,d_first_dom#463,d_last_dom#464,d_same_day_ly#465,d_same_day_lq#466,d_current_day#467,... 4 more fields] parquet\n                     :     :     :     +- Relation spark_catalog.tpcds_100.web_sales[ws_sold_time_sk#127,ws_ship_date_sk#128,ws_item_sk#129,ws_bill_customer_sk#130,ws_bill_cdemo_sk#131,ws_bill_hdemo_sk#132,ws_bill_addr_sk#133,ws_ship_customer_sk#134,ws_ship_cdemo_sk#135,ws_ship_hdemo_sk#136,ws_ship_addr_sk#137,ws_web_page_sk#138,ws_web_site_sk#139,ws_ship_mode_sk#140,ws_warehouse_sk#141,ws_promo_sk#142,ws_order_number#143L,ws_quantity#144,ws_wholesale_cost#145,ws_list_price#146,ws_sales_price#147,ws_ext_discount_amt#148,ws_ext_sales_price#149,ws_ext_wholesale_cost#150,... 10 more fields] parquet\n                     :     :     +- Project [d_date_sk#444]\n                     :     :        +- Filter (((isnotnull(d_year#450) AND isnotnull(d_moy#452)) AND ((d_year#450 = 1999) AND (d_moy#452 = 9))) AND isnotnull(d_date_sk#444))\n                     :     :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#444,d_date_id#445,d_date#446,d_month_seq#447,d_week_seq#448,d_quarter_seq#449,d_year#450,d_dow#451,d_moy#452,d_dom#453,d_qoy#454,d_fy_year#455,d_fy_quarter_seq#456,d_fy_week_seq#457,d_day_name#458,d_quarter_name#459,d_holiday#460,d_weekend#461,d_following_holiday#462,d_first_dom#463,d_last_dom#464,d_same_day_ly#465,d_same_day_lq#466,d_current_day#467,... 4 more fields] parquet\n                     :     +- Project [ca_address_sk#472]\n                     :        +- Filter ((isnotnull(ca_gmt_offset#483) AND (ca_gmt_offset#483 = -6.00)) AND isnotnull(ca_address_sk#472))\n                     :           +- Relation spark_catalog.tpcds_100.customer_address[ca_address_sk#472,ca_address_id#473,ca_street_number#474,ca_street_name#475,ca_street_type#476,ca_suite_number#477,ca_city#478,ca_county#479,ca_state#480,ca_zip#481,ca_country#482,ca_gmt_offset#483,ca_location_type#484] parquet\n                     +- Join LeftSemi, (i_item_id#486 = i_item_id#552)\n                        :- Project [i_item_sk#485, i_item_id#486]\n                        :  +- Filter isnotnull(i_item_sk#485)\n                        :     +- Relation spark_catalog.tpcds_100.item[i_item_sk#485,i_item_id#486,i_rec_start_date#487,i_rec_end_date#488,i_item_desc#489,i_current_price#490,i_wholesale_cost#491,i_brand_id#492,i_brand#493,i_class_id#494,i_class#495,i_category_id#496,i_category#497,i_manufact_id#498,i_manufact#499,i_size#500,i_formulation#501,i_color#502,i_units#503,i_container#504,i_manager_id#505,i_product_name#506] parquet\n                        +- Project [i_item_id#552]\n                           +- Filter (isnotnull(i_category#563) AND (i_category#563 = Children))\n                              +- Relation spark_catalog.tpcds_100.item[i_item_sk#551,i_item_id#552,i_rec_start_date#553,i_rec_end_date#554,i_item_desc#555,i_current_price#556,i_wholesale_cost#557,i_brand_id#558,i_brand#559,i_class_id#560,i_class#561,i_category_id#562,i_category#563,i_manufact_id#564,i_manufact#565,i_size#566,i_formulation#567,i_color#568,i_units#569,i_container#570,i_manager_id#571,i_product_name#572] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "0" : {
            "sign" : -1506356647,
            "className" : "org.apache.spark.sql.execution.TakeOrderedAndProjectExec",
            "sizeInBytes" : 4400,
            "rowCount" : 100,
            "isRuntime" : false,
            "predicate" : " (unknown) TakeOrderedAndProject Input [2]: [i_item_id#72, total_sales#374] Arguments: 100, [i_item_id#72 ASC NULLS FIRST, total_sales#374 ASC NULLS FIRST], [i_item_id#72, total_sales#374] "
          },
          "1" : {
            "sign" : 1233931357,
            "className" : "org.apache.spark.sql.execution.aggregate.HashAggregateExec",
            "sizeInBytes" : 3674944,
            "rowCount" : 57421,
            "isRuntime" : true,
            "predicate" : " (unknown) HashAggregate Input [3]: [i_item_id#72, sum#590, isEmpty#591] Keys [1]: [i_item_id#72] Functions [1]: [sum(total_sales#375)] Aggregate Attributes [1]: [sum(total_sales#375)#582] Results [2]: [i_item_id#72, sum(total_sales#375)#582 AS total_sales#374] "
          },
          "2" : {
            "sign" : 145400837,
            "className" : "org.apache.spark.sql.execution.adaptive.ShuffleQueryStageExec",
            "sizeInBytes" : 16785442,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) ShuffleQueryStage Output [3]: [i_item_id#72, sum#590, isEmpty#591] Arguments: 23 "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "ShuffleQueryStage",
          "toId" : 1,
          "toName" : "HashAggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "HashAggregate",
          "toId" : 0,
          "toName" : "TakeOrderedAndProject",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "TakeOrderedAndProject(limit=100, orderBy=[i_item_id#72 ASC NULLS FIRST,total_sales#374 ASC NULLS FIRST], output=[i_item_id#72,total_sales#374])\n+- HashAggregate(keys=[i_item_id#72], functions=[sum(total_sales#375)], output=[i_item_id#72, total_sales#374])\n   +- ShuffleQueryStage 23\n      +- Exchange hashpartitioning(i_item_id#72, 200), ENSURE_REQUIREMENTS, [plan_id=2360]\n         +- *(19) HashAggregate(keys=[i_item_id#72], functions=[partial_sum(total_sales#375)], output=[i_item_id#72, sum#590, isEmpty#591])\n            +- Union\n               :- *(16) HashAggregate(keys=[i_item_id#72], functions=[sum(UnscaledValue(ss_ext_sales_price#21))], output=[i_item_id#72, total_sales#375])\n               :  +- AQEShuffleRead coalesced\n               :     +- ShuffleQueryStage 20\n               :        +- Exchange hashpartitioning(i_item_id#72, 200), ENSURE_REQUIREMENTS, [plan_id=2034]\n               :           +- *(13) HashAggregate(keys=[i_item_id#72], functions=[partial_sum(UnscaledValue(ss_ext_sales_price#21))], output=[i_item_id#72, sum#593L])\n               :              +- *(13) Project [ss_ext_sales_price#21, i_item_id#72]\n               :                 +- *(13) BroadcastHashJoin [ss_item_sk#8], [i_item_sk#71], Inner, BuildRight, false\n               :                    :- *(13) Project [ss_item_sk#8, ss_ext_sales_price#21]\n               :                    :  +- *(13) BroadcastHashJoin [ss_addr_sk#12], [ca_address_sk#58], Inner, BuildRight, false\n               :                    :     :- *(13) Project [ss_item_sk#8, ss_addr_sk#12, ss_ext_sales_price#21]\n               :                    :     :  +- *(13) BroadcastHashJoin [ss_sold_date_sk#29], [d_date_sk#30], Inner, BuildRight, false\n               :                    :     :     :- *(13) Filter (isnotnull(ss_addr_sk#12) AND isnotnull(ss_item_sk#8))\n               :                    :     :     :  +- *(13) ColumnarToRow\n               :                    :     :     :     +- FileScan parquet spark_catalog.tpcds_100.store_sales[ss_item_sk#8,ss_addr_sk#12,ss_ext_sales_price#21,ss_sold_date_sk#29] Batched: true, DataFilters: [isnotnull(ss_addr_sk#12), isnotnull(ss_item_sk#8)], Format: Parquet, Location: InMemoryFileIndex(1823 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/store_..., PartitionFilters: [isnotnull(ss_sold_date_sk#29), dynamicpruningexpression(ss_sold_date_sk#29 IN dynamicpruning#585)], PushedFilters: [IsNotNull(ss_addr_sk), IsNotNull(ss_item_sk)], ReadSchema: struct<ss_item_sk:int,ss_addr_sk:int,ss_ext_sales_price:decimal(7,2)>\n               :                    :     :     :           +- SubqueryBroadcast dynamicpruning#585, 0, [d_date_sk#30], [id=#1981]\n               :                    :     :     :              +- AdaptiveSparkPlan isFinalPlan=true\n                                                                  +- == Final Plan ==\n                                                                     BroadcastQueryStage 1\n                                                                     +- ReusedExchange [d_date_sk#30], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=552]\n                                                                  +- == Initial Plan ==\n                                                                     BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=1978]\n                                                                     +- Project [d_date_sk#30]\n                                                                        +- Filter ((((isnotnull(d_year#36) AND isnotnull(d_moy#38)) AND (d_year#36 = 1999)) AND (d_moy#38 = 9)) AND isnotnull(d_date_sk#30))\n                                                                           +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#30,d_year#36,d_moy#38] Batched: true, DataFilters: [isnotnull(d_year#36), isnotnull(d_moy#38), (d_year#36 = 1999), (d_moy#38 = 9), isnotnull(d_date_..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), IsNotNull(d_moy), EqualTo(d_year,1999), EqualTo(d_moy,9), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>\n               :                    :     :     +- BroadcastQueryStage 0\n               :                    :     :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=552]\n               :                    :     :           +- *(1) Project [d_date_sk#30]\n               :                    :     :              +- *(1) Filter ((((isnotnull(d_year#36) AND isnotnull(d_moy#38)) AND (d_year#36 = 1999)) AND (d_moy#38 = 9)) AND isnotnull(d_date_sk#30))\n               :                    :     :                 +- *(1) ColumnarToRow\n               :                    :     :                    +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#30,d_year#36,d_moy#38] Batched: true, DataFilters: [isnotnull(d_year#36), isnotnull(d_moy#38), (d_year#36 = 1999), (d_moy#38 = 9), isnotnull(d_date_..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), IsNotNull(d_moy), EqualTo(d_year,1999), EqualTo(d_moy,9), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>\n               :                    :     +- BroadcastQueryStage 1\n               :                    :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=573]\n               :                    :           +- *(2) Project [ca_address_sk#58]\n               :                    :              +- *(2) Filter ((isnotnull(ca_gmt_offset#69) AND (ca_gmt_offset#69 = -6.00)) AND isnotnull(ca_address_sk#58))\n               :                    :                 +- *(2) ColumnarToRow\n               :                    :                    +- FileScan parquet spark_catalog.tpcds_100.customer_address[ca_address_sk#58,ca_gmt_offset#69] Batched: true, DataFilters: [isnotnull(ca_gmt_offset#69), (ca_gmt_offset#69 = -6.00), isnotnull(ca_address_sk#58)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/customer_..., PartitionFilters: [], PushedFilters: [IsNotNull(ca_gmt_offset), EqualTo(ca_gmt_offset,-6.00), IsNotNull(ca_address_sk)], ReadSchema: struct<ca_address_sk:int,ca_gmt_offset:decimal(5,2)>\n               :                    +- BroadcastQueryStage 15\n               :                       +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=1302]\n               :                          +- *(10) BroadcastHashJoin [i_item_id#72], [i_item_id#508], LeftSemi, BuildRight, false\n               :                             :- *(10) Filter isnotnull(i_item_sk#71)\n               :                             :  +- *(10) ColumnarToRow\n               :                             :     +- FileScan parquet spark_catalog.tpcds_100.item[i_item_sk#71,i_item_id#72] Batched: true, DataFilters: [isnotnull(i_item_sk#71)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/item], PartitionFilters: [], PushedFilters: [IsNotNull(i_item_sk)], ReadSchema: struct<i_item_sk:int,i_item_id:string>\n               :                             +- BroadcastQueryStage 2\n               :                                +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, string, true]),false), [plan_id=594]\n               :                                   +- *(3) Project [i_item_id#508]\n               :                                      +- *(3) Filter (isnotnull(i_category#519) AND (i_category#519 = Children))\n               :                                         +- *(3) ColumnarToRow\n               :                                            +- FileScan parquet spark_catalog.tpcds_100.item[i_item_id#508,i_category#519] Batched: true, DataFilters: [isnotnull(i_category#519), (i_category#519 = Children)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/item], PartitionFilters: [], PushedFilters: [IsNotNull(i_category), EqualTo(i_category,Children)], ReadSchema: struct<i_item_id:string,i_category:string>\n               :- *(17) HashAggregate(keys=[i_item_id#423], functions=[sum(UnscaledValue(cs_ext_sales_price#115))], output=[i_item_id#423, total_sales#377])\n               :  +- AQEShuffleRead coalesced\n               :     +- ShuffleQueryStage 21\n               :        +- Exchange hashpartitioning(i_item_id#423, 200), ENSURE_REQUIREMENTS, [plan_id=2127]\n               :           +- *(14) HashAggregate(keys=[i_item_id#423], functions=[partial_sum(UnscaledValue(cs_ext_sales_price#115))], output=[i_item_id#423, sum#595L])\n               :              +- *(14) Project [cs_ext_sales_price#115, i_item_id#423]\n               :                 +- *(14) BroadcastHashJoin [cs_item_sk#107], [i_item_sk#422], Inner, BuildRight, false\n               :                    :- *(14) Project [cs_item_sk#107, cs_ext_sales_price#115]\n               :                    :  +- *(14) BroadcastHashJoin [cs_bill_addr_sk#98], [ca_address_sk#409], Inner, BuildRight, false\n               :                    :     :- *(14) Project [cs_bill_addr_sk#98, cs_item_sk#107, cs_ext_sales_price#115]\n               :                    :     :  +- *(14) BroadcastHashJoin [cs_sold_date_sk#126], [d_date_sk#381], Inner, BuildRight, false\n               :                    :     :     :- *(14) Filter (isnotnull(cs_bill_addr_sk#98) AND isnotnull(cs_item_sk#107))\n               :                    :     :     :  +- *(14) ColumnarToRow\n               :                    :     :     :     +- FileScan parquet spark_catalog.tpcds_100.catalog_sales[cs_bill_addr_sk#98,cs_item_sk#107,cs_ext_sales_price#115,cs_sold_date_sk#126] Batched: true, DataFilters: [isnotnull(cs_bill_addr_sk#98), isnotnull(cs_item_sk#107)], Format: Parquet, Location: InMemoryFileIndex(1836 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/catalo..., PartitionFilters: [isnotnull(cs_sold_date_sk#126), dynamicpruningexpression(cs_sold_date_sk#126 IN dynamicpruning#5..., PushedFilters: [IsNotNull(cs_bill_addr_sk), IsNotNull(cs_item_sk)], ReadSchema: struct<cs_bill_addr_sk:int,cs_item_sk:int,cs_ext_sales_price:decimal(7,2)>\n               :                    :     :     :           +- ReusedSubquery SubqueryBroadcast dynamicpruning#585, 0, [d_date_sk#30], [id=#1981]\n               :                    :     :     +- BroadcastQueryStage 4\n               :                    :     :        +- ReusedExchange [d_date_sk#381], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=552]\n               :                    :     +- BroadcastQueryStage 6\n               :                    :        +- ReusedExchange [ca_address_sk#409], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=573]\n               :                    +- BroadcastQueryStage 17\n               :                       +- ReusedExchange [i_item_sk#422, i_item_id#423], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=1302]\n               +- *(18) HashAggregate(keys=[i_item_id#486], functions=[sum(UnscaledValue(ws_ext_sales_price#149))], output=[i_item_id#486, total_sales#379])\n                  +- AQEShuffleRead coalesced\n                     +- ShuffleQueryStage 22\n                        +- Exchange hashpartitioning(i_item_id#486, 200), ENSURE_REQUIREMENTS, [plan_id=2220]\n                           +- *(15) HashAggregate(keys=[i_item_id#486], functions=[partial_sum(UnscaledValue(ws_ext_sales_price#149))], output=[i_item_id#486, sum#597L])\n                              +- *(15) Project [ws_ext_sales_price#149, i_item_id#486]\n                                 +- *(15) BroadcastHashJoin [ws_item_sk#129], [i_item_sk#485], Inner, BuildRight, false\n                                    :- *(15) Project [ws_item_sk#129, ws_ext_sales_price#149]\n                                    :  +- *(15) BroadcastHashJoin [ws_bill_addr_sk#133], [ca_address_sk#472], Inner, BuildRight, false\n                                    :     :- *(15) Project [ws_item_sk#129, ws_bill_addr_sk#133, ws_ext_sales_price#149]\n                                    :     :  +- *(15) BroadcastHashJoin [ws_sold_date_sk#160], [d_date_sk#444], Inner, BuildRight, false\n                                    :     :     :- *(15) Filter (isnotnull(ws_bill_addr_sk#133) AND isnotnull(ws_item_sk#129))\n                                    :     :     :  +- *(15) ColumnarToRow\n                                    :     :     :     +- FileScan parquet spark_catalog.tpcds_100.web_sales[ws_item_sk#129,ws_bill_addr_sk#133,ws_ext_sales_price#149,ws_sold_date_sk#160] Batched: true, DataFilters: [isnotnull(ws_bill_addr_sk#133), isnotnull(ws_item_sk#129)], Format: Parquet, Location: InMemoryFileIndex(1823 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/web_sa..., PartitionFilters: [isnotnull(ws_sold_date_sk#160), dynamicpruningexpression(ws_sold_date_sk#160 IN dynamicpruning#5..., PushedFilters: [IsNotNull(ws_bill_addr_sk), IsNotNull(ws_item_sk)], ReadSchema: struct<ws_item_sk:int,ws_bill_addr_sk:int,ws_ext_sales_price:decimal(7,2)>\n                                    :     :     :           +- ReusedSubquery SubqueryBroadcast dynamicpruning#585, 0, [d_date_sk#30], [id=#1981]\n                                    :     :     +- BroadcastQueryStage 10\n                                    :     :        +- ReusedExchange [d_date_sk#444], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=552]\n                                    :     +- BroadcastQueryStage 12\n                                    :        +- ReusedExchange [ca_address_sk#472], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=573]\n                                    +- BroadcastQueryStage 19\n                                       +- ReusedExchange [i_item_sk#485, i_item_id#486], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=1302]\n"
      },
      "IM" : {
        "inputSizeInBytes" : 3674944,
        "inputRowCount" : 57421
      },
      "InitialPartitionNum" : 1,
      "PD" : {
        "3" : [ 5586, 6144, 5586, 4614, 6144, 5586, 5586, 6144, 5586, 6144, 6144, 5246, 5586, 5586, 5586, 6144, 5586, 5246, 5076, 6759, 5586, 4922, 5586, 5076, 5586, 6144, 5586, 5076, 4768, 5076, 5416, 5416, 5586, 6368, 5076, 5586, 5958, 6144, 5586, 5416, 6759, 4922, 5586, 6144, 6759, 5586, 5076, 5246, 6144, 5416, 5772, 5586, 5586, 5586, 5586, 5586, 5772, 5772, 6144, 5416, 5958, 5958, 5586, 6144, 6759, 5958, 5246, 6759, 5586, 5586, 6144, 6144, 5246, 4768, 6144, 5586, 6144, 5416, 6759, 6144, 5586, 5586, 5076, 5246, 5123, 5586, 4614, 6554, 6554, 6144, 4922, 5586, 4922, 6144, 6759, 6144, 6144, 6144, 5246, 5772, 5586, 5246, 5092, 5586, 5586, 5586, 5586, 5586, 6144, 5586, 6144, 5958, 5586, 5586, 5076, 5586, 5416, 5586, 6554, 5586, 5586, 6144, 6144, 5416, 6144, 5586, 5586, 5076, 5076, 5586, 6144, 4768, 5772, 5586, 5586, 6144, 5076, 5586, 6144, 5586, 5586, 5586, 5076, 6144, 6144, 5076, 5586, 5788, 6759, 5602, 5586, 6349, 5416, 5772, 5076, 5958, 5076, 5076, 5586, 6144, 6554, 6349, 6144, 6144, 6759, 5076, 4614, 6759, 5416, 5076, 6759, 5772, 5076, 5076, 6759, 5416, 5586, 4614, 6144, 5586, 6144, 5076, 6144, 6144, 5958, 5586, 5772, 5076, 5586, 4922, 6144, 6144, 6554, 6144, 5076, 4614, 5076, 6144, 6144, 4953 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 8,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 18 ],
      "Objectives" : {
        "DurationInMs" : 167,
        "TotalTasksDurationInMs" : 160,
        "IOBytes" : {
          "Total" : 1084431,
          "Details" : {
            "IR" : 0,
            "IW" : 0,
            "SR" : 1084431,
            "SW" : 0
          }
        }
      }
    },
    "4" : {
      "QSLogical" : {
        "operators" : {
          "8" : {
            "sign" : 657223440,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 39925388256,
                "rowCount" : 262667028
              },
              "compileTime" : {
                "sizeInBytes" : 39925388256,
                "rowCount" : 262667028
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(ss_sold_date_sk#29) AND isnotnull(ss_addr_sk#12)) AND isnotnull(ss_item_sk#8)) AND dynamicpruning#585 [ss_sold_date_sk#29]) "
          },
          "4" : {
            "sign" : 1900356445,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 7706526464,
                "rowCount" : 275233088
              },
              "compileTime" : {
                "sizeInBytes" : 7706526464,
                "rowCount" : 275233088
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_addr_sk#12 = ca_address_sk#58) "
          },
          "9" : {
            "sign" : 1918777458,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 41806893656,
                "rowCount" : 275045353
              },
              "compileTime" : {
                "sizeInBytes" : 41806893656,
                "rowCount" : 275045353
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#7, ss_item_sk#8, ss_customer_sk#9, ss_cdemo_sk#10, ss_hdemo_sk#11, ss_addr_sk#12, ss_store_sk#13, ss_promo_sk#14, ss_ticket_number#15L, ss_quantity#16, ss_wholesale_cost#17, ss_list_price#18, ss_sales_price#19, ss_ext_discount_amt#20, ss_ext_sales_price#21, ss_ext_wholesale_cost#22, ss_ext_list_price#23, ss_ext_tax#24, ss_coupon_amt#25, ss_net_paid#26, ss_net_paid_inc_tax#27, ss_net_profit#28, ss_sold_date_sk#29], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "5" : {
            "sign" : -367392326,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 6372974040,
                "rowCount" : 265540585
              },
              "compileTime" : {
                "sizeInBytes" : 6372974040,
                "rowCount" : 265540585
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#8, ss_addr_sk#12, ss_ext_sales_price#21] "
          },
          "6" : {
            "sign" : -468001415,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 8497298720,
                "rowCount" : 265540585
              },
              "compileTime" : {
                "sizeInBytes" : 8497298720,
                "rowCount" : 265540585
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#29 = d_date_sk#30) "
          },
          "1" : {
            "sign" : -214167901,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 12639348524,
                "rowCount" : 287257921
              },
              "compileTime" : {
                "sizeInBytes" : 12639348524,
                "rowCount" : 287257921
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_ext_sales_price#21, i_item_id#72] "
          },
          "0" : {
            "sign" : 1183745429,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 4577848,
                "rowCount" : 104042
              },
              "compileTime" : {
                "sizeInBytes" : 4577848,
                "rowCount" : 104042
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [i_item_id#72], [i_item_id#72, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#21)),17,2) AS total_sales#375] "
          },
          "2" : {
            "sign" : -524779688,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 14937411892,
                "rowCount" : 287257921
              },
              "compileTime" : {
                "sizeInBytes" : 14937411892,
                "rowCount" : 287257921
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_item_sk#8 = i_item_sk#71) "
          },
          "7" : {
            "sign" : -9668412,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 7354676784,
                "rowCount" : 262667028
              },
              "compileTime" : {
                "sizeInBytes" : 7354676784,
                "rowCount" : 262667028
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#8, ss_addr_sk#12, ss_ext_sales_price#21, ss_sold_date_sk#29] "
          },
          "3" : {
            "sign" : -1226237013,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 5504661760,
                "rowCount" : 275233088
              },
              "compileTime" : {
                "sizeInBytes" : 5504661760,
                "rowCount" : 275233088
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#8, ss_ext_sales_price#21] "
          }
        },
        "links" : [ {
          "fromId" : 9,
          "fromName" : "LogicalRelation",
          "toId" : 8,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "Filter",
          "toId" : 7,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Project",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Join",
          "toId" : 5,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Project",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Join",
          "toId" : 3,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Project",
          "toId" : 2,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Join",
          "toId" : 1,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Project",
          "toId" : 0,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Aggregate [i_item_id#72], [i_item_id#72, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#21)),17,2) AS total_sales#375]\n+- Project [ss_ext_sales_price#21, i_item_id#72]\n   +- Join Inner, (ss_item_sk#8 = i_item_sk#71)\n      :- Project [ss_item_sk#8, ss_ext_sales_price#21]\n      :  +- Join Inner, (ss_addr_sk#12 = ca_address_sk#58)\n      :     :- Project [ss_item_sk#8, ss_addr_sk#12, ss_ext_sales_price#21]\n      :     :  +- Join Inner, (ss_sold_date_sk#29 = d_date_sk#30)\n      :     :     :- Project [ss_item_sk#8, ss_addr_sk#12, ss_ext_sales_price#21, ss_sold_date_sk#29]\n      :     :     :  +- Filter (((isnotnull(ss_sold_date_sk#29) AND isnotnull(ss_addr_sk#12)) AND isnotnull(ss_item_sk#8)) AND dynamicpruning#585 [ss_sold_date_sk#29])\n      :     :     :     :  +- Project [d_date_sk#30]\n      :     :     :     :     +- Filter (((isnotnull(d_year#36) AND isnotnull(d_moy#38)) AND ((d_year#36 = 1999) AND (d_moy#38 = 9))) AND isnotnull(d_date_sk#30))\n      :     :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#30,d_date_id#31,d_date#32,d_month_seq#33,d_week_seq#34,d_quarter_seq#35,d_year#36,d_dow#37,d_moy#38,d_dom#39,d_qoy#40,d_fy_year#41,d_fy_quarter_seq#42,d_fy_week_seq#43,d_day_name#44,d_quarter_name#45,d_holiday#46,d_weekend#47,d_following_holiday#48,d_first_dom#49,d_last_dom#50,d_same_day_ly#51,d_same_day_lq#52,d_current_day#53,... 4 more fields] parquet\n      :     :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#7,ss_item_sk#8,ss_customer_sk#9,ss_cdemo_sk#10,ss_hdemo_sk#11,ss_addr_sk#12,ss_store_sk#13,ss_promo_sk#14,ss_ticket_number#15L,ss_quantity#16,ss_wholesale_cost#17,ss_list_price#18,ss_sales_price#19,ss_ext_discount_amt#20,ss_ext_sales_price#21,ss_ext_wholesale_cost#22,ss_ext_list_price#23,ss_ext_tax#24,ss_coupon_amt#25,ss_net_paid#26,ss_net_paid_inc_tax#27,ss_net_profit#28,ss_sold_date_sk#29] parquet\n      :     :     +- Project [d_date_sk#30]\n      :     :        +- Filter (((isnotnull(d_year#36) AND isnotnull(d_moy#38)) AND ((d_year#36 = 1999) AND (d_moy#38 = 9))) AND isnotnull(d_date_sk#30))\n      :     :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#30,d_date_id#31,d_date#32,d_month_seq#33,d_week_seq#34,d_quarter_seq#35,d_year#36,d_dow#37,d_moy#38,d_dom#39,d_qoy#40,d_fy_year#41,d_fy_quarter_seq#42,d_fy_week_seq#43,d_day_name#44,d_quarter_name#45,d_holiday#46,d_weekend#47,d_following_holiday#48,d_first_dom#49,d_last_dom#50,d_same_day_ly#51,d_same_day_lq#52,d_current_day#53,... 4 more fields] parquet\n      :     +- Project [ca_address_sk#58]\n      :        +- Filter ((isnotnull(ca_gmt_offset#69) AND (ca_gmt_offset#69 = -6.00)) AND isnotnull(ca_address_sk#58))\n      :           +- Relation spark_catalog.tpcds_100.customer_address[ca_address_sk#58,ca_address_id#59,ca_street_number#60,ca_street_name#61,ca_street_type#62,ca_suite_number#63,ca_city#64,ca_county#65,ca_state#66,ca_zip#67,ca_country#68,ca_gmt_offset#69,ca_location_type#70] parquet\n      +- Join LeftSemi, (i_item_id#72 = i_item_id#508)\n         :- Project [i_item_sk#71, i_item_id#72]\n         :  +- Filter isnotnull(i_item_sk#71)\n         :     +- Relation spark_catalog.tpcds_100.item[i_item_sk#71,i_item_id#72,i_rec_start_date#73,i_rec_end_date#74,i_item_desc#75,i_current_price#76,i_wholesale_cost#77,i_brand_id#78,i_brand#79,i_class_id#80,i_class#81,i_category_id#82,i_category#83,i_manufact_id#84,i_manufact#85,i_size#86,i_formulation#87,i_color#88,i_units#89,i_container#90,i_manager_id#91,i_product_name#92] parquet\n         +- Project [i_item_id#508]\n            +- Filter (isnotnull(i_category#519) AND (i_category#519 = Children))\n               +- Relation spark_catalog.tpcds_100.item[i_item_sk#507,i_item_id#508,i_rec_start_date#509,i_rec_end_date#510,i_item_desc#511,i_current_price#512,i_wholesale_cost#513,i_brand_id#514,i_brand#515,i_class_id#516,i_class#517,i_category_id#518,i_category#519,i_manufact_id#520,i_manufact#521,i_size#522,i_formulation#523,i_color#524,i_units#525,i_container#526,i_manager_id#527,i_product_name#528] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "8" : {
            "sign" : 782171264,
            "className" : "org.apache.spark.sql.execution.FileSourceScanExec",
            "sizeInBytes" : 7354676784,
            "rowCount" : 262667028,
            "isRuntime" : false,
            "predicate" : " (unknown) Scan parquet spark_catalog.tpcds_100.store_sales Output [4]: [ss_item_sk#8, ss_addr_sk#12, ss_ext_sales_price#21, ss_sold_date_sk#29] Batched: true Location: InMemoryFileIndex [hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/store_sales/ss_sold_date_sk=2450816, ... 1822 entries] PartitionFilters: [isnotnull(ss_sold_date_sk#29), dynamicpruningexpression(ss_sold_date_sk#29 IN dynamicpruning#585)] PushedFilters: [IsNotNull(ss_addr_sk), IsNotNull(ss_item_sk)] ReadSchema: struct<ss_item_sk:int,ss_addr_sk:int,ss_ext_sales_price:decimal(7,2)> "
          },
          "4" : {
            "sign" : 1854625342,
            "className" : "org.apache.spark.sql.execution.joins.BroadcastHashJoinExec",
            "sizeInBytes" : 7706526464,
            "rowCount" : 275233088,
            "isRuntime" : false,
            "predicate" : " (unknown) BroadcastHashJoin Left keys [1]: [ss_addr_sk#12] Right keys [1]: [ca_address_sk#58] Join type: Inner Join condition: None "
          },
          "11" : {
            "sign" : 1979863458,
            "className" : "org.apache.spark.sql.execution.adaptive.BroadcastQueryStageExec",
            "sizeInBytes" : 5826104,
            "rowCount" : 44125,
            "isRuntime" : true,
            "predicate" : " (unknown) BroadcastQueryStage Output [2]: [i_item_sk#71, i_item_id#72] Arguments: 15 "
          },
          "9" : {
            "sign" : -872819006,
            "className" : "org.apache.spark.sql.execution.adaptive.BroadcastQueryStageExec",
            "sizeInBytes" : 1048816,
            "rowCount" : 30,
            "isRuntime" : true,
            "predicate" : " (unknown) BroadcastQueryStage Output [1]: [d_date_sk#30] Arguments: 0 "
          },
          "5" : {
            "sign" : 1526444486,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 6372974040,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [3]: [ss_item_sk#8, ss_addr_sk#12, ss_ext_sales_price#21] Input [5]: [ss_item_sk#8, ss_addr_sk#12, ss_ext_sales_price#21, ss_sold_date_sk#29, d_date_sk#30] "
          },
          "10" : {
            "sign" : -617104300,
            "className" : "org.apache.spark.sql.execution.adaptive.BroadcastQueryStageExec",
            "sizeInBytes" : 24777216,
            "rowCount" : 441450,
            "isRuntime" : true,
            "predicate" : " (unknown) BroadcastQueryStage Output [1]: [ca_address_sk#58] Arguments: 1 "
          },
          "6" : {
            "sign" : 1949800209,
            "className" : "org.apache.spark.sql.execution.joins.BroadcastHashJoinExec",
            "sizeInBytes" : 8497298720,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) BroadcastHashJoin Left keys [1]: [ss_sold_date_sk#29] Right keys [1]: [d_date_sk#30] Join type: Inner Join condition: None "
          },
          "1" : {
            "sign" : 1648565603,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 12639348524,
            "rowCount" : 287257921,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [2]: [ss_ext_sales_price#21, i_item_id#72] Input [4]: [ss_item_sk#8, ss_ext_sales_price#21, i_item_sk#71, i_item_id#72] "
          },
          "0" : {
            "sign" : -582100359,
            "className" : "org.apache.spark.sql.execution.aggregate.HashAggregateExec",
            "sizeInBytes" : 4577848,
            "rowCount" : 104042,
            "isRuntime" : false,
            "predicate" : " (unknown) HashAggregate Input [2]: [ss_ext_sales_price#21, i_item_id#72] Keys [1]: [i_item_id#72] Functions [1]: [partial_sum(UnscaledValue(ss_ext_sales_price#21))] Aggregate Attributes [1]: [sum#592L] Results [2]: [i_item_id#72, sum#593L] "
          },
          "2" : {
            "sign" : -2040101928,
            "className" : "org.apache.spark.sql.execution.joins.BroadcastHashJoinExec",
            "sizeInBytes" : 14937411892,
            "rowCount" : 287257921,
            "isRuntime" : false,
            "predicate" : " (unknown) BroadcastHashJoin Left keys [1]: [ss_item_sk#8] Right keys [1]: [i_item_sk#71] Join type: Inner Join condition: None "
          },
          "7" : {
            "sign" : 89493755,
            "className" : "org.apache.spark.sql.execution.FilterExec",
            "sizeInBytes" : 7354676784,
            "rowCount" : 262667028,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Input [4]: [ss_item_sk#8, ss_addr_sk#12, ss_ext_sales_price#21, ss_sold_date_sk#29] Condition : (isnotnull(ss_addr_sk#12) AND isnotnull(ss_item_sk#8)) "
          },
          "3" : {
            "sign" : -1234940444,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 5504661760,
            "rowCount" : 275233088,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [2]: [ss_item_sk#8, ss_ext_sales_price#21] Input [4]: [ss_item_sk#8, ss_addr_sk#12, ss_ext_sales_price#21, ca_address_sk#58] "
          }
        },
        "links" : [ {
          "fromId" : 8,
          "fromName" : "Scan parquet spark_catalog.tpcds_100.store_sales",
          "toId" : 7,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Filter",
          "toId" : 6,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "BroadcastQueryStage",
          "toId" : 6,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "BroadcastHashJoin",
          "toId" : 5,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Project",
          "toId" : 4,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "BroadcastQueryStage",
          "toId" : 4,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "BroadcastHashJoin",
          "toId" : 3,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Project",
          "toId" : 2,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "BroadcastQueryStage",
          "toId" : 2,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "BroadcastHashJoin",
          "toId" : 1,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Project",
          "toId" : 0,
          "toName" : "HashAggregate",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "HashAggregate(keys=[i_item_id#72], functions=[partial_sum(UnscaledValue(ss_ext_sales_price#21))], output=[i_item_id#72, sum#593L])\n+- Project [ss_ext_sales_price#21, i_item_id#72]\n   +- BroadcastHashJoin [ss_item_sk#8], [i_item_sk#71], Inner, BuildRight, false\n      :- Project [ss_item_sk#8, ss_ext_sales_price#21]\n      :  +- BroadcastHashJoin [ss_addr_sk#12], [ca_address_sk#58], Inner, BuildRight, false\n      :     :- Project [ss_item_sk#8, ss_addr_sk#12, ss_ext_sales_price#21]\n      :     :  +- BroadcastHashJoin [ss_sold_date_sk#29], [d_date_sk#30], Inner, BuildRight, false\n      :     :     :- Filter (isnotnull(ss_addr_sk#12) AND isnotnull(ss_item_sk#8))\n      :     :     :  +- FileScan parquet spark_catalog.tpcds_100.store_sales[ss_item_sk#8,ss_addr_sk#12,ss_ext_sales_price#21,ss_sold_date_sk#29] Batched: true, DataFilters: [isnotnull(ss_addr_sk#12), isnotnull(ss_item_sk#8)], Format: Parquet, Location: InMemoryFileIndex(1823 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/store_..., PartitionFilters: [isnotnull(ss_sold_date_sk#29), dynamicpruningexpression(ss_sold_date_sk#29 IN dynamicpruning#585)], PushedFilters: [IsNotNull(ss_addr_sk), IsNotNull(ss_item_sk)], ReadSchema: struct<ss_item_sk:int,ss_addr_sk:int,ss_ext_sales_price:decimal(7,2)>\n      :     :     :        +- SubqueryBroadcast dynamicpruning#585, 0, [d_date_sk#30], [id=#1981]\n      :     :     :           +- AdaptiveSparkPlan isFinalPlan=false\n      :     :     :              +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=1978]\n      :     :     :                 +- Project [d_date_sk#30]\n      :     :     :                    +- Filter ((((isnotnull(d_year#36) AND isnotnull(d_moy#38)) AND (d_year#36 = 1999)) AND (d_moy#38 = 9)) AND isnotnull(d_date_sk#30))\n      :     :     :                       +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#30,d_year#36,d_moy#38] Batched: true, DataFilters: [isnotnull(d_year#36), isnotnull(d_moy#38), (d_year#36 = 1999), (d_moy#38 = 9), isnotnull(d_date_..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), IsNotNull(d_moy), EqualTo(d_year,1999), EqualTo(d_moy,9), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>\n      :     :     +- BroadcastQueryStage 0\n      :     :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=552]\n      :     :           +- *(1) Project [d_date_sk#30]\n      :     :              +- *(1) Filter ((((isnotnull(d_year#36) AND isnotnull(d_moy#38)) AND (d_year#36 = 1999)) AND (d_moy#38 = 9)) AND isnotnull(d_date_sk#30))\n      :     :                 +- *(1) ColumnarToRow\n      :     :                    +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#30,d_year#36,d_moy#38] Batched: true, DataFilters: [isnotnull(d_year#36), isnotnull(d_moy#38), (d_year#36 = 1999), (d_moy#38 = 9), isnotnull(d_date_..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), IsNotNull(d_moy), EqualTo(d_year,1999), EqualTo(d_moy,9), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>\n      :     +- BroadcastQueryStage 1\n      :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=573]\n      :           +- *(2) Project [ca_address_sk#58]\n      :              +- *(2) Filter ((isnotnull(ca_gmt_offset#69) AND (ca_gmt_offset#69 = -6.00)) AND isnotnull(ca_address_sk#58))\n      :                 +- *(2) ColumnarToRow\n      :                    +- FileScan parquet spark_catalog.tpcds_100.customer_address[ca_address_sk#58,ca_gmt_offset#69] Batched: true, DataFilters: [isnotnull(ca_gmt_offset#69), (ca_gmt_offset#69 = -6.00), isnotnull(ca_address_sk#58)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/customer_..., PartitionFilters: [], PushedFilters: [IsNotNull(ca_gmt_offset), EqualTo(ca_gmt_offset,-6.00), IsNotNull(ca_address_sk)], ReadSchema: struct<ca_address_sk:int,ca_gmt_offset:decimal(5,2)>\n      +- BroadcastQueryStage 15\n         +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=1302]\n            +- *(10) BroadcastHashJoin [i_item_id#72], [i_item_id#508], LeftSemi, BuildRight, false\n               :- *(10) Filter isnotnull(i_item_sk#71)\n               :  +- *(10) ColumnarToRow\n               :     +- FileScan parquet spark_catalog.tpcds_100.item[i_item_sk#71,i_item_id#72] Batched: true, DataFilters: [isnotnull(i_item_sk#71)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/item], PartitionFilters: [], PushedFilters: [IsNotNull(i_item_sk)], ReadSchema: struct<i_item_sk:int,i_item_id:string>\n               +- BroadcastQueryStage 2\n                  +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, string, true]),false), [plan_id=594]\n                     +- *(3) Project [i_item_id#508]\n                        +- *(3) Filter (isnotnull(i_category#519) AND (i_category#519 = Children))\n                           +- *(3) ColumnarToRow\n                              +- FileScan parquet spark_catalog.tpcds_100.item[i_item_id#508,i_category#519] Batched: true, DataFilters: [isnotnull(i_category#519), (i_category#519 = Children)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/item], PartitionFilters: [], PushedFilters: [IsNotNull(i_category), EqualTo(i_category,Children)], ReadSchema: struct<i_item_id:string,i_category:string>\n"
      },
      "IM" : {
        "inputSizeInBytes" : 7386328920,
        "inputRowCount" : 263152633
      },
      "InitialPartitionNum" : 0,
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 4,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 7 ],
      "Objectives" : {
        "DurationInMs" : 4904,
        "TotalTasksDurationInMs" : 58370,
        "IOBytes" : {
          "Total" : 55562055,
          "Details" : {
            "IR" : 52094287,
            "IW" : 0,
            "SR" : 0,
            "SW" : 3467768
          }
        }
      }
    },
    "5" : {
      "QSLogical" : {
        "operators" : {
          "8" : {
            "sign" : -1311945493,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 29651561264,
                "rowCount" : 142555583
              },
              "compileTime" : {
                "sizeInBytes" : 29651561264,
                "rowCount" : 142555583
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(cs_sold_date_sk#126) AND isnotnull(cs_bill_addr_sk#98)) AND isnotnull(cs_item_sk#107)) AND dynamicpruning#586 [cs_sold_date_sk#126]) "
          },
          "4" : {
            "sign" : -570184568,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 4014046764,
                "rowCount" : 143358813
              },
              "compileTime" : {
                "sizeInBytes" : 4014046764,
                "rowCount" : 143358813
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cs_bill_addr_sk#98 = ca_address_sk#409) "
          },
          "9" : {
            "sign" : 899995805,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 29800787536,
                "rowCount" : 143273017
              },
              "compileTime" : {
                "sizeInBytes" : 29800787536,
                "rowCount" : 143273017
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [cs_sold_time_sk#93, cs_ship_date_sk#94, cs_bill_customer_sk#95, cs_bill_cdemo_sk#96, cs_bill_hdemo_sk#97, cs_bill_addr_sk#98, cs_ship_customer_sk#99, cs_ship_cdemo_sk#100, cs_ship_hdemo_sk#101, cs_ship_addr_sk#102, cs_call_center_sk#103, cs_catalog_page_sk#104, cs_ship_mode_sk#105, cs_warehouse_sk#106, cs_item_sk#107, cs_promo_sk#108, cs_order_number#109L, cs_quantity#110, cs_wholesale_cost#111, cs_list_price#112, cs_sales_price#113, cs_ext_discount_amt#114, cs_ext_sales_price#115, cs_ext_wholesale_cost#116, ... 10 more fields], `spark_catalog`.`tpcds_100`.`catalog_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "5" : {
            "sign" : 1520553765,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 3324390288,
                "rowCount" : 138516262
              },
              "compileTime" : {
                "sizeInBytes" : 3324390288,
                "rowCount" : 138516262
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_bill_addr_sk#98, cs_item_sk#107, cs_ext_sales_price#115] "
          },
          "6" : {
            "sign" : 1918127668,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 4432520384,
                "rowCount" : 138516262
              },
              "compileTime" : {
                "sizeInBytes" : 4432520384,
                "rowCount" : 138516262
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cs_sold_date_sk#126 = d_date_sk#381) "
          },
          "1" : {
            "sign" : -1086694691,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 6330475932,
                "rowCount" : 143874453
              },
              "compileTime" : {
                "sizeInBytes" : 6330475932,
                "rowCount" : 143874453
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_ext_sales_price#115, i_item_id#423] "
          },
          "0" : {
            "sign" : -1760745605,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 4577848,
                "rowCount" : 104042
              },
              "compileTime" : {
                "sizeInBytes" : 4577848,
                "rowCount" : 104042
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [i_item_id#423], [i_item_id#423, MakeDecimal(sum(UnscaledValue(cs_ext_sales_price#115)),17,2) AS total_sales#377] "
          },
          "2" : {
            "sign" : 501635894,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 7481471556,
                "rowCount" : 143874453
              },
              "compileTime" : {
                "sizeInBytes" : 7481471556,
                "rowCount" : 143874453
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cs_item_sk#107 = i_item_sk#422) "
          },
          "7" : {
            "sign" : -1166024147,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 3991556324,
                "rowCount" : 142555583
              },
              "compileTime" : {
                "sizeInBytes" : 3991556324,
                "rowCount" : 142555583
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_bill_addr_sk#98, cs_item_sk#107, cs_ext_sales_price#115, cs_sold_date_sk#126] "
          },
          "3" : {
            "sign" : -465281532,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 2867176260,
                "rowCount" : 143358813
              },
              "compileTime" : {
                "sizeInBytes" : 2867176260,
                "rowCount" : 143358813
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_item_sk#107, cs_ext_sales_price#115] "
          }
        },
        "links" : [ {
          "fromId" : 9,
          "fromName" : "LogicalRelation",
          "toId" : 8,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "Filter",
          "toId" : 7,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Project",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Join",
          "toId" : 5,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Project",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Join",
          "toId" : 3,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Project",
          "toId" : 2,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Join",
          "toId" : 1,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Project",
          "toId" : 0,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Aggregate [i_item_id#423], [i_item_id#423, MakeDecimal(sum(UnscaledValue(cs_ext_sales_price#115)),17,2) AS total_sales#377]\n+- Project [cs_ext_sales_price#115, i_item_id#423]\n   +- Join Inner, (cs_item_sk#107 = i_item_sk#422)\n      :- Project [cs_item_sk#107, cs_ext_sales_price#115]\n      :  +- Join Inner, (cs_bill_addr_sk#98 = ca_address_sk#409)\n      :     :- Project [cs_bill_addr_sk#98, cs_item_sk#107, cs_ext_sales_price#115]\n      :     :  +- Join Inner, (cs_sold_date_sk#126 = d_date_sk#381)\n      :     :     :- Project [cs_bill_addr_sk#98, cs_item_sk#107, cs_ext_sales_price#115, cs_sold_date_sk#126]\n      :     :     :  +- Filter (((isnotnull(cs_sold_date_sk#126) AND isnotnull(cs_bill_addr_sk#98)) AND isnotnull(cs_item_sk#107)) AND dynamicpruning#586 [cs_sold_date_sk#126])\n      :     :     :     :  +- Project [d_date_sk#381]\n      :     :     :     :     +- Filter (((isnotnull(d_year#387) AND isnotnull(d_moy#389)) AND ((d_year#387 = 1999) AND (d_moy#389 = 9))) AND isnotnull(d_date_sk#381))\n      :     :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#381,d_date_id#382,d_date#383,d_month_seq#384,d_week_seq#385,d_quarter_seq#386,d_year#387,d_dow#388,d_moy#389,d_dom#390,d_qoy#391,d_fy_year#392,d_fy_quarter_seq#393,d_fy_week_seq#394,d_day_name#395,d_quarter_name#396,d_holiday#397,d_weekend#398,d_following_holiday#399,d_first_dom#400,d_last_dom#401,d_same_day_ly#402,d_same_day_lq#403,d_current_day#404,... 4 more fields] parquet\n      :     :     :     +- Relation spark_catalog.tpcds_100.catalog_sales[cs_sold_time_sk#93,cs_ship_date_sk#94,cs_bill_customer_sk#95,cs_bill_cdemo_sk#96,cs_bill_hdemo_sk#97,cs_bill_addr_sk#98,cs_ship_customer_sk#99,cs_ship_cdemo_sk#100,cs_ship_hdemo_sk#101,cs_ship_addr_sk#102,cs_call_center_sk#103,cs_catalog_page_sk#104,cs_ship_mode_sk#105,cs_warehouse_sk#106,cs_item_sk#107,cs_promo_sk#108,cs_order_number#109L,cs_quantity#110,cs_wholesale_cost#111,cs_list_price#112,cs_sales_price#113,cs_ext_discount_amt#114,cs_ext_sales_price#115,cs_ext_wholesale_cost#116,... 10 more fields] parquet\n      :     :     +- Project [d_date_sk#381]\n      :     :        +- Filter (((isnotnull(d_year#387) AND isnotnull(d_moy#389)) AND ((d_year#387 = 1999) AND (d_moy#389 = 9))) AND isnotnull(d_date_sk#381))\n      :     :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#381,d_date_id#382,d_date#383,d_month_seq#384,d_week_seq#385,d_quarter_seq#386,d_year#387,d_dow#388,d_moy#389,d_dom#390,d_qoy#391,d_fy_year#392,d_fy_quarter_seq#393,d_fy_week_seq#394,d_day_name#395,d_quarter_name#396,d_holiday#397,d_weekend#398,d_following_holiday#399,d_first_dom#400,d_last_dom#401,d_same_day_ly#402,d_same_day_lq#403,d_current_day#404,... 4 more fields] parquet\n      :     +- Project [ca_address_sk#409]\n      :        +- Filter ((isnotnull(ca_gmt_offset#420) AND (ca_gmt_offset#420 = -6.00)) AND isnotnull(ca_address_sk#409))\n      :           +- Relation spark_catalog.tpcds_100.customer_address[ca_address_sk#409,ca_address_id#410,ca_street_number#411,ca_street_name#412,ca_street_type#413,ca_suite_number#414,ca_city#415,ca_county#416,ca_state#417,ca_zip#418,ca_country#419,ca_gmt_offset#420,ca_location_type#421] parquet\n      +- Join LeftSemi, (i_item_id#423 = i_item_id#530)\n         :- Project [i_item_sk#422, i_item_id#423]\n         :  +- Filter isnotnull(i_item_sk#422)\n         :     +- Relation spark_catalog.tpcds_100.item[i_item_sk#422,i_item_id#423,i_rec_start_date#424,i_rec_end_date#425,i_item_desc#426,i_current_price#427,i_wholesale_cost#428,i_brand_id#429,i_brand#430,i_class_id#431,i_class#432,i_category_id#433,i_category#434,i_manufact_id#435,i_manufact#436,i_size#437,i_formulation#438,i_color#439,i_units#440,i_container#441,i_manager_id#442,i_product_name#443] parquet\n         +- Project [i_item_id#530]\n            +- Filter (isnotnull(i_category#541) AND (i_category#541 = Children))\n               +- Relation spark_catalog.tpcds_100.item[i_item_sk#529,i_item_id#530,i_rec_start_date#531,i_rec_end_date#532,i_item_desc#533,i_current_price#534,i_wholesale_cost#535,i_brand_id#536,i_brand#537,i_class_id#538,i_class#539,i_category_id#540,i_category#541,i_manufact_id#542,i_manufact#543,i_size#544,i_formulation#545,i_color#546,i_units#547,i_container#548,i_manager_id#549,i_product_name#550] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "8" : {
            "sign" : -461501026,
            "className" : "org.apache.spark.sql.execution.FileSourceScanExec",
            "sizeInBytes" : 3991556324,
            "rowCount" : 142555583,
            "isRuntime" : false,
            "predicate" : " (unknown) Scan parquet spark_catalog.tpcds_100.catalog_sales Output [4]: [cs_bill_addr_sk#98, cs_item_sk#107, cs_ext_sales_price#115, cs_sold_date_sk#126] Batched: true Location: InMemoryFileIndex [hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/catalog_sales/cs_sold_date_sk=2450815, ... 1835 entries] PartitionFilters: [isnotnull(cs_sold_date_sk#126), dynamicpruningexpression(cs_sold_date_sk#126 IN dynamicpruning#585)] PushedFilters: [IsNotNull(cs_bill_addr_sk), IsNotNull(cs_item_sk)] ReadSchema: struct<cs_bill_addr_sk:int,cs_item_sk:int,cs_ext_sales_price:decimal(7,2)> "
          },
          "4" : {
            "sign" : -1765733773,
            "className" : "org.apache.spark.sql.execution.joins.BroadcastHashJoinExec",
            "sizeInBytes" : 4014046764,
            "rowCount" : 143358813,
            "isRuntime" : false,
            "predicate" : " (unknown) BroadcastHashJoin Left keys [1]: [cs_bill_addr_sk#98] Right keys [1]: [ca_address_sk#409] Join type: Inner Join condition: None "
          },
          "11" : {
            "sign" : -770715279,
            "className" : "org.apache.spark.sql.execution.adaptive.BroadcastQueryStageExec",
            "sizeInBytes" : 5826104,
            "rowCount" : 44125,
            "isRuntime" : true,
            "predicate" : " (unknown) BroadcastQueryStage Output [2]: [i_item_sk#422, i_item_id#423] Arguments: 17 "
          },
          "9" : {
            "sign" : -1584134031,
            "className" : "org.apache.spark.sql.execution.adaptive.BroadcastQueryStageExec",
            "sizeInBytes" : 1048816,
            "rowCount" : 30,
            "isRuntime" : true,
            "predicate" : " (unknown) BroadcastQueryStage Output [1]: [d_date_sk#381] Arguments: 4 "
          },
          "5" : {
            "sign" : -38563942,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 3324390288,
            "rowCount" : 138516262,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [3]: [cs_bill_addr_sk#98, cs_item_sk#107, cs_ext_sales_price#115] Input [5]: [cs_bill_addr_sk#98, cs_item_sk#107, cs_ext_sales_price#115, cs_sold_date_sk#126, d_date_sk#381] "
          },
          "10" : {
            "sign" : -1647213909,
            "className" : "org.apache.spark.sql.execution.adaptive.BroadcastQueryStageExec",
            "sizeInBytes" : 24777216,
            "rowCount" : 441450,
            "isRuntime" : true,
            "predicate" : " (unknown) BroadcastQueryStage Output [1]: [ca_address_sk#409] Arguments: 6 "
          },
          "6" : {
            "sign" : -1410070225,
            "className" : "org.apache.spark.sql.execution.joins.BroadcastHashJoinExec",
            "sizeInBytes" : 4432520384,
            "rowCount" : 138516262,
            "isRuntime" : false,
            "predicate" : " (unknown) BroadcastHashJoin Left keys [1]: [cs_sold_date_sk#126] Right keys [1]: [d_date_sk#381] Join type: Inner Join condition: None "
          },
          "1" : {
            "sign" : -887456217,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 6330475932,
            "rowCount" : 143874453,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [2]: [cs_ext_sales_price#115, i_item_id#423] Input [4]: [cs_item_sk#107, cs_ext_sales_price#115, i_item_sk#422, i_item_id#423] "
          },
          "0" : {
            "sign" : -432278115,
            "className" : "org.apache.spark.sql.execution.aggregate.HashAggregateExec",
            "sizeInBytes" : 4577848,
            "rowCount" : 104042,
            "isRuntime" : false,
            "predicate" : " (unknown) HashAggregate Input [2]: [cs_ext_sales_price#115, i_item_id#423] Keys [1]: [i_item_id#423] Functions [1]: [partial_sum(UnscaledValue(cs_ext_sales_price#115))] Aggregate Attributes [1]: [sum#594L] Results [2]: [i_item_id#423, sum#595L] "
          },
          "2" : {
            "sign" : -2018262954,
            "className" : "org.apache.spark.sql.execution.joins.BroadcastHashJoinExec",
            "sizeInBytes" : 7481471556,
            "rowCount" : 143874453,
            "isRuntime" : false,
            "predicate" : " (unknown) BroadcastHashJoin Left keys [1]: [cs_item_sk#107] Right keys [1]: [i_item_sk#422] Join type: Inner Join condition: None "
          },
          "7" : {
            "sign" : -1716942357,
            "className" : "org.apache.spark.sql.execution.FilterExec",
            "sizeInBytes" : 3991556324,
            "rowCount" : 142555583,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Input [4]: [cs_bill_addr_sk#98, cs_item_sk#107, cs_ext_sales_price#115, cs_sold_date_sk#126] Condition : (isnotnull(cs_bill_addr_sk#98) AND isnotnull(cs_item_sk#107)) "
          },
          "3" : {
            "sign" : -872800459,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 2867176260,
            "rowCount" : 143358813,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [2]: [cs_item_sk#107, cs_ext_sales_price#115] Input [4]: [cs_bill_addr_sk#98, cs_item_sk#107, cs_ext_sales_price#115, ca_address_sk#409] "
          }
        },
        "links" : [ {
          "fromId" : 8,
          "fromName" : "Scan parquet spark_catalog.tpcds_100.catalog_sales",
          "toId" : 7,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Filter",
          "toId" : 6,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "BroadcastQueryStage",
          "toId" : 6,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "BroadcastHashJoin",
          "toId" : 5,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Project",
          "toId" : 4,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "BroadcastQueryStage",
          "toId" : 4,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "BroadcastHashJoin",
          "toId" : 3,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Project",
          "toId" : 2,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "BroadcastQueryStage",
          "toId" : 2,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "BroadcastHashJoin",
          "toId" : 1,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Project",
          "toId" : 0,
          "toName" : "HashAggregate",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "HashAggregate(keys=[i_item_id#423], functions=[partial_sum(UnscaledValue(cs_ext_sales_price#115))], output=[i_item_id#423, sum#595L])\n+- Project [cs_ext_sales_price#115, i_item_id#423]\n   +- BroadcastHashJoin [cs_item_sk#107], [i_item_sk#422], Inner, BuildRight, false\n      :- Project [cs_item_sk#107, cs_ext_sales_price#115]\n      :  +- BroadcastHashJoin [cs_bill_addr_sk#98], [ca_address_sk#409], Inner, BuildRight, false\n      :     :- Project [cs_bill_addr_sk#98, cs_item_sk#107, cs_ext_sales_price#115]\n      :     :  +- BroadcastHashJoin [cs_sold_date_sk#126], [d_date_sk#381], Inner, BuildRight, false\n      :     :     :- Filter (isnotnull(cs_bill_addr_sk#98) AND isnotnull(cs_item_sk#107))\n      :     :     :  +- FileScan parquet spark_catalog.tpcds_100.catalog_sales[cs_bill_addr_sk#98,cs_item_sk#107,cs_ext_sales_price#115,cs_sold_date_sk#126] Batched: true, DataFilters: [isnotnull(cs_bill_addr_sk#98), isnotnull(cs_item_sk#107)], Format: Parquet, Location: InMemoryFileIndex(1836 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/catalo..., PartitionFilters: [isnotnull(cs_sold_date_sk#126), dynamicpruningexpression(cs_sold_date_sk#126 IN dynamicpruning#5..., PushedFilters: [IsNotNull(cs_bill_addr_sk), IsNotNull(cs_item_sk)], ReadSchema: struct<cs_bill_addr_sk:int,cs_item_sk:int,cs_ext_sales_price:decimal(7,2)>\n      :     :     :        +- ReusedSubquery SubqueryBroadcast dynamicpruning#585, 0, [d_date_sk#30], [id=#1981]\n      :     :     +- BroadcastQueryStage 4\n      :     :        +- ReusedExchange [d_date_sk#381], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=552]\n      :     +- BroadcastQueryStage 6\n      :        +- ReusedExchange [ca_address_sk#409], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=573]\n      +- BroadcastQueryStage 17\n         +- ReusedExchange [i_item_sk#422, i_item_id#423], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=1302]\n"
      },
      "IM" : {
        "inputSizeInBytes" : 4023208460,
        "inputRowCount" : 143041188
      },
      "InitialPartitionNum" : 0,
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 5,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 8 ],
      "Objectives" : {
        "DurationInMs" : 4583,
        "TotalTasksDurationInMs" : 7348,
        "IOBytes" : {
          "Total" : 31832567,
          "Details" : {
            "IR" : 29187163,
            "IW" : 0,
            "SR" : 0,
            "SW" : 2645404
          }
        }
      }
    },
    "6" : {
      "QSLogical" : {
        "operators" : {
          "8" : {
            "sign" : 1576487933,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 14968824624,
                "rowCount" : 71965503
              },
              "compileTime" : {
                "sizeInBytes" : 14968824624,
                "rowCount" : 71965503
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(ws_sold_date_sk#160) AND isnotnull(ws_bill_addr_sk#133)) AND isnotnull(ws_item_sk#129)) AND dynamicpruning#587 [ws_sold_date_sk#160]) "
          },
          "4" : {
            "sign" : 1892995340,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 2015528872,
                "rowCount" : 71983174
              },
              "compileTime" : {
                "sizeInBytes" : 2015528872,
                "rowCount" : 71983174
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ws_bill_addr_sk#133 = ca_address_sk#472) "
          },
          "9" : {
            "sign" : 542040227,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 14972593792,
                "rowCount" : 71983624
              },
              "compileTime" : {
                "sizeInBytes" : 14972593792,
                "rowCount" : 71983624
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ws_sold_time_sk#127, ws_ship_date_sk#128, ws_item_sk#129, ws_bill_customer_sk#130, ws_bill_cdemo_sk#131, ws_bill_hdemo_sk#132, ws_bill_addr_sk#133, ws_ship_customer_sk#134, ws_ship_cdemo_sk#135, ws_ship_hdemo_sk#136, ws_ship_addr_sk#137, ws_web_page_sk#138, ws_web_site_sk#139, ws_ship_mode_sk#140, ws_warehouse_sk#141, ws_promo_sk#142, ws_order_number#143L, ws_quantity#144, ws_wholesale_cost#145, ws_list_price#146, ws_sales_price#147, ws_ext_discount_amt#148, ws_ext_sales_price#149, ws_ext_wholesale_cost#150, ... 10 more fields], `spark_catalog`.`tpcds_100`.`web_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "5" : {
            "sign" : 1993951844,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 1667894520,
                "rowCount" : 69495605
              },
              "compileTime" : {
                "sizeInBytes" : 1667894520,
                "rowCount" : 69495605
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_item_sk#129, ws_bill_addr_sk#133, ws_ext_sales_price#149] "
          },
          "6" : {
            "sign" : -433393072,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 2223859360,
                "rowCount" : 69495605
              },
              "compileTime" : {
                "sizeInBytes" : 2223859360,
                "rowCount" : 69495605
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ws_sold_date_sk#160 = d_date_sk#444) "
          },
          "1" : {
            "sign" : 107300033,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 3164343820,
                "rowCount" : 71916905
              },
              "compileTime" : {
                "sizeInBytes" : 3164343820,
                "rowCount" : 71916905
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_ext_sales_price#149, i_item_id#486] "
          },
          "0" : {
            "sign" : 179249098,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 4577848,
                "rowCount" : 104042
              },
              "compileTime" : {
                "sizeInBytes" : 4577848,
                "rowCount" : 104042
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [i_item_id#486], [i_item_id#486, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#149)),17,2) AS total_sales#379] "
          },
          "2" : {
            "sign" : 1313164746,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 3739679060,
                "rowCount" : 71916905
              },
              "compileTime" : {
                "sizeInBytes" : 3739679060,
                "rowCount" : 71916905
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ws_item_sk#129 = i_item_sk#485) "
          },
          "7" : {
            "sign" : 2013399350,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 2015034084,
                "rowCount" : 71965503
              },
              "compileTime" : {
                "sizeInBytes" : 2015034084,
                "rowCount" : 71965503
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_item_sk#129, ws_bill_addr_sk#133, ws_ext_sales_price#149, ws_sold_date_sk#160] "
          },
          "3" : {
            "sign" : -753554599,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 1439663480,
                "rowCount" : 71983174
              },
              "compileTime" : {
                "sizeInBytes" : 1439663480,
                "rowCount" : 71983174
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_item_sk#129, ws_ext_sales_price#149] "
          }
        },
        "links" : [ {
          "fromId" : 9,
          "fromName" : "LogicalRelation",
          "toId" : 8,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "Filter",
          "toId" : 7,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Project",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Join",
          "toId" : 5,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Project",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Join",
          "toId" : 3,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Project",
          "toId" : 2,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Join",
          "toId" : 1,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Project",
          "toId" : 0,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Aggregate [i_item_id#486], [i_item_id#486, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#149)),17,2) AS total_sales#379]\n+- Project [ws_ext_sales_price#149, i_item_id#486]\n   +- Join Inner, (ws_item_sk#129 = i_item_sk#485)\n      :- Project [ws_item_sk#129, ws_ext_sales_price#149]\n      :  +- Join Inner, (ws_bill_addr_sk#133 = ca_address_sk#472)\n      :     :- Project [ws_item_sk#129, ws_bill_addr_sk#133, ws_ext_sales_price#149]\n      :     :  +- Join Inner, (ws_sold_date_sk#160 = d_date_sk#444)\n      :     :     :- Project [ws_item_sk#129, ws_bill_addr_sk#133, ws_ext_sales_price#149, ws_sold_date_sk#160]\n      :     :     :  +- Filter (((isnotnull(ws_sold_date_sk#160) AND isnotnull(ws_bill_addr_sk#133)) AND isnotnull(ws_item_sk#129)) AND dynamicpruning#587 [ws_sold_date_sk#160])\n      :     :     :     :  +- Project [d_date_sk#444]\n      :     :     :     :     +- Filter (((isnotnull(d_year#450) AND isnotnull(d_moy#452)) AND ((d_year#450 = 1999) AND (d_moy#452 = 9))) AND isnotnull(d_date_sk#444))\n      :     :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#444,d_date_id#445,d_date#446,d_month_seq#447,d_week_seq#448,d_quarter_seq#449,d_year#450,d_dow#451,d_moy#452,d_dom#453,d_qoy#454,d_fy_year#455,d_fy_quarter_seq#456,d_fy_week_seq#457,d_day_name#458,d_quarter_name#459,d_holiday#460,d_weekend#461,d_following_holiday#462,d_first_dom#463,d_last_dom#464,d_same_day_ly#465,d_same_day_lq#466,d_current_day#467,... 4 more fields] parquet\n      :     :     :     +- Relation spark_catalog.tpcds_100.web_sales[ws_sold_time_sk#127,ws_ship_date_sk#128,ws_item_sk#129,ws_bill_customer_sk#130,ws_bill_cdemo_sk#131,ws_bill_hdemo_sk#132,ws_bill_addr_sk#133,ws_ship_customer_sk#134,ws_ship_cdemo_sk#135,ws_ship_hdemo_sk#136,ws_ship_addr_sk#137,ws_web_page_sk#138,ws_web_site_sk#139,ws_ship_mode_sk#140,ws_warehouse_sk#141,ws_promo_sk#142,ws_order_number#143L,ws_quantity#144,ws_wholesale_cost#145,ws_list_price#146,ws_sales_price#147,ws_ext_discount_amt#148,ws_ext_sales_price#149,ws_ext_wholesale_cost#150,... 10 more fields] parquet\n      :     :     +- Project [d_date_sk#444]\n      :     :        +- Filter (((isnotnull(d_year#450) AND isnotnull(d_moy#452)) AND ((d_year#450 = 1999) AND (d_moy#452 = 9))) AND isnotnull(d_date_sk#444))\n      :     :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#444,d_date_id#445,d_date#446,d_month_seq#447,d_week_seq#448,d_quarter_seq#449,d_year#450,d_dow#451,d_moy#452,d_dom#453,d_qoy#454,d_fy_year#455,d_fy_quarter_seq#456,d_fy_week_seq#457,d_day_name#458,d_quarter_name#459,d_holiday#460,d_weekend#461,d_following_holiday#462,d_first_dom#463,d_last_dom#464,d_same_day_ly#465,d_same_day_lq#466,d_current_day#467,... 4 more fields] parquet\n      :     +- Project [ca_address_sk#472]\n      :        +- Filter ((isnotnull(ca_gmt_offset#483) AND (ca_gmt_offset#483 = -6.00)) AND isnotnull(ca_address_sk#472))\n      :           +- Relation spark_catalog.tpcds_100.customer_address[ca_address_sk#472,ca_address_id#473,ca_street_number#474,ca_street_name#475,ca_street_type#476,ca_suite_number#477,ca_city#478,ca_county#479,ca_state#480,ca_zip#481,ca_country#482,ca_gmt_offset#483,ca_location_type#484] parquet\n      +- Join LeftSemi, (i_item_id#486 = i_item_id#552)\n         :- Project [i_item_sk#485, i_item_id#486]\n         :  +- Filter isnotnull(i_item_sk#485)\n         :     +- Relation spark_catalog.tpcds_100.item[i_item_sk#485,i_item_id#486,i_rec_start_date#487,i_rec_end_date#488,i_item_desc#489,i_current_price#490,i_wholesale_cost#491,i_brand_id#492,i_brand#493,i_class_id#494,i_class#495,i_category_id#496,i_category#497,i_manufact_id#498,i_manufact#499,i_size#500,i_formulation#501,i_color#502,i_units#503,i_container#504,i_manager_id#505,i_product_name#506] parquet\n         +- Project [i_item_id#552]\n            +- Filter (isnotnull(i_category#563) AND (i_category#563 = Children))\n               +- Relation spark_catalog.tpcds_100.item[i_item_sk#551,i_item_id#552,i_rec_start_date#553,i_rec_end_date#554,i_item_desc#555,i_current_price#556,i_wholesale_cost#557,i_brand_id#558,i_brand#559,i_class_id#560,i_class#561,i_category_id#562,i_category#563,i_manufact_id#564,i_manufact#565,i_size#566,i_formulation#567,i_color#568,i_units#569,i_container#570,i_manager_id#571,i_product_name#572] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "8" : {
            "sign" : -1410899089,
            "className" : "org.apache.spark.sql.execution.FileSourceScanExec",
            "sizeInBytes" : 2015034084,
            "rowCount" : 71965503,
            "isRuntime" : false,
            "predicate" : " (unknown) Scan parquet spark_catalog.tpcds_100.web_sales Output [4]: [ws_item_sk#129, ws_bill_addr_sk#133, ws_ext_sales_price#149, ws_sold_date_sk#160] Batched: true Location: InMemoryFileIndex [hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/web_sales/ws_sold_date_sk=2450816, ... 1822 entries] PartitionFilters: [isnotnull(ws_sold_date_sk#160), dynamicpruningexpression(ws_sold_date_sk#160 IN dynamicpruning#585)] PushedFilters: [IsNotNull(ws_bill_addr_sk), IsNotNull(ws_item_sk)] ReadSchema: struct<ws_item_sk:int,ws_bill_addr_sk:int,ws_ext_sales_price:decimal(7,2)> "
          },
          "4" : {
            "sign" : 987362741,
            "className" : "org.apache.spark.sql.execution.joins.BroadcastHashJoinExec",
            "sizeInBytes" : 2015528872,
            "rowCount" : 71983174,
            "isRuntime" : false,
            "predicate" : " (unknown) BroadcastHashJoin Left keys [1]: [ws_bill_addr_sk#133] Right keys [1]: [ca_address_sk#472] Join type: Inner Join condition: None "
          },
          "11" : {
            "sign" : -1668696113,
            "className" : "org.apache.spark.sql.execution.adaptive.BroadcastQueryStageExec",
            "sizeInBytes" : 5826104,
            "rowCount" : 44125,
            "isRuntime" : true,
            "predicate" : " (unknown) BroadcastQueryStage Output [2]: [i_item_sk#485, i_item_id#486] Arguments: 19 "
          },
          "9" : {
            "sign" : -1974113210,
            "className" : "org.apache.spark.sql.execution.adaptive.BroadcastQueryStageExec",
            "sizeInBytes" : 1048816,
            "rowCount" : 30,
            "isRuntime" : true,
            "predicate" : " (unknown) BroadcastQueryStage Output [1]: [d_date_sk#444] Arguments: 10 "
          },
          "5" : {
            "sign" : -1474784617,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 1667894520,
            "rowCount" : 69495605,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [3]: [ws_item_sk#129, ws_bill_addr_sk#133, ws_ext_sales_price#149] Input [5]: [ws_item_sk#129, ws_bill_addr_sk#133, ws_ext_sales_price#149, ws_sold_date_sk#160, d_date_sk#444] "
          },
          "10" : {
            "sign" : -635629642,
            "className" : "org.apache.spark.sql.execution.adaptive.BroadcastQueryStageExec",
            "sizeInBytes" : 24777216,
            "rowCount" : 441450,
            "isRuntime" : true,
            "predicate" : " (unknown) BroadcastQueryStage Output [1]: [ca_address_sk#472] Arguments: 12 "
          },
          "6" : {
            "sign" : 884086137,
            "className" : "org.apache.spark.sql.execution.joins.BroadcastHashJoinExec",
            "sizeInBytes" : 2223859360,
            "rowCount" : 69495605,
            "isRuntime" : false,
            "predicate" : " (unknown) BroadcastHashJoin Left keys [1]: [ws_sold_date_sk#160] Right keys [1]: [d_date_sk#444] Join type: Inner Join condition: None "
          },
          "1" : {
            "sign" : -1483643077,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 3164343820,
            "rowCount" : 71916905,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [2]: [ws_ext_sales_price#149, i_item_id#486] Input [4]: [ws_item_sk#129, ws_ext_sales_price#149, i_item_sk#485, i_item_id#486] "
          },
          "0" : {
            "sign" : 1314783524,
            "className" : "org.apache.spark.sql.execution.aggregate.HashAggregateExec",
            "sizeInBytes" : 4577848,
            "rowCount" : 104042,
            "isRuntime" : false,
            "predicate" : " (unknown) HashAggregate Input [2]: [ws_ext_sales_price#149, i_item_id#486] Keys [1]: [i_item_id#486] Functions [1]: [partial_sum(UnscaledValue(ws_ext_sales_price#149))] Aggregate Attributes [1]: [sum#596L] Results [2]: [i_item_id#486, sum#597L] "
          },
          "2" : {
            "sign" : 1951341248,
            "className" : "org.apache.spark.sql.execution.joins.BroadcastHashJoinExec",
            "sizeInBytes" : 3739679060,
            "rowCount" : 71916905,
            "isRuntime" : false,
            "predicate" : " (unknown) BroadcastHashJoin Left keys [1]: [ws_item_sk#129] Right keys [1]: [i_item_sk#485] Join type: Inner Join condition: None "
          },
          "7" : {
            "sign" : -1617441468,
            "className" : "org.apache.spark.sql.execution.FilterExec",
            "sizeInBytes" : 2015034084,
            "rowCount" : 71965503,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Input [4]: [ws_item_sk#129, ws_bill_addr_sk#133, ws_ext_sales_price#149, ws_sold_date_sk#160] Condition : (isnotnull(ws_bill_addr_sk#133) AND isnotnull(ws_item_sk#129)) "
          },
          "3" : {
            "sign" : -1531481582,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 1439663480,
            "rowCount" : 71983174,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [2]: [ws_item_sk#129, ws_ext_sales_price#149] Input [4]: [ws_item_sk#129, ws_bill_addr_sk#133, ws_ext_sales_price#149, ca_address_sk#472] "
          }
        },
        "links" : [ {
          "fromId" : 8,
          "fromName" : "Scan parquet spark_catalog.tpcds_100.web_sales",
          "toId" : 7,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Filter",
          "toId" : 6,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "BroadcastQueryStage",
          "toId" : 6,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "BroadcastHashJoin",
          "toId" : 5,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Project",
          "toId" : 4,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "BroadcastQueryStage",
          "toId" : 4,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "BroadcastHashJoin",
          "toId" : 3,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Project",
          "toId" : 2,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "BroadcastQueryStage",
          "toId" : 2,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "BroadcastHashJoin",
          "toId" : 1,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Project",
          "toId" : 0,
          "toName" : "HashAggregate",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "HashAggregate(keys=[i_item_id#486], functions=[partial_sum(UnscaledValue(ws_ext_sales_price#149))], output=[i_item_id#486, sum#597L])\n+- Project [ws_ext_sales_price#149, i_item_id#486]\n   +- BroadcastHashJoin [ws_item_sk#129], [i_item_sk#485], Inner, BuildRight, false\n      :- Project [ws_item_sk#129, ws_ext_sales_price#149]\n      :  +- BroadcastHashJoin [ws_bill_addr_sk#133], [ca_address_sk#472], Inner, BuildRight, false\n      :     :- Project [ws_item_sk#129, ws_bill_addr_sk#133, ws_ext_sales_price#149]\n      :     :  +- BroadcastHashJoin [ws_sold_date_sk#160], [d_date_sk#444], Inner, BuildRight, false\n      :     :     :- Filter (isnotnull(ws_bill_addr_sk#133) AND isnotnull(ws_item_sk#129))\n      :     :     :  +- FileScan parquet spark_catalog.tpcds_100.web_sales[ws_item_sk#129,ws_bill_addr_sk#133,ws_ext_sales_price#149,ws_sold_date_sk#160] Batched: true, DataFilters: [isnotnull(ws_bill_addr_sk#133), isnotnull(ws_item_sk#129)], Format: Parquet, Location: InMemoryFileIndex(1823 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/web_sa..., PartitionFilters: [isnotnull(ws_sold_date_sk#160), dynamicpruningexpression(ws_sold_date_sk#160 IN dynamicpruning#5..., PushedFilters: [IsNotNull(ws_bill_addr_sk), IsNotNull(ws_item_sk)], ReadSchema: struct<ws_item_sk:int,ws_bill_addr_sk:int,ws_ext_sales_price:decimal(7,2)>\n      :     :     :        +- ReusedSubquery SubqueryBroadcast dynamicpruning#585, 0, [d_date_sk#30], [id=#1981]\n      :     :     +- BroadcastQueryStage 10\n      :     :        +- ReusedExchange [d_date_sk#444], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=552]\n      :     +- BroadcastQueryStage 12\n      :        +- ReusedExchange [ca_address_sk#472], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=573]\n      +- BroadcastQueryStage 19\n         +- ReusedExchange [i_item_sk#485, i_item_id#486], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=1302]\n"
      },
      "IM" : {
        "inputSizeInBytes" : 2046686220,
        "inputRowCount" : 72451108
      },
      "InitialPartitionNum" : 0,
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 6,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 9 ],
      "Objectives" : {
        "DurationInMs" : 3400,
        "TotalTasksDurationInMs" : 1953,
        "IOBytes" : {
          "Total" : 15536458,
          "Details" : {
            "IR" : 13782989,
            "IW" : 0,
            "SR" : 0,
            "SW" : 1753469
          }
        }
      }
    },
    "1" : {
      "QSLogical" : {
        "operators" : {
          "0" : {
            "sign" : 808682787,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 5362296,
                "rowCount" : 446858
              },
              "compileTime" : {
                "sizeInBytes" : 5362296,
                "rowCount" : 446858
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ca_address_sk#58] "
          },
          "1" : {
            "sign" : -1312455616,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 109927068,
                "rowCount" : 446858
              },
              "compileTime" : {
                "sizeInBytes" : 109927068,
                "rowCount" : 446858
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(ca_gmt_offset#69) AND (ca_gmt_offset#69 = -6.00)) AND isnotnull(ca_address_sk#58)) "
          },
          "2" : {
            "sign" : 783351469,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 246000000,
                "rowCount" : 1000000
              },
              "compileTime" : {
                "sizeInBytes" : 246000000,
                "rowCount" : 1000000
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ca_address_sk#58, ca_address_id#59, ca_street_number#60, ca_street_name#61, ca_street_type#62, ca_suite_number#63, ca_city#64, ca_county#65, ca_state#66, ca_zip#67, ca_country#68, ca_gmt_offset#69, ca_location_type#70], `spark_catalog`.`tpcds_100`.`customer_address`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "LogicalRelation",
          "toId" : 1,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Filter",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [ca_address_sk#58]\n+- Filter ((isnotnull(ca_gmt_offset#69) AND (ca_gmt_offset#69 = -6.00)) AND isnotnull(ca_address_sk#58))\n   +- Relation spark_catalog.tpcds_100.customer_address[ca_address_sk#58,ca_address_id#59,ca_street_number#60,ca_street_name#61,ca_street_type#62,ca_suite_number#63,ca_city#64,ca_county#65,ca_state#66,ca_zip#67,ca_country#68,ca_gmt_offset#69,ca_location_type#70] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "0" : {
            "sign" : 1920688038,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 5362296,
            "rowCount" : 446858,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [1]: [ca_address_sk#58] Input [2]: [ca_address_sk#58, ca_gmt_offset#69] "
          },
          "1" : {
            "sign" : -817639575,
            "className" : "org.apache.spark.sql.execution.FilterExec",
            "sizeInBytes" : 5362296,
            "rowCount" : 446858,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Input [2]: [ca_address_sk#58, ca_gmt_offset#69] Condition : ((isnotnull(ca_gmt_offset#69) AND (ca_gmt_offset#69 = -6.00)) AND isnotnull(ca_address_sk#58)) "
          },
          "2" : {
            "sign" : 812335580,
            "className" : "org.apache.spark.sql.execution.FileSourceScanExec",
            "sizeInBytes" : 5362296,
            "rowCount" : 446858,
            "isRuntime" : false,
            "predicate" : " (unknown) Scan parquet spark_catalog.tpcds_100.customer_address Output [2]: [ca_address_sk#58, ca_gmt_offset#69] Batched: true Location: InMemoryFileIndex [hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/customer_address] PushedFilters: [IsNotNull(ca_gmt_offset), EqualTo(ca_gmt_offset,-6.00), IsNotNull(ca_address_sk)] ReadSchema: struct<ca_address_sk:int,ca_gmt_offset:decimal(5,2)> "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "Scan parquet spark_catalog.tpcds_100.customer_address",
          "toId" : 1,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Filter",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [ca_address_sk#58]\n+- Filter ((isnotnull(ca_gmt_offset#69) AND (ca_gmt_offset#69 = -6.00)) AND isnotnull(ca_address_sk#58))\n   +- FileScan parquet spark_catalog.tpcds_100.customer_address[ca_address_sk#58,ca_gmt_offset#69] Batched: true, DataFilters: [isnotnull(ca_gmt_offset#69), (ca_gmt_offset#69 = -6.00), isnotnull(ca_address_sk#58)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/customer_..., PartitionFilters: [], PushedFilters: [IsNotNull(ca_gmt_offset), EqualTo(ca_gmt_offset,-6.00), IsNotNull(ca_address_sk)], ReadSchema: struct<ca_address_sk:int,ca_gmt_offset:decimal(5,2)>\n"
      },
      "IM" : {
        "inputSizeInBytes" : 5362296,
        "inputRowCount" : 446858
      },
      "InitialPartitionNum" : 0,
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 1,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 5 ],
      "Objectives" : {
        "DurationInMs" : 3611,
        "TotalTasksDurationInMs" : 10140,
        "IOBytes" : {
          "Total" : 4468245,
          "Details" : {
            "IR" : 4468245,
            "IW" : 0,
            "SR" : 0,
            "SW" : 0
          }
        }
      }
    },
    "0" : {
      "QSLogical" : {
        "operators" : {
          "0" : {
            "sign" : -337637781,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 900,
                "rowCount" : 75
              },
              "compileTime" : {
                "sizeInBytes" : 900,
                "rowCount" : 75
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#30] "
          },
          "1" : {
            "sign" : 1189050492,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 18450,
                "rowCount" : 75
              },
              "compileTime" : {
                "sizeInBytes" : 18450,
                "rowCount" : 75
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(d_year#36) AND isnotnull(d_moy#38)) AND ((d_year#36 = 1999) AND (d_moy#38 = 9))) AND isnotnull(d_date_sk#30)) "
          },
          "2" : {
            "sign" : -607567904,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 17970054,
                "rowCount" : 73049
              },
              "compileTime" : {
                "sizeInBytes" : 17970054,
                "rowCount" : 73049
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#30, d_date_id#31, d_date#32, d_month_seq#33, d_week_seq#34, d_quarter_seq#35, d_year#36, d_dow#37, d_moy#38, d_dom#39, d_qoy#40, d_fy_year#41, d_fy_quarter_seq#42, d_fy_week_seq#43, d_day_name#44, d_quarter_name#45, d_holiday#46, d_weekend#47, d_following_holiday#48, d_first_dom#49, d_last_dom#50, d_same_day_ly#51, d_same_day_lq#52, d_current_day#53, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "LogicalRelation",
          "toId" : 1,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Filter",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [d_date_sk#30]\n+- Filter (((isnotnull(d_year#36) AND isnotnull(d_moy#38)) AND ((d_year#36 = 1999) AND (d_moy#38 = 9))) AND isnotnull(d_date_sk#30))\n   +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#30,d_date_id#31,d_date#32,d_month_seq#33,d_week_seq#34,d_quarter_seq#35,d_year#36,d_dow#37,d_moy#38,d_dom#39,d_qoy#40,d_fy_year#41,d_fy_quarter_seq#42,d_fy_week_seq#43,d_day_name#44,d_quarter_name#45,d_holiday#46,d_weekend#47,d_following_holiday#48,d_first_dom#49,d_last_dom#50,d_same_day_ly#51,d_same_day_lq#52,d_current_day#53,... 4 more fields] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "0" : {
            "sign" : -1545736141,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 900,
            "rowCount" : 75,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [1]: [d_date_sk#30] Input [3]: [d_date_sk#30, d_year#36, d_moy#38] "
          },
          "1" : {
            "sign" : 1816273788,
            "className" : "org.apache.spark.sql.execution.FilterExec",
            "sizeInBytes" : 900,
            "rowCount" : 75,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Input [3]: [d_date_sk#30, d_year#36, d_moy#38] Condition : ((((isnotnull(d_year#36) AND isnotnull(d_moy#38)) AND (d_year#36 = 1999)) AND (d_moy#38 = 9)) AND isnotnull(d_date_sk#30)) "
          },
          "2" : {
            "sign" : -617200828,
            "className" : "org.apache.spark.sql.execution.FileSourceScanExec",
            "sizeInBytes" : 900,
            "rowCount" : 75,
            "isRuntime" : false,
            "predicate" : " (unknown) Scan parquet spark_catalog.tpcds_100.date_dim Output [3]: [d_date_sk#30, d_year#36, d_moy#38] Batched: true Location: InMemoryFileIndex [hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim] PushedFilters: [IsNotNull(d_year), IsNotNull(d_moy), EqualTo(d_year,1999), EqualTo(d_moy,9), IsNotNull(d_date_sk)] ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int> "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "Scan parquet spark_catalog.tpcds_100.date_dim",
          "toId" : 1,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Filter",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [d_date_sk#30]\n+- Filter ((((isnotnull(d_year#36) AND isnotnull(d_moy#38)) AND (d_year#36 = 1999)) AND (d_moy#38 = 9)) AND isnotnull(d_date_sk#30))\n   +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#30,d_year#36,d_moy#38] Batched: true, DataFilters: [isnotnull(d_year#36), isnotnull(d_moy#38), (d_year#36 = 1999), (d_moy#38 = 9), isnotnull(d_date_..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), IsNotNull(d_moy), EqualTo(d_year,1999), EqualTo(d_moy,9), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>\n"
      },
      "IM" : {
        "inputSizeInBytes" : 900,
        "inputRowCount" : 75
      },
      "InitialPartitionNum" : 0,
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 0,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 3 ],
      "Objectives" : {
        "DurationInMs" : 1483,
        "TotalTasksDurationInMs" : 1470,
        "IOBytes" : {
          "Total" : 93950,
          "Details" : {
            "IR" : 93950,
            "IW" : 0,
            "SR" : 0,
            "SW" : 0
          }
        }
      }
    },
    "2" : {
      "QSLogical" : {
        "operators" : {
          "0" : {
            "sign" : -377386565,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 732672,
                "rowCount" : 20352
              },
              "compileTime" : {
                "sizeInBytes" : 732672,
                "rowCount" : 20352
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_item_id#508] "
          },
          "1" : {
            "sign" : -1396214959,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 8669952,
                "rowCount" : 20352
              },
              "compileTime" : {
                "sizeInBytes" : 8669952,
                "rowCount" : 20352
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(i_category#519) AND (i_category#519 = Children)) "
          },
          "2" : {
            "sign" : 707494135,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 86904000,
                "rowCount" : 204000
              },
              "compileTime" : {
                "sizeInBytes" : 86904000,
                "rowCount" : 204000
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [i_item_sk#507, i_item_id#508, i_rec_start_date#509, i_rec_end_date#510, i_item_desc#511, i_current_price#512, i_wholesale_cost#513, i_brand_id#514, i_brand#515, i_class_id#516, i_class#517, i_category_id#518, i_category#519, i_manufact_id#520, i_manufact#521, i_size#522, i_formulation#523, i_color#524, i_units#525, i_container#526, i_manager_id#527, i_product_name#528], `spark_catalog`.`tpcds_100`.`item`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "LogicalRelation",
          "toId" : 1,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Filter",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [i_item_id#508]\n+- Filter (isnotnull(i_category#519) AND (i_category#519 = Children))\n   +- Relation spark_catalog.tpcds_100.item[i_item_sk#507,i_item_id#508,i_rec_start_date#509,i_rec_end_date#510,i_item_desc#511,i_current_price#512,i_wholesale_cost#513,i_brand_id#514,i_brand#515,i_class_id#516,i_class#517,i_category_id#518,i_category#519,i_manufact_id#520,i_manufact#521,i_size#522,i_formulation#523,i_color#524,i_units#525,i_container#526,i_manager_id#527,i_product_name#528] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "0" : {
            "sign" : 304672905,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 732672,
            "rowCount" : 20352,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [1]: [i_item_id#508] Input [2]: [i_item_id#508, i_category#519] "
          },
          "1" : {
            "sign" : 1303704735,
            "className" : "org.apache.spark.sql.execution.FilterExec",
            "sizeInBytes" : 732672,
            "rowCount" : 20352,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Input [2]: [i_item_id#508, i_category#519] Condition : (isnotnull(i_category#519) AND (i_category#519 = Children)) "
          },
          "2" : {
            "sign" : 610408645,
            "className" : "org.apache.spark.sql.execution.FileSourceScanExec",
            "sizeInBytes" : 732672,
            "rowCount" : 20352,
            "isRuntime" : false,
            "predicate" : " (unknown) Scan parquet spark_catalog.tpcds_100.item Output [2]: [i_item_id#508, i_category#519] Batched: true Location: InMemoryFileIndex [hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/item] PushedFilters: [IsNotNull(i_category), EqualTo(i_category,Children)] ReadSchema: struct<i_item_id:string,i_category:string> "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "Scan parquet spark_catalog.tpcds_100.item",
          "toId" : 1,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Filter",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [i_item_id#508]\n+- Filter (isnotnull(i_category#519) AND (i_category#519 = Children))\n   +- FileScan parquet spark_catalog.tpcds_100.item[i_item_id#508,i_category#519] Batched: true, DataFilters: [isnotnull(i_category#519), (i_category#519 = Children)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/item], PartitionFilters: [], PushedFilters: [IsNotNull(i_category), EqualTo(i_category,Children)], ReadSchema: struct<i_item_id:string,i_category:string>\n"
      },
      "IM" : {
        "inputSizeInBytes" : 732672,
        "inputRowCount" : 20352
      },
      "InitialPartitionNum" : 0,
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 2,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 4 ],
      "Objectives" : {
        "DurationInMs" : 1671,
        "TotalTasksDurationInMs" : 6888,
        "IOBytes" : {
          "Total" : 907243,
          "Details" : {
            "IR" : 907243,
            "IW" : 0,
            "SR" : 0,
            "SW" : 0
          }
        }
      }
    },
    "7" : {
      "QSLogical" : {
        "operators" : {
          "0" : {
            "sign" : 769854055,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 16785442,
                "rowCount" : -1
              },
              "compileTime" : {
                "sizeInBytes" : 16785442,
                "rowCount" : -1
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [i_item_id#72], [i_item_id#72, sum(total_sales#375) AS total_sales#374] "
          },
          "1" : {
            "sign" : -1683470887,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Union",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 13733544,
                "rowCount" : 312126
              },
              "compileTime" : {
                "sizeInBytes" : 13733544,
                "rowCount" : 312126
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Union Arguments: false, false "
          }
        },
        "links" : [ {
          "fromId" : 1,
          "fromName" : "Union",
          "toId" : 0,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Aggregate [i_item_id#72], [i_item_id#72, sum(total_sales#375) AS total_sales#374]\n+- Union false, false\n   :- Aggregate [i_item_id#72], [i_item_id#72, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#21)),17,2) AS total_sales#375]\n   :  +- Project [ss_ext_sales_price#21, i_item_id#72]\n   :     +- Join Inner, (ss_item_sk#8 = i_item_sk#71)\n   :        :- Project [ss_item_sk#8, ss_ext_sales_price#21]\n   :        :  +- Join Inner, (ss_addr_sk#12 = ca_address_sk#58)\n   :        :     :- Project [ss_item_sk#8, ss_addr_sk#12, ss_ext_sales_price#21]\n   :        :     :  +- Join Inner, (ss_sold_date_sk#29 = d_date_sk#30)\n   :        :     :     :- Project [ss_item_sk#8, ss_addr_sk#12, ss_ext_sales_price#21, ss_sold_date_sk#29]\n   :        :     :     :  +- Filter (((isnotnull(ss_sold_date_sk#29) AND isnotnull(ss_addr_sk#12)) AND isnotnull(ss_item_sk#8)) AND dynamicpruning#585 [ss_sold_date_sk#29])\n   :        :     :     :     :  +- Project [d_date_sk#30]\n   :        :     :     :     :     +- Filter (((isnotnull(d_year#36) AND isnotnull(d_moy#38)) AND ((d_year#36 = 1999) AND (d_moy#38 = 9))) AND isnotnull(d_date_sk#30))\n   :        :     :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#30,d_date_id#31,d_date#32,d_month_seq#33,d_week_seq#34,d_quarter_seq#35,d_year#36,d_dow#37,d_moy#38,d_dom#39,d_qoy#40,d_fy_year#41,d_fy_quarter_seq#42,d_fy_week_seq#43,d_day_name#44,d_quarter_name#45,d_holiday#46,d_weekend#47,d_following_holiday#48,d_first_dom#49,d_last_dom#50,d_same_day_ly#51,d_same_day_lq#52,d_current_day#53,... 4 more fields] parquet\n   :        :     :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#7,ss_item_sk#8,ss_customer_sk#9,ss_cdemo_sk#10,ss_hdemo_sk#11,ss_addr_sk#12,ss_store_sk#13,ss_promo_sk#14,ss_ticket_number#15L,ss_quantity#16,ss_wholesale_cost#17,ss_list_price#18,ss_sales_price#19,ss_ext_discount_amt#20,ss_ext_sales_price#21,ss_ext_wholesale_cost#22,ss_ext_list_price#23,ss_ext_tax#24,ss_coupon_amt#25,ss_net_paid#26,ss_net_paid_inc_tax#27,ss_net_profit#28,ss_sold_date_sk#29] parquet\n   :        :     :     +- Project [d_date_sk#30]\n   :        :     :        +- Filter (((isnotnull(d_year#36) AND isnotnull(d_moy#38)) AND ((d_year#36 = 1999) AND (d_moy#38 = 9))) AND isnotnull(d_date_sk#30))\n   :        :     :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#30,d_date_id#31,d_date#32,d_month_seq#33,d_week_seq#34,d_quarter_seq#35,d_year#36,d_dow#37,d_moy#38,d_dom#39,d_qoy#40,d_fy_year#41,d_fy_quarter_seq#42,d_fy_week_seq#43,d_day_name#44,d_quarter_name#45,d_holiday#46,d_weekend#47,d_following_holiday#48,d_first_dom#49,d_last_dom#50,d_same_day_ly#51,d_same_day_lq#52,d_current_day#53,... 4 more fields] parquet\n   :        :     +- Project [ca_address_sk#58]\n   :        :        +- Filter ((isnotnull(ca_gmt_offset#69) AND (ca_gmt_offset#69 = -6.00)) AND isnotnull(ca_address_sk#58))\n   :        :           +- Relation spark_catalog.tpcds_100.customer_address[ca_address_sk#58,ca_address_id#59,ca_street_number#60,ca_street_name#61,ca_street_type#62,ca_suite_number#63,ca_city#64,ca_county#65,ca_state#66,ca_zip#67,ca_country#68,ca_gmt_offset#69,ca_location_type#70] parquet\n   :        +- Join LeftSemi, (i_item_id#72 = i_item_id#508)\n   :           :- Project [i_item_sk#71, i_item_id#72]\n   :           :  +- Filter isnotnull(i_item_sk#71)\n   :           :     +- Relation spark_catalog.tpcds_100.item[i_item_sk#71,i_item_id#72,i_rec_start_date#73,i_rec_end_date#74,i_item_desc#75,i_current_price#76,i_wholesale_cost#77,i_brand_id#78,i_brand#79,i_class_id#80,i_class#81,i_category_id#82,i_category#83,i_manufact_id#84,i_manufact#85,i_size#86,i_formulation#87,i_color#88,i_units#89,i_container#90,i_manager_id#91,i_product_name#92] parquet\n   :           +- Project [i_item_id#508]\n   :              +- Filter (isnotnull(i_category#519) AND (i_category#519 = Children))\n   :                 +- Relation spark_catalog.tpcds_100.item[i_item_sk#507,i_item_id#508,i_rec_start_date#509,i_rec_end_date#510,i_item_desc#511,i_current_price#512,i_wholesale_cost#513,i_brand_id#514,i_brand#515,i_class_id#516,i_class#517,i_category_id#518,i_category#519,i_manufact_id#520,i_manufact#521,i_size#522,i_formulation#523,i_color#524,i_units#525,i_container#526,i_manager_id#527,i_product_name#528] parquet\n   :- Aggregate [i_item_id#423], [i_item_id#423, MakeDecimal(sum(UnscaledValue(cs_ext_sales_price#115)),17,2) AS total_sales#377]\n   :  +- Project [cs_ext_sales_price#115, i_item_id#423]\n   :     +- Join Inner, (cs_item_sk#107 = i_item_sk#422)\n   :        :- Project [cs_item_sk#107, cs_ext_sales_price#115]\n   :        :  +- Join Inner, (cs_bill_addr_sk#98 = ca_address_sk#409)\n   :        :     :- Project [cs_bill_addr_sk#98, cs_item_sk#107, cs_ext_sales_price#115]\n   :        :     :  +- Join Inner, (cs_sold_date_sk#126 = d_date_sk#381)\n   :        :     :     :- Project [cs_bill_addr_sk#98, cs_item_sk#107, cs_ext_sales_price#115, cs_sold_date_sk#126]\n   :        :     :     :  +- Filter (((isnotnull(cs_sold_date_sk#126) AND isnotnull(cs_bill_addr_sk#98)) AND isnotnull(cs_item_sk#107)) AND dynamicpruning#586 [cs_sold_date_sk#126])\n   :        :     :     :     :  +- Project [d_date_sk#381]\n   :        :     :     :     :     +- Filter (((isnotnull(d_year#387) AND isnotnull(d_moy#389)) AND ((d_year#387 = 1999) AND (d_moy#389 = 9))) AND isnotnull(d_date_sk#381))\n   :        :     :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#381,d_date_id#382,d_date#383,d_month_seq#384,d_week_seq#385,d_quarter_seq#386,d_year#387,d_dow#388,d_moy#389,d_dom#390,d_qoy#391,d_fy_year#392,d_fy_quarter_seq#393,d_fy_week_seq#394,d_day_name#395,d_quarter_name#396,d_holiday#397,d_weekend#398,d_following_holiday#399,d_first_dom#400,d_last_dom#401,d_same_day_ly#402,d_same_day_lq#403,d_current_day#404,... 4 more fields] parquet\n   :        :     :     :     +- Relation spark_catalog.tpcds_100.catalog_sales[cs_sold_time_sk#93,cs_ship_date_sk#94,cs_bill_customer_sk#95,cs_bill_cdemo_sk#96,cs_bill_hdemo_sk#97,cs_bill_addr_sk#98,cs_ship_customer_sk#99,cs_ship_cdemo_sk#100,cs_ship_hdemo_sk#101,cs_ship_addr_sk#102,cs_call_center_sk#103,cs_catalog_page_sk#104,cs_ship_mode_sk#105,cs_warehouse_sk#106,cs_item_sk#107,cs_promo_sk#108,cs_order_number#109L,cs_quantity#110,cs_wholesale_cost#111,cs_list_price#112,cs_sales_price#113,cs_ext_discount_amt#114,cs_ext_sales_price#115,cs_ext_wholesale_cost#116,... 10 more fields] parquet\n   :        :     :     +- Project [d_date_sk#381]\n   :        :     :        +- Filter (((isnotnull(d_year#387) AND isnotnull(d_moy#389)) AND ((d_year#387 = 1999) AND (d_moy#389 = 9))) AND isnotnull(d_date_sk#381))\n   :        :     :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#381,d_date_id#382,d_date#383,d_month_seq#384,d_week_seq#385,d_quarter_seq#386,d_year#387,d_dow#388,d_moy#389,d_dom#390,d_qoy#391,d_fy_year#392,d_fy_quarter_seq#393,d_fy_week_seq#394,d_day_name#395,d_quarter_name#396,d_holiday#397,d_weekend#398,d_following_holiday#399,d_first_dom#400,d_last_dom#401,d_same_day_ly#402,d_same_day_lq#403,d_current_day#404,... 4 more fields] parquet\n   :        :     +- Project [ca_address_sk#409]\n   :        :        +- Filter ((isnotnull(ca_gmt_offset#420) AND (ca_gmt_offset#420 = -6.00)) AND isnotnull(ca_address_sk#409))\n   :        :           +- Relation spark_catalog.tpcds_100.customer_address[ca_address_sk#409,ca_address_id#410,ca_street_number#411,ca_street_name#412,ca_street_type#413,ca_suite_number#414,ca_city#415,ca_county#416,ca_state#417,ca_zip#418,ca_country#419,ca_gmt_offset#420,ca_location_type#421] parquet\n   :        +- Join LeftSemi, (i_item_id#423 = i_item_id#530)\n   :           :- Project [i_item_sk#422, i_item_id#423]\n   :           :  +- Filter isnotnull(i_item_sk#422)\n   :           :     +- Relation spark_catalog.tpcds_100.item[i_item_sk#422,i_item_id#423,i_rec_start_date#424,i_rec_end_date#425,i_item_desc#426,i_current_price#427,i_wholesale_cost#428,i_brand_id#429,i_brand#430,i_class_id#431,i_class#432,i_category_id#433,i_category#434,i_manufact_id#435,i_manufact#436,i_size#437,i_formulation#438,i_color#439,i_units#440,i_container#441,i_manager_id#442,i_product_name#443] parquet\n   :           +- Project [i_item_id#530]\n   :              +- Filter (isnotnull(i_category#541) AND (i_category#541 = Children))\n   :                 +- Relation spark_catalog.tpcds_100.item[i_item_sk#529,i_item_id#530,i_rec_start_date#531,i_rec_end_date#532,i_item_desc#533,i_current_price#534,i_wholesale_cost#535,i_brand_id#536,i_brand#537,i_class_id#538,i_class#539,i_category_id#540,i_category#541,i_manufact_id#542,i_manufact#543,i_size#544,i_formulation#545,i_color#546,i_units#547,i_container#548,i_manager_id#549,i_product_name#550] parquet\n   +- Aggregate [i_item_id#486], [i_item_id#486, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#149)),17,2) AS total_sales#379]\n      +- Project [ws_ext_sales_price#149, i_item_id#486]\n         +- Join Inner, (ws_item_sk#129 = i_item_sk#485)\n            :- Project [ws_item_sk#129, ws_ext_sales_price#149]\n            :  +- Join Inner, (ws_bill_addr_sk#133 = ca_address_sk#472)\n            :     :- Project [ws_item_sk#129, ws_bill_addr_sk#133, ws_ext_sales_price#149]\n            :     :  +- Join Inner, (ws_sold_date_sk#160 = d_date_sk#444)\n            :     :     :- Project [ws_item_sk#129, ws_bill_addr_sk#133, ws_ext_sales_price#149, ws_sold_date_sk#160]\n            :     :     :  +- Filter (((isnotnull(ws_sold_date_sk#160) AND isnotnull(ws_bill_addr_sk#133)) AND isnotnull(ws_item_sk#129)) AND dynamicpruning#587 [ws_sold_date_sk#160])\n            :     :     :     :  +- Project [d_date_sk#444]\n            :     :     :     :     +- Filter (((isnotnull(d_year#450) AND isnotnull(d_moy#452)) AND ((d_year#450 = 1999) AND (d_moy#452 = 9))) AND isnotnull(d_date_sk#444))\n            :     :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#444,d_date_id#445,d_date#446,d_month_seq#447,d_week_seq#448,d_quarter_seq#449,d_year#450,d_dow#451,d_moy#452,d_dom#453,d_qoy#454,d_fy_year#455,d_fy_quarter_seq#456,d_fy_week_seq#457,d_day_name#458,d_quarter_name#459,d_holiday#460,d_weekend#461,d_following_holiday#462,d_first_dom#463,d_last_dom#464,d_same_day_ly#465,d_same_day_lq#466,d_current_day#467,... 4 more fields] parquet\n            :     :     :     +- Relation spark_catalog.tpcds_100.web_sales[ws_sold_time_sk#127,ws_ship_date_sk#128,ws_item_sk#129,ws_bill_customer_sk#130,ws_bill_cdemo_sk#131,ws_bill_hdemo_sk#132,ws_bill_addr_sk#133,ws_ship_customer_sk#134,ws_ship_cdemo_sk#135,ws_ship_hdemo_sk#136,ws_ship_addr_sk#137,ws_web_page_sk#138,ws_web_site_sk#139,ws_ship_mode_sk#140,ws_warehouse_sk#141,ws_promo_sk#142,ws_order_number#143L,ws_quantity#144,ws_wholesale_cost#145,ws_list_price#146,ws_sales_price#147,ws_ext_discount_amt#148,ws_ext_sales_price#149,ws_ext_wholesale_cost#150,... 10 more fields] parquet\n            :     :     +- Project [d_date_sk#444]\n            :     :        +- Filter (((isnotnull(d_year#450) AND isnotnull(d_moy#452)) AND ((d_year#450 = 1999) AND (d_moy#452 = 9))) AND isnotnull(d_date_sk#444))\n            :     :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#444,d_date_id#445,d_date#446,d_month_seq#447,d_week_seq#448,d_quarter_seq#449,d_year#450,d_dow#451,d_moy#452,d_dom#453,d_qoy#454,d_fy_year#455,d_fy_quarter_seq#456,d_fy_week_seq#457,d_day_name#458,d_quarter_name#459,d_holiday#460,d_weekend#461,d_following_holiday#462,d_first_dom#463,d_last_dom#464,d_same_day_ly#465,d_same_day_lq#466,d_current_day#467,... 4 more fields] parquet\n            :     +- Project [ca_address_sk#472]\n            :        +- Filter ((isnotnull(ca_gmt_offset#483) AND (ca_gmt_offset#483 = -6.00)) AND isnotnull(ca_address_sk#472))\n            :           +- Relation spark_catalog.tpcds_100.customer_address[ca_address_sk#472,ca_address_id#473,ca_street_number#474,ca_street_name#475,ca_street_type#476,ca_suite_number#477,ca_city#478,ca_county#479,ca_state#480,ca_zip#481,ca_country#482,ca_gmt_offset#483,ca_location_type#484] parquet\n            +- Join LeftSemi, (i_item_id#486 = i_item_id#552)\n               :- Project [i_item_sk#485, i_item_id#486]\n               :  +- Filter isnotnull(i_item_sk#485)\n               :     +- Relation spark_catalog.tpcds_100.item[i_item_sk#485,i_item_id#486,i_rec_start_date#487,i_rec_end_date#488,i_item_desc#489,i_current_price#490,i_wholesale_cost#491,i_brand_id#492,i_brand#493,i_class_id#494,i_class#495,i_category_id#496,i_category#497,i_manufact_id#498,i_manufact#499,i_size#500,i_formulation#501,i_color#502,i_units#503,i_container#504,i_manager_id#505,i_product_name#506] parquet\n               +- Project [i_item_id#552]\n                  +- Filter (isnotnull(i_category#563) AND (i_category#563 = Children))\n                     +- Relation spark_catalog.tpcds_100.item[i_item_sk#551,i_item_id#552,i_rec_start_date#553,i_rec_end_date#554,i_item_desc#555,i_current_price#556,i_wholesale_cost#557,i_brand_id#558,i_brand#559,i_class_id#560,i_class#561,i_category_id#562,i_category#563,i_manufact_id#564,i_manufact#565,i_size#566,i_formulation#567,i_color#568,i_units#569,i_container#570,i_manager_id#571,i_product_name#572] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "4" : {
            "sign" : -2139212495,
            "className" : "org.apache.spark.sql.execution.aggregate.HashAggregateExec",
            "sizeInBytes" : 6772040,
            "rowCount" : 169301,
            "isRuntime" : true,
            "predicate" : " (unknown) HashAggregate Input [2]: [i_item_id#423, sum#595L] Keys [1]: [i_item_id#423] Functions [1]: [sum(UnscaledValue(cs_ext_sales_price#115))] Aggregate Attributes [1]: [sum(UnscaledValue(cs_ext_sales_price#115))#580L] Results [2]: [i_item_id#423, MakeDecimal(sum(UnscaledValue(cs_ext_sales_price#115))#580L,17,2) AS total_sales#377] "
          },
          "5" : {
            "sign" : 842196513,
            "className" : "org.apache.spark.sql.execution.adaptive.ShuffleQueryStageExec",
            "sizeInBytes" : 4577848,
            "rowCount" : 104042,
            "isRuntime" : false,
            "predicate" : " (unknown) ShuffleQueryStage Output [2]: [i_item_id#423, sum#595L] Arguments: 21 "
          },
          "6" : {
            "sign" : 1816692284,
            "className" : "org.apache.spark.sql.execution.aggregate.HashAggregateExec",
            "sizeInBytes" : 4164640,
            "rowCount" : 104116,
            "isRuntime" : true,
            "predicate" : " (unknown) HashAggregate Input [2]: [i_item_id#486, sum#597L] Keys [1]: [i_item_id#486] Functions [1]: [sum(UnscaledValue(ws_ext_sales_price#149))] Aggregate Attributes [1]: [sum(UnscaledValue(ws_ext_sales_price#149))#581L] Results [2]: [i_item_id#486, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#149))#581L,17,2) AS total_sales#379] "
          },
          "1" : {
            "sign" : 1024404932,
            "className" : "org.apache.spark.sql.execution.UnionExec",
            "sizeInBytes" : 13733544,
            "rowCount" : 312126,
            "isRuntime" : false,
            "predicate" : " (unknown) Union "
          },
          "0" : {
            "sign" : 1330504151,
            "className" : "org.apache.spark.sql.execution.aggregate.HashAggregateExec",
            "sizeInBytes" : 16785442,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) HashAggregate Input [2]: [i_item_id#72, total_sales#375] Keys [1]: [i_item_id#72] Functions [1]: [partial_sum(total_sales#375)] Aggregate Attributes [2]: [sum#588, isEmpty#589] Results [3]: [i_item_id#72, sum#590, isEmpty#591] "
          },
          "2" : {
            "sign" : 1521276948,
            "className" : "org.apache.spark.sql.execution.aggregate.HashAggregateExec",
            "sizeInBytes" : 9333800,
            "rowCount" : 233345,
            "isRuntime" : true,
            "predicate" : " (unknown) HashAggregate Input [2]: [i_item_id#72, sum#593L] Keys [1]: [i_item_id#72] Functions [1]: [sum(UnscaledValue(ss_ext_sales_price#21))] Aggregate Attributes [1]: [sum(UnscaledValue(ss_ext_sales_price#21))#579L] Results [2]: [i_item_id#72, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#21))#579L,17,2) AS total_sales#375] "
          },
          "7" : {
            "sign" : 1889117471,
            "className" : "org.apache.spark.sql.execution.adaptive.ShuffleQueryStageExec",
            "sizeInBytes" : 4577848,
            "rowCount" : 104042,
            "isRuntime" : false,
            "predicate" : " (unknown) ShuffleQueryStage Output [2]: [i_item_id#486, sum#597L] Arguments: 22 "
          },
          "3" : {
            "sign" : 2088360918,
            "className" : "org.apache.spark.sql.execution.adaptive.ShuffleQueryStageExec",
            "sizeInBytes" : 4577848,
            "rowCount" : 104042,
            "isRuntime" : false,
            "predicate" : " (unknown) ShuffleQueryStage Output [2]: [i_item_id#72, sum#593L] Arguments: 20 "
          }
        },
        "links" : [ {
          "fromId" : 3,
          "fromName" : "ShuffleQueryStage",
          "toId" : 2,
          "toName" : "HashAggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "HashAggregate",
          "toId" : 1,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "ShuffleQueryStage",
          "toId" : 4,
          "toName" : "HashAggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "HashAggregate",
          "toId" : 1,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "ShuffleQueryStage",
          "toId" : 6,
          "toName" : "HashAggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "HashAggregate",
          "toId" : 1,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Union",
          "toId" : 0,
          "toName" : "HashAggregate",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "HashAggregate(keys=[i_item_id#72], functions=[partial_sum(total_sales#375)], output=[i_item_id#72, sum#590, isEmpty#591])\n+- Union\n   :- HashAggregate(keys=[i_item_id#72], functions=[sum(UnscaledValue(ss_ext_sales_price#21))], output=[i_item_id#72, total_sales#375])\n   :  +- ShuffleQueryStage 20\n   :     +- Exchange hashpartitioning(i_item_id#72, 200), ENSURE_REQUIREMENTS, [plan_id=2034]\n   :        +- *(13) HashAggregate(keys=[i_item_id#72], functions=[partial_sum(UnscaledValue(ss_ext_sales_price#21))], output=[i_item_id#72, sum#593L])\n   :           +- *(13) Project [ss_ext_sales_price#21, i_item_id#72]\n   :              +- *(13) BroadcastHashJoin [ss_item_sk#8], [i_item_sk#71], Inner, BuildRight, false\n   :                 :- *(13) Project [ss_item_sk#8, ss_ext_sales_price#21]\n   :                 :  +- *(13) BroadcastHashJoin [ss_addr_sk#12], [ca_address_sk#58], Inner, BuildRight, false\n   :                 :     :- *(13) Project [ss_item_sk#8, ss_addr_sk#12, ss_ext_sales_price#21]\n   :                 :     :  +- *(13) BroadcastHashJoin [ss_sold_date_sk#29], [d_date_sk#30], Inner, BuildRight, false\n   :                 :     :     :- *(13) Filter (isnotnull(ss_addr_sk#12) AND isnotnull(ss_item_sk#8))\n   :                 :     :     :  +- *(13) ColumnarToRow\n   :                 :     :     :     +- FileScan parquet spark_catalog.tpcds_100.store_sales[ss_item_sk#8,ss_addr_sk#12,ss_ext_sales_price#21,ss_sold_date_sk#29] Batched: true, DataFilters: [isnotnull(ss_addr_sk#12), isnotnull(ss_item_sk#8)], Format: Parquet, Location: InMemoryFileIndex(1823 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/store_..., PartitionFilters: [isnotnull(ss_sold_date_sk#29), dynamicpruningexpression(ss_sold_date_sk#29 IN dynamicpruning#585)], PushedFilters: [IsNotNull(ss_addr_sk), IsNotNull(ss_item_sk)], ReadSchema: struct<ss_item_sk:int,ss_addr_sk:int,ss_ext_sales_price:decimal(7,2)>\n   :                 :     :     :           +- SubqueryBroadcast dynamicpruning#585, 0, [d_date_sk#30], [id=#1981]\n   :                 :     :     :              +- AdaptiveSparkPlan isFinalPlan=true\n                                                   +- == Final Plan ==\n                                                      BroadcastQueryStage 1\n                                                      +- ReusedExchange [d_date_sk#30], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=552]\n                                                   +- == Initial Plan ==\n                                                      BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=1978]\n                                                      +- Project [d_date_sk#30]\n                                                         +- Filter ((((isnotnull(d_year#36) AND isnotnull(d_moy#38)) AND (d_year#36 = 1999)) AND (d_moy#38 = 9)) AND isnotnull(d_date_sk#30))\n                                                            +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#30,d_year#36,d_moy#38] Batched: true, DataFilters: [isnotnull(d_year#36), isnotnull(d_moy#38), (d_year#36 = 1999), (d_moy#38 = 9), isnotnull(d_date_..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), IsNotNull(d_moy), EqualTo(d_year,1999), EqualTo(d_moy,9), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>\n   :                 :     :     +- BroadcastQueryStage 0\n   :                 :     :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=552]\n   :                 :     :           +- *(1) Project [d_date_sk#30]\n   :                 :     :              +- *(1) Filter ((((isnotnull(d_year#36) AND isnotnull(d_moy#38)) AND (d_year#36 = 1999)) AND (d_moy#38 = 9)) AND isnotnull(d_date_sk#30))\n   :                 :     :                 +- *(1) ColumnarToRow\n   :                 :     :                    +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#30,d_year#36,d_moy#38] Batched: true, DataFilters: [isnotnull(d_year#36), isnotnull(d_moy#38), (d_year#36 = 1999), (d_moy#38 = 9), isnotnull(d_date_..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), IsNotNull(d_moy), EqualTo(d_year,1999), EqualTo(d_moy,9), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>\n   :                 :     +- BroadcastQueryStage 1\n   :                 :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=573]\n   :                 :           +- *(2) Project [ca_address_sk#58]\n   :                 :              +- *(2) Filter ((isnotnull(ca_gmt_offset#69) AND (ca_gmt_offset#69 = -6.00)) AND isnotnull(ca_address_sk#58))\n   :                 :                 +- *(2) ColumnarToRow\n   :                 :                    +- FileScan parquet spark_catalog.tpcds_100.customer_address[ca_address_sk#58,ca_gmt_offset#69] Batched: true, DataFilters: [isnotnull(ca_gmt_offset#69), (ca_gmt_offset#69 = -6.00), isnotnull(ca_address_sk#58)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/customer_..., PartitionFilters: [], PushedFilters: [IsNotNull(ca_gmt_offset), EqualTo(ca_gmt_offset,-6.00), IsNotNull(ca_address_sk)], ReadSchema: struct<ca_address_sk:int,ca_gmt_offset:decimal(5,2)>\n   :                 +- BroadcastQueryStage 15\n   :                    +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=1302]\n   :                       +- *(10) BroadcastHashJoin [i_item_id#72], [i_item_id#508], LeftSemi, BuildRight, false\n   :                          :- *(10) Filter isnotnull(i_item_sk#71)\n   :                          :  +- *(10) ColumnarToRow\n   :                          :     +- FileScan parquet spark_catalog.tpcds_100.item[i_item_sk#71,i_item_id#72] Batched: true, DataFilters: [isnotnull(i_item_sk#71)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/item], PartitionFilters: [], PushedFilters: [IsNotNull(i_item_sk)], ReadSchema: struct<i_item_sk:int,i_item_id:string>\n   :                          +- BroadcastQueryStage 2\n   :                             +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, string, true]),false), [plan_id=594]\n   :                                +- *(3) Project [i_item_id#508]\n   :                                   +- *(3) Filter (isnotnull(i_category#519) AND (i_category#519 = Children))\n   :                                      +- *(3) ColumnarToRow\n   :                                         +- FileScan parquet spark_catalog.tpcds_100.item[i_item_id#508,i_category#519] Batched: true, DataFilters: [isnotnull(i_category#519), (i_category#519 = Children)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/item], PartitionFilters: [], PushedFilters: [IsNotNull(i_category), EqualTo(i_category,Children)], ReadSchema: struct<i_item_id:string,i_category:string>\n   :- HashAggregate(keys=[i_item_id#423], functions=[sum(UnscaledValue(cs_ext_sales_price#115))], output=[i_item_id#423, total_sales#377])\n   :  +- ShuffleQueryStage 21\n   :     +- Exchange hashpartitioning(i_item_id#423, 200), ENSURE_REQUIREMENTS, [plan_id=2127]\n   :        +- *(14) HashAggregate(keys=[i_item_id#423], functions=[partial_sum(UnscaledValue(cs_ext_sales_price#115))], output=[i_item_id#423, sum#595L])\n   :           +- *(14) Project [cs_ext_sales_price#115, i_item_id#423]\n   :              +- *(14) BroadcastHashJoin [cs_item_sk#107], [i_item_sk#422], Inner, BuildRight, false\n   :                 :- *(14) Project [cs_item_sk#107, cs_ext_sales_price#115]\n   :                 :  +- *(14) BroadcastHashJoin [cs_bill_addr_sk#98], [ca_address_sk#409], Inner, BuildRight, false\n   :                 :     :- *(14) Project [cs_bill_addr_sk#98, cs_item_sk#107, cs_ext_sales_price#115]\n   :                 :     :  +- *(14) BroadcastHashJoin [cs_sold_date_sk#126], [d_date_sk#381], Inner, BuildRight, false\n   :                 :     :     :- *(14) Filter (isnotnull(cs_bill_addr_sk#98) AND isnotnull(cs_item_sk#107))\n   :                 :     :     :  +- *(14) ColumnarToRow\n   :                 :     :     :     +- FileScan parquet spark_catalog.tpcds_100.catalog_sales[cs_bill_addr_sk#98,cs_item_sk#107,cs_ext_sales_price#115,cs_sold_date_sk#126] Batched: true, DataFilters: [isnotnull(cs_bill_addr_sk#98), isnotnull(cs_item_sk#107)], Format: Parquet, Location: InMemoryFileIndex(1836 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/catalo..., PartitionFilters: [isnotnull(cs_sold_date_sk#126), dynamicpruningexpression(cs_sold_date_sk#126 IN dynamicpruning#5..., PushedFilters: [IsNotNull(cs_bill_addr_sk), IsNotNull(cs_item_sk)], ReadSchema: struct<cs_bill_addr_sk:int,cs_item_sk:int,cs_ext_sales_price:decimal(7,2)>\n   :                 :     :     :           +- ReusedSubquery SubqueryBroadcast dynamicpruning#585, 0, [d_date_sk#30], [id=#1981]\n   :                 :     :     +- BroadcastQueryStage 4\n   :                 :     :        +- ReusedExchange [d_date_sk#381], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=552]\n   :                 :     +- BroadcastQueryStage 6\n   :                 :        +- ReusedExchange [ca_address_sk#409], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=573]\n   :                 +- BroadcastQueryStage 17\n   :                    +- ReusedExchange [i_item_sk#422, i_item_id#423], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=1302]\n   +- HashAggregate(keys=[i_item_id#486], functions=[sum(UnscaledValue(ws_ext_sales_price#149))], output=[i_item_id#486, total_sales#379])\n      +- ShuffleQueryStage 22\n         +- Exchange hashpartitioning(i_item_id#486, 200), ENSURE_REQUIREMENTS, [plan_id=2220]\n            +- *(15) HashAggregate(keys=[i_item_id#486], functions=[partial_sum(UnscaledValue(ws_ext_sales_price#149))], output=[i_item_id#486, sum#597L])\n               +- *(15) Project [ws_ext_sales_price#149, i_item_id#486]\n                  +- *(15) BroadcastHashJoin [ws_item_sk#129], [i_item_sk#485], Inner, BuildRight, false\n                     :- *(15) Project [ws_item_sk#129, ws_ext_sales_price#149]\n                     :  +- *(15) BroadcastHashJoin [ws_bill_addr_sk#133], [ca_address_sk#472], Inner, BuildRight, false\n                     :     :- *(15) Project [ws_item_sk#129, ws_bill_addr_sk#133, ws_ext_sales_price#149]\n                     :     :  +- *(15) BroadcastHashJoin [ws_sold_date_sk#160], [d_date_sk#444], Inner, BuildRight, false\n                     :     :     :- *(15) Filter (isnotnull(ws_bill_addr_sk#133) AND isnotnull(ws_item_sk#129))\n                     :     :     :  +- *(15) ColumnarToRow\n                     :     :     :     +- FileScan parquet spark_catalog.tpcds_100.web_sales[ws_item_sk#129,ws_bill_addr_sk#133,ws_ext_sales_price#149,ws_sold_date_sk#160] Batched: true, DataFilters: [isnotnull(ws_bill_addr_sk#133), isnotnull(ws_item_sk#129)], Format: Parquet, Location: InMemoryFileIndex(1823 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/web_sa..., PartitionFilters: [isnotnull(ws_sold_date_sk#160), dynamicpruningexpression(ws_sold_date_sk#160 IN dynamicpruning#5..., PushedFilters: [IsNotNull(ws_bill_addr_sk), IsNotNull(ws_item_sk)], ReadSchema: struct<ws_item_sk:int,ws_bill_addr_sk:int,ws_ext_sales_price:decimal(7,2)>\n                     :     :     :           +- ReusedSubquery SubqueryBroadcast dynamicpruning#585, 0, [d_date_sk#30], [id=#1981]\n                     :     :     +- BroadcastQueryStage 10\n                     :     :        +- ReusedExchange [d_date_sk#444], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=552]\n                     :     +- BroadcastQueryStage 12\n                     :        +- ReusedExchange [ca_address_sk#472], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=573]\n                     +- BroadcastQueryStage 19\n                        +- ReusedExchange [i_item_sk#485, i_item_id#486], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=1302]\n"
      },
      "IM" : {
        "inputSizeInBytes" : 20270480,
        "inputRowCount" : 506762
      },
      "InitialPartitionNum" : 0,
      "PD" : {
        "2" : [ 9099, 9831, 9395, 7757, 10330, 8861, 9176, 10240, 8978, 8760, 10274, 8936, 9235, 9857, 8640, 9518, 9281, 8884, 8511, 10882, 9287, 8276, 9895, 8364, 9482, 9709, 8661, 8177, 7614, 8562, 8782, 8645, 8937, 10202, 8123, 8943, 10366, 9464, 8518, 8443, 9772, 8281, 9175, 9409, 10279, 9341, 7941, 9139, 10456, 8287, 9554, 8960, 8940, 8945, 9458, 8814, 9559, 9211, 9454, 8725, 9857, 9369, 8990, 9606, 10377, 9011, 8393, 10720, 8940, 9643, 9895, 9862, 8137, 7882, 9368, 9180, 9521, 8393, 10423, 10029, 8720, 8877, 8173, 8319, 9437, 9265, 7459, 10737, 10553, 9833, 9630, 9219, 8110, 9935, 10555, 10128, 9828, 9767, 8671, 9655, 8877, 8237, 9000, 9579, 8819, 9178, 9280, 8930, 9882, 8999, 9232, 9424, 8659, 8965, 7739, 9647, 8834, 9063, 10018, 9213, 9038, 9660, 9841, 8364, 9669, 9656, 9202, 8685, 8397, 9200, 9217, 7496, 9232, 8675, 8670, 10765, 8286, 8726, 9718, 8335, 8872, 9044, 8187, 9567, 10272, 8465, 8990, 9531, 10398, 9232, 8484, 10614, 8315, 9241, 8441, 9520, 7872, 8541, 8996, 9413, 9976, 10138, 10043, 9840, 10422, 8424, 7752, 11380, 8532, 8152, 10659, 9607, 7577, 7868, 10920, 8731, 8389, 7523, 9830, 8691, 9889, 8039, 9832, 9495, 9811, 9058, 9287, 8180, 9306, 8069, 9615, 10017, 9947, 10196, 9019, 7792, 8223, 10288, 10559, 8894 ],
        "1" : [ 13838, 15060, 13899, 11085, 15417, 14082, 12997, 14640, 14177, 14370, 15006, 13567, 13933, 14039, 13401, 15321, 13233, 12251, 12720, 15810, 14448, 11870, 13433, 12014, 13846, 14823, 13724, 11734, 12049, 13234, 13076, 12765, 12965, 15513, 12497, 13725, 15513, 14360, 13558, 12973, 15906, 13052, 13163, 14109, 15234, 13733, 12425, 12901, 14901, 13445, 13906, 13637, 13241, 13662, 13680, 13260, 14439, 14178, 15504, 13495, 14622, 14369, 13106, 14091, 16203, 14379, 12996, 16299, 14012, 13391, 14274, 15399, 12188, 11856, 14291, 14090, 14657, 13305, 15600, 15234, 13218, 14054, 12418, 13219, 13646, 14204, 11410, 16002, 16002, 15024, 14648, 13908, 12093, 14910, 15810, 14178, 15600, 15111, 13234, 13655, 13497, 12403, 13234, 13908, 13742, 14474, 13907, 14299, 14448, 13908, 14631, 14187, 13916, 13646, 11647, 13670, 13497, 14850, 15225, 14091, 12807, 14456, 14535, 12990, 14579, 14369, 13489, 13384, 12021, 13899, 14631, 12172, 14292, 12831, 13173, 15207, 12108, 13472, 14658, 13391, 13812, 13758, 12829, 14649, 14352, 11850, 13162, 14649, 15820, 13977, 13899, 15993, 13401, 13942, 12187, 15156, 12332, 12331, 13828, 14910, 15705, 15609, 15426, 14658, 16441, 12814, 11885, 16538, 12561, 12029, 15906, 13156, 11878, 11575, 16615, 12893, 13716, 11300, 14649, 13472, 14745, 12633, 15198, 14955, 14195, 13645, 13820, 12028, 14256, 11871, 14823, 14195, 16127, 14283, 12258, 11417, 12671, 15189, 15513, 13322 ],
        "0" : [ 18500, 20729, 18730, 14805, 20089, 17485, 17590, 18720, 18145, 18375, 19961, 17800, 18155, 18976, 17465, 19590, 17485, 16825, 16185, 21007, 18503, 15486, 18145, 16299, 17915, 19219, 18516, 15888, 15102, 16739, 17350, 17580, 17360, 20345, 16605, 18283, 20484, 19334, 18030, 17810, 20879, 16710, 17485, 18976, 21274, 18375, 15678, 17150, 20217, 16395, 18513, 17370, 17590, 17613, 17820, 17580, 17925, 18503, 19091, 17159, 18618, 19232, 16815, 18746, 21135, 18385, 17035, 21146, 17820, 17590, 19232, 20089, 16710, 15399, 18989, 18375, 18976, 17370, 20356, 20484, 17275, 18030, 16835, 16500, 17695, 17925, 14997, 21146, 20473, 19321, 19078, 19091, 16089, 20217, 21007, 19104, 19833, 19718, 16615, 18270, 17590, 17044, 17600, 18145, 17580, 18835, 18720, 18155, 18963, 17915, 18963, 18720, 17475, 17695, 15696, 18503, 17810, 18835, 20890, 18874, 17570, 18976, 19321, 16710, 19347, 18030, 18155, 16720, 15687, 18030, 18976, 15477, 18260, 17025, 18030, 20345, 15495, 17485, 20089, 17685, 17935, 18030, 15975, 19347, 19219, 16299, 16519, 19127, 21413, 18733, 18158, 20473, 17360, 18260, 16290, 19462, 16605, 16194, 17350, 18848, 21007, 20729, 19859, 19219, 21413, 16089, 15486, 22792, 16405, 16299, 21124, 18040, 15897, 16098, 21552, 17360, 17360, 14718, 19334, 17255, 19091, 16185, 19705, 19334, 18746, 17915, 18260, 16509, 17475, 15381, 18411, 19846, 21124, 18746, 16614, 15198, 16107, 19718, 19334, 17160 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 7,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 13 ],
      "Objectives" : {
        "DurationInMs" : 609,
        "TotalTasksDurationInMs" : 1502,
        "IOBytes" : {
          "Total" : 8951072,
          "Details" : {
            "IR" : 0,
            "IW" : 0,
            "SR" : 7866641,
            "SW" : 1084431
          }
        }
      }
    },
    "3" : {
      "QSLogical" : {
        "operators" : {
          "0" : {
            "sign" : -620415373,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 8160000,
                "rowCount" : 204000
              },
              "compileTime" : {
                "sizeInBytes" : 8160000,
                "rowCount" : 204000
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (i_item_id#72 = i_item_id#508) "
          },
          "1" : {
            "sign" : -1934725616,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 8160000,
                "rowCount" : 204000
              },
              "compileTime" : {
                "sizeInBytes" : 8160000,
                "rowCount" : 204000
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_item_sk#71, i_item_id#72] "
          },
          "2" : {
            "sign" : -1729853405,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 86904000,
                "rowCount" : 204000
              },
              "compileTime" : {
                "sizeInBytes" : 86904000,
                "rowCount" : 204000
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: isnotnull(i_item_sk#71) "
          },
          "3" : {
            "sign" : 655949841,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 86904000,
                "rowCount" : 204000
              },
              "compileTime" : {
                "sizeInBytes" : 86904000,
                "rowCount" : 204000
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [i_item_sk#71, i_item_id#72, i_rec_start_date#73, i_rec_end_date#74, i_item_desc#75, i_current_price#76, i_wholesale_cost#77, i_brand_id#78, i_brand#79, i_class_id#80, i_class#81, i_category_id#82, i_category#83, i_manufact_id#84, i_manufact#85, i_size#86, i_formulation#87, i_color#88, i_units#89, i_container#90, i_manager_id#91, i_product_name#92], `spark_catalog`.`tpcds_100`.`item`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          }
        },
        "links" : [ {
          "fromId" : 3,
          "fromName" : "LogicalRelation",
          "toId" : 2,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Filter",
          "toId" : 1,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Project",
          "toId" : 0,
          "toName" : "Join",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Join LeftSemi, (i_item_id#72 = i_item_id#508)\n:- Project [i_item_sk#71, i_item_id#72]\n:  +- Filter isnotnull(i_item_sk#71)\n:     +- Relation spark_catalog.tpcds_100.item[i_item_sk#71,i_item_id#72,i_rec_start_date#73,i_rec_end_date#74,i_item_desc#75,i_current_price#76,i_wholesale_cost#77,i_brand_id#78,i_brand#79,i_class_id#80,i_class#81,i_category_id#82,i_category#83,i_manufact_id#84,i_manufact#85,i_size#86,i_formulation#87,i_color#88,i_units#89,i_container#90,i_manager_id#91,i_product_name#92] parquet\n+- Project [i_item_id#508]\n   +- Filter (isnotnull(i_category#519) AND (i_category#519 = Children))\n      +- Relation spark_catalog.tpcds_100.item[i_item_sk#507,i_item_id#508,i_rec_start_date#509,i_rec_end_date#510,i_item_desc#511,i_current_price#512,i_wholesale_cost#513,i_brand_id#514,i_brand#515,i_class_id#516,i_class#517,i_category_id#518,i_category#519,i_manufact_id#520,i_manufact#521,i_size#522,i_formulation#523,i_color#524,i_units#525,i_container#526,i_manager_id#527,i_product_name#528] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "0" : {
            "sign" : -1218311320,
            "className" : "org.apache.spark.sql.execution.joins.BroadcastHashJoinExec",
            "sizeInBytes" : 8160000,
            "rowCount" : 204000,
            "isRuntime" : false,
            "predicate" : " (unknown) BroadcastHashJoin Left keys [1]: [i_item_id#72] Right keys [1]: [i_item_id#508] Join type: LeftSemi Join condition: None "
          },
          "1" : {
            "sign" : 999207897,
            "className" : "org.apache.spark.sql.execution.FilterExec",
            "sizeInBytes" : 8160000,
            "rowCount" : 204000,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Input [2]: [i_item_sk#71, i_item_id#72] Condition : isnotnull(i_item_sk#71) "
          },
          "2" : {
            "sign" : -1727008469,
            "className" : "org.apache.spark.sql.execution.FileSourceScanExec",
            "sizeInBytes" : 8160000,
            "rowCount" : 204000,
            "isRuntime" : false,
            "predicate" : " (unknown) Scan parquet spark_catalog.tpcds_100.item Output [2]: [i_item_sk#71, i_item_id#72] Batched: true Location: InMemoryFileIndex [hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/item] PushedFilters: [IsNotNull(i_item_sk)] ReadSchema: struct<i_item_sk:int,i_item_id:string> "
          },
          "3" : {
            "sign" : -1729021887,
            "className" : "org.apache.spark.sql.execution.adaptive.BroadcastQueryStageExec",
            "sizeInBytes" : 34603008,
            "rowCount" : 20490,
            "isRuntime" : true,
            "predicate" : " (unknown) BroadcastQueryStage Output [1]: [i_item_id#508] Arguments: 2 "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "Scan parquet spark_catalog.tpcds_100.item",
          "toId" : 1,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Filter",
          "toId" : 0,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "BroadcastQueryStage",
          "toId" : 0,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "BroadcastHashJoin [i_item_id#72], [i_item_id#508], LeftSemi, BuildRight, false\n:- Filter isnotnull(i_item_sk#71)\n:  +- FileScan parquet spark_catalog.tpcds_100.item[i_item_sk#71,i_item_id#72] Batched: true, DataFilters: [isnotnull(i_item_sk#71)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/item], PartitionFilters: [], PushedFilters: [IsNotNull(i_item_sk)], ReadSchema: struct<i_item_sk:int,i_item_id:string>\n+- BroadcastQueryStage 2\n   +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, string, true]),false), [plan_id=594]\n      +- *(3) Project [i_item_id#508]\n         +- *(3) Filter (isnotnull(i_category#519) AND (i_category#519 = Children))\n            +- *(3) ColumnarToRow\n               +- FileScan parquet spark_catalog.tpcds_100.item[i_item_id#508,i_category#519] Batched: true, DataFilters: [isnotnull(i_category#519), (i_category#519 = Children)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/item], PartitionFilters: [], PushedFilters: [IsNotNull(i_category), EqualTo(i_category,Children)], ReadSchema: struct<i_item_id:string,i_category:string>\n"
      },
      "IM" : {
        "inputSizeInBytes" : 42763008,
        "inputRowCount" : 224490
      },
      "InitialPartitionNum" : 0,
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 2,
        "FinishedTasksNum" : 3,
        "FinishedTasksTotalTimeInMs" : 4689.0,
        "FinishedTasksDistributionInMs" : [ 1083.0, 1083.0, 1779.0, 1827.0, 1827.0 ]
      },
      "QueryStageOptimizationId" : 3,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 6 ],
      "Objectives" : {
        "DurationInMs" : 1927,
        "TotalTasksDurationInMs" : 5428,
        "IOBytes" : {
          "Total" : 1618808,
          "Details" : {
            "IR" : 1618808,
            "IW" : 0,
            "SR" : 0,
            "SW" : 0
          }
        }
      }
    }
  },
  "SQLStartTimeInMs" : 1702227167554,
  "SQLEndTimeInMs" : 1702227178491,
  "Objectives" : {
    "DurationInMs" : 10937,
    "IOBytes" : {
      "Total" : 120054829,
      "Details" : {
        "IR" : 102152685,
        "IW" : 0,
        "SR" : 8951072,
        "SW" : 8951072
      }
    }
  }
}
