{
  "CompileTimeLQP" : {
    "LQP" : {
      "operators" : {
        "45" : {
          "sign" : -842551498,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 6648780576,
          "rowCount" : 138516262,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [cs_bill_customer_sk#1848, cs_ext_discount_amt#1867, cs_ext_sales_price#1868, cs_ext_wholesale_cost#1869, cs_ext_list_price#1870, d_year#1886] "
        },
        "98" : {
          "sign" : -387959578,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 500000000,
          "rowCount" : 2000000,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [c_customer_sk#2625, c_customer_id#2626, c_current_cdemo_sk#2627, c_current_hdemo_sk#2628, c_current_addr_sk#2629, c_first_shipto_date_sk#2630, c_first_sales_date_sk#2631, c_salutation#2632, c_first_name#2633, c_last_name#2634, c_preferred_cust_flag#2635, c_birth_day#2636, c_birth_month#2637, c_birth_year#2638, c_birth_country#2639, c_login#2640, c_email_address#2641, c_last_review_date#2642], `spark_catalog`.`tpcds_100`.`customer`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "34" : {
          "sign" : 39958331,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 41806893656,
          "rowCount" : 275045353,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#1538, ss_item_sk#1539, ss_customer_sk#1540, ss_cdemo_sk#1541, ss_hdemo_sk#1542, ss_addr_sk#1543, ss_store_sk#1544, ss_promo_sk#1545, ss_ticket_number#1546L, ss_quantity#1547, ss_wholesale_cost#1548, ss_list_price#1549, ss_sales_price#1550, ss_ext_discount_amt#1551, ss_ext_sales_price#1552, ss_ext_wholesale_cost#1553, ss_ext_list_price#1554, ss_ext_tax#1555, ss_coupon_amt#1556, ss_net_paid#1557, ss_net_paid_inc_tax#1558, ss_net_profit#1559, ss_sold_date_sk#1560], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "67" : {
          "sign" : -2101546050,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 366000000,
          "rowCount" : 2000000,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [c_customer_sk#2067, c_customer_id#2068, c_first_name#2075, c_last_name#2076, c_preferred_cust_flag#2077, c_birth_country#2081, c_login#2082, c_email_address#2083] "
        },
        "93" : {
          "sign" : -1062794683,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 9216,
          "rowCount" : 576,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [d_date_sk#2677, d_year#2683] "
        },
        "12" : {
          "sign" : 1095897676,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 14302285452,
          "rowCount" : 275043951,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: (isnotnull(year_total#8) AND (year_total#8 > 0.000000)) "
        },
        "66" : {
          "sign" : 1884498839,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 17970054,
          "rowCount" : 73049,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#2119, d_date_id#2120, d_date#2121, d_month_seq#2122, d_week_seq#2123, d_quarter_seq#2124, d_year#2125, d_dow#2126, d_moy#2127, d_dom#2128, d_qoy#2129, d_fy_year#2130, d_fy_quarter_seq#2131, d_fy_week_seq#2132, d_day_name#2133, d_quarter_name#2134, d_holiday#2135, d_weekend#2136, d_following_holiday#2137, d_first_dom#2138, d_last_dom#2139, d_same_day_ly#2140, d_same_day_lq#2141, d_current_day#2142, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "89" : {
          "sign" : 1823921378,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 3891753880,
          "rowCount" : 69495605,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: Inner, (ws_sold_date_sk#2676 = d_date_sk#2677) "
        },
        "51" : {
          "sign" : -1537485381,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 141696,
          "rowCount" : 576,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: ((isnotnull(d_year#1886) AND (d_year#1886 = 2001)) AND isnotnull(d_date_sk#1880)) "
        },
        "84" : {
          "sign" : 1668633750,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 500000000,
          "rowCount" : 2000000,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [c_customer_sk#2386, c_customer_id#2387, c_current_cdemo_sk#2388, c_current_hdemo_sk#2389, c_current_addr_sk#2390, c_first_shipto_date_sk#2391, c_first_sales_date_sk#2392, c_salutation#2393, c_first_name#2394, c_last_name#2395, c_preferred_cust_flag#2396, c_birth_day#2397, c_birth_month#2398, c_birth_year#2399, c_birth_country#2400, c_login#2401, c_email_address#2402, c_last_review_date#2403], `spark_catalog`.`tpcds_100`.`customer`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "8" : {
          "sign" : 6556125,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 45044142156507206,
          "rowCount" : 193322498525782,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: Inner, ((customer_id#0 = customer_id#291) AND (CASE WHEN (year_total#18 > 0.000000) THEN (year_total#299 / year_total#18) END > CASE WHEN (year_total#8 > 0.000000) THEN (year_total#279 / year_total#8) END)) "
        },
        "73" : {
          "sign" : 290525742,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 16132260648,
          "rowCount" : 72341976,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: Inner, (c_customer_sk#2386 = ws_bill_customer_sk#2407) "
        },
        "78" : {
          "sign" : 369500392,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 14972593792,
          "rowCount" : 71983624,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ws_sold_time_sk#2404, ws_ship_date_sk#2405, ws_item_sk#2406, ws_bill_customer_sk#2407, ws_bill_cdemo_sk#2408, ws_bill_hdemo_sk#2409, ws_bill_addr_sk#2410, ws_ship_customer_sk#2411, ws_ship_cdemo_sk#2412, ws_ship_hdemo_sk#2413, ws_ship_addr_sk#2414, ws_web_page_sk#2415, ws_web_site_sk#2416, ws_ship_mode_sk#2417, ws_warehouse_sk#2418, ws_promo_sk#2419, ws_order_number#2420L, ws_quantity#2421, ws_wholesale_cost#2422, ws_list_price#2423, ws_sales_price#2424, ws_ext_discount_amt#2425, ws_ext_sales_price#2426, ws_ext_wholesale_cost#2427, ... 10 more fields], `spark_catalog`.`tpcds_100`.`web_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "19" : {
          "sign" : -1399660778,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 39925696056,
          "rowCount" : 262669053,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: ((isnotnull(ss_customer_sk#50) AND isnotnull(ss_sold_date_sk#70)) AND dynamicpruning#2815 [ss_sold_date_sk#70]) "
        },
        "23" : {
          "sign" : -668436058,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 17970054,
          "rowCount" : 73049,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#71, d_date_id#72, d_date#73, d_month_seq#74, d_week_seq#75, d_quarter_seq#76, d_year#77, d_dow#78, d_moy#79, d_dom#80, d_qoy#81, d_fy_year#82, d_fy_quarter_seq#83, d_fy_week_seq#84, d_day_name#85, d_quarter_name#86, d_holiday#87, d_weekend#88, d_following_holiday#89, d_first_dom#90, d_last_dom#91, d_same_day_ly#92, d_same_day_lq#93, d_current_day#94, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "62" : {
          "sign" : -695837406,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 29651732864,
          "rowCount" : 142556408,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: ((isnotnull(cs_bill_customer_sk#2087) AND isnotnull(cs_sold_date_sk#2118)) AND dynamicpruning#2818 [cs_sold_date_sk#2118]) "
        },
        "4" : {
          "sign" : -1585924467,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 58933069745831562836,
          "rowCount" : 252931629810435892,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: Inner, ((customer_id#0 = customer_id#311) AND (CASE WHEN (year_total#18 > 0.000000) THEN (year_total#299 / year_total#18) END > CASE WHEN (year_total#28 > 0.000000) THEN (year_total#319 / year_total#28) END)) "
        },
        "88" : {
          "sign" : -1165838738,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 3335789040,
          "rowCount" : 69495605,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [ws_bill_customer_sk#2646, ws_ext_discount_amt#2664, ws_ext_sales_price#2665, ws_ext_wholesale_cost#2666, ws_ext_list_price#2667, d_year#2683] "
        },
        "77" : {
          "sign" : -1564778718,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 14968845008,
          "rowCount" : 71965601,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: ((isnotnull(ws_bill_customer_sk#2407) AND isnotnull(ws_sold_date_sk#2437)) AND dynamicpruning#2819 [ws_sold_date_sk#2437]) "
        },
        "40" : {
          "sign" : -323362960,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 500000000,
          "rowCount" : 2000000,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [c_customer_sk#1520, c_customer_id#1521, c_current_cdemo_sk#1522, c_current_hdemo_sk#1523, c_current_addr_sk#1524, c_first_shipto_date_sk#1525, c_first_sales_date_sk#1526, c_salutation#1527, c_first_name#1528, c_last_name#1529, c_preferred_cust_flag#1530, c_birth_day#1531, c_birth_month#1532, c_birth_year#1533, c_birth_country#1534, c_login#1535, c_email_address#1536, c_last_review_date#1537], `spark_catalog`.`tpcds_100`.`customer`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "15" : {
          "sign" : 655092925,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 61334801073,
          "rowCount" : 275043951,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: Inner, (c_customer_sk#30 = ss_customer_sk#50) "
        },
        "11" : {
          "sign" : -1149953179,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 6543653635943,
          "rowCount" : 37824587491,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: Inner, (customer_id#271 = customer_id#0) "
        },
        "90" : {
          "sign" : -1067955706,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 3454348848,
          "rowCount" : 71965601,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [ws_bill_customer_sk#2646, ws_ext_discount_amt#2664, ws_ext_sales_price#2665, ws_ext_wholesale_cost#2666, ws_ext_list_price#2667, ws_sold_date_sk#2676] "
        },
        "9" : {
          "sign" : 1164465481,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 511081433268651,
          "rowCount" : 2704134567559,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [customer_id#0, year_total#8, customer_id#271, customer_first_name#272, customer_last_name#273, customer_email_address#277, year_total#279, year_total#18] "
        },
        "44" : {
          "sign" : -1148501878,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 31885186254,
          "rowCount" : 142982898,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: Inner, (c_customer_sk#1828 = cs_bill_customer_sk#1848) "
        },
        "33" : {
          "sign" : 1172537223,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 39925696056,
          "rowCount" : 262669053,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: ((isnotnull(ss_customer_sk#1540) AND isnotnull(ss_sold_date_sk#1560)) AND dynamicpruning#2816 [ss_sold_date_sk#1560]) "
        },
        "22" : {
          "sign" : -1707248010,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 141696,
          "rowCount" : 576,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: ((isnotnull(d_year#77) AND (d_year#77 = 2001)) AND isnotnull(d_date_sk#71)) "
        },
        "56" : {
          "sign" : -1252348736,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
          "sizeInBytes" : 7435110696,
          "rowCount" : 142982898,
          "isRuntime" : false,
          "predicate" : " (unknown) Aggregate Arguments: [c_customer_id#2068, c_first_name#2075, c_last_name#2076, c_preferred_cust_flag#2077, c_birth_country#2081, c_login#2082, c_email_address#2083, d_year#2125], [c_customer_id#2068 AS customer_id#291, sum(((((cs_ext_list_price#2109 - cs_ext_wholesale_cost#2108) - cs_ext_discount_amt#2106) + cs_ext_sales_price#2107) / 2)) AS year_total#299] "
        },
        "55" : {
          "sign" : -2058732048,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 500000000,
          "rowCount" : 2000000,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [c_customer_sk#1828, c_customer_id#1829, c_current_cdemo_sk#1830, c_current_hdemo_sk#1831, c_current_addr_sk#1832, c_first_shipto_date_sk#1833, c_first_sales_date_sk#1834, c_salutation#1835, c_first_name#1836, c_last_name#1837, c_preferred_cust_flag#1838, c_birth_day#1839, c_birth_month#1840, c_birth_year#1841, c_birth_country#1842, c_login#1843, c_email_address#1844, c_last_review_date#1845], `spark_catalog`.`tpcds_100`.`customer`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "26" : {
          "sign" : -1114220934,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 500000000,
          "rowCount" : 2000000,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [c_customer_sk#30, c_customer_id#31, c_current_cdemo_sk#32, c_current_hdemo_sk#33, c_current_addr_sk#34, c_first_shipto_date_sk#35, c_first_sales_date_sk#36, c_salutation#37, c_first_name#38, c_last_name#39, c_preferred_cust_flag#40, c_birth_day#41, c_birth_month#42, c_birth_year#43, c_birth_country#44, c_login#45, c_email_address#46, c_last_review_date#47], `spark_catalog`.`tpcds_100`.`customer`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "50" : {
          "sign" : 1034701532,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 9216,
          "rowCount" : 576,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [d_date_sk#1880, d_year#1886] "
        },
        "37" : {
          "sign" : -383822212,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 17970054,
          "rowCount" : 73049,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#1561, d_date_id#1562, d_date#1563, d_month_seq#1564, d_week_seq#1565, d_quarter_seq#1566, d_year#1567, d_dow#1568, d_moy#1569, d_dom#1570, d_qoy#1571, d_fy_year#1572, d_fy_quarter_seq#1573, d_fy_week_seq#1574, d_day_name#1575, d_quarter_name#1576, d_holiday#1577, d_weekend#1578, d_following_holiday#1579, d_first_dom#1580, d_last_dom#1581, d_same_day_ly#1582, d_same_day_lq#1583, d_current_day#1584, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "68" : {
          "sign" : 1544785826,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 500000000,
          "rowCount" : 2000000,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: (isnotnull(c_customer_sk#2067) AND isnotnull(c_customer_id#2068)) "
        },
        "61" : {
          "sign" : -51749253,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 6842707584,
          "rowCount" : 142556408,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [cs_bill_customer_sk#2087, cs_ext_discount_amt#2106, cs_ext_sales_price#2107, cs_ext_wholesale_cost#2108, cs_ext_list_price#2109, cs_sold_date_sk#2118] "
        },
        "13" : {
          "sign" : -495936406,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
          "sizeInBytes" : 14302285452,
          "rowCount" : 275043951,
          "isRuntime" : false,
          "predicate" : " (unknown) Aggregate Arguments: [c_customer_id#31, c_first_name#38, c_last_name#39, c_preferred_cust_flag#40, c_birth_country#44, c_login#45, c_email_address#46, d_year#77], [c_customer_id#31 AS customer_id#0, sum(((((ss_ext_list_price#64 - ss_ext_wholesale_cost#63) - ss_ext_discount_amt#61) + ss_ext_sales_price#62) / 2)) AS year_total#8] "
        },
        "46" : {
          "sign" : 523073540,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 7756910672,
          "rowCount" : 138516262,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: Inner, (cs_sold_date_sk#1879 = d_date_sk#1880) "
        },
        "24" : {
          "sign" : -2111102187,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 366000000,
          "rowCount" : 2000000,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [c_customer_sk#30, c_customer_id#31, c_first_name#38, c_last_name#39, c_preferred_cust_flag#40, c_birth_country#44, c_login#45, c_email_address#46] "
        },
        "94" : {
          "sign" : 409025823,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 141696,
          "rowCount" : 576,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: ((isnotnull(d_year#2683) AND (d_year#2683 = 2002)) AND isnotnull(d_date_sk#2677)) "
        },
        "83" : {
          "sign" : 55972546,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 500000000,
          "rowCount" : 2000000,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: (isnotnull(c_customer_sk#2386) AND isnotnull(c_customer_id#2387)) "
        },
        "35" : {
          "sign" : 802408125,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 9216,
          "rowCount" : 576,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [d_date_sk#1561, d_year#1567] "
        },
        "16" : {
          "sign" : 2005283552,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 12745948080,
          "rowCount" : 265540585,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [ss_customer_sk#50, ss_ext_discount_amt#61, ss_ext_sales_price#62, ss_ext_wholesale_cost#63, ss_ext_list_price#64, d_year#77] "
        },
        "79" : {
          "sign" : -503864523,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 9216,
          "rowCount" : 576,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [d_date_sk#2438, d_year#2444] "
        },
        "5" : {
          "sign" : -1611526772,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 1321613831343848931,
          "rowCount" : 6992665774306079,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [customer_id#0, customer_id#271, customer_first_name#272, customer_last_name#273, customer_email_address#277, year_total#18, year_total#299, year_total#28] "
        },
        "72" : {
          "sign" : 433447007,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 15553524840,
          "rowCount" : 72341976,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [c_customer_id#2387, c_first_name#2394, c_last_name#2395, c_preferred_cust_flag#2396, c_birth_country#2400, c_login#2401, c_email_address#2402, ws_ext_discount_amt#2425, ws_ext_sales_price#2426, ws_ext_wholesale_cost#2427, ws_ext_list_price#2428, d_year#2444] "
        },
        "10" : {
          "sign" : -2129996080,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 586797201160303,
          "rowCount" : 2704134567559,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: Inner, (customer_id#0 = customer_id#10) "
        },
        "59" : {
          "sign" : 1764151299,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 6648780576,
          "rowCount" : 138516262,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [cs_bill_customer_sk#2087, cs_ext_discount_amt#2106, cs_ext_sales_price#2107, cs_ext_wholesale_cost#2108, cs_ext_list_price#2109, d_year#2125] "
        },
        "87" : {
          "sign" : 1320253550,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 16132260648,
          "rowCount" : 72341976,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: Inner, (c_customer_sk#2625 = ws_bill_customer_sk#2646) "
        },
        "48" : {
          "sign" : -1627714091,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 29651732864,
          "rowCount" : 142556408,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: ((isnotnull(cs_bill_customer_sk#1848) AND isnotnull(cs_sold_date_sk#1879)) AND dynamicpruning#2817 [cs_sold_date_sk#1879]) "
        },
        "21" : {
          "sign" : -1498790795,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 9216,
          "rowCount" : 576,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [d_date_sk#71, d_year#77] "
        },
        "76" : {
          "sign" : 1723000895,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 3454348848,
          "rowCount" : 71965601,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [ws_bill_customer_sk#2407, ws_ext_discount_amt#2425, ws_ext_sales_price#2426, ws_ext_wholesale_cost#2427, ws_ext_list_price#2428, ws_sold_date_sk#2437] "
        },
        "54" : {
          "sign" : -1949049608,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 500000000,
          "rowCount" : 2000000,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: (isnotnull(c_customer_sk#1828) AND isnotnull(c_customer_id#1829)) "
        },
        "43" : {
          "sign" : -588605356,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 30741323070,
          "rowCount" : 142982898,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [c_customer_id#1829, c_first_name#1836, c_last_name#1837, c_preferred_cust_flag#1838, c_birth_country#1842, c_login#1843, c_email_address#1844, cs_ext_discount_amt#1867, cs_ext_sales_price#1868, cs_ext_wholesale_cost#1869, cs_ext_list_price#1870, d_year#1886] "
        },
        "65" : {
          "sign" : -1117937769,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 141696,
          "rowCount" : 576,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: ((isnotnull(d_year#2125) AND (d_year#2125 = 2002)) AND isnotnull(d_date_sk#2119)) "
        },
        "71" : {
          "sign" : 307803163,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
          "sizeInBytes" : 3761782752,
          "rowCount" : 72341976,
          "isRuntime" : false,
          "predicate" : " (unknown) Aggregate Arguments: [c_customer_id#2387, c_first_name#2394, c_last_name#2395, c_preferred_cust_flag#2396, c_birth_country#2400, c_login#2401, c_email_address#2402, d_year#2444], [c_customer_id#2387 AS customer_id#20, sum(((((ws_ext_list_price#2428 - ws_ext_wholesale_cost#2427) - ws_ext_discount_amt#2425) + ws_ext_sales_price#2426) / 2)) AS year_total#28] "
        },
        "57" : {
          "sign" : 393126393,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 30741323070,
          "rowCount" : 142982898,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [c_customer_id#2068, c_first_name#2075, c_last_name#2076, c_preferred_cust_flag#2077, c_birth_country#2081, c_login#2082, c_email_address#2083, cs_ext_discount_amt#2106, cs_ext_sales_price#2107, cs_ext_wholesale_cost#2108, cs_ext_list_price#2109, d_year#2125] "
        },
        "32" : {
          "sign" : 1931709305,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 12608114544,
          "rowCount" : 262669053,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [ss_customer_sk#1540, ss_ext_discount_amt#1551, ss_ext_sales_price#1552, ss_ext_wholesale_cost#1553, ss_ext_list_price#1554, ss_sold_date_sk#1560] "
        },
        "80" : {
          "sign" : -820008893,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 141696,
          "rowCount" : 576,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: ((isnotnull(d_year#2444) AND (d_year#2444 = 2001)) AND isnotnull(d_date_sk#2438)) "
        },
        "82" : {
          "sign" : -660788545,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 366000000,
          "rowCount" : 2000000,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [c_customer_sk#2386, c_customer_id#2387, c_first_name#2394, c_last_name#2395, c_preferred_cust_flag#2396, c_birth_country#2400, c_login#2401, c_email_address#2402] "
        },
        "49" : {
          "sign" : -1838553292,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 29800787536,
          "rowCount" : 143273017,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [cs_sold_time_sk#1846, cs_ship_date_sk#1847, cs_bill_customer_sk#1848, cs_bill_cdemo_sk#1849, cs_bill_hdemo_sk#1850, cs_bill_addr_sk#1851, cs_ship_customer_sk#1852, cs_ship_cdemo_sk#1853, cs_ship_hdemo_sk#1854, cs_ship_addr_sk#1855, cs_call_center_sk#1856, cs_catalog_page_sk#1857, cs_ship_mode_sk#1858, cs_warehouse_sk#1859, cs_item_sk#1860, cs_promo_sk#1861, cs_order_number#1862L, cs_quantity#1863, cs_wholesale_cost#1864, cs_list_price#1865, cs_sales_price#1866, cs_ext_discount_amt#1867, cs_ext_sales_price#1868, cs_ext_wholesale_cost#1869, ... 10 more fields], `spark_catalog`.`tpcds_100`.`catalog_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "6" : {
          "sign" : -2139774769,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 1517408473024419143,
          "rowCount" : 6992665774306079,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: Inner, (customer_id#0 = customer_id#20) "
        },
        "36" : {
          "sign" : -1079898054,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 141696,
          "rowCount" : 576,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: ((isnotnull(d_year#1567) AND (d_year#1567 = 2002)) AND isnotnull(d_date_sk#1561)) "
        },
        "1" : {
          "sign" : 694611439,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
          "sizeInBytes" : 28581274168579255796,
          "rowCount" : 252931629810435892,
          "isRuntime" : false,
          "predicate" : " (unknown) LocalLimit Arguments: 100 "
        },
        "39" : {
          "sign" : 271842338,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 500000000,
          "rowCount" : 2000000,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: (isnotnull(c_customer_sk#1520) AND isnotnull(c_customer_id#1521)) "
        },
        "17" : {
          "sign" : -1818908084,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 14870272760,
          "rowCount" : 265540585,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#70 = d_date_sk#71) "
        },
        "25" : {
          "sign" : 18954722,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 500000000,
          "rowCount" : 2000000,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: (isnotnull(c_customer_sk#30) AND isnotnull(c_customer_id#31)) "
        },
        "60" : {
          "sign" : -567353427,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 7756910672,
          "rowCount" : 138516262,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: Inner, (cs_sold_date_sk#2118 = d_date_sk#2119) "
        },
        "14" : {
          "sign" : -2135701962,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 59134449465,
          "rowCount" : 275043951,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [c_customer_id#31, c_first_name#38, c_last_name#39, c_preferred_cust_flag#40, c_birth_country#44, c_login#45, c_email_address#46, ss_ext_discount_amt#61, ss_ext_sales_price#62, ss_ext_wholesale_cost#63, ss_ext_list_price#64, d_year#77] "
        },
        "47" : {
          "sign" : -447813698,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 6842707584,
          "rowCount" : 142556408,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [cs_bill_customer_sk#1848, cs_ext_discount_amt#1867, cs_ext_sales_price#1868, cs_ext_wholesale_cost#1869, cs_ext_list_price#1870, cs_sold_date_sk#1879] "
        },
        "31" : {
          "sign" : 1896421705,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 14870272760,
          "rowCount" : 265540585,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#1560 = d_date_sk#1561) "
        },
        "96" : {
          "sign" : 982652585,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 366000000,
          "rowCount" : 2000000,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [c_customer_sk#2625, c_customer_id#2626, c_first_name#2633, c_last_name#2634, c_preferred_cust_flag#2635, c_birth_country#2639, c_login#2640, c_email_address#2641] "
        },
        "69" : {
          "sign" : -1348188042,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 500000000,
          "rowCount" : 2000000,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [c_customer_sk#2067, c_customer_id#2068, c_current_cdemo_sk#2069, c_current_hdemo_sk#2070, c_current_addr_sk#2071, c_first_shipto_date_sk#2072, c_first_sales_date_sk#2073, c_salutation#2074, c_first_name#2075, c_last_name#2076, c_preferred_cust_flag#2077, c_birth_day#2078, c_birth_month#2079, c_birth_year#2080, c_birth_country#2081, c_login#2082, c_email_address#2083, c_last_review_date#2084], `spark_catalog`.`tpcds_100`.`customer`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "95" : {
          "sign" : -932576344,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 17970054,
          "rowCount" : 73049,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#2677, d_date_id#2678, d_date#2679, d_month_seq#2680, d_week_seq#2681, d_quarter_seq#2682, d_year#2683, d_dow#2684, d_moy#2685, d_dom#2686, d_qoy#2687, d_fy_year#2688, d_fy_quarter_seq#2689, d_fy_week_seq#2690, d_day_name#2691, d_quarter_name#2692, d_holiday#2693, d_weekend#2694, d_following_holiday#2695, d_first_dom#2696, d_last_dom#2697, d_same_day_ly#2698, d_same_day_lq#2699, d_current_day#2700, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "58" : {
          "sign" : 600202813,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 31885186254,
          "rowCount" : 142982898,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: Inner, (c_customer_sk#2067 = cs_bill_customer_sk#2087) "
        },
        "64" : {
          "sign" : -1491674133,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 9216,
          "rowCount" : 576,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [d_date_sk#2119, d_year#2125] "
        },
        "53" : {
          "sign" : -371111276,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 366000000,
          "rowCount" : 2000000,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [c_customer_sk#1828, c_customer_id#1829, c_first_name#1836, c_last_name#1837, c_preferred_cust_flag#1838, c_birth_country#1842, c_login#1843, c_email_address#1844] "
        },
        "42" : {
          "sign" : -1951471473,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
          "sizeInBytes" : 7435110696,
          "rowCount" : 142982898,
          "isRuntime" : false,
          "predicate" : " (unknown) Aggregate Arguments: [c_customer_id#1829, c_first_name#1836, c_last_name#1837, c_preferred_cust_flag#1838, c_birth_country#1842, c_login#1843, c_email_address#1844, d_year#1886], [c_customer_id#1829 AS customer_id#10, sum(((((cs_ext_list_price#1870 - cs_ext_wholesale_cost#1869) - cs_ext_discount_amt#1867) + cs_ext_sales_price#1868) / 2)) AS year_total#18] "
        },
        "75" : {
          "sign" : 1868158189,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 3891753880,
          "rowCount" : 69495605,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: Inner, (ws_sold_date_sk#2437 = d_date_sk#2438) "
        },
        "0" : {
          "sign" : -156333000,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
          "sizeInBytes" : 8800,
          "rowCount" : 100,
          "isRuntime" : false,
          "predicate" : " (unknown) GlobalLimit Arguments: 100 "
        },
        "20" : {
          "sign" : -1587881534,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 41806893656,
          "rowCount" : 275045353,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#48, ss_item_sk#49, ss_customer_sk#50, ss_cdemo_sk#51, ss_hdemo_sk#52, ss_addr_sk#53, ss_store_sk#54, ss_promo_sk#55, ss_ticket_number#56L, ss_quantity#57, ss_wholesale_cost#58, ss_list_price#59, ss_sales_price#60, ss_ext_discount_amt#61, ss_ext_sales_price#62, ss_ext_wholesale_cost#63, ss_ext_list_price#64, ss_ext_tax#65, ss_coupon_amt#66, ss_net_paid#67, ss_net_paid_inc_tax#68, ss_net_profit#69, ss_sold_date_sk#70], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "27" : {
          "sign" : 2051423400,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
          "sizeInBytes" : 35480669679,
          "rowCount" : 275043951,
          "isRuntime" : false,
          "predicate" : " (unknown) Aggregate Arguments: [c_customer_id#1521, c_first_name#1528, c_last_name#1529, c_preferred_cust_flag#1530, c_birth_country#1534, c_login#1535, c_email_address#1536, d_year#1567], [c_customer_id#1521 AS customer_id#271, c_first_name#1528 AS customer_first_name#272, c_last_name#1529 AS customer_last_name#273, c_email_address#1536 AS customer_email_address#277, sum(((((ss_ext_list_price#1554 - ss_ext_wholesale_cost#1553) - ss_ext_discount_amt#1551) + ss_ext_sales_price#1552) / 2)) AS year_total#279] "
        },
        "70" : {
          "sign" : 1339477141,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 3761782752,
          "rowCount" : 72341976,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: (isnotnull(year_total#28) AND (year_total#28 > 0.000000)) "
        },
        "2" : {
          "sign" : -761665778,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
          "sizeInBytes" : 28581274168579255796,
          "rowCount" : 252931629810435892,
          "isRuntime" : false,
          "predicate" : " (unknown) Sort Arguments: [customer_id#271 ASC NULLS FIRST, customer_first_name#272 ASC NULLS FIRST, customer_last_name#273 ASC NULLS FIRST, customer_email_address#277 ASC NULLS FIRST], true "
        },
        "86" : {
          "sign" : 1717504416,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 15553524840,
          "rowCount" : 72341976,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [c_customer_id#2626, c_first_name#2633, c_last_name#2634, c_preferred_cust_flag#2635, c_birth_country#2639, c_login#2640, c_email_address#2641, ws_ext_discount_amt#2664, ws_ext_sales_price#2665, ws_ext_wholesale_cost#2666, ws_ext_list_price#2667, d_year#2683] "
        },
        "38" : {
          "sign" : 1534602901,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 366000000,
          "rowCount" : 2000000,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [c_customer_sk#1520, c_customer_id#1521, c_first_name#1528, c_last_name#1529, c_preferred_cust_flag#1530, c_birth_country#1534, c_login#1535, c_email_address#1536] "
        },
        "81" : {
          "sign" : -823863454,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 17970054,
          "rowCount" : 73049,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#2438, d_date_id#2439, d_date#2440, d_month_seq#2441, d_week_seq#2442, d_quarter_seq#2443, d_year#2444, d_dow#2445, d_moy#2446, d_dom#2447, d_qoy#2448, d_fy_year#2449, d_fy_quarter_seq#2450, d_fy_week_seq#2451, d_day_name#2452, d_quarter_name#2453, d_holiday#2454, d_weekend#2455, d_following_holiday#2456, d_first_dom#2457, d_last_dom#2458, d_same_day_ly#2459, d_same_day_lq#2460, d_current_day#2461, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "92" : {
          "sign" : -894153454,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 14972593792,
          "rowCount" : 71983624,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ws_sold_time_sk#2643, ws_ship_date_sk#2644, ws_item_sk#2645, ws_bill_customer_sk#2646, ws_bill_cdemo_sk#2647, ws_bill_hdemo_sk#2648, ws_bill_addr_sk#2649, ws_ship_customer_sk#2650, ws_ship_cdemo_sk#2651, ws_ship_hdemo_sk#2652, ws_ship_addr_sk#2653, ws_web_page_sk#2654, ws_web_site_sk#2655, ws_ship_mode_sk#2656, ws_warehouse_sk#2657, ws_promo_sk#2658, ws_order_number#2659L, ws_quantity#2660, ws_wholesale_cost#2661, ws_list_price#2662, ws_sales_price#2663, ws_ext_discount_amt#2664, ws_ext_sales_price#2665, ws_ext_wholesale_cost#2666, ... 10 more fields], `spark_catalog`.`tpcds_100`.`web_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "18" : {
          "sign" : 1750755114,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 12608114544,
          "rowCount" : 262669053,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [ss_customer_sk#50, ss_ext_discount_amt#61, ss_ext_sales_price#62, ss_ext_wholesale_cost#63, ss_ext_list_price#64, ss_sold_date_sk#70] "
        },
        "30" : {
          "sign" : -1585259017,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 12745948080,
          "rowCount" : 265540585,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [ss_customer_sk#1540, ss_ext_discount_amt#1551, ss_ext_sales_price#1552, ss_ext_wholesale_cost#1553, ss_ext_list_price#1554, d_year#1567] "
        },
        "7" : {
          "sign" : 1644627803,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 33444792244960286,
          "rowCount" : 193322498525782,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [customer_id#0, customer_id#271, customer_first_name#272, customer_last_name#273, customer_email_address#277, year_total#18, year_total#299] "
        },
        "97" : {
          "sign" : 1202749986,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 500000000,
          "rowCount" : 2000000,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: (isnotnull(c_customer_sk#2625) AND isnotnull(c_customer_id#2626)) "
        },
        "29" : {
          "sign" : 188535070,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 61334801073,
          "rowCount" : 275043951,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: Inner, (c_customer_sk#1520 = ss_customer_sk#1540) "
        },
        "41" : {
          "sign" : -1652388255,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 7435110696,
          "rowCount" : 142982898,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: (isnotnull(year_total#18) AND (year_total#18 > 0.000000)) "
        },
        "63" : {
          "sign" : -575445149,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 29800787536,
          "rowCount" : 143273017,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [cs_sold_time_sk#2085, cs_ship_date_sk#2086, cs_bill_customer_sk#2087, cs_bill_cdemo_sk#2088, cs_bill_hdemo_sk#2089, cs_bill_addr_sk#2090, cs_ship_customer_sk#2091, cs_ship_cdemo_sk#2092, cs_ship_hdemo_sk#2093, cs_ship_addr_sk#2094, cs_call_center_sk#2095, cs_catalog_page_sk#2096, cs_ship_mode_sk#2097, cs_warehouse_sk#2098, cs_item_sk#2099, cs_promo_sk#2100, cs_order_number#2101L, cs_quantity#2102, cs_wholesale_cost#2103, cs_list_price#2104, cs_sales_price#2105, cs_ext_discount_amt#2106, cs_ext_sales_price#2107, cs_ext_wholesale_cost#2108, ... 10 more fields], `spark_catalog`.`tpcds_100`.`catalog_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "3" : {
          "sign" : 576404973,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 28581274168579255796,
          "rowCount" : 252931629810435892,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [customer_id#271, customer_first_name#272, customer_last_name#273, customer_email_address#277] "
        },
        "74" : {
          "sign" : -663332777,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 3335789040,
          "rowCount" : 69495605,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [ws_bill_customer_sk#2407, ws_ext_discount_amt#2425, ws_ext_sales_price#2426, ws_ext_wholesale_cost#2427, ws_ext_list_price#2428, d_year#2444] "
        },
        "91" : {
          "sign" : -1155910289,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 14968845008,
          "rowCount" : 71965601,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: ((isnotnull(ws_bill_customer_sk#2646) AND isnotnull(ws_sold_date_sk#2676)) AND dynamicpruning#2820 [ws_sold_date_sk#2676]) "
        },
        "52" : {
          "sign" : 447266588,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 17970054,
          "rowCount" : 73049,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#1880, d_date_id#1881, d_date#1882, d_month_seq#1883, d_week_seq#1884, d_quarter_seq#1885, d_year#1886, d_dow#1887, d_moy#1888, d_dom#1889, d_qoy#1890, d_fy_year#1891, d_fy_quarter_seq#1892, d_fy_week_seq#1893, d_day_name#1894, d_quarter_name#1895, d_holiday#1896, d_weekend#1897, d_following_holiday#1898, d_first_dom#1899, d_last_dom#1900, d_same_day_ly#1901, d_same_day_lq#1902, d_current_day#1903, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "85" : {
          "sign" : 424515423,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
          "sizeInBytes" : 3761782752,
          "rowCount" : 72341976,
          "isRuntime" : false,
          "predicate" : " (unknown) Aggregate Arguments: [c_customer_id#2626, c_first_name#2633, c_last_name#2634, c_preferred_cust_flag#2635, c_birth_country#2639, c_login#2640, c_email_address#2641, d_year#2683], [c_customer_id#2626 AS customer_id#311, sum(((((ws_ext_list_price#2667 - ws_ext_wholesale_cost#2666) - ws_ext_discount_amt#2664) + ws_ext_sales_price#2665) / 2)) AS year_total#319] "
        },
        "28" : {
          "sign" : -1927173717,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 59134449465,
          "rowCount" : 275043951,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [c_customer_id#1521, c_first_name#1528, c_last_name#1529, c_preferred_cust_flag#1530, c_birth_country#1534, c_login#1535, c_email_address#1536, ss_ext_discount_amt#1551, ss_ext_sales_price#1552, ss_ext_wholesale_cost#1553, ss_ext_list_price#1554, d_year#1567] "
        }
      },
      "links" : [ {
        "fromId" : 20,
        "fromName" : "LogicalRelation",
        "toId" : 19,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 23,
        "fromName" : "LogicalRelation",
        "toId" : 22,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 22,
        "fromName" : "Filter",
        "toId" : 21,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 21,
        "fromName" : "Project",
        "toId" : 19,
        "toName" : "Filter",
        "linkType" : "Subquery"
      }, {
        "fromId" : 19,
        "fromName" : "Filter",
        "toId" : 18,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 18,
        "fromName" : "Project",
        "toId" : 17,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 21,
        "fromName" : "Project",
        "toId" : 17,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 17,
        "fromName" : "Join",
        "toId" : 16,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 16,
        "fromName" : "Project",
        "toId" : 15,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 26,
        "fromName" : "LogicalRelation",
        "toId" : 25,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 25,
        "fromName" : "Filter",
        "toId" : 24,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 24,
        "fromName" : "Project",
        "toId" : 15,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 15,
        "fromName" : "Join",
        "toId" : 14,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 14,
        "fromName" : "Project",
        "toId" : 13,
        "toName" : "Aggregate",
        "linkType" : "Operator"
      }, {
        "fromId" : 13,
        "fromName" : "Aggregate",
        "toId" : 12,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 12,
        "fromName" : "Filter",
        "toId" : 11,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 34,
        "fromName" : "LogicalRelation",
        "toId" : 33,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 37,
        "fromName" : "LogicalRelation",
        "toId" : 36,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 36,
        "fromName" : "Filter",
        "toId" : 35,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 35,
        "fromName" : "Project",
        "toId" : 33,
        "toName" : "Filter",
        "linkType" : "Subquery"
      }, {
        "fromId" : 33,
        "fromName" : "Filter",
        "toId" : 32,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 32,
        "fromName" : "Project",
        "toId" : 31,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 35,
        "fromName" : "Project",
        "toId" : 31,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 31,
        "fromName" : "Join",
        "toId" : 30,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 30,
        "fromName" : "Project",
        "toId" : 29,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 40,
        "fromName" : "LogicalRelation",
        "toId" : 39,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 39,
        "fromName" : "Filter",
        "toId" : 38,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 38,
        "fromName" : "Project",
        "toId" : 29,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 29,
        "fromName" : "Join",
        "toId" : 28,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 28,
        "fromName" : "Project",
        "toId" : 27,
        "toName" : "Aggregate",
        "linkType" : "Operator"
      }, {
        "fromId" : 27,
        "fromName" : "Aggregate",
        "toId" : 11,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 11,
        "fromName" : "Join",
        "toId" : 10,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 49,
        "fromName" : "LogicalRelation",
        "toId" : 48,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 52,
        "fromName" : "LogicalRelation",
        "toId" : 51,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 51,
        "fromName" : "Filter",
        "toId" : 50,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 50,
        "fromName" : "Project",
        "toId" : 48,
        "toName" : "Filter",
        "linkType" : "Subquery"
      }, {
        "fromId" : 48,
        "fromName" : "Filter",
        "toId" : 47,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 47,
        "fromName" : "Project",
        "toId" : 46,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 50,
        "fromName" : "Project",
        "toId" : 46,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 46,
        "fromName" : "Join",
        "toId" : 45,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 45,
        "fromName" : "Project",
        "toId" : 44,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 55,
        "fromName" : "LogicalRelation",
        "toId" : 54,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 54,
        "fromName" : "Filter",
        "toId" : 53,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 53,
        "fromName" : "Project",
        "toId" : 44,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 44,
        "fromName" : "Join",
        "toId" : 43,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 43,
        "fromName" : "Project",
        "toId" : 42,
        "toName" : "Aggregate",
        "linkType" : "Operator"
      }, {
        "fromId" : 42,
        "fromName" : "Aggregate",
        "toId" : 41,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 41,
        "fromName" : "Filter",
        "toId" : 10,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 10,
        "fromName" : "Join",
        "toId" : 9,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 9,
        "fromName" : "Project",
        "toId" : 8,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 63,
        "fromName" : "LogicalRelation",
        "toId" : 62,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 66,
        "fromName" : "LogicalRelation",
        "toId" : 65,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 65,
        "fromName" : "Filter",
        "toId" : 64,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 64,
        "fromName" : "Project",
        "toId" : 62,
        "toName" : "Filter",
        "linkType" : "Subquery"
      }, {
        "fromId" : 62,
        "fromName" : "Filter",
        "toId" : 61,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 61,
        "fromName" : "Project",
        "toId" : 60,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 64,
        "fromName" : "Project",
        "toId" : 60,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 60,
        "fromName" : "Join",
        "toId" : 59,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 59,
        "fromName" : "Project",
        "toId" : 58,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 69,
        "fromName" : "LogicalRelation",
        "toId" : 68,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 68,
        "fromName" : "Filter",
        "toId" : 67,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 67,
        "fromName" : "Project",
        "toId" : 58,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 58,
        "fromName" : "Join",
        "toId" : 57,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 57,
        "fromName" : "Project",
        "toId" : 56,
        "toName" : "Aggregate",
        "linkType" : "Operator"
      }, {
        "fromId" : 56,
        "fromName" : "Aggregate",
        "toId" : 8,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 8,
        "fromName" : "Join",
        "toId" : 7,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 7,
        "fromName" : "Project",
        "toId" : 6,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 78,
        "fromName" : "LogicalRelation",
        "toId" : 77,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 81,
        "fromName" : "LogicalRelation",
        "toId" : 80,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 80,
        "fromName" : "Filter",
        "toId" : 79,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 79,
        "fromName" : "Project",
        "toId" : 77,
        "toName" : "Filter",
        "linkType" : "Subquery"
      }, {
        "fromId" : 77,
        "fromName" : "Filter",
        "toId" : 76,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 76,
        "fromName" : "Project",
        "toId" : 75,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 79,
        "fromName" : "Project",
        "toId" : 75,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 75,
        "fromName" : "Join",
        "toId" : 74,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 74,
        "fromName" : "Project",
        "toId" : 73,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 84,
        "fromName" : "LogicalRelation",
        "toId" : 83,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 83,
        "fromName" : "Filter",
        "toId" : 82,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 82,
        "fromName" : "Project",
        "toId" : 73,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 73,
        "fromName" : "Join",
        "toId" : 72,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 72,
        "fromName" : "Project",
        "toId" : 71,
        "toName" : "Aggregate",
        "linkType" : "Operator"
      }, {
        "fromId" : 71,
        "fromName" : "Aggregate",
        "toId" : 70,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 70,
        "fromName" : "Filter",
        "toId" : 6,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 6,
        "fromName" : "Join",
        "toId" : 5,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 5,
        "fromName" : "Project",
        "toId" : 4,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 92,
        "fromName" : "LogicalRelation",
        "toId" : 91,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 95,
        "fromName" : "LogicalRelation",
        "toId" : 94,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 94,
        "fromName" : "Filter",
        "toId" : 93,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 93,
        "fromName" : "Project",
        "toId" : 91,
        "toName" : "Filter",
        "linkType" : "Subquery"
      }, {
        "fromId" : 91,
        "fromName" : "Filter",
        "toId" : 90,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 90,
        "fromName" : "Project",
        "toId" : 89,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 93,
        "fromName" : "Project",
        "toId" : 89,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 89,
        "fromName" : "Join",
        "toId" : 88,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 88,
        "fromName" : "Project",
        "toId" : 87,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 98,
        "fromName" : "LogicalRelation",
        "toId" : 97,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 97,
        "fromName" : "Filter",
        "toId" : 96,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 96,
        "fromName" : "Project",
        "toId" : 87,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 87,
        "fromName" : "Join",
        "toId" : 86,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 86,
        "fromName" : "Project",
        "toId" : 85,
        "toName" : "Aggregate",
        "linkType" : "Operator"
      }, {
        "fromId" : 85,
        "fromName" : "Aggregate",
        "toId" : 4,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 4,
        "fromName" : "Join",
        "toId" : 3,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 3,
        "fromName" : "Project",
        "toId" : 2,
        "toName" : "Sort",
        "linkType" : "Operator"
      }, {
        "fromId" : 2,
        "fromName" : "Sort",
        "toId" : 1,
        "toName" : "LocalLimit",
        "linkType" : "Operator"
      }, {
        "fromId" : 1,
        "fromName" : "LocalLimit",
        "toId" : 0,
        "toName" : "GlobalLimit",
        "linkType" : "Operator"
      } ],
      "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [customer_id#271 ASC NULLS FIRST, customer_first_name#272 ASC NULLS FIRST, customer_last_name#273 ASC NULLS FIRST, customer_email_address#277 ASC NULLS FIRST], true\n      +- Project [customer_id#271, customer_first_name#272, customer_last_name#273, customer_email_address#277]\n         +- Join Inner, ((customer_id#0 = customer_id#311) AND (CASE WHEN (year_total#18 > 0.000000) THEN (year_total#299 / year_total#18) END > CASE WHEN (year_total#28 > 0.000000) THEN (year_total#319 / year_total#28) END))\n            :- Project [customer_id#0, customer_id#271, customer_first_name#272, customer_last_name#273, customer_email_address#277, year_total#18, year_total#299, year_total#28]\n            :  +- Join Inner, (customer_id#0 = customer_id#20)\n            :     :- Project [customer_id#0, customer_id#271, customer_first_name#272, customer_last_name#273, customer_email_address#277, year_total#18, year_total#299]\n            :     :  +- Join Inner, ((customer_id#0 = customer_id#291) AND (CASE WHEN (year_total#18 > 0.000000) THEN (year_total#299 / year_total#18) END > CASE WHEN (year_total#8 > 0.000000) THEN (year_total#279 / year_total#8) END))\n            :     :     :- Project [customer_id#0, year_total#8, customer_id#271, customer_first_name#272, customer_last_name#273, customer_email_address#277, year_total#279, year_total#18]\n            :     :     :  +- Join Inner, (customer_id#0 = customer_id#10)\n            :     :     :     :- Join Inner, (customer_id#271 = customer_id#0)\n            :     :     :     :  :- Filter (isnotnull(year_total#8) AND (year_total#8 > 0.000000))\n            :     :     :     :  :  +- Aggregate [c_customer_id#31, c_first_name#38, c_last_name#39, c_preferred_cust_flag#40, c_birth_country#44, c_login#45, c_email_address#46, d_year#77], [c_customer_id#31 AS customer_id#0, sum(((((ss_ext_list_price#64 - ss_ext_wholesale_cost#63) - ss_ext_discount_amt#61) + ss_ext_sales_price#62) / 2)) AS year_total#8]\n            :     :     :     :  :     +- Project [c_customer_id#31, c_first_name#38, c_last_name#39, c_preferred_cust_flag#40, c_birth_country#44, c_login#45, c_email_address#46, ss_ext_discount_amt#61, ss_ext_sales_price#62, ss_ext_wholesale_cost#63, ss_ext_list_price#64, d_year#77]\n            :     :     :     :  :        +- Join Inner, (c_customer_sk#30 = ss_customer_sk#50)\n            :     :     :     :  :           :- Project [ss_customer_sk#50, ss_ext_discount_amt#61, ss_ext_sales_price#62, ss_ext_wholesale_cost#63, ss_ext_list_price#64, d_year#77]\n            :     :     :     :  :           :  +- Join Inner, (ss_sold_date_sk#70 = d_date_sk#71)\n            :     :     :     :  :           :     :- Project [ss_customer_sk#50, ss_ext_discount_amt#61, ss_ext_sales_price#62, ss_ext_wholesale_cost#63, ss_ext_list_price#64, ss_sold_date_sk#70]\n            :     :     :     :  :           :     :  +- Filter ((isnotnull(ss_customer_sk#50) AND isnotnull(ss_sold_date_sk#70)) AND dynamicpruning#2815 [ss_sold_date_sk#70])\n            :     :     :     :  :           :     :     :  +- Project [d_date_sk#71, d_year#77]\n            :     :     :     :  :           :     :     :     +- Filter ((isnotnull(d_year#77) AND (d_year#77 = 2001)) AND isnotnull(d_date_sk#71))\n            :     :     :     :  :           :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#71,d_date_id#72,d_date#73,d_month_seq#74,d_week_seq#75,d_quarter_seq#76,d_year#77,d_dow#78,d_moy#79,d_dom#80,d_qoy#81,d_fy_year#82,d_fy_quarter_seq#83,d_fy_week_seq#84,d_day_name#85,d_quarter_name#86,d_holiday#87,d_weekend#88,d_following_holiday#89,d_first_dom#90,d_last_dom#91,d_same_day_ly#92,d_same_day_lq#93,d_current_day#94,... 4 more fields] parquet\n            :     :     :     :  :           :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#48,ss_item_sk#49,ss_customer_sk#50,ss_cdemo_sk#51,ss_hdemo_sk#52,ss_addr_sk#53,ss_store_sk#54,ss_promo_sk#55,ss_ticket_number#56L,ss_quantity#57,ss_wholesale_cost#58,ss_list_price#59,ss_sales_price#60,ss_ext_discount_amt#61,ss_ext_sales_price#62,ss_ext_wholesale_cost#63,ss_ext_list_price#64,ss_ext_tax#65,ss_coupon_amt#66,ss_net_paid#67,ss_net_paid_inc_tax#68,ss_net_profit#69,ss_sold_date_sk#70] parquet\n            :     :     :     :  :           :     +- Project [d_date_sk#71, d_year#77]\n            :     :     :     :  :           :        +- Filter ((isnotnull(d_year#77) AND (d_year#77 = 2001)) AND isnotnull(d_date_sk#71))\n            :     :     :     :  :           :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#71,d_date_id#72,d_date#73,d_month_seq#74,d_week_seq#75,d_quarter_seq#76,d_year#77,d_dow#78,d_moy#79,d_dom#80,d_qoy#81,d_fy_year#82,d_fy_quarter_seq#83,d_fy_week_seq#84,d_day_name#85,d_quarter_name#86,d_holiday#87,d_weekend#88,d_following_holiday#89,d_first_dom#90,d_last_dom#91,d_same_day_ly#92,d_same_day_lq#93,d_current_day#94,... 4 more fields] parquet\n            :     :     :     :  :           +- Project [c_customer_sk#30, c_customer_id#31, c_first_name#38, c_last_name#39, c_preferred_cust_flag#40, c_birth_country#44, c_login#45, c_email_address#46]\n            :     :     :     :  :              +- Filter (isnotnull(c_customer_sk#30) AND isnotnull(c_customer_id#31))\n            :     :     :     :  :                 +- Relation spark_catalog.tpcds_100.customer[c_customer_sk#30,c_customer_id#31,c_current_cdemo_sk#32,c_current_hdemo_sk#33,c_current_addr_sk#34,c_first_shipto_date_sk#35,c_first_sales_date_sk#36,c_salutation#37,c_first_name#38,c_last_name#39,c_preferred_cust_flag#40,c_birth_day#41,c_birth_month#42,c_birth_year#43,c_birth_country#44,c_login#45,c_email_address#46,c_last_review_date#47] parquet\n            :     :     :     :  +- Aggregate [c_customer_id#1521, c_first_name#1528, c_last_name#1529, c_preferred_cust_flag#1530, c_birth_country#1534, c_login#1535, c_email_address#1536, d_year#1567], [c_customer_id#1521 AS customer_id#271, c_first_name#1528 AS customer_first_name#272, c_last_name#1529 AS customer_last_name#273, c_email_address#1536 AS customer_email_address#277, sum(((((ss_ext_list_price#1554 - ss_ext_wholesale_cost#1553) - ss_ext_discount_amt#1551) + ss_ext_sales_price#1552) / 2)) AS year_total#279]\n            :     :     :     :     +- Project [c_customer_id#1521, c_first_name#1528, c_last_name#1529, c_preferred_cust_flag#1530, c_birth_country#1534, c_login#1535, c_email_address#1536, ss_ext_discount_amt#1551, ss_ext_sales_price#1552, ss_ext_wholesale_cost#1553, ss_ext_list_price#1554, d_year#1567]\n            :     :     :     :        +- Join Inner, (c_customer_sk#1520 = ss_customer_sk#1540)\n            :     :     :     :           :- Project [ss_customer_sk#1540, ss_ext_discount_amt#1551, ss_ext_sales_price#1552, ss_ext_wholesale_cost#1553, ss_ext_list_price#1554, d_year#1567]\n            :     :     :     :           :  +- Join Inner, (ss_sold_date_sk#1560 = d_date_sk#1561)\n            :     :     :     :           :     :- Project [ss_customer_sk#1540, ss_ext_discount_amt#1551, ss_ext_sales_price#1552, ss_ext_wholesale_cost#1553, ss_ext_list_price#1554, ss_sold_date_sk#1560]\n            :     :     :     :           :     :  +- Filter ((isnotnull(ss_customer_sk#1540) AND isnotnull(ss_sold_date_sk#1560)) AND dynamicpruning#2816 [ss_sold_date_sk#1560])\n            :     :     :     :           :     :     :  +- Project [d_date_sk#1561, d_year#1567]\n            :     :     :     :           :     :     :     +- Filter ((isnotnull(d_year#1567) AND (d_year#1567 = 2002)) AND isnotnull(d_date_sk#1561))\n            :     :     :     :           :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#1561,d_date_id#1562,d_date#1563,d_month_seq#1564,d_week_seq#1565,d_quarter_seq#1566,d_year#1567,d_dow#1568,d_moy#1569,d_dom#1570,d_qoy#1571,d_fy_year#1572,d_fy_quarter_seq#1573,d_fy_week_seq#1574,d_day_name#1575,d_quarter_name#1576,d_holiday#1577,d_weekend#1578,d_following_holiday#1579,d_first_dom#1580,d_last_dom#1581,d_same_day_ly#1582,d_same_day_lq#1583,d_current_day#1584,... 4 more fields] parquet\n            :     :     :     :           :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#1538,ss_item_sk#1539,ss_customer_sk#1540,ss_cdemo_sk#1541,ss_hdemo_sk#1542,ss_addr_sk#1543,ss_store_sk#1544,ss_promo_sk#1545,ss_ticket_number#1546L,ss_quantity#1547,ss_wholesale_cost#1548,ss_list_price#1549,ss_sales_price#1550,ss_ext_discount_amt#1551,ss_ext_sales_price#1552,ss_ext_wholesale_cost#1553,ss_ext_list_price#1554,ss_ext_tax#1555,ss_coupon_amt#1556,ss_net_paid#1557,ss_net_paid_inc_tax#1558,ss_net_profit#1559,ss_sold_date_sk#1560] parquet\n            :     :     :     :           :     +- Project [d_date_sk#1561, d_year#1567]\n            :     :     :     :           :        +- Filter ((isnotnull(d_year#1567) AND (d_year#1567 = 2002)) AND isnotnull(d_date_sk#1561))\n            :     :     :     :           :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#1561,d_date_id#1562,d_date#1563,d_month_seq#1564,d_week_seq#1565,d_quarter_seq#1566,d_year#1567,d_dow#1568,d_moy#1569,d_dom#1570,d_qoy#1571,d_fy_year#1572,d_fy_quarter_seq#1573,d_fy_week_seq#1574,d_day_name#1575,d_quarter_name#1576,d_holiday#1577,d_weekend#1578,d_following_holiday#1579,d_first_dom#1580,d_last_dom#1581,d_same_day_ly#1582,d_same_day_lq#1583,d_current_day#1584,... 4 more fields] parquet\n            :     :     :     :           +- Project [c_customer_sk#1520, c_customer_id#1521, c_first_name#1528, c_last_name#1529, c_preferred_cust_flag#1530, c_birth_country#1534, c_login#1535, c_email_address#1536]\n            :     :     :     :              +- Filter (isnotnull(c_customer_sk#1520) AND isnotnull(c_customer_id#1521))\n            :     :     :     :                 +- Relation spark_catalog.tpcds_100.customer[c_customer_sk#1520,c_customer_id#1521,c_current_cdemo_sk#1522,c_current_hdemo_sk#1523,c_current_addr_sk#1524,c_first_shipto_date_sk#1525,c_first_sales_date_sk#1526,c_salutation#1527,c_first_name#1528,c_last_name#1529,c_preferred_cust_flag#1530,c_birth_day#1531,c_birth_month#1532,c_birth_year#1533,c_birth_country#1534,c_login#1535,c_email_address#1536,c_last_review_date#1537] parquet\n            :     :     :     +- Filter (isnotnull(year_total#18) AND (year_total#18 > 0.000000))\n            :     :     :        +- Aggregate [c_customer_id#1829, c_first_name#1836, c_last_name#1837, c_preferred_cust_flag#1838, c_birth_country#1842, c_login#1843, c_email_address#1844, d_year#1886], [c_customer_id#1829 AS customer_id#10, sum(((((cs_ext_list_price#1870 - cs_ext_wholesale_cost#1869) - cs_ext_discount_amt#1867) + cs_ext_sales_price#1868) / 2)) AS year_total#18]\n            :     :     :           +- Project [c_customer_id#1829, c_first_name#1836, c_last_name#1837, c_preferred_cust_flag#1838, c_birth_country#1842, c_login#1843, c_email_address#1844, cs_ext_discount_amt#1867, cs_ext_sales_price#1868, cs_ext_wholesale_cost#1869, cs_ext_list_price#1870, d_year#1886]\n            :     :     :              +- Join Inner, (c_customer_sk#1828 = cs_bill_customer_sk#1848)\n            :     :     :                 :- Project [cs_bill_customer_sk#1848, cs_ext_discount_amt#1867, cs_ext_sales_price#1868, cs_ext_wholesale_cost#1869, cs_ext_list_price#1870, d_year#1886]\n            :     :     :                 :  +- Join Inner, (cs_sold_date_sk#1879 = d_date_sk#1880)\n            :     :     :                 :     :- Project [cs_bill_customer_sk#1848, cs_ext_discount_amt#1867, cs_ext_sales_price#1868, cs_ext_wholesale_cost#1869, cs_ext_list_price#1870, cs_sold_date_sk#1879]\n            :     :     :                 :     :  +- Filter ((isnotnull(cs_bill_customer_sk#1848) AND isnotnull(cs_sold_date_sk#1879)) AND dynamicpruning#2817 [cs_sold_date_sk#1879])\n            :     :     :                 :     :     :  +- Project [d_date_sk#1880, d_year#1886]\n            :     :     :                 :     :     :     +- Filter ((isnotnull(d_year#1886) AND (d_year#1886 = 2001)) AND isnotnull(d_date_sk#1880))\n            :     :     :                 :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#1880,d_date_id#1881,d_date#1882,d_month_seq#1883,d_week_seq#1884,d_quarter_seq#1885,d_year#1886,d_dow#1887,d_moy#1888,d_dom#1889,d_qoy#1890,d_fy_year#1891,d_fy_quarter_seq#1892,d_fy_week_seq#1893,d_day_name#1894,d_quarter_name#1895,d_holiday#1896,d_weekend#1897,d_following_holiday#1898,d_first_dom#1899,d_last_dom#1900,d_same_day_ly#1901,d_same_day_lq#1902,d_current_day#1903,... 4 more fields] parquet\n            :     :     :                 :     :     +- Relation spark_catalog.tpcds_100.catalog_sales[cs_sold_time_sk#1846,cs_ship_date_sk#1847,cs_bill_customer_sk#1848,cs_bill_cdemo_sk#1849,cs_bill_hdemo_sk#1850,cs_bill_addr_sk#1851,cs_ship_customer_sk#1852,cs_ship_cdemo_sk#1853,cs_ship_hdemo_sk#1854,cs_ship_addr_sk#1855,cs_call_center_sk#1856,cs_catalog_page_sk#1857,cs_ship_mode_sk#1858,cs_warehouse_sk#1859,cs_item_sk#1860,cs_promo_sk#1861,cs_order_number#1862L,cs_quantity#1863,cs_wholesale_cost#1864,cs_list_price#1865,cs_sales_price#1866,cs_ext_discount_amt#1867,cs_ext_sales_price#1868,cs_ext_wholesale_cost#1869,... 10 more fields] parquet\n            :     :     :                 :     +- Project [d_date_sk#1880, d_year#1886]\n            :     :     :                 :        +- Filter ((isnotnull(d_year#1886) AND (d_year#1886 = 2001)) AND isnotnull(d_date_sk#1880))\n            :     :     :                 :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#1880,d_date_id#1881,d_date#1882,d_month_seq#1883,d_week_seq#1884,d_quarter_seq#1885,d_year#1886,d_dow#1887,d_moy#1888,d_dom#1889,d_qoy#1890,d_fy_year#1891,d_fy_quarter_seq#1892,d_fy_week_seq#1893,d_day_name#1894,d_quarter_name#1895,d_holiday#1896,d_weekend#1897,d_following_holiday#1898,d_first_dom#1899,d_last_dom#1900,d_same_day_ly#1901,d_same_day_lq#1902,d_current_day#1903,... 4 more fields] parquet\n            :     :     :                 +- Project [c_customer_sk#1828, c_customer_id#1829, c_first_name#1836, c_last_name#1837, c_preferred_cust_flag#1838, c_birth_country#1842, c_login#1843, c_email_address#1844]\n            :     :     :                    +- Filter (isnotnull(c_customer_sk#1828) AND isnotnull(c_customer_id#1829))\n            :     :     :                       +- Relation spark_catalog.tpcds_100.customer[c_customer_sk#1828,c_customer_id#1829,c_current_cdemo_sk#1830,c_current_hdemo_sk#1831,c_current_addr_sk#1832,c_first_shipto_date_sk#1833,c_first_sales_date_sk#1834,c_salutation#1835,c_first_name#1836,c_last_name#1837,c_preferred_cust_flag#1838,c_birth_day#1839,c_birth_month#1840,c_birth_year#1841,c_birth_country#1842,c_login#1843,c_email_address#1844,c_last_review_date#1845] parquet\n            :     :     +- Aggregate [c_customer_id#2068, c_first_name#2075, c_last_name#2076, c_preferred_cust_flag#2077, c_birth_country#2081, c_login#2082, c_email_address#2083, d_year#2125], [c_customer_id#2068 AS customer_id#291, sum(((((cs_ext_list_price#2109 - cs_ext_wholesale_cost#2108) - cs_ext_discount_amt#2106) + cs_ext_sales_price#2107) / 2)) AS year_total#299]\n            :     :        +- Project [c_customer_id#2068, c_first_name#2075, c_last_name#2076, c_preferred_cust_flag#2077, c_birth_country#2081, c_login#2082, c_email_address#2083, cs_ext_discount_amt#2106, cs_ext_sales_price#2107, cs_ext_wholesale_cost#2108, cs_ext_list_price#2109, d_year#2125]\n            :     :           +- Join Inner, (c_customer_sk#2067 = cs_bill_customer_sk#2087)\n            :     :              :- Project [cs_bill_customer_sk#2087, cs_ext_discount_amt#2106, cs_ext_sales_price#2107, cs_ext_wholesale_cost#2108, cs_ext_list_price#2109, d_year#2125]\n            :     :              :  +- Join Inner, (cs_sold_date_sk#2118 = d_date_sk#2119)\n            :     :              :     :- Project [cs_bill_customer_sk#2087, cs_ext_discount_amt#2106, cs_ext_sales_price#2107, cs_ext_wholesale_cost#2108, cs_ext_list_price#2109, cs_sold_date_sk#2118]\n            :     :              :     :  +- Filter ((isnotnull(cs_bill_customer_sk#2087) AND isnotnull(cs_sold_date_sk#2118)) AND dynamicpruning#2818 [cs_sold_date_sk#2118])\n            :     :              :     :     :  +- Project [d_date_sk#2119, d_year#2125]\n            :     :              :     :     :     +- Filter ((isnotnull(d_year#2125) AND (d_year#2125 = 2002)) AND isnotnull(d_date_sk#2119))\n            :     :              :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#2119,d_date_id#2120,d_date#2121,d_month_seq#2122,d_week_seq#2123,d_quarter_seq#2124,d_year#2125,d_dow#2126,d_moy#2127,d_dom#2128,d_qoy#2129,d_fy_year#2130,d_fy_quarter_seq#2131,d_fy_week_seq#2132,d_day_name#2133,d_quarter_name#2134,d_holiday#2135,d_weekend#2136,d_following_holiday#2137,d_first_dom#2138,d_last_dom#2139,d_same_day_ly#2140,d_same_day_lq#2141,d_current_day#2142,... 4 more fields] parquet\n            :     :              :     :     +- Relation spark_catalog.tpcds_100.catalog_sales[cs_sold_time_sk#2085,cs_ship_date_sk#2086,cs_bill_customer_sk#2087,cs_bill_cdemo_sk#2088,cs_bill_hdemo_sk#2089,cs_bill_addr_sk#2090,cs_ship_customer_sk#2091,cs_ship_cdemo_sk#2092,cs_ship_hdemo_sk#2093,cs_ship_addr_sk#2094,cs_call_center_sk#2095,cs_catalog_page_sk#2096,cs_ship_mode_sk#2097,cs_warehouse_sk#2098,cs_item_sk#2099,cs_promo_sk#2100,cs_order_number#2101L,cs_quantity#2102,cs_wholesale_cost#2103,cs_list_price#2104,cs_sales_price#2105,cs_ext_discount_amt#2106,cs_ext_sales_price#2107,cs_ext_wholesale_cost#2108,... 10 more fields] parquet\n            :     :              :     +- Project [d_date_sk#2119, d_year#2125]\n            :     :              :        +- Filter ((isnotnull(d_year#2125) AND (d_year#2125 = 2002)) AND isnotnull(d_date_sk#2119))\n            :     :              :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#2119,d_date_id#2120,d_date#2121,d_month_seq#2122,d_week_seq#2123,d_quarter_seq#2124,d_year#2125,d_dow#2126,d_moy#2127,d_dom#2128,d_qoy#2129,d_fy_year#2130,d_fy_quarter_seq#2131,d_fy_week_seq#2132,d_day_name#2133,d_quarter_name#2134,d_holiday#2135,d_weekend#2136,d_following_holiday#2137,d_first_dom#2138,d_last_dom#2139,d_same_day_ly#2140,d_same_day_lq#2141,d_current_day#2142,... 4 more fields] parquet\n            :     :              +- Project [c_customer_sk#2067, c_customer_id#2068, c_first_name#2075, c_last_name#2076, c_preferred_cust_flag#2077, c_birth_country#2081, c_login#2082, c_email_address#2083]\n            :     :                 +- Filter (isnotnull(c_customer_sk#2067) AND isnotnull(c_customer_id#2068))\n            :     :                    +- Relation spark_catalog.tpcds_100.customer[c_customer_sk#2067,c_customer_id#2068,c_current_cdemo_sk#2069,c_current_hdemo_sk#2070,c_current_addr_sk#2071,c_first_shipto_date_sk#2072,c_first_sales_date_sk#2073,c_salutation#2074,c_first_name#2075,c_last_name#2076,c_preferred_cust_flag#2077,c_birth_day#2078,c_birth_month#2079,c_birth_year#2080,c_birth_country#2081,c_login#2082,c_email_address#2083,c_last_review_date#2084] parquet\n            :     +- Filter (isnotnull(year_total#28) AND (year_total#28 > 0.000000))\n            :        +- Aggregate [c_customer_id#2387, c_first_name#2394, c_last_name#2395, c_preferred_cust_flag#2396, c_birth_country#2400, c_login#2401, c_email_address#2402, d_year#2444], [c_customer_id#2387 AS customer_id#20, sum(((((ws_ext_list_price#2428 - ws_ext_wholesale_cost#2427) - ws_ext_discount_amt#2425) + ws_ext_sales_price#2426) / 2)) AS year_total#28]\n            :           +- Project [c_customer_id#2387, c_first_name#2394, c_last_name#2395, c_preferred_cust_flag#2396, c_birth_country#2400, c_login#2401, c_email_address#2402, ws_ext_discount_amt#2425, ws_ext_sales_price#2426, ws_ext_wholesale_cost#2427, ws_ext_list_price#2428, d_year#2444]\n            :              +- Join Inner, (c_customer_sk#2386 = ws_bill_customer_sk#2407)\n            :                 :- Project [ws_bill_customer_sk#2407, ws_ext_discount_amt#2425, ws_ext_sales_price#2426, ws_ext_wholesale_cost#2427, ws_ext_list_price#2428, d_year#2444]\n            :                 :  +- Join Inner, (ws_sold_date_sk#2437 = d_date_sk#2438)\n            :                 :     :- Project [ws_bill_customer_sk#2407, ws_ext_discount_amt#2425, ws_ext_sales_price#2426, ws_ext_wholesale_cost#2427, ws_ext_list_price#2428, ws_sold_date_sk#2437]\n            :                 :     :  +- Filter ((isnotnull(ws_bill_customer_sk#2407) AND isnotnull(ws_sold_date_sk#2437)) AND dynamicpruning#2819 [ws_sold_date_sk#2437])\n            :                 :     :     :  +- Project [d_date_sk#2438, d_year#2444]\n            :                 :     :     :     +- Filter ((isnotnull(d_year#2444) AND (d_year#2444 = 2001)) AND isnotnull(d_date_sk#2438))\n            :                 :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#2438,d_date_id#2439,d_date#2440,d_month_seq#2441,d_week_seq#2442,d_quarter_seq#2443,d_year#2444,d_dow#2445,d_moy#2446,d_dom#2447,d_qoy#2448,d_fy_year#2449,d_fy_quarter_seq#2450,d_fy_week_seq#2451,d_day_name#2452,d_quarter_name#2453,d_holiday#2454,d_weekend#2455,d_following_holiday#2456,d_first_dom#2457,d_last_dom#2458,d_same_day_ly#2459,d_same_day_lq#2460,d_current_day#2461,... 4 more fields] parquet\n            :                 :     :     +- Relation spark_catalog.tpcds_100.web_sales[ws_sold_time_sk#2404,ws_ship_date_sk#2405,ws_item_sk#2406,ws_bill_customer_sk#2407,ws_bill_cdemo_sk#2408,ws_bill_hdemo_sk#2409,ws_bill_addr_sk#2410,ws_ship_customer_sk#2411,ws_ship_cdemo_sk#2412,ws_ship_hdemo_sk#2413,ws_ship_addr_sk#2414,ws_web_page_sk#2415,ws_web_site_sk#2416,ws_ship_mode_sk#2417,ws_warehouse_sk#2418,ws_promo_sk#2419,ws_order_number#2420L,ws_quantity#2421,ws_wholesale_cost#2422,ws_list_price#2423,ws_sales_price#2424,ws_ext_discount_amt#2425,ws_ext_sales_price#2426,ws_ext_wholesale_cost#2427,... 10 more fields] parquet\n            :                 :     +- Project [d_date_sk#2438, d_year#2444]\n            :                 :        +- Filter ((isnotnull(d_year#2444) AND (d_year#2444 = 2001)) AND isnotnull(d_date_sk#2438))\n            :                 :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#2438,d_date_id#2439,d_date#2440,d_month_seq#2441,d_week_seq#2442,d_quarter_seq#2443,d_year#2444,d_dow#2445,d_moy#2446,d_dom#2447,d_qoy#2448,d_fy_year#2449,d_fy_quarter_seq#2450,d_fy_week_seq#2451,d_day_name#2452,d_quarter_name#2453,d_holiday#2454,d_weekend#2455,d_following_holiday#2456,d_first_dom#2457,d_last_dom#2458,d_same_day_ly#2459,d_same_day_lq#2460,d_current_day#2461,... 4 more fields] parquet\n            :                 +- Project [c_customer_sk#2386, c_customer_id#2387, c_first_name#2394, c_last_name#2395, c_preferred_cust_flag#2396, c_birth_country#2400, c_login#2401, c_email_address#2402]\n            :                    +- Filter (isnotnull(c_customer_sk#2386) AND isnotnull(c_customer_id#2387))\n            :                       +- Relation spark_catalog.tpcds_100.customer[c_customer_sk#2386,c_customer_id#2387,c_current_cdemo_sk#2388,c_current_hdemo_sk#2389,c_current_addr_sk#2390,c_first_shipto_date_sk#2391,c_first_sales_date_sk#2392,c_salutation#2393,c_first_name#2394,c_last_name#2395,c_preferred_cust_flag#2396,c_birth_day#2397,c_birth_month#2398,c_birth_year#2399,c_birth_country#2400,c_login#2401,c_email_address#2402,c_last_review_date#2403] parquet\n            +- Aggregate [c_customer_id#2626, c_first_name#2633, c_last_name#2634, c_preferred_cust_flag#2635, c_birth_country#2639, c_login#2640, c_email_address#2641, d_year#2683], [c_customer_id#2626 AS customer_id#311, sum(((((ws_ext_list_price#2667 - ws_ext_wholesale_cost#2666) - ws_ext_discount_amt#2664) + ws_ext_sales_price#2665) / 2)) AS year_total#319]\n               +- Project [c_customer_id#2626, c_first_name#2633, c_last_name#2634, c_preferred_cust_flag#2635, c_birth_country#2639, c_login#2640, c_email_address#2641, ws_ext_discount_amt#2664, ws_ext_sales_price#2665, ws_ext_wholesale_cost#2666, ws_ext_list_price#2667, d_year#2683]\n                  +- Join Inner, (c_customer_sk#2625 = ws_bill_customer_sk#2646)\n                     :- Project [ws_bill_customer_sk#2646, ws_ext_discount_amt#2664, ws_ext_sales_price#2665, ws_ext_wholesale_cost#2666, ws_ext_list_price#2667, d_year#2683]\n                     :  +- Join Inner, (ws_sold_date_sk#2676 = d_date_sk#2677)\n                     :     :- Project [ws_bill_customer_sk#2646, ws_ext_discount_amt#2664, ws_ext_sales_price#2665, ws_ext_wholesale_cost#2666, ws_ext_list_price#2667, ws_sold_date_sk#2676]\n                     :     :  +- Filter ((isnotnull(ws_bill_customer_sk#2646) AND isnotnull(ws_sold_date_sk#2676)) AND dynamicpruning#2820 [ws_sold_date_sk#2676])\n                     :     :     :  +- Project [d_date_sk#2677, d_year#2683]\n                     :     :     :     +- Filter ((isnotnull(d_year#2683) AND (d_year#2683 = 2002)) AND isnotnull(d_date_sk#2677))\n                     :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#2677,d_date_id#2678,d_date#2679,d_month_seq#2680,d_week_seq#2681,d_quarter_seq#2682,d_year#2683,d_dow#2684,d_moy#2685,d_dom#2686,d_qoy#2687,d_fy_year#2688,d_fy_quarter_seq#2689,d_fy_week_seq#2690,d_day_name#2691,d_quarter_name#2692,d_holiday#2693,d_weekend#2694,d_following_holiday#2695,d_first_dom#2696,d_last_dom#2697,d_same_day_ly#2698,d_same_day_lq#2699,d_current_day#2700,... 4 more fields] parquet\n                     :     :     +- Relation spark_catalog.tpcds_100.web_sales[ws_sold_time_sk#2643,ws_ship_date_sk#2644,ws_item_sk#2645,ws_bill_customer_sk#2646,ws_bill_cdemo_sk#2647,ws_bill_hdemo_sk#2648,ws_bill_addr_sk#2649,ws_ship_customer_sk#2650,ws_ship_cdemo_sk#2651,ws_ship_hdemo_sk#2652,ws_ship_addr_sk#2653,ws_web_page_sk#2654,ws_web_site_sk#2655,ws_ship_mode_sk#2656,ws_warehouse_sk#2657,ws_promo_sk#2658,ws_order_number#2659L,ws_quantity#2660,ws_wholesale_cost#2661,ws_list_price#2662,ws_sales_price#2663,ws_ext_discount_amt#2664,ws_ext_sales_price#2665,ws_ext_wholesale_cost#2666,... 10 more fields] parquet\n                     :     +- Project [d_date_sk#2677, d_year#2683]\n                     :        +- Filter ((isnotnull(d_year#2683) AND (d_year#2683 = 2002)) AND isnotnull(d_date_sk#2677))\n                     :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#2677,d_date_id#2678,d_date#2679,d_month_seq#2680,d_week_seq#2681,d_quarter_seq#2682,d_year#2683,d_dow#2684,d_moy#2685,d_dom#2686,d_qoy#2687,d_fy_year#2688,d_fy_quarter_seq#2689,d_fy_week_seq#2690,d_day_name#2691,d_quarter_name#2692,d_holiday#2693,d_weekend#2694,d_following_holiday#2695,d_first_dom#2696,d_last_dom#2697,d_same_day_ly#2698,d_same_day_lq#2699,d_current_day#2700,... 4 more fields] parquet\n                     +- Project [c_customer_sk#2625, c_customer_id#2626, c_first_name#2633, c_last_name#2634, c_preferred_cust_flag#2635, c_birth_country#2639, c_login#2640, c_email_address#2641]\n                        +- Filter (isnotnull(c_customer_sk#2625) AND isnotnull(c_customer_id#2626))\n                           +- Relation spark_catalog.tpcds_100.customer[c_customer_sk#2625,c_customer_id#2626,c_current_cdemo_sk#2627,c_current_hdemo_sk#2628,c_current_addr_sk#2629,c_first_shipto_date_sk#2630,c_first_sales_date_sk#2631,c_salutation#2632,c_first_name#2633,c_last_name#2634,c_preferred_cust_flag#2635,c_birth_day#2636,c_birth_month#2637,c_birth_year#2638,c_birth_country#2639,c_login#2640,c_email_address#2641,c_last_review_date#2642] parquet\n"
    },
    "IM" : {
      "inputSizeInBytes" : 176268370292,
      "inputRowCount" : 993042282
    },
    "PD" : { },
    "Configuration" : {
      "theta_c" : [ {
        "spark.executor.memory" : "1g"
      }, {
        "spark.executor.cores" : "1"
      }, {
        "spark.executor.instances" : "16"
      }, {
        "spark.default.parallelism" : "16"
      }, {
        "spark.reducer.maxSizeInFlight" : "48m"
      }, {
        "spark.shuffle.sort.bypassMergeThreshold" : "200"
      }, {
        "spark.shuffle.compress" : "true"
      }, {
        "spark.memory.fraction" : "0.6"
      } ],
      "theta_p" : [ {
        "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
      }, {
        "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
      }, {
        "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
      }, {
        "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
      }, {
        "spark.sql.shuffle.partitions" : "200"
      }, {
        "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
      }, {
        "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
      }, {
        "spark.sql.files.maxPartitionBytes" : "128MB"
      }, {
        "spark.sql.files.openCostInBytes" : "4MB"
      } ],
      "theta_s" : [ {
        "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
      }, {
        "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
      } ]
    }
  },
  "RuntimeLQPs" : {
    "12" : {
      "LQP" : {
        "operators" : {
          "12" : {
            "sign" : -1458191872,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 14302285452,
            "rowCount" : 275043951,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Filter (isnotnull(year_total#2829) AND (year_total#2829 > 0.000000)), ShuffleQueryStage 33 "
          },
          "8" : {
            "sign" : -1121457871,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 45044142156507206,
            "rowCount" : 193322498525782,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, ((customer_id#2821 = customer_id#2970) AND (CASE WHEN (year_total#2839 > 0.000000) THEN (year_total#2978 / year_total#2839) END > CASE WHEN (year_total#2829 > 0.000000) THEN (year_total#2958 / year_total#2829) END)) "
          },
          "19" : {
            "sign" : 404059991,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 3761782752,
            "rowCount" : 72341976,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [c_customer_id#5305, c_first_name#5312, c_last_name#5313, c_preferred_cust_flag#5314, c_birth_country#5318, c_login#5319, c_email_address#5320, d_year#5362], [c_customer_id#5305 AS customer_id#2990, sum(((((ws_ext_list_price#5346 - ws_ext_wholesale_cost#5345) - ws_ext_discount_amt#5343) + ws_ext_sales_price#5344) / 2)) AS year_total#2998], HashAggregate(keys=[c_customer_id#5305, c_first_name#5312, c_last_name#5313, c_preferred_cust_flag#5314, c_birth_country#5318, c_login#5319, c_email_address#5320, d_year#5362], functions=[sum(((((ws_ext_list_price#5346 - ws_ext_wholesale_cost#5345) - ws_ext_discount_amt#5343) + ws_ext_sales_price#5344) / 2))]) "
          },
          "4" : {
            "sign" : -1432651195,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 1464832108505221539147925,
            "rowCount" : 6286833083713397163725,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, ((customer_id#2821 = customer_id#2990) AND (CASE WHEN (year_total#2839 > 0.000000) THEN (year_total#2978 / year_total#2839) END > CASE WHEN (year_total#2849 > 0.000000) THEN (year_total#2998 / year_total#2849) END)) "
          },
          "15" : {
            "sign" : 802064549,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 7435110696,
            "rowCount" : 142982898,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [c_customer_id#4508, c_first_name#4515, c_last_name#4516, c_preferred_cust_flag#4517, c_birth_country#4521, c_login#4522, c_email_address#4523, d_year#4565], [c_customer_id#4508 AS customer_id#2831, sum(((((cs_ext_list_price#4549 - cs_ext_wholesale_cost#4548) - cs_ext_discount_amt#4546) + cs_ext_sales_price#4547) / 2)) AS year_total#2839], HashAggregate(keys=[c_customer_id#4508, c_first_name#4515, c_last_name#4516, c_preferred_cust_flag#4517, c_birth_country#4521, c_login#4522, c_email_address#4523, d_year#4565], functions=[sum(((((cs_ext_list_price#4549 - cs_ext_wholesale_cost#4548) - cs_ext_discount_amt#4546) + cs_ext_sales_price#4547) / 2))]) "
          },
          "11" : {
            "sign" : -813979643,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 6543653635943,
            "rowCount" : 37824587491,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (customer_id#2950 = customer_id#2821) "
          },
          "9" : {
            "sign" : 125515684,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 511081433268651,
            "rowCount" : 2704134567559,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [customer_id#2821, year_total#2829, customer_id#2950, customer_first_name#2951, customer_last_name#2952, customer_email_address#2956, year_total#2958, year_total#2839] "
          },
          "13" : {
            "sign" : 1410425053,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 35480669679,
            "rowCount" : 275043951,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [c_customer_id#4200, c_first_name#4207, c_last_name#4208, c_preferred_cust_flag#4209, c_birth_country#4213, c_login#4214, c_email_address#4215, d_year#4246], [c_customer_id#4200 AS customer_id#2950, c_first_name#4207 AS customer_first_name#2951, c_last_name#4208 AS customer_last_name#2952, c_email_address#4215 AS customer_email_address#2956, sum(((((ss_ext_list_price#4233 - ss_ext_wholesale_cost#4232) - ss_ext_discount_amt#4230) + ss_ext_sales_price#4231) / 2)) AS year_total#2958], HashAggregate(keys=[c_customer_id#4200, c_first_name#4207, c_last_name#4208, c_preferred_cust_flag#4209, c_birth_country#4213, c_login#4214, c_email_address#4215, d_year#4246], functions=[sum(((((ss_ext_list_price#4233 - ss_ext_wholesale_cost#4232) - ss_ext_discount_amt#4230) + ss_ext_sales_price#4231) / 2))]) "
          },
          "16" : {
            "sign" : -1414276816,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 7435110696,
            "rowCount" : 142982898,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [c_customer_id#4747, c_first_name#4754, c_last_name#4755, c_preferred_cust_flag#4756, c_birth_country#4760, c_login#4761, c_email_address#4762, d_year#4804], [c_customer_id#4747 AS customer_id#2970, sum(((((cs_ext_list_price#4788 - cs_ext_wholesale_cost#4787) - cs_ext_discount_amt#4785) + cs_ext_sales_price#4786) / 2)) AS year_total#2978], HashAggregate(keys=[c_customer_id#4747, c_first_name#4754, c_last_name#4755, c_preferred_cust_flag#4756, c_birth_country#4760, c_login#4761, c_email_address#4762, d_year#4804], functions=[sum(((((cs_ext_list_price#4788 - cs_ext_wholesale_cost#4787) - cs_ext_discount_amt#4785) + cs_ext_sales_price#4786) / 2))]) "
          },
          "5" : {
            "sign" : -997143357,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 32849847862099649142678,
            "rowCount" : 173808718847088090702,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [customer_id#2821, customer_id#2950, customer_first_name#2951, customer_last_name#2952, customer_email_address#2956, year_total#2839, year_total#2978, year_total#2849] "
          },
          "10" : {
            "sign" : 301273894,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 586797201160303,
            "rowCount" : 2704134567559,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (customer_id#2821 = customer_id#2831) "
          },
          "6" : {
            "sign" : -990078421,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 36326022239041410956718,
            "rowCount" : 173808718847088090702,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (customer_id#2821 = customer_id#2841) "
          },
          "1" : {
            "sign" : 2055440713,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
            "sizeInBytes" : 710412138459613879500925,
            "rowCount" : 6286833083713397163725,
            "isRuntime" : false,
            "predicate" : " (unknown) LocalLimit Arguments: 100 "
          },
          "17" : {
            "sign" : 482427057,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 39558684,
            "rowCount" : 899061,
            "isRuntime" : true,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(year_total#2849) AND (year_total#2849 > 0.000000)) "
          },
          "14" : {
            "sign" : -237935041,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 7435110696,
            "rowCount" : 142982898,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(year_total#2839) AND (year_total#2839 > 0.000000)) "
          },
          "0" : {
            "sign" : 1462767550,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
            "sizeInBytes" : 8800,
            "rowCount" : 100,
            "isRuntime" : false,
            "predicate" : " (unknown) GlobalLimit Arguments: 100 "
          },
          "2" : {
            "sign" : 1230237352,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 710412138459613879500925,
            "rowCount" : 6286833083713397163725,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [customer_id#2950 ASC NULLS FIRST, customer_first_name#2951 ASC NULLS FIRST, customer_last_name#2952 ASC NULLS FIRST, customer_email_address#2956 ASC NULLS FIRST], true "
          },
          "18" : {
            "sign" : -1463056171,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 166353440,
            "rowCount" : 899061,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [c_customer_id#5066, c_first_name#5073, c_last_name#5074, c_preferred_cust_flag#5075, c_birth_country#5079, c_login#5080, c_email_address#5081, d_year#5123], [c_customer_id#5066 AS customer_id#2841, sum(((((ws_ext_list_price#5107 - ws_ext_wholesale_cost#5106) - ws_ext_discount_amt#5104) + ws_ext_sales_price#5105) / 2)) AS year_total#2849], HashAggregate(keys=[c_customer_id#5066, c_first_name#5073, c_last_name#5074, c_preferred_cust_flag#5075, c_birth_country#5079, c_login#5080, c_email_address#5081, d_year#5123], functions=[sum(((((ws_ext_list_price#5107 - ws_ext_wholesale_cost#5106) - ws_ext_discount_amt#5104) + ws_ext_sales_price#5105) / 2))]) "
          },
          "7" : {
            "sign" : 1245164377,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 33444792244960286,
            "rowCount" : 193322498525782,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [customer_id#2821, customer_id#2950, customer_first_name#2951, customer_last_name#2952, customer_email_address#2956, year_total#2839, year_total#2978] "
          },
          "3" : {
            "sign" : -719211639,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 710412138459613879500925,
            "rowCount" : 6286833083713397163725,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [customer_id#2950, customer_first_name#2951, customer_last_name#2952, customer_email_address#2956] "
          }
        },
        "links" : [ {
          "fromId" : 12,
          "fromName" : "LogicalQueryStage",
          "toId" : 11,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 13,
          "fromName" : "LogicalQueryStage",
          "toId" : 11,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "Join",
          "toId" : 10,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 15,
          "fromName" : "LogicalQueryStage",
          "toId" : 14,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 14,
          "fromName" : "Filter",
          "toId" : 10,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "Join",
          "toId" : 9,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "Project",
          "toId" : 8,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 16,
          "fromName" : "LogicalQueryStage",
          "toId" : 8,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "Join",
          "toId" : 7,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Project",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 18,
          "fromName" : "LogicalQueryStage",
          "toId" : 17,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 17,
          "fromName" : "Filter",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Join",
          "toId" : 5,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Project",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 19,
          "fromName" : "LogicalQueryStage",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Join",
          "toId" : 3,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Project",
          "toId" : 2,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "LocalLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "LocalLimit",
          "toId" : 0,
          "toName" : "GlobalLimit",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [customer_id#2950 ASC NULLS FIRST, customer_first_name#2951 ASC NULLS FIRST, customer_last_name#2952 ASC NULLS FIRST, customer_email_address#2956 ASC NULLS FIRST], true\n      +- Project [customer_id#2950, customer_first_name#2951, customer_last_name#2952, customer_email_address#2956]\n         +- Join Inner, ((customer_id#2821 = customer_id#2990) AND (CASE WHEN (year_total#2839 > 0.000000) THEN (year_total#2978 / year_total#2839) END > CASE WHEN (year_total#2849 > 0.000000) THEN (year_total#2998 / year_total#2849) END))\n            :- Project [customer_id#2821, customer_id#2950, customer_first_name#2951, customer_last_name#2952, customer_email_address#2956, year_total#2839, year_total#2978, year_total#2849]\n            :  +- Join Inner, (customer_id#2821 = customer_id#2841)\n            :     :- Project [customer_id#2821, customer_id#2950, customer_first_name#2951, customer_last_name#2952, customer_email_address#2956, year_total#2839, year_total#2978]\n            :     :  +- Join Inner, ((customer_id#2821 = customer_id#2970) AND (CASE WHEN (year_total#2839 > 0.000000) THEN (year_total#2978 / year_total#2839) END > CASE WHEN (year_total#2829 > 0.000000) THEN (year_total#2958 / year_total#2829) END))\n            :     :     :- Project [customer_id#2821, year_total#2829, customer_id#2950, customer_first_name#2951, customer_last_name#2952, customer_email_address#2956, year_total#2958, year_total#2839]\n            :     :     :  +- Join Inner, (customer_id#2821 = customer_id#2831)\n            :     :     :     :- Join Inner, (customer_id#2950 = customer_id#2821)\n            :     :     :     :  :- LogicalQueryStage Filter (isnotnull(year_total#2829) AND (year_total#2829 > 0.000000)), ShuffleQueryStage 33\n            :     :     :     :  +- LogicalQueryStage Aggregate [c_customer_id#4200, c_first_name#4207, c_last_name#4208, c_preferred_cust_flag#4209, c_birth_country#4213, c_login#4214, c_email_address#4215, d_year#4246], [c_customer_id#4200 AS customer_id#2950, c_first_name#4207 AS customer_first_name#2951, c_last_name#4208 AS customer_last_name#2952, c_email_address#4215 AS customer_email_address#2956, sum(((((ss_ext_list_price#4233 - ss_ext_wholesale_cost#4232) - ss_ext_discount_amt#4230) + ss_ext_sales_price#4231) / 2)) AS year_total#2958], HashAggregate(keys=[c_customer_id#4200, c_first_name#4207, c_last_name#4208, c_preferred_cust_flag#4209, c_birth_country#4213, c_login#4214, c_email_address#4215, d_year#4246], functions=[sum(((((ss_ext_list_price#4233 - ss_ext_wholesale_cost#4232) - ss_ext_discount_amt#4230) + ss_ext_sales_price#4231) / 2))])\n            :     :     :     +- Filter (isnotnull(year_total#2839) AND (year_total#2839 > 0.000000))\n            :     :     :        +- LogicalQueryStage Aggregate [c_customer_id#4508, c_first_name#4515, c_last_name#4516, c_preferred_cust_flag#4517, c_birth_country#4521, c_login#4522, c_email_address#4523, d_year#4565], [c_customer_id#4508 AS customer_id#2831, sum(((((cs_ext_list_price#4549 - cs_ext_wholesale_cost#4548) - cs_ext_discount_amt#4546) + cs_ext_sales_price#4547) / 2)) AS year_total#2839], HashAggregate(keys=[c_customer_id#4508, c_first_name#4515, c_last_name#4516, c_preferred_cust_flag#4517, c_birth_country#4521, c_login#4522, c_email_address#4523, d_year#4565], functions=[sum(((((cs_ext_list_price#4549 - cs_ext_wholesale_cost#4548) - cs_ext_discount_amt#4546) + cs_ext_sales_price#4547) / 2))])\n            :     :     +- LogicalQueryStage Aggregate [c_customer_id#4747, c_first_name#4754, c_last_name#4755, c_preferred_cust_flag#4756, c_birth_country#4760, c_login#4761, c_email_address#4762, d_year#4804], [c_customer_id#4747 AS customer_id#2970, sum(((((cs_ext_list_price#4788 - cs_ext_wholesale_cost#4787) - cs_ext_discount_amt#4785) + cs_ext_sales_price#4786) / 2)) AS year_total#2978], HashAggregate(keys=[c_customer_id#4747, c_first_name#4754, c_last_name#4755, c_preferred_cust_flag#4756, c_birth_country#4760, c_login#4761, c_email_address#4762, d_year#4804], functions=[sum(((((cs_ext_list_price#4788 - cs_ext_wholesale_cost#4787) - cs_ext_discount_amt#4785) + cs_ext_sales_price#4786) / 2))])\n            :     +- Filter (isnotnull(year_total#2849) AND (year_total#2849 > 0.000000))\n            :        +- LogicalQueryStage Aggregate [c_customer_id#5066, c_first_name#5073, c_last_name#5074, c_preferred_cust_flag#5075, c_birth_country#5079, c_login#5080, c_email_address#5081, d_year#5123], [c_customer_id#5066 AS customer_id#2841, sum(((((ws_ext_list_price#5107 - ws_ext_wholesale_cost#5106) - ws_ext_discount_amt#5104) + ws_ext_sales_price#5105) / 2)) AS year_total#2849], HashAggregate(keys=[c_customer_id#5066, c_first_name#5073, c_last_name#5074, c_preferred_cust_flag#5075, c_birth_country#5079, c_login#5080, c_email_address#5081, d_year#5123], functions=[sum(((((ws_ext_list_price#5107 - ws_ext_wholesale_cost#5106) - ws_ext_discount_amt#5104) + ws_ext_sales_price#5105) / 2))])\n            +- LogicalQueryStage Aggregate [c_customer_id#5305, c_first_name#5312, c_last_name#5313, c_preferred_cust_flag#5314, c_birth_country#5318, c_login#5319, c_email_address#5320, d_year#5362], [c_customer_id#5305 AS customer_id#2990, sum(((((ws_ext_list_price#5346 - ws_ext_wholesale_cost#5345) - ws_ext_discount_amt#5343) + ws_ext_sales_price#5344) / 2)) AS year_total#2998], HashAggregate(keys=[c_customer_id#5305, c_first_name#5312, c_last_name#5313, c_preferred_cust_flag#5314, c_birth_country#5318, c_login#5319, c_email_address#5320, d_year#5362], functions=[sum(((((ws_ext_list_price#5346 - ws_ext_wholesale_cost#5345) - ws_ext_discount_amt#5343) + ws_ext_sales_price#5344) / 2))])\n"
      },
      "IM" : {
        "inputSizeInBytes" : 68581312715,
        "inputRowCount" : 909294735
      },
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 16,
        "FinishedTasksNum" : 13,
        "FinishedTasksTotalTimeInMs" : 48374.0,
        "FinishedTasksDistributionInMs" : [ 1420.0, 3747.0, 3810.0, 3922.0, 4259.0 ]
      },
      "StartTimeInMs" : 1702226538605,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 30073,
        "IOBytes" : {
          "Total" : 5067808847,
          "Details" : {
            "IR" : 0,
            "IW" : 0,
            "SR" : 4328690415,
            "SW" : 739118432
          }
        }
      }
    },
    "8" : {
      "LQP" : {
        "operators" : {
          "12" : {
            "sign" : 1582451270,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 14302285452,
            "rowCount" : 275043951,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(year_total#2829) AND (year_total#2829 > 0.000000)) "
          },
          "8" : {
            "sign" : -303425121,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 12834617673951686487729140450234923084547609712000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, ((customer_id#2821 = customer_id#2970) AND (CASE WHEN (year_total#2839 > 0.000000) THEN (year_total#2978 / year_total#2839) END > CASE WHEN (year_total#2829 > 0.000000) THEN (year_total#2958 / year_total#2829) END)) "
          },
          "19" : {
            "sign" : -237935041,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 7435110696,
            "rowCount" : 142982898,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(year_total#2839) AND (year_total#2839 > 0.000000)) "
          },
          "23" : {
            "sign" : -1247342346,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 53190244608000000,
            "rowCount" : 277032524000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (c_customer_sk#4746 = cs_bill_customer_sk#4766) "
          },
          "4" : {
            "sign" : -1506076595,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 190833843241182945278020122483989889353484815415173458222955755200000000000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, ((customer_id#2821 = customer_id#2990) AND (CASE WHEN (year_total#2839 > 0.000000) THEN (year_total#2978 / year_total#2839) END > CASE WHEN (year_total#2849 > 0.000000) THEN (year_total#2998 / year_total#2849) END)) "
          },
          "15" : {
            "sign" : 1578530028,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 19764196976000000,
            "rowCount" : 107414114000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_customer_id#4200, c_first_name#4207, c_last_name#4208, c_preferred_cust_flag#4209, c_birth_country#4213, c_login#4214, c_email_address#4215, ss_ext_discount_amt#4230, ss_ext_sales_price#4231, ss_ext_wholesale_cost#4232, ss_ext_list_price#4233, d_year#4246] "
          },
          "11" : {
            "sign" : -1621618442,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 159771801280173630912000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (customer_id#2950 = customer_id#2821) "
          },
          "9" : {
            "sign" : -1481577849,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 1052930002638154835938812044439272727,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [customer_id#2821, year_total#2829, customer_id#2950, customer_first_name#2951, customer_last_name#2952, customer_email_address#2956, year_total#2958, year_total#2839] "
          },
          "22" : {
            "sign" : -1411007706,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 50973984416000000,
            "rowCount" : 277032524000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_customer_id#4747, c_first_name#4754, c_last_name#4755, c_preferred_cust_flag#4756, c_birth_country#4760, c_login#4761, c_email_address#4762, cs_ext_discount_amt#4785, cs_ext_sales_price#4786, cs_ext_wholesale_cost#4787, cs_ext_list_price#4788, d_year#4804] "
          },
          "26" : {
            "sign" : 482427057,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 3761782752,
            "rowCount" : 72341976,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(year_total#2849) AND (year_total#2849 > 0.000000)) "
          },
          "13" : {
            "sign" : 429932782,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 14302285452,
            "rowCount" : 275043951,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [c_customer_id#31, c_first_name#38, c_last_name#39, c_preferred_cust_flag#40, c_birth_country#44, c_login#45, c_email_address#46, d_year#77], [c_customer_id#31 AS customer_id#2821, sum(((((ss_ext_list_price#64 - ss_ext_wholesale_cost#63) - ss_ext_discount_amt#61) + ss_ext_sales_price#62) / 2)) AS year_total#2829], HashAggregate(keys=[c_customer_id#31, c_first_name#38, c_last_name#39, c_preferred_cust_flag#40, c_birth_country#44, c_login#45, c_email_address#46, d_year#77], functions=[sum(((((ss_ext_list_price#64 - ss_ext_wholesale_cost#63) - ss_ext_discount_amt#61) + ss_ext_sales_price#62) / 2))]) "
          },
          "24" : {
            "sign" : -186934941,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 6648780576,
            "rowCount" : 138516262,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [cs_bill_customer_sk#4766, cs_ext_discount_amt#4785, cs_ext_sales_price#4786, cs_ext_wholesale_cost#4787, cs_ext_list_price#4788, d_year#4804], ShuffleQueryStage 25 "
          },
          "16" : {
            "sign" : -284003848,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 20623509888000000,
            "rowCount" : 107414114000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (c_customer_sk#4199 = ss_customer_sk#4219) "
          },
          "5" : {
            "sign" : -661423535,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 31204367534723785979314172994365138982118629760696485480000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [customer_id#2821, customer_id#2950, customer_first_name#2951, customer_last_name#2952, customer_email_address#2956, year_total#2839, year_total#2978, year_total#2849] "
          },
          "10" : {
            "sign" : 967225781,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 1187921028617405455930967434752000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (customer_id#2821 = customer_id#2831) "
          },
          "21" : {
            "sign" : -558918111,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 12189431056000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [c_customer_id#4747, c_first_name#4754, c_last_name#4755, c_preferred_cust_flag#4756, c_birth_country#4760, c_login#4761, c_email_address#4762, d_year#4804], [c_customer_id#4747 AS customer_id#2970, sum(((((cs_ext_list_price#4788 - cs_ext_wholesale_cost#4787) - cs_ext_discount_amt#4785) + cs_ext_sales_price#4786) / 2)) AS year_total#2978] "
          },
          "32" : {
            "sign" : -149944874,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 306068840,
            "rowCount" : 2000000,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [c_customer_sk#5304, c_customer_id#5305, c_first_name#5312, c_last_name#5313, c_preferred_cust_flag#5314, c_birth_country#5318, c_login#5319, c_email_address#5320], ShuffleQueryStage 20 "
          },
          "6" : {
            "sign" : -2096671901,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 35204927475072989309995477224411951672133838704375522080000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (customer_id#2821 = customer_id#2841) "
          },
          "1" : {
            "sign" : -517260619,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
            "sizeInBytes" : 87465511485542183252425889471828699287013873731954501685521387800000000000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) LocalLimit Arguments: 100 "
          },
          "17" : {
            "sign" : 1961017369,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 3007595192,
            "rowCount" : 53707057,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ss_customer_sk#4219, ss_ext_discount_amt#4230, ss_ext_sales_price#4231, ss_ext_wholesale_cost#4232, ss_ext_list_price#4233, d_year#4246], ShuffleQueryStage 24 "
          },
          "25" : {
            "sign" : -1104656951,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 306068840,
            "rowCount" : 2000000,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [c_customer_sk#4746, c_customer_id#4747, c_first_name#4754, c_last_name#4755, c_preferred_cust_flag#4756, c_birth_country#4760, c_login#4761, c_email_address#4762], ShuffleQueryStage 12 "
          },
          "14" : {
            "sign" : 1669679482,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 11171067856000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [c_customer_id#4200, c_first_name#4207, c_last_name#4208, c_preferred_cust_flag#4209, c_birth_country#4213, c_login#4214, c_email_address#4215, d_year#4246], [c_customer_id#4200 AS customer_id#2950, c_first_name#4207 AS customer_first_name#2951, c_last_name#4208 AS customer_last_name#2952, c_email_address#4215 AS customer_email_address#2956, sum(((((ss_ext_list_price#4233 - ss_ext_wholesale_cost#4232) - ss_ext_discount_amt#4230) + ss_ext_sales_price#4231) / 2)) AS year_total#2958] "
          },
          "31" : {
            "sign" : -983899132,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 3335789040,
            "rowCount" : 69495605,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ws_bill_customer_sk#5325, ws_ext_discount_amt#5343, ws_ext_sales_price#5344, ws_ext_wholesale_cost#5345, ws_ext_list_price#5346, d_year#5362], ShuffleQueryStage 26 "
          },
          "0" : {
            "sign" : 1047878772,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
            "sizeInBytes" : 8800,
            "rowCount" : 100,
            "isRuntime" : false,
            "predicate" : " (unknown) GlobalLimit Arguments: 100 "
          },
          "20" : {
            "sign" : 802064549,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 7435110696,
            "rowCount" : 142982898,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [c_customer_id#4508, c_first_name#4515, c_last_name#4516, c_preferred_cust_flag#4517, c_birth_country#4521, c_login#4522, c_email_address#4523, d_year#4565], [c_customer_id#4508 AS customer_id#2831, sum(((((cs_ext_list_price#4549 - cs_ext_wholesale_cost#4548) - cs_ext_discount_amt#4546) + cs_ext_sales_price#4547) / 2)) AS year_total#2839], HashAggregate(keys=[c_customer_id#4508, c_first_name#4515, c_last_name#4516, c_preferred_cust_flag#4517, c_birth_country#4521, c_login#4522, c_email_address#4523, d_year#4565], functions=[sum(((((cs_ext_list_price#4549 - cs_ext_wholesale_cost#4548) - cs_ext_discount_amt#4546) + cs_ext_sales_price#4547) / 2))]) "
          },
          "27" : {
            "sign" : -1463056171,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 3761782752,
            "rowCount" : 72341976,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [c_customer_id#5066, c_first_name#5073, c_last_name#5074, c_preferred_cust_flag#5075, c_birth_country#5079, c_login#5080, c_email_address#5081, d_year#5123], [c_customer_id#5066 AS customer_id#2841, sum(((((ws_ext_list_price#5107 - ws_ext_wholesale_cost#5106) - ws_ext_discount_amt#5104) + ws_ext_sales_price#5105) / 2)) AS year_total#2849], HashAggregate(keys=[c_customer_id#5066, c_first_name#5073, c_last_name#5074, c_preferred_cust_flag#5075, c_birth_country#5079, c_login#5080, c_email_address#5081, d_year#5123], functions=[sum(((((ws_ext_list_price#5107 - ws_ext_wholesale_cost#5106) - ws_ext_discount_amt#5104) + ws_ext_sales_price#5105) / 2))]) "
          },
          "2" : {
            "sign" : 1949973898,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 87465511485542183252425889471828699287013873731954501685521387800000000000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [customer_id#2950 ASC NULLS FIRST, customer_first_name#2951 ASC NULLS FIRST, customer_last_name#2952 ASC NULLS FIRST, customer_email_address#2956 ASC NULLS FIRST], true "
          },
          "18" : {
            "sign" : -545469420,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 306068840,
            "rowCount" : 2000000,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [c_customer_sk#4199, c_customer_id#4200, c_first_name#4207, c_last_name#4208, c_preferred_cust_flag#4209, c_birth_country#4213, c_login#4214, c_email_address#4215], ShuffleQueryStage 4 "
          },
          "30" : {
            "sign" : -979568171,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 26686312320000000,
            "rowCount" : 138991210000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (c_customer_sk#5304 = ws_bill_customer_sk#5325) "
          },
          "7" : {
            "sign" : -1528807325,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 9358575387256438063969164911629631415815965415000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [customer_id#2821, customer_id#2950, customer_first_name#2951, customer_last_name#2952, customer_email_address#2956, year_total#2839, year_total#2978] "
          },
          "29" : {
            "sign" : 103842726,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 25574382640000000,
            "rowCount" : 138991210000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_customer_id#5305, c_first_name#5312, c_last_name#5313, c_preferred_cust_flag#5314, c_birth_country#5318, c_login#5319, c_email_address#5320, ws_ext_discount_amt#5343, ws_ext_sales_price#5344, ws_ext_wholesale_cost#5345, ws_ext_list_price#5346, d_year#5362] "
          },
          "3" : {
            "sign" : 1088229365,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 87465511485542183252425889471828699287013873731954501685521387800000000000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [customer_id#2950, customer_first_name#2951, customer_last_name#2952, customer_email_address#2956] "
          },
          "28" : {
            "sign" : 1099149837,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 6115613240000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [c_customer_id#5305, c_first_name#5312, c_last_name#5313, c_preferred_cust_flag#5314, c_birth_country#5318, c_login#5319, c_email_address#5320, d_year#5362], [c_customer_id#5305 AS customer_id#2990, sum(((((ws_ext_list_price#5346 - ws_ext_wholesale_cost#5345) - ws_ext_discount_amt#5343) + ws_ext_sales_price#5344) / 2)) AS year_total#2998] "
          }
        },
        "links" : [ {
          "fromId" : 13,
          "fromName" : "LogicalQueryStage",
          "toId" : 12,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 12,
          "fromName" : "Filter",
          "toId" : 11,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 17,
          "fromName" : "LogicalQueryStage",
          "toId" : 16,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 18,
          "fromName" : "LogicalQueryStage",
          "toId" : 16,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 16,
          "fromName" : "Join",
          "toId" : 15,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 15,
          "fromName" : "Project",
          "toId" : 14,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 14,
          "fromName" : "Aggregate",
          "toId" : 11,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "Join",
          "toId" : 10,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 20,
          "fromName" : "LogicalQueryStage",
          "toId" : 19,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 19,
          "fromName" : "Filter",
          "toId" : 10,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "Join",
          "toId" : 9,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "Project",
          "toId" : 8,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 24,
          "fromName" : "LogicalQueryStage",
          "toId" : 23,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 25,
          "fromName" : "LogicalQueryStage",
          "toId" : 23,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 23,
          "fromName" : "Join",
          "toId" : 22,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 22,
          "fromName" : "Project",
          "toId" : 21,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 21,
          "fromName" : "Aggregate",
          "toId" : 8,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "Join",
          "toId" : 7,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Project",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 27,
          "fromName" : "LogicalQueryStage",
          "toId" : 26,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 26,
          "fromName" : "Filter",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Join",
          "toId" : 5,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Project",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 31,
          "fromName" : "LogicalQueryStage",
          "toId" : 30,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 32,
          "fromName" : "LogicalQueryStage",
          "toId" : 30,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 30,
          "fromName" : "Join",
          "toId" : 29,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 29,
          "fromName" : "Project",
          "toId" : 28,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 28,
          "fromName" : "Aggregate",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Join",
          "toId" : 3,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Project",
          "toId" : 2,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "LocalLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "LocalLimit",
          "toId" : 0,
          "toName" : "GlobalLimit",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [customer_id#2950 ASC NULLS FIRST, customer_first_name#2951 ASC NULLS FIRST, customer_last_name#2952 ASC NULLS FIRST, customer_email_address#2956 ASC NULLS FIRST], true\n      +- Project [customer_id#2950, customer_first_name#2951, customer_last_name#2952, customer_email_address#2956]\n         +- Join Inner, ((customer_id#2821 = customer_id#2990) AND (CASE WHEN (year_total#2839 > 0.000000) THEN (year_total#2978 / year_total#2839) END > CASE WHEN (year_total#2849 > 0.000000) THEN (year_total#2998 / year_total#2849) END))\n            :- Project [customer_id#2821, customer_id#2950, customer_first_name#2951, customer_last_name#2952, customer_email_address#2956, year_total#2839, year_total#2978, year_total#2849]\n            :  +- Join Inner, (customer_id#2821 = customer_id#2841)\n            :     :- Project [customer_id#2821, customer_id#2950, customer_first_name#2951, customer_last_name#2952, customer_email_address#2956, year_total#2839, year_total#2978]\n            :     :  +- Join Inner, ((customer_id#2821 = customer_id#2970) AND (CASE WHEN (year_total#2839 > 0.000000) THEN (year_total#2978 / year_total#2839) END > CASE WHEN (year_total#2829 > 0.000000) THEN (year_total#2958 / year_total#2829) END))\n            :     :     :- Project [customer_id#2821, year_total#2829, customer_id#2950, customer_first_name#2951, customer_last_name#2952, customer_email_address#2956, year_total#2958, year_total#2839]\n            :     :     :  +- Join Inner, (customer_id#2821 = customer_id#2831)\n            :     :     :     :- Join Inner, (customer_id#2950 = customer_id#2821)\n            :     :     :     :  :- Filter (isnotnull(year_total#2829) AND (year_total#2829 > 0.000000))\n            :     :     :     :  :  +- LogicalQueryStage Aggregate [c_customer_id#31, c_first_name#38, c_last_name#39, c_preferred_cust_flag#40, c_birth_country#44, c_login#45, c_email_address#46, d_year#77], [c_customer_id#31 AS customer_id#2821, sum(((((ss_ext_list_price#64 - ss_ext_wholesale_cost#63) - ss_ext_discount_amt#61) + ss_ext_sales_price#62) / 2)) AS year_total#2829], HashAggregate(keys=[c_customer_id#31, c_first_name#38, c_last_name#39, c_preferred_cust_flag#40, c_birth_country#44, c_login#45, c_email_address#46, d_year#77], functions=[sum(((((ss_ext_list_price#64 - ss_ext_wholesale_cost#63) - ss_ext_discount_amt#61) + ss_ext_sales_price#62) / 2))])\n            :     :     :     :  +- Aggregate [c_customer_id#4200, c_first_name#4207, c_last_name#4208, c_preferred_cust_flag#4209, c_birth_country#4213, c_login#4214, c_email_address#4215, d_year#4246], [c_customer_id#4200 AS customer_id#2950, c_first_name#4207 AS customer_first_name#2951, c_last_name#4208 AS customer_last_name#2952, c_email_address#4215 AS customer_email_address#2956, sum(((((ss_ext_list_price#4233 - ss_ext_wholesale_cost#4232) - ss_ext_discount_amt#4230) + ss_ext_sales_price#4231) / 2)) AS year_total#2958]\n            :     :     :     :     +- Project [c_customer_id#4200, c_first_name#4207, c_last_name#4208, c_preferred_cust_flag#4209, c_birth_country#4213, c_login#4214, c_email_address#4215, ss_ext_discount_amt#4230, ss_ext_sales_price#4231, ss_ext_wholesale_cost#4232, ss_ext_list_price#4233, d_year#4246]\n            :     :     :     :        +- Join Inner, (c_customer_sk#4199 = ss_customer_sk#4219)\n            :     :     :     :           :- LogicalQueryStage Project [ss_customer_sk#4219, ss_ext_discount_amt#4230, ss_ext_sales_price#4231, ss_ext_wholesale_cost#4232, ss_ext_list_price#4233, d_year#4246], ShuffleQueryStage 24\n            :     :     :     :           +- LogicalQueryStage Project [c_customer_sk#4199, c_customer_id#4200, c_first_name#4207, c_last_name#4208, c_preferred_cust_flag#4209, c_birth_country#4213, c_login#4214, c_email_address#4215], ShuffleQueryStage 4\n            :     :     :     +- Filter (isnotnull(year_total#2839) AND (year_total#2839 > 0.000000))\n            :     :     :        +- LogicalQueryStage Aggregate [c_customer_id#4508, c_first_name#4515, c_last_name#4516, c_preferred_cust_flag#4517, c_birth_country#4521, c_login#4522, c_email_address#4523, d_year#4565], [c_customer_id#4508 AS customer_id#2831, sum(((((cs_ext_list_price#4549 - cs_ext_wholesale_cost#4548) - cs_ext_discount_amt#4546) + cs_ext_sales_price#4547) / 2)) AS year_total#2839], HashAggregate(keys=[c_customer_id#4508, c_first_name#4515, c_last_name#4516, c_preferred_cust_flag#4517, c_birth_country#4521, c_login#4522, c_email_address#4523, d_year#4565], functions=[sum(((((cs_ext_list_price#4549 - cs_ext_wholesale_cost#4548) - cs_ext_discount_amt#4546) + cs_ext_sales_price#4547) / 2))])\n            :     :     +- Aggregate [c_customer_id#4747, c_first_name#4754, c_last_name#4755, c_preferred_cust_flag#4756, c_birth_country#4760, c_login#4761, c_email_address#4762, d_year#4804], [c_customer_id#4747 AS customer_id#2970, sum(((((cs_ext_list_price#4788 - cs_ext_wholesale_cost#4787) - cs_ext_discount_amt#4785) + cs_ext_sales_price#4786) / 2)) AS year_total#2978]\n            :     :        +- Project [c_customer_id#4747, c_first_name#4754, c_last_name#4755, c_preferred_cust_flag#4756, c_birth_country#4760, c_login#4761, c_email_address#4762, cs_ext_discount_amt#4785, cs_ext_sales_price#4786, cs_ext_wholesale_cost#4787, cs_ext_list_price#4788, d_year#4804]\n            :     :           +- Join Inner, (c_customer_sk#4746 = cs_bill_customer_sk#4766)\n            :     :              :- LogicalQueryStage Project [cs_bill_customer_sk#4766, cs_ext_discount_amt#4785, cs_ext_sales_price#4786, cs_ext_wholesale_cost#4787, cs_ext_list_price#4788, d_year#4804], ShuffleQueryStage 25\n            :     :              +- LogicalQueryStage Project [c_customer_sk#4746, c_customer_id#4747, c_first_name#4754, c_last_name#4755, c_preferred_cust_flag#4756, c_birth_country#4760, c_login#4761, c_email_address#4762], ShuffleQueryStage 12\n            :     +- Filter (isnotnull(year_total#2849) AND (year_total#2849 > 0.000000))\n            :        +- LogicalQueryStage Aggregate [c_customer_id#5066, c_first_name#5073, c_last_name#5074, c_preferred_cust_flag#5075, c_birth_country#5079, c_login#5080, c_email_address#5081, d_year#5123], [c_customer_id#5066 AS customer_id#2841, sum(((((ws_ext_list_price#5107 - ws_ext_wholesale_cost#5106) - ws_ext_discount_amt#5104) + ws_ext_sales_price#5105) / 2)) AS year_total#2849], HashAggregate(keys=[c_customer_id#5066, c_first_name#5073, c_last_name#5074, c_preferred_cust_flag#5075, c_birth_country#5079, c_login#5080, c_email_address#5081, d_year#5123], functions=[sum(((((ws_ext_list_price#5107 - ws_ext_wholesale_cost#5106) - ws_ext_discount_amt#5104) + ws_ext_sales_price#5105) / 2))])\n            +- Aggregate [c_customer_id#5305, c_first_name#5312, c_last_name#5313, c_preferred_cust_flag#5314, c_birth_country#5318, c_login#5319, c_email_address#5320, d_year#5362], [c_customer_id#5305 AS customer_id#2990, sum(((((ws_ext_list_price#5346 - ws_ext_wholesale_cost#5345) - ws_ext_discount_amt#5343) + ws_ext_sales_price#5344) / 2)) AS year_total#2998]\n               +- Project [c_customer_id#5305, c_first_name#5312, c_last_name#5313, c_preferred_cust_flag#5314, c_birth_country#5318, c_login#5319, c_email_address#5320, ws_ext_discount_amt#5343, ws_ext_sales_price#5344, ws_ext_wholesale_cost#5345, ws_ext_list_price#5346, d_year#5362]\n                  +- Join Inner, (c_customer_sk#5304 = ws_bill_customer_sk#5325)\n                     :- LogicalQueryStage Project [ws_bill_customer_sk#5325, ws_ext_discount_amt#5343, ws_ext_sales_price#5344, ws_ext_wholesale_cost#5345, ws_ext_list_price#5346, d_year#5362], ShuffleQueryStage 26\n                     +- LogicalQueryStage Project [c_customer_sk#5304, c_customer_id#5305, c_first_name#5312, c_last_name#5313, c_preferred_cust_flag#5314, c_birth_country#5318, c_login#5319, c_email_address#5320], ShuffleQueryStage 20\n"
      },
      "IM" : {
        "inputSizeInBytes" : 39409550228,
        "inputRowCount" : 758087749
      },
      "PD" : {
        "4" : [ 5726675, 5694587, 5601876, 5660449, 5658356, 5679656, 5610777, 5574552, 5626202, 5654181, 5765792, 5619064, 5747743, 5660863, 5652510, 5644818, 5743947, 5778678, 5693295, 5645127, 5637262, 5663013, 5824593, 5663194, 5638483, 5613368, 5612830, 5698061, 5654941, 5619408, 5650882, 5674527, 5681014, 5600424, 5720100, 5645346, 5684150, 5498434, 5531285, 5578028, 5677291, 5679656, 5583969, 5668928, 5648989, 5581190, 5643769, 5567895, 5726508, 5675162, 5733152, 5700054, 5586243, 5744107, 5631457, 5594763, 5622716, 5517805, 5648717, 5750174, 5668514, 5782256, 5637288, 5677847, 5557458, 5767300, 5639118, 5595836, 5624350, 5689874, 5701225, 5649055, 5580110, 5651302, 5759673, 5758668, 5751251, 5675593, 5748368, 5706802, 5663304, 5657342, 5758124, 5579916, 5623896, 5708411, 5604477, 5610204, 5667754, 5777215, 5683449, 5688982, 5661082, 5623377, 5733412, 5779095, 5588463, 5589095, 5580107, 5581190, 5600129, 5775931, 5631883, 5601876, 5635509, 5726221, 5693927, 5863870, 5477587, 5601876, 5624215, 5661141, 5755179, 5572837, 5677669, 5624350, 5521474, 5590450, 5720760, 5570577, 5663642, 5720650, 5714922, 5629442, 5664096, 5728728, 5625702, 5632814, 5701516, 5568590, 5739978, 5737543, 5733854, 5706802, 5604023, 5532299, 5633335, 5759038, 5715339, 5697459, 5601063, 5547105, 5678448, 5687943, 5717774, 5740808, 5833847, 5659783, 5690788, 5635482, 5702036, 5691242, 5738192, 5714116, 5730988, 5717486, 5679021, 5715089, 5779202, 5585327, 5556663, 5565610, 5708160, 5591085, 5674189, 5657796, 5651496, 5677740, 5748187, 5585612, 5715339, 5759219, 5753367, 5730327, 5605491, 5683515, 5714116, 5515465, 5711296, 5667955, 5632456, 5652056, 5508557, 5697542, 5850926, 5721455, 5903550, 5732521, 5543775, 5714974, 5739800, 5674255, 5656823, 5634766, 5714454, 5761031, 5706708, 5684848, 5764615, 5632637 ],
        "0" : [ 830145, 830145, 754677, 830145, 830145, 830145, 754677, 754677, 830145, 830145, 830145, 754677, 830145, 830145, 754677, 830145, 830145, 830145, 754677, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 754677, 830145, 830145, 754677, 830145, 830145, 754677, 754677, 754677, 754677, 754677, 830145, 754677, 830145, 830145, 754677, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 754677, 754677, 754677, 830145, 830145, 830145, 754677, 830145, 754677, 830145, 830145, 754677, 830145, 830145, 830145, 754677, 754677, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 754677, 754677, 754677, 754677, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 754677, 754677, 830145, 754677, 754677, 830145, 830145, 754677, 830145, 830145, 830145, 830145, 754677, 754677, 830145, 830145, 830145, 754677, 830145, 830145, 754677, 754677, 754677, 830145, 754677, 830145, 830145, 754677, 830145, 830145, 754677, 754677, 754677, 754677, 830145, 830145, 830145, 830145, 754677, 754677, 830145, 830145, 830145, 830145, 754677, 754677, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 754677, 754677, 830145, 830145, 754677, 830145, 830145, 830145, 830145, 830145, 754677, 830145, 830145, 830145, 830145, 830145, 754677, 830145, 754677, 830145, 754677, 754677, 830145, 830145, 754677, 830145, 830145, 830145, 830145, 754677, 830145, 830145, 830145, 754677, 754677, 830145, 830145, 830145, 830145, 830145, 754677 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 16,
        "FinishedTasksNum" : 10,
        "FinishedTasksTotalTimeInMs" : 7872.0,
        "FinishedTasksDistributionInMs" : [ 718.0, 748.0, 795.0, 810.0, 843.0 ]
      },
      "StartTimeInMs" : 1702226523743,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 44935,
        "IOBytes" : {
          "Total" : 8755429252,
          "Details" : {
            "IR" : 741842350,
            "IW" : 0,
            "SR" : 6038854810,
            "SW" : 1974732092
          }
        }
      }
    },
    "19" : {
      "LQP" : {
        "operators" : {
          "12" : {
            "sign" : -1458191872,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 101735088,
            "rowCount" : 1816698,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Filter (isnotnull(year_total#2829) AND (year_total#2829 > 0.000000)), ShuffleQueryStage 33 "
          },
          "8" : {
            "sign" : -1884134972,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 147493631240236481965248463200,
            "rowCount" : 737468156201182409826242316,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, ((customer_id#2821 = customer_id#2970) AND (CASE WHEN (year_total#2839 > 0.000000) THEN (year_total#2978 / year_total#2839) END > CASE WHEN (year_total#2829 > 0.000000) THEN (year_total#2958 / year_total#2829) END)) "
          },
          "4" : {
            "sign" : -537357220,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 9459439407421997220695353299868128567110400,
            "rowCount" : 47297197037109986103476766499340642835552,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, ((customer_id#2821 = customer_id#2990) AND (CASE WHEN (year_total#2839 > 0.000000) THEN (year_total#2978 / year_total#2839) END > CASE WHEN (year_total#2849 > 0.000000) THEN (year_total#2998 / year_total#2849) END)) "
          },
          "15" : {
            "sign" : -1414276816,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 7435110696,
            "rowCount" : 142982898,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [c_customer_id#4747, c_first_name#4754, c_last_name#4755, c_preferred_cust_flag#4756, c_birth_country#4760, c_login#4761, c_email_address#4762, d_year#4804], [c_customer_id#4747 AS customer_id#2970, sum(((((cs_ext_list_price#4788 - cs_ext_wholesale_cost#4787) - cs_ext_discount_amt#4785) + cs_ext_sales_price#4786) / 2)) AS year_total#2978], HashAggregate(keys=[c_customer_id#4747, c_first_name#4754, c_last_name#4755, c_preferred_cust_flag#4756, c_birth_country#4760, c_login#4761, c_email_address#4762, d_year#4804], functions=[sum(((((cs_ext_list_price#4788 - cs_ext_wholesale_cost#4787) - cs_ext_discount_amt#4785) + cs_ext_sales_price#4786) / 2))]) "
          },
          "11" : {
            "sign" : -1441832503,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 462662948737080,
            "rowCount" : 3304735348122,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (customer_id#2950 = customer_id#2821) "
          },
          "9" : {
            "sign" : -262489225,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 804606942344842219752,
            "rowCount" : 5157736809902834742,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [customer_id#2821, year_total#2829, customer_id#2950, customer_first_name#2951, customer_last_name#2952, customer_email_address#2956, year_total#2958, year_total#2839] "
          },
          "13" : {
            "sign" : 2038413297,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 229498456,
            "rowCount" : 1819089,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [c_customer_id#4200, c_first_name#4207, c_last_name#4208, c_preferred_cust_flag#4209, c_birth_country#4213, c_login#4214, c_email_address#4215, d_year#4246], [c_customer_id#4200 AS customer_id#2950, c_first_name#4207 AS customer_first_name#2951, c_last_name#4208 AS customer_last_name#2952, c_email_address#4215 AS customer_email_address#2956, sum(((((ss_ext_list_price#4233 - ss_ext_wholesale_cost#4232) - ss_ext_discount_amt#4230) + ss_ext_sales_price#4231) / 2)) AS year_total#2958], ShuffleQueryStage 36 "
          },
          "16" : {
            "sign" : 2009240091,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 49646632,
            "rowCount" : 886547,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Filter (isnotnull(year_total#2849) AND (year_total#2849 > 0.000000)), ShuffleQueryStage 34 "
          },
          "5" : {
            "sign" : 1542204426,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 101992828310207587253939200857564912,
            "rowCount" : 653800181475689661884225646522852,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [customer_id#2821, customer_id#2950, customer_first_name#2951, customer_last_name#2952, customer_email_address#2956, year_total#2839, year_total#2978, year_total#2849] "
          },
          "10" : {
            "sign" : 1387654351,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 907761678542898914592,
            "rowCount" : 5157736809902834742,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (customer_id#2821 = customer_id#2831) "
          },
          "6" : {
            "sign" : 1337486816,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 115068831939721380491623713788021952,
            "rowCount" : 653800181475689661884225646522852,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (customer_id#2821 = customer_id#2841) "
          },
          "1" : {
            "sign" : -1134635724,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
            "sizeInBytes" : 4162153339265678777105955451941976569528576,
            "rowCount" : 47297197037109986103476766499340642835552,
            "isRuntime" : false,
            "predicate" : " (unknown) LocalLimit Arguments: 100 "
          },
          "17" : {
            "sign" : -2053491893,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 3761782752,
            "rowCount" : 72341976,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [c_customer_id#5305, c_first_name#5312, c_last_name#5313, c_preferred_cust_flag#5314, c_birth_country#5318, c_login#5319, c_email_address#5320, d_year#5362], [c_customer_id#5305 AS customer_id#2990, sum(((((ws_ext_list_price#5346 - ws_ext_wholesale_cost#5345) - ws_ext_discount_amt#5343) + ws_ext_sales_price#5344) / 2)) AS year_total#2998], ShuffleQueryStage 37 "
          },
          "14" : {
            "sign" : 275524156,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 87399816,
            "rowCount" : 1560711,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Filter (isnotnull(year_total#2839) AND (year_total#2839 > 0.000000)), ShuffleQueryStage 35 "
          },
          "0" : {
            "sign" : -2078263403,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
            "sizeInBytes" : 8800,
            "rowCount" : 100,
            "isRuntime" : false,
            "predicate" : " (unknown) GlobalLimit Arguments: 100 "
          },
          "2" : {
            "sign" : 970545663,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 4162153339265678777105955451941976569528576,
            "rowCount" : 47297197037109986103476766499340642835552,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [customer_id#2950 ASC NULLS FIRST, customer_first_name#2951 ASC NULLS FIRST, customer_last_name#2952 ASC NULLS FIRST, customer_email_address#2956 ASC NULLS FIRST], true "
          },
          "7" : {
            "sign" : 1178387794,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 103245541868165537375673924240,
            "rowCount" : 737468156201182409826242316,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [customer_id#2821, customer_id#2950, customer_first_name#2951, customer_last_name#2952, customer_email_address#2956, year_total#2839, year_total#2978] "
          },
          "3" : {
            "sign" : -25533452,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 4162153339265678777105955451941976569528576,
            "rowCount" : 47297197037109986103476766499340642835552,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [customer_id#2950, customer_first_name#2951, customer_last_name#2952, customer_email_address#2956] "
          }
        },
        "links" : [ {
          "fromId" : 12,
          "fromName" : "LogicalQueryStage",
          "toId" : 11,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 13,
          "fromName" : "LogicalQueryStage",
          "toId" : 11,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "Join",
          "toId" : 10,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 14,
          "fromName" : "LogicalQueryStage",
          "toId" : 10,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "Join",
          "toId" : 9,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "Project",
          "toId" : 8,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 15,
          "fromName" : "LogicalQueryStage",
          "toId" : 8,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "Join",
          "toId" : 7,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Project",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 16,
          "fromName" : "LogicalQueryStage",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Join",
          "toId" : 5,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Project",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 17,
          "fromName" : "LogicalQueryStage",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Join",
          "toId" : 3,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Project",
          "toId" : 2,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "LocalLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "LocalLimit",
          "toId" : 0,
          "toName" : "GlobalLimit",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [customer_id#2950 ASC NULLS FIRST, customer_first_name#2951 ASC NULLS FIRST, customer_last_name#2952 ASC NULLS FIRST, customer_email_address#2956 ASC NULLS FIRST], true\n      +- Project [customer_id#2950, customer_first_name#2951, customer_last_name#2952, customer_email_address#2956]\n         +- Join Inner, ((customer_id#2821 = customer_id#2990) AND (CASE WHEN (year_total#2839 > 0.000000) THEN (year_total#2978 / year_total#2839) END > CASE WHEN (year_total#2849 > 0.000000) THEN (year_total#2998 / year_total#2849) END))\n            :- Project [customer_id#2821, customer_id#2950, customer_first_name#2951, customer_last_name#2952, customer_email_address#2956, year_total#2839, year_total#2978, year_total#2849]\n            :  +- Join Inner, (customer_id#2821 = customer_id#2841)\n            :     :- Project [customer_id#2821, customer_id#2950, customer_first_name#2951, customer_last_name#2952, customer_email_address#2956, year_total#2839, year_total#2978]\n            :     :  +- Join Inner, ((customer_id#2821 = customer_id#2970) AND (CASE WHEN (year_total#2839 > 0.000000) THEN (year_total#2978 / year_total#2839) END > CASE WHEN (year_total#2829 > 0.000000) THEN (year_total#2958 / year_total#2829) END))\n            :     :     :- Project [customer_id#2821, year_total#2829, customer_id#2950, customer_first_name#2951, customer_last_name#2952, customer_email_address#2956, year_total#2958, year_total#2839]\n            :     :     :  +- Join Inner, (customer_id#2821 = customer_id#2831)\n            :     :     :     :- Join Inner, (customer_id#2950 = customer_id#2821)\n            :     :     :     :  :- LogicalQueryStage Filter (isnotnull(year_total#2829) AND (year_total#2829 > 0.000000)), ShuffleQueryStage 33\n            :     :     :     :  +- LogicalQueryStage Aggregate [c_customer_id#4200, c_first_name#4207, c_last_name#4208, c_preferred_cust_flag#4209, c_birth_country#4213, c_login#4214, c_email_address#4215, d_year#4246], [c_customer_id#4200 AS customer_id#2950, c_first_name#4207 AS customer_first_name#2951, c_last_name#4208 AS customer_last_name#2952, c_email_address#4215 AS customer_email_address#2956, sum(((((ss_ext_list_price#4233 - ss_ext_wholesale_cost#4232) - ss_ext_discount_amt#4230) + ss_ext_sales_price#4231) / 2)) AS year_total#2958], ShuffleQueryStage 36\n            :     :     :     +- LogicalQueryStage Filter (isnotnull(year_total#2839) AND (year_total#2839 > 0.000000)), ShuffleQueryStage 35\n            :     :     +- LogicalQueryStage Aggregate [c_customer_id#4747, c_first_name#4754, c_last_name#4755, c_preferred_cust_flag#4756, c_birth_country#4760, c_login#4761, c_email_address#4762, d_year#4804], [c_customer_id#4747 AS customer_id#2970, sum(((((cs_ext_list_price#4788 - cs_ext_wholesale_cost#4787) - cs_ext_discount_amt#4785) + cs_ext_sales_price#4786) / 2)) AS year_total#2978], HashAggregate(keys=[c_customer_id#4747, c_first_name#4754, c_last_name#4755, c_preferred_cust_flag#4756, c_birth_country#4760, c_login#4761, c_email_address#4762, d_year#4804], functions=[sum(((((cs_ext_list_price#4788 - cs_ext_wholesale_cost#4787) - cs_ext_discount_amt#4785) + cs_ext_sales_price#4786) / 2))])\n            :     +- LogicalQueryStage Filter (isnotnull(year_total#2849) AND (year_total#2849 > 0.000000)), ShuffleQueryStage 34\n            +- LogicalQueryStage Aggregate [c_customer_id#5305, c_first_name#5312, c_last_name#5313, c_preferred_cust_flag#5314, c_birth_country#5318, c_login#5319, c_email_address#5320, d_year#5362], [c_customer_id#5305 AS customer_id#2990, sum(((((ws_ext_list_price#5346 - ws_ext_wholesale_cost#5345) - ws_ext_discount_amt#5343) + ws_ext_sales_price#5344) / 2)) AS year_total#2998], ShuffleQueryStage 37\n"
      },
      "IM" : {
        "inputSizeInBytes" : 11665173440,
        "inputRowCount" : 221407919
      },
      "PD" : {
        "14" : [ 75848, 71345, 71345, 77101, 77101, 77101, 70092, 77101, 75848, 77101, 77101, 71345, 77101, 77101, 75848, 77101, 75848, 77101, 77101, 77101, 71345, 77101, 75848, 77101, 70092, 77101, 77101, 71345, 75848, 75848, 71345, 77101, 75848, 75848, 77101, 77101, 75848, 70092, 75848, 70092, 75848, 75848, 75848, 70092, 75848, 75848, 77101, 75848, 75848, 77101, 75848, 77101, 77101, 77101, 77101, 71345, 77101, 78479, 77101, 77101, 75848, 77101, 77101, 77101, 75848, 71345, 75848, 75848, 77101, 75848, 77101, 77101, 75848, 75848, 75848, 75848, 75848, 75848, 77101, 77101, 77101, 75848, 75848, 75848, 77101, 75848, 77101, 75848, 75848, 75848, 77101, 77101, 77101, 75848, 75848, 75848, 77101, 75848, 75848, 77101, 71345, 77101, 77101, 75848, 77101, 75848, 77101, 77101, 70092, 77101, 77101, 77101, 70092, 77101, 77101, 70092, 72723, 77101, 77101, 75848, 77101, 75848, 77101, 77101, 77101, 75848, 75848, 70092, 75848, 75848, 77101, 75848, 77101, 75848, 77101, 75848, 77101, 75848, 75848, 75848, 77101, 77101, 77101, 71345, 75848, 77101, 75848, 77101, 77101, 77101, 77101, 77101, 77101, 70092, 77101, 77101, 75848, 77101, 70092, 75848, 77101, 75848, 75848, 77101, 77101, 75848, 75848, 77101, 77101, 75848, 75848, 77101, 77101, 77101, 70092, 71345, 71345, 77101, 75848, 75848, 75848, 77101, 75848, 77101, 77101, 77101, 71345, 75848, 75848, 75848, 77101, 77101, 75848, 77101, 77101, 75848, 77101, 77101, 77101, 75848 ],
        "13" : [ 153496, 153496, 147740, 153496, 153496, 147740, 141984, 147740, 153496, 156181, 153496, 153496, 153496, 156181, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 147740, 153496, 153496, 153496, 156181, 153496, 153496, 156181, 153496, 153496, 141984, 153496, 153496, 147740, 156181, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 156181, 153496, 147740, 153496, 156181, 150425, 153496, 153496, 153496, 150425, 156181, 153496, 147740, 153496, 153496, 156181, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 156181, 153496, 153496, 153496, 147740, 153496, 153496, 150425, 153496, 153496, 153496, 156181, 156181, 153496, 153496, 153496, 153496, 147740, 153496, 153496, 153496, 153496, 156181, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 156181, 147740, 153496, 153496, 153496, 156181, 153496, 153496, 153496, 153496, 153496, 156181, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 156181, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 156181, 153496, 153496, 147740, 153496, 147740, 153496, 150425, 153496, 153496, 153496, 153496, 156181, 147740, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 147740, 153496, 147740, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 147740, 147740, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 147740, 156181, 156181, 153496, 156181, 153496, 153496, 153496, 153496, 156181, 153496 ],
        "16" : [ 652413, 641195, 641195, 641195, 652413, 628367, 617149, 641195, 628367, 652413, 652413, 641195, 628367, 652413, 652413, 652413, 652413, 641195, 652413, 641195, 641195, 652413, 652413, 641195, 652413, 652413, 641195, 641195, 652413, 652413, 641195, 652413, 652413, 641195, 652413, 641195, 652413, 617149, 641195, 652413, 652413, 641195, 641195, 652413, 641195, 652413, 652413, 641195, 652413, 652413, 628367, 652413, 652413, 652413, 641195, 652413, 652413, 652413, 652413, 641195, 652413, 641195, 652413, 652413, 641195, 652413, 641195, 652413, 641195, 652413, 641195, 652413, 652413, 652413, 652413, 617149, 652413, 652413, 641195, 641195, 652413, 652413, 652413, 652413, 652413, 641195, 641195, 641195, 652413, 641195, 652413, 652413, 652413, 641195, 652413, 641195, 652413, 652413, 652413, 652413, 652413, 652413, 641195, 641195, 652413, 641195, 652413, 652413, 652413, 641195, 641195, 652413, 641195, 641195, 652413, 628367, 641195, 652413, 652413, 641195, 641195, 652413, 652413, 641195, 641195, 652413, 652413, 652413, 652413, 652413, 652413, 652413, 652413, 641195, 641195, 652413, 652413, 652413, 652413, 641195, 652413, 641195, 652413, 641195, 652413, 641195, 652413, 641195, 652413, 652413, 641195, 641195, 652413, 641195, 641195, 652413, 652413, 652413, 617149, 641195, 652413, 641195, 628367, 652413, 641195, 652413, 652413, 652413, 652413, 652413, 652413, 652413, 652413, 641195, 641195, 652413, 641195, 652413, 652413, 641195, 652413, 652413, 652413, 652413, 652413, 641195, 641195, 652413, 652413, 652413, 652413, 652413, 641195, 652413, 641195, 641195, 652413, 652413, 652413, 641195 ],
        "15" : [ 130298, 124542, 130298, 130298, 136054, 130298, 124542, 130298, 136054, 136054, 136054, 130298, 136054, 136995, 136054, 136054, 130298, 131239, 136995, 130298, 136054, 131239, 135198, 135198, 136054, 136054, 130298, 130298, 135198, 135198, 136054, 136995, 136995, 136054, 136995, 135198, 135198, 130298, 135198, 136054, 136054, 136054, 136054, 136054, 130298, 136054, 135198, 130298, 136054, 136054, 135198, 136054, 136054, 136995, 136054, 130298, 136054, 135198, 136995, 130298, 136054, 135198, 130298, 136054, 136054, 130298, 130298, 135198, 136054, 130298, 136054, 136054, 135198, 135198, 130298, 130298, 136054, 136054, 135198, 130298, 135198, 130298, 135198, 130298, 136054, 136054, 136995, 136054, 130298, 135198, 136995, 136995, 136995, 136054, 135198, 130298, 136054, 136995, 136054, 136054, 136995, 136054, 136054, 136054, 135198, 135198, 136054, 136054, 136054, 136995, 131239, 136054, 129442, 136054, 130298, 130298, 136995, 136054, 136054, 136054, 135198, 136054, 135198, 135198, 136054, 136054, 136054, 135198, 135198, 129442, 130298, 135198, 136054, 136054, 136054, 130298, 136054, 135198, 136054, 135198, 136054, 135198, 136054, 136054, 129442, 130298, 136054, 130298, 136054, 136054, 136054, 136054, 136995, 130298, 136054, 136054, 129442, 136054, 130298, 129442, 136054, 136995, 130298, 135198, 136054, 135198, 135198, 136054, 130298, 135198, 135198, 136054, 136054, 136995, 124542, 130298, 130298, 130298, 136054, 136995, 136054, 135198, 136054, 136995, 130298, 136054, 135198, 129442, 130298, 130298, 136054, 136995, 136054, 130298, 136054, 129442, 136054, 136054, 136995, 136054 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 5,
        "FinishedTasksNum" : 11,
        "FinishedTasksTotalTimeInMs" : 45372.0,
        "FinishedTasksDistributionInMs" : [ 3784.0, 4005.0, 4062.0, 4213.0, 4955.0 ]
      },
      "StartTimeInMs" : 1702226552015,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 16663,
        "IOBytes" : {
          "Total" : 1442570479,
          "Details" : {
            "IR" : 0,
            "IW" : 0,
            "SR" : 1264804008,
            "SW" : 177766471
          }
        }
      }
    },
    "4" : {
      "LQP" : {
        "operators" : {
          "34" : {
            "sign" : 830600325,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 6115613240000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(year_total#2849) AND (year_total#2849 > 0.000000)) "
          },
          "12" : {
            "sign" : -156756162,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 23367571480000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(year_total#2829) AND (year_total#2829 > 0.000000)) "
          },
          "8" : {
            "sign" : 1552567801,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 169975615967580821550610392970472522342400000000000000000000000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, ((customer_id#2821 = customer_id#2970) AND (CASE WHEN (year_total#2839 > 0.000000) THEN (year_total#2978 / year_total#2839) END > CASE WHEN (year_total#2829 > 0.000000) THEN (year_total#2958 / year_total#2829) END)) "
          },
          "19" : {
            "sign" : 1578530028,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 97718935280000000,
            "rowCount" : 531081170000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_customer_id#4200, c_first_name#4207, c_last_name#4208, c_preferred_cust_flag#4209, c_birth_country#4213, c_login#4214, c_email_address#4215, ss_ext_discount_amt#4230, ss_ext_sales_price#4231, ss_ext_wholesale_cost#4232, ss_ext_list_price#4233, d_year#4246] "
          },
          "23" : {
            "sign" : -791359697,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 12189431056000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(year_total#2839) AND (year_total#2839 > 0.000000)) "
          },
          "4" : {
            "sign" : 2042273313,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 4108709021201724117944950252046160133979965535131819084800000000000000000000000000000000000000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, ((customer_id#2821 = customer_id#2990) AND (CASE WHEN (year_total#2839 > 0.000000) THEN (year_total#2978 / year_total#2839) END > CASE WHEN (year_total#2849 > 0.000000) THEN (year_total#2998 / year_total#2849) END)) "
          },
          "40" : {
            "sign" : 1099149837,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 6115613240000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [c_customer_id#5305, c_first_name#5312, c_last_name#5313, c_preferred_cust_flag#5314, c_birth_country#5318, c_login#5319, c_email_address#5320, d_year#5362], [c_customer_id#5305 AS customer_id#2990, sum(((((ws_ext_list_price#5346 - ws_ext_wholesale_cost#5345) - ws_ext_discount_amt#5343) + ws_ext_sales_price#5344) / 2)) AS year_total#2998] "
          },
          "15" : {
            "sign" : -1238535703,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 101967584640000000,
            "rowCount" : 531081170000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (c_customer_sk#30 = ss_customer_sk#50) "
          },
          "11" : {
            "sign" : -235742484,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 1290648028972331286400000000000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (customer_id#2950 = customer_id#2821) "
          },
          "9" : {
            "sign" : -1666945939,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 13944507761411372434986796070400000000000000000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [customer_id#2821, year_total#2829, customer_id#2950, customer_first_name#2951, customer_last_name#2952, customer_email_address#2956, year_total#2958, year_total#2839] "
          },
          "44" : {
            "sign" : -149944874,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 306068840,
            "rowCount" : 2000000,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [c_customer_sk#5304, c_customer_id#5305, c_first_name#5312, c_last_name#5313, c_preferred_cust_flag#5314, c_birth_country#5318, c_login#5319, c_email_address#5320], ShuffleQueryStage 20 "
          },
          "33" : {
            "sign" : -1104656951,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 306068840,
            "rowCount" : 2000000,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [c_customer_sk#4746, c_customer_id#4747, c_first_name#4754, c_last_name#4755, c_preferred_cust_flag#4756, c_birth_country#4760, c_login#4761, c_email_address#4762], ShuffleQueryStage 12 "
          },
          "22" : {
            "sign" : -545469420,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 306068840,
            "rowCount" : 2000000,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [c_customer_sk#4199, c_customer_id#4200, c_first_name#4207, c_last_name#4208, c_preferred_cust_flag#4209, c_birth_country#4213, c_login#4214, c_email_address#4215], ShuffleQueryStage 4 "
          },
          "26" : {
            "sign" : 1188748241,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 53190244608000000,
            "rowCount" : 277032524000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (c_customer_sk#4507 = cs_bill_customer_sk#4527) "
          },
          "37" : {
            "sign" : 1864291467,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 26686312320000000,
            "rowCount" : 138991210000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (c_customer_sk#5065 = ws_bill_customer_sk#5086) "
          },
          "13" : {
            "sign" : -1150214364,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 23367571480000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [c_customer_id#31, c_first_name#38, c_last_name#39, c_preferred_cust_flag#40, c_birth_country#44, c_login#45, c_email_address#46, d_year#77], [c_customer_id#31 AS customer_id#2821, sum(((((ss_ext_list_price#64 - ss_ext_wholesale_cost#63) - ss_ext_discount_amt#61) + ss_ext_sales_price#62) / 2)) AS year_total#2829] "
          },
          "24" : {
            "sign" : 421427731,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 12189431056000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [c_customer_id#4508, c_first_name#4515, c_last_name#4516, c_preferred_cust_flag#4517, c_birth_country#4521, c_login#4522, c_email_address#4523, d_year#4565], [c_customer_id#4508 AS customer_id#2831, sum(((((cs_ext_list_price#4549 - cs_ext_wholesale_cost#4548) - cs_ext_discount_amt#4546) + cs_ext_sales_price#4547) / 2)) AS year_total#2839] "
          },
          "35" : {
            "sign" : 263073841,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 6115613240000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [c_customer_id#5066, c_first_name#5073, c_last_name#5074, c_preferred_cust_flag#5075, c_birth_country#5079, c_login#5080, c_email_address#5081, d_year#5123], [c_customer_id#5066 AS customer_id#2841, sum(((((ws_ext_list_price#5107 - ws_ext_wholesale_cost#5106) - ws_ext_discount_amt#5104) + ws_ext_sales_price#5105) / 2)) AS year_total#2849] "
          },
          "16" : {
            "sign" : 1000661201,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 12745948080,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ss_customer_sk#50, ss_ext_discount_amt#61, ss_ext_sales_price#62, ss_ext_wholesale_cost#63, ss_ext_list_price#64, d_year#77], ShuffleQueryStage 21 "
          },
          "5" : {
            "sign" : -951250717,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 671839251430772969865725232167585557450975355520000000000000000000000000000000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [customer_id#2821, customer_id#2950, customer_first_name#2951, customer_last_name#2952, customer_email_address#2956, year_total#2839, year_total#2978, year_total#2849] "
          },
          "10" : {
            "sign" : -419034197,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 15732265166720522747164590438400000000000000000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (customer_id#2821 = customer_id#2831) "
          },
          "21" : {
            "sign" : 1961017369,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 12745948080,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ss_customer_sk#4219, ss_ext_discount_amt#4230, ss_ext_sales_price#4231, ss_ext_wholesale_cost#4232, ss_ext_list_price#4233, d_year#4246], ShuffleQueryStage 24 "
          },
          "43" : {
            "sign" : -983899132,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 3335789040,
            "rowCount" : 69495605,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ws_bill_customer_sk#5325, ws_ext_discount_amt#5343, ws_ext_sales_price#5344, ws_ext_wholesale_cost#5345, ws_ext_list_price#5346, d_year#5362], ShuffleQueryStage 26 "
          },
          "32" : {
            "sign" : -186934941,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 6648780576,
            "rowCount" : 138516262,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [cs_bill_customer_sk#4766, cs_ext_discount_amt#4785, cs_ext_sales_price#4786, cs_ext_wholesale_cost#4787, cs_ext_list_price#4788, d_year#4804], ShuffleQueryStage 25 "
          },
          "6" : {
            "sign" : -326641307,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 757972488793692581386972056804455500713920913920000000000000000000000000000000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (customer_id#2821 = customer_id#2841) "
          },
          "36" : {
            "sign" : 1013224406,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 25574382640000000,
            "rowCount" : 138991210000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_customer_id#5066, c_first_name#5073, c_last_name#5074, c_preferred_cust_flag#5075, c_birth_country#5079, c_login#5080, c_email_address#5081, ws_ext_discount_amt#5104, ws_ext_sales_price#5105, ws_ext_wholesale_cost#5106, ws_ext_list_price#5107, d_year#5123] "
          },
          "1" : {
            "sign" : -1824399275,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
            "sizeInBytes" : 1883158301384123554058102198854490061407484203602083747200000000000000000000000000000000000000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) LocalLimit Arguments: 100 "
          },
          "39" : {
            "sign" : -8231932,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 306068840,
            "rowCount" : 2000000,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [c_customer_sk#5065, c_customer_id#5066, c_first_name#5073, c_last_name#5074, c_preferred_cust_flag#5075, c_birth_country#5079, c_login#5080, c_email_address#5081], ShuffleQueryStage 16 "
          },
          "17" : {
            "sign" : -1918321310,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 306068840,
            "rowCount" : 2000000,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [c_customer_sk#30, c_customer_id#31, c_first_name#38, c_last_name#39, c_preferred_cust_flag#40, c_birth_country#44, c_login#45, c_email_address#46], ShuffleQueryStage 1 "
          },
          "25" : {
            "sign" : 1201651664,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 50973984416000000,
            "rowCount" : 277032524000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_customer_id#4508, c_first_name#4515, c_last_name#4516, c_preferred_cust_flag#4517, c_birth_country#4521, c_login#4522, c_email_address#4523, cs_ext_discount_amt#4546, cs_ext_sales_price#4547, cs_ext_wholesale_cost#4548, cs_ext_list_price#4549, d_year#4565] "
          },
          "14" : {
            "sign" : -1768288712,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 97718935280000000,
            "rowCount" : 531081170000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_customer_id#31, c_first_name#38, c_last_name#39, c_preferred_cust_flag#40, c_birth_country#44, c_login#45, c_email_address#46, ss_ext_discount_amt#61, ss_ext_sales_price#62, ss_ext_wholesale_cost#63, ss_ext_list_price#64, d_year#77] "
          },
          "31" : {
            "sign" : -1247342346,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 53190244608000000,
            "rowCount" : 277032524000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (c_customer_sk#4746 = cs_bill_customer_sk#4766) "
          },
          "42" : {
            "sign" : -979568171,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 26686312320000000,
            "rowCount" : 138991210000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (c_customer_sk#5304 = ws_bill_customer_sk#5325) "
          },
          "0" : {
            "sign" : -201500710,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
            "sizeInBytes" : 8800,
            "rowCount" : 100,
            "isRuntime" : false,
            "predicate" : " (unknown) GlobalLimit Arguments: 100 "
          },
          "20" : {
            "sign" : -284003848,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 101967584640000000,
            "rowCount" : 531081170000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (c_customer_sk#4199 = ss_customer_sk#4219) "
          },
          "27" : {
            "sign" : -1147336357,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 6648780576,
            "rowCount" : 138516262,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [cs_bill_customer_sk#4527, cs_ext_discount_amt#4546, cs_ext_sales_price#4547, cs_ext_wholesale_cost#4548, cs_ext_list_price#4549, d_year#4565], ShuffleQueryStage 22 "
          },
          "2" : {
            "sign" : 609274372,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 1883158301384123554058102198854490061407484203602083747200000000000000000000000000000000000000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [customer_id#2950 ASC NULLS FIRST, customer_first_name#2951 ASC NULLS FIRST, customer_last_name#2952 ASC NULLS FIRST, customer_email_address#2956 ASC NULLS FIRST], true "
          },
          "38" : {
            "sign" : -2060825732,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 3335789040,
            "rowCount" : 69495605,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ws_bill_customer_sk#5086, ws_ext_discount_amt#5104, ws_ext_sales_price#5105, ws_ext_wholesale_cost#5106, ws_ext_list_price#5107, d_year#5123], ShuffleQueryStage 23 "
          },
          "18" : {
            "sign" : 1669679482,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 55232441680000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [c_customer_id#4200, c_first_name#4207, c_last_name#4208, c_preferred_cust_flag#4209, c_birth_country#4213, c_login#4214, c_email_address#4215, d_year#4246], [c_customer_id#4200 AS customer_id#2950, c_first_name#4207 AS customer_first_name#2951, c_last_name#4208 AS customer_last_name#2952, c_email_address#4215 AS customer_email_address#2956, sum(((((ss_ext_list_price#4233 - ss_ext_wholesale_cost#4232) - ss_ext_discount_amt#4230) + ss_ext_sales_price#4231) / 2)) AS year_total#2958] "
          },
          "30" : {
            "sign" : -1411007706,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 50973984416000000,
            "rowCount" : 277032524000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_customer_id#4747, c_first_name#4754, c_last_name#4755, c_preferred_cust_flag#4756, c_birth_country#4760, c_login#4761, c_email_address#4762, cs_ext_discount_amt#4785, cs_ext_sales_price#4786, cs_ext_wholesale_cost#4787, cs_ext_list_price#4788, d_year#4804] "
          },
          "7" : {
            "sign" : 1858777073,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 123940553309694349047320078207636214208000000000000000000000000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [customer_id#2821, customer_id#2950, customer_first_name#2951, customer_last_name#2952, customer_email_address#2956, year_total#2839, year_total#2978] "
          },
          "29" : {
            "sign" : -558918111,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 12189431056000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [c_customer_id#4747, c_first_name#4754, c_last_name#4755, c_preferred_cust_flag#4756, c_birth_country#4760, c_login#4761, c_email_address#4762, d_year#4804], [c_customer_id#4747 AS customer_id#2970, sum(((((cs_ext_list_price#4788 - cs_ext_wholesale_cost#4787) - cs_ext_discount_amt#4785) + cs_ext_sales_price#4786) / 2)) AS year_total#2978] "
          },
          "41" : {
            "sign" : 103842726,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 25574382640000000,
            "rowCount" : 138991210000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_customer_id#5305, c_first_name#5312, c_last_name#5313, c_preferred_cust_flag#5314, c_birth_country#5318, c_login#5319, c_email_address#5320, ws_ext_discount_amt#5343, ws_ext_sales_price#5344, ws_ext_wholesale_cost#5345, ws_ext_list_price#5346, d_year#5362] "
          },
          "3" : {
            "sign" : 1227264661,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 1883158301384123554058102198854490061407484203602083747200000000000000000000000000000000000000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [customer_id#2950, customer_first_name#2951, customer_last_name#2952, customer_email_address#2956] "
          },
          "28" : {
            "sign" : -268161914,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 306068840,
            "rowCount" : 2000000,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [c_customer_sk#4507, c_customer_id#4508, c_first_name#4515, c_last_name#4516, c_preferred_cust_flag#4517, c_birth_country#4521, c_login#4522, c_email_address#4523], ShuffleQueryStage 8 "
          }
        },
        "links" : [ {
          "fromId" : 16,
          "fromName" : "LogicalQueryStage",
          "toId" : 15,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 17,
          "fromName" : "LogicalQueryStage",
          "toId" : 15,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 15,
          "fromName" : "Join",
          "toId" : 14,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 14,
          "fromName" : "Project",
          "toId" : 13,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 13,
          "fromName" : "Aggregate",
          "toId" : 12,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 12,
          "fromName" : "Filter",
          "toId" : 11,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 21,
          "fromName" : "LogicalQueryStage",
          "toId" : 20,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 22,
          "fromName" : "LogicalQueryStage",
          "toId" : 20,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 20,
          "fromName" : "Join",
          "toId" : 19,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 19,
          "fromName" : "Project",
          "toId" : 18,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 18,
          "fromName" : "Aggregate",
          "toId" : 11,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "Join",
          "toId" : 10,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 27,
          "fromName" : "LogicalQueryStage",
          "toId" : 26,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 28,
          "fromName" : "LogicalQueryStage",
          "toId" : 26,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 26,
          "fromName" : "Join",
          "toId" : 25,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 25,
          "fromName" : "Project",
          "toId" : 24,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 24,
          "fromName" : "Aggregate",
          "toId" : 23,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 23,
          "fromName" : "Filter",
          "toId" : 10,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "Join",
          "toId" : 9,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "Project",
          "toId" : 8,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 32,
          "fromName" : "LogicalQueryStage",
          "toId" : 31,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 33,
          "fromName" : "LogicalQueryStage",
          "toId" : 31,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 31,
          "fromName" : "Join",
          "toId" : 30,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 30,
          "fromName" : "Project",
          "toId" : 29,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 29,
          "fromName" : "Aggregate",
          "toId" : 8,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "Join",
          "toId" : 7,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Project",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 38,
          "fromName" : "LogicalQueryStage",
          "toId" : 37,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 39,
          "fromName" : "LogicalQueryStage",
          "toId" : 37,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 37,
          "fromName" : "Join",
          "toId" : 36,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 36,
          "fromName" : "Project",
          "toId" : 35,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 35,
          "fromName" : "Aggregate",
          "toId" : 34,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 34,
          "fromName" : "Filter",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Join",
          "toId" : 5,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Project",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 43,
          "fromName" : "LogicalQueryStage",
          "toId" : 42,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 44,
          "fromName" : "LogicalQueryStage",
          "toId" : 42,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 42,
          "fromName" : "Join",
          "toId" : 41,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 41,
          "fromName" : "Project",
          "toId" : 40,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 40,
          "fromName" : "Aggregate",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Join",
          "toId" : 3,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Project",
          "toId" : 2,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "LocalLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "LocalLimit",
          "toId" : 0,
          "toName" : "GlobalLimit",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [customer_id#2950 ASC NULLS FIRST, customer_first_name#2951 ASC NULLS FIRST, customer_last_name#2952 ASC NULLS FIRST, customer_email_address#2956 ASC NULLS FIRST], true\n      +- Project [customer_id#2950, customer_first_name#2951, customer_last_name#2952, customer_email_address#2956]\n         +- Join Inner, ((customer_id#2821 = customer_id#2990) AND (CASE WHEN (year_total#2839 > 0.000000) THEN (year_total#2978 / year_total#2839) END > CASE WHEN (year_total#2849 > 0.000000) THEN (year_total#2998 / year_total#2849) END))\n            :- Project [customer_id#2821, customer_id#2950, customer_first_name#2951, customer_last_name#2952, customer_email_address#2956, year_total#2839, year_total#2978, year_total#2849]\n            :  +- Join Inner, (customer_id#2821 = customer_id#2841)\n            :     :- Project [customer_id#2821, customer_id#2950, customer_first_name#2951, customer_last_name#2952, customer_email_address#2956, year_total#2839, year_total#2978]\n            :     :  +- Join Inner, ((customer_id#2821 = customer_id#2970) AND (CASE WHEN (year_total#2839 > 0.000000) THEN (year_total#2978 / year_total#2839) END > CASE WHEN (year_total#2829 > 0.000000) THEN (year_total#2958 / year_total#2829) END))\n            :     :     :- Project [customer_id#2821, year_total#2829, customer_id#2950, customer_first_name#2951, customer_last_name#2952, customer_email_address#2956, year_total#2958, year_total#2839]\n            :     :     :  +- Join Inner, (customer_id#2821 = customer_id#2831)\n            :     :     :     :- Join Inner, (customer_id#2950 = customer_id#2821)\n            :     :     :     :  :- Filter (isnotnull(year_total#2829) AND (year_total#2829 > 0.000000))\n            :     :     :     :  :  +- Aggregate [c_customer_id#31, c_first_name#38, c_last_name#39, c_preferred_cust_flag#40, c_birth_country#44, c_login#45, c_email_address#46, d_year#77], [c_customer_id#31 AS customer_id#2821, sum(((((ss_ext_list_price#64 - ss_ext_wholesale_cost#63) - ss_ext_discount_amt#61) + ss_ext_sales_price#62) / 2)) AS year_total#2829]\n            :     :     :     :  :     +- Project [c_customer_id#31, c_first_name#38, c_last_name#39, c_preferred_cust_flag#40, c_birth_country#44, c_login#45, c_email_address#46, ss_ext_discount_amt#61, ss_ext_sales_price#62, ss_ext_wholesale_cost#63, ss_ext_list_price#64, d_year#77]\n            :     :     :     :  :        +- Join Inner, (c_customer_sk#30 = ss_customer_sk#50)\n            :     :     :     :  :           :- LogicalQueryStage Project [ss_customer_sk#50, ss_ext_discount_amt#61, ss_ext_sales_price#62, ss_ext_wholesale_cost#63, ss_ext_list_price#64, d_year#77], ShuffleQueryStage 21\n            :     :     :     :  :           +- LogicalQueryStage Project [c_customer_sk#30, c_customer_id#31, c_first_name#38, c_last_name#39, c_preferred_cust_flag#40, c_birth_country#44, c_login#45, c_email_address#46], ShuffleQueryStage 1\n            :     :     :     :  +- Aggregate [c_customer_id#4200, c_first_name#4207, c_last_name#4208, c_preferred_cust_flag#4209, c_birth_country#4213, c_login#4214, c_email_address#4215, d_year#4246], [c_customer_id#4200 AS customer_id#2950, c_first_name#4207 AS customer_first_name#2951, c_last_name#4208 AS customer_last_name#2952, c_email_address#4215 AS customer_email_address#2956, sum(((((ss_ext_list_price#4233 - ss_ext_wholesale_cost#4232) - ss_ext_discount_amt#4230) + ss_ext_sales_price#4231) / 2)) AS year_total#2958]\n            :     :     :     :     +- Project [c_customer_id#4200, c_first_name#4207, c_last_name#4208, c_preferred_cust_flag#4209, c_birth_country#4213, c_login#4214, c_email_address#4215, ss_ext_discount_amt#4230, ss_ext_sales_price#4231, ss_ext_wholesale_cost#4232, ss_ext_list_price#4233, d_year#4246]\n            :     :     :     :        +- Join Inner, (c_customer_sk#4199 = ss_customer_sk#4219)\n            :     :     :     :           :- LogicalQueryStage Project [ss_customer_sk#4219, ss_ext_discount_amt#4230, ss_ext_sales_price#4231, ss_ext_wholesale_cost#4232, ss_ext_list_price#4233, d_year#4246], ShuffleQueryStage 24\n            :     :     :     :           +- LogicalQueryStage Project [c_customer_sk#4199, c_customer_id#4200, c_first_name#4207, c_last_name#4208, c_preferred_cust_flag#4209, c_birth_country#4213, c_login#4214, c_email_address#4215], ShuffleQueryStage 4\n            :     :     :     +- Filter (isnotnull(year_total#2839) AND (year_total#2839 > 0.000000))\n            :     :     :        +- Aggregate [c_customer_id#4508, c_first_name#4515, c_last_name#4516, c_preferred_cust_flag#4517, c_birth_country#4521, c_login#4522, c_email_address#4523, d_year#4565], [c_customer_id#4508 AS customer_id#2831, sum(((((cs_ext_list_price#4549 - cs_ext_wholesale_cost#4548) - cs_ext_discount_amt#4546) + cs_ext_sales_price#4547) / 2)) AS year_total#2839]\n            :     :     :           +- Project [c_customer_id#4508, c_first_name#4515, c_last_name#4516, c_preferred_cust_flag#4517, c_birth_country#4521, c_login#4522, c_email_address#4523, cs_ext_discount_amt#4546, cs_ext_sales_price#4547, cs_ext_wholesale_cost#4548, cs_ext_list_price#4549, d_year#4565]\n            :     :     :              +- Join Inner, (c_customer_sk#4507 = cs_bill_customer_sk#4527)\n            :     :     :                 :- LogicalQueryStage Project [cs_bill_customer_sk#4527, cs_ext_discount_amt#4546, cs_ext_sales_price#4547, cs_ext_wholesale_cost#4548, cs_ext_list_price#4549, d_year#4565], ShuffleQueryStage 22\n            :     :     :                 +- LogicalQueryStage Project [c_customer_sk#4507, c_customer_id#4508, c_first_name#4515, c_last_name#4516, c_preferred_cust_flag#4517, c_birth_country#4521, c_login#4522, c_email_address#4523], ShuffleQueryStage 8\n            :     :     +- Aggregate [c_customer_id#4747, c_first_name#4754, c_last_name#4755, c_preferred_cust_flag#4756, c_birth_country#4760, c_login#4761, c_email_address#4762, d_year#4804], [c_customer_id#4747 AS customer_id#2970, sum(((((cs_ext_list_price#4788 - cs_ext_wholesale_cost#4787) - cs_ext_discount_amt#4785) + cs_ext_sales_price#4786) / 2)) AS year_total#2978]\n            :     :        +- Project [c_customer_id#4747, c_first_name#4754, c_last_name#4755, c_preferred_cust_flag#4756, c_birth_country#4760, c_login#4761, c_email_address#4762, cs_ext_discount_amt#4785, cs_ext_sales_price#4786, cs_ext_wholesale_cost#4787, cs_ext_list_price#4788, d_year#4804]\n            :     :           +- Join Inner, (c_customer_sk#4746 = cs_bill_customer_sk#4766)\n            :     :              :- LogicalQueryStage Project [cs_bill_customer_sk#4766, cs_ext_discount_amt#4785, cs_ext_sales_price#4786, cs_ext_wholesale_cost#4787, cs_ext_list_price#4788, d_year#4804], ShuffleQueryStage 25\n            :     :              +- LogicalQueryStage Project [c_customer_sk#4746, c_customer_id#4747, c_first_name#4754, c_last_name#4755, c_preferred_cust_flag#4756, c_birth_country#4760, c_login#4761, c_email_address#4762], ShuffleQueryStage 12\n            :     +- Filter (isnotnull(year_total#2849) AND (year_total#2849 > 0.000000))\n            :        +- Aggregate [c_customer_id#5066, c_first_name#5073, c_last_name#5074, c_preferred_cust_flag#5075, c_birth_country#5079, c_login#5080, c_email_address#5081, d_year#5123], [c_customer_id#5066 AS customer_id#2841, sum(((((ws_ext_list_price#5107 - ws_ext_wholesale_cost#5106) - ws_ext_discount_amt#5104) + ws_ext_sales_price#5105) / 2)) AS year_total#2849]\n            :           +- Project [c_customer_id#5066, c_first_name#5073, c_last_name#5074, c_preferred_cust_flag#5075, c_birth_country#5079, c_login#5080, c_email_address#5081, ws_ext_discount_amt#5104, ws_ext_sales_price#5105, ws_ext_wholesale_cost#5106, ws_ext_list_price#5107, d_year#5123]\n            :              +- Join Inner, (c_customer_sk#5065 = ws_bill_customer_sk#5086)\n            :                 :- LogicalQueryStage Project [ws_bill_customer_sk#5086, ws_ext_discount_amt#5104, ws_ext_sales_price#5105, ws_ext_wholesale_cost#5106, ws_ext_list_price#5107, d_year#5123], ShuffleQueryStage 23\n            :                 +- LogicalQueryStage Project [c_customer_sk#5065, c_customer_id#5066, c_first_name#5073, c_last_name#5074, c_preferred_cust_flag#5075, c_birth_country#5079, c_login#5080, c_email_address#5081], ShuffleQueryStage 16\n            +- Aggregate [c_customer_id#5305, c_first_name#5312, c_last_name#5313, c_preferred_cust_flag#5314, c_birth_country#5318, c_login#5319, c_email_address#5320, d_year#5362], [c_customer_id#5305 AS customer_id#2990, sum(((((ws_ext_list_price#5346 - ws_ext_wholesale_cost#5345) - ws_ext_discount_amt#5343) + ws_ext_sales_price#5344) / 2)) AS year_total#2998]\n               +- Project [c_customer_id#5305, c_first_name#5312, c_last_name#5313, c_preferred_cust_flag#5314, c_birth_country#5318, c_login#5319, c_email_address#5320, ws_ext_discount_amt#5343, ws_ext_sales_price#5344, ws_ext_wholesale_cost#5345, ws_ext_list_price#5346, d_year#5362]\n                  +- Join Inner, (c_customer_sk#5304 = ws_bill_customer_sk#5325)\n                     :- LogicalQueryStage Project [ws_bill_customer_sk#5325, ws_ext_discount_amt#5343, ws_ext_sales_price#5344, ws_ext_wholesale_cost#5345, ws_ext_list_price#5346, d_year#5362], ShuffleQueryStage 26\n                     +- LogicalQueryStage Project [c_customer_sk#5304, c_customer_id#5305, c_first_name#5312, c_last_name#5313, c_preferred_cust_flag#5314, c_birth_country#5318, c_login#5319, c_email_address#5320], ShuffleQueryStage 20\n"
      },
      "IM" : {
        "inputSizeInBytes" : 47297448432,
        "inputRowCount" : 959104904
      },
      "PD" : {
        "0" : [ 830145, 830145, 754677, 830145, 830145, 830145, 754677, 754677, 830145, 830145, 830145, 754677, 830145, 830145, 754677, 830145, 830145, 830145, 754677, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 754677, 830145, 830145, 754677, 830145, 830145, 754677, 754677, 754677, 754677, 754677, 830145, 754677, 830145, 830145, 754677, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 754677, 754677, 754677, 830145, 830145, 830145, 754677, 830145, 754677, 830145, 830145, 754677, 830145, 830145, 830145, 754677, 754677, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 754677, 754677, 754677, 754677, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 754677, 754677, 830145, 754677, 754677, 830145, 830145, 754677, 830145, 830145, 830145, 830145, 754677, 754677, 830145, 830145, 830145, 754677, 830145, 830145, 754677, 754677, 754677, 830145, 754677, 830145, 830145, 754677, 830145, 830145, 754677, 754677, 754677, 754677, 830145, 830145, 830145, 830145, 754677, 754677, 830145, 830145, 830145, 830145, 754677, 754677, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 754677, 754677, 830145, 830145, 754677, 830145, 830145, 830145, 830145, 830145, 754677, 830145, 830145, 830145, 830145, 830145, 754677, 830145, 754677, 830145, 754677, 754677, 830145, 830145, 754677, 830145, 830145, 830145, 830145, 754677, 830145, 830145, 830145, 754677, 754677, 830145, 830145, 830145, 830145, 830145, 754677 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 16,
        "FinishedTasksNum" : 38,
        "FinishedTasksTotalTimeInMs" : 50707.0,
        "FinishedTasksDistributionInMs" : [ 746.0, 889.0, 1213.0, 1789.0, 2952.0 ]
      },
      "StartTimeInMs" : 1702226519056,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 49622,
        "IOBytes" : {
          "Total" : 14216287041,
          "Details" : {
            "IR" : 3048888025,
            "IW" : 0,
            "SR" : 6038854810,
            "SW" : 5128544206
          }
        }
      }
    },
    "15" : {
      "LQP" : {
        "operators" : {
          "12" : {
            "sign" : -1458191872,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 101735088,
            "rowCount" : 1816698,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Filter (isnotnull(year_total#2829) AND (year_total#2829 > 0.000000)), ShuffleQueryStage 33 "
          },
          "8" : {
            "sign" : -1884134972,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 2298452561007614416121592541138200,
            "rowCount" : 10215344715589397404984855738392,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, ((customer_id#2821 = customer_id#2970) AND (CASE WHEN (year_total#2839 > 0.000000) THEN (year_total#2978 / year_total#2839) END > CASE WHEN (year_total#2829 > 0.000000) THEN (year_total#2958 / year_total#2829) END)) "
          },
          "4" : {
            "sign" : -1967237978,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 12028633123011197647410779183304185270384604403200,
            "rowCount" : 53460591657827545099603463036907490090598241792,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, ((customer_id#2821 = customer_id#2990) AND (CASE WHEN (year_total#2839 > 0.000000) THEN (year_total#2978 / year_total#2839) END > CASE WHEN (year_total#2849 > 0.000000) THEN (year_total#2998 / year_total#2849) END)) "
          },
          "15" : {
            "sign" : -1414276816,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 7435110696,
            "rowCount" : 142982898,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [c_customer_id#4747, c_first_name#4754, c_last_name#4755, c_preferred_cust_flag#4756, c_birth_country#4760, c_login#4761, c_email_address#4762, d_year#4804], [c_customer_id#4747 AS customer_id#2970, sum(((((cs_ext_list_price#4788 - cs_ext_wholesale_cost#4787) - cs_ext_discount_amt#4785) + cs_ext_sales_price#4786) / 2)) AS year_total#2978], HashAggregate(keys=[c_customer_id#4747, c_first_name#4754, c_last_name#4755, c_preferred_cust_flag#4756, c_birth_country#4760, c_login#4761, c_email_address#4762, d_year#4804], functions=[sum(((((cs_ext_list_price#4788 - cs_ext_wholesale_cost#4787) - cs_ext_discount_amt#4785) + cs_ext_sales_price#4786) / 2))]) "
          },
          "11" : {
            "sign" : -1441832503,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 82445846289476670,
            "rowCount" : 499671795693798,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (customer_id#2950 = customer_id#2821) "
          },
          "9" : {
            "sign" : -262489225,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 12931458372886531718655324,
            "rowCount" : 71444521397163158666604,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [customer_id#2821, year_total#2829, customer_id#2950, customer_first_name#2951, customer_last_name#2952, customer_email_address#2956, year_total#2958, year_total#2839] "
          },
          "13" : {
            "sign" : 2038413297,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 35480669679,
            "rowCount" : 275043951,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [c_customer_id#4200, c_first_name#4207, c_last_name#4208, c_preferred_cust_flag#4209, c_birth_country#4213, c_login#4214, c_email_address#4215, d_year#4246], [c_customer_id#4200 AS customer_id#2950, c_first_name#4207 AS customer_first_name#2951, c_last_name#4208 AS customer_last_name#2952, c_email_address#4215 AS customer_email_address#2956, sum(((((ss_ext_list_price#4233 - ss_ext_wholesale_cost#4232) - ss_ext_discount_amt#4230) + ss_ext_sales_price#4231) / 2)) AS year_total#2958], ShuffleQueryStage 36 "
          },
          "16" : {
            "sign" : 2009240091,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 3761782752,
            "rowCount" : 72341976,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Filter (isnotnull(year_total#2849) AND (year_total#2849 > 0.000000)), ShuffleQueryStage 34 "
          },
          "5" : {
            "sign" : 1542204426,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 133758678226687997339583685268429158009152,
            "rowCount" : 738998222246895012925876714190216342592,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [customer_id#2821, customer_id#2950, customer_first_name#2951, customer_last_name#2952, customer_email_address#2956, year_total#2839, year_total#2978, year_total#2849] "
          },
          "10" : {
            "sign" : 1387654351,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 14931904972007100161320236,
            "rowCount" : 71444521397163158666604,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (customer_id#2821 = customer_id#2831) "
          },
          "6" : {
            "sign" : 1337486816,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 154450628449601057701508233265755215601728,
            "rowCount" : 738998222246895012925876714190216342592,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (customer_id#2821 = customer_id#2841) "
          },
          "1" : {
            "sign" : 296920270,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
            "sizeInBytes" : 6041046857334512596255191323170546380237601322496,
            "rowCount" : 53460591657827545099603463036907490090598241792,
            "isRuntime" : false,
            "predicate" : " (unknown) LocalLimit Arguments: 100 "
          },
          "17" : {
            "sign" : 404059991,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 3761782752,
            "rowCount" : 72341976,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [c_customer_id#5305, c_first_name#5312, c_last_name#5313, c_preferred_cust_flag#5314, c_birth_country#5318, c_login#5319, c_email_address#5320, d_year#5362], [c_customer_id#5305 AS customer_id#2990, sum(((((ws_ext_list_price#5346 - ws_ext_wholesale_cost#5345) - ws_ext_discount_amt#5343) + ws_ext_sales_price#5344) / 2)) AS year_total#2998], HashAggregate(keys=[c_customer_id#5305, c_first_name#5312, c_last_name#5313, c_preferred_cust_flag#5314, c_birth_country#5318, c_login#5319, c_email_address#5320, d_year#5362], functions=[sum(((((ws_ext_list_price#5346 - ws_ext_wholesale_cost#5345) - ws_ext_discount_amt#5343) + ws_ext_sales_price#5344) / 2))]) "
          },
          "14" : {
            "sign" : 275524156,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 7435110696,
            "rowCount" : 142982898,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Filter (isnotnull(year_total#2839) AND (year_total#2839 > 0.000000)), ShuffleQueryStage 35 "
          },
          "0" : {
            "sign" : 1444708045,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
            "sizeInBytes" : 8800,
            "rowCount" : 100,
            "isRuntime" : false,
            "predicate" : " (unknown) GlobalLimit Arguments: 100 "
          },
          "2" : {
            "sign" : 1461105699,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 6041046857334512596255191323170546380237601322496,
            "rowCount" : 53460591657827545099603463036907490090598241792,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [customer_id#2950 ASC NULLS FIRST, customer_first_name#2951 ASC NULLS FIRST, customer_last_name#2952 ASC NULLS FIRST, customer_email_address#2956 ASC NULLS FIRST], true "
          },
          "7" : {
            "sign" : 1178387794,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 1685531878072250571822501196834680,
            "rowCount" : 10215344715589397404984855738392,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [customer_id#2821, customer_id#2950, customer_first_name#2951, customer_last_name#2952, customer_email_address#2956, year_total#2839, year_total#2978] "
          },
          "3" : {
            "sign" : -255943154,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 6041046857334512596255191323170546380237601322496,
            "rowCount" : 53460591657827545099603463036907490090598241792,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [customer_id#2950, customer_first_name#2951, customer_last_name#2952, customer_email_address#2956] "
          }
        },
        "links" : [ {
          "fromId" : 12,
          "fromName" : "LogicalQueryStage",
          "toId" : 11,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 13,
          "fromName" : "LogicalQueryStage",
          "toId" : 11,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "Join",
          "toId" : 10,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 14,
          "fromName" : "LogicalQueryStage",
          "toId" : 10,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "Join",
          "toId" : 9,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "Project",
          "toId" : 8,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 15,
          "fromName" : "LogicalQueryStage",
          "toId" : 8,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "Join",
          "toId" : 7,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Project",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 16,
          "fromName" : "LogicalQueryStage",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Join",
          "toId" : 5,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Project",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 17,
          "fromName" : "LogicalQueryStage",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Join",
          "toId" : 3,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Project",
          "toId" : 2,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "LocalLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "LocalLimit",
          "toId" : 0,
          "toName" : "GlobalLimit",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [customer_id#2950 ASC NULLS FIRST, customer_first_name#2951 ASC NULLS FIRST, customer_last_name#2952 ASC NULLS FIRST, customer_email_address#2956 ASC NULLS FIRST], true\n      +- Project [customer_id#2950, customer_first_name#2951, customer_last_name#2952, customer_email_address#2956]\n         +- Join Inner, ((customer_id#2821 = customer_id#2990) AND (CASE WHEN (year_total#2839 > 0.000000) THEN (year_total#2978 / year_total#2839) END > CASE WHEN (year_total#2849 > 0.000000) THEN (year_total#2998 / year_total#2849) END))\n            :- Project [customer_id#2821, customer_id#2950, customer_first_name#2951, customer_last_name#2952, customer_email_address#2956, year_total#2839, year_total#2978, year_total#2849]\n            :  +- Join Inner, (customer_id#2821 = customer_id#2841)\n            :     :- Project [customer_id#2821, customer_id#2950, customer_first_name#2951, customer_last_name#2952, customer_email_address#2956, year_total#2839, year_total#2978]\n            :     :  +- Join Inner, ((customer_id#2821 = customer_id#2970) AND (CASE WHEN (year_total#2839 > 0.000000) THEN (year_total#2978 / year_total#2839) END > CASE WHEN (year_total#2829 > 0.000000) THEN (year_total#2958 / year_total#2829) END))\n            :     :     :- Project [customer_id#2821, year_total#2829, customer_id#2950, customer_first_name#2951, customer_last_name#2952, customer_email_address#2956, year_total#2958, year_total#2839]\n            :     :     :  +- Join Inner, (customer_id#2821 = customer_id#2831)\n            :     :     :     :- Join Inner, (customer_id#2950 = customer_id#2821)\n            :     :     :     :  :- LogicalQueryStage Filter (isnotnull(year_total#2829) AND (year_total#2829 > 0.000000)), ShuffleQueryStage 33\n            :     :     :     :  +- LogicalQueryStage Aggregate [c_customer_id#4200, c_first_name#4207, c_last_name#4208, c_preferred_cust_flag#4209, c_birth_country#4213, c_login#4214, c_email_address#4215, d_year#4246], [c_customer_id#4200 AS customer_id#2950, c_first_name#4207 AS customer_first_name#2951, c_last_name#4208 AS customer_last_name#2952, c_email_address#4215 AS customer_email_address#2956, sum(((((ss_ext_list_price#4233 - ss_ext_wholesale_cost#4232) - ss_ext_discount_amt#4230) + ss_ext_sales_price#4231) / 2)) AS year_total#2958], ShuffleQueryStage 36\n            :     :     :     +- LogicalQueryStage Filter (isnotnull(year_total#2839) AND (year_total#2839 > 0.000000)), ShuffleQueryStage 35\n            :     :     +- LogicalQueryStage Aggregate [c_customer_id#4747, c_first_name#4754, c_last_name#4755, c_preferred_cust_flag#4756, c_birth_country#4760, c_login#4761, c_email_address#4762, d_year#4804], [c_customer_id#4747 AS customer_id#2970, sum(((((cs_ext_list_price#4788 - cs_ext_wholesale_cost#4787) - cs_ext_discount_amt#4785) + cs_ext_sales_price#4786) / 2)) AS year_total#2978], HashAggregate(keys=[c_customer_id#4747, c_first_name#4754, c_last_name#4755, c_preferred_cust_flag#4756, c_birth_country#4760, c_login#4761, c_email_address#4762, d_year#4804], functions=[sum(((((cs_ext_list_price#4788 - cs_ext_wholesale_cost#4787) - cs_ext_discount_amt#4785) + cs_ext_sales_price#4786) / 2))])\n            :     +- LogicalQueryStage Filter (isnotnull(year_total#2849) AND (year_total#2849 > 0.000000)), ShuffleQueryStage 34\n            +- LogicalQueryStage Aggregate [c_customer_id#5305, c_first_name#5312, c_last_name#5313, c_preferred_cust_flag#5314, c_birth_country#5318, c_login#5319, c_email_address#5320, d_year#5362], [c_customer_id#5305 AS customer_id#2990, sum(((((ws_ext_list_price#5346 - ws_ext_wholesale_cost#5345) - ws_ext_discount_amt#5343) + ws_ext_sales_price#5344) / 2)) AS year_total#2998], HashAggregate(keys=[c_customer_id#5305, c_first_name#5312, c_last_name#5313, c_preferred_cust_flag#5314, c_birth_country#5318, c_login#5319, c_email_address#5320, d_year#5362], functions=[sum(((((ws_ext_list_price#5346 - ws_ext_wholesale_cost#5345) - ws_ext_discount_amt#5343) + ws_ext_sales_price#5344) / 2))])\n"
      },
      "IM" : {
        "inputSizeInBytes" : 57976191663,
        "inputRowCount" : 707510397
      },
      "PD" : {
        "13" : [ 153496, 153496, 147740, 153496, 153496, 147740, 141984, 147740, 153496, 156181, 153496, 153496, 153496, 156181, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 147740, 153496, 153496, 153496, 156181, 153496, 153496, 156181, 153496, 153496, 141984, 153496, 153496, 147740, 156181, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 156181, 153496, 147740, 153496, 156181, 150425, 153496, 153496, 153496, 150425, 156181, 153496, 147740, 153496, 153496, 156181, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 156181, 153496, 153496, 153496, 147740, 153496, 153496, 150425, 153496, 153496, 153496, 156181, 156181, 153496, 153496, 153496, 153496, 147740, 153496, 153496, 153496, 153496, 156181, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 156181, 147740, 153496, 153496, 153496, 156181, 153496, 153496, 153496, 153496, 153496, 156181, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 156181, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 156181, 153496, 153496, 147740, 153496, 147740, 153496, 150425, 153496, 153496, 153496, 153496, 156181, 147740, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 147740, 153496, 147740, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 147740, 147740, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 147740, 156181, 156181, 153496, 156181, 153496, 153496, 153496, 153496, 156181, 153496 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 16,
        "FinishedTasksNum" : 11,
        "FinishedTasksTotalTimeInMs" : 45372.0,
        "FinishedTasksDistributionInMs" : [ 3784.0, 4005.0, 4062.0, 4213.0, 4955.0 ]
      },
      "StartTimeInMs" : 1702226549830,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 18848,
        "IOBytes" : {
          "Total" : 2539357609,
          "Details" : {
            "IR" : 0,
            "IW" : 0,
            "SR" : 2122291292,
            "SW" : 417066317
          }
        }
      }
    },
    "11" : {
      "LQP" : {
        "operators" : {
          "12" : {
            "sign" : 1582451270,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 79934712,
            "rowCount" : 1816698,
            "isRuntime" : true,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(year_total#2829) AND (year_total#2829 > 0.000000)) "
          },
          "8" : {
            "sign" : 1180879131,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 2298452561007614416121592541138200,
            "rowCount" : 10215344715589397404984855738392,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, ((customer_id#2821 = customer_id#2970) AND (CASE WHEN (year_total#2839 > 0.000000) THEN (year_total#2978 / year_total#2839) END > CASE WHEN (year_total#2829 > 0.000000) THEN (year_total#2958 / year_total#2829) END)) "
          },
          "19" : {
            "sign" : -1463056171,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 3761782752,
            "rowCount" : 72341976,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [c_customer_id#5066, c_first_name#5073, c_last_name#5074, c_preferred_cust_flag#5075, c_birth_country#5079, c_login#5080, c_email_address#5081, d_year#5123], [c_customer_id#5066 AS customer_id#2841, sum(((((ws_ext_list_price#5107 - ws_ext_wholesale_cost#5106) - ws_ext_discount_amt#5104) + ws_ext_sales_price#5105) / 2)) AS year_total#2849], HashAggregate(keys=[c_customer_id#5066, c_first_name#5073, c_last_name#5074, c_preferred_cust_flag#5075, c_birth_country#5079, c_login#5080, c_email_address#5081, d_year#5123], functions=[sum(((((ws_ext_list_price#5107 - ws_ext_wholesale_cost#5106) - ws_ext_discount_amt#5104) + ws_ext_sales_price#5105) / 2))]) "
          },
          "4" : {
            "sign" : 1425110031,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 12028633123011197647410779183304185270384604403200,
            "rowCount" : 53460591657827545099603463036907490090598241792,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, ((customer_id#2821 = customer_id#2990) AND (CASE WHEN (year_total#2839 > 0.000000) THEN (year_total#2978 / year_total#2839) END > CASE WHEN (year_total#2849 > 0.000000) THEN (year_total#2998 / year_total#2849) END)) "
          },
          "15" : {
            "sign" : -237935041,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 7435110696,
            "rowCount" : 142982898,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(year_total#2839) AND (year_total#2839 > 0.000000)) "
          },
          "11" : {
            "sign" : 1164811485,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 82445846289476670,
            "rowCount" : 499671795693798,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (customer_id#2950 = customer_id#2821) "
          },
          "9" : {
            "sign" : 2105067798,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 12931458372886531718655324,
            "rowCount" : 71444521397163158666604,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [customer_id#2821, year_total#2829, customer_id#2950, customer_first_name#2951, customer_last_name#2952, customer_email_address#2956, year_total#2958, year_total#2839] "
          },
          "13" : {
            "sign" : 429932782,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 336147640,
            "rowCount" : 1816698,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [c_customer_id#31, c_first_name#38, c_last_name#39, c_preferred_cust_flag#40, c_birth_country#44, c_login#45, c_email_address#46, d_year#77], [c_customer_id#31 AS customer_id#2821, sum(((((ss_ext_list_price#64 - ss_ext_wholesale_cost#63) - ss_ext_discount_amt#61) + ss_ext_sales_price#62) / 2)) AS year_total#2829], HashAggregate(keys=[c_customer_id#31, c_first_name#38, c_last_name#39, c_preferred_cust_flag#40, c_birth_country#44, c_login#45, c_email_address#46, d_year#77], functions=[sum(((((ss_ext_list_price#64 - ss_ext_wholesale_cost#63) - ss_ext_discount_amt#61) + ss_ext_sales_price#62) / 2))]) "
          },
          "16" : {
            "sign" : 802064549,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 7435110696,
            "rowCount" : 142982898,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [c_customer_id#4508, c_first_name#4515, c_last_name#4516, c_preferred_cust_flag#4517, c_birth_country#4521, c_login#4522, c_email_address#4523, d_year#4565], [c_customer_id#4508 AS customer_id#2831, sum(((((cs_ext_list_price#4549 - cs_ext_wholesale_cost#4548) - cs_ext_discount_amt#4546) + cs_ext_sales_price#4547) / 2)) AS year_total#2839], HashAggregate(keys=[c_customer_id#4508, c_first_name#4515, c_last_name#4516, c_preferred_cust_flag#4517, c_birth_country#4521, c_login#4522, c_email_address#4523, d_year#4565], functions=[sum(((((cs_ext_list_price#4549 - cs_ext_wholesale_cost#4548) - cs_ext_discount_amt#4546) + cs_ext_sales_price#4547) / 2))]) "
          },
          "5" : {
            "sign" : -1838984471,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 133758678226687997339583685268429158009152,
            "rowCount" : 738998222246895012925876714190216342592,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [customer_id#2821, customer_id#2950, customer_first_name#2951, customer_last_name#2952, customer_email_address#2956, year_total#2839, year_total#2978, year_total#2849] "
          },
          "10" : {
            "sign" : 2091177496,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 14931904972007100161320236,
            "rowCount" : 71444521397163158666604,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (customer_id#2821 = customer_id#2831) "
          },
          "6" : {
            "sign" : 481825521,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 154450628449601057701508233265755215601728,
            "rowCount" : 738998222246895012925876714190216342592,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (customer_id#2821 = customer_id#2841) "
          },
          "1" : {
            "sign" : -676024311,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
            "sizeInBytes" : 6041046857334512596255191323170546380237601322496,
            "rowCount" : 53460591657827545099603463036907490090598241792,
            "isRuntime" : false,
            "predicate" : " (unknown) LocalLimit Arguments: 100 "
          },
          "17" : {
            "sign" : -1414276816,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 7435110696,
            "rowCount" : 142982898,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [c_customer_id#4747, c_first_name#4754, c_last_name#4755, c_preferred_cust_flag#4756, c_birth_country#4760, c_login#4761, c_email_address#4762, d_year#4804], [c_customer_id#4747 AS customer_id#2970, sum(((((cs_ext_list_price#4788 - cs_ext_wholesale_cost#4787) - cs_ext_discount_amt#4785) + cs_ext_sales_price#4786) / 2)) AS year_total#2978], HashAggregate(keys=[c_customer_id#4747, c_first_name#4754, c_last_name#4755, c_preferred_cust_flag#4756, c_birth_country#4760, c_login#4761, c_email_address#4762, d_year#4804], functions=[sum(((((cs_ext_list_price#4788 - cs_ext_wholesale_cost#4787) - cs_ext_discount_amt#4785) + cs_ext_sales_price#4786) / 2))]) "
          },
          "14" : {
            "sign" : 1410425053,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 35480669679,
            "rowCount" : 275043951,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [c_customer_id#4200, c_first_name#4207, c_last_name#4208, c_preferred_cust_flag#4209, c_birth_country#4213, c_login#4214, c_email_address#4215, d_year#4246], [c_customer_id#4200 AS customer_id#2950, c_first_name#4207 AS customer_first_name#2951, c_last_name#4208 AS customer_last_name#2952, c_email_address#4215 AS customer_email_address#2956, sum(((((ss_ext_list_price#4233 - ss_ext_wholesale_cost#4232) - ss_ext_discount_amt#4230) + ss_ext_sales_price#4231) / 2)) AS year_total#2958], HashAggregate(keys=[c_customer_id#4200, c_first_name#4207, c_last_name#4208, c_preferred_cust_flag#4209, c_birth_country#4213, c_login#4214, c_email_address#4215, d_year#4246], functions=[sum(((((ss_ext_list_price#4233 - ss_ext_wholesale_cost#4232) - ss_ext_discount_amt#4230) + ss_ext_sales_price#4231) / 2))]) "
          },
          "0" : {
            "sign" : 1455780854,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
            "sizeInBytes" : 8800,
            "rowCount" : 100,
            "isRuntime" : false,
            "predicate" : " (unknown) GlobalLimit Arguments: 100 "
          },
          "20" : {
            "sign" : 404059991,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 3761782752,
            "rowCount" : 72341976,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [c_customer_id#5305, c_first_name#5312, c_last_name#5313, c_preferred_cust_flag#5314, c_birth_country#5318, c_login#5319, c_email_address#5320, d_year#5362], [c_customer_id#5305 AS customer_id#2990, sum(((((ws_ext_list_price#5346 - ws_ext_wholesale_cost#5345) - ws_ext_discount_amt#5343) + ws_ext_sales_price#5344) / 2)) AS year_total#2998], HashAggregate(keys=[c_customer_id#5305, c_first_name#5312, c_last_name#5313, c_preferred_cust_flag#5314, c_birth_country#5318, c_login#5319, c_email_address#5320, d_year#5362], functions=[sum(((((ws_ext_list_price#5346 - ws_ext_wholesale_cost#5345) - ws_ext_discount_amt#5343) + ws_ext_sales_price#5344) / 2))]) "
          },
          "2" : {
            "sign" : -1756975412,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 6041046857334512596255191323170546380237601322496,
            "rowCount" : 53460591657827545099603463036907490090598241792,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [customer_id#2950 ASC NULLS FIRST, customer_first_name#2951 ASC NULLS FIRST, customer_last_name#2952 ASC NULLS FIRST, customer_email_address#2956 ASC NULLS FIRST], true "
          },
          "18" : {
            "sign" : 482427057,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 3761782752,
            "rowCount" : 72341976,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(year_total#2849) AND (year_total#2849 > 0.000000)) "
          },
          "7" : {
            "sign" : 672354725,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 1685531878072250571822501196834680,
            "rowCount" : 10215344715589397404984855738392,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [customer_id#2821, customer_id#2950, customer_first_name#2951, customer_last_name#2952, customer_email_address#2956, year_total#2839, year_total#2978] "
          },
          "3" : {
            "sign" : 1937991177,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 6041046857334512596255191323170546380237601322496,
            "rowCount" : 53460591657827545099603463036907490090598241792,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [customer_id#2950, customer_first_name#2951, customer_last_name#2952, customer_email_address#2956] "
          }
        },
        "links" : [ {
          "fromId" : 13,
          "fromName" : "LogicalQueryStage",
          "toId" : 12,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 12,
          "fromName" : "Filter",
          "toId" : 11,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 14,
          "fromName" : "LogicalQueryStage",
          "toId" : 11,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "Join",
          "toId" : 10,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 16,
          "fromName" : "LogicalQueryStage",
          "toId" : 15,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 15,
          "fromName" : "Filter",
          "toId" : 10,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "Join",
          "toId" : 9,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "Project",
          "toId" : 8,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 17,
          "fromName" : "LogicalQueryStage",
          "toId" : 8,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "Join",
          "toId" : 7,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Project",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 19,
          "fromName" : "LogicalQueryStage",
          "toId" : 18,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 18,
          "fromName" : "Filter",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Join",
          "toId" : 5,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Project",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 20,
          "fromName" : "LogicalQueryStage",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Join",
          "toId" : 3,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Project",
          "toId" : 2,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "LocalLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "LocalLimit",
          "toId" : 0,
          "toName" : "GlobalLimit",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [customer_id#2950 ASC NULLS FIRST, customer_first_name#2951 ASC NULLS FIRST, customer_last_name#2952 ASC NULLS FIRST, customer_email_address#2956 ASC NULLS FIRST], true\n      +- Project [customer_id#2950, customer_first_name#2951, customer_last_name#2952, customer_email_address#2956]\n         +- Join Inner, ((customer_id#2821 = customer_id#2990) AND (CASE WHEN (year_total#2839 > 0.000000) THEN (year_total#2978 / year_total#2839) END > CASE WHEN (year_total#2849 > 0.000000) THEN (year_total#2998 / year_total#2849) END))\n            :- Project [customer_id#2821, customer_id#2950, customer_first_name#2951, customer_last_name#2952, customer_email_address#2956, year_total#2839, year_total#2978, year_total#2849]\n            :  +- Join Inner, (customer_id#2821 = customer_id#2841)\n            :     :- Project [customer_id#2821, customer_id#2950, customer_first_name#2951, customer_last_name#2952, customer_email_address#2956, year_total#2839, year_total#2978]\n            :     :  +- Join Inner, ((customer_id#2821 = customer_id#2970) AND (CASE WHEN (year_total#2839 > 0.000000) THEN (year_total#2978 / year_total#2839) END > CASE WHEN (year_total#2829 > 0.000000) THEN (year_total#2958 / year_total#2829) END))\n            :     :     :- Project [customer_id#2821, year_total#2829, customer_id#2950, customer_first_name#2951, customer_last_name#2952, customer_email_address#2956, year_total#2958, year_total#2839]\n            :     :     :  +- Join Inner, (customer_id#2821 = customer_id#2831)\n            :     :     :     :- Join Inner, (customer_id#2950 = customer_id#2821)\n            :     :     :     :  :- Filter (isnotnull(year_total#2829) AND (year_total#2829 > 0.000000))\n            :     :     :     :  :  +- LogicalQueryStage Aggregate [c_customer_id#31, c_first_name#38, c_last_name#39, c_preferred_cust_flag#40, c_birth_country#44, c_login#45, c_email_address#46, d_year#77], [c_customer_id#31 AS customer_id#2821, sum(((((ss_ext_list_price#64 - ss_ext_wholesale_cost#63) - ss_ext_discount_amt#61) + ss_ext_sales_price#62) / 2)) AS year_total#2829], HashAggregate(keys=[c_customer_id#31, c_first_name#38, c_last_name#39, c_preferred_cust_flag#40, c_birth_country#44, c_login#45, c_email_address#46, d_year#77], functions=[sum(((((ss_ext_list_price#64 - ss_ext_wholesale_cost#63) - ss_ext_discount_amt#61) + ss_ext_sales_price#62) / 2))])\n            :     :     :     :  +- LogicalQueryStage Aggregate [c_customer_id#4200, c_first_name#4207, c_last_name#4208, c_preferred_cust_flag#4209, c_birth_country#4213, c_login#4214, c_email_address#4215, d_year#4246], [c_customer_id#4200 AS customer_id#2950, c_first_name#4207 AS customer_first_name#2951, c_last_name#4208 AS customer_last_name#2952, c_email_address#4215 AS customer_email_address#2956, sum(((((ss_ext_list_price#4233 - ss_ext_wholesale_cost#4232) - ss_ext_discount_amt#4230) + ss_ext_sales_price#4231) / 2)) AS year_total#2958], HashAggregate(keys=[c_customer_id#4200, c_first_name#4207, c_last_name#4208, c_preferred_cust_flag#4209, c_birth_country#4213, c_login#4214, c_email_address#4215, d_year#4246], functions=[sum(((((ss_ext_list_price#4233 - ss_ext_wholesale_cost#4232) - ss_ext_discount_amt#4230) + ss_ext_sales_price#4231) / 2))])\n            :     :     :     +- Filter (isnotnull(year_total#2839) AND (year_total#2839 > 0.000000))\n            :     :     :        +- LogicalQueryStage Aggregate [c_customer_id#4508, c_first_name#4515, c_last_name#4516, c_preferred_cust_flag#4517, c_birth_country#4521, c_login#4522, c_email_address#4523, d_year#4565], [c_customer_id#4508 AS customer_id#2831, sum(((((cs_ext_list_price#4549 - cs_ext_wholesale_cost#4548) - cs_ext_discount_amt#4546) + cs_ext_sales_price#4547) / 2)) AS year_total#2839], HashAggregate(keys=[c_customer_id#4508, c_first_name#4515, c_last_name#4516, c_preferred_cust_flag#4517, c_birth_country#4521, c_login#4522, c_email_address#4523, d_year#4565], functions=[sum(((((cs_ext_list_price#4549 - cs_ext_wholesale_cost#4548) - cs_ext_discount_amt#4546) + cs_ext_sales_price#4547) / 2))])\n            :     :     +- LogicalQueryStage Aggregate [c_customer_id#4747, c_first_name#4754, c_last_name#4755, c_preferred_cust_flag#4756, c_birth_country#4760, c_login#4761, c_email_address#4762, d_year#4804], [c_customer_id#4747 AS customer_id#2970, sum(((((cs_ext_list_price#4788 - cs_ext_wholesale_cost#4787) - cs_ext_discount_amt#4785) + cs_ext_sales_price#4786) / 2)) AS year_total#2978], HashAggregate(keys=[c_customer_id#4747, c_first_name#4754, c_last_name#4755, c_preferred_cust_flag#4756, c_birth_country#4760, c_login#4761, c_email_address#4762, d_year#4804], functions=[sum(((((cs_ext_list_price#4788 - cs_ext_wholesale_cost#4787) - cs_ext_discount_amt#4785) + cs_ext_sales_price#4786) / 2))])\n            :     +- Filter (isnotnull(year_total#2849) AND (year_total#2849 > 0.000000))\n            :        +- LogicalQueryStage Aggregate [c_customer_id#5066, c_first_name#5073, c_last_name#5074, c_preferred_cust_flag#5075, c_birth_country#5079, c_login#5080, c_email_address#5081, d_year#5123], [c_customer_id#5066 AS customer_id#2841, sum(((((ws_ext_list_price#5107 - ws_ext_wholesale_cost#5106) - ws_ext_discount_amt#5104) + ws_ext_sales_price#5105) / 2)) AS year_total#2849], HashAggregate(keys=[c_customer_id#5066, c_first_name#5073, c_last_name#5074, c_preferred_cust_flag#5075, c_birth_country#5079, c_login#5080, c_email_address#5081, d_year#5123], functions=[sum(((((ws_ext_list_price#5107 - ws_ext_wholesale_cost#5106) - ws_ext_discount_amt#5104) + ws_ext_sales_price#5105) / 2))])\n            +- LogicalQueryStage Aggregate [c_customer_id#5305, c_first_name#5312, c_last_name#5313, c_preferred_cust_flag#5314, c_birth_country#5318, c_login#5319, c_email_address#5320, d_year#5362], [c_customer_id#5305 AS customer_id#2990, sum(((((ws_ext_list_price#5346 - ws_ext_wholesale_cost#5345) - ws_ext_discount_amt#5343) + ws_ext_sales_price#5344) / 2)) AS year_total#2998], HashAggregate(keys=[c_customer_id#5305, c_first_name#5312, c_last_name#5313, c_preferred_cust_flag#5314, c_birth_country#5318, c_login#5319, c_email_address#5320, d_year#5362], functions=[sum(((((ws_ext_list_price#5346 - ws_ext_wholesale_cost#5345) - ws_ext_discount_amt#5343) + ws_ext_sales_price#5344) / 2))])\n"
      },
      "IM" : {
        "inputSizeInBytes" : 58210604215,
        "inputRowCount" : 707510397
      },
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 16,
        "FinishedTasksNum" : 12,
        "FinishedTasksTotalTimeInMs" : 46954.0,
        "FinishedTasksDistributionInMs" : [ 3714.0, 3775.0, 3864.0, 4177.0, 4259.0 ]
      },
      "StartTimeInMs" : 1702226535474,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 33204,
        "IOBytes" : {
          "Total" : 5629716908,
          "Details" : {
            "IR" : 0,
            "IW" : 0,
            "SR" : 4813315090,
            "SW" : 816401818
          }
        }
      }
    },
    "9" : {
      "LQP" : {
        "operators" : {
          "12" : {
            "sign" : 1582451270,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 14302285452,
            "rowCount" : 275043951,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(year_total#2829) AND (year_total#2829 > 0.000000)) "
          },
          "8" : {
            "sign" : -6120958,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 1278383746697627285347632000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, ((customer_id#2821 = customer_id#2970) AND (CASE WHEN (year_total#2839 > 0.000000) THEN (year_total#2978 / year_total#2839) END > CASE WHEN (year_total#2829 > 0.000000) THEN (year_total#2958 / year_total#2829) END)) "
          },
          "19" : {
            "sign" : -1247342346,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 10914898176000000,
            "rowCount" : 56848428000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (c_customer_sk#4746 = cs_bill_customer_sk#4766) "
          },
          "23" : {
            "sign" : -1463056171,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 3761782752,
            "rowCount" : 72341976,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [c_customer_id#5066, c_first_name#5073, c_last_name#5074, c_preferred_cust_flag#5075, c_birth_country#5079, c_login#5080, c_email_address#5081, d_year#5123], [c_customer_id#5066 AS customer_id#2841, sum(((((ws_ext_list_price#5107 - ws_ext_wholesale_cost#5106) - ws_ext_discount_amt#5104) + ws_ext_sales_price#5105) / 2)) AS year_total#2849], HashAggregate(keys=[c_customer_id#5066, c_first_name#5073, c_last_name#5074, c_preferred_cust_flag#5075, c_birth_country#5079, c_login#5080, c_email_address#5081, d_year#5123], functions=[sum(((((ws_ext_list_price#5107 - ws_ext_wholesale_cost#5106) - ws_ext_discount_amt#5104) + ws_ext_sales_price#5105) / 2))]) "
          },
          "4" : {
            "sign" : 1036033584,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 19007880851370771307744224946213691782987200000000000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, ((customer_id#2821 = customer_id#2990) AND (CASE WHEN (year_total#2839 > 0.000000) THEN (year_total#2978 / year_total#2839) END > CASE WHEN (year_total#2849 > 0.000000) THEN (year_total#2998 / year_total#2849) END)) "
          },
          "15" : {
            "sign" : -237935041,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 7435110696,
            "rowCount" : 142982898,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(year_total#2839) AND (year_total#2839 > 0.000000)) "
          },
          "11" : {
            "sign" : 1164811485,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 6543653635943,
            "rowCount" : 37824587491,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (customer_id#2950 = customer_id#2821) "
          },
          "9" : {
            "sign" : 2105067798,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 511081433268651,
            "rowCount" : 2704134567559,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [customer_id#2821, year_total#2829, customer_id#2950, customer_first_name#2951, customer_last_name#2952, customer_email_address#2956, year_total#2958, year_total#2839] "
          },
          "22" : {
            "sign" : 482427057,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 3761782752,
            "rowCount" : 72341976,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(year_total#2849) AND (year_total#2849 > 0.000000)) "
          },
          "26" : {
            "sign" : -979568171,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 26686312320000000,
            "rowCount" : 138991210000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (c_customer_sk#5304 = ws_bill_customer_sk#5325) "
          },
          "13" : {
            "sign" : 429932782,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 14302285452,
            "rowCount" : 275043951,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [c_customer_id#31, c_first_name#38, c_last_name#39, c_preferred_cust_flag#40, c_birth_country#44, c_login#45, c_email_address#46, d_year#77], [c_customer_id#31 AS customer_id#2821, sum(((((ss_ext_list_price#64 - ss_ext_wholesale_cost#63) - ss_ext_discount_amt#61) + ss_ext_sales_price#62) / 2)) AS year_total#2829], HashAggregate(keys=[c_customer_id#31, c_first_name#38, c_last_name#39, c_preferred_cust_flag#40, c_birth_country#44, c_login#45, c_email_address#46, d_year#77], functions=[sum(((((ss_ext_list_price#64 - ss_ext_wholesale_cost#63) - ss_ext_discount_amt#61) + ss_ext_sales_price#62) / 2))]) "
          },
          "24" : {
            "sign" : 1099149837,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 6115613240000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [c_customer_id#5305, c_first_name#5312, c_last_name#5313, c_preferred_cust_flag#5314, c_birth_country#5318, c_login#5319, c_email_address#5320, d_year#5362], [c_customer_id#5305 AS customer_id#2990, sum(((((ws_ext_list_price#5346 - ws_ext_wholesale_cost#5345) - ws_ext_discount_amt#5343) + ws_ext_sales_price#5344) / 2)) AS year_total#2998] "
          },
          "16" : {
            "sign" : 802064549,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 7435110696,
            "rowCount" : 142982898,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [c_customer_id#4508, c_first_name#4515, c_last_name#4516, c_preferred_cust_flag#4517, c_birth_country#4521, c_login#4522, c_email_address#4523, d_year#4565], [c_customer_id#4508 AS customer_id#2831, sum(((((cs_ext_list_price#4549 - cs_ext_wholesale_cost#4548) - cs_ext_discount_amt#4546) + cs_ext_sales_price#4547) / 2)) AS year_total#2839], HashAggregate(keys=[c_customer_id#4508, c_first_name#4515, c_last_name#4516, c_preferred_cust_flag#4517, c_birth_country#4521, c_login#4522, c_email_address#4523, d_year#4565], functions=[sum(((((cs_ext_list_price#4549 - cs_ext_wholesale_cost#4548) - cs_ext_discount_amt#4546) + cs_ext_sales_price#4547) / 2))]) "
          },
          "5" : {
            "sign" : 1496402706,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 3108090735209862830983115758022280000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [customer_id#2821, customer_id#2950, customer_first_name#2951, customer_last_name#2952, customer_email_address#2956, year_total#2839, year_total#2978, year_total#2849] "
          },
          "10" : {
            "sign" : 2091177496,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 586797201160303,
            "rowCount" : 2704134567559,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (customer_id#2821 = customer_id#2831) "
          },
          "21" : {
            "sign" : -1104656951,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 306068840,
            "rowCount" : 2000000,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [c_customer_sk#4746, c_customer_id#4747, c_first_name#4754, c_last_name#4755, c_preferred_cust_flag#4756, c_birth_country#4760, c_login#4761, c_email_address#4762], ShuffleQueryStage 12 "
          },
          "6" : {
            "sign" : -966620922,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 3506563906390614475980951111614880000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (customer_id#2821 = customer_id#2841) "
          },
          "1" : {
            "sign" : -1026172804,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
            "sizeInBytes" : 8711945390211603516049436433681275400535800000000000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) LocalLimit Arguments: 100 "
          },
          "17" : {
            "sign" : -558918111,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 2501330832000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [c_customer_id#4747, c_first_name#4754, c_last_name#4755, c_preferred_cust_flag#4756, c_birth_country#4760, c_login#4761, c_email_address#4762, d_year#4804], [c_customer_id#4747 AS customer_id#2970, sum(((((cs_ext_list_price#4788 - cs_ext_wholesale_cost#4787) - cs_ext_discount_amt#4785) + cs_ext_sales_price#4786) / 2)) AS year_total#2978] "
          },
          "25" : {
            "sign" : 103842726,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 25574382640000000,
            "rowCount" : 138991210000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_customer_id#5305, c_first_name#5312, c_last_name#5313, c_preferred_cust_flag#5314, c_birth_country#5318, c_login#5319, c_email_address#5320, ws_ext_discount_amt#5343, ws_ext_sales_price#5344, ws_ext_wholesale_cost#5345, ws_ext_list_price#5346, d_year#5362] "
          },
          "14" : {
            "sign" : 1410425053,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 35480669679,
            "rowCount" : 275043951,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [c_customer_id#4200, c_first_name#4207, c_last_name#4208, c_preferred_cust_flag#4209, c_birth_country#4213, c_login#4214, c_email_address#4215, d_year#4246], [c_customer_id#4200 AS customer_id#2950, c_first_name#4207 AS customer_first_name#2951, c_last_name#4208 AS customer_last_name#2952, c_email_address#4215 AS customer_email_address#2956, sum(((((ss_ext_list_price#4233 - ss_ext_wholesale_cost#4232) - ss_ext_discount_amt#4230) + ss_ext_sales_price#4231) / 2)) AS year_total#2958], HashAggregate(keys=[c_customer_id#4200, c_first_name#4207, c_last_name#4208, c_preferred_cust_flag#4209, c_birth_country#4213, c_login#4214, c_email_address#4215, d_year#4246], functions=[sum(((((ss_ext_list_price#4233 - ss_ext_wholesale_cost#4232) - ss_ext_discount_amt#4230) + ss_ext_sales_price#4231) / 2))]) "
          },
          "0" : {
            "sign" : -1421285289,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
            "sizeInBytes" : 8800,
            "rowCount" : 100,
            "isRuntime" : false,
            "predicate" : " (unknown) GlobalLimit Arguments: 100 "
          },
          "20" : {
            "sign" : -186934941,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1591755984,
            "rowCount" : 28424214,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [cs_bill_customer_sk#4766, cs_ext_discount_amt#4785, cs_ext_sales_price#4786, cs_ext_wholesale_cost#4787, cs_ext_list_price#4788, d_year#4804], ShuffleQueryStage 25 "
          },
          "27" : {
            "sign" : -983899132,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 3335789040,
            "rowCount" : 69495605,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ws_bill_customer_sk#5325, ws_ext_discount_amt#5343, ws_ext_sales_price#5344, ws_ext_wholesale_cost#5345, ws_ext_list_price#5346, d_year#5362], ShuffleQueryStage 26 "
          },
          "2" : {
            "sign" : -2026915731,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 8711945390211603516049436433681275400535800000000000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [customer_id#2950 ASC NULLS FIRST, customer_first_name#2951 ASC NULLS FIRST, customer_last_name#2952 ASC NULLS FIRST, customer_email_address#2956 ASC NULLS FIRST], true "
          },
          "18" : {
            "sign" : -1411007706,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 10460110752000000,
            "rowCount" : 56848428000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_customer_id#4747, c_first_name#4754, c_last_name#4755, c_preferred_cust_flag#4756, c_birth_country#4760, c_login#4761, c_email_address#4762, cs_ext_discount_amt#4785, cs_ext_sales_price#4786, cs_ext_wholesale_cost#4787, cs_ext_list_price#4788, d_year#4804] "
          },
          "7" : {
            "sign" : -1038225268,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 932154815300353228899315000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [customer_id#2821, customer_id#2950, customer_first_name#2951, customer_last_name#2952, customer_email_address#2956, year_total#2839, year_total#2978] "
          },
          "3" : {
            "sign" : -1909984068,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 8711945390211603516049436433681275400535800000000000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [customer_id#2950, customer_first_name#2951, customer_last_name#2952, customer_email_address#2956] "
          },
          "28" : {
            "sign" : -149944874,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 306068840,
            "rowCount" : 2000000,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [c_customer_sk#5304, c_customer_id#5305, c_first_name#5312, c_last_name#5313, c_preferred_cust_flag#5314, c_birth_country#5318, c_login#5319, c_email_address#5320], ShuffleQueryStage 20 "
          }
        },
        "links" : [ {
          "fromId" : 13,
          "fromName" : "LogicalQueryStage",
          "toId" : 12,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 12,
          "fromName" : "Filter",
          "toId" : 11,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 14,
          "fromName" : "LogicalQueryStage",
          "toId" : 11,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "Join",
          "toId" : 10,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 16,
          "fromName" : "LogicalQueryStage",
          "toId" : 15,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 15,
          "fromName" : "Filter",
          "toId" : 10,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "Join",
          "toId" : 9,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "Project",
          "toId" : 8,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 20,
          "fromName" : "LogicalQueryStage",
          "toId" : 19,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 21,
          "fromName" : "LogicalQueryStage",
          "toId" : 19,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 19,
          "fromName" : "Join",
          "toId" : 18,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 18,
          "fromName" : "Project",
          "toId" : 17,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 17,
          "fromName" : "Aggregate",
          "toId" : 8,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "Join",
          "toId" : 7,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Project",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 23,
          "fromName" : "LogicalQueryStage",
          "toId" : 22,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 22,
          "fromName" : "Filter",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Join",
          "toId" : 5,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Project",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 27,
          "fromName" : "LogicalQueryStage",
          "toId" : 26,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 28,
          "fromName" : "LogicalQueryStage",
          "toId" : 26,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 26,
          "fromName" : "Join",
          "toId" : 25,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 25,
          "fromName" : "Project",
          "toId" : 24,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 24,
          "fromName" : "Aggregate",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Join",
          "toId" : 3,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Project",
          "toId" : 2,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "LocalLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "LocalLimit",
          "toId" : 0,
          "toName" : "GlobalLimit",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [customer_id#2950 ASC NULLS FIRST, customer_first_name#2951 ASC NULLS FIRST, customer_last_name#2952 ASC NULLS FIRST, customer_email_address#2956 ASC NULLS FIRST], true\n      +- Project [customer_id#2950, customer_first_name#2951, customer_last_name#2952, customer_email_address#2956]\n         +- Join Inner, ((customer_id#2821 = customer_id#2990) AND (CASE WHEN (year_total#2839 > 0.000000) THEN (year_total#2978 / year_total#2839) END > CASE WHEN (year_total#2849 > 0.000000) THEN (year_total#2998 / year_total#2849) END))\n            :- Project [customer_id#2821, customer_id#2950, customer_first_name#2951, customer_last_name#2952, customer_email_address#2956, year_total#2839, year_total#2978, year_total#2849]\n            :  +- Join Inner, (customer_id#2821 = customer_id#2841)\n            :     :- Project [customer_id#2821, customer_id#2950, customer_first_name#2951, customer_last_name#2952, customer_email_address#2956, year_total#2839, year_total#2978]\n            :     :  +- Join Inner, ((customer_id#2821 = customer_id#2970) AND (CASE WHEN (year_total#2839 > 0.000000) THEN (year_total#2978 / year_total#2839) END > CASE WHEN (year_total#2829 > 0.000000) THEN (year_total#2958 / year_total#2829) END))\n            :     :     :- Project [customer_id#2821, year_total#2829, customer_id#2950, customer_first_name#2951, customer_last_name#2952, customer_email_address#2956, year_total#2958, year_total#2839]\n            :     :     :  +- Join Inner, (customer_id#2821 = customer_id#2831)\n            :     :     :     :- Join Inner, (customer_id#2950 = customer_id#2821)\n            :     :     :     :  :- Filter (isnotnull(year_total#2829) AND (year_total#2829 > 0.000000))\n            :     :     :     :  :  +- LogicalQueryStage Aggregate [c_customer_id#31, c_first_name#38, c_last_name#39, c_preferred_cust_flag#40, c_birth_country#44, c_login#45, c_email_address#46, d_year#77], [c_customer_id#31 AS customer_id#2821, sum(((((ss_ext_list_price#64 - ss_ext_wholesale_cost#63) - ss_ext_discount_amt#61) + ss_ext_sales_price#62) / 2)) AS year_total#2829], HashAggregate(keys=[c_customer_id#31, c_first_name#38, c_last_name#39, c_preferred_cust_flag#40, c_birth_country#44, c_login#45, c_email_address#46, d_year#77], functions=[sum(((((ss_ext_list_price#64 - ss_ext_wholesale_cost#63) - ss_ext_discount_amt#61) + ss_ext_sales_price#62) / 2))])\n            :     :     :     :  +- LogicalQueryStage Aggregate [c_customer_id#4200, c_first_name#4207, c_last_name#4208, c_preferred_cust_flag#4209, c_birth_country#4213, c_login#4214, c_email_address#4215, d_year#4246], [c_customer_id#4200 AS customer_id#2950, c_first_name#4207 AS customer_first_name#2951, c_last_name#4208 AS customer_last_name#2952, c_email_address#4215 AS customer_email_address#2956, sum(((((ss_ext_list_price#4233 - ss_ext_wholesale_cost#4232) - ss_ext_discount_amt#4230) + ss_ext_sales_price#4231) / 2)) AS year_total#2958], HashAggregate(keys=[c_customer_id#4200, c_first_name#4207, c_last_name#4208, c_preferred_cust_flag#4209, c_birth_country#4213, c_login#4214, c_email_address#4215, d_year#4246], functions=[sum(((((ss_ext_list_price#4233 - ss_ext_wholesale_cost#4232) - ss_ext_discount_amt#4230) + ss_ext_sales_price#4231) / 2))])\n            :     :     :     +- Filter (isnotnull(year_total#2839) AND (year_total#2839 > 0.000000))\n            :     :     :        +- LogicalQueryStage Aggregate [c_customer_id#4508, c_first_name#4515, c_last_name#4516, c_preferred_cust_flag#4517, c_birth_country#4521, c_login#4522, c_email_address#4523, d_year#4565], [c_customer_id#4508 AS customer_id#2831, sum(((((cs_ext_list_price#4549 - cs_ext_wholesale_cost#4548) - cs_ext_discount_amt#4546) + cs_ext_sales_price#4547) / 2)) AS year_total#2839], HashAggregate(keys=[c_customer_id#4508, c_first_name#4515, c_last_name#4516, c_preferred_cust_flag#4517, c_birth_country#4521, c_login#4522, c_email_address#4523, d_year#4565], functions=[sum(((((cs_ext_list_price#4549 - cs_ext_wholesale_cost#4548) - cs_ext_discount_amt#4546) + cs_ext_sales_price#4547) / 2))])\n            :     :     +- Aggregate [c_customer_id#4747, c_first_name#4754, c_last_name#4755, c_preferred_cust_flag#4756, c_birth_country#4760, c_login#4761, c_email_address#4762, d_year#4804], [c_customer_id#4747 AS customer_id#2970, sum(((((cs_ext_list_price#4788 - cs_ext_wholesale_cost#4787) - cs_ext_discount_amt#4785) + cs_ext_sales_price#4786) / 2)) AS year_total#2978]\n            :     :        +- Project [c_customer_id#4747, c_first_name#4754, c_last_name#4755, c_preferred_cust_flag#4756, c_birth_country#4760, c_login#4761, c_email_address#4762, cs_ext_discount_amt#4785, cs_ext_sales_price#4786, cs_ext_wholesale_cost#4787, cs_ext_list_price#4788, d_year#4804]\n            :     :           +- Join Inner, (c_customer_sk#4746 = cs_bill_customer_sk#4766)\n            :     :              :- LogicalQueryStage Project [cs_bill_customer_sk#4766, cs_ext_discount_amt#4785, cs_ext_sales_price#4786, cs_ext_wholesale_cost#4787, cs_ext_list_price#4788, d_year#4804], ShuffleQueryStage 25\n            :     :              +- LogicalQueryStage Project [c_customer_sk#4746, c_customer_id#4747, c_first_name#4754, c_last_name#4755, c_preferred_cust_flag#4756, c_birth_country#4760, c_login#4761, c_email_address#4762], ShuffleQueryStage 12\n            :     +- Filter (isnotnull(year_total#2849) AND (year_total#2849 > 0.000000))\n            :        +- LogicalQueryStage Aggregate [c_customer_id#5066, c_first_name#5073, c_last_name#5074, c_preferred_cust_flag#5075, c_birth_country#5079, c_login#5080, c_email_address#5081, d_year#5123], [c_customer_id#5066 AS customer_id#2841, sum(((((ws_ext_list_price#5107 - ws_ext_wholesale_cost#5106) - ws_ext_discount_amt#5104) + ws_ext_sales_price#5105) / 2)) AS year_total#2849], HashAggregate(keys=[c_customer_id#5066, c_first_name#5073, c_last_name#5074, c_preferred_cust_flag#5075, c_birth_country#5079, c_login#5080, c_email_address#5081, d_year#5123], functions=[sum(((((ws_ext_list_price#5107 - ws_ext_wholesale_cost#5106) - ws_ext_discount_amt#5104) + ws_ext_sales_price#5105) / 2))])\n            +- Aggregate [c_customer_id#5305, c_first_name#5312, c_last_name#5313, c_preferred_cust_flag#5314, c_birth_country#5318, c_login#5319, c_email_address#5320, d_year#5362], [c_customer_id#5305 AS customer_id#2990, sum(((((ws_ext_list_price#5346 - ws_ext_wholesale_cost#5345) - ws_ext_discount_amt#5343) + ws_ext_sales_price#5344) / 2)) AS year_total#2998]\n               +- Project [c_customer_id#5305, c_first_name#5312, c_last_name#5313, c_preferred_cust_flag#5314, c_birth_country#5318, c_login#5319, c_email_address#5320, ws_ext_discount_amt#5343, ws_ext_sales_price#5344, ws_ext_wholesale_cost#5345, ws_ext_list_price#5346, d_year#5362]\n                  +- Join Inner, (c_customer_sk#5304 = ws_bill_customer_sk#5325)\n                     :- LogicalQueryStage Project [ws_bill_customer_sk#5325, ws_ext_discount_amt#5343, ws_ext_sales_price#5344, ws_ext_wholesale_cost#5345, ws_ext_list_price#5346, d_year#5362], ShuffleQueryStage 26\n                     +- LogicalQueryStage Project [c_customer_sk#5304, c_customer_id#5305, c_first_name#5312, c_last_name#5313, c_preferred_cust_flag#5314, c_birth_country#5318, c_login#5319, c_email_address#5320], ShuffleQueryStage 20\n"
      },
      "IM" : {
        "inputSizeInBytes" : 66519531283,
        "inputRowCount" : 867332595
      },
      "PD" : {
        "5" : [ 3539793, 3535490, 3478735, 3569889, 3448726, 3553156, 3476661, 3380948, 3465910, 3522401, 3543173, 3458962, 3446796, 3534096, 3520080, 3485501, 3594087, 3587106, 3460372, 3446796, 3438457, 3497664, 3521416, 3568030, 3544294, 3530618, 3418597, 3521334, 3537275, 3458203, 3415919, 3482858, 3550848, 3421011, 3479611, 3492128, 3501431, 3463050, 3443729, 3441111, 3466142, 3492381, 3398130, 3506031, 3542008, 3428771, 3524628, 3500737, 3456763, 3494107, 3584863, 3527439, 3485109, 3499504, 3509702, 3426528, 3521024, 3437145, 3488628, 3414743, 3483215, 3566845, 3509577, 3566141, 3457092, 3512647, 3443726, 3450710, 3496608, 3531614, 3538206, 3476231, 3431816, 3525741, 3575327, 3495857, 3545397, 3521024, 3512130, 3476963, 3557584, 3598393, 3542939, 3426934, 3458660, 3488484, 3429097, 3519971, 3537275, 3505859, 3516449, 3416063, 3479358, 3467625, 3477088, 3579694, 3447226, 3399603, 3480594, 3447289, 3435153, 3475907, 3494107, 3449874, 3457299, 3499735, 3574187, 3514775, 3441832, 3448364, 3493843, 3456605, 3558101, 3458121, 3496641, 3513771, 3480863, 3482858, 3479840, 3506754, 3538067, 3499501, 3614682, 3448813, 3464680, 3617722, 3432295, 3460799, 3494341, 3453426, 3533473, 3566941, 3537509, 3476661, 3469963, 3458959, 3560118, 3535027, 3469849, 3530953, 3490950, 3475447, 3543146, 3503804, 3523272, 3536931, 3587999, 3503058, 3509468, 3478248, 3570550, 3489303, 3578266, 3506629, 3498783, 3494771, 3493413, 3484116, 3494866, 3397918, 3499711, 3461605, 3578925, 3432208, 3528005, 3500737, 3405718, 3604149, 3519631, 3482768, 3560118, 3548069, 3505165, 3536845, 3524298, 3487371, 3552209, 3430760, 3554200, 3508774, 3473014, 3494270, 3461300, 3523272, 3585250, 3564655, 3542743, 3598823, 3469160, 3621576, 3523024, 3483642, 3456997, 3444997, 3565352, 3624975, 3534828, 3413755, 3534940, 3451279 ],
        "0" : [ 830145, 830145, 754677, 830145, 830145, 830145, 754677, 754677, 830145, 830145, 830145, 754677, 830145, 830145, 754677, 830145, 830145, 830145, 754677, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 754677, 830145, 830145, 754677, 830145, 830145, 754677, 754677, 754677, 754677, 754677, 830145, 754677, 830145, 830145, 754677, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 754677, 754677, 754677, 830145, 830145, 830145, 754677, 830145, 754677, 830145, 830145, 754677, 830145, 830145, 830145, 754677, 754677, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 754677, 754677, 754677, 754677, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 754677, 754677, 830145, 754677, 754677, 830145, 830145, 754677, 830145, 830145, 830145, 830145, 754677, 754677, 830145, 830145, 830145, 754677, 830145, 830145, 754677, 754677, 754677, 830145, 754677, 830145, 830145, 754677, 830145, 830145, 754677, 754677, 754677, 754677, 830145, 830145, 830145, 830145, 754677, 754677, 830145, 830145, 830145, 830145, 754677, 754677, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 754677, 754677, 830145, 830145, 754677, 830145, 830145, 830145, 830145, 830145, 754677, 830145, 830145, 830145, 830145, 830145, 754677, 830145, 754677, 830145, 754677, 754677, 830145, 830145, 754677, 830145, 830145, 830145, 830145, 754677, 830145, 830145, 830145, 754677, 754677, 830145, 830145, 830145, 830145, 830145, 754677 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 16,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "StartTimeInMs" : 1702226524789,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 43889,
        "IOBytes" : {
          "Total" : 7590667857,
          "Details" : {
            "IR" : 244289496,
            "IW" : 0,
            "SR" : 6038854810,
            "SW" : 1307523551
          }
        }
      }
    },
    "22" : {
      "LQP" : {
        "operators" : {
          "12" : {
            "sign" : -1458191872,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 101735088,
            "rowCount" : 1816698,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Filter (isnotnull(year_total#2829) AND (year_total#2829 > 0.000000)), ShuffleQueryStage 33 "
          },
          "8" : {
            "sign" : 1916416170,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 1578352628380472546659259904,
            "rowCount" : 8220586606148294513850312,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, ((customer_id#2821 = customer_id#2970) AND (CASE WHEN (year_total#2839 > 0.000000) THEN (year_total#2978 / year_total#2839) END > CASE WHEN (year_total#2829 > 0.000000) THEN (year_total#2958 / year_total#2829) END)) "
          },
          "4" : {
            "sign" : 200562866,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 1262474412432174077350474950938397706752,
            "rowCount" : 6575387564750906652867057036137488056,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, ((customer_id#2821 = customer_id#2990) AND (CASE WHEN (year_total#2839 > 0.000000) THEN (year_total#2978 / year_total#2839) END > CASE WHEN (year_total#2849 > 0.000000) THEN (year_total#2998 / year_total#2849) END)) "
          },
          "15" : {
            "sign" : -550657858,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 89254816,
            "rowCount" : 1593836,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [c_customer_id#4747, c_first_name#4754, c_last_name#4755, c_preferred_cust_flag#4756, c_birth_country#4760, c_login#4761, c_email_address#4762, d_year#4804], [c_customer_id#4747 AS customer_id#2970, sum(((((cs_ext_list_price#4788 - cs_ext_wholesale_cost#4787) - cs_ext_discount_amt#4785) + cs_ext_sales_price#4786) / 2)) AS year_total#2978], ShuffleQueryStage 38 "
          },
          "11" : {
            "sign" : -1441832503,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 462662948737080,
            "rowCount" : 3304735348122,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (customer_id#2950 = customer_id#2821) "
          },
          "9" : {
            "sign" : -262489225,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 804606942344842219752,
            "rowCount" : 5157736809902834742,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [customer_id#2821, year_total#2829, customer_id#2950, customer_first_name#2951, customer_last_name#2952, customer_email_address#2956, year_total#2958, year_total#2839] "
          },
          "13" : {
            "sign" : 2038413297,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 229498456,
            "rowCount" : 1819089,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [c_customer_id#4200, c_first_name#4207, c_last_name#4208, c_preferred_cust_flag#4209, c_birth_country#4213, c_login#4214, c_email_address#4215, d_year#4246], [c_customer_id#4200 AS customer_id#2950, c_first_name#4207 AS customer_first_name#2951, c_last_name#4208 AS customer_last_name#2952, c_email_address#4215 AS customer_email_address#2956, sum(((((ss_ext_list_price#4233 - ss_ext_wholesale_cost#4232) - ss_ext_discount_amt#4230) + ss_ext_sales_price#4231) / 2)) AS year_total#2958], ShuffleQueryStage 36 "
          },
          "16" : {
            "sign" : 2009240091,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 49646632,
            "rowCount" : 886547,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Filter (isnotnull(year_total#2849) AND (year_total#2849 > 0.000000)), ShuffleQueryStage 34 "
          },
          "5" : {
            "sign" : -356211614,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 1136918077451668520793790598215584,
            "rowCount" : 7287936393920952056370452552664,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [customer_id#2821, customer_id#2950, customer_first_name#2951, customer_last_name#2952, customer_email_address#2956, year_total#2839, year_total#2978, year_total#2849] "
          },
          "10" : {
            "sign" : 1387654351,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 907761678542898914592,
            "rowCount" : 5157736809902834742,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (customer_id#2821 = customer_id#2831) "
          },
          "6" : {
            "sign" : 1743029416,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 1282676805330087561921199649268864,
            "rowCount" : 7287936393920952056370452552664,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (customer_id#2821 = customer_id#2841) "
          },
          "1" : {
            "sign" : -1291903282,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
            "sizeInBytes" : 578634105698079785452301019180098948928,
            "rowCount" : 6575387564750906652867057036137488056,
            "isRuntime" : false,
            "predicate" : " (unknown) LocalLimit Arguments: 100 "
          },
          "17" : {
            "sign" : -2053491893,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 50524824,
            "rowCount" : 902229,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [c_customer_id#5305, c_first_name#5312, c_last_name#5313, c_preferred_cust_flag#5314, c_birth_country#5318, c_login#5319, c_email_address#5320, d_year#5362], [c_customer_id#5305 AS customer_id#2990, sum(((((ws_ext_list_price#5346 - ws_ext_wholesale_cost#5345) - ws_ext_discount_amt#5343) + ws_ext_sales_price#5344) / 2)) AS year_total#2998], ShuffleQueryStage 37 "
          },
          "14" : {
            "sign" : 275524156,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 87399816,
            "rowCount" : 1560711,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Filter (isnotnull(year_total#2839) AND (year_total#2839 > 0.000000)), ShuffleQueryStage 35 "
          },
          "0" : {
            "sign" : 822284569,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
            "sizeInBytes" : 8800,
            "rowCount" : 100,
            "isRuntime" : false,
            "predicate" : " (unknown) GlobalLimit Arguments: 100 "
          },
          "2" : {
            "sign" : -1892521873,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 578634105698079785452301019180098948928,
            "rowCount" : 6575387564750906652867057036137488056,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [customer_id#2950 ASC NULLS FIRST, customer_first_name#2951 ASC NULLS FIRST, customer_last_name#2952 ASC NULLS FIRST, customer_email_address#2956 ASC NULLS FIRST], true "
          },
          "7" : {
            "sign" : 1836232668,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 1150882124860761231939043680,
            "rowCount" : 8220586606148294513850312,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [customer_id#2821, customer_id#2950, customer_first_name#2951, customer_last_name#2952, customer_email_address#2956, year_total#2839, year_total#2978] "
          },
          "3" : {
            "sign" : 32958606,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 578634105698079785452301019180098948928,
            "rowCount" : 6575387564750906652867057036137488056,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [customer_id#2950, customer_first_name#2951, customer_last_name#2952, customer_email_address#2956] "
          }
        },
        "links" : [ {
          "fromId" : 12,
          "fromName" : "LogicalQueryStage",
          "toId" : 11,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 13,
          "fromName" : "LogicalQueryStage",
          "toId" : 11,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "Join",
          "toId" : 10,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 14,
          "fromName" : "LogicalQueryStage",
          "toId" : 10,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "Join",
          "toId" : 9,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "Project",
          "toId" : 8,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 15,
          "fromName" : "LogicalQueryStage",
          "toId" : 8,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "Join",
          "toId" : 7,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Project",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 16,
          "fromName" : "LogicalQueryStage",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Join",
          "toId" : 5,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Project",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 17,
          "fromName" : "LogicalQueryStage",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Join",
          "toId" : 3,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Project",
          "toId" : 2,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "LocalLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "LocalLimit",
          "toId" : 0,
          "toName" : "GlobalLimit",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [customer_id#2950 ASC NULLS FIRST, customer_first_name#2951 ASC NULLS FIRST, customer_last_name#2952 ASC NULLS FIRST, customer_email_address#2956 ASC NULLS FIRST], true\n      +- Project [customer_id#2950, customer_first_name#2951, customer_last_name#2952, customer_email_address#2956]\n         +- Join Inner, ((customer_id#2821 = customer_id#2990) AND (CASE WHEN (year_total#2839 > 0.000000) THEN (year_total#2978 / year_total#2839) END > CASE WHEN (year_total#2849 > 0.000000) THEN (year_total#2998 / year_total#2849) END))\n            :- Project [customer_id#2821, customer_id#2950, customer_first_name#2951, customer_last_name#2952, customer_email_address#2956, year_total#2839, year_total#2978, year_total#2849]\n            :  +- Join Inner, (customer_id#2821 = customer_id#2841)\n            :     :- Project [customer_id#2821, customer_id#2950, customer_first_name#2951, customer_last_name#2952, customer_email_address#2956, year_total#2839, year_total#2978]\n            :     :  +- Join Inner, ((customer_id#2821 = customer_id#2970) AND (CASE WHEN (year_total#2839 > 0.000000) THEN (year_total#2978 / year_total#2839) END > CASE WHEN (year_total#2829 > 0.000000) THEN (year_total#2958 / year_total#2829) END))\n            :     :     :- Project [customer_id#2821, year_total#2829, customer_id#2950, customer_first_name#2951, customer_last_name#2952, customer_email_address#2956, year_total#2958, year_total#2839]\n            :     :     :  +- Join Inner, (customer_id#2821 = customer_id#2831)\n            :     :     :     :- Join Inner, (customer_id#2950 = customer_id#2821)\n            :     :     :     :  :- LogicalQueryStage Filter (isnotnull(year_total#2829) AND (year_total#2829 > 0.000000)), ShuffleQueryStage 33\n            :     :     :     :  +- LogicalQueryStage Aggregate [c_customer_id#4200, c_first_name#4207, c_last_name#4208, c_preferred_cust_flag#4209, c_birth_country#4213, c_login#4214, c_email_address#4215, d_year#4246], [c_customer_id#4200 AS customer_id#2950, c_first_name#4207 AS customer_first_name#2951, c_last_name#4208 AS customer_last_name#2952, c_email_address#4215 AS customer_email_address#2956, sum(((((ss_ext_list_price#4233 - ss_ext_wholesale_cost#4232) - ss_ext_discount_amt#4230) + ss_ext_sales_price#4231) / 2)) AS year_total#2958], ShuffleQueryStage 36\n            :     :     :     +- LogicalQueryStage Filter (isnotnull(year_total#2839) AND (year_total#2839 > 0.000000)), ShuffleQueryStage 35\n            :     :     +- LogicalQueryStage Aggregate [c_customer_id#4747, c_first_name#4754, c_last_name#4755, c_preferred_cust_flag#4756, c_birth_country#4760, c_login#4761, c_email_address#4762, d_year#4804], [c_customer_id#4747 AS customer_id#2970, sum(((((cs_ext_list_price#4788 - cs_ext_wholesale_cost#4787) - cs_ext_discount_amt#4785) + cs_ext_sales_price#4786) / 2)) AS year_total#2978], ShuffleQueryStage 38\n            :     +- LogicalQueryStage Filter (isnotnull(year_total#2849) AND (year_total#2849 > 0.000000)), ShuffleQueryStage 34\n            +- LogicalQueryStage Aggregate [c_customer_id#5305, c_first_name#5312, c_last_name#5313, c_preferred_cust_flag#5314, c_birth_country#5318, c_login#5319, c_email_address#5320, d_year#5362], [c_customer_id#5305 AS customer_id#2990, sum(((((ws_ext_list_price#5346 - ws_ext_wholesale_cost#5345) - ws_ext_discount_amt#5343) + ws_ext_sales_price#5344) / 2)) AS year_total#2998], ShuffleQueryStage 37\n"
      },
      "IM" : {
        "inputSizeInBytes" : 608059632,
        "inputRowCount" : 8579110
      },
      "PD" : {
        "15" : [ 130298, 124542, 130298, 130298, 136054, 130298, 124542, 130298, 136054, 136054, 136054, 130298, 136054, 136995, 136054, 136054, 130298, 131239, 136995, 130298, 136054, 131239, 135198, 135198, 136054, 136054, 130298, 130298, 135198, 135198, 136054, 136995, 136995, 136054, 136995, 135198, 135198, 130298, 135198, 136054, 136054, 136054, 136054, 136054, 130298, 136054, 135198, 130298, 136054, 136054, 135198, 136054, 136054, 136995, 136054, 130298, 136054, 135198, 136995, 130298, 136054, 135198, 130298, 136054, 136054, 130298, 130298, 135198, 136054, 130298, 136054, 136054, 135198, 135198, 130298, 130298, 136054, 136054, 135198, 130298, 135198, 130298, 135198, 130298, 136054, 136054, 136995, 136054, 130298, 135198, 136995, 136995, 136995, 136054, 135198, 130298, 136054, 136995, 136054, 136054, 136995, 136054, 136054, 136054, 135198, 135198, 136054, 136054, 136054, 136995, 131239, 136054, 129442, 136054, 130298, 130298, 136995, 136054, 136054, 136054, 135198, 136054, 135198, 135198, 136054, 136054, 136054, 135198, 135198, 129442, 130298, 135198, 136054, 136054, 136054, 130298, 136054, 135198, 136054, 135198, 136054, 135198, 136054, 136054, 129442, 130298, 136054, 130298, 136054, 136054, 136054, 136054, 136995, 130298, 136054, 136054, 129442, 136054, 130298, 129442, 136054, 136995, 130298, 135198, 136054, 135198, 135198, 136054, 130298, 135198, 135198, 136054, 136054, 136995, 124542, 130298, 130298, 130298, 136054, 136995, 136054, 135198, 136054, 136995, 130298, 136054, 135198, 129442, 130298, 130298, 136054, 136995, 136054, 130298, 136054, 129442, 136054, 136054, 136995, 136054 ],
        "13" : [ 153496, 153496, 147740, 153496, 153496, 147740, 141984, 147740, 153496, 156181, 153496, 153496, 153496, 156181, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 147740, 153496, 153496, 153496, 156181, 153496, 153496, 156181, 153496, 153496, 141984, 153496, 153496, 147740, 156181, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 156181, 153496, 147740, 153496, 156181, 150425, 153496, 153496, 153496, 150425, 156181, 153496, 147740, 153496, 153496, 156181, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 156181, 153496, 153496, 153496, 147740, 153496, 153496, 150425, 153496, 153496, 153496, 156181, 156181, 153496, 153496, 153496, 153496, 147740, 153496, 153496, 153496, 153496, 156181, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 156181, 147740, 153496, 153496, 153496, 156181, 153496, 153496, 153496, 153496, 153496, 156181, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 156181, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 156181, 153496, 153496, 147740, 153496, 147740, 153496, 150425, 153496, 153496, 153496, 153496, 156181, 147740, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 147740, 153496, 147740, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 147740, 147740, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 147740, 156181, 156181, 153496, 156181, 153496, 153496, 153496, 153496, 156181, 153496 ],
        "16" : [ 652413, 641195, 641195, 641195, 652413, 628367, 617149, 641195, 628367, 652413, 652413, 641195, 628367, 652413, 652413, 652413, 652413, 641195, 652413, 641195, 641195, 652413, 652413, 641195, 652413, 652413, 641195, 641195, 652413, 652413, 641195, 652413, 652413, 641195, 652413, 641195, 652413, 617149, 641195, 652413, 652413, 641195, 641195, 652413, 641195, 652413, 652413, 641195, 652413, 652413, 628367, 652413, 652413, 652413, 641195, 652413, 652413, 652413, 652413, 641195, 652413, 641195, 652413, 652413, 641195, 652413, 641195, 652413, 641195, 652413, 641195, 652413, 652413, 652413, 652413, 617149, 652413, 652413, 641195, 641195, 652413, 652413, 652413, 652413, 652413, 641195, 641195, 641195, 652413, 641195, 652413, 652413, 652413, 641195, 652413, 641195, 652413, 652413, 652413, 652413, 652413, 652413, 641195, 641195, 652413, 641195, 652413, 652413, 652413, 641195, 641195, 652413, 641195, 641195, 652413, 628367, 641195, 652413, 652413, 641195, 641195, 652413, 652413, 641195, 641195, 652413, 652413, 652413, 652413, 652413, 652413, 652413, 652413, 641195, 641195, 652413, 652413, 652413, 652413, 641195, 652413, 641195, 652413, 641195, 652413, 641195, 652413, 641195, 652413, 652413, 641195, 641195, 652413, 641195, 641195, 652413, 652413, 652413, 617149, 641195, 652413, 641195, 628367, 652413, 641195, 652413, 652413, 652413, 652413, 652413, 652413, 652413, 652413, 641195, 641195, 652413, 641195, 652413, 652413, 641195, 652413, 652413, 652413, 652413, 652413, 641195, 641195, 652413, 652413, 652413, 652413, 652413, 641195, 652413, 641195, 641195, 652413, 652413, 652413, 641195 ],
        "17" : [ 77101, 77101, 75848, 77101, 77101, 77101, 71345, 77101, 77101, 77101, 77101, 77101, 77101, 78479, 77101, 78479, 77101, 75848, 77101, 77101, 77101, 77101, 77101, 75848, 77101, 77101, 77101, 71345, 77101, 77101, 77101, 77101, 77101, 77101, 77101, 77101, 77101, 71345, 75848, 77101, 77101, 77101, 77101, 77101, 77101, 77101, 77101, 77101, 77101, 77101, 78479, 78479, 77101, 77101, 77101, 77101, 77101, 77101, 77101, 77101, 78479, 77101, 77101, 77101, 77101, 77101, 77101, 78479, 77101, 77101, 77101, 77101, 77101, 77101, 77101, 75848, 77101, 77101, 75848, 77101, 78479, 77101, 77101, 77101, 77101, 77101, 77101, 77101, 72723, 78479, 77101, 77101, 78479, 77101, 77101, 77101, 77101, 77101, 77101, 78479, 77101, 77101, 77101, 77101, 77101, 77101, 77101, 78479, 77101, 77101, 77101, 77101, 77101, 77101, 77101, 71345, 77101, 77101, 77101, 77101, 77101, 77101, 77101, 77101, 77101, 77101, 77101, 77101, 78479, 77101, 77101, 78479, 77101, 75848, 77101, 77101, 78479, 77101, 77101, 75848, 77101, 77101, 77101, 75848, 78479, 77101, 77101, 77101, 78479, 77101, 77101, 77101, 77101, 77101, 77101, 77101, 77101, 77101, 77101, 75848, 77101, 77101, 71345, 77101, 77101, 77101, 77101, 77101, 77101, 77101, 77101, 78479, 77101, 77101, 77101, 71345, 78479, 75848, 77101, 77101, 77101, 77101, 78479, 77101, 78479, 77101, 78479, 77101, 77101, 77101, 77101, 77101, 77101, 78479, 77101, 77101, 77101, 78479, 77101, 75848 ],
        "14" : [ 75848, 71345, 71345, 77101, 77101, 77101, 70092, 77101, 75848, 77101, 77101, 71345, 77101, 77101, 75848, 77101, 75848, 77101, 77101, 77101, 71345, 77101, 75848, 77101, 70092, 77101, 77101, 71345, 75848, 75848, 71345, 77101, 75848, 75848, 77101, 77101, 75848, 70092, 75848, 70092, 75848, 75848, 75848, 70092, 75848, 75848, 77101, 75848, 75848, 77101, 75848, 77101, 77101, 77101, 77101, 71345, 77101, 78479, 77101, 77101, 75848, 77101, 77101, 77101, 75848, 71345, 75848, 75848, 77101, 75848, 77101, 77101, 75848, 75848, 75848, 75848, 75848, 75848, 77101, 77101, 77101, 75848, 75848, 75848, 77101, 75848, 77101, 75848, 75848, 75848, 77101, 77101, 77101, 75848, 75848, 75848, 77101, 75848, 75848, 77101, 71345, 77101, 77101, 75848, 77101, 75848, 77101, 77101, 70092, 77101, 77101, 77101, 70092, 77101, 77101, 70092, 72723, 77101, 77101, 75848, 77101, 75848, 77101, 77101, 77101, 75848, 75848, 70092, 75848, 75848, 77101, 75848, 77101, 75848, 77101, 75848, 77101, 75848, 75848, 75848, 77101, 77101, 77101, 71345, 75848, 77101, 75848, 77101, 77101, 77101, 77101, 77101, 77101, 70092, 77101, 77101, 75848, 77101, 70092, 75848, 77101, 75848, 75848, 77101, 77101, 75848, 75848, 77101, 77101, 75848, 75848, 77101, 77101, 77101, 70092, 71345, 71345, 77101, 75848, 75848, 75848, 77101, 75848, 77101, 77101, 77101, 71345, 75848, 75848, 75848, 77101, 77101, 75848, 77101, 77101, 75848, 77101, 77101, 77101, 75848 ],
        "18" : [ 136054, 136995, 135198, 136054, 136054, 136995, 129442, 136054, 136054, 136995, 136995, 136054, 136995, 136054, 142386, 136054, 136054, 135198, 136995, 136995, 136995, 136995, 136995, 135198, 136054, 136995, 136054, 136054, 136995, 136054, 136054, 138030, 136995, 136054, 136995, 136054, 136054, 136054, 135198, 136995, 136995, 136054, 136995, 136054, 136054, 136995, 136054, 136054, 136054, 136054, 136995, 136995, 136054, 136995, 136054, 136054, 136995, 136995, 136054, 136054, 136995, 136054, 136054, 136054, 136054, 136054, 136995, 136995, 136054, 136054, 136054, 136995, 136054, 136995, 136995, 136054, 136995, 136995, 136054, 136054, 136054, 136054, 136995, 135198, 136995, 136054, 136995, 135198, 130298, 136054, 136054, 136054, 136995, 136054, 141530, 136995, 136054, 136054, 136995, 136054, 136995, 136054, 136054, 136054, 136995, 136054, 136995, 136995, 136995, 136995, 136054, 136054, 136054, 136995, 135198, 131239, 136995, 138030, 136995, 136054, 136054, 135198, 136054, 136054, 136054, 136995, 136995, 136054, 136995, 136995, 136054, 136995, 136995, 136054, 136054, 136054, 136054, 136054, 136054, 136995, 136995, 136054, 136995, 136054, 136054, 136054, 138030, 136054, 136054, 136054, 136054, 136054, 136995, 136995, 136054, 136995, 136054, 136995, 135198, 136054, 136995, 136995, 136054, 136054, 135198, 136054, 136995, 136054, 136054, 135198, 136054, 136995, 136054, 136054, 136054, 136995, 136995, 136054, 136054, 135198, 136995, 135198, 136054, 136054, 136054, 135198, 136054, 136995, 136054, 136054, 142386, 136054, 136054, 136995, 136995, 136054, 136054, 136054, 136054, 136054 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "StartTimeInMs" : 1702226562141,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 6537,
        "IOBytes" : {
          "Total" : 231051866,
          "Details" : {
            "IR" : 0,
            "IW" : 0,
            "SR" : 231051866,
            "SW" : 0
          }
        }
      }
    },
    "13" : {
      "LQP" : {
        "operators" : {
          "12" : {
            "sign" : -1458191872,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 14302285452,
            "rowCount" : 275043951,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Filter (isnotnull(year_total#2829) AND (year_total#2829 > 0.000000)), ShuffleQueryStage 33 "
          },
          "8" : {
            "sign" : -1121457871,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 1003670131215566202353,
            "rowCount" : 4307597129680541641,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, ((customer_id#2821 = customer_id#2970) AND (CASE WHEN (year_total#2839 > 0.000000) THEN (year_total#2978 / year_total#2839) END > CASE WHEN (year_total#2829 > 0.000000) THEN (year_total#2958 / year_total#2829) END)) "
          },
          "4" : {
            "sign" : -840109787,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 1313142153739295663452913,
            "rowCount" : 5635803234932599413961,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, ((customer_id#2821 = customer_id#2990) AND (CASE WHEN (year_total#2839 > 0.000000) THEN (year_total#2978 / year_total#2839) END > CASE WHEN (year_total#2849 > 0.000000) THEN (year_total#2998 / year_total#2849) END)) "
          },
          "15" : {
            "sign" : 802064549,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 294763008,
            "rowCount" : 1592967,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [c_customer_id#4508, c_first_name#4515, c_last_name#4516, c_preferred_cust_flag#4517, c_birth_country#4521, c_login#4522, c_email_address#4523, d_year#4565], [c_customer_id#4508 AS customer_id#2831, sum(((((cs_ext_list_price#4549 - cs_ext_wholesale_cost#4548) - cs_ext_discount_amt#4546) + cs_ext_sales_price#4547) / 2)) AS year_total#2839], HashAggregate(keys=[c_customer_id#4508, c_first_name#4515, c_last_name#4516, c_preferred_cust_flag#4517, c_birth_country#4521, c_login#4522, c_email_address#4523, d_year#4565], functions=[sum(((((cs_ext_list_price#4549 - cs_ext_wholesale_cost#4548) - cs_ext_discount_amt#4546) + cs_ext_sales_price#4547) / 2))]) "
          },
          "11" : {
            "sign" : -813979643,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 6543653635943,
            "rowCount" : 37824587491,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (customer_id#2950 = customer_id#2821) "
          },
          "9" : {
            "sign" : 125515684,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 11387877416075625633,
            "rowCount" : 60253319661775797,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [customer_id#2821, year_total#2829, customer_id#2950, customer_first_name#2951, customer_last_name#2952, customer_email_address#2956, year_total#2958, year_total#2839] "
          },
          "13" : {
            "sign" : 1410425053,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 35480669679,
            "rowCount" : 275043951,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [c_customer_id#4200, c_first_name#4207, c_last_name#4208, c_preferred_cust_flag#4209, c_birth_country#4213, c_login#4214, c_email_address#4215, d_year#4246], [c_customer_id#4200 AS customer_id#2950, c_first_name#4207 AS customer_first_name#2951, c_last_name#4208 AS customer_last_name#2952, c_email_address#4215 AS customer_email_address#2956, sum(((((ss_ext_list_price#4233 - ss_ext_wholesale_cost#4232) - ss_ext_discount_amt#4230) + ss_ext_sales_price#4231) / 2)) AS year_total#2958], HashAggregate(keys=[c_customer_id#4200, c_first_name#4207, c_last_name#4208, c_preferred_cust_flag#4209, c_birth_country#4213, c_login#4214, c_email_address#4215, d_year#4246], functions=[sum(((((ss_ext_list_price#4233 - ss_ext_wholesale_cost#4232) - ss_ext_discount_amt#4230) + ss_ext_sales_price#4231) / 2))]) "
          },
          "16" : {
            "sign" : -1414276816,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 7435110696,
            "rowCount" : 142982898,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [c_customer_id#4747, c_first_name#4754, c_last_name#4755, c_preferred_cust_flag#4756, c_birth_country#4760, c_login#4761, c_email_address#4762, d_year#4804], [c_customer_id#4747 AS customer_id#2970, sum(((((cs_ext_list_price#4788 - cs_ext_wholesale_cost#4787) - cs_ext_discount_amt#4785) + cs_ext_sales_price#4786) / 2)) AS year_total#2978], HashAggregate(keys=[c_customer_id#4747, c_first_name#4754, c_last_name#4755, c_preferred_cust_flag#4756, c_birth_country#4760, c_login#4761, c_email_address#4762, d_year#4804], functions=[sum(((((cs_ext_list_price#4788 - cs_ext_wholesale_cost#4787) - cs_ext_discount_amt#4785) + cs_ext_sales_price#4786) / 2))]) "
          },
          "5" : {
            "sign" : 1123123913,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 29448098332350260635359,
            "rowCount" : 155810044086509315531,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [customer_id#2821, customer_id#2950, customer_first_name#2951, customer_last_name#2952, customer_email_address#2956, year_total#2839, year_total#2978, year_total#2849] "
          },
          "10" : {
            "sign" : 301273894,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 12592943809311141573,
            "rowCount" : 60253319661775797,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (customer_id#2821 = customer_id#2831) "
          },
          "6" : {
            "sign" : -822498511,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 33810779566772521470227,
            "rowCount" : 155810044086509315531,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (customer_id#2821 = customer_id#2841) "
          },
          "1" : {
            "sign" : -604102989,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
            "sizeInBytes" : 636845765547383733777593,
            "rowCount" : 5635803234932599413961,
            "isRuntime" : false,
            "predicate" : " (unknown) LocalLimit Arguments: 100 "
          },
          "17" : {
            "sign" : 2009240091,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 3761782752,
            "rowCount" : 72341976,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Filter (isnotnull(year_total#2849) AND (year_total#2849 > 0.000000)), ShuffleQueryStage 34 "
          },
          "14" : {
            "sign" : -237935041,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 70090548,
            "rowCount" : 1592967,
            "isRuntime" : true,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(year_total#2839) AND (year_total#2839 > 0.000000)) "
          },
          "0" : {
            "sign" : 1744083294,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
            "sizeInBytes" : 8800,
            "rowCount" : 100,
            "isRuntime" : false,
            "predicate" : " (unknown) GlobalLimit Arguments: 100 "
          },
          "2" : {
            "sign" : 798596040,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 636845765547383733777593,
            "rowCount" : 5635803234932599413961,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [customer_id#2950 ASC NULLS FIRST, customer_first_name#2951 ASC NULLS FIRST, customer_last_name#2952 ASC NULLS FIRST, customer_email_address#2956 ASC NULLS FIRST], true "
          },
          "18" : {
            "sign" : 404059991,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 3761782752,
            "rowCount" : 72341976,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [c_customer_id#5305, c_first_name#5312, c_last_name#5313, c_preferred_cust_flag#5314, c_birth_country#5318, c_login#5319, c_email_address#5320, d_year#5362], [c_customer_id#5305 AS customer_id#2990, sum(((((ws_ext_list_price#5346 - ws_ext_wholesale_cost#5345) - ws_ext_discount_amt#5343) + ws_ext_sales_price#5344) / 2)) AS year_total#2998], HashAggregate(keys=[c_customer_id#5305, c_first_name#5312, c_last_name#5313, c_preferred_cust_flag#5314, c_birth_country#5318, c_login#5319, c_email_address#5320, d_year#5362], functions=[sum(((((ws_ext_list_price#5346 - ws_ext_wholesale_cost#5345) - ws_ext_discount_amt#5343) + ws_ext_sales_price#5344) / 2))]) "
          },
          "7" : {
            "sign" : 1245164377,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 745214303434733703893,
            "rowCount" : 4307597129680541641,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [customer_id#2821, customer_id#2950, customer_first_name#2951, customer_last_name#2952, customer_email_address#2956, year_total#2839, year_total#2978] "
          },
          "3" : {
            "sign" : 1676348979,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 636845765547383733777593,
            "rowCount" : 5635803234932599413961,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [customer_id#2950, customer_first_name#2951, customer_last_name#2952, customer_email_address#2956] "
          }
        },
        "links" : [ {
          "fromId" : 12,
          "fromName" : "LogicalQueryStage",
          "toId" : 11,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 13,
          "fromName" : "LogicalQueryStage",
          "toId" : 11,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "Join",
          "toId" : 10,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 15,
          "fromName" : "LogicalQueryStage",
          "toId" : 14,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 14,
          "fromName" : "Filter",
          "toId" : 10,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "Join",
          "toId" : 9,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "Project",
          "toId" : 8,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 16,
          "fromName" : "LogicalQueryStage",
          "toId" : 8,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "Join",
          "toId" : 7,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Project",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 17,
          "fromName" : "LogicalQueryStage",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Join",
          "toId" : 5,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Project",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 18,
          "fromName" : "LogicalQueryStage",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Join",
          "toId" : 3,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Project",
          "toId" : 2,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "LocalLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "LocalLimit",
          "toId" : 0,
          "toName" : "GlobalLimit",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [customer_id#2950 ASC NULLS FIRST, customer_first_name#2951 ASC NULLS FIRST, customer_last_name#2952 ASC NULLS FIRST, customer_email_address#2956 ASC NULLS FIRST], true\n      +- Project [customer_id#2950, customer_first_name#2951, customer_last_name#2952, customer_email_address#2956]\n         +- Join Inner, ((customer_id#2821 = customer_id#2990) AND (CASE WHEN (year_total#2839 > 0.000000) THEN (year_total#2978 / year_total#2839) END > CASE WHEN (year_total#2849 > 0.000000) THEN (year_total#2998 / year_total#2849) END))\n            :- Project [customer_id#2821, customer_id#2950, customer_first_name#2951, customer_last_name#2952, customer_email_address#2956, year_total#2839, year_total#2978, year_total#2849]\n            :  +- Join Inner, (customer_id#2821 = customer_id#2841)\n            :     :- Project [customer_id#2821, customer_id#2950, customer_first_name#2951, customer_last_name#2952, customer_email_address#2956, year_total#2839, year_total#2978]\n            :     :  +- Join Inner, ((customer_id#2821 = customer_id#2970) AND (CASE WHEN (year_total#2839 > 0.000000) THEN (year_total#2978 / year_total#2839) END > CASE WHEN (year_total#2829 > 0.000000) THEN (year_total#2958 / year_total#2829) END))\n            :     :     :- Project [customer_id#2821, year_total#2829, customer_id#2950, customer_first_name#2951, customer_last_name#2952, customer_email_address#2956, year_total#2958, year_total#2839]\n            :     :     :  +- Join Inner, (customer_id#2821 = customer_id#2831)\n            :     :     :     :- Join Inner, (customer_id#2950 = customer_id#2821)\n            :     :     :     :  :- LogicalQueryStage Filter (isnotnull(year_total#2829) AND (year_total#2829 > 0.000000)), ShuffleQueryStage 33\n            :     :     :     :  +- LogicalQueryStage Aggregate [c_customer_id#4200, c_first_name#4207, c_last_name#4208, c_preferred_cust_flag#4209, c_birth_country#4213, c_login#4214, c_email_address#4215, d_year#4246], [c_customer_id#4200 AS customer_id#2950, c_first_name#4207 AS customer_first_name#2951, c_last_name#4208 AS customer_last_name#2952, c_email_address#4215 AS customer_email_address#2956, sum(((((ss_ext_list_price#4233 - ss_ext_wholesale_cost#4232) - ss_ext_discount_amt#4230) + ss_ext_sales_price#4231) / 2)) AS year_total#2958], HashAggregate(keys=[c_customer_id#4200, c_first_name#4207, c_last_name#4208, c_preferred_cust_flag#4209, c_birth_country#4213, c_login#4214, c_email_address#4215, d_year#4246], functions=[sum(((((ss_ext_list_price#4233 - ss_ext_wholesale_cost#4232) - ss_ext_discount_amt#4230) + ss_ext_sales_price#4231) / 2))])\n            :     :     :     +- Filter (isnotnull(year_total#2839) AND (year_total#2839 > 0.000000))\n            :     :     :        +- LogicalQueryStage Aggregate [c_customer_id#4508, c_first_name#4515, c_last_name#4516, c_preferred_cust_flag#4517, c_birth_country#4521, c_login#4522, c_email_address#4523, d_year#4565], [c_customer_id#4508 AS customer_id#2831, sum(((((cs_ext_list_price#4549 - cs_ext_wholesale_cost#4548) - cs_ext_discount_amt#4546) + cs_ext_sales_price#4547) / 2)) AS year_total#2839], HashAggregate(keys=[c_customer_id#4508, c_first_name#4515, c_last_name#4516, c_preferred_cust_flag#4517, c_birth_country#4521, c_login#4522, c_email_address#4523, d_year#4565], functions=[sum(((((cs_ext_list_price#4549 - cs_ext_wholesale_cost#4548) - cs_ext_discount_amt#4546) + cs_ext_sales_price#4547) / 2))])\n            :     :     +- LogicalQueryStage Aggregate [c_customer_id#4747, c_first_name#4754, c_last_name#4755, c_preferred_cust_flag#4756, c_birth_country#4760, c_login#4761, c_email_address#4762, d_year#4804], [c_customer_id#4747 AS customer_id#2970, sum(((((cs_ext_list_price#4788 - cs_ext_wholesale_cost#4787) - cs_ext_discount_amt#4785) + cs_ext_sales_price#4786) / 2)) AS year_total#2978], HashAggregate(keys=[c_customer_id#4747, c_first_name#4754, c_last_name#4755, c_preferred_cust_flag#4756, c_birth_country#4760, c_login#4761, c_email_address#4762, d_year#4804], functions=[sum(((((cs_ext_list_price#4788 - cs_ext_wholesale_cost#4787) - cs_ext_discount_amt#4785) + cs_ext_sales_price#4786) / 2))])\n            :     +- LogicalQueryStage Filter (isnotnull(year_total#2849) AND (year_total#2849 > 0.000000)), ShuffleQueryStage 34\n            +- LogicalQueryStage Aggregate [c_customer_id#5305, c_first_name#5312, c_last_name#5313, c_preferred_cust_flag#5314, c_birth_country#5318, c_login#5319, c_email_address#5320, d_year#5362], [c_customer_id#5305 AS customer_id#2990, sum(((((ws_ext_list_price#5346 - ws_ext_wholesale_cost#5345) - ws_ext_discount_amt#5343) + ws_ext_sales_price#5344) / 2)) AS year_total#2998], HashAggregate(keys=[c_customer_id#5305, c_first_name#5312, c_last_name#5313, c_preferred_cust_flag#5314, c_birth_country#5318, c_login#5319, c_email_address#5320, d_year#5362], functions=[sum(((((ws_ext_list_price#5346 - ws_ext_wholesale_cost#5345) - ws_ext_discount_amt#5343) + ws_ext_sales_price#5344) / 2))])\n"
      },
      "IM" : {
        "inputSizeInBytes" : 65036394339,
        "inputRowCount" : 839347719
      },
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 16,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "StartTimeInMs" : 1702226538689,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 29989,
        "IOBytes" : {
          "Total" : 4112501612,
          "Details" : {
            "IR" : 0,
            "IW" : 0,
            "SR" : 3510548542,
            "SW" : 601953070
          }
        }
      }
    },
    "16" : {
      "LQP" : {
        "operators" : {
          "12" : {
            "sign" : -1458191872,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 101735088,
            "rowCount" : 1816698,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Filter (isnotnull(year_total#2829) AND (year_total#2829 > 0.000000)), ShuffleQueryStage 33 "
          },
          "8" : {
            "sign" : -1884134972,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 25088456347714779868285693974900,
            "rowCount" : 111504250434287910525714195444,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, ((customer_id#2821 = customer_id#2970) AND (CASE WHEN (year_total#2839 > 0.000000) THEN (year_total#2978 / year_total#2839) END > CASE WHEN (year_total#2829 > 0.000000) THEN (year_total#2958 / year_total#2829) END)) "
          },
          "4" : {
            "sign" : -1967237978,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 131296961333431144272150118190735358416971142400,
            "rowCount" : 583542050370805085654000525292157148519871744,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, ((customer_id#2821 = customer_id#2990) AND (CASE WHEN (year_total#2839 > 0.000000) THEN (year_total#2978 / year_total#2839) END > CASE WHEN (year_total#2849 > 0.000000) THEN (year_total#2998 / year_total#2849) END)) "
          },
          "15" : {
            "sign" : -1414276816,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 7435110696,
            "rowCount" : 142982898,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [c_customer_id#4747, c_first_name#4754, c_last_name#4755, c_preferred_cust_flag#4756, c_birth_country#4760, c_login#4761, c_email_address#4762, d_year#4804], [c_customer_id#4747 AS customer_id#2970, sum(((((cs_ext_list_price#4788 - cs_ext_wholesale_cost#4787) - cs_ext_discount_amt#4785) + cs_ext_sales_price#4786) / 2)) AS year_total#2978], HashAggregate(keys=[c_customer_id#4747, c_first_name#4754, c_last_name#4755, c_preferred_cust_flag#4756, c_birth_country#4760, c_login#4761, c_email_address#4762, d_year#4804], functions=[sum(((((cs_ext_list_price#4788 - cs_ext_wholesale_cost#4787) - cs_ext_discount_amt#4785) + cs_ext_sales_price#4786) / 2))]) "
          },
          "11" : {
            "sign" : -1441832503,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 82445846289476670,
            "rowCount" : 499671795693798,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (customer_id#2950 = customer_id#2821) "
          },
          "9" : {
            "sign" : -262489225,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 141151631495160433838418,
            "rowCount" : 779843267929063170378,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [customer_id#2821, year_total#2829, customer_id#2950, customer_first_name#2951, customer_last_name#2952, customer_email_address#2956, year_total#2958, year_total#2839] "
          },
          "13" : {
            "sign" : 2038413297,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 35480669679,
            "rowCount" : 275043951,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [c_customer_id#4200, c_first_name#4207, c_last_name#4208, c_preferred_cust_flag#4209, c_birth_country#4213, c_login#4214, c_email_address#4215, d_year#4246], [c_customer_id#4200 AS customer_id#2950, c_first_name#4207 AS customer_first_name#2951, c_last_name#4208 AS customer_last_name#2952, c_email_address#4215 AS customer_email_address#2956, sum(((((ss_ext_list_price#4233 - ss_ext_wholesale_cost#4232) - ss_ext_discount_amt#4230) + ss_ext_sales_price#4231) / 2)) AS year_total#2958], ShuffleQueryStage 36 "
          },
          "16" : {
            "sign" : 2009240091,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 3761782752,
            "rowCount" : 72341976,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Filter (isnotnull(year_total#2849) AND (year_total#2849 > 0.000000)), ShuffleQueryStage 34 "
          },
          "5" : {
            "sign" : 1542204426,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 1460025243395559453661786831450117479264,
            "rowCount" : 8066437808815245600341363709669157344,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [customer_id#2821, customer_id#2950, customer_first_name#2951, customer_last_name#2952, customer_email_address#2956, year_total#2839, year_total#2978, year_total#2849] "
          },
          "10" : {
            "sign" : 1387654351,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 156748496853741697245978,
            "rowCount" : 779843267929063170378,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (customer_id#2821 = customer_id#2831) "
          },
          "6" : {
            "sign" : 1337486816,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 1685885502042386330471345015320853884896,
            "rowCount" : 8066437808815245600341363709669157344,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (customer_id#2821 = customer_id#2841) "
          },
          "1" : {
            "sign" : 296920270,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
            "sizeInBytes" : 65940251691900974678902059358013757782745507072,
            "rowCount" : 583542050370805085654000525292157148519871744,
            "isRuntime" : false,
            "predicate" : " (unknown) LocalLimit Arguments: 100 "
          },
          "17" : {
            "sign" : 404059991,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 3761782752,
            "rowCount" : 72341976,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [c_customer_id#5305, c_first_name#5312, c_last_name#5313, c_preferred_cust_flag#5314, c_birth_country#5318, c_login#5319, c_email_address#5320, d_year#5362], [c_customer_id#5305 AS customer_id#2990, sum(((((ws_ext_list_price#5346 - ws_ext_wholesale_cost#5345) - ws_ext_discount_amt#5343) + ws_ext_sales_price#5344) / 2)) AS year_total#2998], HashAggregate(keys=[c_customer_id#5305, c_first_name#5312, c_last_name#5313, c_preferred_cust_flag#5314, c_birth_country#5318, c_login#5319, c_email_address#5320, d_year#5362], functions=[sum(((((ws_ext_list_price#5346 - ws_ext_wholesale_cost#5345) - ws_ext_discount_amt#5343) + ws_ext_sales_price#5344) / 2))]) "
          },
          "14" : {
            "sign" : 275524156,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 87399816,
            "rowCount" : 1560711,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Filter (isnotnull(year_total#2839) AND (year_total#2839 > 0.000000)), ShuffleQueryStage 35 "
          },
          "0" : {
            "sign" : 1444708045,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
            "sizeInBytes" : 8800,
            "rowCount" : 100,
            "isRuntime" : false,
            "predicate" : " (unknown) GlobalLimit Arguments: 100 "
          },
          "2" : {
            "sign" : 1461105699,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 65940251691900974678902059358013757782745507072,
            "rowCount" : 583542050370805085654000525292157148519871744,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [customer_id#2950 ASC NULLS FIRST, customer_first_name#2951 ASC NULLS FIRST, customer_last_name#2952 ASC NULLS FIRST, customer_email_address#2956 ASC NULLS FIRST], true "
          },
          "7" : {
            "sign" : 1178387794,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 18398201321657505236742842248260,
            "rowCount" : 111504250434287910525714195444,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [customer_id#2821, customer_id#2950, customer_first_name#2951, customer_last_name#2952, customer_email_address#2956, year_total#2839, year_total#2978] "
          },
          "3" : {
            "sign" : -255943154,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 65940251691900974678902059358013757782745507072,
            "rowCount" : 583542050370805085654000525292157148519871744,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [customer_id#2950, customer_first_name#2951, customer_last_name#2952, customer_email_address#2956] "
          }
        },
        "links" : [ {
          "fromId" : 12,
          "fromName" : "LogicalQueryStage",
          "toId" : 11,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 13,
          "fromName" : "LogicalQueryStage",
          "toId" : 11,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "Join",
          "toId" : 10,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 14,
          "fromName" : "LogicalQueryStage",
          "toId" : 10,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "Join",
          "toId" : 9,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "Project",
          "toId" : 8,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 15,
          "fromName" : "LogicalQueryStage",
          "toId" : 8,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "Join",
          "toId" : 7,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Project",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 16,
          "fromName" : "LogicalQueryStage",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Join",
          "toId" : 5,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Project",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 17,
          "fromName" : "LogicalQueryStage",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Join",
          "toId" : 3,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Project",
          "toId" : 2,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "LocalLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "LocalLimit",
          "toId" : 0,
          "toName" : "GlobalLimit",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [customer_id#2950 ASC NULLS FIRST, customer_first_name#2951 ASC NULLS FIRST, customer_last_name#2952 ASC NULLS FIRST, customer_email_address#2956 ASC NULLS FIRST], true\n      +- Project [customer_id#2950, customer_first_name#2951, customer_last_name#2952, customer_email_address#2956]\n         +- Join Inner, ((customer_id#2821 = customer_id#2990) AND (CASE WHEN (year_total#2839 > 0.000000) THEN (year_total#2978 / year_total#2839) END > CASE WHEN (year_total#2849 > 0.000000) THEN (year_total#2998 / year_total#2849) END))\n            :- Project [customer_id#2821, customer_id#2950, customer_first_name#2951, customer_last_name#2952, customer_email_address#2956, year_total#2839, year_total#2978, year_total#2849]\n            :  +- Join Inner, (customer_id#2821 = customer_id#2841)\n            :     :- Project [customer_id#2821, customer_id#2950, customer_first_name#2951, customer_last_name#2952, customer_email_address#2956, year_total#2839, year_total#2978]\n            :     :  +- Join Inner, ((customer_id#2821 = customer_id#2970) AND (CASE WHEN (year_total#2839 > 0.000000) THEN (year_total#2978 / year_total#2839) END > CASE WHEN (year_total#2829 > 0.000000) THEN (year_total#2958 / year_total#2829) END))\n            :     :     :- Project [customer_id#2821, year_total#2829, customer_id#2950, customer_first_name#2951, customer_last_name#2952, customer_email_address#2956, year_total#2958, year_total#2839]\n            :     :     :  +- Join Inner, (customer_id#2821 = customer_id#2831)\n            :     :     :     :- Join Inner, (customer_id#2950 = customer_id#2821)\n            :     :     :     :  :- LogicalQueryStage Filter (isnotnull(year_total#2829) AND (year_total#2829 > 0.000000)), ShuffleQueryStage 33\n            :     :     :     :  +- LogicalQueryStage Aggregate [c_customer_id#4200, c_first_name#4207, c_last_name#4208, c_preferred_cust_flag#4209, c_birth_country#4213, c_login#4214, c_email_address#4215, d_year#4246], [c_customer_id#4200 AS customer_id#2950, c_first_name#4207 AS customer_first_name#2951, c_last_name#4208 AS customer_last_name#2952, c_email_address#4215 AS customer_email_address#2956, sum(((((ss_ext_list_price#4233 - ss_ext_wholesale_cost#4232) - ss_ext_discount_amt#4230) + ss_ext_sales_price#4231) / 2)) AS year_total#2958], ShuffleQueryStage 36\n            :     :     :     +- LogicalQueryStage Filter (isnotnull(year_total#2839) AND (year_total#2839 > 0.000000)), ShuffleQueryStage 35\n            :     :     +- LogicalQueryStage Aggregate [c_customer_id#4747, c_first_name#4754, c_last_name#4755, c_preferred_cust_flag#4756, c_birth_country#4760, c_login#4761, c_email_address#4762, d_year#4804], [c_customer_id#4747 AS customer_id#2970, sum(((((cs_ext_list_price#4788 - cs_ext_wholesale_cost#4787) - cs_ext_discount_amt#4785) + cs_ext_sales_price#4786) / 2)) AS year_total#2978], HashAggregate(keys=[c_customer_id#4747, c_first_name#4754, c_last_name#4755, c_preferred_cust_flag#4756, c_birth_country#4760, c_login#4761, c_email_address#4762, d_year#4804], functions=[sum(((((cs_ext_list_price#4788 - cs_ext_wholesale_cost#4787) - cs_ext_discount_amt#4785) + cs_ext_sales_price#4786) / 2))])\n            :     +- LogicalQueryStage Filter (isnotnull(year_total#2849) AND (year_total#2849 > 0.000000)), ShuffleQueryStage 34\n            +- LogicalQueryStage Aggregate [c_customer_id#5305, c_first_name#5312, c_last_name#5313, c_preferred_cust_flag#5314, c_birth_country#5318, c_login#5319, c_email_address#5320, d_year#5362], [c_customer_id#5305 AS customer_id#2990, sum(((((ws_ext_list_price#5346 - ws_ext_wholesale_cost#5345) - ws_ext_discount_amt#5343) + ws_ext_sales_price#5344) / 2)) AS year_total#2998], HashAggregate(keys=[c_customer_id#5305, c_first_name#5312, c_last_name#5313, c_preferred_cust_flag#5314, c_birth_country#5318, c_login#5319, c_email_address#5320, d_year#5362], functions=[sum(((((ws_ext_list_price#5346 - ws_ext_wholesale_cost#5345) - ws_ext_discount_amt#5343) + ws_ext_sales_price#5344) / 2))])\n"
      },
      "IM" : {
        "inputSizeInBytes" : 50628480783,
        "inputRowCount" : 566088210
      },
      "PD" : {
        "13" : [ 153496, 153496, 147740, 153496, 153496, 147740, 141984, 147740, 153496, 156181, 153496, 153496, 153496, 156181, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 147740, 153496, 153496, 153496, 156181, 153496, 153496, 156181, 153496, 153496, 141984, 153496, 153496, 147740, 156181, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 156181, 153496, 147740, 153496, 156181, 150425, 153496, 153496, 153496, 150425, 156181, 153496, 147740, 153496, 153496, 156181, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 156181, 153496, 153496, 153496, 147740, 153496, 153496, 150425, 153496, 153496, 153496, 156181, 156181, 153496, 153496, 153496, 153496, 147740, 153496, 153496, 153496, 153496, 156181, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 156181, 147740, 153496, 153496, 153496, 156181, 153496, 153496, 153496, 153496, 153496, 156181, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 156181, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 156181, 153496, 153496, 147740, 153496, 147740, 153496, 150425, 153496, 153496, 153496, 153496, 156181, 147740, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 147740, 153496, 147740, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 147740, 147740, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 147740, 156181, 156181, 153496, 156181, 153496, 153496, 153496, 153496, 156181, 153496 ],
        "15" : [ 130298, 124542, 130298, 130298, 136054, 130298, 124542, 130298, 136054, 136054, 136054, 130298, 136054, 136995, 136054, 136054, 130298, 131239, 136995, 130298, 136054, 131239, 135198, 135198, 136054, 136054, 130298, 130298, 135198, 135198, 136054, 136995, 136995, 136054, 136995, 135198, 135198, 130298, 135198, 136054, 136054, 136054, 136054, 136054, 130298, 136054, 135198, 130298, 136054, 136054, 135198, 136054, 136054, 136995, 136054, 130298, 136054, 135198, 136995, 130298, 136054, 135198, 130298, 136054, 136054, 130298, 130298, 135198, 136054, 130298, 136054, 136054, 135198, 135198, 130298, 130298, 136054, 136054, 135198, 130298, 135198, 130298, 135198, 130298, 136054, 136054, 136995, 136054, 130298, 135198, 136995, 136995, 136995, 136054, 135198, 130298, 136054, 136995, 136054, 136054, 136995, 136054, 136054, 136054, 135198, 135198, 136054, 136054, 136054, 136995, 131239, 136054, 129442, 136054, 130298, 130298, 136995, 136054, 136054, 136054, 135198, 136054, 135198, 135198, 136054, 136054, 136054, 135198, 135198, 129442, 130298, 135198, 136054, 136054, 136054, 130298, 136054, 135198, 136054, 135198, 136054, 135198, 136054, 136054, 129442, 130298, 136054, 130298, 136054, 136054, 136054, 136054, 136995, 130298, 136054, 136054, 129442, 136054, 130298, 129442, 136054, 136995, 130298, 135198, 136054, 135198, 135198, 136054, 130298, 135198, 135198, 136054, 136054, 136995, 124542, 130298, 130298, 130298, 136054, 136995, 136054, 135198, 136054, 136995, 130298, 136054, 135198, 129442, 130298, 130298, 136054, 136995, 136054, 130298, 136054, 129442, 136054, 136054, 136995, 136054 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 6,
        "FinishedTasksNum" : 19,
        "FinishedTasksTotalTimeInMs" : 70279.0,
        "FinishedTasksDistributionInMs" : [ 866.0, 3784.0, 4005.0, 4173.0, 4955.0 ]
      },
      "StartTimeInMs" : 1702226551867,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 16811,
        "IOBytes" : {
          "Total" : 2285439919,
          "Details" : {
            "IR" : 0,
            "IW" : 0,
            "SR" : 1907842544,
            "SW" : 377597375
          }
        }
      }
    },
    "5" : {
      "LQP" : {
        "operators" : {
          "34" : {
            "sign" : 830600325,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 6115613240000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(year_total#2849) AND (year_total#2849 > 0.000000)) "
          },
          "12" : {
            "sign" : -156756162,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 4700347256000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(year_total#2829) AND (year_total#2829 > 0.000000)) "
          },
          "8" : {
            "sign" : 1552567801,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 34190306030899891336660082647315056353280000000000000000000000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, ((customer_id#2821 = customer_id#2970) AND (CASE WHEN (year_total#2839 > 0.000000) THEN (year_total#2978 / year_total#2839) END > CASE WHEN (year_total#2829 > 0.000000) THEN (year_total#2958 / year_total#2829) END)) "
          },
          "19" : {
            "sign" : 1578530028,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 97718935280000000,
            "rowCount" : 531081170000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_customer_id#4200, c_first_name#4207, c_last_name#4208, c_preferred_cust_flag#4209, c_birth_country#4213, c_login#4214, c_email_address#4215, ss_ext_discount_amt#4230, ss_ext_sales_price#4231, ss_ext_wholesale_cost#4232, ss_ext_list_price#4233, d_year#4246] "
          },
          "23" : {
            "sign" : -791359697,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 12189431056000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(year_total#2839) AND (year_total#2839 > 0.000000)) "
          },
          "4" : {
            "sign" : 2042273313,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 826459830883032342402898569255245396646982819544216386560000000000000000000000000000000000000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, ((customer_id#2821 = customer_id#2990) AND (CASE WHEN (year_total#2839 > 0.000000) THEN (year_total#2978 / year_total#2839) END > CASE WHEN (year_total#2849 > 0.000000) THEN (year_total#2998 / year_total#2849) END)) "
          },
          "40" : {
            "sign" : 1099149837,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 6115613240000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [c_customer_id#5305, c_first_name#5312, c_last_name#5313, c_preferred_cust_flag#5314, c_birth_country#5318, c_login#5319, c_email_address#5320, d_year#5362], [c_customer_id#5305 AS customer_id#2990, sum(((((ws_ext_list_price#5346 - ws_ext_wholesale_cost#5345) - ws_ext_discount_amt#5343) + ws_ext_sales_price#5344) / 2)) AS year_total#2998] "
          },
          "15" : {
            "sign" : -1238535703,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 20510606208000000,
            "rowCount" : 106826074000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (c_customer_sk#30 = ss_customer_sk#50) "
          },
          "11" : {
            "sign" : -235742484,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 259611655692768030080000000000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (customer_id#2950 = customer_id#2821) "
          },
          "9" : {
            "sign" : -1666945939,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 2804914017219073340863242554880000000000000000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [customer_id#2821, year_total#2829, customer_id#2950, customer_first_name#2951, customer_last_name#2952, customer_email_address#2956, year_total#2958, year_total#2839] "
          },
          "44" : {
            "sign" : -149944874,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 306068840,
            "rowCount" : 2000000,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [c_customer_sk#5304, c_customer_id#5305, c_first_name#5312, c_last_name#5313, c_preferred_cust_flag#5314, c_birth_country#5318, c_login#5319, c_email_address#5320], ShuffleQueryStage 20 "
          },
          "33" : {
            "sign" : -1104656951,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 306068840,
            "rowCount" : 2000000,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [c_customer_sk#4746, c_customer_id#4747, c_first_name#4754, c_last_name#4755, c_preferred_cust_flag#4756, c_birth_country#4760, c_login#4761, c_email_address#4762], ShuffleQueryStage 12 "
          },
          "22" : {
            "sign" : -545469420,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 306068840,
            "rowCount" : 2000000,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [c_customer_sk#4199, c_customer_id#4200, c_first_name#4207, c_last_name#4208, c_preferred_cust_flag#4209, c_birth_country#4213, c_login#4214, c_email_address#4215], ShuffleQueryStage 4 "
          },
          "26" : {
            "sign" : 1188748241,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 53190244608000000,
            "rowCount" : 277032524000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (c_customer_sk#4507 = cs_bill_customer_sk#4527) "
          },
          "37" : {
            "sign" : 1864291467,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 26686312320000000,
            "rowCount" : 138991210000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (c_customer_sk#5065 = ws_bill_customer_sk#5086) "
          },
          "13" : {
            "sign" : -1150214364,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 4700347256000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [c_customer_id#31, c_first_name#38, c_last_name#39, c_preferred_cust_flag#40, c_birth_country#44, c_login#45, c_email_address#46, d_year#77], [c_customer_id#31 AS customer_id#2821, sum(((((ss_ext_list_price#64 - ss_ext_wholesale_cost#63) - ss_ext_discount_amt#61) + ss_ext_sales_price#62) / 2)) AS year_total#2829] "
          },
          "24" : {
            "sign" : 421427731,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 12189431056000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [c_customer_id#4508, c_first_name#4515, c_last_name#4516, c_preferred_cust_flag#4517, c_birth_country#4521, c_login#4522, c_email_address#4523, d_year#4565], [c_customer_id#4508 AS customer_id#2831, sum(((((cs_ext_list_price#4549 - cs_ext_wholesale_cost#4548) - cs_ext_discount_amt#4546) + cs_ext_sales_price#4547) / 2)) AS year_total#2839] "
          },
          "35" : {
            "sign" : 263073841,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 6115613240000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [c_customer_id#5066, c_first_name#5073, c_last_name#5074, c_preferred_cust_flag#5075, c_birth_country#5079, c_login#5080, c_email_address#5081, d_year#5123], [c_customer_id#5066 AS customer_id#2841, sum(((((ws_ext_list_price#5107 - ws_ext_wholesale_cost#5106) - ws_ext_discount_amt#5104) + ws_ext_sales_price#5105) / 2)) AS year_total#2849] "
          },
          "16" : {
            "sign" : 1000661201,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 2991130072,
            "rowCount" : 53413037,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ss_customer_sk#50, ss_ext_discount_amt#61, ss_ext_sales_price#62, ss_ext_wholesale_cost#63, ss_ext_list_price#64, d_year#77], ShuffleQueryStage 21 "
          },
          "5" : {
            "sign" : -951250717,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 135139322656550521563541282616368558428816342144000000000000000000000000000000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [customer_id#2821, customer_id#2950, customer_first_name#2951, customer_last_name#2952, customer_email_address#2956, year_total#2839, year_total#2978, year_total#2849] "
          },
          "10" : {
            "sign" : -419034197,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 3164518378401005820461094164480000000000000000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (customer_id#2821 = customer_id#2831) "
          },
          "21" : {
            "sign" : 1961017369,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 12745948080,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ss_customer_sk#4219, ss_ext_discount_amt#4230, ss_ext_sales_price#4231, ss_ext_wholesale_cost#4232, ss_ext_list_price#4233, d_year#4246], ShuffleQueryStage 24 "
          },
          "43" : {
            "sign" : -983899132,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 3335789040,
            "rowCount" : 69495605,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ws_bill_customer_sk#5325, ws_ext_discount_amt#5343, ws_ext_sales_price#5344, ws_ext_wholesale_cost#5345, ws_ext_list_price#5346, d_year#5362], ShuffleQueryStage 26 "
          },
          "32" : {
            "sign" : -186934941,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 6648780576,
            "rowCount" : 138516262,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [cs_bill_customer_sk#4766, cs_ext_discount_amt#4785, cs_ext_sales_price#4786, cs_ext_wholesale_cost#4787, cs_ext_list_price#4788, d_year#4804], ShuffleQueryStage 25 "
          },
          "6" : {
            "sign" : -326641307,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 152464876843287767917841447054364527458151770624000000000000000000000000000000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (customer_id#2821 = customer_id#2841) "
          },
          "36" : {
            "sign" : 1013224406,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 25574382640000000,
            "rowCount" : 138991210000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_customer_id#5066, c_first_name#5073, c_last_name#5074, c_preferred_cust_flag#5075, c_birth_country#5079, c_login#5080, c_email_address#5081, ws_ext_discount_amt#5104, ws_ext_sales_price#5105, ws_ext_wholesale_cost#5106, ws_ext_list_price#5107, d_year#5123] "
          },
          "1" : {
            "sign" : -1824399275,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
            "sizeInBytes" : 378794089154723156934661844241987473463200458957765843840000000000000000000000000000000000000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) LocalLimit Arguments: 100 "
          },
          "39" : {
            "sign" : -8231932,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 306068840,
            "rowCount" : 2000000,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [c_customer_sk#5065, c_customer_id#5066, c_first_name#5073, c_last_name#5074, c_preferred_cust_flag#5075, c_birth_country#5079, c_login#5080, c_email_address#5081], ShuffleQueryStage 16 "
          },
          "17" : {
            "sign" : -1918321310,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 306068840,
            "rowCount" : 2000000,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [c_customer_sk#30, c_customer_id#31, c_first_name#38, c_last_name#39, c_preferred_cust_flag#40, c_birth_country#44, c_login#45, c_email_address#46], ShuffleQueryStage 1 "
          },
          "25" : {
            "sign" : 1201651664,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 50973984416000000,
            "rowCount" : 277032524000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_customer_id#4508, c_first_name#4515, c_last_name#4516, c_preferred_cust_flag#4517, c_birth_country#4521, c_login#4522, c_email_address#4523, cs_ext_discount_amt#4546, cs_ext_sales_price#4547, cs_ext_wholesale_cost#4548, cs_ext_list_price#4549, d_year#4565] "
          },
          "14" : {
            "sign" : -1768288712,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 19655997616000000,
            "rowCount" : 106826074000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_customer_id#31, c_first_name#38, c_last_name#39, c_preferred_cust_flag#40, c_birth_country#44, c_login#45, c_email_address#46, ss_ext_discount_amt#61, ss_ext_sales_price#62, ss_ext_wholesale_cost#63, ss_ext_list_price#64, d_year#77] "
          },
          "31" : {
            "sign" : -1247342346,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 53190244608000000,
            "rowCount" : 277032524000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (c_customer_sk#4746 = cs_bill_customer_sk#4766) "
          },
          "42" : {
            "sign" : -979568171,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 26686312320000000,
            "rowCount" : 138991210000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (c_customer_sk#5304 = ws_bill_customer_sk#5325) "
          },
          "0" : {
            "sign" : -201500710,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
            "sizeInBytes" : 8800,
            "rowCount" : 100,
            "isRuntime" : false,
            "predicate" : " (unknown) GlobalLimit Arguments: 100 "
          },
          "20" : {
            "sign" : -284003848,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 101967584640000000,
            "rowCount" : 531081170000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (c_customer_sk#4199 = ss_customer_sk#4219) "
          },
          "27" : {
            "sign" : -1147336357,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 6648780576,
            "rowCount" : 138516262,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [cs_bill_customer_sk#4527, cs_ext_discount_amt#4546, cs_ext_sales_price#4547, cs_ext_wholesale_cost#4548, cs_ext_list_price#4549, d_year#4565], ShuffleQueryStage 22 "
          },
          "2" : {
            "sign" : 609274372,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 378794089154723156934661844241987473463200458957765843840000000000000000000000000000000000000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [customer_id#2950 ASC NULLS FIRST, customer_first_name#2951 ASC NULLS FIRST, customer_last_name#2952 ASC NULLS FIRST, customer_email_address#2956 ASC NULLS FIRST], true "
          },
          "38" : {
            "sign" : -2060825732,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 3335789040,
            "rowCount" : 69495605,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ws_bill_customer_sk#5086, ws_ext_discount_amt#5104, ws_ext_sales_price#5105, ws_ext_wholesale_cost#5106, ws_ext_list_price#5107, d_year#5123], ShuffleQueryStage 23 "
          },
          "18" : {
            "sign" : 1669679482,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 55232441680000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [c_customer_id#4200, c_first_name#4207, c_last_name#4208, c_preferred_cust_flag#4209, c_birth_country#4213, c_login#4214, c_email_address#4215, d_year#4246], [c_customer_id#4200 AS customer_id#2950, c_first_name#4207 AS customer_first_name#2951, c_last_name#4208 AS customer_last_name#2952, c_email_address#4215 AS customer_email_address#2956, sum(((((ss_ext_list_price#4233 - ss_ext_wholesale_cost#4232) - ss_ext_discount_amt#4230) + ss_ext_sales_price#4231) / 2)) AS year_total#2958] "
          },
          "30" : {
            "sign" : -1411007706,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 50973984416000000,
            "rowCount" : 277032524000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_customer_id#4747, c_first_name#4754, c_last_name#4755, c_preferred_cust_flag#4756, c_birth_country#4760, c_login#4761, c_email_address#4762, cs_ext_discount_amt#4785, cs_ext_sales_price#4786, cs_ext_wholesale_cost#4787, cs_ext_list_price#4788, d_year#4804] "
          },
          "7" : {
            "sign" : 1858777073,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 24930431480864504099647976930333895257600000000000000000000000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [customer_id#2821, customer_id#2950, customer_first_name#2951, customer_last_name#2952, customer_email_address#2956, year_total#2839, year_total#2978] "
          },
          "29" : {
            "sign" : -558918111,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 12189431056000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [c_customer_id#4747, c_first_name#4754, c_last_name#4755, c_preferred_cust_flag#4756, c_birth_country#4760, c_login#4761, c_email_address#4762, d_year#4804], [c_customer_id#4747 AS customer_id#2970, sum(((((cs_ext_list_price#4788 - cs_ext_wholesale_cost#4787) - cs_ext_discount_amt#4785) + cs_ext_sales_price#4786) / 2)) AS year_total#2978] "
          },
          "41" : {
            "sign" : 103842726,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 25574382640000000,
            "rowCount" : 138991210000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_customer_id#5305, c_first_name#5312, c_last_name#5313, c_preferred_cust_flag#5314, c_birth_country#5318, c_login#5319, c_email_address#5320, ws_ext_discount_amt#5343, ws_ext_sales_price#5344, ws_ext_wholesale_cost#5345, ws_ext_list_price#5346, d_year#5362] "
          },
          "3" : {
            "sign" : 1227264661,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 378794089154723156934661844241987473463200458957765843840000000000000000000000000000000000000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [customer_id#2950, customer_first_name#2951, customer_last_name#2952, customer_email_address#2956] "
          },
          "28" : {
            "sign" : -268161914,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 306068840,
            "rowCount" : 2000000,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [c_customer_sk#4507, c_customer_id#4508, c_first_name#4515, c_last_name#4516, c_preferred_cust_flag#4517, c_birth_country#4521, c_login#4522, c_email_address#4523], ShuffleQueryStage 8 "
          }
        },
        "links" : [ {
          "fromId" : 16,
          "fromName" : "LogicalQueryStage",
          "toId" : 15,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 17,
          "fromName" : "LogicalQueryStage",
          "toId" : 15,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 15,
          "fromName" : "Join",
          "toId" : 14,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 14,
          "fromName" : "Project",
          "toId" : 13,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 13,
          "fromName" : "Aggregate",
          "toId" : 12,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 12,
          "fromName" : "Filter",
          "toId" : 11,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 21,
          "fromName" : "LogicalQueryStage",
          "toId" : 20,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 22,
          "fromName" : "LogicalQueryStage",
          "toId" : 20,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 20,
          "fromName" : "Join",
          "toId" : 19,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 19,
          "fromName" : "Project",
          "toId" : 18,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 18,
          "fromName" : "Aggregate",
          "toId" : 11,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "Join",
          "toId" : 10,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 27,
          "fromName" : "LogicalQueryStage",
          "toId" : 26,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 28,
          "fromName" : "LogicalQueryStage",
          "toId" : 26,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 26,
          "fromName" : "Join",
          "toId" : 25,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 25,
          "fromName" : "Project",
          "toId" : 24,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 24,
          "fromName" : "Aggregate",
          "toId" : 23,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 23,
          "fromName" : "Filter",
          "toId" : 10,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "Join",
          "toId" : 9,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "Project",
          "toId" : 8,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 32,
          "fromName" : "LogicalQueryStage",
          "toId" : 31,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 33,
          "fromName" : "LogicalQueryStage",
          "toId" : 31,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 31,
          "fromName" : "Join",
          "toId" : 30,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 30,
          "fromName" : "Project",
          "toId" : 29,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 29,
          "fromName" : "Aggregate",
          "toId" : 8,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "Join",
          "toId" : 7,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Project",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 38,
          "fromName" : "LogicalQueryStage",
          "toId" : 37,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 39,
          "fromName" : "LogicalQueryStage",
          "toId" : 37,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 37,
          "fromName" : "Join",
          "toId" : 36,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 36,
          "fromName" : "Project",
          "toId" : 35,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 35,
          "fromName" : "Aggregate",
          "toId" : 34,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 34,
          "fromName" : "Filter",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Join",
          "toId" : 5,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Project",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 43,
          "fromName" : "LogicalQueryStage",
          "toId" : 42,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 44,
          "fromName" : "LogicalQueryStage",
          "toId" : 42,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 42,
          "fromName" : "Join",
          "toId" : 41,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 41,
          "fromName" : "Project",
          "toId" : 40,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 40,
          "fromName" : "Aggregate",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Join",
          "toId" : 3,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Project",
          "toId" : 2,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "LocalLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "LocalLimit",
          "toId" : 0,
          "toName" : "GlobalLimit",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [customer_id#2950 ASC NULLS FIRST, customer_first_name#2951 ASC NULLS FIRST, customer_last_name#2952 ASC NULLS FIRST, customer_email_address#2956 ASC NULLS FIRST], true\n      +- Project [customer_id#2950, customer_first_name#2951, customer_last_name#2952, customer_email_address#2956]\n         +- Join Inner, ((customer_id#2821 = customer_id#2990) AND (CASE WHEN (year_total#2839 > 0.000000) THEN (year_total#2978 / year_total#2839) END > CASE WHEN (year_total#2849 > 0.000000) THEN (year_total#2998 / year_total#2849) END))\n            :- Project [customer_id#2821, customer_id#2950, customer_first_name#2951, customer_last_name#2952, customer_email_address#2956, year_total#2839, year_total#2978, year_total#2849]\n            :  +- Join Inner, (customer_id#2821 = customer_id#2841)\n            :     :- Project [customer_id#2821, customer_id#2950, customer_first_name#2951, customer_last_name#2952, customer_email_address#2956, year_total#2839, year_total#2978]\n            :     :  +- Join Inner, ((customer_id#2821 = customer_id#2970) AND (CASE WHEN (year_total#2839 > 0.000000) THEN (year_total#2978 / year_total#2839) END > CASE WHEN (year_total#2829 > 0.000000) THEN (year_total#2958 / year_total#2829) END))\n            :     :     :- Project [customer_id#2821, year_total#2829, customer_id#2950, customer_first_name#2951, customer_last_name#2952, customer_email_address#2956, year_total#2958, year_total#2839]\n            :     :     :  +- Join Inner, (customer_id#2821 = customer_id#2831)\n            :     :     :     :- Join Inner, (customer_id#2950 = customer_id#2821)\n            :     :     :     :  :- Filter (isnotnull(year_total#2829) AND (year_total#2829 > 0.000000))\n            :     :     :     :  :  +- Aggregate [c_customer_id#31, c_first_name#38, c_last_name#39, c_preferred_cust_flag#40, c_birth_country#44, c_login#45, c_email_address#46, d_year#77], [c_customer_id#31 AS customer_id#2821, sum(((((ss_ext_list_price#64 - ss_ext_wholesale_cost#63) - ss_ext_discount_amt#61) + ss_ext_sales_price#62) / 2)) AS year_total#2829]\n            :     :     :     :  :     +- Project [c_customer_id#31, c_first_name#38, c_last_name#39, c_preferred_cust_flag#40, c_birth_country#44, c_login#45, c_email_address#46, ss_ext_discount_amt#61, ss_ext_sales_price#62, ss_ext_wholesale_cost#63, ss_ext_list_price#64, d_year#77]\n            :     :     :     :  :        +- Join Inner, (c_customer_sk#30 = ss_customer_sk#50)\n            :     :     :     :  :           :- LogicalQueryStage Project [ss_customer_sk#50, ss_ext_discount_amt#61, ss_ext_sales_price#62, ss_ext_wholesale_cost#63, ss_ext_list_price#64, d_year#77], ShuffleQueryStage 21\n            :     :     :     :  :           +- LogicalQueryStage Project [c_customer_sk#30, c_customer_id#31, c_first_name#38, c_last_name#39, c_preferred_cust_flag#40, c_birth_country#44, c_login#45, c_email_address#46], ShuffleQueryStage 1\n            :     :     :     :  +- Aggregate [c_customer_id#4200, c_first_name#4207, c_last_name#4208, c_preferred_cust_flag#4209, c_birth_country#4213, c_login#4214, c_email_address#4215, d_year#4246], [c_customer_id#4200 AS customer_id#2950, c_first_name#4207 AS customer_first_name#2951, c_last_name#4208 AS customer_last_name#2952, c_email_address#4215 AS customer_email_address#2956, sum(((((ss_ext_list_price#4233 - ss_ext_wholesale_cost#4232) - ss_ext_discount_amt#4230) + ss_ext_sales_price#4231) / 2)) AS year_total#2958]\n            :     :     :     :     +- Project [c_customer_id#4200, c_first_name#4207, c_last_name#4208, c_preferred_cust_flag#4209, c_birth_country#4213, c_login#4214, c_email_address#4215, ss_ext_discount_amt#4230, ss_ext_sales_price#4231, ss_ext_wholesale_cost#4232, ss_ext_list_price#4233, d_year#4246]\n            :     :     :     :        +- Join Inner, (c_customer_sk#4199 = ss_customer_sk#4219)\n            :     :     :     :           :- LogicalQueryStage Project [ss_customer_sk#4219, ss_ext_discount_amt#4230, ss_ext_sales_price#4231, ss_ext_wholesale_cost#4232, ss_ext_list_price#4233, d_year#4246], ShuffleQueryStage 24\n            :     :     :     :           +- LogicalQueryStage Project [c_customer_sk#4199, c_customer_id#4200, c_first_name#4207, c_last_name#4208, c_preferred_cust_flag#4209, c_birth_country#4213, c_login#4214, c_email_address#4215], ShuffleQueryStage 4\n            :     :     :     +- Filter (isnotnull(year_total#2839) AND (year_total#2839 > 0.000000))\n            :     :     :        +- Aggregate [c_customer_id#4508, c_first_name#4515, c_last_name#4516, c_preferred_cust_flag#4517, c_birth_country#4521, c_login#4522, c_email_address#4523, d_year#4565], [c_customer_id#4508 AS customer_id#2831, sum(((((cs_ext_list_price#4549 - cs_ext_wholesale_cost#4548) - cs_ext_discount_amt#4546) + cs_ext_sales_price#4547) / 2)) AS year_total#2839]\n            :     :     :           +- Project [c_customer_id#4508, c_first_name#4515, c_last_name#4516, c_preferred_cust_flag#4517, c_birth_country#4521, c_login#4522, c_email_address#4523, cs_ext_discount_amt#4546, cs_ext_sales_price#4547, cs_ext_wholesale_cost#4548, cs_ext_list_price#4549, d_year#4565]\n            :     :     :              +- Join Inner, (c_customer_sk#4507 = cs_bill_customer_sk#4527)\n            :     :     :                 :- LogicalQueryStage Project [cs_bill_customer_sk#4527, cs_ext_discount_amt#4546, cs_ext_sales_price#4547, cs_ext_wholesale_cost#4548, cs_ext_list_price#4549, d_year#4565], ShuffleQueryStage 22\n            :     :     :                 +- LogicalQueryStage Project [c_customer_sk#4507, c_customer_id#4508, c_first_name#4515, c_last_name#4516, c_preferred_cust_flag#4517, c_birth_country#4521, c_login#4522, c_email_address#4523], ShuffleQueryStage 8\n            :     :     +- Aggregate [c_customer_id#4747, c_first_name#4754, c_last_name#4755, c_preferred_cust_flag#4756, c_birth_country#4760, c_login#4761, c_email_address#4762, d_year#4804], [c_customer_id#4747 AS customer_id#2970, sum(((((cs_ext_list_price#4788 - cs_ext_wholesale_cost#4787) - cs_ext_discount_amt#4785) + cs_ext_sales_price#4786) / 2)) AS year_total#2978]\n            :     :        +- Project [c_customer_id#4747, c_first_name#4754, c_last_name#4755, c_preferred_cust_flag#4756, c_birth_country#4760, c_login#4761, c_email_address#4762, cs_ext_discount_amt#4785, cs_ext_sales_price#4786, cs_ext_wholesale_cost#4787, cs_ext_list_price#4788, d_year#4804]\n            :     :           +- Join Inner, (c_customer_sk#4746 = cs_bill_customer_sk#4766)\n            :     :              :- LogicalQueryStage Project [cs_bill_customer_sk#4766, cs_ext_discount_amt#4785, cs_ext_sales_price#4786, cs_ext_wholesale_cost#4787, cs_ext_list_price#4788, d_year#4804], ShuffleQueryStage 25\n            :     :              +- LogicalQueryStage Project [c_customer_sk#4746, c_customer_id#4747, c_first_name#4754, c_last_name#4755, c_preferred_cust_flag#4756, c_birth_country#4760, c_login#4761, c_email_address#4762], ShuffleQueryStage 12\n            :     +- Filter (isnotnull(year_total#2849) AND (year_total#2849 > 0.000000))\n            :        +- Aggregate [c_customer_id#5066, c_first_name#5073, c_last_name#5074, c_preferred_cust_flag#5075, c_birth_country#5079, c_login#5080, c_email_address#5081, d_year#5123], [c_customer_id#5066 AS customer_id#2841, sum(((((ws_ext_list_price#5107 - ws_ext_wholesale_cost#5106) - ws_ext_discount_amt#5104) + ws_ext_sales_price#5105) / 2)) AS year_total#2849]\n            :           +- Project [c_customer_id#5066, c_first_name#5073, c_last_name#5074, c_preferred_cust_flag#5075, c_birth_country#5079, c_login#5080, c_email_address#5081, ws_ext_discount_amt#5104, ws_ext_sales_price#5105, ws_ext_wholesale_cost#5106, ws_ext_list_price#5107, d_year#5123]\n            :              +- Join Inner, (c_customer_sk#5065 = ws_bill_customer_sk#5086)\n            :                 :- LogicalQueryStage Project [ws_bill_customer_sk#5086, ws_ext_discount_amt#5104, ws_ext_sales_price#5105, ws_ext_wholesale_cost#5106, ws_ext_list_price#5107, d_year#5123], ShuffleQueryStage 23\n            :                 +- LogicalQueryStage Project [c_customer_sk#5065, c_customer_id#5066, c_first_name#5073, c_last_name#5074, c_preferred_cust_flag#5075, c_birth_country#5079, c_login#5080, c_email_address#5081], ShuffleQueryStage 16\n            +- Aggregate [c_customer_id#5305, c_first_name#5312, c_last_name#5313, c_preferred_cust_flag#5314, c_birth_country#5318, c_login#5319, c_email_address#5320, d_year#5362], [c_customer_id#5305 AS customer_id#2990, sum(((((ws_ext_list_price#5346 - ws_ext_wholesale_cost#5345) - ws_ext_discount_amt#5343) + ws_ext_sales_price#5344) / 2)) AS year_total#2998]\n               +- Project [c_customer_id#5305, c_first_name#5312, c_last_name#5313, c_preferred_cust_flag#5314, c_birth_country#5318, c_login#5319, c_email_address#5320, ws_ext_discount_amt#5343, ws_ext_sales_price#5344, ws_ext_wholesale_cost#5345, ws_ext_list_price#5346, d_year#5362]\n                  +- Join Inner, (c_customer_sk#5304 = ws_bill_customer_sk#5325)\n                     :- LogicalQueryStage Project [ws_bill_customer_sk#5325, ws_ext_discount_amt#5343, ws_ext_sales_price#5344, ws_ext_wholesale_cost#5345, ws_ext_list_price#5346, d_year#5362], ShuffleQueryStage 26\n                     +- LogicalQueryStage Project [c_customer_sk#5304, c_customer_id#5305, c_first_name#5312, c_last_name#5313, c_preferred_cust_flag#5314, c_birth_country#5318, c_login#5319, c_email_address#5320], ShuffleQueryStage 20\n"
      },
      "IM" : {
        "inputSizeInBytes" : 37542630424,
        "inputRowCount" : 746977356
      },
      "PD" : {
        "1" : [ 5681528, 5629845, 5556823, 5648082, 5637472, 5635416, 5635322, 5571181, 5647249, 5641782, 5749608, 5688568, 5696574, 5650128, 5598644, 5612129, 5670396, 5712829, 5661016, 5637920, 5670229, 5721733, 5662290, 5714384, 5708441, 5661495, 5633028, 5708855, 5631456, 5591877, 5512583, 5693048, 5712473, 5565610, 5674085, 5683521, 5614636, 5564096, 5534730, 5611375, 5586591, 5602036, 5504139, 5665069, 5696459, 5555652, 5789529, 5609503, 5688735, 5681295, 5645862, 5674013, 5606283, 5636426, 5578642, 5621662, 5561949, 5544223, 5556250, 5583631, 5552964, 5707649, 5571886, 5604477, 5542003, 5775618, 5666260, 5598349, 5569823, 5710845, 5655122, 5510050, 5566630, 5591502, 5652854, 5686581, 5692475, 5704180, 5732314, 5621909, 5576495, 5775747, 5681327, 5542076, 5656250, 5604023, 5549380, 5609982, 5695779, 5739619, 5578040, 5626597, 5722431, 5611299, 5625959, 5696881, 5489358, 5565397, 5622541, 5551356, 5474305, 5702558, 5599010, 5539651, 5589296, 5732107, 5713124, 5806078, 5607641, 5643015, 5531951, 5635482, 5657161, 5675228, 5695075, 5521324, 5547855, 5602355, 5590450, 5596750, 5583521, 5576717, 5692959, 5696737, 5637923, 5684942, 5590828, 5565902, 5641535, 5514298, 5691392, 5636114, 5655195, 5613389, 5606283, 5540270, 5637128, 5712936, 5606283, 5700568, 5647095, 5538937, 5661739, 5696881, 5562922, 5746892, 5786657, 5626156, 5606283, 5732975, 5706173, 5605648, 5801854, 5723376, 5743134, 5642417, 5593930, 5717937, 5706802, 5538940, 5533091, 5583969, 5675249, 5598843, 5524350, 5634483, 5610142, 5663622, 5672721, 5480439, 5630015, 5692954, 5660481, 5682820, 5651042, 5483145, 5652688, 5498177, 5663986, 5587424, 5533091, 5666968, 5552510, 5641963, 5799413, 5691242, 5826114, 5762806, 5557455, 5629623, 5651849, 5611556, 5563523, 5469485, 5657342, 5737178, 5554103, 5613462, 5717596, 5563182 ],
        "0" : [ 830145, 830145, 754677, 830145, 830145, 830145, 754677, 754677, 830145, 830145, 830145, 754677, 830145, 830145, 754677, 830145, 830145, 830145, 754677, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 754677, 830145, 830145, 754677, 830145, 830145, 754677, 754677, 754677, 754677, 754677, 830145, 754677, 830145, 830145, 754677, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 754677, 754677, 754677, 830145, 830145, 830145, 754677, 830145, 754677, 830145, 830145, 754677, 830145, 830145, 830145, 754677, 754677, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 754677, 754677, 754677, 754677, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 754677, 754677, 830145, 754677, 754677, 830145, 830145, 754677, 830145, 830145, 830145, 830145, 754677, 754677, 830145, 830145, 830145, 754677, 830145, 830145, 754677, 754677, 754677, 830145, 754677, 830145, 830145, 754677, 830145, 830145, 754677, 754677, 754677, 754677, 830145, 830145, 830145, 830145, 754677, 754677, 830145, 830145, 830145, 830145, 754677, 754677, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 754677, 754677, 830145, 830145, 754677, 830145, 830145, 830145, 830145, 830145, 754677, 830145, 830145, 830145, 830145, 830145, 754677, 830145, 754677, 830145, 754677, 754677, 830145, 830145, 754677, 830145, 830145, 830145, 830145, 754677, 830145, 830145, 830145, 754677, 754677, 830145, 830145, 830145, 830145, 830145, 754677 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 16,
        "FinishedTasksNum" : 8,
        "FinishedTasksTotalTimeInMs" : 6441.0,
        "FinishedTasksDistributionInMs" : [ 746.0, 793.0, 797.0, 840.0, 852.0 ]
      },
      "StartTimeInMs" : 1702226519133,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 49545,
        "IOBytes" : {
          "Total" : 12361344021,
          "Details" : {
            "IR" : 2267766291,
            "IW" : 0,
            "SR" : 6038854810,
            "SW" : 4054722920
          }
        }
      }
    },
    "10" : {
      "LQP" : {
        "operators" : {
          "12" : {
            "sign" : 1582451270,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 14302285452,
            "rowCount" : 275043951,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(year_total#2829) AND (year_total#2829 > 0.000000)) "
          },
          "8" : {
            "sign" : 1180879131,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 45044142156507206,
            "rowCount" : 193322498525782,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, ((customer_id#2821 = customer_id#2970) AND (CASE WHEN (year_total#2839 > 0.000000) THEN (year_total#2978 / year_total#2839) END > CASE WHEN (year_total#2829 > 0.000000) THEN (year_total#2958 / year_total#2829) END)) "
          },
          "19" : {
            "sign" : -1463056171,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 3761782752,
            "rowCount" : 72341976,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [c_customer_id#5066, c_first_name#5073, c_last_name#5074, c_preferred_cust_flag#5075, c_birth_country#5079, c_login#5080, c_email_address#5081, d_year#5123], [c_customer_id#5066 AS customer_id#2841, sum(((((ws_ext_list_price#5107 - ws_ext_wholesale_cost#5106) - ws_ext_discount_amt#5104) + ws_ext_sales_price#5105) / 2)) AS year_total#2849], HashAggregate(keys=[c_customer_id#5066, c_first_name#5073, c_last_name#5074, c_preferred_cust_flag#5075, c_birth_country#5079, c_login#5080, c_email_address#5081, d_year#5123], functions=[sum(((((ws_ext_list_price#5107 - ws_ext_wholesale_cost#5106) - ws_ext_discount_amt#5104) + ws_ext_sales_price#5105) / 2))]) "
          },
          "23" : {
            "sign" : -983899132,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 805892304,
            "rowCount" : 14390934,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ws_bill_customer_sk#5325, ws_ext_discount_amt#5343, ws_ext_sales_price#5344, ws_ext_wholesale_cost#5345, ws_ext_list_price#5346, d_year#5362], ShuffleQueryStage 26 "
          },
          "4" : {
            "sign" : -1433567039,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 1673694652991368591935256752000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, ((customer_id#2821 = customer_id#2990) AND (CASE WHEN (year_total#2839 > 0.000000) THEN (year_total#2978 / year_total#2839) END > CASE WHEN (year_total#2849 > 0.000000) THEN (year_total#2998 / year_total#2849) END)) "
          },
          "15" : {
            "sign" : -237935041,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 7435110696,
            "rowCount" : 142982898,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(year_total#2839) AND (year_total#2839 > 0.000000)) "
          },
          "11" : {
            "sign" : 1164811485,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 6543653635943,
            "rowCount" : 37824587491,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (customer_id#2950 = customer_id#2821) "
          },
          "9" : {
            "sign" : 2105067798,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 511081433268651,
            "rowCount" : 2704134567559,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [customer_id#2821, year_total#2829, customer_id#2950, customer_first_name#2951, customer_last_name#2952, customer_email_address#2956, year_total#2958, year_total#2839] "
          },
          "22" : {
            "sign" : -979568171,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 5526118656000000,
            "rowCount" : 28781868000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (c_customer_sk#5304 = ws_bill_customer_sk#5325) "
          },
          "13" : {
            "sign" : 429932782,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 14302285452,
            "rowCount" : 275043951,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [c_customer_id#31, c_first_name#38, c_last_name#39, c_preferred_cust_flag#40, c_birth_country#44, c_login#45, c_email_address#46, d_year#77], [c_customer_id#31 AS customer_id#2821, sum(((((ss_ext_list_price#64 - ss_ext_wholesale_cost#63) - ss_ext_discount_amt#61) + ss_ext_sales_price#62) / 2)) AS year_total#2829], HashAggregate(keys=[c_customer_id#31, c_first_name#38, c_last_name#39, c_preferred_cust_flag#40, c_birth_country#44, c_login#45, c_email_address#46, d_year#77], functions=[sum(((((ss_ext_list_price#64 - ss_ext_wholesale_cost#63) - ss_ext_discount_amt#61) + ss_ext_sales_price#62) / 2))]) "
          },
          "24" : {
            "sign" : -149944874,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 306068840,
            "rowCount" : 2000000,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [c_customer_sk#5304, c_customer_id#5305, c_first_name#5312, c_last_name#5313, c_preferred_cust_flag#5314, c_birth_country#5318, c_login#5319, c_email_address#5320], ShuffleQueryStage 20 "
          },
          "16" : {
            "sign" : 802064549,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 7435110696,
            "rowCount" : 142982898,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [c_customer_id#4508, c_first_name#4515, c_last_name#4516, c_preferred_cust_flag#4517, c_birth_country#4521, c_login#4522, c_email_address#4523, d_year#4565], [c_customer_id#4508 AS customer_id#2831, sum(((((cs_ext_list_price#4549 - cs_ext_wholesale_cost#4548) - cs_ext_discount_amt#4546) + cs_ext_sales_price#4547) / 2)) AS year_total#2839], HashAggregate(keys=[c_customer_id#4508, c_first_name#4515, c_last_name#4516, c_preferred_cust_flag#4517, c_birth_country#4521, c_login#4522, c_email_address#4523, d_year#4565], functions=[sum(((((cs_ext_list_price#4549 - cs_ext_wholesale_cost#4548) - cs_ext_discount_amt#4546) + cs_ext_sales_price#4547) / 2))]) "
          },
          "5" : {
            "sign" : -1838984471,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 1321613831343848931,
            "rowCount" : 6992665774306079,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [customer_id#2821, customer_id#2950, customer_first_name#2951, customer_last_name#2952, customer_email_address#2956, year_total#2839, year_total#2978, year_total#2849] "
          },
          "10" : {
            "sign" : 2091177496,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 586797201160303,
            "rowCount" : 2704134567559,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (customer_id#2821 = customer_id#2831) "
          },
          "21" : {
            "sign" : 103842726,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 5295863712000000,
            "rowCount" : 28781868000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_customer_id#5305, c_first_name#5312, c_last_name#5313, c_preferred_cust_flag#5314, c_birth_country#5318, c_login#5319, c_email_address#5320, ws_ext_discount_amt#5343, ws_ext_sales_price#5344, ws_ext_wholesale_cost#5345, ws_ext_list_price#5346, d_year#5362] "
          },
          "6" : {
            "sign" : 481825521,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 1517408473024419143,
            "rowCount" : 6992665774306079,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (customer_id#2821 = customer_id#2841) "
          },
          "1" : {
            "sign" : -588452837,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
            "sizeInBytes" : 767110049287710604636992678000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) LocalLimit Arguments: 100 "
          },
          "17" : {
            "sign" : -1414276816,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 7435110696,
            "rowCount" : 142982898,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [c_customer_id#4747, c_first_name#4754, c_last_name#4755, c_preferred_cust_flag#4756, c_birth_country#4760, c_login#4761, c_email_address#4762, d_year#4804], [c_customer_id#4747 AS customer_id#2970, sum(((((cs_ext_list_price#4788 - cs_ext_wholesale_cost#4787) - cs_ext_discount_amt#4785) + cs_ext_sales_price#4786) / 2)) AS year_total#2978], HashAggregate(keys=[c_customer_id#4747, c_first_name#4754, c_last_name#4755, c_preferred_cust_flag#4756, c_birth_country#4760, c_login#4761, c_email_address#4762, d_year#4804], functions=[sum(((((cs_ext_list_price#4788 - cs_ext_wholesale_cost#4787) - cs_ext_discount_amt#4785) + cs_ext_sales_price#4786) / 2))]) "
          },
          "14" : {
            "sign" : 1410425053,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 35480669679,
            "rowCount" : 275043951,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [c_customer_id#4200, c_first_name#4207, c_last_name#4208, c_preferred_cust_flag#4209, c_birth_country#4213, c_login#4214, c_email_address#4215, d_year#4246], [c_customer_id#4200 AS customer_id#2950, c_first_name#4207 AS customer_first_name#2951, c_last_name#4208 AS customer_last_name#2952, c_email_address#4215 AS customer_email_address#2956, sum(((((ss_ext_list_price#4233 - ss_ext_wholesale_cost#4232) - ss_ext_discount_amt#4230) + ss_ext_sales_price#4231) / 2)) AS year_total#2958], HashAggregate(keys=[c_customer_id#4200, c_first_name#4207, c_last_name#4208, c_preferred_cust_flag#4209, c_birth_country#4213, c_login#4214, c_email_address#4215, d_year#4246], functions=[sum(((((ss_ext_list_price#4233 - ss_ext_wholesale_cost#4232) - ss_ext_discount_amt#4230) + ss_ext_sales_price#4231) / 2))]) "
          },
          "0" : {
            "sign" : 2142763258,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
            "sizeInBytes" : 8800,
            "rowCount" : 100,
            "isRuntime" : false,
            "predicate" : " (unknown) GlobalLimit Arguments: 100 "
          },
          "20" : {
            "sign" : 1099149837,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 1266402192000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [c_customer_id#5305, c_first_name#5312, c_last_name#5313, c_preferred_cust_flag#5314, c_birth_country#5318, c_login#5319, c_email_address#5320, d_year#5362], [c_customer_id#5305 AS customer_id#2990, sum(((((ws_ext_list_price#5346 - ws_ext_wholesale_cost#5345) - ws_ext_discount_amt#5343) + ws_ext_sales_price#5344) / 2)) AS year_total#2998] "
          },
          "2" : {
            "sign" : 1151760228,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 767110049287710604636992678000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [customer_id#2950 ASC NULLS FIRST, customer_first_name#2951 ASC NULLS FIRST, customer_last_name#2952 ASC NULLS FIRST, customer_email_address#2956 ASC NULLS FIRST], true "
          },
          "18" : {
            "sign" : 482427057,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 3761782752,
            "rowCount" : 72341976,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(year_total#2849) AND (year_total#2849 > 0.000000)) "
          },
          "7" : {
            "sign" : 672354725,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 33444792244960286,
            "rowCount" : 193322498525782,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [customer_id#2821, customer_id#2950, customer_first_name#2951, customer_last_name#2952, customer_email_address#2956, year_total#2839, year_total#2978] "
          },
          "3" : {
            "sign" : -158777573,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 767110049287710604636992678000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [customer_id#2950, customer_first_name#2951, customer_last_name#2952, customer_email_address#2956] "
          }
        },
        "links" : [ {
          "fromId" : 13,
          "fromName" : "LogicalQueryStage",
          "toId" : 12,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 12,
          "fromName" : "Filter",
          "toId" : 11,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 14,
          "fromName" : "LogicalQueryStage",
          "toId" : 11,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "Join",
          "toId" : 10,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 16,
          "fromName" : "LogicalQueryStage",
          "toId" : 15,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 15,
          "fromName" : "Filter",
          "toId" : 10,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "Join",
          "toId" : 9,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "Project",
          "toId" : 8,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 17,
          "fromName" : "LogicalQueryStage",
          "toId" : 8,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "Join",
          "toId" : 7,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Project",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 19,
          "fromName" : "LogicalQueryStage",
          "toId" : 18,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 18,
          "fromName" : "Filter",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Join",
          "toId" : 5,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Project",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 23,
          "fromName" : "LogicalQueryStage",
          "toId" : 22,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 24,
          "fromName" : "LogicalQueryStage",
          "toId" : 22,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 22,
          "fromName" : "Join",
          "toId" : 21,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 21,
          "fromName" : "Project",
          "toId" : 20,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 20,
          "fromName" : "Aggregate",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Join",
          "toId" : 3,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Project",
          "toId" : 2,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "LocalLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "LocalLimit",
          "toId" : 0,
          "toName" : "GlobalLimit",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [customer_id#2950 ASC NULLS FIRST, customer_first_name#2951 ASC NULLS FIRST, customer_last_name#2952 ASC NULLS FIRST, customer_email_address#2956 ASC NULLS FIRST], true\n      +- Project [customer_id#2950, customer_first_name#2951, customer_last_name#2952, customer_email_address#2956]\n         +- Join Inner, ((customer_id#2821 = customer_id#2990) AND (CASE WHEN (year_total#2839 > 0.000000) THEN (year_total#2978 / year_total#2839) END > CASE WHEN (year_total#2849 > 0.000000) THEN (year_total#2998 / year_total#2849) END))\n            :- Project [customer_id#2821, customer_id#2950, customer_first_name#2951, customer_last_name#2952, customer_email_address#2956, year_total#2839, year_total#2978, year_total#2849]\n            :  +- Join Inner, (customer_id#2821 = customer_id#2841)\n            :     :- Project [customer_id#2821, customer_id#2950, customer_first_name#2951, customer_last_name#2952, customer_email_address#2956, year_total#2839, year_total#2978]\n            :     :  +- Join Inner, ((customer_id#2821 = customer_id#2970) AND (CASE WHEN (year_total#2839 > 0.000000) THEN (year_total#2978 / year_total#2839) END > CASE WHEN (year_total#2829 > 0.000000) THEN (year_total#2958 / year_total#2829) END))\n            :     :     :- Project [customer_id#2821, year_total#2829, customer_id#2950, customer_first_name#2951, customer_last_name#2952, customer_email_address#2956, year_total#2958, year_total#2839]\n            :     :     :  +- Join Inner, (customer_id#2821 = customer_id#2831)\n            :     :     :     :- Join Inner, (customer_id#2950 = customer_id#2821)\n            :     :     :     :  :- Filter (isnotnull(year_total#2829) AND (year_total#2829 > 0.000000))\n            :     :     :     :  :  +- LogicalQueryStage Aggregate [c_customer_id#31, c_first_name#38, c_last_name#39, c_preferred_cust_flag#40, c_birth_country#44, c_login#45, c_email_address#46, d_year#77], [c_customer_id#31 AS customer_id#2821, sum(((((ss_ext_list_price#64 - ss_ext_wholesale_cost#63) - ss_ext_discount_amt#61) + ss_ext_sales_price#62) / 2)) AS year_total#2829], HashAggregate(keys=[c_customer_id#31, c_first_name#38, c_last_name#39, c_preferred_cust_flag#40, c_birth_country#44, c_login#45, c_email_address#46, d_year#77], functions=[sum(((((ss_ext_list_price#64 - ss_ext_wholesale_cost#63) - ss_ext_discount_amt#61) + ss_ext_sales_price#62) / 2))])\n            :     :     :     :  +- LogicalQueryStage Aggregate [c_customer_id#4200, c_first_name#4207, c_last_name#4208, c_preferred_cust_flag#4209, c_birth_country#4213, c_login#4214, c_email_address#4215, d_year#4246], [c_customer_id#4200 AS customer_id#2950, c_first_name#4207 AS customer_first_name#2951, c_last_name#4208 AS customer_last_name#2952, c_email_address#4215 AS customer_email_address#2956, sum(((((ss_ext_list_price#4233 - ss_ext_wholesale_cost#4232) - ss_ext_discount_amt#4230) + ss_ext_sales_price#4231) / 2)) AS year_total#2958], HashAggregate(keys=[c_customer_id#4200, c_first_name#4207, c_last_name#4208, c_preferred_cust_flag#4209, c_birth_country#4213, c_login#4214, c_email_address#4215, d_year#4246], functions=[sum(((((ss_ext_list_price#4233 - ss_ext_wholesale_cost#4232) - ss_ext_discount_amt#4230) + ss_ext_sales_price#4231) / 2))])\n            :     :     :     +- Filter (isnotnull(year_total#2839) AND (year_total#2839 > 0.000000))\n            :     :     :        +- LogicalQueryStage Aggregate [c_customer_id#4508, c_first_name#4515, c_last_name#4516, c_preferred_cust_flag#4517, c_birth_country#4521, c_login#4522, c_email_address#4523, d_year#4565], [c_customer_id#4508 AS customer_id#2831, sum(((((cs_ext_list_price#4549 - cs_ext_wholesale_cost#4548) - cs_ext_discount_amt#4546) + cs_ext_sales_price#4547) / 2)) AS year_total#2839], HashAggregate(keys=[c_customer_id#4508, c_first_name#4515, c_last_name#4516, c_preferred_cust_flag#4517, c_birth_country#4521, c_login#4522, c_email_address#4523, d_year#4565], functions=[sum(((((cs_ext_list_price#4549 - cs_ext_wholesale_cost#4548) - cs_ext_discount_amt#4546) + cs_ext_sales_price#4547) / 2))])\n            :     :     +- LogicalQueryStage Aggregate [c_customer_id#4747, c_first_name#4754, c_last_name#4755, c_preferred_cust_flag#4756, c_birth_country#4760, c_login#4761, c_email_address#4762, d_year#4804], [c_customer_id#4747 AS customer_id#2970, sum(((((cs_ext_list_price#4788 - cs_ext_wholesale_cost#4787) - cs_ext_discount_amt#4785) + cs_ext_sales_price#4786) / 2)) AS year_total#2978], HashAggregate(keys=[c_customer_id#4747, c_first_name#4754, c_last_name#4755, c_preferred_cust_flag#4756, c_birth_country#4760, c_login#4761, c_email_address#4762, d_year#4804], functions=[sum(((((cs_ext_list_price#4788 - cs_ext_wholesale_cost#4787) - cs_ext_discount_amt#4785) + cs_ext_sales_price#4786) / 2))])\n            :     +- Filter (isnotnull(year_total#2849) AND (year_total#2849 > 0.000000))\n            :        +- LogicalQueryStage Aggregate [c_customer_id#5066, c_first_name#5073, c_last_name#5074, c_preferred_cust_flag#5075, c_birth_country#5079, c_login#5080, c_email_address#5081, d_year#5123], [c_customer_id#5066 AS customer_id#2841, sum(((((ws_ext_list_price#5107 - ws_ext_wholesale_cost#5106) - ws_ext_discount_amt#5104) + ws_ext_sales_price#5105) / 2)) AS year_total#2849], HashAggregate(keys=[c_customer_id#5066, c_first_name#5073, c_last_name#5074, c_preferred_cust_flag#5075, c_birth_country#5079, c_login#5080, c_email_address#5081, d_year#5123], functions=[sum(((((ws_ext_list_price#5107 - ws_ext_wholesale_cost#5106) - ws_ext_discount_amt#5104) + ws_ext_sales_price#5105) / 2))])\n            +- Aggregate [c_customer_id#5305, c_first_name#5312, c_last_name#5313, c_preferred_cust_flag#5314, c_birth_country#5318, c_login#5319, c_email_address#5320, d_year#5362], [c_customer_id#5305 AS customer_id#2990, sum(((((ws_ext_list_price#5346 - ws_ext_wholesale_cost#5345) - ws_ext_discount_amt#5343) + ws_ext_sales_price#5344) / 2)) AS year_total#2998]\n               +- Project [c_customer_id#5305, c_first_name#5312, c_last_name#5313, c_preferred_cust_flag#5314, c_birth_country#5318, c_login#5319, c_email_address#5320, ws_ext_discount_amt#5343, ws_ext_sales_price#5344, ws_ext_wholesale_cost#5345, ws_ext_list_price#5346, d_year#5362]\n                  +- Join Inner, (c_customer_sk#5304 = ws_bill_customer_sk#5325)\n                     :- LogicalQueryStage Project [ws_bill_customer_sk#5325, ws_ext_discount_amt#5343, ws_ext_sales_price#5344, ws_ext_wholesale_cost#5345, ws_ext_list_price#5346, d_year#5362], ShuffleQueryStage 26\n                     +- LogicalQueryStage Project [c_customer_sk#5304, c_customer_id#5305, c_first_name#5312, c_last_name#5313, c_preferred_cust_flag#5314, c_birth_country#5318, c_login#5319, c_email_address#5320], ShuffleQueryStage 20\n"
      },
      "IM" : {
        "inputSizeInBytes" : 69526920419,
        "inputRowCount" : 924786608
      },
      "PD" : {
        "6" : [ 1792590, 1739703, 1738581, 1793904, 1760535, 1762059, 1771120, 1685008, 1776354, 1771865, 1791186, 1726395, 1765614, 1761465, 1726787, 1820988, 1740702, 1798022, 1773037, 1793386, 1762609, 1787606, 1783900, 1783296, 1742663, 1753627, 1712832, 1761413, 1787301, 1717277, 1723579, 1769770, 1794380, 1728317, 1715797, 1754168, 1786345, 1735589, 1733840, 1732781, 1763581, 1749127, 1682936, 1786087, 1773342, 1730568, 1769476, 1751017, 1727307, 1759243, 1775005, 1786311, 1715049, 1732291, 1733717, 1763415, 1756020, 1671379, 1726839, 1754670, 1767914, 1767415, 1749073, 1781447, 1721031, 1767415, 1730041, 1772311, 1800313, 1839667, 1755540, 1769252, 1702621, 1755169, 1765525, 1735702, 1757488, 1786064, 1785731, 1765363, 1778220, 1782036, 1773938, 1732669, 1779243, 1723849, 1727295, 1759193, 1752389, 1829594, 1728744, 1808057, 1710744, 1789044, 1776388, 1753445, 1726241, 1735593, 1745995, 1737596, 1696554, 1740728, 1724131, 1738794, 1783320, 1787572, 1766466, 1782416, 1674503, 1694205, 1713357, 1774957, 1779369, 1727363, 1760225, 1763216, 1687248, 1752344, 1752641, 1761218, 1743239, 1773010, 1833798, 1730662, 1750530, 1825217, 1712102, 1723817, 1719619, 1729698, 1806920, 1799030, 1717165, 1722403, 1723843, 1765034, 1752719, 1794209, 1775896, 1791090, 1751007, 1739895, 1783266, 1735454, 1756807, 1749073, 1818166, 1828101, 1808988, 1776412, 1780907, 1798698, 1840405, 1789548, 1773342, 1760891, 1801497, 1775148, 1782168, 1731976, 1691213, 1743829, 1744615, 1798632, 1760395, 1840715, 1739761, 1783679, 1742749, 1749923, 1729527, 1758568, 1781185, 1772550, 1756219, 1767323, 1729659, 1767699, 1754168, 1762646, 1766214, 1779209, 1757701, 1750558, 1846788, 1751064, 1724641, 1773973, 1703635, 1798868, 1716747, 1755555, 1735298, 1734585, 1754631, 1803963, 1702661, 1713548, 1782528, 1677711 ],
        "0" : [ 830145, 830145, 754677, 830145, 830145, 830145, 754677, 754677, 830145, 830145, 830145, 754677, 830145, 830145, 754677, 830145, 830145, 830145, 754677, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 754677, 830145, 830145, 754677, 830145, 830145, 754677, 754677, 754677, 754677, 754677, 830145, 754677, 830145, 830145, 754677, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 754677, 754677, 754677, 830145, 830145, 830145, 754677, 830145, 754677, 830145, 830145, 754677, 830145, 830145, 830145, 754677, 754677, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 754677, 754677, 754677, 754677, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 754677, 754677, 830145, 754677, 754677, 830145, 830145, 754677, 830145, 830145, 830145, 830145, 754677, 754677, 830145, 830145, 830145, 754677, 830145, 830145, 754677, 754677, 754677, 830145, 754677, 830145, 830145, 754677, 830145, 830145, 754677, 754677, 754677, 754677, 830145, 830145, 830145, 830145, 754677, 754677, 830145, 830145, 830145, 830145, 754677, 754677, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 754677, 754677, 830145, 830145, 754677, 830145, 830145, 830145, 830145, 830145, 754677, 830145, 830145, 830145, 830145, 830145, 754677, 830145, 754677, 830145, 754677, 754677, 830145, 830145, 754677, 830145, 830145, 830145, 830145, 754677, 830145, 830145, 830145, 754677, 754677, 830145, 830145, 830145, 830145, 830145, 754677 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 16,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "StartTimeInMs" : 1702226525532,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 43146,
        "IOBytes" : {
          "Total" : 7011134296,
          "Details" : {
            "IR" : 0,
            "IW" : 0,
            "SR" : 6038854810,
            "SW" : 972279486
          }
        }
      }
    },
    "21" : {
      "LQP" : {
        "operators" : {
          "12" : {
            "sign" : -1458191872,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 101735088,
            "rowCount" : 1816698,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Filter (isnotnull(year_total#2829) AND (year_total#2829 > 0.000000)), ShuffleQueryStage 33 "
          },
          "8" : {
            "sign" : -1884134972,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 1578352628380472546659259904,
            "rowCount" : 8220586606148294513850312,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, ((customer_id#2821 = customer_id#2970) AND (CASE WHEN (year_total#2839 > 0.000000) THEN (year_total#2978 / year_total#2839) END > CASE WHEN (year_total#2829 > 0.000000) THEN (year_total#2958 / year_total#2829) END)) "
          },
          "4" : {
            "sign" : -537357220,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 1262474412432174077350474950938397706752,
            "rowCount" : 6575387564750906652867057036137488056,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, ((customer_id#2821 = customer_id#2990) AND (CASE WHEN (year_total#2839 > 0.000000) THEN (year_total#2978 / year_total#2839) END > CASE WHEN (year_total#2849 > 0.000000) THEN (year_total#2998 / year_total#2849) END)) "
          },
          "15" : {
            "sign" : -1414276816,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 294918952,
            "rowCount" : 1593836,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [c_customer_id#4747, c_first_name#4754, c_last_name#4755, c_preferred_cust_flag#4756, c_birth_country#4760, c_login#4761, c_email_address#4762, d_year#4804], [c_customer_id#4747 AS customer_id#2970, sum(((((cs_ext_list_price#4788 - cs_ext_wholesale_cost#4787) - cs_ext_discount_amt#4785) + cs_ext_sales_price#4786) / 2)) AS year_total#2978], HashAggregate(keys=[c_customer_id#4747, c_first_name#4754, c_last_name#4755, c_preferred_cust_flag#4756, c_birth_country#4760, c_login#4761, c_email_address#4762, d_year#4804], functions=[sum(((((cs_ext_list_price#4788 - cs_ext_wholesale_cost#4787) - cs_ext_discount_amt#4785) + cs_ext_sales_price#4786) / 2))]) "
          },
          "11" : {
            "sign" : -1441832503,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 462662948737080,
            "rowCount" : 3304735348122,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (customer_id#2950 = customer_id#2821) "
          },
          "9" : {
            "sign" : -262489225,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 804606942344842219752,
            "rowCount" : 5157736809902834742,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [customer_id#2821, year_total#2829, customer_id#2950, customer_first_name#2951, customer_last_name#2952, customer_email_address#2956, year_total#2958, year_total#2839] "
          },
          "13" : {
            "sign" : 2038413297,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 229498456,
            "rowCount" : 1819089,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [c_customer_id#4200, c_first_name#4207, c_last_name#4208, c_preferred_cust_flag#4209, c_birth_country#4213, c_login#4214, c_email_address#4215, d_year#4246], [c_customer_id#4200 AS customer_id#2950, c_first_name#4207 AS customer_first_name#2951, c_last_name#4208 AS customer_last_name#2952, c_email_address#4215 AS customer_email_address#2956, sum(((((ss_ext_list_price#4233 - ss_ext_wholesale_cost#4232) - ss_ext_discount_amt#4230) + ss_ext_sales_price#4231) / 2)) AS year_total#2958], ShuffleQueryStage 36 "
          },
          "16" : {
            "sign" : 2009240091,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 49646632,
            "rowCount" : 886547,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Filter (isnotnull(year_total#2849) AND (year_total#2849 > 0.000000)), ShuffleQueryStage 34 "
          },
          "5" : {
            "sign" : 1542204426,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 1136918077451668520793790598215584,
            "rowCount" : 7287936393920952056370452552664,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [customer_id#2821, customer_id#2950, customer_first_name#2951, customer_last_name#2952, customer_email_address#2956, year_total#2839, year_total#2978, year_total#2849] "
          },
          "10" : {
            "sign" : 1387654351,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 907761678542898914592,
            "rowCount" : 5157736809902834742,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (customer_id#2821 = customer_id#2831) "
          },
          "6" : {
            "sign" : 1337486816,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 1282676805330087561921199649268864,
            "rowCount" : 7287936393920952056370452552664,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (customer_id#2821 = customer_id#2841) "
          },
          "1" : {
            "sign" : -1134635724,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
            "sizeInBytes" : 578634105698079785452301019180098948928,
            "rowCount" : 6575387564750906652867057036137488056,
            "isRuntime" : false,
            "predicate" : " (unknown) LocalLimit Arguments: 100 "
          },
          "17" : {
            "sign" : -2053491893,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 50524824,
            "rowCount" : 902229,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [c_customer_id#5305, c_first_name#5312, c_last_name#5313, c_preferred_cust_flag#5314, c_birth_country#5318, c_login#5319, c_email_address#5320, d_year#5362], [c_customer_id#5305 AS customer_id#2990, sum(((((ws_ext_list_price#5346 - ws_ext_wholesale_cost#5345) - ws_ext_discount_amt#5343) + ws_ext_sales_price#5344) / 2)) AS year_total#2998], ShuffleQueryStage 37 "
          },
          "14" : {
            "sign" : 275524156,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 87399816,
            "rowCount" : 1560711,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Filter (isnotnull(year_total#2839) AND (year_total#2839 > 0.000000)), ShuffleQueryStage 35 "
          },
          "0" : {
            "sign" : -2078263403,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
            "sizeInBytes" : 8800,
            "rowCount" : 100,
            "isRuntime" : false,
            "predicate" : " (unknown) GlobalLimit Arguments: 100 "
          },
          "2" : {
            "sign" : 970545663,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 578634105698079785452301019180098948928,
            "rowCount" : 6575387564750906652867057036137488056,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [customer_id#2950 ASC NULLS FIRST, customer_first_name#2951 ASC NULLS FIRST, customer_last_name#2952 ASC NULLS FIRST, customer_email_address#2956 ASC NULLS FIRST], true "
          },
          "7" : {
            "sign" : 1178387794,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 1150882124860761231939043680,
            "rowCount" : 8220586606148294513850312,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [customer_id#2821, customer_id#2950, customer_first_name#2951, customer_last_name#2952, customer_email_address#2956, year_total#2839, year_total#2978] "
          },
          "3" : {
            "sign" : -25533452,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 578634105698079785452301019180098948928,
            "rowCount" : 6575387564750906652867057036137488056,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [customer_id#2950, customer_first_name#2951, customer_last_name#2952, customer_email_address#2956] "
          }
        },
        "links" : [ {
          "fromId" : 12,
          "fromName" : "LogicalQueryStage",
          "toId" : 11,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 13,
          "fromName" : "LogicalQueryStage",
          "toId" : 11,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "Join",
          "toId" : 10,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 14,
          "fromName" : "LogicalQueryStage",
          "toId" : 10,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "Join",
          "toId" : 9,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "Project",
          "toId" : 8,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 15,
          "fromName" : "LogicalQueryStage",
          "toId" : 8,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "Join",
          "toId" : 7,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Project",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 16,
          "fromName" : "LogicalQueryStage",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Join",
          "toId" : 5,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Project",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 17,
          "fromName" : "LogicalQueryStage",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Join",
          "toId" : 3,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Project",
          "toId" : 2,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "LocalLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "LocalLimit",
          "toId" : 0,
          "toName" : "GlobalLimit",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [customer_id#2950 ASC NULLS FIRST, customer_first_name#2951 ASC NULLS FIRST, customer_last_name#2952 ASC NULLS FIRST, customer_email_address#2956 ASC NULLS FIRST], true\n      +- Project [customer_id#2950, customer_first_name#2951, customer_last_name#2952, customer_email_address#2956]\n         +- Join Inner, ((customer_id#2821 = customer_id#2990) AND (CASE WHEN (year_total#2839 > 0.000000) THEN (year_total#2978 / year_total#2839) END > CASE WHEN (year_total#2849 > 0.000000) THEN (year_total#2998 / year_total#2849) END))\n            :- Project [customer_id#2821, customer_id#2950, customer_first_name#2951, customer_last_name#2952, customer_email_address#2956, year_total#2839, year_total#2978, year_total#2849]\n            :  +- Join Inner, (customer_id#2821 = customer_id#2841)\n            :     :- Project [customer_id#2821, customer_id#2950, customer_first_name#2951, customer_last_name#2952, customer_email_address#2956, year_total#2839, year_total#2978]\n            :     :  +- Join Inner, ((customer_id#2821 = customer_id#2970) AND (CASE WHEN (year_total#2839 > 0.000000) THEN (year_total#2978 / year_total#2839) END > CASE WHEN (year_total#2829 > 0.000000) THEN (year_total#2958 / year_total#2829) END))\n            :     :     :- Project [customer_id#2821, year_total#2829, customer_id#2950, customer_first_name#2951, customer_last_name#2952, customer_email_address#2956, year_total#2958, year_total#2839]\n            :     :     :  +- Join Inner, (customer_id#2821 = customer_id#2831)\n            :     :     :     :- Join Inner, (customer_id#2950 = customer_id#2821)\n            :     :     :     :  :- LogicalQueryStage Filter (isnotnull(year_total#2829) AND (year_total#2829 > 0.000000)), ShuffleQueryStage 33\n            :     :     :     :  +- LogicalQueryStage Aggregate [c_customer_id#4200, c_first_name#4207, c_last_name#4208, c_preferred_cust_flag#4209, c_birth_country#4213, c_login#4214, c_email_address#4215, d_year#4246], [c_customer_id#4200 AS customer_id#2950, c_first_name#4207 AS customer_first_name#2951, c_last_name#4208 AS customer_last_name#2952, c_email_address#4215 AS customer_email_address#2956, sum(((((ss_ext_list_price#4233 - ss_ext_wholesale_cost#4232) - ss_ext_discount_amt#4230) + ss_ext_sales_price#4231) / 2)) AS year_total#2958], ShuffleQueryStage 36\n            :     :     :     +- LogicalQueryStage Filter (isnotnull(year_total#2839) AND (year_total#2839 > 0.000000)), ShuffleQueryStage 35\n            :     :     +- LogicalQueryStage Aggregate [c_customer_id#4747, c_first_name#4754, c_last_name#4755, c_preferred_cust_flag#4756, c_birth_country#4760, c_login#4761, c_email_address#4762, d_year#4804], [c_customer_id#4747 AS customer_id#2970, sum(((((cs_ext_list_price#4788 - cs_ext_wholesale_cost#4787) - cs_ext_discount_amt#4785) + cs_ext_sales_price#4786) / 2)) AS year_total#2978], HashAggregate(keys=[c_customer_id#4747, c_first_name#4754, c_last_name#4755, c_preferred_cust_flag#4756, c_birth_country#4760, c_login#4761, c_email_address#4762, d_year#4804], functions=[sum(((((cs_ext_list_price#4788 - cs_ext_wholesale_cost#4787) - cs_ext_discount_amt#4785) + cs_ext_sales_price#4786) / 2))])\n            :     +- LogicalQueryStage Filter (isnotnull(year_total#2849) AND (year_total#2849 > 0.000000)), ShuffleQueryStage 34\n            +- LogicalQueryStage Aggregate [c_customer_id#5305, c_first_name#5312, c_last_name#5313, c_preferred_cust_flag#5314, c_birth_country#5318, c_login#5319, c_email_address#5320, d_year#5362], [c_customer_id#5305 AS customer_id#2990, sum(((((ws_ext_list_price#5346 - ws_ext_wholesale_cost#5345) - ws_ext_discount_amt#5343) + ws_ext_sales_price#5344) / 2)) AS year_total#2998], ShuffleQueryStage 37\n"
      },
      "IM" : {
        "inputSizeInBytes" : 813723768,
        "inputRowCount" : 8579110
      },
      "PD" : {
        "15" : [ 130298, 124542, 130298, 130298, 136054, 130298, 124542, 130298, 136054, 136054, 136054, 130298, 136054, 136995, 136054, 136054, 130298, 131239, 136995, 130298, 136054, 131239, 135198, 135198, 136054, 136054, 130298, 130298, 135198, 135198, 136054, 136995, 136995, 136054, 136995, 135198, 135198, 130298, 135198, 136054, 136054, 136054, 136054, 136054, 130298, 136054, 135198, 130298, 136054, 136054, 135198, 136054, 136054, 136995, 136054, 130298, 136054, 135198, 136995, 130298, 136054, 135198, 130298, 136054, 136054, 130298, 130298, 135198, 136054, 130298, 136054, 136054, 135198, 135198, 130298, 130298, 136054, 136054, 135198, 130298, 135198, 130298, 135198, 130298, 136054, 136054, 136995, 136054, 130298, 135198, 136995, 136995, 136995, 136054, 135198, 130298, 136054, 136995, 136054, 136054, 136995, 136054, 136054, 136054, 135198, 135198, 136054, 136054, 136054, 136995, 131239, 136054, 129442, 136054, 130298, 130298, 136995, 136054, 136054, 136054, 135198, 136054, 135198, 135198, 136054, 136054, 136054, 135198, 135198, 129442, 130298, 135198, 136054, 136054, 136054, 130298, 136054, 135198, 136054, 135198, 136054, 135198, 136054, 136054, 129442, 130298, 136054, 130298, 136054, 136054, 136054, 136054, 136995, 130298, 136054, 136054, 129442, 136054, 130298, 129442, 136054, 136995, 130298, 135198, 136054, 135198, 135198, 136054, 130298, 135198, 135198, 136054, 136054, 136995, 124542, 130298, 130298, 130298, 136054, 136995, 136054, 135198, 136054, 136995, 130298, 136054, 135198, 129442, 130298, 130298, 136054, 136995, 136054, 130298, 136054, 129442, 136054, 136054, 136995, 136054 ],
        "13" : [ 153496, 153496, 147740, 153496, 153496, 147740, 141984, 147740, 153496, 156181, 153496, 153496, 153496, 156181, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 147740, 153496, 153496, 153496, 156181, 153496, 153496, 156181, 153496, 153496, 141984, 153496, 153496, 147740, 156181, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 156181, 153496, 147740, 153496, 156181, 150425, 153496, 153496, 153496, 150425, 156181, 153496, 147740, 153496, 153496, 156181, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 156181, 153496, 153496, 153496, 147740, 153496, 153496, 150425, 153496, 153496, 153496, 156181, 156181, 153496, 153496, 153496, 153496, 147740, 153496, 153496, 153496, 153496, 156181, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 156181, 147740, 153496, 153496, 153496, 156181, 153496, 153496, 153496, 153496, 153496, 156181, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 156181, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 156181, 153496, 153496, 147740, 153496, 147740, 153496, 150425, 153496, 153496, 153496, 153496, 156181, 147740, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 147740, 153496, 147740, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 147740, 147740, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 147740, 156181, 156181, 153496, 156181, 153496, 153496, 153496, 153496, 156181, 153496 ],
        "16" : [ 652413, 641195, 641195, 641195, 652413, 628367, 617149, 641195, 628367, 652413, 652413, 641195, 628367, 652413, 652413, 652413, 652413, 641195, 652413, 641195, 641195, 652413, 652413, 641195, 652413, 652413, 641195, 641195, 652413, 652413, 641195, 652413, 652413, 641195, 652413, 641195, 652413, 617149, 641195, 652413, 652413, 641195, 641195, 652413, 641195, 652413, 652413, 641195, 652413, 652413, 628367, 652413, 652413, 652413, 641195, 652413, 652413, 652413, 652413, 641195, 652413, 641195, 652413, 652413, 641195, 652413, 641195, 652413, 641195, 652413, 641195, 652413, 652413, 652413, 652413, 617149, 652413, 652413, 641195, 641195, 652413, 652413, 652413, 652413, 652413, 641195, 641195, 641195, 652413, 641195, 652413, 652413, 652413, 641195, 652413, 641195, 652413, 652413, 652413, 652413, 652413, 652413, 641195, 641195, 652413, 641195, 652413, 652413, 652413, 641195, 641195, 652413, 641195, 641195, 652413, 628367, 641195, 652413, 652413, 641195, 641195, 652413, 652413, 641195, 641195, 652413, 652413, 652413, 652413, 652413, 652413, 652413, 652413, 641195, 641195, 652413, 652413, 652413, 652413, 641195, 652413, 641195, 652413, 641195, 652413, 641195, 652413, 641195, 652413, 652413, 641195, 641195, 652413, 641195, 641195, 652413, 652413, 652413, 617149, 641195, 652413, 641195, 628367, 652413, 641195, 652413, 652413, 652413, 652413, 652413, 652413, 652413, 652413, 641195, 641195, 652413, 641195, 652413, 652413, 641195, 652413, 652413, 652413, 652413, 652413, 641195, 641195, 652413, 652413, 652413, 652413, 652413, 641195, 652413, 641195, 641195, 652413, 652413, 652413, 641195 ],
        "17" : [ 77101, 77101, 75848, 77101, 77101, 77101, 71345, 77101, 77101, 77101, 77101, 77101, 77101, 78479, 77101, 78479, 77101, 75848, 77101, 77101, 77101, 77101, 77101, 75848, 77101, 77101, 77101, 71345, 77101, 77101, 77101, 77101, 77101, 77101, 77101, 77101, 77101, 71345, 75848, 77101, 77101, 77101, 77101, 77101, 77101, 77101, 77101, 77101, 77101, 77101, 78479, 78479, 77101, 77101, 77101, 77101, 77101, 77101, 77101, 77101, 78479, 77101, 77101, 77101, 77101, 77101, 77101, 78479, 77101, 77101, 77101, 77101, 77101, 77101, 77101, 75848, 77101, 77101, 75848, 77101, 78479, 77101, 77101, 77101, 77101, 77101, 77101, 77101, 72723, 78479, 77101, 77101, 78479, 77101, 77101, 77101, 77101, 77101, 77101, 78479, 77101, 77101, 77101, 77101, 77101, 77101, 77101, 78479, 77101, 77101, 77101, 77101, 77101, 77101, 77101, 71345, 77101, 77101, 77101, 77101, 77101, 77101, 77101, 77101, 77101, 77101, 77101, 77101, 78479, 77101, 77101, 78479, 77101, 75848, 77101, 77101, 78479, 77101, 77101, 75848, 77101, 77101, 77101, 75848, 78479, 77101, 77101, 77101, 78479, 77101, 77101, 77101, 77101, 77101, 77101, 77101, 77101, 77101, 77101, 75848, 77101, 77101, 71345, 77101, 77101, 77101, 77101, 77101, 77101, 77101, 77101, 78479, 77101, 77101, 77101, 71345, 78479, 75848, 77101, 77101, 77101, 77101, 78479, 77101, 78479, 77101, 78479, 77101, 77101, 77101, 77101, 77101, 77101, 78479, 77101, 77101, 77101, 78479, 77101, 75848 ],
        "14" : [ 75848, 71345, 71345, 77101, 77101, 77101, 70092, 77101, 75848, 77101, 77101, 71345, 77101, 77101, 75848, 77101, 75848, 77101, 77101, 77101, 71345, 77101, 75848, 77101, 70092, 77101, 77101, 71345, 75848, 75848, 71345, 77101, 75848, 75848, 77101, 77101, 75848, 70092, 75848, 70092, 75848, 75848, 75848, 70092, 75848, 75848, 77101, 75848, 75848, 77101, 75848, 77101, 77101, 77101, 77101, 71345, 77101, 78479, 77101, 77101, 75848, 77101, 77101, 77101, 75848, 71345, 75848, 75848, 77101, 75848, 77101, 77101, 75848, 75848, 75848, 75848, 75848, 75848, 77101, 77101, 77101, 75848, 75848, 75848, 77101, 75848, 77101, 75848, 75848, 75848, 77101, 77101, 77101, 75848, 75848, 75848, 77101, 75848, 75848, 77101, 71345, 77101, 77101, 75848, 77101, 75848, 77101, 77101, 70092, 77101, 77101, 77101, 70092, 77101, 77101, 70092, 72723, 77101, 77101, 75848, 77101, 75848, 77101, 77101, 77101, 75848, 75848, 70092, 75848, 75848, 77101, 75848, 77101, 75848, 77101, 75848, 77101, 75848, 75848, 75848, 77101, 77101, 77101, 71345, 75848, 77101, 75848, 77101, 77101, 77101, 77101, 77101, 77101, 70092, 77101, 77101, 75848, 77101, 70092, 75848, 77101, 75848, 75848, 77101, 77101, 75848, 75848, 77101, 77101, 75848, 75848, 77101, 77101, 77101, 70092, 71345, 71345, 77101, 75848, 75848, 75848, 77101, 75848, 77101, 77101, 77101, 71345, 75848, 75848, 75848, 77101, 77101, 75848, 77101, 77101, 75848, 77101, 77101, 77101, 75848 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "StartTimeInMs" : 1702226560163,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 8515,
        "IOBytes" : {
          "Total" : 394261455,
          "Details" : {
            "IR" : 0,
            "IW" : 0,
            "SR" : 368312136,
            "SW" : 25949319
          }
        }
      }
    },
    "6" : {
      "LQP" : {
        "operators" : {
          "34" : {
            "sign" : -2060825732,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 3335789040,
            "rowCount" : 69495605,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ws_bill_customer_sk#5086, ws_ext_discount_amt#5104, ws_ext_sales_price#5105, ws_ext_wholesale_cost#5106, ws_ext_list_price#5107, d_year#5123], ShuffleQueryStage 23 "
          },
          "12" : {
            "sign" : 1582451270,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 14302285452,
            "rowCount" : 275043951,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(year_total#2829) AND (year_total#2829 > 0.000000)) "
          },
          "8" : {
            "sign" : 128788057,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 21360941260201211109287054393983552634880000000000000000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, ((customer_id#2821 = customer_id#2970) AND (CASE WHEN (year_total#2839 > 0.000000) THEN (year_total#2978 / year_total#2839) END > CASE WHEN (year_total#2829 > 0.000000) THEN (year_total#2958 / year_total#2829) END)) "
          },
          "19" : {
            "sign" : -791359697,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 2502795328000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(year_total#2839) AND (year_total#2839 > 0.000000)) "
          },
          "23" : {
            "sign" : -1147336357,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1592687936,
            "rowCount" : 28440856,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [cs_bill_customer_sk#4527, cs_ext_discount_amt#4546, cs_ext_sales_price#4547, cs_ext_wholesale_cost#4548, cs_ext_list_price#4549, d_year#4565], ShuffleQueryStage 22 "
          },
          "4" : {
            "sign" : -1898590095,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 516344015331518434787422567350684072081979068893378549760000000000000000000000000000000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, ((customer_id#2821 = customer_id#2990) AND (CASE WHEN (year_total#2839 > 0.000000) THEN (year_total#2978 / year_total#2839) END > CASE WHEN (year_total#2849 > 0.000000) THEN (year_total#2998 / year_total#2849) END)) "
          },
          "40" : {
            "sign" : -149944874,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 306068840,
            "rowCount" : 2000000,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [c_customer_sk#5304, c_customer_id#5305, c_first_name#5312, c_last_name#5313, c_preferred_cust_flag#5314, c_birth_country#5318, c_login#5319, c_email_address#5320], ShuffleQueryStage 20 "
          },
          "15" : {
            "sign" : 1578530028,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 97718935280000000,
            "rowCount" : 531081170000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_customer_id#4200, c_first_name#4207, c_last_name#4208, c_preferred_cust_flag#4209, c_birth_country#4213, c_login#4214, c_email_address#4215, ss_ext_discount_amt#4230, ss_ext_sales_price#4231, ss_ext_wholesale_cost#4232, ss_ext_list_price#4233, d_year#4246] "
          },
          "11" : {
            "sign" : -1621618442,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 789950147118302439360000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (customer_id#2950 = customer_id#2821) "
          },
          "9" : {
            "sign" : 251406775,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 1752414953746895462098346388480000000000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [customer_id#2821, year_total#2829, customer_id#2950, customer_first_name#2951, customer_last_name#2952, customer_email_address#2956, year_total#2958, year_total#2839] "
          },
          "33" : {
            "sign" : 1864291467,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 26686312320000000,
            "rowCount" : 138991210000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (c_customer_sk#5065 = ws_bill_customer_sk#5086) "
          },
          "22" : {
            "sign" : 1188748241,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 10921288704000000,
            "rowCount" : 56881712000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (c_customer_sk#4507 = cs_bill_customer_sk#4527) "
          },
          "26" : {
            "sign" : -1411007706,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 50973984416000000,
            "rowCount" : 277032524000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_customer_id#4747, c_first_name#4754, c_last_name#4755, c_preferred_cust_flag#4756, c_birth_country#4760, c_login#4761, c_email_address#4762, cs_ext_discount_amt#4785, cs_ext_sales_price#4786, cs_ext_wholesale_cost#4787, cs_ext_list_price#4788, d_year#4804] "
          },
          "37" : {
            "sign" : 103842726,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 25574382640000000,
            "rowCount" : 138991210000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_customer_id#5305, c_first_name#5312, c_last_name#5313, c_preferred_cust_flag#5314, c_birth_country#5318, c_login#5319, c_email_address#5320, ws_ext_discount_amt#5343, ws_ext_sales_price#5344, ws_ext_wholesale_cost#5345, ws_ext_list_price#5346, d_year#5362] "
          },
          "13" : {
            "sign" : 429932782,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 14302285452,
            "rowCount" : 275043951,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [c_customer_id#31, c_first_name#38, c_last_name#39, c_preferred_cust_flag#40, c_birth_country#44, c_login#45, c_email_address#46, d_year#77], [c_customer_id#31 AS customer_id#2821, sum(((((ss_ext_list_price#64 - ss_ext_wholesale_cost#63) - ss_ext_discount_amt#61) + ss_ext_sales_price#62) / 2)) AS year_total#2829], HashAggregate(keys=[c_customer_id#31, c_first_name#38, c_last_name#39, c_preferred_cust_flag#40, c_birth_country#44, c_login#45, c_email_address#46, d_year#77], functions=[sum(((((ss_ext_list_price#64 - ss_ext_wholesale_cost#63) - ss_ext_discount_amt#61) + ss_ext_sales_price#62) / 2))]) "
          },
          "24" : {
            "sign" : -268161914,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 306068840,
            "rowCount" : 2000000,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [c_customer_sk#4507, c_customer_id#4508, c_first_name#4515, c_last_name#4516, c_preferred_cust_flag#4517, c_birth_country#4521, c_login#4522, c_email_address#4523], ShuffleQueryStage 8 "
          },
          "35" : {
            "sign" : -8231932,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 306068840,
            "rowCount" : 2000000,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [c_customer_sk#5065, c_customer_id#5066, c_first_name#5073, c_last_name#5074, c_preferred_cust_flag#5075, c_birth_country#5079, c_login#5080, c_email_address#5081], ShuffleQueryStage 16 "
          },
          "16" : {
            "sign" : -284003848,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 101967584640000000,
            "rowCount" : 531081170000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (c_customer_sk#4199 = ss_customer_sk#4219) "
          },
          "5" : {
            "sign" : 1241451821,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 84430456124056405304568044814862110554587501824000000000000000000000000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [customer_id#2821, customer_id#2950, customer_first_name#2951, customer_last_name#2952, customer_email_address#2956, year_total#2839, year_total#2978, year_total#2849] "
          },
          "10" : {
            "sign" : -1403406365,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 1977083537560600008521211310080000000000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (customer_id#2821 = customer_id#2831) "
          },
          "21" : {
            "sign" : 1201651664,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 10466235008000000,
            "rowCount" : 56881712000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_customer_id#4508, c_first_name#4515, c_last_name#4516, c_preferred_cust_flag#4517, c_birth_country#4521, c_login#4522, c_email_address#4523, cs_ext_discount_amt#4546, cs_ext_sales_price#4547, cs_ext_wholesale_cost#4548, cs_ext_list_price#4549, d_year#4565] "
          },
          "32" : {
            "sign" : 1013224406,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 25574382640000000,
            "rowCount" : 138991210000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_customer_id#5066, c_first_name#5073, c_last_name#5074, c_preferred_cust_flag#5075, c_birth_country#5079, c_login#5080, c_email_address#5081, ws_ext_discount_amt#5104, ws_ext_sales_price#5105, ws_ext_wholesale_cost#5106, ws_ext_list_price#5107, d_year#5123] "
          },
          "6" : {
            "sign" : -1094643747,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 95254873575858508548743435175741868317996155904000000000000000000000000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (customer_id#2821 = customer_id#2841) "
          },
          "36" : {
            "sign" : 1099149837,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 6115613240000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [c_customer_id#5305, c_first_name#5312, c_last_name#5313, c_preferred_cust_flag#5314, c_birth_country#5318, c_login#5319, c_email_address#5320, d_year#5362], [c_customer_id#5305 AS customer_id#2990, sum(((((ws_ext_list_price#5346 - ws_ext_wholesale_cost#5345) - ws_ext_discount_amt#5343) + ws_ext_sales_price#5344) / 2)) AS year_total#2998] "
          },
          "1" : {
            "sign" : 2000401483,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
            "sizeInBytes" : 236657673693612615944235343369063533037573739909465168640000000000000000000000000000000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) LocalLimit Arguments: 100 "
          },
          "39" : {
            "sign" : -983899132,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 3335789040,
            "rowCount" : 69495605,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ws_bill_customer_sk#5325, ws_ext_discount_amt#5343, ws_ext_sales_price#5344, ws_ext_wholesale_cost#5345, ws_ext_list_price#5346, d_year#5362], ShuffleQueryStage 26 "
          },
          "17" : {
            "sign" : 1961017369,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 12745948080,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ss_customer_sk#4219, ss_ext_discount_amt#4230, ss_ext_sales_price#4231, ss_ext_wholesale_cost#4232, ss_ext_list_price#4233, d_year#4246], ShuffleQueryStage 24 "
          },
          "25" : {
            "sign" : -558918111,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 12189431056000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [c_customer_id#4747, c_first_name#4754, c_last_name#4755, c_preferred_cust_flag#4756, c_birth_country#4760, c_login#4761, c_email_address#4762, d_year#4804], [c_customer_id#4747 AS customer_id#2970, sum(((((cs_ext_list_price#4788 - cs_ext_wholesale_cost#4787) - cs_ext_discount_amt#4785) + cs_ext_sales_price#4786) / 2)) AS year_total#2978] "
          },
          "14" : {
            "sign" : 1669679482,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 55232441680000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [c_customer_id#4200, c_first_name#4207, c_last_name#4208, c_preferred_cust_flag#4209, c_birth_country#4213, c_login#4214, c_email_address#4215, d_year#4246], [c_customer_id#4200 AS customer_id#2950, c_first_name#4207 AS customer_first_name#2951, c_last_name#4208 AS customer_last_name#2952, c_email_address#4215 AS customer_email_address#2956, sum(((((ss_ext_list_price#4233 - ss_ext_wholesale_cost#4232) - ss_ext_discount_amt#4230) + ss_ext_sales_price#4231) / 2)) AS year_total#2958] "
          },
          "31" : {
            "sign" : 263073841,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 6115613240000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [c_customer_id#5066, c_first_name#5073, c_last_name#5074, c_preferred_cust_flag#5075, c_birth_country#5079, c_login#5080, c_email_address#5081, d_year#5123], [c_customer_id#5066 AS customer_id#2841, sum(((((ws_ext_list_price#5107 - ws_ext_wholesale_cost#5106) - ws_ext_discount_amt#5104) + ws_ext_sales_price#5105) / 2)) AS year_total#2849] "
          },
          "0" : {
            "sign" : -591909078,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
            "sizeInBytes" : 8800,
            "rowCount" : 100,
            "isRuntime" : false,
            "predicate" : " (unknown) GlobalLimit Arguments: 100 "
          },
          "20" : {
            "sign" : 421427731,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 2502795328000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [c_customer_id#4508, c_first_name#4515, c_last_name#4516, c_preferred_cust_flag#4517, c_birth_country#4521, c_login#4522, c_email_address#4523, d_year#4565], [c_customer_id#4508 AS customer_id#2831, sum(((((cs_ext_list_price#4549 - cs_ext_wholesale_cost#4548) - cs_ext_discount_amt#4546) + cs_ext_sales_price#4547) / 2)) AS year_total#2839] "
          },
          "27" : {
            "sign" : -1247342346,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 53190244608000000,
            "rowCount" : 277032524000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (c_customer_sk#4746 = cs_bill_customer_sk#4766) "
          },
          "2" : {
            "sign" : 477806740,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 236657673693612615944235343369063533037573739909465168640000000000000000000000000000000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [customer_id#2950 ASC NULLS FIRST, customer_first_name#2951 ASC NULLS FIRST, customer_last_name#2952 ASC NULLS FIRST, customer_email_address#2956 ASC NULLS FIRST], true "
          },
          "38" : {
            "sign" : -979568171,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 26686312320000000,
            "rowCount" : 138991210000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (c_customer_sk#5304 = ws_bill_customer_sk#5325) "
          },
          "18" : {
            "sign" : -545469420,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 306068840,
            "rowCount" : 2000000,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [c_customer_sk#4199, c_customer_id#4200, c_first_name#4207, c_last_name#4208, c_preferred_cust_flag#4209, c_birth_country#4213, c_login#4214, c_email_address#4215], ShuffleQueryStage 4 "
          },
          "30" : {
            "sign" : 830600325,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 6115613240000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(year_total#2849) AND (year_total#2849 > 0.000000)) "
          },
          "7" : {
            "sign" : 1527301671,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 15575686335563383100521810495613007129600000000000000000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [customer_id#2821, customer_id#2950, customer_first_name#2951, customer_last_name#2952, customer_email_address#2956, year_total#2839, year_total#2978] "
          },
          "29" : {
            "sign" : -1104656951,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 306068840,
            "rowCount" : 2000000,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [c_customer_sk#4746, c_customer_id#4747, c_first_name#4754, c_last_name#4755, c_preferred_cust_flag#4756, c_birth_country#4760, c_login#4761, c_email_address#4762], ShuffleQueryStage 12 "
          },
          "3" : {
            "sign" : 997137995,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 236657673693612615944235343369063533037573739909465168640000000000000000000000000000000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [customer_id#2950, customer_first_name#2951, customer_last_name#2952, customer_email_address#2956] "
          },
          "28" : {
            "sign" : -186934941,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 6648780576,
            "rowCount" : 138516262,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [cs_bill_customer_sk#4766, cs_ext_discount_amt#4785, cs_ext_sales_price#4786, cs_ext_wholesale_cost#4787, cs_ext_list_price#4788, d_year#4804], ShuffleQueryStage 25 "
          }
        },
        "links" : [ {
          "fromId" : 13,
          "fromName" : "LogicalQueryStage",
          "toId" : 12,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 12,
          "fromName" : "Filter",
          "toId" : 11,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 17,
          "fromName" : "LogicalQueryStage",
          "toId" : 16,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 18,
          "fromName" : "LogicalQueryStage",
          "toId" : 16,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 16,
          "fromName" : "Join",
          "toId" : 15,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 15,
          "fromName" : "Project",
          "toId" : 14,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 14,
          "fromName" : "Aggregate",
          "toId" : 11,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "Join",
          "toId" : 10,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 23,
          "fromName" : "LogicalQueryStage",
          "toId" : 22,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 24,
          "fromName" : "LogicalQueryStage",
          "toId" : 22,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 22,
          "fromName" : "Join",
          "toId" : 21,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 21,
          "fromName" : "Project",
          "toId" : 20,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 20,
          "fromName" : "Aggregate",
          "toId" : 19,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 19,
          "fromName" : "Filter",
          "toId" : 10,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "Join",
          "toId" : 9,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "Project",
          "toId" : 8,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 28,
          "fromName" : "LogicalQueryStage",
          "toId" : 27,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 29,
          "fromName" : "LogicalQueryStage",
          "toId" : 27,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 27,
          "fromName" : "Join",
          "toId" : 26,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 26,
          "fromName" : "Project",
          "toId" : 25,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 25,
          "fromName" : "Aggregate",
          "toId" : 8,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "Join",
          "toId" : 7,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Project",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 34,
          "fromName" : "LogicalQueryStage",
          "toId" : 33,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 35,
          "fromName" : "LogicalQueryStage",
          "toId" : 33,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 33,
          "fromName" : "Join",
          "toId" : 32,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 32,
          "fromName" : "Project",
          "toId" : 31,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 31,
          "fromName" : "Aggregate",
          "toId" : 30,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 30,
          "fromName" : "Filter",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Join",
          "toId" : 5,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Project",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 39,
          "fromName" : "LogicalQueryStage",
          "toId" : 38,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 40,
          "fromName" : "LogicalQueryStage",
          "toId" : 38,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 38,
          "fromName" : "Join",
          "toId" : 37,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 37,
          "fromName" : "Project",
          "toId" : 36,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 36,
          "fromName" : "Aggregate",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Join",
          "toId" : 3,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Project",
          "toId" : 2,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "LocalLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "LocalLimit",
          "toId" : 0,
          "toName" : "GlobalLimit",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [customer_id#2950 ASC NULLS FIRST, customer_first_name#2951 ASC NULLS FIRST, customer_last_name#2952 ASC NULLS FIRST, customer_email_address#2956 ASC NULLS FIRST], true\n      +- Project [customer_id#2950, customer_first_name#2951, customer_last_name#2952, customer_email_address#2956]\n         +- Join Inner, ((customer_id#2821 = customer_id#2990) AND (CASE WHEN (year_total#2839 > 0.000000) THEN (year_total#2978 / year_total#2839) END > CASE WHEN (year_total#2849 > 0.000000) THEN (year_total#2998 / year_total#2849) END))\n            :- Project [customer_id#2821, customer_id#2950, customer_first_name#2951, customer_last_name#2952, customer_email_address#2956, year_total#2839, year_total#2978, year_total#2849]\n            :  +- Join Inner, (customer_id#2821 = customer_id#2841)\n            :     :- Project [customer_id#2821, customer_id#2950, customer_first_name#2951, customer_last_name#2952, customer_email_address#2956, year_total#2839, year_total#2978]\n            :     :  +- Join Inner, ((customer_id#2821 = customer_id#2970) AND (CASE WHEN (year_total#2839 > 0.000000) THEN (year_total#2978 / year_total#2839) END > CASE WHEN (year_total#2829 > 0.000000) THEN (year_total#2958 / year_total#2829) END))\n            :     :     :- Project [customer_id#2821, year_total#2829, customer_id#2950, customer_first_name#2951, customer_last_name#2952, customer_email_address#2956, year_total#2958, year_total#2839]\n            :     :     :  +- Join Inner, (customer_id#2821 = customer_id#2831)\n            :     :     :     :- Join Inner, (customer_id#2950 = customer_id#2821)\n            :     :     :     :  :- Filter (isnotnull(year_total#2829) AND (year_total#2829 > 0.000000))\n            :     :     :     :  :  +- LogicalQueryStage Aggregate [c_customer_id#31, c_first_name#38, c_last_name#39, c_preferred_cust_flag#40, c_birth_country#44, c_login#45, c_email_address#46, d_year#77], [c_customer_id#31 AS customer_id#2821, sum(((((ss_ext_list_price#64 - ss_ext_wholesale_cost#63) - ss_ext_discount_amt#61) + ss_ext_sales_price#62) / 2)) AS year_total#2829], HashAggregate(keys=[c_customer_id#31, c_first_name#38, c_last_name#39, c_preferred_cust_flag#40, c_birth_country#44, c_login#45, c_email_address#46, d_year#77], functions=[sum(((((ss_ext_list_price#64 - ss_ext_wholesale_cost#63) - ss_ext_discount_amt#61) + ss_ext_sales_price#62) / 2))])\n            :     :     :     :  +- Aggregate [c_customer_id#4200, c_first_name#4207, c_last_name#4208, c_preferred_cust_flag#4209, c_birth_country#4213, c_login#4214, c_email_address#4215, d_year#4246], [c_customer_id#4200 AS customer_id#2950, c_first_name#4207 AS customer_first_name#2951, c_last_name#4208 AS customer_last_name#2952, c_email_address#4215 AS customer_email_address#2956, sum(((((ss_ext_list_price#4233 - ss_ext_wholesale_cost#4232) - ss_ext_discount_amt#4230) + ss_ext_sales_price#4231) / 2)) AS year_total#2958]\n            :     :     :     :     +- Project [c_customer_id#4200, c_first_name#4207, c_last_name#4208, c_preferred_cust_flag#4209, c_birth_country#4213, c_login#4214, c_email_address#4215, ss_ext_discount_amt#4230, ss_ext_sales_price#4231, ss_ext_wholesale_cost#4232, ss_ext_list_price#4233, d_year#4246]\n            :     :     :     :        +- Join Inner, (c_customer_sk#4199 = ss_customer_sk#4219)\n            :     :     :     :           :- LogicalQueryStage Project [ss_customer_sk#4219, ss_ext_discount_amt#4230, ss_ext_sales_price#4231, ss_ext_wholesale_cost#4232, ss_ext_list_price#4233, d_year#4246], ShuffleQueryStage 24\n            :     :     :     :           +- LogicalQueryStage Project [c_customer_sk#4199, c_customer_id#4200, c_first_name#4207, c_last_name#4208, c_preferred_cust_flag#4209, c_birth_country#4213, c_login#4214, c_email_address#4215], ShuffleQueryStage 4\n            :     :     :     +- Filter (isnotnull(year_total#2839) AND (year_total#2839 > 0.000000))\n            :     :     :        +- Aggregate [c_customer_id#4508, c_first_name#4515, c_last_name#4516, c_preferred_cust_flag#4517, c_birth_country#4521, c_login#4522, c_email_address#4523, d_year#4565], [c_customer_id#4508 AS customer_id#2831, sum(((((cs_ext_list_price#4549 - cs_ext_wholesale_cost#4548) - cs_ext_discount_amt#4546) + cs_ext_sales_price#4547) / 2)) AS year_total#2839]\n            :     :     :           +- Project [c_customer_id#4508, c_first_name#4515, c_last_name#4516, c_preferred_cust_flag#4517, c_birth_country#4521, c_login#4522, c_email_address#4523, cs_ext_discount_amt#4546, cs_ext_sales_price#4547, cs_ext_wholesale_cost#4548, cs_ext_list_price#4549, d_year#4565]\n            :     :     :              +- Join Inner, (c_customer_sk#4507 = cs_bill_customer_sk#4527)\n            :     :     :                 :- LogicalQueryStage Project [cs_bill_customer_sk#4527, cs_ext_discount_amt#4546, cs_ext_sales_price#4547, cs_ext_wholesale_cost#4548, cs_ext_list_price#4549, d_year#4565], ShuffleQueryStage 22\n            :     :     :                 +- LogicalQueryStage Project [c_customer_sk#4507, c_customer_id#4508, c_first_name#4515, c_last_name#4516, c_preferred_cust_flag#4517, c_birth_country#4521, c_login#4522, c_email_address#4523], ShuffleQueryStage 8\n            :     :     +- Aggregate [c_customer_id#4747, c_first_name#4754, c_last_name#4755, c_preferred_cust_flag#4756, c_birth_country#4760, c_login#4761, c_email_address#4762, d_year#4804], [c_customer_id#4747 AS customer_id#2970, sum(((((cs_ext_list_price#4788 - cs_ext_wholesale_cost#4787) - cs_ext_discount_amt#4785) + cs_ext_sales_price#4786) / 2)) AS year_total#2978]\n            :     :        +- Project [c_customer_id#4747, c_first_name#4754, c_last_name#4755, c_preferred_cust_flag#4756, c_birth_country#4760, c_login#4761, c_email_address#4762, cs_ext_discount_amt#4785, cs_ext_sales_price#4786, cs_ext_wholesale_cost#4787, cs_ext_list_price#4788, d_year#4804]\n            :     :           +- Join Inner, (c_customer_sk#4746 = cs_bill_customer_sk#4766)\n            :     :              :- LogicalQueryStage Project [cs_bill_customer_sk#4766, cs_ext_discount_amt#4785, cs_ext_sales_price#4786, cs_ext_wholesale_cost#4787, cs_ext_list_price#4788, d_year#4804], ShuffleQueryStage 25\n            :     :              +- LogicalQueryStage Project [c_customer_sk#4746, c_customer_id#4747, c_first_name#4754, c_last_name#4755, c_preferred_cust_flag#4756, c_birth_country#4760, c_login#4761, c_email_address#4762], ShuffleQueryStage 12\n            :     +- Filter (isnotnull(year_total#2849) AND (year_total#2849 > 0.000000))\n            :        +- Aggregate [c_customer_id#5066, c_first_name#5073, c_last_name#5074, c_preferred_cust_flag#5075, c_birth_country#5079, c_login#5080, c_email_address#5081, d_year#5123], [c_customer_id#5066 AS customer_id#2841, sum(((((ws_ext_list_price#5107 - ws_ext_wholesale_cost#5106) - ws_ext_discount_amt#5104) + ws_ext_sales_price#5105) / 2)) AS year_total#2849]\n            :           +- Project [c_customer_id#5066, c_first_name#5073, c_last_name#5074, c_preferred_cust_flag#5075, c_birth_country#5079, c_login#5080, c_email_address#5081, ws_ext_discount_amt#5104, ws_ext_sales_price#5105, ws_ext_wholesale_cost#5106, ws_ext_list_price#5107, d_year#5123]\n            :              +- Join Inner, (c_customer_sk#5065 = ws_bill_customer_sk#5086)\n            :                 :- LogicalQueryStage Project [ws_bill_customer_sk#5086, ws_ext_discount_amt#5104, ws_ext_sales_price#5105, ws_ext_wholesale_cost#5106, ws_ext_list_price#5107, d_year#5123], ShuffleQueryStage 23\n            :                 +- LogicalQueryStage Project [c_customer_sk#5065, c_customer_id#5066, c_first_name#5073, c_last_name#5074, c_preferred_cust_flag#5075, c_birth_country#5079, c_login#5080, c_email_address#5081], ShuffleQueryStage 16\n            +- Aggregate [c_customer_id#5305, c_first_name#5312, c_last_name#5313, c_preferred_cust_flag#5314, c_birth_country#5318, c_login#5319, c_email_address#5320, d_year#5362], [c_customer_id#5305 AS customer_id#2990, sum(((((ws_ext_list_price#5346 - ws_ext_wholesale_cost#5345) - ws_ext_discount_amt#5343) + ws_ext_sales_price#5344) / 2)) AS year_total#2998]\n               +- Project [c_customer_id#5305, c_first_name#5312, c_last_name#5313, c_preferred_cust_flag#5314, c_birth_country#5318, c_login#5319, c_email_address#5320, ws_ext_discount_amt#5343, ws_ext_sales_price#5344, ws_ext_wholesale_cost#5345, ws_ext_list_price#5346, d_year#5362]\n                  +- Join Inner, (c_customer_sk#5304 = ws_bill_customer_sk#5325)\n                     :- LogicalQueryStage Project [ws_bill_customer_sk#5325, ws_ext_discount_amt#5343, ws_ext_sales_price#5344, ws_ext_wholesale_cost#5345, ws_ext_list_price#5346, d_year#5362], ShuffleQueryStage 26\n                     +- LogicalQueryStage Project [c_customer_sk#5304, c_customer_id#5305, c_first_name#5312, c_last_name#5313, c_preferred_cust_flag#5314, c_birth_country#5318, c_login#5319, c_email_address#5320], ShuffleQueryStage 20\n"
      },
      "IM" : {
        "inputSizeInBytes" : 43491624324,
        "inputRowCount" : 856532864
      },
      "PD" : {
        "2" : [ 3553529, 3513504, 3478675, 3527578, 3441143, 3491162, 3471803, 3531260, 3500432, 3481930, 3540223, 3443734, 3483215, 3480289, 3456496, 3511863, 3466460, 3598393, 3499735, 3427328, 3479840, 3586839, 3508020, 3510434, 3422530, 3490441, 3484750, 3539670, 3504041, 3497879, 3476536, 3509392, 3473281, 3450658, 3452460, 3461297, 3420257, 3437624, 3460799, 3495432, 3459441, 3455832, 3474821, 3509133, 3480572, 3454025, 3501752, 3516593, 3528740, 3433101, 3484806, 3500859, 3465603, 3467927, 3450171, 3499074, 3461602, 3454474, 3439728, 3476895, 3415919, 3575784, 3445876, 3494270, 3513504, 3527673, 3494180, 3454806, 3489804, 3511289, 3531614, 3432045, 3457996, 3573597, 3460807, 3498595, 3561457, 3466063, 3470747, 3533473, 3446320, 3535490, 3535795, 3467266, 3507364, 3427867, 3452996, 3426547, 3524437, 3518041, 3456978, 3512647, 3517611, 3509468, 3520828, 3606770, 3390825, 3405416, 3460247, 3384522, 3485754, 3487395, 3491162, 3524437, 3473588, 3540903, 3515325, 3545421, 3440207, 3449387, 3373540, 3508880, 3586249, 3462266, 3510826, 3495503, 3375712, 3436473, 3493386, 3446135, 3482428, 3468711, 3631129, 3480572, 3626042, 3630699, 3446083, 3443729, 3470069, 3451102, 3561479, 3531187, 3558893, 3553368, 3499501, 3472712, 3495378, 3494093, 3509702, 3478931, 3462963, 3471302, 3510007, 3525292, 3495857, 3497128, 3579159, 3496431, 3564424, 3511220, 3530498, 3466811, 3569388, 3516683, 3509909, 3472660, 3523580, 3519801, 3572175, 3431958, 3425616, 3425883, 3511523, 3493840, 3498682, 3546115, 3459441, 3592302, 3471302, 3416044, 3535525, 3596104, 3470336, 3476661, 3464427, 3447436, 3517614, 3428920, 3505701, 3487286, 3492912, 3516683, 3471359, 3470997, 3523580, 3541258, 3643281, 3500040, 3405149, 3482306, 3520559, 3482575, 3493987, 3459708, 3531614, 3550421, 3525265, 3476661, 3516291, 3459795 ],
        "0" : [ 830145, 830145, 754677, 830145, 830145, 830145, 754677, 754677, 830145, 830145, 830145, 754677, 830145, 830145, 754677, 830145, 830145, 830145, 754677, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 754677, 830145, 830145, 754677, 830145, 830145, 754677, 754677, 754677, 754677, 754677, 830145, 754677, 830145, 830145, 754677, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 754677, 754677, 754677, 830145, 830145, 830145, 754677, 830145, 754677, 830145, 830145, 754677, 830145, 830145, 830145, 754677, 754677, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 754677, 754677, 754677, 754677, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 754677, 754677, 830145, 754677, 754677, 830145, 830145, 754677, 830145, 830145, 830145, 830145, 754677, 754677, 830145, 830145, 830145, 754677, 830145, 830145, 754677, 754677, 754677, 830145, 754677, 830145, 830145, 754677, 830145, 830145, 754677, 754677, 754677, 754677, 830145, 830145, 830145, 830145, 754677, 754677, 830145, 830145, 830145, 830145, 754677, 754677, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 754677, 754677, 830145, 830145, 754677, 830145, 830145, 830145, 830145, 830145, 754677, 830145, 830145, 830145, 830145, 830145, 754677, 830145, 754677, 830145, 754677, 754677, 830145, 830145, 754677, 830145, 830145, 830145, 830145, 754677, 830145, 830145, 830145, 754677, 754677, 830145, 830145, 830145, 830145, 830145, 754677 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 16,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "StartTimeInMs" : 1702226520122,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 48556,
        "IOBytes" : {
          "Total" : 11197137236,
          "Details" : {
            "IR" : 1769982945,
            "IW" : 0,
            "SR" : 6038854810,
            "SW" : 3388299481
          }
        }
      }
    },
    "1" : {
      "LQP" : {
        "operators" : {
          "45" : {
            "sign" : -1747290206,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 6842707584,
            "rowCount" : 142556408,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_bill_customer_sk#4527, cs_ext_discount_amt#4546, cs_ext_sales_price#4547, cs_ext_wholesale_cost#4548, cs_ext_list_price#4549, cs_sold_date_sk#4558] "
          },
          "34" : {
            "sign" : -422713802,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 9216,
            "rowCount" : 576,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#4240, d_year#4246] "
          },
          "67" : {
            "sign" : 2016877615,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 3719321157,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [c_customer_id#5066, c_first_name#5073, c_last_name#5074, c_preferred_cust_flag#5075, c_birth_country#5079, c_login#5080, c_email_address#5081, d_year#5123], [c_customer_id#5066 AS customer_id#2841, sum(((((ws_ext_list_price#5107 - ws_ext_wholesale_cost#5106) - ws_ext_discount_amt#5104) + ws_ext_sales_price#5105) / 2)) AS year_total#2849] "
          },
          "12" : {
            "sign" : -1396723319,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 14140846611,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(year_total#2829) AND (year_total#2829 > 0.000000)) "
          },
          "66" : {
            "sign" : 1586530415,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 3719321157,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(year_total#2849) AND (year_total#2849 > 0.000000)) "
          },
          "89" : {
            "sign" : -2068458022,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 141696,
            "rowCount" : 576,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(d_year#5362) AND (d_year#5362 = 2002)) AND isnotnull(d_date_sk#5356)) "
          },
          "51" : {
            "sign" : 826250884,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1051496,
            "rowCount" : 365,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#4559, d_year#4565], BroadcastQueryStage 6 "
          },
          "84" : {
            "sign" : -1906529665,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 3891753880,
            "rowCount" : 69495605,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ws_sold_date_sk#5355 = d_date_sk#5356) "
          },
          "8" : {
            "sign" : -2032762890,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 24306587882188556270129364429588409590888,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, ((customer_id#2821 = customer_id#2970) AND (CASE WHEN (year_total#2839 > 0.000000) THEN (year_total#2978 / year_total#2839) END > CASE WHEN (year_total#2829 > 0.000000) THEN (year_total#2958 / year_total#2829) END)) "
          },
          "73" : {
            "sign" : 1847345753,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 14968845008,
            "rowCount" : 71965601,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(ws_bill_customer_sk#5086) AND isnotnull(ws_sold_date_sk#5116)) AND dynamicpruning#5498 [ws_sold_date_sk#5116]) "
          },
          "78" : {
            "sign" : 53089143,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1051496,
            "rowCount" : 365,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#5117, d_year#5123], BroadcastQueryStage 14 "
          },
          "19" : {
            "sign" : -1087596026,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 39925696056,
            "rowCount" : 262669053,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(ss_customer_sk#50) AND isnotnull(ss_sold_date_sk#70)) AND dynamicpruning#5494 [ss_sold_date_sk#70]) "
          },
          "23" : {
            "sign" : -668436058,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#71, d_date_id#72, d_date#73, d_month_seq#74, d_week_seq#75, d_quarter_seq#76, d_year#77, d_dow#78, d_moy#79, d_dom#80, d_qoy#81, d_fy_year#82, d_fy_quarter_seq#83, d_fy_week_seq#84, d_day_name#85, d_quarter_name#86, d_holiday#87, d_weekend#88, d_following_holiday#89, d_first_dom#90, d_last_dom#91, d_same_day_ly#92, d_same_day_lq#93, d_current_day#94, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "62" : {
            "sign" : -2096203715,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 141696,
            "rowCount" : 576,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(d_year#4804) AND (d_year#4804 = 2002)) AND isnotnull(d_date_sk#4798)) "
          },
          "4" : {
            "sign" : 1358272037,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 219796173062631731740673177672711412703789590933064654789440,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, ((customer_id#2821 = customer_id#2990) AND (CASE WHEN (year_total#2839 > 0.000000) THEN (year_total#2978 / year_total#2839) END > CASE WHEN (year_total#2849 > 0.000000) THEN (year_total#2998 / year_total#2849) END)) "
          },
          "88" : {
            "sign" : -2147007074,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 9216,
            "rowCount" : 576,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#5356, d_year#5362] "
          },
          "77" : {
            "sign" : 1159164705,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#5117, d_date_id#5118, d_date#5119, d_month_seq#5120, d_week_seq#5121, d_quarter_seq#5122, d_year#5123, d_dow#5124, d_moy#5125, d_dom#5126, d_qoy#5127, d_fy_year#5128, d_fy_quarter_seq#5129, d_fy_week_seq#5130, d_day_name#5131, d_quarter_name#5132, d_holiday#5133, d_weekend#5134, d_following_holiday#5135, d_first_dom#5136, d_last_dom#5137, d_same_day_ly#5138, d_same_day_lq#5139, d_current_day#5140, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "40" : {
            "sign" : -1413163510,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 7351185951,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [c_customer_id#4508, c_first_name#4515, c_last_name#4516, c_preferred_cust_flag#4517, c_birth_country#4521, c_login#4522, c_email_address#4523, d_year#4565], [c_customer_id#4508 AS customer_id#2831, sum(((((cs_ext_list_price#4549 - cs_ext_wholesale_cost#4548) - cs_ext_discount_amt#4546) + cs_ext_sales_price#4547) / 2)) AS year_total#2839] "
          },
          "15" : {
            "sign" : -1118688446,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 61334801073,
            "rowCount" : 275043951,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (c_customer_sk#30 = ss_customer_sk#50) "
          },
          "11" : {
            "sign" : -1708370348,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 501726707586297607869,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (customer_id#2950 = customer_id#2821) "
          },
          "90" : {
            "sign" : 308578962,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#5356, d_date_id#5357, d_date#5358, d_month_seq#5359, d_week_seq#5360, d_quarter_seq#5361, d_year#5362, d_dow#5363, d_moy#5364, d_dom#5365, d_qoy#5366, d_fy_year#5367, d_fy_quarter_seq#5368, d_fy_week_seq#5369, d_day_name#5370, d_quarter_name#5371, d_holiday#5372, d_weekend#5373, d_following_holiday#5374, d_first_dom#5375, d_last_dom#5376, d_same_day_ly#5377, d_same_day_lq#5378, d_current_day#5379, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "9" : {
            "sign" : 391690376,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 3269162878135117447904283956553,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [customer_id#2821, year_total#2829, customer_id#2950, customer_first_name#2951, customer_last_name#2952, customer_email_address#2956, year_total#2958, year_total#2839] "
          },
          "44" : {
            "sign" : -1676259937,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 2913852979520,
            "rowCount" : 52033088920,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cs_sold_date_sk#4558 = d_date_sk#4559) "
          },
          "33" : {
            "sign" : 79939235,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#4217, ss_item_sk#4218, ss_customer_sk#4219, ss_cdemo_sk#4220, ss_hdemo_sk#4221, ss_addr_sk#4222, ss_store_sk#4223, ss_promo_sk#4224, ss_ticket_number#4225L, ss_quantity#4226, ss_wholesale_cost#4227, ss_list_price#4228, ss_sales_price#4229, ss_ext_discount_amt#4230, ss_ext_sales_price#4231, ss_ext_wholesale_cost#4232, ss_ext_list_price#4233, ss_ext_tax#4234, ss_coupon_amt#4235, ss_net_paid#4236, ss_net_paid_inc_tax#4237, ss_net_profit#4238, ss_sold_date_sk#4239], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "22" : {
            "sign" : -1707248010,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 141696,
            "rowCount" : 576,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(d_year#77) AND (d_year#77 = 2001)) AND isnotnull(d_date_sk#71)) "
          },
          "56" : {
            "sign" : 679513025,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 6648780576,
            "rowCount" : 138516262,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_bill_customer_sk#4766, cs_ext_discount_amt#4785, cs_ext_sales_price#4786, cs_ext_wholesale_cost#4787, cs_ext_list_price#4788, d_year#4804] "
          },
          "55" : {
            "sign" : 1436839738,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 31885186254,
            "rowCount" : 142982898,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (c_customer_sk#4746 = cs_bill_customer_sk#4766) "
          },
          "26" : {
            "sign" : -1168707141,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 35480669679,
            "rowCount" : 275043951,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [c_customer_id#4200, c_first_name#4207, c_last_name#4208, c_preferred_cust_flag#4209, c_birth_country#4213, c_login#4214, c_email_address#4215, d_year#4246], [c_customer_id#4200 AS customer_id#2950, c_first_name#4207 AS customer_first_name#2951, c_last_name#4208 AS customer_last_name#2952, c_email_address#4215 AS customer_email_address#2956, sum(((((ss_ext_list_price#4233 - ss_ext_wholesale_cost#4232) - ss_ext_discount_amt#4230) + ss_ext_sales_price#4231) / 2)) AS year_total#2958] "
          },
          "50" : {
            "sign" : -28166693,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#4559, d_date_id#4560, d_date#4561, d_month_seq#4562, d_week_seq#4563, d_quarter_seq#4564, d_year#4565, d_dow#4566, d_moy#4567, d_dom#4568, d_qoy#4569, d_fy_year#4570, d_fy_quarter_seq#4571, d_fy_week_seq#4572, d_day_name#4573, d_quarter_name#4574, d_holiday#4575, d_weekend#4576, d_following_holiday#4577, d_first_dom#4578, d_last_dom#4579, d_same_day_ly#4580, d_same_day_lq#4581, d_current_day#4582, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "37" : {
            "sign" : -537096611,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 9216,
            "rowCount" : 576,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#4240, d_year#4246], BroadcastQueryStage 2 "
          },
          "68" : {
            "sign" : 857949248,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 15553524840,
            "rowCount" : 72341976,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_customer_id#5066, c_first_name#5073, c_last_name#5074, c_preferred_cust_flag#5075, c_birth_country#5079, c_login#5080, c_email_address#5081, ws_ext_discount_amt#5104, ws_ext_sales_price#5105, ws_ext_wholesale_cost#5106, ws_ext_list_price#5107, d_year#5123] "
          },
          "61" : {
            "sign" : -95765746,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 9216,
            "rowCount" : 576,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#4798, d_year#4804] "
          },
          "13" : {
            "sign" : -654415705,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 14140846611,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [c_customer_id#31, c_first_name#38, c_last_name#39, c_preferred_cust_flag#40, c_birth_country#44, c_login#45, c_email_address#46, d_year#77], [c_customer_id#31 AS customer_id#2821, sum(((((ss_ext_list_price#64 - ss_ext_wholesale_cost#63) - ss_ext_discount_amt#61) + ss_ext_sales_price#62) / 2)) AS year_total#2829] "
          },
          "46" : {
            "sign" : -1564947664,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 29651732864,
            "rowCount" : 142556408,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(cs_bill_customer_sk#4527) AND isnotnull(cs_sold_date_sk#4558)) AND dynamicpruning#5496 [cs_sold_date_sk#4558]) "
          },
          "24" : {
            "sign" : 1561991903,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1051496,
            "rowCount" : 365,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#71, d_year#77], BroadcastQueryStage 0 "
          },
          "83" : {
            "sign" : 2002978655,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 3335789040,
            "rowCount" : 69495605,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_bill_customer_sk#5325, ws_ext_discount_amt#5343, ws_ext_sales_price#5344, ws_ext_wholesale_cost#5345, ws_ext_list_price#5346, d_year#5362] "
          },
          "35" : {
            "sign" : 596675861,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 141696,
            "rowCount" : 576,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(d_year#4246) AND (d_year#4246 = 2002)) AND isnotnull(d_date_sk#4240)) "
          },
          "16" : {
            "sign" : -336624028,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 4601961808560,
            "rowCount" : 95874204345,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_customer_sk#50, ss_ext_discount_amt#61, ss_ext_sales_price#62, ss_ext_wholesale_cost#63, ss_ext_list_price#64, d_year#77] "
          },
          "79" : {
            "sign" : -8231932,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 366000000,
            "rowCount" : 2000000,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [c_customer_sk#5065, c_customer_id#5066, c_first_name#5073, c_last_name#5074, c_preferred_cust_flag#5075, c_birth_country#5079, c_login#5080, c_email_address#5081], ShuffleQueryStage 16 "
          },
          "5" : {
            "sign" : -1024190718,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 58428725833721865004891483343350555269862003698470,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [customer_id#2821, customer_id#2950, customer_first_name#2951, customer_last_name#2952, customer_email_address#2956, year_total#2839, year_total#2978, year_total#2849] "
          },
          "72" : {
            "sign" : 1229180951,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 3454348848,
            "rowCount" : 71965601,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_bill_customer_sk#5086, ws_ext_discount_amt#5104, ws_ext_sales_price#5105, ws_ext_wholesale_cost#5106, ws_ext_list_price#5107, ws_sold_date_sk#5116] "
          },
          "10" : {
            "sign" : -1789452022,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 3688286324049876095071499848419,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (customer_id#2821 = customer_id#2831) "
          },
          "59" : {
            "sign" : 251325564,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 29651732864,
            "rowCount" : 142556408,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(cs_bill_customer_sk#4766) AND isnotnull(cs_sold_date_sk#4797)) AND dynamicpruning#5497 [cs_sold_date_sk#4797]) "
          },
          "87" : {
            "sign" : 1411799922,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 14972593792,
            "rowCount" : 71983624,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ws_sold_time_sk#5322, ws_ship_date_sk#5323, ws_item_sk#5324, ws_bill_customer_sk#5325, ws_bill_cdemo_sk#5326, ws_bill_hdemo_sk#5327, ws_bill_addr_sk#5328, ws_ship_customer_sk#5329, ws_ship_cdemo_sk#5330, ws_ship_hdemo_sk#5331, ws_ship_addr_sk#5332, ws_web_page_sk#5333, ws_web_site_sk#5334, ws_ship_mode_sk#5335, ws_warehouse_sk#5336, ws_promo_sk#5337, ws_order_number#5338L, ws_quantity#5339, ws_wholesale_cost#5340, ws_list_price#5341, ws_sales_price#5342, ws_ext_discount_amt#5343, ws_ext_sales_price#5344, ws_ext_wholesale_cost#5345, ... 10 more fields], `spark_catalog`.`tpcds_100`.`web_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "48" : {
            "sign" : 1308929012,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 9216,
            "rowCount" : 576,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#4559, d_year#4565] "
          },
          "21" : {
            "sign" : -1498790795,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 9216,
            "rowCount" : 576,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#71, d_year#77] "
          },
          "76" : {
            "sign" : 1739347411,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 141696,
            "rowCount" : 576,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(d_year#5123) AND (d_year#5123 = 2001)) AND isnotnull(d_date_sk#5117)) "
          },
          "54" : {
            "sign" : 1673631872,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 30741323070,
            "rowCount" : 142982898,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_customer_id#4747, c_first_name#4754, c_last_name#4755, c_preferred_cust_flag#4756, c_birth_country#4760, c_login#4761, c_email_address#4762, cs_ext_discount_amt#4785, cs_ext_sales_price#4786, cs_ext_wholesale_cost#4787, cs_ext_list_price#4788, d_year#4804] "
          },
          "43" : {
            "sign" : -597171600,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 2497588268160,
            "rowCount" : 52033088920,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_bill_customer_sk#4527, cs_ext_discount_amt#4546, cs_ext_sales_price#4547, cs_ext_wholesale_cost#4548, cs_ext_list_price#4549, d_year#4565] "
          },
          "65" : {
            "sign" : -1104656951,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 366000000,
            "rowCount" : 2000000,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [c_customer_sk#4746, c_customer_id#4747, c_first_name#4754, c_last_name#4755, c_preferred_cust_flag#4756, c_birth_country#4760, c_login#4761, c_email_address#4762], ShuffleQueryStage 12 "
          },
          "71" : {
            "sign" : -2039014955,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 1470976884440,
            "rowCount" : 26267444365,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ws_sold_date_sk#5116 = d_date_sk#5117) "
          },
          "57" : {
            "sign" : -877902759,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 7756910672,
            "rowCount" : 138516262,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cs_sold_date_sk#4797 = d_date_sk#4798) "
          },
          "32" : {
            "sign" : -1174856634,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 39925696056,
            "rowCount" : 262669053,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(ss_customer_sk#4219) AND isnotnull(ss_sold_date_sk#4239)) AND dynamicpruning#5495 [ss_sold_date_sk#4239]) "
          },
          "80" : {
            "sign" : 555767454,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 3761782752,
            "rowCount" : 72341976,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [c_customer_id#5305, c_first_name#5312, c_last_name#5313, c_preferred_cust_flag#5314, c_birth_country#5318, c_login#5319, c_email_address#5320, d_year#5362], [c_customer_id#5305 AS customer_id#2990, sum(((((ws_ext_list_price#5346 - ws_ext_wholesale_cost#5345) - ws_ext_discount_amt#5343) + ws_ext_sales_price#5344) / 2)) AS year_total#2998] "
          },
          "82" : {
            "sign" : 1105249702,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 16132260648,
            "rowCount" : 72341976,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (c_customer_sk#5304 = ws_bill_customer_sk#5325) "
          },
          "49" : {
            "sign" : 1101250294,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 141696,
            "rowCount" : 576,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(d_year#4565) AND (d_year#4565 = 2001)) AND isnotnull(d_date_sk#4559)) "
          },
          "6" : {
            "sign" : -873620600,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 65919588120096463082441673515574985432664824685454,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (customer_id#2821 = customer_id#2841) "
          },
          "36" : {
            "sign" : 716423558,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#4240, d_date_id#4241, d_date#4242, d_month_seq#4243, d_week_seq#4244, d_quarter_seq#4245, d_year#4246, d_dow#4247, d_moy#4248, d_dom#4249, d_qoy#4250, d_fy_year#4251, d_fy_quarter_seq#4252, d_fy_week_seq#4253, d_day_name#4254, d_quarter_name#4255, d_holiday#4256, d_weekend#4257, d_following_holiday#4258, d_first_dom#4259, d_last_dom#4260, d_same_day_ly#4261, d_same_day_lq#4262, d_current_day#4263, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "1" : {
            "sign" : -84778995,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
            "sizeInBytes" : 100739912653706210381141873099992730822570229177654633445160,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) LocalLimit Arguments: 100 "
          },
          "39" : {
            "sign" : -157677074,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 7351185951,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(year_total#2839) AND (year_total#2839 > 0.000000)) "
          },
          "17" : {
            "sign" : 1011143928,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 5368955443320,
            "rowCount" : 95874204345,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#70 = d_date_sk#71) "
          },
          "25" : {
            "sign" : -1918321310,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 366000000,
            "rowCount" : 2000000,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [c_customer_sk#30, c_customer_id#31, c_first_name#38, c_last_name#39, c_preferred_cust_flag#40, c_birth_country#44, c_login#45, c_email_address#46], ShuffleQueryStage 1 "
          },
          "60" : {
            "sign" : 57807540,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 29800787536,
            "rowCount" : 143273017,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [cs_sold_time_sk#4764, cs_ship_date_sk#4765, cs_bill_customer_sk#4766, cs_bill_cdemo_sk#4767, cs_bill_hdemo_sk#4768, cs_bill_addr_sk#4769, cs_ship_customer_sk#4770, cs_ship_cdemo_sk#4771, cs_ship_hdemo_sk#4772, cs_ship_addr_sk#4773, cs_call_center_sk#4774, cs_catalog_page_sk#4775, cs_ship_mode_sk#4776, cs_warehouse_sk#4777, cs_item_sk#4778, cs_promo_sk#4779, cs_order_number#4780L, cs_quantity#4781, cs_wholesale_cost#4782, cs_list_price#4783, cs_sales_price#4784, cs_ext_discount_amt#4785, cs_ext_sales_price#4786, cs_ext_wholesale_cost#4787, ... 10 more fields], `spark_catalog`.`tpcds_100`.`catalog_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "14" : {
            "sign" : -510174001,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 59134449465,
            "rowCount" : 275043951,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_customer_id#31, c_first_name#38, c_last_name#39, c_preferred_cust_flag#40, c_birth_country#44, c_login#45, c_email_address#46, ss_ext_discount_amt#61, ss_ext_sales_price#62, ss_ext_wholesale_cost#63, ss_ext_list_price#64, d_year#77] "
          },
          "47" : {
            "sign" : 809132870,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 29800787536,
            "rowCount" : 143273017,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [cs_sold_time_sk#4525, cs_ship_date_sk#4526, cs_bill_customer_sk#4527, cs_bill_cdemo_sk#4528, cs_bill_hdemo_sk#4529, cs_bill_addr_sk#4530, cs_ship_customer_sk#4531, cs_ship_cdemo_sk#4532, cs_ship_hdemo_sk#4533, cs_ship_addr_sk#4534, cs_call_center_sk#4535, cs_catalog_page_sk#4536, cs_ship_mode_sk#4537, cs_warehouse_sk#4538, cs_item_sk#4539, cs_promo_sk#4540, cs_order_number#4541L, cs_quantity#4542, cs_wholesale_cost#4543, cs_list_price#4544, cs_sales_price#4545, cs_ext_discount_amt#4546, cs_ext_sales_price#4547, cs_ext_wholesale_cost#4548, ... 10 more fields], `spark_catalog`.`tpcds_100`.`catalog_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "31" : {
            "sign" : 1284024506,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 12608114544,
            "rowCount" : 262669053,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_customer_sk#4219, ss_ext_discount_amt#4230, ss_ext_sales_price#4231, ss_ext_wholesale_cost#4232, ss_ext_list_price#4233, ss_sold_date_sk#4239] "
          },
          "69" : {
            "sign" : 1297206025,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 16132260648,
            "rowCount" : 72341976,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (c_customer_sk#5065 = ws_bill_customer_sk#5086) "
          },
          "58" : {
            "sign" : -1816861388,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 6842707584,
            "rowCount" : 142556408,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_bill_customer_sk#4766, cs_ext_discount_amt#4785, cs_ext_sales_price#4786, cs_ext_wholesale_cost#4787, cs_ext_list_price#4788, cs_sold_date_sk#4797] "
          },
          "64" : {
            "sign" : 2123940294,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 9216,
            "rowCount" : 576,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#4798, d_year#4804], BroadcastQueryStage 10 "
          },
          "53" : {
            "sign" : 1919871983,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 7435110696,
            "rowCount" : 142982898,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [c_customer_id#4747, c_first_name#4754, c_last_name#4755, c_preferred_cust_flag#4756, c_birth_country#4760, c_login#4761, c_email_address#4762, d_year#4804], [c_customer_id#4747 AS customer_id#2970, sum(((((cs_ext_list_price#4788 - cs_ext_wholesale_cost#4787) - cs_ext_discount_amt#4785) + cs_ext_sales_price#4786) / 2)) AS year_total#2978] "
          },
          "42" : {
            "sign" : 571405896,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 31885186254,
            "rowCount" : 142982898,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (c_customer_sk#4507 = cs_bill_customer_sk#4527) "
          },
          "75" : {
            "sign" : -846204061,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 9216,
            "rowCount" : 576,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#5117, d_year#5123] "
          },
          "0" : {
            "sign" : -1760428532,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
            "sizeInBytes" : 8800,
            "rowCount" : 100,
            "isRuntime" : false,
            "predicate" : " (unknown) GlobalLimit Arguments: 100 "
          },
          "20" : {
            "sign" : -1587881534,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#48, ss_item_sk#49, ss_customer_sk#50, ss_cdemo_sk#51, ss_hdemo_sk#52, ss_addr_sk#53, ss_store_sk#54, ss_promo_sk#55, ss_ticket_number#56L, ss_quantity#57, ss_wholesale_cost#58, ss_list_price#59, ss_sales_price#60, ss_ext_discount_amt#61, ss_ext_sales_price#62, ss_ext_wholesale_cost#63, ss_ext_list_price#64, ss_ext_tax#65, ss_coupon_amt#66, ss_net_paid#67, ss_net_paid_inc_tax#68, ss_net_profit#69, ss_sold_date_sk#70], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "27" : {
            "sign" : -801146513,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 59134449465,
            "rowCount" : 275043951,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_customer_id#4200, c_first_name#4207, c_last_name#4208, c_preferred_cust_flag#4209, c_birth_country#4213, c_login#4214, c_email_address#4215, ss_ext_discount_amt#4230, ss_ext_sales_price#4231, ss_ext_wholesale_cost#4232, ss_ext_list_price#4233, d_year#4246] "
          },
          "70" : {
            "sign" : -221257370,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 1260837329520,
            "rowCount" : 26267444365,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_bill_customer_sk#5086, ws_ext_discount_amt#5104, ws_ext_sales_price#5105, ws_ext_wholesale_cost#5106, ws_ext_list_price#5107, d_year#5123] "
          },
          "2" : {
            "sign" : 2094105634,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 100739912653706210381141873099992730822570229177654633445160,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [customer_id#2950 ASC NULLS FIRST, customer_first_name#2951 ASC NULLS FIRST, customer_last_name#2952 ASC NULLS FIRST, customer_email_address#2956 ASC NULLS FIRST], true "
          },
          "86" : {
            "sign" : -569287716,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 14968845008,
            "rowCount" : 71965601,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(ws_bill_customer_sk#5325) AND isnotnull(ws_sold_date_sk#5355)) AND dynamicpruning#5499 [ws_sold_date_sk#5355]) "
          },
          "38" : {
            "sign" : -545469420,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 366000000,
            "rowCount" : 2000000,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [c_customer_sk#4199, c_customer_id#4200, c_first_name#4207, c_last_name#4208, c_preferred_cust_flag#4209, c_birth_country#4213, c_login#4214, c_email_address#4215], ShuffleQueryStage 4 "
          },
          "81" : {
            "sign" : 916806593,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 15553524840,
            "rowCount" : 72341976,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_customer_id#5305, c_first_name#5312, c_last_name#5313, c_preferred_cust_flag#5314, c_birth_country#5318, c_login#5319, c_email_address#5320, ws_ext_discount_amt#5343, ws_ext_sales_price#5344, ws_ext_wholesale_cost#5345, ws_ext_list_price#5346, d_year#5362] "
          },
          "92" : {
            "sign" : -149944874,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 366000000,
            "rowCount" : 2000000,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [c_customer_sk#5304, c_customer_id#5305, c_first_name#5312, c_last_name#5313, c_preferred_cust_flag#5314, c_birth_country#5318, c_login#5319, c_email_address#5320], ShuffleQueryStage 20 "
          },
          "18" : {
            "sign" : 721631770,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 12608114544,
            "rowCount" : 262669053,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_customer_sk#50, ss_ext_discount_amt#61, ss_ext_sales_price#62, ss_ext_wholesale_cost#63, ss_ext_list_price#64, ss_sold_date_sk#70] "
          },
          "30" : {
            "sign" : -16397631,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 14870272760,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#4239 = d_date_sk#4240) "
          },
          "7" : {
            "sign" : 1702621154,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 17723553664095822280302661563241548660022,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [customer_id#2821, customer_id#2950, customer_first_name#2951, customer_last_name#2952, customer_email_address#2956, year_total#2839, year_total#2978] "
          },
          "29" : {
            "sign" : 1182842860,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 12745948080,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_customer_sk#4219, ss_ext_discount_amt#4230, ss_ext_sales_price#4231, ss_ext_wholesale_cost#4232, ss_ext_list_price#4233, d_year#4246] "
          },
          "41" : {
            "sign" : -1706525105,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 30741323070,
            "rowCount" : 142982898,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_customer_id#4508, c_first_name#4515, c_last_name#4516, c_preferred_cust_flag#4517, c_birth_country#4521, c_login#4522, c_email_address#4523, cs_ext_discount_amt#4546, cs_ext_sales_price#4547, cs_ext_wholesale_cost#4548, cs_ext_list_price#4549, d_year#4565] "
          },
          "63" : {
            "sign" : 1473649974,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#4798, d_date_id#4799, d_date#4800, d_month_seq#4801, d_week_seq#4802, d_quarter_seq#4803, d_year#4804, d_dow#4805, d_moy#4806, d_dom#4807, d_qoy#4808, d_fy_year#4809, d_fy_quarter_seq#4810, d_fy_week_seq#4811, d_day_name#4812, d_quarter_name#4813, d_holiday#4814, d_weekend#4815, d_following_holiday#4816, d_first_dom#4817, d_last_dom#4818, d_same_day_ly#4819, d_same_day_lq#4820, d_current_day#4821, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "3" : {
            "sign" : -1293007411,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 100739912653706210381141873099992730822570229177654633445160,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [customer_id#2950, customer_first_name#2951, customer_last_name#2952, customer_email_address#2956] "
          },
          "74" : {
            "sign" : -1949700921,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 14972593792,
            "rowCount" : 71983624,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ws_sold_time_sk#5083, ws_ship_date_sk#5084, ws_item_sk#5085, ws_bill_customer_sk#5086, ws_bill_cdemo_sk#5087, ws_bill_hdemo_sk#5088, ws_bill_addr_sk#5089, ws_ship_customer_sk#5090, ws_ship_cdemo_sk#5091, ws_ship_hdemo_sk#5092, ws_ship_addr_sk#5093, ws_web_page_sk#5094, ws_web_site_sk#5095, ws_ship_mode_sk#5096, ws_warehouse_sk#5097, ws_promo_sk#5098, ws_order_number#5099L, ws_quantity#5100, ws_wholesale_cost#5101, ws_list_price#5102, ws_sales_price#5103, ws_ext_discount_amt#5104, ws_ext_sales_price#5105, ws_ext_wholesale_cost#5106, ... 10 more fields], `spark_catalog`.`tpcds_100`.`web_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "91" : {
            "sign" : -907407597,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 9216,
            "rowCount" : 576,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#5356, d_year#5362], BroadcastQueryStage 18 "
          },
          "52" : {
            "sign" : -268161914,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 366000000,
            "rowCount" : 2000000,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [c_customer_sk#4507, c_customer_id#4508, c_first_name#4515, c_last_name#4516, c_preferred_cust_flag#4517, c_birth_country#4521, c_login#4522, c_email_address#4523], ShuffleQueryStage 8 "
          },
          "85" : {
            "sign" : -2087510487,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 3454348848,
            "rowCount" : 71965601,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_bill_customer_sk#5325, ws_ext_discount_amt#5343, ws_ext_sales_price#5344, ws_ext_wholesale_cost#5345, ws_ext_list_price#5346, ws_sold_date_sk#5355] "
          },
          "28" : {
            "sign" : -2143420355,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 61334801073,
            "rowCount" : 275043951,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (c_customer_sk#4199 = ss_customer_sk#4219) "
          }
        },
        "links" : [ {
          "fromId" : 20,
          "fromName" : "LogicalRelation",
          "toId" : 19,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 23,
          "fromName" : "LogicalRelation",
          "toId" : 22,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 22,
          "fromName" : "Filter",
          "toId" : 21,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 21,
          "fromName" : "Project",
          "toId" : 19,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 19,
          "fromName" : "Filter",
          "toId" : 18,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 18,
          "fromName" : "Project",
          "toId" : 17,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 24,
          "fromName" : "LogicalQueryStage",
          "toId" : 17,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 17,
          "fromName" : "Join",
          "toId" : 16,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 16,
          "fromName" : "Project",
          "toId" : 15,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 25,
          "fromName" : "LogicalQueryStage",
          "toId" : 15,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 15,
          "fromName" : "Join",
          "toId" : 14,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 14,
          "fromName" : "Project",
          "toId" : 13,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 13,
          "fromName" : "Aggregate",
          "toId" : 12,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 12,
          "fromName" : "Filter",
          "toId" : 11,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 33,
          "fromName" : "LogicalRelation",
          "toId" : 32,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 36,
          "fromName" : "LogicalRelation",
          "toId" : 35,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 35,
          "fromName" : "Filter",
          "toId" : 34,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 34,
          "fromName" : "Project",
          "toId" : 32,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 32,
          "fromName" : "Filter",
          "toId" : 31,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 31,
          "fromName" : "Project",
          "toId" : 30,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 37,
          "fromName" : "LogicalQueryStage",
          "toId" : 30,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 30,
          "fromName" : "Join",
          "toId" : 29,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 29,
          "fromName" : "Project",
          "toId" : 28,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 38,
          "fromName" : "LogicalQueryStage",
          "toId" : 28,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 28,
          "fromName" : "Join",
          "toId" : 27,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 27,
          "fromName" : "Project",
          "toId" : 26,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 26,
          "fromName" : "Aggregate",
          "toId" : 11,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "Join",
          "toId" : 10,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 47,
          "fromName" : "LogicalRelation",
          "toId" : 46,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 50,
          "fromName" : "LogicalRelation",
          "toId" : 49,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 49,
          "fromName" : "Filter",
          "toId" : 48,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 48,
          "fromName" : "Project",
          "toId" : 46,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 46,
          "fromName" : "Filter",
          "toId" : 45,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 45,
          "fromName" : "Project",
          "toId" : 44,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 51,
          "fromName" : "LogicalQueryStage",
          "toId" : 44,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 44,
          "fromName" : "Join",
          "toId" : 43,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 43,
          "fromName" : "Project",
          "toId" : 42,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 52,
          "fromName" : "LogicalQueryStage",
          "toId" : 42,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 42,
          "fromName" : "Join",
          "toId" : 41,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 41,
          "fromName" : "Project",
          "toId" : 40,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 40,
          "fromName" : "Aggregate",
          "toId" : 39,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 39,
          "fromName" : "Filter",
          "toId" : 10,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "Join",
          "toId" : 9,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "Project",
          "toId" : 8,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 60,
          "fromName" : "LogicalRelation",
          "toId" : 59,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 63,
          "fromName" : "LogicalRelation",
          "toId" : 62,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 62,
          "fromName" : "Filter",
          "toId" : 61,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 61,
          "fromName" : "Project",
          "toId" : 59,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 59,
          "fromName" : "Filter",
          "toId" : 58,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 58,
          "fromName" : "Project",
          "toId" : 57,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 64,
          "fromName" : "LogicalQueryStage",
          "toId" : 57,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 57,
          "fromName" : "Join",
          "toId" : 56,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 56,
          "fromName" : "Project",
          "toId" : 55,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 65,
          "fromName" : "LogicalQueryStage",
          "toId" : 55,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 55,
          "fromName" : "Join",
          "toId" : 54,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 54,
          "fromName" : "Project",
          "toId" : 53,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 53,
          "fromName" : "Aggregate",
          "toId" : 8,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "Join",
          "toId" : 7,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Project",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 74,
          "fromName" : "LogicalRelation",
          "toId" : 73,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 77,
          "fromName" : "LogicalRelation",
          "toId" : 76,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 76,
          "fromName" : "Filter",
          "toId" : 75,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 75,
          "fromName" : "Project",
          "toId" : 73,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 73,
          "fromName" : "Filter",
          "toId" : 72,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 72,
          "fromName" : "Project",
          "toId" : 71,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 78,
          "fromName" : "LogicalQueryStage",
          "toId" : 71,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 71,
          "fromName" : "Join",
          "toId" : 70,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 70,
          "fromName" : "Project",
          "toId" : 69,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 79,
          "fromName" : "LogicalQueryStage",
          "toId" : 69,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 69,
          "fromName" : "Join",
          "toId" : 68,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 68,
          "fromName" : "Project",
          "toId" : 67,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 67,
          "fromName" : "Aggregate",
          "toId" : 66,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 66,
          "fromName" : "Filter",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Join",
          "toId" : 5,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Project",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 87,
          "fromName" : "LogicalRelation",
          "toId" : 86,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 90,
          "fromName" : "LogicalRelation",
          "toId" : 89,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 89,
          "fromName" : "Filter",
          "toId" : 88,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 88,
          "fromName" : "Project",
          "toId" : 86,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 86,
          "fromName" : "Filter",
          "toId" : 85,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 85,
          "fromName" : "Project",
          "toId" : 84,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 91,
          "fromName" : "LogicalQueryStage",
          "toId" : 84,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 84,
          "fromName" : "Join",
          "toId" : 83,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 83,
          "fromName" : "Project",
          "toId" : 82,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 92,
          "fromName" : "LogicalQueryStage",
          "toId" : 82,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 82,
          "fromName" : "Join",
          "toId" : 81,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 81,
          "fromName" : "Project",
          "toId" : 80,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 80,
          "fromName" : "Aggregate",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Join",
          "toId" : 3,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Project",
          "toId" : 2,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "LocalLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "LocalLimit",
          "toId" : 0,
          "toName" : "GlobalLimit",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [customer_id#2950 ASC NULLS FIRST, customer_first_name#2951 ASC NULLS FIRST, customer_last_name#2952 ASC NULLS FIRST, customer_email_address#2956 ASC NULLS FIRST], true\n      +- Project [customer_id#2950, customer_first_name#2951, customer_last_name#2952, customer_email_address#2956]\n         +- Join Inner, ((customer_id#2821 = customer_id#2990) AND (CASE WHEN (year_total#2839 > 0.000000) THEN (year_total#2978 / year_total#2839) END > CASE WHEN (year_total#2849 > 0.000000) THEN (year_total#2998 / year_total#2849) END))\n            :- Project [customer_id#2821, customer_id#2950, customer_first_name#2951, customer_last_name#2952, customer_email_address#2956, year_total#2839, year_total#2978, year_total#2849]\n            :  +- Join Inner, (customer_id#2821 = customer_id#2841)\n            :     :- Project [customer_id#2821, customer_id#2950, customer_first_name#2951, customer_last_name#2952, customer_email_address#2956, year_total#2839, year_total#2978]\n            :     :  +- Join Inner, ((customer_id#2821 = customer_id#2970) AND (CASE WHEN (year_total#2839 > 0.000000) THEN (year_total#2978 / year_total#2839) END > CASE WHEN (year_total#2829 > 0.000000) THEN (year_total#2958 / year_total#2829) END))\n            :     :     :- Project [customer_id#2821, year_total#2829, customer_id#2950, customer_first_name#2951, customer_last_name#2952, customer_email_address#2956, year_total#2958, year_total#2839]\n            :     :     :  +- Join Inner, (customer_id#2821 = customer_id#2831)\n            :     :     :     :- Join Inner, (customer_id#2950 = customer_id#2821)\n            :     :     :     :  :- Filter (isnotnull(year_total#2829) AND (year_total#2829 > 0.000000))\n            :     :     :     :  :  +- Aggregate [c_customer_id#31, c_first_name#38, c_last_name#39, c_preferred_cust_flag#40, c_birth_country#44, c_login#45, c_email_address#46, d_year#77], [c_customer_id#31 AS customer_id#2821, sum(((((ss_ext_list_price#64 - ss_ext_wholesale_cost#63) - ss_ext_discount_amt#61) + ss_ext_sales_price#62) / 2)) AS year_total#2829]\n            :     :     :     :  :     +- Project [c_customer_id#31, c_first_name#38, c_last_name#39, c_preferred_cust_flag#40, c_birth_country#44, c_login#45, c_email_address#46, ss_ext_discount_amt#61, ss_ext_sales_price#62, ss_ext_wholesale_cost#63, ss_ext_list_price#64, d_year#77]\n            :     :     :     :  :        +- Join Inner, (c_customer_sk#30 = ss_customer_sk#50)\n            :     :     :     :  :           :- Project [ss_customer_sk#50, ss_ext_discount_amt#61, ss_ext_sales_price#62, ss_ext_wholesale_cost#63, ss_ext_list_price#64, d_year#77]\n            :     :     :     :  :           :  +- Join Inner, (ss_sold_date_sk#70 = d_date_sk#71)\n            :     :     :     :  :           :     :- Project [ss_customer_sk#50, ss_ext_discount_amt#61, ss_ext_sales_price#62, ss_ext_wholesale_cost#63, ss_ext_list_price#64, ss_sold_date_sk#70]\n            :     :     :     :  :           :     :  +- Filter ((isnotnull(ss_customer_sk#50) AND isnotnull(ss_sold_date_sk#70)) AND dynamicpruning#5494 [ss_sold_date_sk#70])\n            :     :     :     :  :           :     :     :  +- Project [d_date_sk#71, d_year#77]\n            :     :     :     :  :           :     :     :     +- Filter ((isnotnull(d_year#77) AND (d_year#77 = 2001)) AND isnotnull(d_date_sk#71))\n            :     :     :     :  :           :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#71,d_date_id#72,d_date#73,d_month_seq#74,d_week_seq#75,d_quarter_seq#76,d_year#77,d_dow#78,d_moy#79,d_dom#80,d_qoy#81,d_fy_year#82,d_fy_quarter_seq#83,d_fy_week_seq#84,d_day_name#85,d_quarter_name#86,d_holiday#87,d_weekend#88,d_following_holiday#89,d_first_dom#90,d_last_dom#91,d_same_day_ly#92,d_same_day_lq#93,d_current_day#94,... 4 more fields] parquet\n            :     :     :     :  :           :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#48,ss_item_sk#49,ss_customer_sk#50,ss_cdemo_sk#51,ss_hdemo_sk#52,ss_addr_sk#53,ss_store_sk#54,ss_promo_sk#55,ss_ticket_number#56L,ss_quantity#57,ss_wholesale_cost#58,ss_list_price#59,ss_sales_price#60,ss_ext_discount_amt#61,ss_ext_sales_price#62,ss_ext_wholesale_cost#63,ss_ext_list_price#64,ss_ext_tax#65,ss_coupon_amt#66,ss_net_paid#67,ss_net_paid_inc_tax#68,ss_net_profit#69,ss_sold_date_sk#70] parquet\n            :     :     :     :  :           :     +- LogicalQueryStage Project [d_date_sk#71, d_year#77], BroadcastQueryStage 0\n            :     :     :     :  :           +- LogicalQueryStage Project [c_customer_sk#30, c_customer_id#31, c_first_name#38, c_last_name#39, c_preferred_cust_flag#40, c_birth_country#44, c_login#45, c_email_address#46], ShuffleQueryStage 1\n            :     :     :     :  +- Aggregate [c_customer_id#4200, c_first_name#4207, c_last_name#4208, c_preferred_cust_flag#4209, c_birth_country#4213, c_login#4214, c_email_address#4215, d_year#4246], [c_customer_id#4200 AS customer_id#2950, c_first_name#4207 AS customer_first_name#2951, c_last_name#4208 AS customer_last_name#2952, c_email_address#4215 AS customer_email_address#2956, sum(((((ss_ext_list_price#4233 - ss_ext_wholesale_cost#4232) - ss_ext_discount_amt#4230) + ss_ext_sales_price#4231) / 2)) AS year_total#2958]\n            :     :     :     :     +- Project [c_customer_id#4200, c_first_name#4207, c_last_name#4208, c_preferred_cust_flag#4209, c_birth_country#4213, c_login#4214, c_email_address#4215, ss_ext_discount_amt#4230, ss_ext_sales_price#4231, ss_ext_wholesale_cost#4232, ss_ext_list_price#4233, d_year#4246]\n            :     :     :     :        +- Join Inner, (c_customer_sk#4199 = ss_customer_sk#4219)\n            :     :     :     :           :- Project [ss_customer_sk#4219, ss_ext_discount_amt#4230, ss_ext_sales_price#4231, ss_ext_wholesale_cost#4232, ss_ext_list_price#4233, d_year#4246]\n            :     :     :     :           :  +- Join Inner, (ss_sold_date_sk#4239 = d_date_sk#4240)\n            :     :     :     :           :     :- Project [ss_customer_sk#4219, ss_ext_discount_amt#4230, ss_ext_sales_price#4231, ss_ext_wholesale_cost#4232, ss_ext_list_price#4233, ss_sold_date_sk#4239]\n            :     :     :     :           :     :  +- Filter ((isnotnull(ss_customer_sk#4219) AND isnotnull(ss_sold_date_sk#4239)) AND dynamicpruning#5495 [ss_sold_date_sk#4239])\n            :     :     :     :           :     :     :  +- Project [d_date_sk#4240, d_year#4246]\n            :     :     :     :           :     :     :     +- Filter ((isnotnull(d_year#4246) AND (d_year#4246 = 2002)) AND isnotnull(d_date_sk#4240))\n            :     :     :     :           :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#4240,d_date_id#4241,d_date#4242,d_month_seq#4243,d_week_seq#4244,d_quarter_seq#4245,d_year#4246,d_dow#4247,d_moy#4248,d_dom#4249,d_qoy#4250,d_fy_year#4251,d_fy_quarter_seq#4252,d_fy_week_seq#4253,d_day_name#4254,d_quarter_name#4255,d_holiday#4256,d_weekend#4257,d_following_holiday#4258,d_first_dom#4259,d_last_dom#4260,d_same_day_ly#4261,d_same_day_lq#4262,d_current_day#4263,... 4 more fields] parquet\n            :     :     :     :           :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#4217,ss_item_sk#4218,ss_customer_sk#4219,ss_cdemo_sk#4220,ss_hdemo_sk#4221,ss_addr_sk#4222,ss_store_sk#4223,ss_promo_sk#4224,ss_ticket_number#4225L,ss_quantity#4226,ss_wholesale_cost#4227,ss_list_price#4228,ss_sales_price#4229,ss_ext_discount_amt#4230,ss_ext_sales_price#4231,ss_ext_wholesale_cost#4232,ss_ext_list_price#4233,ss_ext_tax#4234,ss_coupon_amt#4235,ss_net_paid#4236,ss_net_paid_inc_tax#4237,ss_net_profit#4238,ss_sold_date_sk#4239] parquet\n            :     :     :     :           :     +- LogicalQueryStage Project [d_date_sk#4240, d_year#4246], BroadcastQueryStage 2\n            :     :     :     :           +- LogicalQueryStage Project [c_customer_sk#4199, c_customer_id#4200, c_first_name#4207, c_last_name#4208, c_preferred_cust_flag#4209, c_birth_country#4213, c_login#4214, c_email_address#4215], ShuffleQueryStage 4\n            :     :     :     +- Filter (isnotnull(year_total#2839) AND (year_total#2839 > 0.000000))\n            :     :     :        +- Aggregate [c_customer_id#4508, c_first_name#4515, c_last_name#4516, c_preferred_cust_flag#4517, c_birth_country#4521, c_login#4522, c_email_address#4523, d_year#4565], [c_customer_id#4508 AS customer_id#2831, sum(((((cs_ext_list_price#4549 - cs_ext_wholesale_cost#4548) - cs_ext_discount_amt#4546) + cs_ext_sales_price#4547) / 2)) AS year_total#2839]\n            :     :     :           +- Project [c_customer_id#4508, c_first_name#4515, c_last_name#4516, c_preferred_cust_flag#4517, c_birth_country#4521, c_login#4522, c_email_address#4523, cs_ext_discount_amt#4546, cs_ext_sales_price#4547, cs_ext_wholesale_cost#4548, cs_ext_list_price#4549, d_year#4565]\n            :     :     :              +- Join Inner, (c_customer_sk#4507 = cs_bill_customer_sk#4527)\n            :     :     :                 :- Project [cs_bill_customer_sk#4527, cs_ext_discount_amt#4546, cs_ext_sales_price#4547, cs_ext_wholesale_cost#4548, cs_ext_list_price#4549, d_year#4565]\n            :     :     :                 :  +- Join Inner, (cs_sold_date_sk#4558 = d_date_sk#4559)\n            :     :     :                 :     :- Project [cs_bill_customer_sk#4527, cs_ext_discount_amt#4546, cs_ext_sales_price#4547, cs_ext_wholesale_cost#4548, cs_ext_list_price#4549, cs_sold_date_sk#4558]\n            :     :     :                 :     :  +- Filter ((isnotnull(cs_bill_customer_sk#4527) AND isnotnull(cs_sold_date_sk#4558)) AND dynamicpruning#5496 [cs_sold_date_sk#4558])\n            :     :     :                 :     :     :  +- Project [d_date_sk#4559, d_year#4565]\n            :     :     :                 :     :     :     +- Filter ((isnotnull(d_year#4565) AND (d_year#4565 = 2001)) AND isnotnull(d_date_sk#4559))\n            :     :     :                 :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#4559,d_date_id#4560,d_date#4561,d_month_seq#4562,d_week_seq#4563,d_quarter_seq#4564,d_year#4565,d_dow#4566,d_moy#4567,d_dom#4568,d_qoy#4569,d_fy_year#4570,d_fy_quarter_seq#4571,d_fy_week_seq#4572,d_day_name#4573,d_quarter_name#4574,d_holiday#4575,d_weekend#4576,d_following_holiday#4577,d_first_dom#4578,d_last_dom#4579,d_same_day_ly#4580,d_same_day_lq#4581,d_current_day#4582,... 4 more fields] parquet\n            :     :     :                 :     :     +- Relation spark_catalog.tpcds_100.catalog_sales[cs_sold_time_sk#4525,cs_ship_date_sk#4526,cs_bill_customer_sk#4527,cs_bill_cdemo_sk#4528,cs_bill_hdemo_sk#4529,cs_bill_addr_sk#4530,cs_ship_customer_sk#4531,cs_ship_cdemo_sk#4532,cs_ship_hdemo_sk#4533,cs_ship_addr_sk#4534,cs_call_center_sk#4535,cs_catalog_page_sk#4536,cs_ship_mode_sk#4537,cs_warehouse_sk#4538,cs_item_sk#4539,cs_promo_sk#4540,cs_order_number#4541L,cs_quantity#4542,cs_wholesale_cost#4543,cs_list_price#4544,cs_sales_price#4545,cs_ext_discount_amt#4546,cs_ext_sales_price#4547,cs_ext_wholesale_cost#4548,... 10 more fields] parquet\n            :     :     :                 :     +- LogicalQueryStage Project [d_date_sk#4559, d_year#4565], BroadcastQueryStage 6\n            :     :     :                 +- LogicalQueryStage Project [c_customer_sk#4507, c_customer_id#4508, c_first_name#4515, c_last_name#4516, c_preferred_cust_flag#4517, c_birth_country#4521, c_login#4522, c_email_address#4523], ShuffleQueryStage 8\n            :     :     +- Aggregate [c_customer_id#4747, c_first_name#4754, c_last_name#4755, c_preferred_cust_flag#4756, c_birth_country#4760, c_login#4761, c_email_address#4762, d_year#4804], [c_customer_id#4747 AS customer_id#2970, sum(((((cs_ext_list_price#4788 - cs_ext_wholesale_cost#4787) - cs_ext_discount_amt#4785) + cs_ext_sales_price#4786) / 2)) AS year_total#2978]\n            :     :        +- Project [c_customer_id#4747, c_first_name#4754, c_last_name#4755, c_preferred_cust_flag#4756, c_birth_country#4760, c_login#4761, c_email_address#4762, cs_ext_discount_amt#4785, cs_ext_sales_price#4786, cs_ext_wholesale_cost#4787, cs_ext_list_price#4788, d_year#4804]\n            :     :           +- Join Inner, (c_customer_sk#4746 = cs_bill_customer_sk#4766)\n            :     :              :- Project [cs_bill_customer_sk#4766, cs_ext_discount_amt#4785, cs_ext_sales_price#4786, cs_ext_wholesale_cost#4787, cs_ext_list_price#4788, d_year#4804]\n            :     :              :  +- Join Inner, (cs_sold_date_sk#4797 = d_date_sk#4798)\n            :     :              :     :- Project [cs_bill_customer_sk#4766, cs_ext_discount_amt#4785, cs_ext_sales_price#4786, cs_ext_wholesale_cost#4787, cs_ext_list_price#4788, cs_sold_date_sk#4797]\n            :     :              :     :  +- Filter ((isnotnull(cs_bill_customer_sk#4766) AND isnotnull(cs_sold_date_sk#4797)) AND dynamicpruning#5497 [cs_sold_date_sk#4797])\n            :     :              :     :     :  +- Project [d_date_sk#4798, d_year#4804]\n            :     :              :     :     :     +- Filter ((isnotnull(d_year#4804) AND (d_year#4804 = 2002)) AND isnotnull(d_date_sk#4798))\n            :     :              :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#4798,d_date_id#4799,d_date#4800,d_month_seq#4801,d_week_seq#4802,d_quarter_seq#4803,d_year#4804,d_dow#4805,d_moy#4806,d_dom#4807,d_qoy#4808,d_fy_year#4809,d_fy_quarter_seq#4810,d_fy_week_seq#4811,d_day_name#4812,d_quarter_name#4813,d_holiday#4814,d_weekend#4815,d_following_holiday#4816,d_first_dom#4817,d_last_dom#4818,d_same_day_ly#4819,d_same_day_lq#4820,d_current_day#4821,... 4 more fields] parquet\n            :     :              :     :     +- Relation spark_catalog.tpcds_100.catalog_sales[cs_sold_time_sk#4764,cs_ship_date_sk#4765,cs_bill_customer_sk#4766,cs_bill_cdemo_sk#4767,cs_bill_hdemo_sk#4768,cs_bill_addr_sk#4769,cs_ship_customer_sk#4770,cs_ship_cdemo_sk#4771,cs_ship_hdemo_sk#4772,cs_ship_addr_sk#4773,cs_call_center_sk#4774,cs_catalog_page_sk#4775,cs_ship_mode_sk#4776,cs_warehouse_sk#4777,cs_item_sk#4778,cs_promo_sk#4779,cs_order_number#4780L,cs_quantity#4781,cs_wholesale_cost#4782,cs_list_price#4783,cs_sales_price#4784,cs_ext_discount_amt#4785,cs_ext_sales_price#4786,cs_ext_wholesale_cost#4787,... 10 more fields] parquet\n            :     :              :     +- LogicalQueryStage Project [d_date_sk#4798, d_year#4804], BroadcastQueryStage 10\n            :     :              +- LogicalQueryStage Project [c_customer_sk#4746, c_customer_id#4747, c_first_name#4754, c_last_name#4755, c_preferred_cust_flag#4756, c_birth_country#4760, c_login#4761, c_email_address#4762], ShuffleQueryStage 12\n            :     +- Filter (isnotnull(year_total#2849) AND (year_total#2849 > 0.000000))\n            :        +- Aggregate [c_customer_id#5066, c_first_name#5073, c_last_name#5074, c_preferred_cust_flag#5075, c_birth_country#5079, c_login#5080, c_email_address#5081, d_year#5123], [c_customer_id#5066 AS customer_id#2841, sum(((((ws_ext_list_price#5107 - ws_ext_wholesale_cost#5106) - ws_ext_discount_amt#5104) + ws_ext_sales_price#5105) / 2)) AS year_total#2849]\n            :           +- Project [c_customer_id#5066, c_first_name#5073, c_last_name#5074, c_preferred_cust_flag#5075, c_birth_country#5079, c_login#5080, c_email_address#5081, ws_ext_discount_amt#5104, ws_ext_sales_price#5105, ws_ext_wholesale_cost#5106, ws_ext_list_price#5107, d_year#5123]\n            :              +- Join Inner, (c_customer_sk#5065 = ws_bill_customer_sk#5086)\n            :                 :- Project [ws_bill_customer_sk#5086, ws_ext_discount_amt#5104, ws_ext_sales_price#5105, ws_ext_wholesale_cost#5106, ws_ext_list_price#5107, d_year#5123]\n            :                 :  +- Join Inner, (ws_sold_date_sk#5116 = d_date_sk#5117)\n            :                 :     :- Project [ws_bill_customer_sk#5086, ws_ext_discount_amt#5104, ws_ext_sales_price#5105, ws_ext_wholesale_cost#5106, ws_ext_list_price#5107, ws_sold_date_sk#5116]\n            :                 :     :  +- Filter ((isnotnull(ws_bill_customer_sk#5086) AND isnotnull(ws_sold_date_sk#5116)) AND dynamicpruning#5498 [ws_sold_date_sk#5116])\n            :                 :     :     :  +- Project [d_date_sk#5117, d_year#5123]\n            :                 :     :     :     +- Filter ((isnotnull(d_year#5123) AND (d_year#5123 = 2001)) AND isnotnull(d_date_sk#5117))\n            :                 :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#5117,d_date_id#5118,d_date#5119,d_month_seq#5120,d_week_seq#5121,d_quarter_seq#5122,d_year#5123,d_dow#5124,d_moy#5125,d_dom#5126,d_qoy#5127,d_fy_year#5128,d_fy_quarter_seq#5129,d_fy_week_seq#5130,d_day_name#5131,d_quarter_name#5132,d_holiday#5133,d_weekend#5134,d_following_holiday#5135,d_first_dom#5136,d_last_dom#5137,d_same_day_ly#5138,d_same_day_lq#5139,d_current_day#5140,... 4 more fields] parquet\n            :                 :     :     +- Relation spark_catalog.tpcds_100.web_sales[ws_sold_time_sk#5083,ws_ship_date_sk#5084,ws_item_sk#5085,ws_bill_customer_sk#5086,ws_bill_cdemo_sk#5087,ws_bill_hdemo_sk#5088,ws_bill_addr_sk#5089,ws_ship_customer_sk#5090,ws_ship_cdemo_sk#5091,ws_ship_hdemo_sk#5092,ws_ship_addr_sk#5093,ws_web_page_sk#5094,ws_web_site_sk#5095,ws_ship_mode_sk#5096,ws_warehouse_sk#5097,ws_promo_sk#5098,ws_order_number#5099L,ws_quantity#5100,ws_wholesale_cost#5101,ws_list_price#5102,ws_sales_price#5103,ws_ext_discount_amt#5104,ws_ext_sales_price#5105,ws_ext_wholesale_cost#5106,... 10 more fields] parquet\n            :                 :     +- LogicalQueryStage Project [d_date_sk#5117, d_year#5123], BroadcastQueryStage 14\n            :                 +- LogicalQueryStage Project [c_customer_sk#5065, c_customer_id#5066, c_first_name#5073, c_last_name#5074, c_preferred_cust_flag#5075, c_birth_country#5079, c_login#5080, c_email_address#5081], ShuffleQueryStage 16\n            +- Aggregate [c_customer_id#5305, c_first_name#5312, c_last_name#5313, c_preferred_cust_flag#5314, c_birth_country#5318, c_login#5319, c_email_address#5320, d_year#5362], [c_customer_id#5305 AS customer_id#2990, sum(((((ws_ext_list_price#5346 - ws_ext_wholesale_cost#5345) - ws_ext_discount_amt#5343) + ws_ext_sales_price#5344) / 2)) AS year_total#2998]\n               +- Project [c_customer_id#5305, c_first_name#5312, c_last_name#5313, c_preferred_cust_flag#5314, c_birth_country#5318, c_login#5319, c_email_address#5320, ws_ext_discount_amt#5343, ws_ext_sales_price#5344, ws_ext_wholesale_cost#5345, ws_ext_list_price#5346, d_year#5362]\n                  +- Join Inner, (c_customer_sk#5304 = ws_bill_customer_sk#5325)\n                     :- Project [ws_bill_customer_sk#5325, ws_ext_discount_amt#5343, ws_ext_sales_price#5344, ws_ext_wholesale_cost#5345, ws_ext_list_price#5346, d_year#5362]\n                     :  +- Join Inner, (ws_sold_date_sk#5355 = d_date_sk#5356)\n                     :     :- Project [ws_bill_customer_sk#5325, ws_ext_discount_amt#5343, ws_ext_sales_price#5344, ws_ext_wholesale_cost#5345, ws_ext_list_price#5346, ws_sold_date_sk#5355]\n                     :     :  +- Filter ((isnotnull(ws_bill_customer_sk#5325) AND isnotnull(ws_sold_date_sk#5355)) AND dynamicpruning#5499 [ws_sold_date_sk#5355])\n                     :     :     :  +- Project [d_date_sk#5356, d_year#5362]\n                     :     :     :     +- Filter ((isnotnull(d_year#5362) AND (d_year#5362 = 2002)) AND isnotnull(d_date_sk#5356))\n                     :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#5356,d_date_id#5357,d_date#5358,d_month_seq#5359,d_week_seq#5360,d_quarter_seq#5361,d_year#5362,d_dow#5363,d_moy#5364,d_dom#5365,d_qoy#5366,d_fy_year#5367,d_fy_quarter_seq#5368,d_fy_week_seq#5369,d_day_name#5370,d_quarter_name#5371,d_holiday#5372,d_weekend#5373,d_following_holiday#5374,d_first_dom#5375,d_last_dom#5376,d_same_day_ly#5377,d_same_day_lq#5378,d_current_day#5379,... 4 more fields] parquet\n                     :     :     +- Relation spark_catalog.tpcds_100.web_sales[ws_sold_time_sk#5322,ws_ship_date_sk#5323,ws_item_sk#5324,ws_bill_customer_sk#5325,ws_bill_cdemo_sk#5326,ws_bill_hdemo_sk#5327,ws_bill_addr_sk#5328,ws_ship_customer_sk#5329,ws_ship_cdemo_sk#5330,ws_ship_hdemo_sk#5331,ws_ship_addr_sk#5332,ws_web_page_sk#5333,ws_web_site_sk#5334,ws_ship_mode_sk#5335,ws_warehouse_sk#5336,ws_promo_sk#5337,ws_order_number#5338L,ws_quantity#5339,ws_wholesale_cost#5340,ws_list_price#5341,ws_sales_price#5342,ws_ext_discount_amt#5343,ws_ext_sales_price#5344,ws_ext_wholesale_cost#5345,... 10 more fields] parquet\n                     :     +- LogicalQueryStage Project [d_date_sk#5356, d_year#5362], BroadcastQueryStage 18\n                     +- LogicalQueryStage Project [c_customer_sk#5304, c_customer_id#5305, c_first_name#5312, c_last_name#5313, c_preferred_cust_flag#5314, c_birth_country#5318, c_login#5319, c_email_address#5320], ShuffleQueryStage 20\n"
      },
      "IM" : {
        "inputSizeInBytes" : 175359732104,
        "inputRowCount" : 992606811
      },
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 3,
        "FinishedTasksNum" : 13,
        "FinishedTasksTotalTimeInMs" : 18486.0,
        "FinishedTasksDistributionInMs" : [ 1193.0, 1333.0, 1396.0, 1494.0, 1707.0 ]
      },
      "StartTimeInMs" : 1702226514929,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 53749,
        "IOBytes" : {
          "Total" : 14441863667,
          "Details" : {
            "IR" : 3122746217,
            "IW" : 0,
            "SR" : 6038854810,
            "SW" : 5280262640
          }
        }
      }
    },
    "17" : {
      "LQP" : {
        "operators" : {
          "12" : {
            "sign" : -1458191872,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 101735088,
            "rowCount" : 1816698,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Filter (isnotnull(year_total#2829) AND (year_total#2829 > 0.000000)), ShuffleQueryStage 33 "
          },
          "8" : {
            "sign" : -1884134972,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 25088456347714779868285693974900,
            "rowCount" : 111504250434287910525714195444,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, ((customer_id#2821 = customer_id#2970) AND (CASE WHEN (year_total#2839 > 0.000000) THEN (year_total#2978 / year_total#2839) END > CASE WHEN (year_total#2829 > 0.000000) THEN (year_total#2958 / year_total#2829) END)) "
          },
          "4" : {
            "sign" : -1967237978,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 1609037154020639146780312868861114048066512800,
            "rowCount" : 7151276240091729541245834972716062435851168,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, ((customer_id#2821 = customer_id#2990) AND (CASE WHEN (year_total#2839 > 0.000000) THEN (year_total#2978 / year_total#2839) END > CASE WHEN (year_total#2849 > 0.000000) THEN (year_total#2998 / year_total#2849) END)) "
          },
          "15" : {
            "sign" : -1414276816,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 7435110696,
            "rowCount" : 142982898,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [c_customer_id#4747, c_first_name#4754, c_last_name#4755, c_preferred_cust_flag#4756, c_birth_country#4760, c_login#4761, c_email_address#4762, d_year#4804], [c_customer_id#4747 AS customer_id#2970, sum(((((cs_ext_list_price#4788 - cs_ext_wholesale_cost#4787) - cs_ext_discount_amt#4785) + cs_ext_sales_price#4786) / 2)) AS year_total#2978], HashAggregate(keys=[c_customer_id#4747, c_first_name#4754, c_last_name#4755, c_preferred_cust_flag#4756, c_birth_country#4760, c_login#4761, c_email_address#4762, d_year#4804], functions=[sum(((((cs_ext_list_price#4788 - cs_ext_wholesale_cost#4787) - cs_ext_discount_amt#4785) + cs_ext_sales_price#4786) / 2))]) "
          },
          "11" : {
            "sign" : -1441832503,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 82445846289476670,
            "rowCount" : 499671795693798,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (customer_id#2950 = customer_id#2821) "
          },
          "9" : {
            "sign" : -262489225,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 141151631495160433838418,
            "rowCount" : 779843267929063170378,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [customer_id#2821, year_total#2829, customer_id#2950, customer_first_name#2951, customer_last_name#2952, customer_email_address#2956, year_total#2958, year_total#2839] "
          },
          "13" : {
            "sign" : 2038413297,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 35480669679,
            "rowCount" : 275043951,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [c_customer_id#4200, c_first_name#4207, c_last_name#4208, c_preferred_cust_flag#4209, c_birth_country#4213, c_login#4214, c_email_address#4215, d_year#4246], [c_customer_id#4200 AS customer_id#2950, c_first_name#4207 AS customer_first_name#2951, c_last_name#4208 AS customer_last_name#2952, c_email_address#4215 AS customer_email_address#2956, sum(((((ss_ext_list_price#4233 - ss_ext_wholesale_cost#4232) - ss_ext_discount_amt#4230) + ss_ext_sales_price#4231) / 2)) AS year_total#2958], ShuffleQueryStage 36 "
          },
          "16" : {
            "sign" : 2009240091,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 49646632,
            "rowCount" : 886547,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Filter (isnotnull(year_total#2849) AND (year_total#2849 > 0.000000)), ShuffleQueryStage 34 "
          },
          "5" : {
            "sign" : 1542204426,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 17892530326467762602524102051920828108,
            "rowCount" : 98853758709766644212840342828291868,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [customer_id#2821, customer_id#2950, customer_first_name#2951, customer_last_name#2952, customer_email_address#2956, year_total#2839, year_total#2978, year_total#2849] "
          },
          "10" : {
            "sign" : 1387654351,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 156748496853741697245978,
            "rowCount" : 779843267929063170378,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (customer_id#2821 = customer_id#2831) "
          },
          "6" : {
            "sign" : 1337486816,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 19869605500663095486780908908486665468,
            "rowCount" : 98853758709766644212840342828291868,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (customer_id#2821 = customer_id#2841) "
          },
          "1" : {
            "sign" : 296920270,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
            "sizeInBytes" : 808094215130365438160779351916915055251181984,
            "rowCount" : 7151276240091729541245834972716062435851168,
            "isRuntime" : false,
            "predicate" : " (unknown) LocalLimit Arguments: 100 "
          },
          "17" : {
            "sign" : 404059991,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 3761782752,
            "rowCount" : 72341976,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [c_customer_id#5305, c_first_name#5312, c_last_name#5313, c_preferred_cust_flag#5314, c_birth_country#5318, c_login#5319, c_email_address#5320, d_year#5362], [c_customer_id#5305 AS customer_id#2990, sum(((((ws_ext_list_price#5346 - ws_ext_wholesale_cost#5345) - ws_ext_discount_amt#5343) + ws_ext_sales_price#5344) / 2)) AS year_total#2998], HashAggregate(keys=[c_customer_id#5305, c_first_name#5312, c_last_name#5313, c_preferred_cust_flag#5314, c_birth_country#5318, c_login#5319, c_email_address#5320, d_year#5362], functions=[sum(((((ws_ext_list_price#5346 - ws_ext_wholesale_cost#5345) - ws_ext_discount_amt#5343) + ws_ext_sales_price#5344) / 2))]) "
          },
          "14" : {
            "sign" : 275524156,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 87399816,
            "rowCount" : 1560711,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Filter (isnotnull(year_total#2839) AND (year_total#2839 > 0.000000)), ShuffleQueryStage 35 "
          },
          "0" : {
            "sign" : 1444708045,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
            "sizeInBytes" : 8800,
            "rowCount" : 100,
            "isRuntime" : false,
            "predicate" : " (unknown) GlobalLimit Arguments: 100 "
          },
          "2" : {
            "sign" : 1461105699,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 808094215130365438160779351916915055251181984,
            "rowCount" : 7151276240091729541245834972716062435851168,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [customer_id#2950 ASC NULLS FIRST, customer_first_name#2951 ASC NULLS FIRST, customer_last_name#2952 ASC NULLS FIRST, customer_email_address#2956 ASC NULLS FIRST], true "
          },
          "7" : {
            "sign" : 1178387794,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 18398201321657505236742842248260,
            "rowCount" : 111504250434287910525714195444,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [customer_id#2821, customer_id#2950, customer_first_name#2951, customer_last_name#2952, customer_email_address#2956, year_total#2839, year_total#2978] "
          },
          "3" : {
            "sign" : -255943154,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 808094215130365438160779351916915055251181984,
            "rowCount" : 7151276240091729541245834972716062435851168,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [customer_id#2950, customer_first_name#2951, customer_last_name#2952, customer_email_address#2956] "
          }
        },
        "links" : [ {
          "fromId" : 12,
          "fromName" : "LogicalQueryStage",
          "toId" : 11,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 13,
          "fromName" : "LogicalQueryStage",
          "toId" : 11,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "Join",
          "toId" : 10,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 14,
          "fromName" : "LogicalQueryStage",
          "toId" : 10,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "Join",
          "toId" : 9,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "Project",
          "toId" : 8,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 15,
          "fromName" : "LogicalQueryStage",
          "toId" : 8,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "Join",
          "toId" : 7,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Project",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 16,
          "fromName" : "LogicalQueryStage",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Join",
          "toId" : 5,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Project",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 17,
          "fromName" : "LogicalQueryStage",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Join",
          "toId" : 3,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Project",
          "toId" : 2,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "LocalLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "LocalLimit",
          "toId" : 0,
          "toName" : "GlobalLimit",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [customer_id#2950 ASC NULLS FIRST, customer_first_name#2951 ASC NULLS FIRST, customer_last_name#2952 ASC NULLS FIRST, customer_email_address#2956 ASC NULLS FIRST], true\n      +- Project [customer_id#2950, customer_first_name#2951, customer_last_name#2952, customer_email_address#2956]\n         +- Join Inner, ((customer_id#2821 = customer_id#2990) AND (CASE WHEN (year_total#2839 > 0.000000) THEN (year_total#2978 / year_total#2839) END > CASE WHEN (year_total#2849 > 0.000000) THEN (year_total#2998 / year_total#2849) END))\n            :- Project [customer_id#2821, customer_id#2950, customer_first_name#2951, customer_last_name#2952, customer_email_address#2956, year_total#2839, year_total#2978, year_total#2849]\n            :  +- Join Inner, (customer_id#2821 = customer_id#2841)\n            :     :- Project [customer_id#2821, customer_id#2950, customer_first_name#2951, customer_last_name#2952, customer_email_address#2956, year_total#2839, year_total#2978]\n            :     :  +- Join Inner, ((customer_id#2821 = customer_id#2970) AND (CASE WHEN (year_total#2839 > 0.000000) THEN (year_total#2978 / year_total#2839) END > CASE WHEN (year_total#2829 > 0.000000) THEN (year_total#2958 / year_total#2829) END))\n            :     :     :- Project [customer_id#2821, year_total#2829, customer_id#2950, customer_first_name#2951, customer_last_name#2952, customer_email_address#2956, year_total#2958, year_total#2839]\n            :     :     :  +- Join Inner, (customer_id#2821 = customer_id#2831)\n            :     :     :     :- Join Inner, (customer_id#2950 = customer_id#2821)\n            :     :     :     :  :- LogicalQueryStage Filter (isnotnull(year_total#2829) AND (year_total#2829 > 0.000000)), ShuffleQueryStage 33\n            :     :     :     :  +- LogicalQueryStage Aggregate [c_customer_id#4200, c_first_name#4207, c_last_name#4208, c_preferred_cust_flag#4209, c_birth_country#4213, c_login#4214, c_email_address#4215, d_year#4246], [c_customer_id#4200 AS customer_id#2950, c_first_name#4207 AS customer_first_name#2951, c_last_name#4208 AS customer_last_name#2952, c_email_address#4215 AS customer_email_address#2956, sum(((((ss_ext_list_price#4233 - ss_ext_wholesale_cost#4232) - ss_ext_discount_amt#4230) + ss_ext_sales_price#4231) / 2)) AS year_total#2958], ShuffleQueryStage 36\n            :     :     :     +- LogicalQueryStage Filter (isnotnull(year_total#2839) AND (year_total#2839 > 0.000000)), ShuffleQueryStage 35\n            :     :     +- LogicalQueryStage Aggregate [c_customer_id#4747, c_first_name#4754, c_last_name#4755, c_preferred_cust_flag#4756, c_birth_country#4760, c_login#4761, c_email_address#4762, d_year#4804], [c_customer_id#4747 AS customer_id#2970, sum(((((cs_ext_list_price#4788 - cs_ext_wholesale_cost#4787) - cs_ext_discount_amt#4785) + cs_ext_sales_price#4786) / 2)) AS year_total#2978], HashAggregate(keys=[c_customer_id#4747, c_first_name#4754, c_last_name#4755, c_preferred_cust_flag#4756, c_birth_country#4760, c_login#4761, c_email_address#4762, d_year#4804], functions=[sum(((((cs_ext_list_price#4788 - cs_ext_wholesale_cost#4787) - cs_ext_discount_amt#4785) + cs_ext_sales_price#4786) / 2))])\n            :     +- LogicalQueryStage Filter (isnotnull(year_total#2849) AND (year_total#2849 > 0.000000)), ShuffleQueryStage 34\n            +- LogicalQueryStage Aggregate [c_customer_id#5305, c_first_name#5312, c_last_name#5313, c_preferred_cust_flag#5314, c_birth_country#5318, c_login#5319, c_email_address#5320, d_year#5362], [c_customer_id#5305 AS customer_id#2990, sum(((((ws_ext_list_price#5346 - ws_ext_wholesale_cost#5345) - ws_ext_discount_amt#5343) + ws_ext_sales_price#5344) / 2)) AS year_total#2998], HashAggregate(keys=[c_customer_id#5305, c_first_name#5312, c_last_name#5313, c_preferred_cust_flag#5314, c_birth_country#5318, c_login#5319, c_email_address#5320, d_year#5362], functions=[sum(((((ws_ext_list_price#5346 - ws_ext_wholesale_cost#5345) - ws_ext_discount_amt#5343) + ws_ext_sales_price#5344) / 2))])\n"
      },
      "IM" : {
        "inputSizeInBytes" : 46916344663,
        "inputRowCount" : 494632781
      },
      "PD" : {
        "14" : [ 75848, 71345, 71345, 77101, 77101, 77101, 70092, 77101, 75848, 77101, 77101, 71345, 77101, 77101, 75848, 77101, 75848, 77101, 77101, 77101, 71345, 77101, 75848, 77101, 70092, 77101, 77101, 71345, 75848, 75848, 71345, 77101, 75848, 75848, 77101, 77101, 75848, 70092, 75848, 70092, 75848, 75848, 75848, 70092, 75848, 75848, 77101, 75848, 75848, 77101, 75848, 77101, 77101, 77101, 77101, 71345, 77101, 78479, 77101, 77101, 75848, 77101, 77101, 77101, 75848, 71345, 75848, 75848, 77101, 75848, 77101, 77101, 75848, 75848, 75848, 75848, 75848, 75848, 77101, 77101, 77101, 75848, 75848, 75848, 77101, 75848, 77101, 75848, 75848, 75848, 77101, 77101, 77101, 75848, 75848, 75848, 77101, 75848, 75848, 77101, 71345, 77101, 77101, 75848, 77101, 75848, 77101, 77101, 70092, 77101, 77101, 77101, 70092, 77101, 77101, 70092, 72723, 77101, 77101, 75848, 77101, 75848, 77101, 77101, 77101, 75848, 75848, 70092, 75848, 75848, 77101, 75848, 77101, 75848, 77101, 75848, 77101, 75848, 75848, 75848, 77101, 77101, 77101, 71345, 75848, 77101, 75848, 77101, 77101, 77101, 77101, 77101, 77101, 70092, 77101, 77101, 75848, 77101, 70092, 75848, 77101, 75848, 75848, 77101, 77101, 75848, 75848, 77101, 77101, 75848, 75848, 77101, 77101, 77101, 70092, 71345, 71345, 77101, 75848, 75848, 75848, 77101, 75848, 77101, 77101, 77101, 71345, 75848, 75848, 75848, 77101, 77101, 75848, 77101, 77101, 75848, 77101, 77101, 77101, 75848 ],
        "13" : [ 153496, 153496, 147740, 153496, 153496, 147740, 141984, 147740, 153496, 156181, 153496, 153496, 153496, 156181, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 147740, 153496, 153496, 153496, 156181, 153496, 153496, 156181, 153496, 153496, 141984, 153496, 153496, 147740, 156181, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 156181, 153496, 147740, 153496, 156181, 150425, 153496, 153496, 153496, 150425, 156181, 153496, 147740, 153496, 153496, 156181, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 156181, 153496, 153496, 153496, 147740, 153496, 153496, 150425, 153496, 153496, 153496, 156181, 156181, 153496, 153496, 153496, 153496, 147740, 153496, 153496, 153496, 153496, 156181, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 156181, 147740, 153496, 153496, 153496, 156181, 153496, 153496, 153496, 153496, 153496, 156181, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 156181, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 156181, 153496, 153496, 147740, 153496, 147740, 153496, 150425, 153496, 153496, 153496, 153496, 156181, 147740, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 147740, 153496, 147740, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 147740, 147740, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 147740, 156181, 156181, 153496, 156181, 153496, 153496, 153496, 153496, 156181, 153496 ],
        "15" : [ 130298, 124542, 130298, 130298, 136054, 130298, 124542, 130298, 136054, 136054, 136054, 130298, 136054, 136995, 136054, 136054, 130298, 131239, 136995, 130298, 136054, 131239, 135198, 135198, 136054, 136054, 130298, 130298, 135198, 135198, 136054, 136995, 136995, 136054, 136995, 135198, 135198, 130298, 135198, 136054, 136054, 136054, 136054, 136054, 130298, 136054, 135198, 130298, 136054, 136054, 135198, 136054, 136054, 136995, 136054, 130298, 136054, 135198, 136995, 130298, 136054, 135198, 130298, 136054, 136054, 130298, 130298, 135198, 136054, 130298, 136054, 136054, 135198, 135198, 130298, 130298, 136054, 136054, 135198, 130298, 135198, 130298, 135198, 130298, 136054, 136054, 136995, 136054, 130298, 135198, 136995, 136995, 136995, 136054, 135198, 130298, 136054, 136995, 136054, 136054, 136995, 136054, 136054, 136054, 135198, 135198, 136054, 136054, 136054, 136995, 131239, 136054, 129442, 136054, 130298, 130298, 136995, 136054, 136054, 136054, 135198, 136054, 135198, 135198, 136054, 136054, 136054, 135198, 135198, 129442, 130298, 135198, 136054, 136054, 136054, 130298, 136054, 135198, 136054, 135198, 136054, 135198, 136054, 136054, 129442, 130298, 136054, 130298, 136054, 136054, 136054, 136054, 136995, 130298, 136054, 136054, 129442, 136054, 130298, 129442, 136054, 136995, 130298, 135198, 136054, 135198, 135198, 136054, 130298, 135198, 135198, 136054, 136054, 136995, 124542, 130298, 130298, 130298, 136054, 136995, 136054, 135198, 136054, 136995, 130298, 136054, 135198, 129442, 130298, 130298, 136054, 136995, 136054, 130298, 136054, 129442, 136054, 136054, 136995, 136054 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 6,
        "FinishedTasksNum" : 19,
        "FinishedTasksTotalTimeInMs" : 70279.0,
        "FinishedTasksDistributionInMs" : [ 866.0, 3784.0, 4005.0, 4173.0, 4955.0 ]
      },
      "StartTimeInMs" : 1702226551886,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 16792,
        "IOBytes" : {
          "Total" : 2285439919,
          "Details" : {
            "IR" : 0,
            "IW" : 0,
            "SR" : 1907842544,
            "SW" : 377597375
          }
        }
      }
    },
    "14" : {
      "LQP" : {
        "operators" : {
          "12" : {
            "sign" : -1458191872,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 14302285452,
            "rowCount" : 275043951,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Filter (isnotnull(year_total#2829) AND (year_total#2829 > 0.000000)), ShuffleQueryStage 33 "
          },
          "8" : {
            "sign" : -1045217054,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 531897047595975605024,
            "rowCount" : 2557197344211421178,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, ((customer_id#2821 = customer_id#2970) AND (CASE WHEN (year_total#2839 > 0.000000) THEN (year_total#2978 / year_total#2839) END > CASE WHEN (year_total#2829 > 0.000000) THEN (year_total#2958 / year_total#2829) END)) "
          },
          "4" : {
            "sign" : -1682888312,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 695902381594076776605616,
            "rowCount" : 3345684526894599887527,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, ((customer_id#2821 = customer_id#2990) AND (CASE WHEN (year_total#2839 > 0.000000) THEN (year_total#2978 / year_total#2839) END > CASE WHEN (year_total#2849 > 0.000000) THEN (year_total#2998 / year_total#2849) END)) "
          },
          "15" : {
            "sign" : -1414276816,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 7435110696,
            "rowCount" : 142982898,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [c_customer_id#4747, c_first_name#4754, c_last_name#4755, c_preferred_cust_flag#4756, c_birth_country#4760, c_login#4761, c_email_address#4762, d_year#4804], [c_customer_id#4747 AS customer_id#2970, sum(((((cs_ext_list_price#4788 - cs_ext_wholesale_cost#4787) - cs_ext_discount_amt#4785) + cs_ext_sales_price#4786) / 2)) AS year_total#2978], HashAggregate(keys=[c_customer_id#4747, c_first_name#4754, c_last_name#4755, c_preferred_cust_flag#4756, c_birth_country#4760, c_login#4761, c_email_address#4762, d_year#4804], functions=[sum(((((cs_ext_list_price#4788 - cs_ext_wholesale_cost#4787) - cs_ext_discount_amt#4785) + cs_ext_sales_price#4786) / 2))]) "
          },
          "11" : {
            "sign" : -813979643,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 74048755015534572,
            "rowCount" : 500329425780639,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (customer_id#2950 = customer_id#2821) "
          },
          "9" : {
            "sign" : 260523255,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 5866161202728917596,
            "rowCount" : 35769275626395839,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [customer_id#2821, year_total#2829, customer_id#2950, customer_first_name#2951, customer_last_name#2952, customer_email_address#2956, year_total#2958, year_total#2839] "
          },
          "13" : {
            "sign" : 1410425053,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 336596320,
            "rowCount" : 1819089,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [c_customer_id#4200, c_first_name#4207, c_last_name#4208, c_preferred_cust_flag#4209, c_birth_country#4213, c_login#4214, c_email_address#4215, d_year#4246], [c_customer_id#4200 AS customer_id#2950, c_first_name#4207 AS customer_first_name#2951, c_last_name#4208 AS customer_last_name#2952, c_email_address#4215 AS customer_email_address#2956, sum(((((ss_ext_list_price#4233 - ss_ext_wholesale_cost#4232) - ss_ext_discount_amt#4230) + ss_ext_sales_price#4231) / 2)) AS year_total#2958], HashAggregate(keys=[c_customer_id#4200, c_first_name#4207, c_last_name#4208, c_preferred_cust_flag#4209, c_birth_country#4213, c_login#4214, c_email_address#4215, d_year#4246], functions=[sum(((((ss_ext_list_price#4233 - ss_ext_wholesale_cost#4232) - ss_ext_discount_amt#4230) + ss_ext_sales_price#4231) / 2))]) "
          },
          "16" : {
            "sign" : 2009240091,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 3761782752,
            "rowCount" : 72341976,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Filter (isnotnull(year_total#2849) AND (year_total#2849 > 0.000000)), ShuffleQueryStage 34 "
          },
          "5" : {
            "sign" : 978046042,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 15169402129980922322452,
            "rowCount" : 92496354451103184893,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [customer_id#2821, customer_id#2950, customer_first_name#2951, customer_last_name#2952, customer_email_address#2956, year_total#2839, year_total#2978, year_total#2849] "
          },
          "10" : {
            "sign" : 1145711611,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 6867700920268001088,
            "rowCount" : 35769275626395839,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (customer_id#2821 = customer_id#2831) "
          },
          "6" : {
            "sign" : -108697592,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 17759300054611811499456,
            "rowCount" : 92496354451103184893,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (customer_id#2821 = customer_id#2841) "
          },
          "1" : {
            "sign" : 513361452,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
            "sizeInBytes" : 294420238366724790102376,
            "rowCount" : 3345684526894599887527,
            "isRuntime" : false,
            "predicate" : " (unknown) LocalLimit Arguments: 100 "
          },
          "17" : {
            "sign" : 404059991,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 3761782752,
            "rowCount" : 72341976,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [c_customer_id#5305, c_first_name#5312, c_last_name#5313, c_preferred_cust_flag#5314, c_birth_country#5318, c_login#5319, c_email_address#5320, d_year#5362], [c_customer_id#5305 AS customer_id#2990, sum(((((ws_ext_list_price#5346 - ws_ext_wholesale_cost#5345) - ws_ext_discount_amt#5343) + ws_ext_sales_price#5344) / 2)) AS year_total#2998], HashAggregate(keys=[c_customer_id#5305, c_first_name#5312, c_last_name#5313, c_preferred_cust_flag#5314, c_birth_country#5318, c_login#5319, c_email_address#5320, d_year#5362], functions=[sum(((((ws_ext_list_price#5346 - ws_ext_wholesale_cost#5345) - ws_ext_discount_amt#5343) + ws_ext_sales_price#5344) / 2))]) "
          },
          "14" : {
            "sign" : 275524156,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 7435110696,
            "rowCount" : 142982898,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Filter (isnotnull(year_total#2839) AND (year_total#2839 > 0.000000)), ShuffleQueryStage 35 "
          },
          "0" : {
            "sign" : -43333887,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
            "sizeInBytes" : 8800,
            "rowCount" : 100,
            "isRuntime" : false,
            "predicate" : " (unknown) GlobalLimit Arguments: 100 "
          },
          "2" : {
            "sign" : -751859349,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 294420238366724790102376,
            "rowCount" : 3345684526894599887527,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [customer_id#2950 ASC NULLS FIRST, customer_first_name#2951 ASC NULLS FIRST, customer_last_name#2952 ASC NULLS FIRST, customer_email_address#2956 ASC NULLS FIRST], true "
          },
          "7" : {
            "sign" : -994826844,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 378465206943290334344,
            "rowCount" : 2557197344211421178,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [customer_id#2821, customer_id#2950, customer_first_name#2951, customer_last_name#2952, customer_email_address#2956, year_total#2839, year_total#2978] "
          },
          "3" : {
            "sign" : -1738140308,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 294420238366724790102376,
            "rowCount" : 3345684526894599887527,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [customer_id#2950, customer_first_name#2951, customer_last_name#2952, customer_email_address#2956] "
          }
        },
        "links" : [ {
          "fromId" : 12,
          "fromName" : "LogicalQueryStage",
          "toId" : 11,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 13,
          "fromName" : "LogicalQueryStage",
          "toId" : 11,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "Join",
          "toId" : 10,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 14,
          "fromName" : "LogicalQueryStage",
          "toId" : 10,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "Join",
          "toId" : 9,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "Project",
          "toId" : 8,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 15,
          "fromName" : "LogicalQueryStage",
          "toId" : 8,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "Join",
          "toId" : 7,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Project",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 16,
          "fromName" : "LogicalQueryStage",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Join",
          "toId" : 5,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Project",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 17,
          "fromName" : "LogicalQueryStage",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Join",
          "toId" : 3,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Project",
          "toId" : 2,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "LocalLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "LocalLimit",
          "toId" : 0,
          "toName" : "GlobalLimit",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [customer_id#2950 ASC NULLS FIRST, customer_first_name#2951 ASC NULLS FIRST, customer_last_name#2952 ASC NULLS FIRST, customer_email_address#2956 ASC NULLS FIRST], true\n      +- Project [customer_id#2950, customer_first_name#2951, customer_last_name#2952, customer_email_address#2956]\n         +- Join Inner, ((customer_id#2821 = customer_id#2990) AND (CASE WHEN (year_total#2839 > 0.000000) THEN (year_total#2978 / year_total#2839) END > CASE WHEN (year_total#2849 > 0.000000) THEN (year_total#2998 / year_total#2849) END))\n            :- Project [customer_id#2821, customer_id#2950, customer_first_name#2951, customer_last_name#2952, customer_email_address#2956, year_total#2839, year_total#2978, year_total#2849]\n            :  +- Join Inner, (customer_id#2821 = customer_id#2841)\n            :     :- Project [customer_id#2821, customer_id#2950, customer_first_name#2951, customer_last_name#2952, customer_email_address#2956, year_total#2839, year_total#2978]\n            :     :  +- Join Inner, ((customer_id#2821 = customer_id#2970) AND (CASE WHEN (year_total#2839 > 0.000000) THEN (year_total#2978 / year_total#2839) END > CASE WHEN (year_total#2829 > 0.000000) THEN (year_total#2958 / year_total#2829) END))\n            :     :     :- Project [customer_id#2821, year_total#2829, customer_id#2950, customer_first_name#2951, customer_last_name#2952, customer_email_address#2956, year_total#2958, year_total#2839]\n            :     :     :  +- Join Inner, (customer_id#2821 = customer_id#2831)\n            :     :     :     :- Join Inner, (customer_id#2950 = customer_id#2821)\n            :     :     :     :  :- LogicalQueryStage Filter (isnotnull(year_total#2829) AND (year_total#2829 > 0.000000)), ShuffleQueryStage 33\n            :     :     :     :  +- LogicalQueryStage Aggregate [c_customer_id#4200, c_first_name#4207, c_last_name#4208, c_preferred_cust_flag#4209, c_birth_country#4213, c_login#4214, c_email_address#4215, d_year#4246], [c_customer_id#4200 AS customer_id#2950, c_first_name#4207 AS customer_first_name#2951, c_last_name#4208 AS customer_last_name#2952, c_email_address#4215 AS customer_email_address#2956, sum(((((ss_ext_list_price#4233 - ss_ext_wholesale_cost#4232) - ss_ext_discount_amt#4230) + ss_ext_sales_price#4231) / 2)) AS year_total#2958], HashAggregate(keys=[c_customer_id#4200, c_first_name#4207, c_last_name#4208, c_preferred_cust_flag#4209, c_birth_country#4213, c_login#4214, c_email_address#4215, d_year#4246], functions=[sum(((((ss_ext_list_price#4233 - ss_ext_wholesale_cost#4232) - ss_ext_discount_amt#4230) + ss_ext_sales_price#4231) / 2))])\n            :     :     :     +- LogicalQueryStage Filter (isnotnull(year_total#2839) AND (year_total#2839 > 0.000000)), ShuffleQueryStage 35\n            :     :     +- LogicalQueryStage Aggregate [c_customer_id#4747, c_first_name#4754, c_last_name#4755, c_preferred_cust_flag#4756, c_birth_country#4760, c_login#4761, c_email_address#4762, d_year#4804], [c_customer_id#4747 AS customer_id#2970, sum(((((cs_ext_list_price#4788 - cs_ext_wholesale_cost#4787) - cs_ext_discount_amt#4785) + cs_ext_sales_price#4786) / 2)) AS year_total#2978], HashAggregate(keys=[c_customer_id#4747, c_first_name#4754, c_last_name#4755, c_preferred_cust_flag#4756, c_birth_country#4760, c_login#4761, c_email_address#4762, d_year#4804], functions=[sum(((((cs_ext_list_price#4788 - cs_ext_wholesale_cost#4787) - cs_ext_discount_amt#4785) + cs_ext_sales_price#4786) / 2))])\n            :     +- LogicalQueryStage Filter (isnotnull(year_total#2849) AND (year_total#2849 > 0.000000)), ShuffleQueryStage 34\n            +- LogicalQueryStage Aggregate [c_customer_id#5305, c_first_name#5312, c_last_name#5313, c_preferred_cust_flag#5314, c_birth_country#5318, c_login#5319, c_email_address#5320, d_year#5362], [c_customer_id#5305 AS customer_id#2990, sum(((((ws_ext_list_price#5346 - ws_ext_wholesale_cost#5345) - ws_ext_discount_amt#5343) + ws_ext_sales_price#5344) / 2)) AS year_total#2998], HashAggregate(keys=[c_customer_id#5305, c_first_name#5312, c_last_name#5313, c_preferred_cust_flag#5314, c_birth_country#5318, c_login#5319, c_email_address#5320, d_year#5362], functions=[sum(((((ws_ext_list_price#5346 - ws_ext_wholesale_cost#5345) - ws_ext_discount_amt#5343) + ws_ext_sales_price#5344) / 2))])\n"
      },
      "IM" : {
        "inputSizeInBytes" : 37032668668,
        "inputRowCount" : 707512788
      },
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 16,
        "FinishedTasksNum" : 1,
        "FinishedTasksTotalTimeInMs" : 3854.0,
        "FinishedTasksDistributionInMs" : [ 3854.0, 3854.0, 3854.0, 3854.0, 3854.0 ]
      },
      "StartTimeInMs" : 1702226546006,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 22672,
        "IOBytes" : {
          "Total" : 2724045993,
          "Details" : {
            "IR" : 0,
            "IW" : 0,
            "SR" : 2278168960,
            "SW" : 445877033
          }
        }
      }
    },
    "20" : {
      "LQP" : {
        "operators" : {
          "12" : {
            "sign" : -1458191872,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 101735088,
            "rowCount" : 1816698,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Filter (isnotnull(year_total#2829) AND (year_total#2829 > 0.000000)), ShuffleQueryStage 33 "
          },
          "8" : {
            "sign" : -1884134972,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 147493631240236481965248463200,
            "rowCount" : 737468156201182409826242316,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, ((customer_id#2821 = customer_id#2970) AND (CASE WHEN (year_total#2839 > 0.000000) THEN (year_total#2978 / year_total#2839) END > CASE WHEN (year_total#2829 > 0.000000) THEN (year_total#2958 / year_total#2829) END)) "
          },
          "4" : {
            "sign" : -537357220,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 113256476915064961526811460000639917524736,
            "rowCount" : 589877483932630007952143020836666237108,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, ((customer_id#2821 = customer_id#2990) AND (CASE WHEN (year_total#2839 > 0.000000) THEN (year_total#2978 / year_total#2839) END > CASE WHEN (year_total#2849 > 0.000000) THEN (year_total#2998 / year_total#2849) END)) "
          },
          "15" : {
            "sign" : -1414276816,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 7435110696,
            "rowCount" : 142982898,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [c_customer_id#4747, c_first_name#4754, c_last_name#4755, c_preferred_cust_flag#4756, c_birth_country#4760, c_login#4761, c_email_address#4762, d_year#4804], [c_customer_id#4747 AS customer_id#2970, sum(((((cs_ext_list_price#4788 - cs_ext_wholesale_cost#4787) - cs_ext_discount_amt#4785) + cs_ext_sales_price#4786) / 2)) AS year_total#2978], HashAggregate(keys=[c_customer_id#4747, c_first_name#4754, c_last_name#4755, c_preferred_cust_flag#4756, c_birth_country#4760, c_login#4761, c_email_address#4762, d_year#4804], functions=[sum(((((cs_ext_list_price#4788 - cs_ext_wholesale_cost#4787) - cs_ext_discount_amt#4785) + cs_ext_sales_price#4786) / 2))]) "
          },
          "11" : {
            "sign" : -1441832503,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 462662948737080,
            "rowCount" : 3304735348122,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (customer_id#2950 = customer_id#2821) "
          },
          "9" : {
            "sign" : -262489225,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 804606942344842219752,
            "rowCount" : 5157736809902834742,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [customer_id#2821, year_total#2829, customer_id#2950, customer_first_name#2951, customer_last_name#2952, customer_email_address#2956, year_total#2958, year_total#2839] "
          },
          "13" : {
            "sign" : 2038413297,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 229498456,
            "rowCount" : 1819089,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [c_customer_id#4200, c_first_name#4207, c_last_name#4208, c_preferred_cust_flag#4209, c_birth_country#4213, c_login#4214, c_email_address#4215, d_year#4246], [c_customer_id#4200 AS customer_id#2950, c_first_name#4207 AS customer_first_name#2951, c_last_name#4208 AS customer_last_name#2952, c_email_address#4215 AS customer_email_address#2956, sum(((((ss_ext_list_price#4233 - ss_ext_wholesale_cost#4232) - ss_ext_discount_amt#4230) + ss_ext_sales_price#4231) / 2)) AS year_total#2958], ShuffleQueryStage 36 "
          },
          "16" : {
            "sign" : 2009240091,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 49646632,
            "rowCount" : 886547,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Filter (isnotnull(year_total#2849) AND (year_total#2849 > 0.000000)), ShuffleQueryStage 34 "
          },
          "5" : {
            "sign" : 1542204426,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 101992828310207587253939200857564912,
            "rowCount" : 653800181475689661884225646522852,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [customer_id#2821, customer_id#2950, customer_first_name#2951, customer_last_name#2952, customer_email_address#2956, year_total#2839, year_total#2978, year_total#2849] "
          },
          "10" : {
            "sign" : 1387654351,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 907761678542898914592,
            "rowCount" : 5157736809902834742,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (customer_id#2821 = customer_id#2831) "
          },
          "6" : {
            "sign" : 1337486816,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 115068831939721380491623713788021952,
            "rowCount" : 653800181475689661884225646522852,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (customer_id#2821 = customer_id#2841) "
          },
          "1" : {
            "sign" : -1134635724,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
            "sizeInBytes" : 51909218586071440699788585833626628865504,
            "rowCount" : 589877483932630007952143020836666237108,
            "isRuntime" : false,
            "predicate" : " (unknown) LocalLimit Arguments: 100 "
          },
          "17" : {
            "sign" : -2053491893,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 50524824,
            "rowCount" : 902229,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [c_customer_id#5305, c_first_name#5312, c_last_name#5313, c_preferred_cust_flag#5314, c_birth_country#5318, c_login#5319, c_email_address#5320, d_year#5362], [c_customer_id#5305 AS customer_id#2990, sum(((((ws_ext_list_price#5346 - ws_ext_wholesale_cost#5345) - ws_ext_discount_amt#5343) + ws_ext_sales_price#5344) / 2)) AS year_total#2998], ShuffleQueryStage 37 "
          },
          "14" : {
            "sign" : 275524156,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 87399816,
            "rowCount" : 1560711,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Filter (isnotnull(year_total#2839) AND (year_total#2839 > 0.000000)), ShuffleQueryStage 35 "
          },
          "0" : {
            "sign" : -2078263403,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
            "sizeInBytes" : 8800,
            "rowCount" : 100,
            "isRuntime" : false,
            "predicate" : " (unknown) GlobalLimit Arguments: 100 "
          },
          "2" : {
            "sign" : 970545663,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 51909218586071440699788585833626628865504,
            "rowCount" : 589877483932630007952143020836666237108,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [customer_id#2950 ASC NULLS FIRST, customer_first_name#2951 ASC NULLS FIRST, customer_last_name#2952 ASC NULLS FIRST, customer_email_address#2956 ASC NULLS FIRST], true "
          },
          "7" : {
            "sign" : 1178387794,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 103245541868165537375673924240,
            "rowCount" : 737468156201182409826242316,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [customer_id#2821, customer_id#2950, customer_first_name#2951, customer_last_name#2952, customer_email_address#2956, year_total#2839, year_total#2978] "
          },
          "3" : {
            "sign" : -25533452,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 51909218586071440699788585833626628865504,
            "rowCount" : 589877483932630007952143020836666237108,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [customer_id#2950, customer_first_name#2951, customer_last_name#2952, customer_email_address#2956] "
          }
        },
        "links" : [ {
          "fromId" : 12,
          "fromName" : "LogicalQueryStage",
          "toId" : 11,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 13,
          "fromName" : "LogicalQueryStage",
          "toId" : 11,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "Join",
          "toId" : 10,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 14,
          "fromName" : "LogicalQueryStage",
          "toId" : 10,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "Join",
          "toId" : 9,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "Project",
          "toId" : 8,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 15,
          "fromName" : "LogicalQueryStage",
          "toId" : 8,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "Join",
          "toId" : 7,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Project",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 16,
          "fromName" : "LogicalQueryStage",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Join",
          "toId" : 5,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Project",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 17,
          "fromName" : "LogicalQueryStage",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Join",
          "toId" : 3,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Project",
          "toId" : 2,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "LocalLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "LocalLimit",
          "toId" : 0,
          "toName" : "GlobalLimit",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [customer_id#2950 ASC NULLS FIRST, customer_first_name#2951 ASC NULLS FIRST, customer_last_name#2952 ASC NULLS FIRST, customer_email_address#2956 ASC NULLS FIRST], true\n      +- Project [customer_id#2950, customer_first_name#2951, customer_last_name#2952, customer_email_address#2956]\n         +- Join Inner, ((customer_id#2821 = customer_id#2990) AND (CASE WHEN (year_total#2839 > 0.000000) THEN (year_total#2978 / year_total#2839) END > CASE WHEN (year_total#2849 > 0.000000) THEN (year_total#2998 / year_total#2849) END))\n            :- Project [customer_id#2821, customer_id#2950, customer_first_name#2951, customer_last_name#2952, customer_email_address#2956, year_total#2839, year_total#2978, year_total#2849]\n            :  +- Join Inner, (customer_id#2821 = customer_id#2841)\n            :     :- Project [customer_id#2821, customer_id#2950, customer_first_name#2951, customer_last_name#2952, customer_email_address#2956, year_total#2839, year_total#2978]\n            :     :  +- Join Inner, ((customer_id#2821 = customer_id#2970) AND (CASE WHEN (year_total#2839 > 0.000000) THEN (year_total#2978 / year_total#2839) END > CASE WHEN (year_total#2829 > 0.000000) THEN (year_total#2958 / year_total#2829) END))\n            :     :     :- Project [customer_id#2821, year_total#2829, customer_id#2950, customer_first_name#2951, customer_last_name#2952, customer_email_address#2956, year_total#2958, year_total#2839]\n            :     :     :  +- Join Inner, (customer_id#2821 = customer_id#2831)\n            :     :     :     :- Join Inner, (customer_id#2950 = customer_id#2821)\n            :     :     :     :  :- LogicalQueryStage Filter (isnotnull(year_total#2829) AND (year_total#2829 > 0.000000)), ShuffleQueryStage 33\n            :     :     :     :  +- LogicalQueryStage Aggregate [c_customer_id#4200, c_first_name#4207, c_last_name#4208, c_preferred_cust_flag#4209, c_birth_country#4213, c_login#4214, c_email_address#4215, d_year#4246], [c_customer_id#4200 AS customer_id#2950, c_first_name#4207 AS customer_first_name#2951, c_last_name#4208 AS customer_last_name#2952, c_email_address#4215 AS customer_email_address#2956, sum(((((ss_ext_list_price#4233 - ss_ext_wholesale_cost#4232) - ss_ext_discount_amt#4230) + ss_ext_sales_price#4231) / 2)) AS year_total#2958], ShuffleQueryStage 36\n            :     :     :     +- LogicalQueryStage Filter (isnotnull(year_total#2839) AND (year_total#2839 > 0.000000)), ShuffleQueryStage 35\n            :     :     +- LogicalQueryStage Aggregate [c_customer_id#4747, c_first_name#4754, c_last_name#4755, c_preferred_cust_flag#4756, c_birth_country#4760, c_login#4761, c_email_address#4762, d_year#4804], [c_customer_id#4747 AS customer_id#2970, sum(((((cs_ext_list_price#4788 - cs_ext_wholesale_cost#4787) - cs_ext_discount_amt#4785) + cs_ext_sales_price#4786) / 2)) AS year_total#2978], HashAggregate(keys=[c_customer_id#4747, c_first_name#4754, c_last_name#4755, c_preferred_cust_flag#4756, c_birth_country#4760, c_login#4761, c_email_address#4762, d_year#4804], functions=[sum(((((cs_ext_list_price#4788 - cs_ext_wholesale_cost#4787) - cs_ext_discount_amt#4785) + cs_ext_sales_price#4786) / 2))])\n            :     +- LogicalQueryStage Filter (isnotnull(year_total#2849) AND (year_total#2849 > 0.000000)), ShuffleQueryStage 34\n            +- LogicalQueryStage Aggregate [c_customer_id#5305, c_first_name#5312, c_last_name#5313, c_preferred_cust_flag#5314, c_birth_country#5318, c_login#5319, c_email_address#5320, d_year#5362], [c_customer_id#5305 AS customer_id#2990, sum(((((ws_ext_list_price#5346 - ws_ext_wholesale_cost#5345) - ws_ext_discount_amt#5343) + ws_ext_sales_price#5344) / 2)) AS year_total#2998], ShuffleQueryStage 37\n"
      },
      "IM" : {
        "inputSizeInBytes" : 7953915512,
        "inputRowCount" : 149968172
      },
      "PD" : {
        "15" : [ 130298, 124542, 130298, 130298, 136054, 130298, 124542, 130298, 136054, 136054, 136054, 130298, 136054, 136995, 136054, 136054, 130298, 131239, 136995, 130298, 136054, 131239, 135198, 135198, 136054, 136054, 130298, 130298, 135198, 135198, 136054, 136995, 136995, 136054, 136995, 135198, 135198, 130298, 135198, 136054, 136054, 136054, 136054, 136054, 130298, 136054, 135198, 130298, 136054, 136054, 135198, 136054, 136054, 136995, 136054, 130298, 136054, 135198, 136995, 130298, 136054, 135198, 130298, 136054, 136054, 130298, 130298, 135198, 136054, 130298, 136054, 136054, 135198, 135198, 130298, 130298, 136054, 136054, 135198, 130298, 135198, 130298, 135198, 130298, 136054, 136054, 136995, 136054, 130298, 135198, 136995, 136995, 136995, 136054, 135198, 130298, 136054, 136995, 136054, 136054, 136995, 136054, 136054, 136054, 135198, 135198, 136054, 136054, 136054, 136995, 131239, 136054, 129442, 136054, 130298, 130298, 136995, 136054, 136054, 136054, 135198, 136054, 135198, 135198, 136054, 136054, 136054, 135198, 135198, 129442, 130298, 135198, 136054, 136054, 136054, 130298, 136054, 135198, 136054, 135198, 136054, 135198, 136054, 136054, 129442, 130298, 136054, 130298, 136054, 136054, 136054, 136054, 136995, 130298, 136054, 136054, 129442, 136054, 130298, 129442, 136054, 136995, 130298, 135198, 136054, 135198, 135198, 136054, 130298, 135198, 135198, 136054, 136054, 136995, 124542, 130298, 130298, 130298, 136054, 136995, 136054, 135198, 136054, 136995, 130298, 136054, 135198, 129442, 130298, 130298, 136054, 136995, 136054, 130298, 136054, 129442, 136054, 136054, 136995, 136054 ],
        "13" : [ 153496, 153496, 147740, 153496, 153496, 147740, 141984, 147740, 153496, 156181, 153496, 153496, 153496, 156181, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 147740, 153496, 153496, 153496, 156181, 153496, 153496, 156181, 153496, 153496, 141984, 153496, 153496, 147740, 156181, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 156181, 153496, 147740, 153496, 156181, 150425, 153496, 153496, 153496, 150425, 156181, 153496, 147740, 153496, 153496, 156181, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 156181, 153496, 153496, 153496, 147740, 153496, 153496, 150425, 153496, 153496, 153496, 156181, 156181, 153496, 153496, 153496, 153496, 147740, 153496, 153496, 153496, 153496, 156181, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 156181, 147740, 153496, 153496, 153496, 156181, 153496, 153496, 153496, 153496, 153496, 156181, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 156181, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 156181, 153496, 153496, 147740, 153496, 147740, 153496, 150425, 153496, 153496, 153496, 153496, 156181, 147740, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 147740, 153496, 147740, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 147740, 147740, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 147740, 156181, 156181, 153496, 156181, 153496, 153496, 153496, 153496, 156181, 153496 ],
        "16" : [ 652413, 641195, 641195, 641195, 652413, 628367, 617149, 641195, 628367, 652413, 652413, 641195, 628367, 652413, 652413, 652413, 652413, 641195, 652413, 641195, 641195, 652413, 652413, 641195, 652413, 652413, 641195, 641195, 652413, 652413, 641195, 652413, 652413, 641195, 652413, 641195, 652413, 617149, 641195, 652413, 652413, 641195, 641195, 652413, 641195, 652413, 652413, 641195, 652413, 652413, 628367, 652413, 652413, 652413, 641195, 652413, 652413, 652413, 652413, 641195, 652413, 641195, 652413, 652413, 641195, 652413, 641195, 652413, 641195, 652413, 641195, 652413, 652413, 652413, 652413, 617149, 652413, 652413, 641195, 641195, 652413, 652413, 652413, 652413, 652413, 641195, 641195, 641195, 652413, 641195, 652413, 652413, 652413, 641195, 652413, 641195, 652413, 652413, 652413, 652413, 652413, 652413, 641195, 641195, 652413, 641195, 652413, 652413, 652413, 641195, 641195, 652413, 641195, 641195, 652413, 628367, 641195, 652413, 652413, 641195, 641195, 652413, 652413, 641195, 641195, 652413, 652413, 652413, 652413, 652413, 652413, 652413, 652413, 641195, 641195, 652413, 652413, 652413, 652413, 641195, 652413, 641195, 652413, 641195, 652413, 641195, 652413, 641195, 652413, 652413, 641195, 641195, 652413, 641195, 641195, 652413, 652413, 652413, 617149, 641195, 652413, 641195, 628367, 652413, 641195, 652413, 652413, 652413, 652413, 652413, 652413, 652413, 652413, 641195, 641195, 652413, 641195, 652413, 652413, 641195, 652413, 652413, 652413, 652413, 652413, 641195, 641195, 652413, 652413, 652413, 652413, 652413, 641195, 652413, 641195, 641195, 652413, 652413, 652413, 641195 ],
        "17" : [ 77101, 77101, 75848, 77101, 77101, 77101, 71345, 77101, 77101, 77101, 77101, 77101, 77101, 78479, 77101, 78479, 77101, 75848, 77101, 77101, 77101, 77101, 77101, 75848, 77101, 77101, 77101, 71345, 77101, 77101, 77101, 77101, 77101, 77101, 77101, 77101, 77101, 71345, 75848, 77101, 77101, 77101, 77101, 77101, 77101, 77101, 77101, 77101, 77101, 77101, 78479, 78479, 77101, 77101, 77101, 77101, 77101, 77101, 77101, 77101, 78479, 77101, 77101, 77101, 77101, 77101, 77101, 78479, 77101, 77101, 77101, 77101, 77101, 77101, 77101, 75848, 77101, 77101, 75848, 77101, 78479, 77101, 77101, 77101, 77101, 77101, 77101, 77101, 72723, 78479, 77101, 77101, 78479, 77101, 77101, 77101, 77101, 77101, 77101, 78479, 77101, 77101, 77101, 77101, 77101, 77101, 77101, 78479, 77101, 77101, 77101, 77101, 77101, 77101, 77101, 71345, 77101, 77101, 77101, 77101, 77101, 77101, 77101, 77101, 77101, 77101, 77101, 77101, 78479, 77101, 77101, 78479, 77101, 75848, 77101, 77101, 78479, 77101, 77101, 75848, 77101, 77101, 77101, 75848, 78479, 77101, 77101, 77101, 78479, 77101, 77101, 77101, 77101, 77101, 77101, 77101, 77101, 77101, 77101, 75848, 77101, 77101, 71345, 77101, 77101, 77101, 77101, 77101, 77101, 77101, 77101, 78479, 77101, 77101, 77101, 71345, 78479, 75848, 77101, 77101, 77101, 77101, 78479, 77101, 78479, 77101, 78479, 77101, 77101, 77101, 77101, 77101, 77101, 78479, 77101, 77101, 77101, 78479, 77101, 75848 ],
        "14" : [ 75848, 71345, 71345, 77101, 77101, 77101, 70092, 77101, 75848, 77101, 77101, 71345, 77101, 77101, 75848, 77101, 75848, 77101, 77101, 77101, 71345, 77101, 75848, 77101, 70092, 77101, 77101, 71345, 75848, 75848, 71345, 77101, 75848, 75848, 77101, 77101, 75848, 70092, 75848, 70092, 75848, 75848, 75848, 70092, 75848, 75848, 77101, 75848, 75848, 77101, 75848, 77101, 77101, 77101, 77101, 71345, 77101, 78479, 77101, 77101, 75848, 77101, 77101, 77101, 75848, 71345, 75848, 75848, 77101, 75848, 77101, 77101, 75848, 75848, 75848, 75848, 75848, 75848, 77101, 77101, 77101, 75848, 75848, 75848, 77101, 75848, 77101, 75848, 75848, 75848, 77101, 77101, 77101, 75848, 75848, 75848, 77101, 75848, 75848, 77101, 71345, 77101, 77101, 75848, 77101, 75848, 77101, 77101, 70092, 77101, 77101, 77101, 70092, 77101, 77101, 70092, 72723, 77101, 77101, 75848, 77101, 75848, 77101, 77101, 77101, 75848, 75848, 70092, 75848, 75848, 77101, 75848, 77101, 75848, 77101, 75848, 77101, 75848, 75848, 75848, 77101, 77101, 77101, 71345, 75848, 77101, 75848, 77101, 77101, 77101, 77101, 77101, 77101, 70092, 77101, 77101, 75848, 77101, 70092, 75848, 77101, 75848, 75848, 77101, 77101, 75848, 75848, 77101, 77101, 75848, 75848, 77101, 77101, 77101, 70092, 71345, 71345, 77101, 75848, 75848, 75848, 77101, 75848, 77101, 77101, 77101, 71345, 75848, 75848, 75848, 77101, 77101, 75848, 77101, 77101, 75848, 77101, 77101, 77101, 75848 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 3,
        "FinishedTasksNum" : 11,
        "FinishedTasksTotalTimeInMs" : 45372.0,
        "FinishedTasksDistributionInMs" : [ 3784.0, 4005.0, 4062.0, 4213.0, 4955.0 ]
      },
      "StartTimeInMs" : 1702226554828,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 13850,
        "IOBytes" : {
          "Total" : 1350448700,
          "Details" : {
            "IR" : 0,
            "IW" : 0,
            "SR" : 1187239111,
            "SW" : 163209589
          }
        }
      }
    },
    "2" : {
      "LQP" : {
        "operators" : {
          "45" : {
            "sign" : -95765746,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 9216,
            "rowCount" : 576,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#4798, d_year#4804] "
          },
          "34" : {
            "sign" : 1188748241,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 31885186254,
            "rowCount" : 142982898,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (c_customer_sk#4507 = cs_bill_customer_sk#4527) "
          },
          "67" : {
            "sign" : -907407597,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1051496,
            "rowCount" : 365,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#5356, d_year#5362], BroadcastQueryStage 18 "
          },
          "12" : {
            "sign" : -156756162,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 14302285452,
            "rowCount" : 275043951,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(year_total#2829) AND (year_total#2829 > 0.000000)) "
          },
          "66" : {
            "sign" : 308578962,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#5356, d_date_id#5357, d_date#5358, d_month_seq#5359, d_week_seq#5360, d_quarter_seq#5361, d_year#5362, d_dow#5363, d_moy#5364, d_dom#5365, d_qoy#5366, d_fy_year#5367, d_fy_quarter_seq#5368, d_fy_week_seq#5369, d_day_name#5370, d_quarter_name#5371, d_holiday#5372, d_weekend#5373, d_following_holiday#5374, d_first_dom#5375, d_last_dom#5376, d_same_day_ly#5377, d_same_day_lq#5378, d_current_day#5379, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "51" : {
            "sign" : 263073841,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 3761782752,
            "rowCount" : 72341976,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [c_customer_id#5066, c_first_name#5073, c_last_name#5074, c_preferred_cust_flag#5075, c_birth_country#5079, c_login#5080, c_email_address#5081, d_year#5123], [c_customer_id#5066 AS customer_id#2841, sum(((((ws_ext_list_price#5107 - ws_ext_wholesale_cost#5106) - ws_ext_discount_amt#5104) + ws_ext_sales_price#5105) / 2)) AS year_total#2849] "
          },
          "8" : {
            "sign" : 818508638,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 23158919532319519763642075474493063410955,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, ((customer_id#2821 = customer_id#2970) AND (CASE WHEN (year_total#2839 > 0.000000) THEN (year_total#2978 / year_total#2839) END > CASE WHEN (year_total#2829 > 0.000000) THEN (year_total#2958 / year_total#2829) END)) "
          },
          "19" : {
            "sign" : -801146513,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 59134449465,
            "rowCount" : 275043951,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_customer_id#4200, c_first_name#4207, c_last_name#4208, c_preferred_cust_flag#4209, c_birth_country#4213, c_login#4214, c_email_address#4215, ss_ext_discount_amt#4230, ss_ext_sales_price#4231, ss_ext_wholesale_cost#4232, ss_ext_list_price#4233, d_year#4246] "
          },
          "23" : {
            "sign" : 1284024506,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 12608114544,
            "rowCount" : 262669053,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_customer_sk#4219, ss_ext_discount_amt#4230, ss_ext_sales_price#4231, ss_ext_wholesale_cost#4232, ss_ext_list_price#4233, ss_sold_date_sk#4239] "
          },
          "62" : {
            "sign" : -569287716,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 14968845008,
            "rowCount" : 71965601,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(ws_bill_customer_sk#5325) AND isnotnull(ws_sold_date_sk#5355)) AND dynamicpruning#5499 [ws_sold_date_sk#5355]) "
          },
          "4" : {
            "sign" : 115735839,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 209418200125049389607521593801599775109491528109670737082736,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, ((customer_id#2821 = customer_id#2990) AND (CASE WHEN (year_total#2839 > 0.000000) THEN (year_total#2978 / year_total#2839) END > CASE WHEN (year_total#2849 > 0.000000) THEN (year_total#2998 / year_total#2849) END)) "
          },
          "40" : {
            "sign" : 679513025,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 2497588268160,
            "rowCount" : 52033088920,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_bill_customer_sk#4766, cs_ext_discount_amt#4785, cs_ext_sales_price#4786, cs_ext_wholesale_cost#4787, cs_ext_list_price#4788, d_year#4804] "
          },
          "15" : {
            "sign" : -1238535703,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 61334801073,
            "rowCount" : 275043951,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (c_customer_sk#30 = ss_customer_sk#50) "
          },
          "11" : {
            "sign" : -406431825,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 478037003981179976424,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (customer_id#2950 = customer_id#2821) "
          },
          "9" : {
            "sign" : -1527245432,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 3150365082136053799796211341205,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [customer_id#2821, year_total#2829, customer_id#2950, customer_first_name#2951, customer_last_name#2952, customer_email_address#2956, year_total#2958, year_total#2839] "
          },
          "44" : {
            "sign" : 57807540,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 29800787536,
            "rowCount" : 143273017,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [cs_sold_time_sk#4764, cs_ship_date_sk#4765, cs_bill_customer_sk#4766, cs_bill_cdemo_sk#4767, cs_bill_hdemo_sk#4768, cs_bill_addr_sk#4769, cs_ship_customer_sk#4770, cs_ship_cdemo_sk#4771, cs_ship_hdemo_sk#4772, cs_ship_addr_sk#4773, cs_call_center_sk#4774, cs_catalog_page_sk#4775, cs_ship_mode_sk#4776, cs_warehouse_sk#4777, cs_item_sk#4778, cs_promo_sk#4779, cs_order_number#4780L, cs_quantity#4781, cs_wholesale_cost#4782, cs_list_price#4783, cs_sales_price#4784, cs_ext_discount_amt#4785, cs_ext_sales_price#4786, cs_ext_wholesale_cost#4787, ... 10 more fields], `spark_catalog`.`tpcds_100`.`catalog_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "33" : {
            "sign" : 1201651664,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 30741323070,
            "rowCount" : 142982898,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_customer_id#4508, c_first_name#4515, c_last_name#4516, c_preferred_cust_flag#4517, c_birth_country#4521, c_login#4522, c_email_address#4523, cs_ext_discount_amt#4546, cs_ext_sales_price#4547, cs_ext_wholesale_cost#4548, cs_ext_list_price#4549, d_year#4565] "
          },
          "22" : {
            "sign" : -16397631,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 5368955443320,
            "rowCount" : 95874204345,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#4239 = d_date_sk#4240) "
          },
          "56" : {
            "sign" : 555767454,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 3719321157,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [c_customer_id#5305, c_first_name#5312, c_last_name#5313, c_preferred_cust_flag#5314, c_birth_country#5318, c_login#5319, c_email_address#5320, d_year#5362], [c_customer_id#5305 AS customer_id#2990, sum(((((ws_ext_list_price#5346 - ws_ext_wholesale_cost#5345) - ws_ext_discount_amt#5343) + ws_ext_sales_price#5344) / 2)) AS year_total#2998] "
          },
          "55" : {
            "sign" : -8231932,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 366000000,
            "rowCount" : 2000000,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [c_customer_sk#5065, c_customer_id#5066, c_first_name#5073, c_last_name#5074, c_preferred_cust_flag#5075, c_birth_country#5079, c_login#5080, c_email_address#5081], ShuffleQueryStage 16 "
          },
          "26" : {
            "sign" : -422713802,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 9216,
            "rowCount" : 576,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#4240, d_year#4246] "
          },
          "50" : {
            "sign" : 830600325,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 3761782752,
            "rowCount" : 72341976,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(year_total#2849) AND (year_total#2849 > 0.000000)) "
          },
          "37" : {
            "sign" : 1919871983,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 7351185951,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [c_customer_id#4747, c_first_name#4754, c_last_name#4755, c_preferred_cust_flag#4756, c_birth_country#4760, c_login#4761, c_email_address#4762, d_year#4804], [c_customer_id#4747 AS customer_id#2970, sum(((((cs_ext_list_price#4788 - cs_ext_wholesale_cost#4787) - cs_ext_discount_amt#4785) + cs_ext_sales_price#4786) / 2)) AS year_total#2978] "
          },
          "68" : {
            "sign" : -149944874,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 366000000,
            "rowCount" : 2000000,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [c_customer_sk#5304, c_customer_id#5305, c_first_name#5312, c_last_name#5313, c_preferred_cust_flag#5314, c_birth_country#5318, c_login#5319, c_email_address#5320], ShuffleQueryStage 20 "
          },
          "61" : {
            "sign" : -2087510487,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 3454348848,
            "rowCount" : 71965601,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_bill_customer_sk#5325, ws_ext_discount_amt#5343, ws_ext_sales_price#5344, ws_ext_wholesale_cost#5345, ws_ext_list_price#5346, ws_sold_date_sk#5355] "
          },
          "13" : {
            "sign" : -1150214364,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 14302285452,
            "rowCount" : 275043951,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [c_customer_id#31, c_first_name#38, c_last_name#39, c_preferred_cust_flag#40, c_birth_country#44, c_login#45, c_email_address#46, d_year#77], [c_customer_id#31 AS customer_id#2821, sum(((((ss_ext_list_price#64 - ss_ext_wholesale_cost#63) - ss_ext_discount_amt#61) + ss_ext_sales_price#62) / 2)) AS year_total#2829] "
          },
          "46" : {
            "sign" : -2096203715,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 141696,
            "rowCount" : 576,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(d_year#4804) AND (d_year#4804 = 2002)) AND isnotnull(d_date_sk#4798)) "
          },
          "24" : {
            "sign" : -1174856634,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 39925696056,
            "rowCount" : 262669053,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(ss_customer_sk#4219) AND isnotnull(ss_sold_date_sk#4239)) AND dynamicpruning#5495 [ss_sold_date_sk#4239]) "
          },
          "35" : {
            "sign" : -1147336357,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 6648780576,
            "rowCount" : 138516262,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [cs_bill_customer_sk#4527, cs_ext_discount_amt#4546, cs_ext_sales_price#4547, cs_ext_wholesale_cost#4548, cs_ext_list_price#4549, d_year#4565], ShuffleQueryStage 22 "
          },
          "16" : {
            "sign" : 1000661201,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 12745948080,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ss_customer_sk#50, ss_ext_discount_amt#61, ss_ext_sales_price#62, ss_ext_wholesale_cost#63, ss_ext_list_price#64, d_year#77], ShuffleQueryStage 21 "
          },
          "5" : {
            "sign" : -365444352,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 56305489976554178380547306364702771245384962089648,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [customer_id#2821, customer_id#2950, customer_first_name#2951, customer_last_name#2952, customer_email_address#2956, year_total#2839, year_total#2978, year_total#2849] "
          },
          "10" : {
            "sign" : 648097040,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 3554258041384265825411110231104,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (customer_id#2821 = customer_id#2831) "
          },
          "59" : {
            "sign" : 2002978655,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 1260837329520,
            "rowCount" : 26267444365,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_bill_customer_sk#5325, ws_ext_discount_amt#5343, ws_ext_sales_price#5344, ws_ext_wholesale_cost#5345, ws_ext_list_price#5346, d_year#5362] "
          },
          "48" : {
            "sign" : 2123940294,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1051496,
            "rowCount" : 365,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#4798, d_year#4804], BroadcastQueryStage 10 "
          },
          "21" : {
            "sign" : 1182842860,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 4601961808560,
            "rowCount" : 95874204345,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_customer_sk#4219, ss_ext_discount_amt#4230, ss_ext_sales_price#4231, ss_ext_wholesale_cost#4232, ss_ext_list_price#4233, d_year#4246] "
          },
          "54" : {
            "sign" : -2060825732,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 3335789040,
            "rowCount" : 69495605,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ws_bill_customer_sk#5086, ws_ext_discount_amt#5104, ws_ext_sales_price#5105, ws_ext_wholesale_cost#5106, ws_ext_list_price#5107, d_year#5123], ShuffleQueryStage 23 "
          },
          "43" : {
            "sign" : 251325564,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 29651732864,
            "rowCount" : 142556408,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(cs_bill_customer_sk#4766) AND isnotnull(cs_sold_date_sk#4797)) AND dynamicpruning#5497 [cs_sold_date_sk#4797]) "
          },
          "65" : {
            "sign" : -2068458022,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 141696,
            "rowCount" : 576,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(d_year#5362) AND (d_year#5362 = 2002)) AND isnotnull(d_date_sk#5356)) "
          },
          "57" : {
            "sign" : 916806593,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 15553524840,
            "rowCount" : 72341976,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_customer_id#5305, c_first_name#5312, c_last_name#5313, c_preferred_cust_flag#5314, c_birth_country#5318, c_login#5319, c_email_address#5320, ws_ext_discount_amt#5343, ws_ext_sales_price#5344, ws_ext_wholesale_cost#5345, ws_ext_list_price#5346, d_year#5362] "
          },
          "32" : {
            "sign" : 421427731,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 7435110696,
            "rowCount" : 142982898,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [c_customer_id#4508, c_first_name#4515, c_last_name#4516, c_preferred_cust_flag#4517, c_birth_country#4521, c_login#4522, c_email_address#4523, d_year#4565], [c_customer_id#4508 AS customer_id#2831, sum(((((cs_ext_list_price#4549 - cs_ext_wholesale_cost#4548) - cs_ext_discount_amt#4546) + cs_ext_sales_price#4547) / 2)) AS year_total#2839] "
          },
          "49" : {
            "sign" : -1104656951,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 366000000,
            "rowCount" : 2000000,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [c_customer_sk#4746, c_customer_id#4747, c_first_name#4754, c_last_name#4755, c_preferred_cust_flag#4756, c_birth_country#4760, c_login#4761, c_email_address#4762], ShuffleQueryStage 12 "
          },
          "6" : {
            "sign" : -845553164,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 63524142537650867916514909744792870122998418767808,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (customer_id#2821 = customer_id#2841) "
          },
          "36" : {
            "sign" : -268161914,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 366000000,
            "rowCount" : 2000000,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [c_customer_sk#4507, c_customer_id#4508, c_first_name#4515, c_last_name#4516, c_preferred_cust_flag#4517, c_birth_country#4521, c_login#4522, c_email_address#4523], ShuffleQueryStage 8 "
          },
          "1" : {
            "sign" : 1552146037,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
            "sizeInBytes" : 95983341723980970236780730492399896925183617050265754496254,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) LocalLimit Arguments: 100 "
          },
          "39" : {
            "sign" : 1436839738,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 31885186254,
            "rowCount" : 142982898,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (c_customer_sk#4746 = cs_bill_customer_sk#4766) "
          },
          "17" : {
            "sign" : -1918321310,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 366000000,
            "rowCount" : 2000000,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [c_customer_sk#30, c_customer_id#31, c_first_name#38, c_last_name#39, c_preferred_cust_flag#40, c_birth_country#44, c_login#45, c_email_address#46], ShuffleQueryStage 1 "
          },
          "25" : {
            "sign" : 79939235,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#4217, ss_item_sk#4218, ss_customer_sk#4219, ss_cdemo_sk#4220, ss_hdemo_sk#4221, ss_addr_sk#4222, ss_store_sk#4223, ss_promo_sk#4224, ss_ticket_number#4225L, ss_quantity#4226, ss_wholesale_cost#4227, ss_list_price#4228, ss_sales_price#4229, ss_ext_discount_amt#4230, ss_ext_sales_price#4231, ss_ext_wholesale_cost#4232, ss_ext_list_price#4233, ss_ext_tax#4234, ss_coupon_amt#4235, ss_net_paid#4236, ss_net_paid_inc_tax#4237, ss_net_profit#4238, ss_sold_date_sk#4239], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "60" : {
            "sign" : -1906529665,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 1470976884440,
            "rowCount" : 26267444365,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ws_sold_date_sk#5355 = d_date_sk#5356) "
          },
          "14" : {
            "sign" : -1768288712,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 59134449465,
            "rowCount" : 275043951,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_customer_id#31, c_first_name#38, c_last_name#39, c_preferred_cust_flag#40, c_birth_country#44, c_login#45, c_email_address#46, ss_ext_discount_amt#61, ss_ext_sales_price#62, ss_ext_wholesale_cost#63, ss_ext_list_price#64, d_year#77] "
          },
          "47" : {
            "sign" : 1473649974,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#4798, d_date_id#4799, d_date#4800, d_month_seq#4801, d_week_seq#4802, d_quarter_seq#4803, d_year#4804, d_dow#4805, d_moy#4806, d_dom#4807, d_qoy#4808, d_fy_year#4809, d_fy_quarter_seq#4810, d_fy_week_seq#4811, d_day_name#4812, d_quarter_name#4813, d_holiday#4814, d_weekend#4815, d_following_holiday#4816, d_first_dom#4817, d_last_dom#4818, d_same_day_ly#4819, d_same_day_lq#4820, d_current_day#4821, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "31" : {
            "sign" : -791359697,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 7435110696,
            "rowCount" : 142982898,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(year_total#2839) AND (year_total#2839 > 0.000000)) "
          },
          "58" : {
            "sign" : 1105249702,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 16132260648,
            "rowCount" : 72341976,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (c_customer_sk#5304 = ws_bill_customer_sk#5325) "
          },
          "64" : {
            "sign" : -2147007074,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 9216,
            "rowCount" : 576,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#5356, d_year#5362] "
          },
          "53" : {
            "sign" : 1864291467,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 16132260648,
            "rowCount" : 72341976,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (c_customer_sk#5065 = ws_bill_customer_sk#5086) "
          },
          "42" : {
            "sign" : -1816861388,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 6842707584,
            "rowCount" : 142556408,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_bill_customer_sk#4766, cs_ext_discount_amt#4785, cs_ext_sales_price#4786, cs_ext_wholesale_cost#4787, cs_ext_list_price#4788, cs_sold_date_sk#4797] "
          },
          "0" : {
            "sign" : -428831400,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
            "sizeInBytes" : 8800,
            "rowCount" : 100,
            "isRuntime" : false,
            "predicate" : " (unknown) GlobalLimit Arguments: 100 "
          },
          "20" : {
            "sign" : -2143420355,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 61334801073,
            "rowCount" : 275043951,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (c_customer_sk#4199 = ss_customer_sk#4219) "
          },
          "27" : {
            "sign" : 596675861,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 141696,
            "rowCount" : 576,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(d_year#4246) AND (d_year#4246 = 2002)) AND isnotnull(d_date_sk#4240)) "
          },
          "2" : {
            "sign" : -863163198,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 95983341723980970236780730492399896925183617050265754496254,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [customer_id#2950 ASC NULLS FIRST, customer_first_name#2951 ASC NULLS FIRST, customer_last_name#2952 ASC NULLS FIRST, customer_email_address#2956 ASC NULLS FIRST], true "
          },
          "38" : {
            "sign" : 1673631872,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 30741323070,
            "rowCount" : 142982898,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_customer_id#4747, c_first_name#4754, c_last_name#4755, c_preferred_cust_flag#4756, c_birth_country#4760, c_login#4761, c_email_address#4762, cs_ext_discount_amt#4785, cs_ext_sales_price#4786, cs_ext_wholesale_cost#4787, cs_ext_list_price#4788, d_year#4804] "
          },
          "18" : {
            "sign" : -1168707141,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 33423819262,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [c_customer_id#4200, c_first_name#4207, c_last_name#4208, c_preferred_cust_flag#4209, c_birth_country#4213, c_login#4214, c_email_address#4215, d_year#4246], [c_customer_id#4200 AS customer_id#2950, c_first_name#4207 AS customer_first_name#2951, c_last_name#4208 AS customer_last_name#2952, c_email_address#4215 AS customer_email_address#2956, sum(((((ss_ext_list_price#4233 - ss_ext_wholesale_cost#4232) - ss_ext_discount_amt#4230) + ss_ext_sales_price#4231) / 2)) AS year_total#2958] "
          },
          "30" : {
            "sign" : -545469420,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 366000000,
            "rowCount" : 2000000,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [c_customer_sk#4199, c_customer_id#4200, c_first_name#4207, c_last_name#4208, c_preferred_cust_flag#4209, c_birth_country#4213, c_login#4214, c_email_address#4215], ShuffleQueryStage 4 "
          },
          "7" : {
            "sign" : 1478317672,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 16886712158982983160989013366817858737154,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [customer_id#2821, customer_id#2950, customer_first_name#2951, customer_last_name#2952, customer_email_address#2956, year_total#2839, year_total#2978] "
          },
          "29" : {
            "sign" : -537096611,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1051496,
            "rowCount" : 365,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#4240, d_year#4246], BroadcastQueryStage 2 "
          },
          "41" : {
            "sign" : -877902759,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 2913852979520,
            "rowCount" : 52033088920,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cs_sold_date_sk#4797 = d_date_sk#4798) "
          },
          "63" : {
            "sign" : 1411799922,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 14972593792,
            "rowCount" : 71983624,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ws_sold_time_sk#5322, ws_ship_date_sk#5323, ws_item_sk#5324, ws_bill_customer_sk#5325, ws_bill_cdemo_sk#5326, ws_bill_hdemo_sk#5327, ws_bill_addr_sk#5328, ws_ship_customer_sk#5329, ws_ship_cdemo_sk#5330, ws_ship_hdemo_sk#5331, ws_ship_addr_sk#5332, ws_web_page_sk#5333, ws_web_site_sk#5334, ws_ship_mode_sk#5335, ws_warehouse_sk#5336, ws_promo_sk#5337, ws_order_number#5338L, ws_quantity#5339, ws_wholesale_cost#5340, ws_list_price#5341, ws_sales_price#5342, ws_ext_discount_amt#5343, ws_ext_sales_price#5344, ws_ext_wholesale_cost#5345, ... 10 more fields], `spark_catalog`.`tpcds_100`.`web_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "3" : {
            "sign" : 1005945461,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 95983341723980970236780730492399896925183617050265754496254,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [customer_id#2950, customer_first_name#2951, customer_last_name#2952, customer_email_address#2956] "
          },
          "52" : {
            "sign" : 1013224406,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 15553524840,
            "rowCount" : 72341976,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_customer_id#5066, c_first_name#5073, c_last_name#5074, c_preferred_cust_flag#5075, c_birth_country#5079, c_login#5080, c_email_address#5081, ws_ext_discount_amt#5104, ws_ext_sales_price#5105, ws_ext_wholesale_cost#5106, ws_ext_list_price#5107, d_year#5123] "
          },
          "28" : {
            "sign" : 716423558,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#4240, d_date_id#4241, d_date#4242, d_month_seq#4243, d_week_seq#4244, d_quarter_seq#4245, d_year#4246, d_dow#4247, d_moy#4248, d_dom#4249, d_qoy#4250, d_fy_year#4251, d_fy_quarter_seq#4252, d_fy_week_seq#4253, d_day_name#4254, d_quarter_name#4255, d_holiday#4256, d_weekend#4257, d_following_holiday#4258, d_first_dom#4259, d_last_dom#4260, d_same_day_ly#4261, d_same_day_lq#4262, d_current_day#4263, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          }
        },
        "links" : [ {
          "fromId" : 16,
          "fromName" : "LogicalQueryStage",
          "toId" : 15,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 17,
          "fromName" : "LogicalQueryStage",
          "toId" : 15,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 15,
          "fromName" : "Join",
          "toId" : 14,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 14,
          "fromName" : "Project",
          "toId" : 13,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 13,
          "fromName" : "Aggregate",
          "toId" : 12,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 12,
          "fromName" : "Filter",
          "toId" : 11,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 25,
          "fromName" : "LogicalRelation",
          "toId" : 24,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 28,
          "fromName" : "LogicalRelation",
          "toId" : 27,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 27,
          "fromName" : "Filter",
          "toId" : 26,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 26,
          "fromName" : "Project",
          "toId" : 24,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 24,
          "fromName" : "Filter",
          "toId" : 23,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 23,
          "fromName" : "Project",
          "toId" : 22,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 29,
          "fromName" : "LogicalQueryStage",
          "toId" : 22,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 22,
          "fromName" : "Join",
          "toId" : 21,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 21,
          "fromName" : "Project",
          "toId" : 20,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 30,
          "fromName" : "LogicalQueryStage",
          "toId" : 20,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 20,
          "fromName" : "Join",
          "toId" : 19,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 19,
          "fromName" : "Project",
          "toId" : 18,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 18,
          "fromName" : "Aggregate",
          "toId" : 11,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "Join",
          "toId" : 10,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 35,
          "fromName" : "LogicalQueryStage",
          "toId" : 34,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 36,
          "fromName" : "LogicalQueryStage",
          "toId" : 34,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 34,
          "fromName" : "Join",
          "toId" : 33,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 33,
          "fromName" : "Project",
          "toId" : 32,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 32,
          "fromName" : "Aggregate",
          "toId" : 31,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 31,
          "fromName" : "Filter",
          "toId" : 10,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "Join",
          "toId" : 9,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "Project",
          "toId" : 8,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 44,
          "fromName" : "LogicalRelation",
          "toId" : 43,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 47,
          "fromName" : "LogicalRelation",
          "toId" : 46,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 46,
          "fromName" : "Filter",
          "toId" : 45,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 45,
          "fromName" : "Project",
          "toId" : 43,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 43,
          "fromName" : "Filter",
          "toId" : 42,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 42,
          "fromName" : "Project",
          "toId" : 41,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 48,
          "fromName" : "LogicalQueryStage",
          "toId" : 41,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 41,
          "fromName" : "Join",
          "toId" : 40,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 40,
          "fromName" : "Project",
          "toId" : 39,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 49,
          "fromName" : "LogicalQueryStage",
          "toId" : 39,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 39,
          "fromName" : "Join",
          "toId" : 38,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 38,
          "fromName" : "Project",
          "toId" : 37,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 37,
          "fromName" : "Aggregate",
          "toId" : 8,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "Join",
          "toId" : 7,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Project",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 54,
          "fromName" : "LogicalQueryStage",
          "toId" : 53,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 55,
          "fromName" : "LogicalQueryStage",
          "toId" : 53,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 53,
          "fromName" : "Join",
          "toId" : 52,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 52,
          "fromName" : "Project",
          "toId" : 51,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 51,
          "fromName" : "Aggregate",
          "toId" : 50,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 50,
          "fromName" : "Filter",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Join",
          "toId" : 5,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Project",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 63,
          "fromName" : "LogicalRelation",
          "toId" : 62,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 66,
          "fromName" : "LogicalRelation",
          "toId" : 65,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 65,
          "fromName" : "Filter",
          "toId" : 64,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 64,
          "fromName" : "Project",
          "toId" : 62,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 62,
          "fromName" : "Filter",
          "toId" : 61,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 61,
          "fromName" : "Project",
          "toId" : 60,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 67,
          "fromName" : "LogicalQueryStage",
          "toId" : 60,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 60,
          "fromName" : "Join",
          "toId" : 59,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 59,
          "fromName" : "Project",
          "toId" : 58,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 68,
          "fromName" : "LogicalQueryStage",
          "toId" : 58,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 58,
          "fromName" : "Join",
          "toId" : 57,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 57,
          "fromName" : "Project",
          "toId" : 56,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 56,
          "fromName" : "Aggregate",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Join",
          "toId" : 3,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Project",
          "toId" : 2,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "LocalLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "LocalLimit",
          "toId" : 0,
          "toName" : "GlobalLimit",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [customer_id#2950 ASC NULLS FIRST, customer_first_name#2951 ASC NULLS FIRST, customer_last_name#2952 ASC NULLS FIRST, customer_email_address#2956 ASC NULLS FIRST], true\n      +- Project [customer_id#2950, customer_first_name#2951, customer_last_name#2952, customer_email_address#2956]\n         +- Join Inner, ((customer_id#2821 = customer_id#2990) AND (CASE WHEN (year_total#2839 > 0.000000) THEN (year_total#2978 / year_total#2839) END > CASE WHEN (year_total#2849 > 0.000000) THEN (year_total#2998 / year_total#2849) END))\n            :- Project [customer_id#2821, customer_id#2950, customer_first_name#2951, customer_last_name#2952, customer_email_address#2956, year_total#2839, year_total#2978, year_total#2849]\n            :  +- Join Inner, (customer_id#2821 = customer_id#2841)\n            :     :- Project [customer_id#2821, customer_id#2950, customer_first_name#2951, customer_last_name#2952, customer_email_address#2956, year_total#2839, year_total#2978]\n            :     :  +- Join Inner, ((customer_id#2821 = customer_id#2970) AND (CASE WHEN (year_total#2839 > 0.000000) THEN (year_total#2978 / year_total#2839) END > CASE WHEN (year_total#2829 > 0.000000) THEN (year_total#2958 / year_total#2829) END))\n            :     :     :- Project [customer_id#2821, year_total#2829, customer_id#2950, customer_first_name#2951, customer_last_name#2952, customer_email_address#2956, year_total#2958, year_total#2839]\n            :     :     :  +- Join Inner, (customer_id#2821 = customer_id#2831)\n            :     :     :     :- Join Inner, (customer_id#2950 = customer_id#2821)\n            :     :     :     :  :- Filter (isnotnull(year_total#2829) AND (year_total#2829 > 0.000000))\n            :     :     :     :  :  +- Aggregate [c_customer_id#31, c_first_name#38, c_last_name#39, c_preferred_cust_flag#40, c_birth_country#44, c_login#45, c_email_address#46, d_year#77], [c_customer_id#31 AS customer_id#2821, sum(((((ss_ext_list_price#64 - ss_ext_wholesale_cost#63) - ss_ext_discount_amt#61) + ss_ext_sales_price#62) / 2)) AS year_total#2829]\n            :     :     :     :  :     +- Project [c_customer_id#31, c_first_name#38, c_last_name#39, c_preferred_cust_flag#40, c_birth_country#44, c_login#45, c_email_address#46, ss_ext_discount_amt#61, ss_ext_sales_price#62, ss_ext_wholesale_cost#63, ss_ext_list_price#64, d_year#77]\n            :     :     :     :  :        +- Join Inner, (c_customer_sk#30 = ss_customer_sk#50)\n            :     :     :     :  :           :- LogicalQueryStage Project [ss_customer_sk#50, ss_ext_discount_amt#61, ss_ext_sales_price#62, ss_ext_wholesale_cost#63, ss_ext_list_price#64, d_year#77], ShuffleQueryStage 21\n            :     :     :     :  :           +- LogicalQueryStage Project [c_customer_sk#30, c_customer_id#31, c_first_name#38, c_last_name#39, c_preferred_cust_flag#40, c_birth_country#44, c_login#45, c_email_address#46], ShuffleQueryStage 1\n            :     :     :     :  +- Aggregate [c_customer_id#4200, c_first_name#4207, c_last_name#4208, c_preferred_cust_flag#4209, c_birth_country#4213, c_login#4214, c_email_address#4215, d_year#4246], [c_customer_id#4200 AS customer_id#2950, c_first_name#4207 AS customer_first_name#2951, c_last_name#4208 AS customer_last_name#2952, c_email_address#4215 AS customer_email_address#2956, sum(((((ss_ext_list_price#4233 - ss_ext_wholesale_cost#4232) - ss_ext_discount_amt#4230) + ss_ext_sales_price#4231) / 2)) AS year_total#2958]\n            :     :     :     :     +- Project [c_customer_id#4200, c_first_name#4207, c_last_name#4208, c_preferred_cust_flag#4209, c_birth_country#4213, c_login#4214, c_email_address#4215, ss_ext_discount_amt#4230, ss_ext_sales_price#4231, ss_ext_wholesale_cost#4232, ss_ext_list_price#4233, d_year#4246]\n            :     :     :     :        +- Join Inner, (c_customer_sk#4199 = ss_customer_sk#4219)\n            :     :     :     :           :- Project [ss_customer_sk#4219, ss_ext_discount_amt#4230, ss_ext_sales_price#4231, ss_ext_wholesale_cost#4232, ss_ext_list_price#4233, d_year#4246]\n            :     :     :     :           :  +- Join Inner, (ss_sold_date_sk#4239 = d_date_sk#4240)\n            :     :     :     :           :     :- Project [ss_customer_sk#4219, ss_ext_discount_amt#4230, ss_ext_sales_price#4231, ss_ext_wholesale_cost#4232, ss_ext_list_price#4233, ss_sold_date_sk#4239]\n            :     :     :     :           :     :  +- Filter ((isnotnull(ss_customer_sk#4219) AND isnotnull(ss_sold_date_sk#4239)) AND dynamicpruning#5495 [ss_sold_date_sk#4239])\n            :     :     :     :           :     :     :  +- Project [d_date_sk#4240, d_year#4246]\n            :     :     :     :           :     :     :     +- Filter ((isnotnull(d_year#4246) AND (d_year#4246 = 2002)) AND isnotnull(d_date_sk#4240))\n            :     :     :     :           :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#4240,d_date_id#4241,d_date#4242,d_month_seq#4243,d_week_seq#4244,d_quarter_seq#4245,d_year#4246,d_dow#4247,d_moy#4248,d_dom#4249,d_qoy#4250,d_fy_year#4251,d_fy_quarter_seq#4252,d_fy_week_seq#4253,d_day_name#4254,d_quarter_name#4255,d_holiday#4256,d_weekend#4257,d_following_holiday#4258,d_first_dom#4259,d_last_dom#4260,d_same_day_ly#4261,d_same_day_lq#4262,d_current_day#4263,... 4 more fields] parquet\n            :     :     :     :           :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#4217,ss_item_sk#4218,ss_customer_sk#4219,ss_cdemo_sk#4220,ss_hdemo_sk#4221,ss_addr_sk#4222,ss_store_sk#4223,ss_promo_sk#4224,ss_ticket_number#4225L,ss_quantity#4226,ss_wholesale_cost#4227,ss_list_price#4228,ss_sales_price#4229,ss_ext_discount_amt#4230,ss_ext_sales_price#4231,ss_ext_wholesale_cost#4232,ss_ext_list_price#4233,ss_ext_tax#4234,ss_coupon_amt#4235,ss_net_paid#4236,ss_net_paid_inc_tax#4237,ss_net_profit#4238,ss_sold_date_sk#4239] parquet\n            :     :     :     :           :     +- LogicalQueryStage Project [d_date_sk#4240, d_year#4246], BroadcastQueryStage 2\n            :     :     :     :           +- LogicalQueryStage Project [c_customer_sk#4199, c_customer_id#4200, c_first_name#4207, c_last_name#4208, c_preferred_cust_flag#4209, c_birth_country#4213, c_login#4214, c_email_address#4215], ShuffleQueryStage 4\n            :     :     :     +- Filter (isnotnull(year_total#2839) AND (year_total#2839 > 0.000000))\n            :     :     :        +- Aggregate [c_customer_id#4508, c_first_name#4515, c_last_name#4516, c_preferred_cust_flag#4517, c_birth_country#4521, c_login#4522, c_email_address#4523, d_year#4565], [c_customer_id#4508 AS customer_id#2831, sum(((((cs_ext_list_price#4549 - cs_ext_wholesale_cost#4548) - cs_ext_discount_amt#4546) + cs_ext_sales_price#4547) / 2)) AS year_total#2839]\n            :     :     :           +- Project [c_customer_id#4508, c_first_name#4515, c_last_name#4516, c_preferred_cust_flag#4517, c_birth_country#4521, c_login#4522, c_email_address#4523, cs_ext_discount_amt#4546, cs_ext_sales_price#4547, cs_ext_wholesale_cost#4548, cs_ext_list_price#4549, d_year#4565]\n            :     :     :              +- Join Inner, (c_customer_sk#4507 = cs_bill_customer_sk#4527)\n            :     :     :                 :- LogicalQueryStage Project [cs_bill_customer_sk#4527, cs_ext_discount_amt#4546, cs_ext_sales_price#4547, cs_ext_wholesale_cost#4548, cs_ext_list_price#4549, d_year#4565], ShuffleQueryStage 22\n            :     :     :                 +- LogicalQueryStage Project [c_customer_sk#4507, c_customer_id#4508, c_first_name#4515, c_last_name#4516, c_preferred_cust_flag#4517, c_birth_country#4521, c_login#4522, c_email_address#4523], ShuffleQueryStage 8\n            :     :     +- Aggregate [c_customer_id#4747, c_first_name#4754, c_last_name#4755, c_preferred_cust_flag#4756, c_birth_country#4760, c_login#4761, c_email_address#4762, d_year#4804], [c_customer_id#4747 AS customer_id#2970, sum(((((cs_ext_list_price#4788 - cs_ext_wholesale_cost#4787) - cs_ext_discount_amt#4785) + cs_ext_sales_price#4786) / 2)) AS year_total#2978]\n            :     :        +- Project [c_customer_id#4747, c_first_name#4754, c_last_name#4755, c_preferred_cust_flag#4756, c_birth_country#4760, c_login#4761, c_email_address#4762, cs_ext_discount_amt#4785, cs_ext_sales_price#4786, cs_ext_wholesale_cost#4787, cs_ext_list_price#4788, d_year#4804]\n            :     :           +- Join Inner, (c_customer_sk#4746 = cs_bill_customer_sk#4766)\n            :     :              :- Project [cs_bill_customer_sk#4766, cs_ext_discount_amt#4785, cs_ext_sales_price#4786, cs_ext_wholesale_cost#4787, cs_ext_list_price#4788, d_year#4804]\n            :     :              :  +- Join Inner, (cs_sold_date_sk#4797 = d_date_sk#4798)\n            :     :              :     :- Project [cs_bill_customer_sk#4766, cs_ext_discount_amt#4785, cs_ext_sales_price#4786, cs_ext_wholesale_cost#4787, cs_ext_list_price#4788, cs_sold_date_sk#4797]\n            :     :              :     :  +- Filter ((isnotnull(cs_bill_customer_sk#4766) AND isnotnull(cs_sold_date_sk#4797)) AND dynamicpruning#5497 [cs_sold_date_sk#4797])\n            :     :              :     :     :  +- Project [d_date_sk#4798, d_year#4804]\n            :     :              :     :     :     +- Filter ((isnotnull(d_year#4804) AND (d_year#4804 = 2002)) AND isnotnull(d_date_sk#4798))\n            :     :              :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#4798,d_date_id#4799,d_date#4800,d_month_seq#4801,d_week_seq#4802,d_quarter_seq#4803,d_year#4804,d_dow#4805,d_moy#4806,d_dom#4807,d_qoy#4808,d_fy_year#4809,d_fy_quarter_seq#4810,d_fy_week_seq#4811,d_day_name#4812,d_quarter_name#4813,d_holiday#4814,d_weekend#4815,d_following_holiday#4816,d_first_dom#4817,d_last_dom#4818,d_same_day_ly#4819,d_same_day_lq#4820,d_current_day#4821,... 4 more fields] parquet\n            :     :              :     :     +- Relation spark_catalog.tpcds_100.catalog_sales[cs_sold_time_sk#4764,cs_ship_date_sk#4765,cs_bill_customer_sk#4766,cs_bill_cdemo_sk#4767,cs_bill_hdemo_sk#4768,cs_bill_addr_sk#4769,cs_ship_customer_sk#4770,cs_ship_cdemo_sk#4771,cs_ship_hdemo_sk#4772,cs_ship_addr_sk#4773,cs_call_center_sk#4774,cs_catalog_page_sk#4775,cs_ship_mode_sk#4776,cs_warehouse_sk#4777,cs_item_sk#4778,cs_promo_sk#4779,cs_order_number#4780L,cs_quantity#4781,cs_wholesale_cost#4782,cs_list_price#4783,cs_sales_price#4784,cs_ext_discount_amt#4785,cs_ext_sales_price#4786,cs_ext_wholesale_cost#4787,... 10 more fields] parquet\n            :     :              :     +- LogicalQueryStage Project [d_date_sk#4798, d_year#4804], BroadcastQueryStage 10\n            :     :              +- LogicalQueryStage Project [c_customer_sk#4746, c_customer_id#4747, c_first_name#4754, c_last_name#4755, c_preferred_cust_flag#4756, c_birth_country#4760, c_login#4761, c_email_address#4762], ShuffleQueryStage 12\n            :     +- Filter (isnotnull(year_total#2849) AND (year_total#2849 > 0.000000))\n            :        +- Aggregate [c_customer_id#5066, c_first_name#5073, c_last_name#5074, c_preferred_cust_flag#5075, c_birth_country#5079, c_login#5080, c_email_address#5081, d_year#5123], [c_customer_id#5066 AS customer_id#2841, sum(((((ws_ext_list_price#5107 - ws_ext_wholesale_cost#5106) - ws_ext_discount_amt#5104) + ws_ext_sales_price#5105) / 2)) AS year_total#2849]\n            :           +- Project [c_customer_id#5066, c_first_name#5073, c_last_name#5074, c_preferred_cust_flag#5075, c_birth_country#5079, c_login#5080, c_email_address#5081, ws_ext_discount_amt#5104, ws_ext_sales_price#5105, ws_ext_wholesale_cost#5106, ws_ext_list_price#5107, d_year#5123]\n            :              +- Join Inner, (c_customer_sk#5065 = ws_bill_customer_sk#5086)\n            :                 :- LogicalQueryStage Project [ws_bill_customer_sk#5086, ws_ext_discount_amt#5104, ws_ext_sales_price#5105, ws_ext_wholesale_cost#5106, ws_ext_list_price#5107, d_year#5123], ShuffleQueryStage 23\n            :                 +- LogicalQueryStage Project [c_customer_sk#5065, c_customer_id#5066, c_first_name#5073, c_last_name#5074, c_preferred_cust_flag#5075, c_birth_country#5079, c_login#5080, c_email_address#5081], ShuffleQueryStage 16\n            +- Aggregate [c_customer_id#5305, c_first_name#5312, c_last_name#5313, c_preferred_cust_flag#5314, c_birth_country#5318, c_login#5319, c_email_address#5320, d_year#5362], [c_customer_id#5305 AS customer_id#2990, sum(((((ws_ext_list_price#5346 - ws_ext_wholesale_cost#5345) - ws_ext_discount_amt#5343) + ws_ext_sales_price#5344) / 2)) AS year_total#2998]\n               +- Project [c_customer_id#5305, c_first_name#5312, c_last_name#5313, c_preferred_cust_flag#5314, c_birth_country#5318, c_login#5319, c_email_address#5320, ws_ext_discount_amt#5343, ws_ext_sales_price#5344, ws_ext_wholesale_cost#5345, ws_ext_list_price#5346, d_year#5362]\n                  +- Join Inner, (c_customer_sk#5304 = ws_bill_customer_sk#5325)\n                     :- Project [ws_bill_customer_sk#5325, ws_ext_discount_amt#5343, ws_ext_sales_price#5344, ws_ext_wholesale_cost#5345, ws_ext_list_price#5346, d_year#5362]\n                     :  +- Join Inner, (ws_sold_date_sk#5355 = d_date_sk#5356)\n                     :     :- Project [ws_bill_customer_sk#5325, ws_ext_discount_amt#5343, ws_ext_sales_price#5344, ws_ext_wholesale_cost#5345, ws_ext_list_price#5346, ws_sold_date_sk#5355]\n                     :     :  +- Filter ((isnotnull(ws_bill_customer_sk#5325) AND isnotnull(ws_sold_date_sk#5355)) AND dynamicpruning#5499 [ws_sold_date_sk#5355])\n                     :     :     :  +- Project [d_date_sk#5356, d_year#5362]\n                     :     :     :     +- Filter ((isnotnull(d_year#5362) AND (d_year#5362 = 2002)) AND isnotnull(d_date_sk#5356))\n                     :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#5356,d_date_id#5357,d_date#5358,d_month_seq#5359,d_week_seq#5360,d_quarter_seq#5361,d_year#5362,d_dow#5363,d_moy#5364,d_dom#5365,d_qoy#5366,d_fy_year#5367,d_fy_quarter_seq#5368,d_fy_week_seq#5369,d_day_name#5370,d_quarter_name#5371,d_holiday#5372,d_weekend#5373,d_following_holiday#5374,d_first_dom#5375,d_last_dom#5376,d_same_day_ly#5377,d_same_day_lq#5378,d_current_day#5379,... 4 more fields] parquet\n                     :     :     +- Relation spark_catalog.tpcds_100.web_sales[ws_sold_time_sk#5322,ws_ship_date_sk#5323,ws_item_sk#5324,ws_bill_customer_sk#5325,ws_bill_cdemo_sk#5326,ws_bill_hdemo_sk#5327,ws_bill_addr_sk#5328,ws_ship_customer_sk#5329,ws_ship_cdemo_sk#5330,ws_ship_hdemo_sk#5331,ws_ship_addr_sk#5332,ws_web_page_sk#5333,ws_web_site_sk#5334,ws_ship_mode_sk#5335,ws_warehouse_sk#5336,ws_promo_sk#5337,ws_order_number#5338L,ws_quantity#5339,ws_wholesale_cost#5340,ws_list_price#5341,ws_sales_price#5342,ws_ext_discount_amt#5343,ws_ext_sales_price#5344,ws_ext_wholesale_cost#5345,... 10 more fields] parquet\n                     :     +- LogicalQueryStage Project [d_date_sk#5356, d_year#5362], BroadcastQueryStage 18\n                     +- LogicalQueryStage Project [c_customer_sk#5304, c_customer_id#5305, c_first_name#5312, c_last_name#5313, c_preferred_cust_flag#5314, c_birth_country#5318, c_login#5319, c_email_address#5320], ShuffleQueryStage 20\n"
      },
      "IM" : {
        "inputSizeInBytes" : 111509947168,
        "inputRowCount" : 975855541
      },
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 16,
        "FinishedTasksNum" : 13,
        "FinishedTasksTotalTimeInMs" : 18486.0,
        "FinishedTasksDistributionInMs" : [ 1193.0, 1333.0, 1396.0, 1494.0, 1707.0 ]
      },
      "StartTimeInMs" : 1702226515449,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 53229,
        "IOBytes" : {
          "Total" : 14441863667,
          "Details" : {
            "IR" : 3122746217,
            "IW" : 0,
            "SR" : 6038854810,
            "SW" : 5280262640
          }
        }
      }
    },
    "18" : {
      "LQP" : {
        "operators" : {
          "12" : {
            "sign" : -1458191872,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 101735088,
            "rowCount" : 1816698,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Filter (isnotnull(year_total#2829) AND (year_total#2829 > 0.000000)), ShuffleQueryStage 33 "
          },
          "8" : {
            "sign" : -1884134972,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 25088456347714779868285693974900,
            "rowCount" : 111504250434287910525714195444,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, ((customer_id#2821 = customer_id#2970) AND (CASE WHEN (year_total#2839 > 0.000000) THEN (year_total#2978 / year_total#2839) END > CASE WHEN (year_total#2829 > 0.000000) THEN (year_total#2958 / year_total#2829) END)) "
          },
          "4" : {
            "sign" : -1967237978,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 19353953947129028772206960338309046798908524,
            "rowCount" : 89188727866954049641506729669626943773772,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, ((customer_id#2821 = customer_id#2990) AND (CASE WHEN (year_total#2839 > 0.000000) THEN (year_total#2978 / year_total#2839) END > CASE WHEN (year_total#2849 > 0.000000) THEN (year_total#2998 / year_total#2849) END)) "
          },
          "15" : {
            "sign" : -1414276816,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 7435110696,
            "rowCount" : 142982898,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [c_customer_id#4747, c_first_name#4754, c_last_name#4755, c_preferred_cust_flag#4756, c_birth_country#4760, c_login#4761, c_email_address#4762, d_year#4804], [c_customer_id#4747 AS customer_id#2970, sum(((((cs_ext_list_price#4788 - cs_ext_wholesale_cost#4787) - cs_ext_discount_amt#4785) + cs_ext_sales_price#4786) / 2)) AS year_total#2978], HashAggregate(keys=[c_customer_id#4747, c_first_name#4754, c_last_name#4755, c_preferred_cust_flag#4756, c_birth_country#4760, c_login#4761, c_email_address#4762, d_year#4804], functions=[sum(((((cs_ext_list_price#4788 - cs_ext_wholesale_cost#4787) - cs_ext_discount_amt#4785) + cs_ext_sales_price#4786) / 2))]) "
          },
          "11" : {
            "sign" : -1441832503,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 82445846289476670,
            "rowCount" : 499671795693798,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (customer_id#2950 = customer_id#2821) "
          },
          "9" : {
            "sign" : -262489225,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 141151631495160433838418,
            "rowCount" : 779843267929063170378,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [customer_id#2821, year_total#2829, customer_id#2950, customer_first_name#2951, customer_last_name#2952, customer_email_address#2956, year_total#2958, year_total#2839] "
          },
          "13" : {
            "sign" : 2038413297,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 35480669679,
            "rowCount" : 275043951,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [c_customer_id#4200, c_first_name#4207, c_last_name#4208, c_preferred_cust_flag#4209, c_birth_country#4213, c_login#4214, c_email_address#4215, d_year#4246], [c_customer_id#4200 AS customer_id#2950, c_first_name#4207 AS customer_first_name#2951, c_last_name#4208 AS customer_last_name#2952, c_email_address#4215 AS customer_email_address#2956, sum(((((ss_ext_list_price#4233 - ss_ext_wholesale_cost#4232) - ss_ext_discount_amt#4230) + ss_ext_sales_price#4231) / 2)) AS year_total#2958], ShuffleQueryStage 36 "
          },
          "16" : {
            "sign" : 2009240091,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 49646632,
            "rowCount" : 886547,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Filter (isnotnull(year_total#2849) AND (year_total#2849 > 0.000000)), ShuffleQueryStage 34 "
          },
          "5" : {
            "sign" : 1542204426,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 17892530326467762602524102051920828108,
            "rowCount" : 98853758709766644212840342828291868,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [customer_id#2821, customer_id#2950, customer_first_name#2951, customer_last_name#2952, customer_email_address#2956, year_total#2839, year_total#2978, year_total#2849] "
          },
          "10" : {
            "sign" : 1387654351,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 156748496853741697245978,
            "rowCount" : 779843267929063170378,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (customer_id#2821 = customer_id#2831) "
          },
          "6" : {
            "sign" : 1337486816,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 19869605500663095486780908908486665468,
            "rowCount" : 98853758709766644212840342828291868,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (customer_id#2821 = customer_id#2841) "
          },
          "1" : {
            "sign" : 296920270,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
            "sizeInBytes" : 10078326248965807609490260452667844646436236,
            "rowCount" : 89188727866954049641506729669626943773772,
            "isRuntime" : false,
            "predicate" : " (unknown) LocalLimit Arguments: 100 "
          },
          "17" : {
            "sign" : 404059991,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 166933240,
            "rowCount" : 902229,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [c_customer_id#5305, c_first_name#5312, c_last_name#5313, c_preferred_cust_flag#5314, c_birth_country#5318, c_login#5319, c_email_address#5320, d_year#5362], [c_customer_id#5305 AS customer_id#2990, sum(((((ws_ext_list_price#5346 - ws_ext_wholesale_cost#5345) - ws_ext_discount_amt#5343) + ws_ext_sales_price#5344) / 2)) AS year_total#2998], HashAggregate(keys=[c_customer_id#5305, c_first_name#5312, c_last_name#5313, c_preferred_cust_flag#5314, c_birth_country#5318, c_login#5319, c_email_address#5320, d_year#5362], functions=[sum(((((ws_ext_list_price#5346 - ws_ext_wholesale_cost#5345) - ws_ext_discount_amt#5343) + ws_ext_sales_price#5344) / 2))]) "
          },
          "14" : {
            "sign" : 275524156,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 87399816,
            "rowCount" : 1560711,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Filter (isnotnull(year_total#2839) AND (year_total#2839 > 0.000000)), ShuffleQueryStage 35 "
          },
          "0" : {
            "sign" : 1444708045,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
            "sizeInBytes" : 8800,
            "rowCount" : 100,
            "isRuntime" : false,
            "predicate" : " (unknown) GlobalLimit Arguments: 100 "
          },
          "2" : {
            "sign" : 1461105699,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 10078326248965807609490260452667844646436236,
            "rowCount" : 89188727866954049641506729669626943773772,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [customer_id#2950 ASC NULLS FIRST, customer_first_name#2951 ASC NULLS FIRST, customer_last_name#2952 ASC NULLS FIRST, customer_email_address#2956 ASC NULLS FIRST], true "
          },
          "7" : {
            "sign" : 1178387794,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 18398201321657505236742842248260,
            "rowCount" : 111504250434287910525714195444,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [customer_id#2821, customer_id#2950, customer_first_name#2951, customer_last_name#2952, customer_email_address#2956, year_total#2839, year_total#2978] "
          },
          "3" : {
            "sign" : -255943154,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 10078326248965807609490260452667844646436236,
            "rowCount" : 89188727866954049641506729669626943773772,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [customer_id#2950, customer_first_name#2951, customer_last_name#2952, customer_email_address#2956] "
          }
        },
        "links" : [ {
          "fromId" : 12,
          "fromName" : "LogicalQueryStage",
          "toId" : 11,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 13,
          "fromName" : "LogicalQueryStage",
          "toId" : 11,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "Join",
          "toId" : 10,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 14,
          "fromName" : "LogicalQueryStage",
          "toId" : 10,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "Join",
          "toId" : 9,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "Project",
          "toId" : 8,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 15,
          "fromName" : "LogicalQueryStage",
          "toId" : 8,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "Join",
          "toId" : 7,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Project",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 16,
          "fromName" : "LogicalQueryStage",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Join",
          "toId" : 5,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Project",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 17,
          "fromName" : "LogicalQueryStage",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Join",
          "toId" : 3,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Project",
          "toId" : 2,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "LocalLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "LocalLimit",
          "toId" : 0,
          "toName" : "GlobalLimit",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [customer_id#2950 ASC NULLS FIRST, customer_first_name#2951 ASC NULLS FIRST, customer_last_name#2952 ASC NULLS FIRST, customer_email_address#2956 ASC NULLS FIRST], true\n      +- Project [customer_id#2950, customer_first_name#2951, customer_last_name#2952, customer_email_address#2956]\n         +- Join Inner, ((customer_id#2821 = customer_id#2990) AND (CASE WHEN (year_total#2839 > 0.000000) THEN (year_total#2978 / year_total#2839) END > CASE WHEN (year_total#2849 > 0.000000) THEN (year_total#2998 / year_total#2849) END))\n            :- Project [customer_id#2821, customer_id#2950, customer_first_name#2951, customer_last_name#2952, customer_email_address#2956, year_total#2839, year_total#2978, year_total#2849]\n            :  +- Join Inner, (customer_id#2821 = customer_id#2841)\n            :     :- Project [customer_id#2821, customer_id#2950, customer_first_name#2951, customer_last_name#2952, customer_email_address#2956, year_total#2839, year_total#2978]\n            :     :  +- Join Inner, ((customer_id#2821 = customer_id#2970) AND (CASE WHEN (year_total#2839 > 0.000000) THEN (year_total#2978 / year_total#2839) END > CASE WHEN (year_total#2829 > 0.000000) THEN (year_total#2958 / year_total#2829) END))\n            :     :     :- Project [customer_id#2821, year_total#2829, customer_id#2950, customer_first_name#2951, customer_last_name#2952, customer_email_address#2956, year_total#2958, year_total#2839]\n            :     :     :  +- Join Inner, (customer_id#2821 = customer_id#2831)\n            :     :     :     :- Join Inner, (customer_id#2950 = customer_id#2821)\n            :     :     :     :  :- LogicalQueryStage Filter (isnotnull(year_total#2829) AND (year_total#2829 > 0.000000)), ShuffleQueryStage 33\n            :     :     :     :  +- LogicalQueryStage Aggregate [c_customer_id#4200, c_first_name#4207, c_last_name#4208, c_preferred_cust_flag#4209, c_birth_country#4213, c_login#4214, c_email_address#4215, d_year#4246], [c_customer_id#4200 AS customer_id#2950, c_first_name#4207 AS customer_first_name#2951, c_last_name#4208 AS customer_last_name#2952, c_email_address#4215 AS customer_email_address#2956, sum(((((ss_ext_list_price#4233 - ss_ext_wholesale_cost#4232) - ss_ext_discount_amt#4230) + ss_ext_sales_price#4231) / 2)) AS year_total#2958], ShuffleQueryStage 36\n            :     :     :     +- LogicalQueryStage Filter (isnotnull(year_total#2839) AND (year_total#2839 > 0.000000)), ShuffleQueryStage 35\n            :     :     +- LogicalQueryStage Aggregate [c_customer_id#4747, c_first_name#4754, c_last_name#4755, c_preferred_cust_flag#4756, c_birth_country#4760, c_login#4761, c_email_address#4762, d_year#4804], [c_customer_id#4747 AS customer_id#2970, sum(((((cs_ext_list_price#4788 - cs_ext_wholesale_cost#4787) - cs_ext_discount_amt#4785) + cs_ext_sales_price#4786) / 2)) AS year_total#2978], HashAggregate(keys=[c_customer_id#4747, c_first_name#4754, c_last_name#4755, c_preferred_cust_flag#4756, c_birth_country#4760, c_login#4761, c_email_address#4762, d_year#4804], functions=[sum(((((cs_ext_list_price#4788 - cs_ext_wholesale_cost#4787) - cs_ext_discount_amt#4785) + cs_ext_sales_price#4786) / 2))])\n            :     +- LogicalQueryStage Filter (isnotnull(year_total#2849) AND (year_total#2849 > 0.000000)), ShuffleQueryStage 34\n            +- LogicalQueryStage Aggregate [c_customer_id#5305, c_first_name#5312, c_last_name#5313, c_preferred_cust_flag#5314, c_birth_country#5318, c_login#5319, c_email_address#5320, d_year#5362], [c_customer_id#5305 AS customer_id#2990, sum(((((ws_ext_list_price#5346 - ws_ext_wholesale_cost#5345) - ws_ext_discount_amt#5343) + ws_ext_sales_price#5344) / 2)) AS year_total#2998], HashAggregate(keys=[c_customer_id#5305, c_first_name#5312, c_last_name#5313, c_preferred_cust_flag#5314, c_birth_country#5318, c_login#5319, c_email_address#5320, d_year#5362], functions=[sum(((((ws_ext_list_price#5346 - ws_ext_wholesale_cost#5345) - ws_ext_discount_amt#5343) + ws_ext_sales_price#5344) / 2))])\n"
      },
      "IM" : {
        "inputSizeInBytes" : 43321495151,
        "inputRowCount" : 423193034
      },
      "PD" : {
        "14" : [ 75848, 71345, 71345, 77101, 77101, 77101, 70092, 77101, 75848, 77101, 77101, 71345, 77101, 77101, 75848, 77101, 75848, 77101, 77101, 77101, 71345, 77101, 75848, 77101, 70092, 77101, 77101, 71345, 75848, 75848, 71345, 77101, 75848, 75848, 77101, 77101, 75848, 70092, 75848, 70092, 75848, 75848, 75848, 70092, 75848, 75848, 77101, 75848, 75848, 77101, 75848, 77101, 77101, 77101, 77101, 71345, 77101, 78479, 77101, 77101, 75848, 77101, 77101, 77101, 75848, 71345, 75848, 75848, 77101, 75848, 77101, 77101, 75848, 75848, 75848, 75848, 75848, 75848, 77101, 77101, 77101, 75848, 75848, 75848, 77101, 75848, 77101, 75848, 75848, 75848, 77101, 77101, 77101, 75848, 75848, 75848, 77101, 75848, 75848, 77101, 71345, 77101, 77101, 75848, 77101, 75848, 77101, 77101, 70092, 77101, 77101, 77101, 70092, 77101, 77101, 70092, 72723, 77101, 77101, 75848, 77101, 75848, 77101, 77101, 77101, 75848, 75848, 70092, 75848, 75848, 77101, 75848, 77101, 75848, 77101, 75848, 77101, 75848, 75848, 75848, 77101, 77101, 77101, 71345, 75848, 77101, 75848, 77101, 77101, 77101, 77101, 77101, 77101, 70092, 77101, 77101, 75848, 77101, 70092, 75848, 77101, 75848, 75848, 77101, 77101, 75848, 75848, 77101, 77101, 75848, 75848, 77101, 77101, 77101, 70092, 71345, 71345, 77101, 75848, 75848, 75848, 77101, 75848, 77101, 77101, 77101, 71345, 75848, 75848, 75848, 77101, 77101, 75848, 77101, 77101, 75848, 77101, 77101, 77101, 75848 ],
        "13" : [ 153496, 153496, 147740, 153496, 153496, 147740, 141984, 147740, 153496, 156181, 153496, 153496, 153496, 156181, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 147740, 153496, 153496, 153496, 156181, 153496, 153496, 156181, 153496, 153496, 141984, 153496, 153496, 147740, 156181, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 156181, 153496, 147740, 153496, 156181, 150425, 153496, 153496, 153496, 150425, 156181, 153496, 147740, 153496, 153496, 156181, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 156181, 153496, 153496, 153496, 147740, 153496, 153496, 150425, 153496, 153496, 153496, 156181, 156181, 153496, 153496, 153496, 153496, 147740, 153496, 153496, 153496, 153496, 156181, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 156181, 147740, 153496, 153496, 153496, 156181, 153496, 153496, 153496, 153496, 153496, 156181, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 156181, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 156181, 153496, 153496, 147740, 153496, 147740, 153496, 150425, 153496, 153496, 153496, 153496, 156181, 147740, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 147740, 153496, 147740, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 147740, 147740, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 147740, 156181, 156181, 153496, 156181, 153496, 153496, 153496, 153496, 156181, 153496 ],
        "15" : [ 130298, 124542, 130298, 130298, 136054, 130298, 124542, 130298, 136054, 136054, 136054, 130298, 136054, 136995, 136054, 136054, 130298, 131239, 136995, 130298, 136054, 131239, 135198, 135198, 136054, 136054, 130298, 130298, 135198, 135198, 136054, 136995, 136995, 136054, 136995, 135198, 135198, 130298, 135198, 136054, 136054, 136054, 136054, 136054, 130298, 136054, 135198, 130298, 136054, 136054, 135198, 136054, 136054, 136995, 136054, 130298, 136054, 135198, 136995, 130298, 136054, 135198, 130298, 136054, 136054, 130298, 130298, 135198, 136054, 130298, 136054, 136054, 135198, 135198, 130298, 130298, 136054, 136054, 135198, 130298, 135198, 130298, 135198, 130298, 136054, 136054, 136995, 136054, 130298, 135198, 136995, 136995, 136995, 136054, 135198, 130298, 136054, 136995, 136054, 136054, 136995, 136054, 136054, 136054, 135198, 135198, 136054, 136054, 136054, 136995, 131239, 136054, 129442, 136054, 130298, 130298, 136995, 136054, 136054, 136054, 135198, 136054, 135198, 135198, 136054, 136054, 136054, 135198, 135198, 129442, 130298, 135198, 136054, 136054, 136054, 130298, 136054, 135198, 136054, 135198, 136054, 135198, 136054, 136054, 129442, 130298, 136054, 130298, 136054, 136054, 136054, 136054, 136995, 130298, 136054, 136054, 129442, 136054, 130298, 129442, 136054, 136995, 130298, 135198, 136054, 135198, 135198, 136054, 130298, 135198, 135198, 136054, 136054, 136995, 124542, 130298, 130298, 130298, 136054, 136995, 136054, 135198, 136054, 136995, 130298, 136054, 135198, 129442, 130298, 130298, 136054, 136995, 136054, 130298, 136054, 129442, 136054, 136054, 136995, 136054 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 4,
        "FinishedTasksNum" : 13,
        "FinishedTasksTotalTimeInMs" : 47997.0,
        "FinishedTasksDistributionInMs" : [ 866.0, 3854.0, 4018.0, 4173.0, 4955.0 ]
      },
      "StartTimeInMs" : 1702226551921,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 16757,
        "IOBytes" : {
          "Total" : 1720912523,
          "Details" : {
            "IR" : 0,
            "IW" : 0,
            "SR" : 1420880045,
            "SW" : 300032478
          }
        }
      }
    },
    "7" : {
      "LQP" : {
        "operators" : {
          "34" : {
            "sign" : -979568171,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 26686312320000000,
            "rowCount" : 138991210000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (c_customer_sk#5304 = ws_bill_customer_sk#5325) "
          },
          "12" : {
            "sign" : 1582451270,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 14302285452,
            "rowCount" : 275043951,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(year_total#2829) AND (year_total#2829 > 0.000000)) "
          },
          "8" : {
            "sign" : -303425121,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 63457431402217218710907791441682326098186829136000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, ((customer_id#2821 = customer_id#2970) AND (CASE WHEN (year_total#2839 > 0.000000) THEN (year_total#2978 / year_total#2839) END > CASE WHEN (year_total#2829 > 0.000000) THEN (year_total#2958 / year_total#2829) END)) "
          },
          "19" : {
            "sign" : -237935041,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 7435110696,
            "rowCount" : 142982898,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(year_total#2839) AND (year_total#2839 > 0.000000)) "
          },
          "23" : {
            "sign" : -1247342346,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 53190244608000000,
            "rowCount" : 277032524000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (c_customer_sk#4746 = cs_bill_customer_sk#4766) "
          },
          "4" : {
            "sign" : -56078845,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 315974547591240316468174310188556628261061537416651013346571702000000000000000000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, ((customer_id#2821 = customer_id#2990) AND (CASE WHEN (year_total#2839 > 0.000000) THEN (year_total#2978 / year_total#2839) END > CASE WHEN (year_total#2849 > 0.000000) THEN (year_total#2998 / year_total#2849) END)) "
          },
          "15" : {
            "sign" : 1578530028,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 97718935280000000,
            "rowCount" : 531081170000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_customer_id#4200, c_first_name#4207, c_last_name#4208, c_preferred_cust_flag#4209, c_birth_country#4213, c_login#4214, c_email_address#4215, ss_ext_discount_amt#4230, ss_ext_sales_price#4231, ss_ext_wholesale_cost#4232, ss_ext_list_price#4233, d_year#4246] "
          },
          "11" : {
            "sign" : -1621618442,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 789950147118302439360000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (customer_id#2950 = customer_id#2821) "
          },
          "9" : {
            "sign" : -1481577849,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 5205938744038556766492924281541818181,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [customer_id#2821, year_total#2829, customer_id#2950, customer_first_name#2951, customer_last_name#2952, customer_email_address#2956, year_total#2958, year_total#2839] "
          },
          "33" : {
            "sign" : 103842726,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 25574382640000000,
            "rowCount" : 138991210000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_customer_id#5305, c_first_name#5312, c_last_name#5313, c_preferred_cust_flag#5314, c_birth_country#5318, c_login#5319, c_email_address#5320, ws_ext_discount_amt#5343, ws_ext_sales_price#5344, ws_ext_wholesale_cost#5345, ws_ext_list_price#5346, d_year#5362] "
          },
          "22" : {
            "sign" : -1411007706,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 50973984416000000,
            "rowCount" : 277032524000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_customer_id#4747, c_first_name#4754, c_last_name#4755, c_preferred_cust_flag#4756, c_birth_country#4760, c_login#4761, c_email_address#4762, cs_ext_discount_amt#4785, cs_ext_sales_price#4786, cs_ext_wholesale_cost#4787, cs_ext_list_price#4788, d_year#4804] "
          },
          "26" : {
            "sign" : 830600325,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 1259768840000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(year_total#2849) AND (year_total#2849 > 0.000000)) "
          },
          "13" : {
            "sign" : 429932782,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 14302285452,
            "rowCount" : 275043951,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [c_customer_id#31, c_first_name#38, c_last_name#39, c_preferred_cust_flag#40, c_birth_country#44, c_login#45, c_email_address#46, d_year#77], [c_customer_id#31 AS customer_id#2821, sum(((((ss_ext_list_price#64 - ss_ext_wholesale_cost#63) - ss_ext_discount_amt#61) + ss_ext_sales_price#62) / 2)) AS year_total#2829], HashAggregate(keys=[c_customer_id#31, c_first_name#38, c_last_name#39, c_preferred_cust_flag#40, c_birth_country#44, c_login#45, c_email_address#46, d_year#77], functions=[sum(((((ss_ext_list_price#64 - ss_ext_wholesale_cost#63) - ss_ext_discount_amt#61) + ss_ext_sales_price#62) / 2))]) "
          },
          "24" : {
            "sign" : -186934941,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 6648780576,
            "rowCount" : 138516262,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [cs_bill_customer_sk#4766, cs_ext_discount_amt#4785, cs_ext_sales_price#4786, cs_ext_wholesale_cost#4787, cs_ext_list_price#4788, d_year#4804], ShuffleQueryStage 25 "
          },
          "35" : {
            "sign" : -983899132,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 3335789040,
            "rowCount" : 69495605,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ws_bill_customer_sk#5325, ws_ext_discount_amt#5343, ws_ext_sales_price#5344, ws_ext_wholesale_cost#5345, ws_ext_list_price#5346, d_year#5362], ShuffleQueryStage 26 "
          },
          "16" : {
            "sign" : -284003848,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 101967584640000000,
            "rowCount" : 531081170000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (c_customer_sk#4199 = ss_customer_sk#4219) "
          },
          "5" : {
            "sign" : 1050619237,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 51666862371963913870422307835241168432858834188908096050000000000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [customer_id#2821, customer_id#2950, customer_first_name#2951, customer_last_name#2952, customer_email_address#2956, year_total#2839, year_total#2978, year_total#2849] "
          },
          "10" : {
            "sign" : 967225781,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 5873366788146064044248427394560000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (customer_id#2821 = customer_id#2831) "
          },
          "21" : {
            "sign" : -558918111,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 12189431056000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [c_customer_id#4747, c_first_name#4754, c_last_name#4755, c_preferred_cust_flag#4756, c_birth_country#4760, c_login#4761, c_email_address#4762, d_year#4804], [c_customer_id#4747 AS customer_id#2970, sum(((((cs_ext_list_price#4788 - cs_ext_wholesale_cost#4787) - cs_ext_discount_amt#4785) + cs_ext_sales_price#4786) / 2)) AS year_total#2978] "
          },
          "32" : {
            "sign" : 1099149837,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 6115613240000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [c_customer_id#5305, c_first_name#5312, c_last_name#5313, c_preferred_cust_flag#5314, c_birth_country#5318, c_login#5319, c_email_address#5320, d_year#5362], [c_customer_id#5305 AS customer_id#2990, sum(((((ws_ext_list_price#5346 - ws_ext_wholesale_cost#5345) - ws_ext_discount_amt#5343) + ws_ext_sales_price#5344) / 2)) AS year_total#2998] "
          },
          "6" : {
            "sign" : 101545059,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 58290819086318261802527731916682343872968941136204005800000000000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (customer_id#2821 = customer_id#2841) "
          },
          "36" : {
            "sign" : -149944874,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 306068840,
            "rowCount" : 2000000,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [c_customer_sk#5304, c_customer_id#5305, c_first_name#5312, c_last_name#5313, c_preferred_cust_flag#5314, c_birth_country#5318, c_login#5319, c_email_address#5320], ShuffleQueryStage 20 "
          },
          "1" : {
            "sign" : 732128095,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
            "sizeInBytes" : 144821667645985145047913225503088454619653204649298381117178696750000000000000000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) LocalLimit Arguments: 100 "
          },
          "17" : {
            "sign" : 1961017369,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 12745948080,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ss_customer_sk#4219, ss_ext_discount_amt#4230, ss_ext_sales_price#4231, ss_ext_wholesale_cost#4232, ss_ext_list_price#4233, d_year#4246], ShuffleQueryStage 24 "
          },
          "25" : {
            "sign" : -1104656951,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 306068840,
            "rowCount" : 2000000,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [c_customer_sk#4746, c_customer_id#4747, c_first_name#4754, c_last_name#4755, c_preferred_cust_flag#4756, c_birth_country#4760, c_login#4761, c_email_address#4762], ShuffleQueryStage 12 "
          },
          "14" : {
            "sign" : 1669679482,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 55232441680000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [c_customer_id#4200, c_first_name#4207, c_last_name#4208, c_preferred_cust_flag#4209, c_birth_country#4213, c_login#4214, c_email_address#4215, d_year#4246], [c_customer_id#4200 AS customer_id#2950, c_first_name#4207 AS customer_first_name#2951, c_last_name#4208 AS customer_last_name#2952, c_email_address#4215 AS customer_email_address#2956, sum(((((ss_ext_list_price#4233 - ss_ext_wholesale_cost#4232) - ss_ext_discount_amt#4230) + ss_ext_sales_price#4231) / 2)) AS year_total#2958] "
          },
          "31" : {
            "sign" : -8231932,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 306068840,
            "rowCount" : 2000000,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [c_customer_sk#5065, c_customer_id#5066, c_first_name#5073, c_last_name#5074, c_preferred_cust_flag#5075, c_birth_country#5079, c_login#5080, c_email_address#5081], ShuffleQueryStage 16 "
          },
          "0" : {
            "sign" : 168377724,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
            "sizeInBytes" : 8800,
            "rowCount" : 100,
            "isRuntime" : false,
            "predicate" : " (unknown) GlobalLimit Arguments: 100 "
          },
          "20" : {
            "sign" : 802064549,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 7435110696,
            "rowCount" : 142982898,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [c_customer_id#4508, c_first_name#4515, c_last_name#4516, c_preferred_cust_flag#4517, c_birth_country#4521, c_login#4522, c_email_address#4523, d_year#4565], [c_customer_id#4508 AS customer_id#2831, sum(((((cs_ext_list_price#4549 - cs_ext_wholesale_cost#4548) - cs_ext_discount_amt#4546) + cs_ext_sales_price#4547) / 2)) AS year_total#2839], HashAggregate(keys=[c_customer_id#4508, c_first_name#4515, c_last_name#4516, c_preferred_cust_flag#4517, c_birth_country#4521, c_login#4522, c_email_address#4523, d_year#4565], functions=[sum(((((cs_ext_list_price#4549 - cs_ext_wholesale_cost#4548) - cs_ext_discount_amt#4546) + cs_ext_sales_price#4547) / 2))]) "
          },
          "27" : {
            "sign" : 263073841,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 1259768840000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [c_customer_id#5066, c_first_name#5073, c_last_name#5074, c_preferred_cust_flag#5075, c_birth_country#5079, c_login#5080, c_email_address#5081, d_year#5123], [c_customer_id#5066 AS customer_id#2841, sum(((((ws_ext_list_price#5107 - ws_ext_wholesale_cost#5106) - ws_ext_discount_amt#5104) + ws_ext_sales_price#5105) / 2)) AS year_total#2849] "
          },
          "2" : {
            "sign" : 1116912294,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 144821667645985145047913225503088454619653204649298381117178696750000000000000000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [customer_id#2950 ASC NULLS FIRST, customer_first_name#2951 ASC NULLS FIRST, customer_last_name#2952 ASC NULLS FIRST, customer_email_address#2956 ASC NULLS FIRST], true "
          },
          "18" : {
            "sign" : -545469420,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 306068840,
            "rowCount" : 2000000,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [c_customer_sk#4199, c_customer_id#4200, c_first_name#4207, c_last_name#4208, c_preferred_cust_flag#4209, c_birth_country#4213, c_login#4214, c_email_address#4215], ShuffleQueryStage 4 "
          },
          "30" : {
            "sign" : -2060825732,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 801671080,
            "rowCount" : 14315555,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ws_bill_customer_sk#5086, ws_ext_discount_amt#5104, ws_ext_sales_price#5105, ws_ext_wholesale_cost#5106, ws_ext_list_price#5107, d_year#5123], ShuffleQueryStage 23 "
          },
          "7" : {
            "sign" : -1528807325,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 46271043730783388643370264592893362779927896245000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [customer_id#2821, customer_id#2950, customer_first_name#2951, customer_last_name#2952, customer_email_address#2956, year_total#2839, year_total#2978] "
          },
          "29" : {
            "sign" : 1864291467,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 5497173120000000,
            "rowCount" : 28631110000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (c_customer_sk#5065 = ws_bill_customer_sk#5086) "
          },
          "3" : {
            "sign" : -1758052833,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 144821667645985145047913225503088454619653204649298381117178696750000000000000000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [customer_id#2950, customer_first_name#2951, customer_last_name#2952, customer_email_address#2956] "
          },
          "28" : {
            "sign" : 1013224406,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 5268124240000000,
            "rowCount" : 28631110000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_customer_id#5066, c_first_name#5073, c_last_name#5074, c_preferred_cust_flag#5075, c_birth_country#5079, c_login#5080, c_email_address#5081, ws_ext_discount_amt#5104, ws_ext_sales_price#5105, ws_ext_wholesale_cost#5106, ws_ext_list_price#5107, d_year#5123] "
          }
        },
        "links" : [ {
          "fromId" : 13,
          "fromName" : "LogicalQueryStage",
          "toId" : 12,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 12,
          "fromName" : "Filter",
          "toId" : 11,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 17,
          "fromName" : "LogicalQueryStage",
          "toId" : 16,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 18,
          "fromName" : "LogicalQueryStage",
          "toId" : 16,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 16,
          "fromName" : "Join",
          "toId" : 15,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 15,
          "fromName" : "Project",
          "toId" : 14,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 14,
          "fromName" : "Aggregate",
          "toId" : 11,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "Join",
          "toId" : 10,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 20,
          "fromName" : "LogicalQueryStage",
          "toId" : 19,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 19,
          "fromName" : "Filter",
          "toId" : 10,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "Join",
          "toId" : 9,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "Project",
          "toId" : 8,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 24,
          "fromName" : "LogicalQueryStage",
          "toId" : 23,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 25,
          "fromName" : "LogicalQueryStage",
          "toId" : 23,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 23,
          "fromName" : "Join",
          "toId" : 22,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 22,
          "fromName" : "Project",
          "toId" : 21,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 21,
          "fromName" : "Aggregate",
          "toId" : 8,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "Join",
          "toId" : 7,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Project",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 30,
          "fromName" : "LogicalQueryStage",
          "toId" : 29,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 31,
          "fromName" : "LogicalQueryStage",
          "toId" : 29,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 29,
          "fromName" : "Join",
          "toId" : 28,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 28,
          "fromName" : "Project",
          "toId" : 27,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 27,
          "fromName" : "Aggregate",
          "toId" : 26,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 26,
          "fromName" : "Filter",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Join",
          "toId" : 5,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Project",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 35,
          "fromName" : "LogicalQueryStage",
          "toId" : 34,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 36,
          "fromName" : "LogicalQueryStage",
          "toId" : 34,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 34,
          "fromName" : "Join",
          "toId" : 33,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 33,
          "fromName" : "Project",
          "toId" : 32,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 32,
          "fromName" : "Aggregate",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Join",
          "toId" : 3,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Project",
          "toId" : 2,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "LocalLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "LocalLimit",
          "toId" : 0,
          "toName" : "GlobalLimit",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [customer_id#2950 ASC NULLS FIRST, customer_first_name#2951 ASC NULLS FIRST, customer_last_name#2952 ASC NULLS FIRST, customer_email_address#2956 ASC NULLS FIRST], true\n      +- Project [customer_id#2950, customer_first_name#2951, customer_last_name#2952, customer_email_address#2956]\n         +- Join Inner, ((customer_id#2821 = customer_id#2990) AND (CASE WHEN (year_total#2839 > 0.000000) THEN (year_total#2978 / year_total#2839) END > CASE WHEN (year_total#2849 > 0.000000) THEN (year_total#2998 / year_total#2849) END))\n            :- Project [customer_id#2821, customer_id#2950, customer_first_name#2951, customer_last_name#2952, customer_email_address#2956, year_total#2839, year_total#2978, year_total#2849]\n            :  +- Join Inner, (customer_id#2821 = customer_id#2841)\n            :     :- Project [customer_id#2821, customer_id#2950, customer_first_name#2951, customer_last_name#2952, customer_email_address#2956, year_total#2839, year_total#2978]\n            :     :  +- Join Inner, ((customer_id#2821 = customer_id#2970) AND (CASE WHEN (year_total#2839 > 0.000000) THEN (year_total#2978 / year_total#2839) END > CASE WHEN (year_total#2829 > 0.000000) THEN (year_total#2958 / year_total#2829) END))\n            :     :     :- Project [customer_id#2821, year_total#2829, customer_id#2950, customer_first_name#2951, customer_last_name#2952, customer_email_address#2956, year_total#2958, year_total#2839]\n            :     :     :  +- Join Inner, (customer_id#2821 = customer_id#2831)\n            :     :     :     :- Join Inner, (customer_id#2950 = customer_id#2821)\n            :     :     :     :  :- Filter (isnotnull(year_total#2829) AND (year_total#2829 > 0.000000))\n            :     :     :     :  :  +- LogicalQueryStage Aggregate [c_customer_id#31, c_first_name#38, c_last_name#39, c_preferred_cust_flag#40, c_birth_country#44, c_login#45, c_email_address#46, d_year#77], [c_customer_id#31 AS customer_id#2821, sum(((((ss_ext_list_price#64 - ss_ext_wholesale_cost#63) - ss_ext_discount_amt#61) + ss_ext_sales_price#62) / 2)) AS year_total#2829], HashAggregate(keys=[c_customer_id#31, c_first_name#38, c_last_name#39, c_preferred_cust_flag#40, c_birth_country#44, c_login#45, c_email_address#46, d_year#77], functions=[sum(((((ss_ext_list_price#64 - ss_ext_wholesale_cost#63) - ss_ext_discount_amt#61) + ss_ext_sales_price#62) / 2))])\n            :     :     :     :  +- Aggregate [c_customer_id#4200, c_first_name#4207, c_last_name#4208, c_preferred_cust_flag#4209, c_birth_country#4213, c_login#4214, c_email_address#4215, d_year#4246], [c_customer_id#4200 AS customer_id#2950, c_first_name#4207 AS customer_first_name#2951, c_last_name#4208 AS customer_last_name#2952, c_email_address#4215 AS customer_email_address#2956, sum(((((ss_ext_list_price#4233 - ss_ext_wholesale_cost#4232) - ss_ext_discount_amt#4230) + ss_ext_sales_price#4231) / 2)) AS year_total#2958]\n            :     :     :     :     +- Project [c_customer_id#4200, c_first_name#4207, c_last_name#4208, c_preferred_cust_flag#4209, c_birth_country#4213, c_login#4214, c_email_address#4215, ss_ext_discount_amt#4230, ss_ext_sales_price#4231, ss_ext_wholesale_cost#4232, ss_ext_list_price#4233, d_year#4246]\n            :     :     :     :        +- Join Inner, (c_customer_sk#4199 = ss_customer_sk#4219)\n            :     :     :     :           :- LogicalQueryStage Project [ss_customer_sk#4219, ss_ext_discount_amt#4230, ss_ext_sales_price#4231, ss_ext_wholesale_cost#4232, ss_ext_list_price#4233, d_year#4246], ShuffleQueryStage 24\n            :     :     :     :           +- LogicalQueryStage Project [c_customer_sk#4199, c_customer_id#4200, c_first_name#4207, c_last_name#4208, c_preferred_cust_flag#4209, c_birth_country#4213, c_login#4214, c_email_address#4215], ShuffleQueryStage 4\n            :     :     :     +- Filter (isnotnull(year_total#2839) AND (year_total#2839 > 0.000000))\n            :     :     :        +- LogicalQueryStage Aggregate [c_customer_id#4508, c_first_name#4515, c_last_name#4516, c_preferred_cust_flag#4517, c_birth_country#4521, c_login#4522, c_email_address#4523, d_year#4565], [c_customer_id#4508 AS customer_id#2831, sum(((((cs_ext_list_price#4549 - cs_ext_wholesale_cost#4548) - cs_ext_discount_amt#4546) + cs_ext_sales_price#4547) / 2)) AS year_total#2839], HashAggregate(keys=[c_customer_id#4508, c_first_name#4515, c_last_name#4516, c_preferred_cust_flag#4517, c_birth_country#4521, c_login#4522, c_email_address#4523, d_year#4565], functions=[sum(((((cs_ext_list_price#4549 - cs_ext_wholesale_cost#4548) - cs_ext_discount_amt#4546) + cs_ext_sales_price#4547) / 2))])\n            :     :     +- Aggregate [c_customer_id#4747, c_first_name#4754, c_last_name#4755, c_preferred_cust_flag#4756, c_birth_country#4760, c_login#4761, c_email_address#4762, d_year#4804], [c_customer_id#4747 AS customer_id#2970, sum(((((cs_ext_list_price#4788 - cs_ext_wholesale_cost#4787) - cs_ext_discount_amt#4785) + cs_ext_sales_price#4786) / 2)) AS year_total#2978]\n            :     :        +- Project [c_customer_id#4747, c_first_name#4754, c_last_name#4755, c_preferred_cust_flag#4756, c_birth_country#4760, c_login#4761, c_email_address#4762, cs_ext_discount_amt#4785, cs_ext_sales_price#4786, cs_ext_wholesale_cost#4787, cs_ext_list_price#4788, d_year#4804]\n            :     :           +- Join Inner, (c_customer_sk#4746 = cs_bill_customer_sk#4766)\n            :     :              :- LogicalQueryStage Project [cs_bill_customer_sk#4766, cs_ext_discount_amt#4785, cs_ext_sales_price#4786, cs_ext_wholesale_cost#4787, cs_ext_list_price#4788, d_year#4804], ShuffleQueryStage 25\n            :     :              +- LogicalQueryStage Project [c_customer_sk#4746, c_customer_id#4747, c_first_name#4754, c_last_name#4755, c_preferred_cust_flag#4756, c_birth_country#4760, c_login#4761, c_email_address#4762], ShuffleQueryStage 12\n            :     +- Filter (isnotnull(year_total#2849) AND (year_total#2849 > 0.000000))\n            :        +- Aggregate [c_customer_id#5066, c_first_name#5073, c_last_name#5074, c_preferred_cust_flag#5075, c_birth_country#5079, c_login#5080, c_email_address#5081, d_year#5123], [c_customer_id#5066 AS customer_id#2841, sum(((((ws_ext_list_price#5107 - ws_ext_wholesale_cost#5106) - ws_ext_discount_amt#5104) + ws_ext_sales_price#5105) / 2)) AS year_total#2849]\n            :           +- Project [c_customer_id#5066, c_first_name#5073, c_last_name#5074, c_preferred_cust_flag#5075, c_birth_country#5079, c_login#5080, c_email_address#5081, ws_ext_discount_amt#5104, ws_ext_sales_price#5105, ws_ext_wholesale_cost#5106, ws_ext_list_price#5107, d_year#5123]\n            :              +- Join Inner, (c_customer_sk#5065 = ws_bill_customer_sk#5086)\n            :                 :- LogicalQueryStage Project [ws_bill_customer_sk#5086, ws_ext_discount_amt#5104, ws_ext_sales_price#5105, ws_ext_wholesale_cost#5106, ws_ext_list_price#5107, d_year#5123], ShuffleQueryStage 23\n            :                 +- LogicalQueryStage Project [c_customer_sk#5065, c_customer_id#5066, c_first_name#5073, c_last_name#5074, c_preferred_cust_flag#5075, c_birth_country#5079, c_login#5080, c_email_address#5081], ShuffleQueryStage 16\n            +- Aggregate [c_customer_id#5305, c_first_name#5312, c_last_name#5313, c_preferred_cust_flag#5314, c_birth_country#5318, c_login#5319, c_email_address#5320, d_year#5362], [c_customer_id#5305 AS customer_id#2990, sum(((((ws_ext_list_price#5346 - ws_ext_wholesale_cost#5345) - ws_ext_discount_amt#5343) + ws_ext_sales_price#5344) / 2)) AS year_total#2998]\n               +- Project [c_customer_id#5305, c_first_name#5312, c_last_name#5313, c_preferred_cust_flag#5314, c_birth_country#5318, c_login#5319, c_email_address#5320, ws_ext_discount_amt#5343, ws_ext_sales_price#5344, ws_ext_wholesale_cost#5345, ws_ext_list_price#5346, d_year#5362]\n                  +- Join Inner, (c_customer_sk#5304 = ws_bill_customer_sk#5325)\n                     :- LogicalQueryStage Project [ws_bill_customer_sk#5325, ws_ext_discount_amt#5343, ws_ext_sales_price#5344, ws_ext_wholesale_cost#5345, ws_ext_list_price#5346, d_year#5362], ShuffleQueryStage 26\n                     +- LogicalQueryStage Project [c_customer_sk#5304, c_customer_id#5305, c_first_name#5312, c_last_name#5313, c_preferred_cust_flag#5314, c_birth_country#5318, c_login#5319, c_email_address#5320], ShuffleQueryStage 20\n"
      },
      "IM" : {
        "inputSizeInBytes" : 46493860284,
        "inputRowCount" : 913894856
      },
      "PD" : {
        "3" : [ 1787186, 1765194, 1735778, 1720345, 1703287, 1812213, 1705028, 1711545, 1741569, 1763109, 1772252, 1705222, 1753479, 1756094, 1689907, 1758915, 1755444, 1796374, 1799628, 1791156, 1732925, 1735720, 1766498, 1754113, 1724029, 1772375, 1758834, 1763577, 1731997, 1750669, 1704655, 1806109, 1723946, 1718885, 1748357, 1723327, 1722296, 1706491, 1721379, 1723079, 1678458, 1747243, 1706590, 1752645, 1769465, 1726211, 1734474, 1755741, 1742926, 1721355, 1772492, 1819843, 1749235, 1790174, 1768652, 1719442, 1713428, 1660808, 1699673, 1740955, 1757408, 1728979, 1733119, 1763779, 1728813, 1780240, 1743735, 1694325, 1743401, 1744995, 1773203, 1768537, 1756395, 1758585, 1761146, 1747179, 1796260, 1799142, 1759882, 1733753, 1746057, 1791790, 1819179, 1694649, 1706590, 1734815, 1724425, 1736153, 1742322, 1781007, 1759051, 1741097, 1827144, 1769441, 1707238, 1748781, 1757469, 1717140, 1818520, 1733041, 1696347, 1769067, 1765053, 1756777, 1703901, 1734465, 1738735, 1734924, 1666169, 1730973, 1729137, 1729857, 1770080, 1669382, 1707319, 1727961, 1690222, 1713075, 1708417, 1719717, 1731225, 1692680, 1781739, 1719137, 1803805, 1780382, 1752289, 1762222, 1719858, 1744589, 1743239, 1750262, 1708493, 1734442, 1778410, 1726716, 1758258, 1731747, 1761168, 1726617, 1735341, 1733717, 1738384, 1769589, 1721549, 1726441, 1815098, 1697991, 1793599, 1805448, 1794256, 1755841, 1831246, 1764815, 1746903, 1778189, 1747620, 1761661, 1780130, 1705869, 1740787, 1746135, 1755192, 1725797, 1755518, 1762822, 1732742, 1775044, 1799912, 1743065, 1725932, 1783842, 1750793, 1769764, 1725156, 1719983, 1703453, 1728848, 1766593, 1769213, 1771841, 1770825, 1784455, 1684529, 1786964, 1723188, 1761384, 1684043, 1737170, 1766839, 1770374, 1721355, 1795103, 1696479, 1738438, 1767973, 1770188, 1735503, 1819870, 1693178 ],
        "0" : [ 830145, 830145, 754677, 830145, 830145, 830145, 754677, 754677, 830145, 830145, 830145, 754677, 830145, 830145, 754677, 830145, 830145, 830145, 754677, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 754677, 830145, 830145, 754677, 830145, 830145, 754677, 754677, 754677, 754677, 754677, 830145, 754677, 830145, 830145, 754677, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 754677, 754677, 754677, 830145, 830145, 830145, 754677, 830145, 754677, 830145, 830145, 754677, 830145, 830145, 830145, 754677, 754677, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 754677, 754677, 754677, 754677, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 754677, 754677, 830145, 754677, 754677, 830145, 830145, 754677, 830145, 830145, 830145, 830145, 754677, 754677, 830145, 830145, 830145, 754677, 830145, 830145, 754677, 754677, 754677, 830145, 754677, 830145, 830145, 754677, 830145, 830145, 754677, 754677, 754677, 754677, 830145, 830145, 830145, 830145, 754677, 754677, 830145, 830145, 830145, 830145, 754677, 754677, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 754677, 754677, 830145, 830145, 754677, 830145, 830145, 830145, 830145, 830145, 754677, 830145, 830145, 830145, 830145, 830145, 754677, 830145, 754677, 830145, 754677, 754677, 830145, 830145, 754677, 830145, 830145, 830145, 830145, 754677, 830145, 830145, 830145, 754677, 754677, 830145, 830145, 830145, 830145, 830145, 754677 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 16,
        "FinishedTasksNum" : 3,
        "FinishedTasksTotalTimeInMs" : 3298.0,
        "FinishedTasksDistributionInMs" : [ 1006.0, 1006.0, 1126.0, 1166.0, 1166.0 ]
      },
      "StartTimeInMs" : 1702226521656,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 47022,
        "IOBytes" : {
          "Total" : 10621164099,
          "Details" : {
            "IR" : 1526916049,
            "IW" : 0,
            "SR" : 6038854810,
            "SW" : 3055393240
          }
        }
      }
    },
    "3" : {
      "LQP" : {
        "operators" : {
          "34" : {
            "sign" : 830600325,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 6115613240000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(year_total#2849) AND (year_total#2849 > 0.000000)) "
          },
          "12" : {
            "sign" : -156756162,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 23367571480000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(year_total#2829) AND (year_total#2829 > 0.000000)) "
          },
          "8" : {
            "sign" : 1552567801,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 169975615967580821550610392970472522342400000000000000000000000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, ((customer_id#2821 = customer_id#2970) AND (CASE WHEN (year_total#2839 > 0.000000) THEN (year_total#2978 / year_total#2839) END > CASE WHEN (year_total#2829 > 0.000000) THEN (year_total#2958 / year_total#2829) END)) "
          },
          "19" : {
            "sign" : 1578530028,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 97718935280000000,
            "rowCount" : 531081170000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_customer_id#4200, c_first_name#4207, c_last_name#4208, c_preferred_cust_flag#4209, c_birth_country#4213, c_login#4214, c_email_address#4215, ss_ext_discount_amt#4230, ss_ext_sales_price#4231, ss_ext_wholesale_cost#4232, ss_ext_list_price#4233, d_year#4246] "
          },
          "23" : {
            "sign" : -791359697,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 12189431056000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(year_total#2839) AND (year_total#2839 > 0.000000)) "
          },
          "4" : {
            "sign" : 2042273313,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 4108709021201724117944950252046160133979965535131819084800000000000000000000000000000000000000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, ((customer_id#2821 = customer_id#2990) AND (CASE WHEN (year_total#2839 > 0.000000) THEN (year_total#2978 / year_total#2839) END > CASE WHEN (year_total#2849 > 0.000000) THEN (year_total#2998 / year_total#2849) END)) "
          },
          "40" : {
            "sign" : 1099149837,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 6115613240000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [c_customer_id#5305, c_first_name#5312, c_last_name#5313, c_preferred_cust_flag#5314, c_birth_country#5318, c_login#5319, c_email_address#5320, d_year#5362], [c_customer_id#5305 AS customer_id#2990, sum(((((ws_ext_list_price#5346 - ws_ext_wholesale_cost#5345) - ws_ext_discount_amt#5343) + ws_ext_sales_price#5344) / 2)) AS year_total#2998] "
          },
          "15" : {
            "sign" : -1238535703,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 101967584640000000,
            "rowCount" : 531081170000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (c_customer_sk#30 = ss_customer_sk#50) "
          },
          "11" : {
            "sign" : -235742484,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 1290648028972331286400000000000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (customer_id#2950 = customer_id#2821) "
          },
          "9" : {
            "sign" : -1666945939,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 13944507761411372434986796070400000000000000000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [customer_id#2821, year_total#2829, customer_id#2950, customer_first_name#2951, customer_last_name#2952, customer_email_address#2956, year_total#2958, year_total#2839] "
          },
          "44" : {
            "sign" : -149944874,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 306068840,
            "rowCount" : 2000000,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [c_customer_sk#5304, c_customer_id#5305, c_first_name#5312, c_last_name#5313, c_preferred_cust_flag#5314, c_birth_country#5318, c_login#5319, c_email_address#5320], ShuffleQueryStage 20 "
          },
          "33" : {
            "sign" : -1104656951,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 306068840,
            "rowCount" : 2000000,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [c_customer_sk#4746, c_customer_id#4747, c_first_name#4754, c_last_name#4755, c_preferred_cust_flag#4756, c_birth_country#4760, c_login#4761, c_email_address#4762], ShuffleQueryStage 12 "
          },
          "22" : {
            "sign" : -545469420,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 306068840,
            "rowCount" : 2000000,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [c_customer_sk#4199, c_customer_id#4200, c_first_name#4207, c_last_name#4208, c_preferred_cust_flag#4209, c_birth_country#4213, c_login#4214, c_email_address#4215], ShuffleQueryStage 4 "
          },
          "26" : {
            "sign" : 1188748241,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 53190244608000000,
            "rowCount" : 277032524000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (c_customer_sk#4507 = cs_bill_customer_sk#4527) "
          },
          "37" : {
            "sign" : 1864291467,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 26686312320000000,
            "rowCount" : 138991210000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (c_customer_sk#5065 = ws_bill_customer_sk#5086) "
          },
          "13" : {
            "sign" : -1150214364,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 23367571480000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [c_customer_id#31, c_first_name#38, c_last_name#39, c_preferred_cust_flag#40, c_birth_country#44, c_login#45, c_email_address#46, d_year#77], [c_customer_id#31 AS customer_id#2821, sum(((((ss_ext_list_price#64 - ss_ext_wholesale_cost#63) - ss_ext_discount_amt#61) + ss_ext_sales_price#62) / 2)) AS year_total#2829] "
          },
          "24" : {
            "sign" : 421427731,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 12189431056000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [c_customer_id#4508, c_first_name#4515, c_last_name#4516, c_preferred_cust_flag#4517, c_birth_country#4521, c_login#4522, c_email_address#4523, d_year#4565], [c_customer_id#4508 AS customer_id#2831, sum(((((cs_ext_list_price#4549 - cs_ext_wholesale_cost#4548) - cs_ext_discount_amt#4546) + cs_ext_sales_price#4547) / 2)) AS year_total#2839] "
          },
          "35" : {
            "sign" : 263073841,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 6115613240000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [c_customer_id#5066, c_first_name#5073, c_last_name#5074, c_preferred_cust_flag#5075, c_birth_country#5079, c_login#5080, c_email_address#5081, d_year#5123], [c_customer_id#5066 AS customer_id#2841, sum(((((ws_ext_list_price#5107 - ws_ext_wholesale_cost#5106) - ws_ext_discount_amt#5104) + ws_ext_sales_price#5105) / 2)) AS year_total#2849] "
          },
          "16" : {
            "sign" : 1000661201,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 12745948080,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ss_customer_sk#50, ss_ext_discount_amt#61, ss_ext_sales_price#62, ss_ext_wholesale_cost#63, ss_ext_list_price#64, d_year#77], ShuffleQueryStage 21 "
          },
          "5" : {
            "sign" : -951250717,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 671839251430772969865725232167585557450975355520000000000000000000000000000000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [customer_id#2821, customer_id#2950, customer_first_name#2951, customer_last_name#2952, customer_email_address#2956, year_total#2839, year_total#2978, year_total#2849] "
          },
          "10" : {
            "sign" : -419034197,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 15732265166720522747164590438400000000000000000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (customer_id#2821 = customer_id#2831) "
          },
          "21" : {
            "sign" : 1961017369,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 12745948080,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ss_customer_sk#4219, ss_ext_discount_amt#4230, ss_ext_sales_price#4231, ss_ext_wholesale_cost#4232, ss_ext_list_price#4233, d_year#4246], ShuffleQueryStage 24 "
          },
          "43" : {
            "sign" : -983899132,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 3335789040,
            "rowCount" : 69495605,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ws_bill_customer_sk#5325, ws_ext_discount_amt#5343, ws_ext_sales_price#5344, ws_ext_wholesale_cost#5345, ws_ext_list_price#5346, d_year#5362], ShuffleQueryStage 26 "
          },
          "32" : {
            "sign" : -186934941,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 6648780576,
            "rowCount" : 138516262,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [cs_bill_customer_sk#4766, cs_ext_discount_amt#4785, cs_ext_sales_price#4786, cs_ext_wholesale_cost#4787, cs_ext_list_price#4788, d_year#4804], ShuffleQueryStage 25 "
          },
          "6" : {
            "sign" : -326641307,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 757972488793692581386972056804455500713920913920000000000000000000000000000000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (customer_id#2821 = customer_id#2841) "
          },
          "36" : {
            "sign" : 1013224406,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 25574382640000000,
            "rowCount" : 138991210000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_customer_id#5066, c_first_name#5073, c_last_name#5074, c_preferred_cust_flag#5075, c_birth_country#5079, c_login#5080, c_email_address#5081, ws_ext_discount_amt#5104, ws_ext_sales_price#5105, ws_ext_wholesale_cost#5106, ws_ext_list_price#5107, d_year#5123] "
          },
          "1" : {
            "sign" : -1824399275,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
            "sizeInBytes" : 1883158301384123554058102198854490061407484203602083747200000000000000000000000000000000000000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) LocalLimit Arguments: 100 "
          },
          "39" : {
            "sign" : -8231932,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 306068840,
            "rowCount" : 2000000,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [c_customer_sk#5065, c_customer_id#5066, c_first_name#5073, c_last_name#5074, c_preferred_cust_flag#5075, c_birth_country#5079, c_login#5080, c_email_address#5081], ShuffleQueryStage 16 "
          },
          "17" : {
            "sign" : -1918321310,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 306068840,
            "rowCount" : 2000000,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [c_customer_sk#30, c_customer_id#31, c_first_name#38, c_last_name#39, c_preferred_cust_flag#40, c_birth_country#44, c_login#45, c_email_address#46], ShuffleQueryStage 1 "
          },
          "25" : {
            "sign" : 1201651664,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 50973984416000000,
            "rowCount" : 277032524000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_customer_id#4508, c_first_name#4515, c_last_name#4516, c_preferred_cust_flag#4517, c_birth_country#4521, c_login#4522, c_email_address#4523, cs_ext_discount_amt#4546, cs_ext_sales_price#4547, cs_ext_wholesale_cost#4548, cs_ext_list_price#4549, d_year#4565] "
          },
          "14" : {
            "sign" : -1768288712,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 97718935280000000,
            "rowCount" : 531081170000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_customer_id#31, c_first_name#38, c_last_name#39, c_preferred_cust_flag#40, c_birth_country#44, c_login#45, c_email_address#46, ss_ext_discount_amt#61, ss_ext_sales_price#62, ss_ext_wholesale_cost#63, ss_ext_list_price#64, d_year#77] "
          },
          "31" : {
            "sign" : -1247342346,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 53190244608000000,
            "rowCount" : 277032524000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (c_customer_sk#4746 = cs_bill_customer_sk#4766) "
          },
          "42" : {
            "sign" : -979568171,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 26686312320000000,
            "rowCount" : 138991210000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (c_customer_sk#5304 = ws_bill_customer_sk#5325) "
          },
          "0" : {
            "sign" : -201500710,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
            "sizeInBytes" : 8800,
            "rowCount" : 100,
            "isRuntime" : false,
            "predicate" : " (unknown) GlobalLimit Arguments: 100 "
          },
          "20" : {
            "sign" : -284003848,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 101967584640000000,
            "rowCount" : 531081170000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (c_customer_sk#4199 = ss_customer_sk#4219) "
          },
          "27" : {
            "sign" : -1147336357,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 6648780576,
            "rowCount" : 138516262,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [cs_bill_customer_sk#4527, cs_ext_discount_amt#4546, cs_ext_sales_price#4547, cs_ext_wholesale_cost#4548, cs_ext_list_price#4549, d_year#4565], ShuffleQueryStage 22 "
          },
          "2" : {
            "sign" : 609274372,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 1883158301384123554058102198854490061407484203602083747200000000000000000000000000000000000000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [customer_id#2950 ASC NULLS FIRST, customer_first_name#2951 ASC NULLS FIRST, customer_last_name#2952 ASC NULLS FIRST, customer_email_address#2956 ASC NULLS FIRST], true "
          },
          "38" : {
            "sign" : -2060825732,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 3335789040,
            "rowCount" : 69495605,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ws_bill_customer_sk#5086, ws_ext_discount_amt#5104, ws_ext_sales_price#5105, ws_ext_wholesale_cost#5106, ws_ext_list_price#5107, d_year#5123], ShuffleQueryStage 23 "
          },
          "18" : {
            "sign" : 1669679482,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 55232441680000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [c_customer_id#4200, c_first_name#4207, c_last_name#4208, c_preferred_cust_flag#4209, c_birth_country#4213, c_login#4214, c_email_address#4215, d_year#4246], [c_customer_id#4200 AS customer_id#2950, c_first_name#4207 AS customer_first_name#2951, c_last_name#4208 AS customer_last_name#2952, c_email_address#4215 AS customer_email_address#2956, sum(((((ss_ext_list_price#4233 - ss_ext_wholesale_cost#4232) - ss_ext_discount_amt#4230) + ss_ext_sales_price#4231) / 2)) AS year_total#2958] "
          },
          "30" : {
            "sign" : -1411007706,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 50973984416000000,
            "rowCount" : 277032524000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_customer_id#4747, c_first_name#4754, c_last_name#4755, c_preferred_cust_flag#4756, c_birth_country#4760, c_login#4761, c_email_address#4762, cs_ext_discount_amt#4785, cs_ext_sales_price#4786, cs_ext_wholesale_cost#4787, cs_ext_list_price#4788, d_year#4804] "
          },
          "7" : {
            "sign" : 1858777073,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 123940553309694349047320078207636214208000000000000000000000000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [customer_id#2821, customer_id#2950, customer_first_name#2951, customer_last_name#2952, customer_email_address#2956, year_total#2839, year_total#2978] "
          },
          "29" : {
            "sign" : -558918111,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 12189431056000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [c_customer_id#4747, c_first_name#4754, c_last_name#4755, c_preferred_cust_flag#4756, c_birth_country#4760, c_login#4761, c_email_address#4762, d_year#4804], [c_customer_id#4747 AS customer_id#2970, sum(((((cs_ext_list_price#4788 - cs_ext_wholesale_cost#4787) - cs_ext_discount_amt#4785) + cs_ext_sales_price#4786) / 2)) AS year_total#2978] "
          },
          "41" : {
            "sign" : 103842726,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 25574382640000000,
            "rowCount" : 138991210000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_customer_id#5305, c_first_name#5312, c_last_name#5313, c_preferred_cust_flag#5314, c_birth_country#5318, c_login#5319, c_email_address#5320, ws_ext_discount_amt#5343, ws_ext_sales_price#5344, ws_ext_wholesale_cost#5345, ws_ext_list_price#5346, d_year#5362] "
          },
          "3" : {
            "sign" : 1227264661,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 1883158301384123554058102198854490061407484203602083747200000000000000000000000000000000000000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [customer_id#2950, customer_first_name#2951, customer_last_name#2952, customer_email_address#2956] "
          },
          "28" : {
            "sign" : -268161914,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 306068840,
            "rowCount" : 2000000,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [c_customer_sk#4507, c_customer_id#4508, c_first_name#4515, c_last_name#4516, c_preferred_cust_flag#4517, c_birth_country#4521, c_login#4522, c_email_address#4523], ShuffleQueryStage 8 "
          }
        },
        "links" : [ {
          "fromId" : 16,
          "fromName" : "LogicalQueryStage",
          "toId" : 15,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 17,
          "fromName" : "LogicalQueryStage",
          "toId" : 15,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 15,
          "fromName" : "Join",
          "toId" : 14,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 14,
          "fromName" : "Project",
          "toId" : 13,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 13,
          "fromName" : "Aggregate",
          "toId" : 12,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 12,
          "fromName" : "Filter",
          "toId" : 11,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 21,
          "fromName" : "LogicalQueryStage",
          "toId" : 20,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 22,
          "fromName" : "LogicalQueryStage",
          "toId" : 20,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 20,
          "fromName" : "Join",
          "toId" : 19,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 19,
          "fromName" : "Project",
          "toId" : 18,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 18,
          "fromName" : "Aggregate",
          "toId" : 11,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "Join",
          "toId" : 10,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 27,
          "fromName" : "LogicalQueryStage",
          "toId" : 26,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 28,
          "fromName" : "LogicalQueryStage",
          "toId" : 26,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 26,
          "fromName" : "Join",
          "toId" : 25,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 25,
          "fromName" : "Project",
          "toId" : 24,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 24,
          "fromName" : "Aggregate",
          "toId" : 23,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 23,
          "fromName" : "Filter",
          "toId" : 10,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "Join",
          "toId" : 9,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "Project",
          "toId" : 8,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 32,
          "fromName" : "LogicalQueryStage",
          "toId" : 31,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 33,
          "fromName" : "LogicalQueryStage",
          "toId" : 31,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 31,
          "fromName" : "Join",
          "toId" : 30,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 30,
          "fromName" : "Project",
          "toId" : 29,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 29,
          "fromName" : "Aggregate",
          "toId" : 8,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "Join",
          "toId" : 7,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Project",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 38,
          "fromName" : "LogicalQueryStage",
          "toId" : 37,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 39,
          "fromName" : "LogicalQueryStage",
          "toId" : 37,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 37,
          "fromName" : "Join",
          "toId" : 36,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 36,
          "fromName" : "Project",
          "toId" : 35,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 35,
          "fromName" : "Aggregate",
          "toId" : 34,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 34,
          "fromName" : "Filter",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Join",
          "toId" : 5,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Project",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 43,
          "fromName" : "LogicalQueryStage",
          "toId" : 42,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 44,
          "fromName" : "LogicalQueryStage",
          "toId" : 42,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 42,
          "fromName" : "Join",
          "toId" : 41,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 41,
          "fromName" : "Project",
          "toId" : 40,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 40,
          "fromName" : "Aggregate",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Join",
          "toId" : 3,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Project",
          "toId" : 2,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "LocalLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "LocalLimit",
          "toId" : 0,
          "toName" : "GlobalLimit",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [customer_id#2950 ASC NULLS FIRST, customer_first_name#2951 ASC NULLS FIRST, customer_last_name#2952 ASC NULLS FIRST, customer_email_address#2956 ASC NULLS FIRST], true\n      +- Project [customer_id#2950, customer_first_name#2951, customer_last_name#2952, customer_email_address#2956]\n         +- Join Inner, ((customer_id#2821 = customer_id#2990) AND (CASE WHEN (year_total#2839 > 0.000000) THEN (year_total#2978 / year_total#2839) END > CASE WHEN (year_total#2849 > 0.000000) THEN (year_total#2998 / year_total#2849) END))\n            :- Project [customer_id#2821, customer_id#2950, customer_first_name#2951, customer_last_name#2952, customer_email_address#2956, year_total#2839, year_total#2978, year_total#2849]\n            :  +- Join Inner, (customer_id#2821 = customer_id#2841)\n            :     :- Project [customer_id#2821, customer_id#2950, customer_first_name#2951, customer_last_name#2952, customer_email_address#2956, year_total#2839, year_total#2978]\n            :     :  +- Join Inner, ((customer_id#2821 = customer_id#2970) AND (CASE WHEN (year_total#2839 > 0.000000) THEN (year_total#2978 / year_total#2839) END > CASE WHEN (year_total#2829 > 0.000000) THEN (year_total#2958 / year_total#2829) END))\n            :     :     :- Project [customer_id#2821, year_total#2829, customer_id#2950, customer_first_name#2951, customer_last_name#2952, customer_email_address#2956, year_total#2958, year_total#2839]\n            :     :     :  +- Join Inner, (customer_id#2821 = customer_id#2831)\n            :     :     :     :- Join Inner, (customer_id#2950 = customer_id#2821)\n            :     :     :     :  :- Filter (isnotnull(year_total#2829) AND (year_total#2829 > 0.000000))\n            :     :     :     :  :  +- Aggregate [c_customer_id#31, c_first_name#38, c_last_name#39, c_preferred_cust_flag#40, c_birth_country#44, c_login#45, c_email_address#46, d_year#77], [c_customer_id#31 AS customer_id#2821, sum(((((ss_ext_list_price#64 - ss_ext_wholesale_cost#63) - ss_ext_discount_amt#61) + ss_ext_sales_price#62) / 2)) AS year_total#2829]\n            :     :     :     :  :     +- Project [c_customer_id#31, c_first_name#38, c_last_name#39, c_preferred_cust_flag#40, c_birth_country#44, c_login#45, c_email_address#46, ss_ext_discount_amt#61, ss_ext_sales_price#62, ss_ext_wholesale_cost#63, ss_ext_list_price#64, d_year#77]\n            :     :     :     :  :        +- Join Inner, (c_customer_sk#30 = ss_customer_sk#50)\n            :     :     :     :  :           :- LogicalQueryStage Project [ss_customer_sk#50, ss_ext_discount_amt#61, ss_ext_sales_price#62, ss_ext_wholesale_cost#63, ss_ext_list_price#64, d_year#77], ShuffleQueryStage 21\n            :     :     :     :  :           +- LogicalQueryStage Project [c_customer_sk#30, c_customer_id#31, c_first_name#38, c_last_name#39, c_preferred_cust_flag#40, c_birth_country#44, c_login#45, c_email_address#46], ShuffleQueryStage 1\n            :     :     :     :  +- Aggregate [c_customer_id#4200, c_first_name#4207, c_last_name#4208, c_preferred_cust_flag#4209, c_birth_country#4213, c_login#4214, c_email_address#4215, d_year#4246], [c_customer_id#4200 AS customer_id#2950, c_first_name#4207 AS customer_first_name#2951, c_last_name#4208 AS customer_last_name#2952, c_email_address#4215 AS customer_email_address#2956, sum(((((ss_ext_list_price#4233 - ss_ext_wholesale_cost#4232) - ss_ext_discount_amt#4230) + ss_ext_sales_price#4231) / 2)) AS year_total#2958]\n            :     :     :     :     +- Project [c_customer_id#4200, c_first_name#4207, c_last_name#4208, c_preferred_cust_flag#4209, c_birth_country#4213, c_login#4214, c_email_address#4215, ss_ext_discount_amt#4230, ss_ext_sales_price#4231, ss_ext_wholesale_cost#4232, ss_ext_list_price#4233, d_year#4246]\n            :     :     :     :        +- Join Inner, (c_customer_sk#4199 = ss_customer_sk#4219)\n            :     :     :     :           :- LogicalQueryStage Project [ss_customer_sk#4219, ss_ext_discount_amt#4230, ss_ext_sales_price#4231, ss_ext_wholesale_cost#4232, ss_ext_list_price#4233, d_year#4246], ShuffleQueryStage 24\n            :     :     :     :           +- LogicalQueryStage Project [c_customer_sk#4199, c_customer_id#4200, c_first_name#4207, c_last_name#4208, c_preferred_cust_flag#4209, c_birth_country#4213, c_login#4214, c_email_address#4215], ShuffleQueryStage 4\n            :     :     :     +- Filter (isnotnull(year_total#2839) AND (year_total#2839 > 0.000000))\n            :     :     :        +- Aggregate [c_customer_id#4508, c_first_name#4515, c_last_name#4516, c_preferred_cust_flag#4517, c_birth_country#4521, c_login#4522, c_email_address#4523, d_year#4565], [c_customer_id#4508 AS customer_id#2831, sum(((((cs_ext_list_price#4549 - cs_ext_wholesale_cost#4548) - cs_ext_discount_amt#4546) + cs_ext_sales_price#4547) / 2)) AS year_total#2839]\n            :     :     :           +- Project [c_customer_id#4508, c_first_name#4515, c_last_name#4516, c_preferred_cust_flag#4517, c_birth_country#4521, c_login#4522, c_email_address#4523, cs_ext_discount_amt#4546, cs_ext_sales_price#4547, cs_ext_wholesale_cost#4548, cs_ext_list_price#4549, d_year#4565]\n            :     :     :              +- Join Inner, (c_customer_sk#4507 = cs_bill_customer_sk#4527)\n            :     :     :                 :- LogicalQueryStage Project [cs_bill_customer_sk#4527, cs_ext_discount_amt#4546, cs_ext_sales_price#4547, cs_ext_wholesale_cost#4548, cs_ext_list_price#4549, d_year#4565], ShuffleQueryStage 22\n            :     :     :                 +- LogicalQueryStage Project [c_customer_sk#4507, c_customer_id#4508, c_first_name#4515, c_last_name#4516, c_preferred_cust_flag#4517, c_birth_country#4521, c_login#4522, c_email_address#4523], ShuffleQueryStage 8\n            :     :     +- Aggregate [c_customer_id#4747, c_first_name#4754, c_last_name#4755, c_preferred_cust_flag#4756, c_birth_country#4760, c_login#4761, c_email_address#4762, d_year#4804], [c_customer_id#4747 AS customer_id#2970, sum(((((cs_ext_list_price#4788 - cs_ext_wholesale_cost#4787) - cs_ext_discount_amt#4785) + cs_ext_sales_price#4786) / 2)) AS year_total#2978]\n            :     :        +- Project [c_customer_id#4747, c_first_name#4754, c_last_name#4755, c_preferred_cust_flag#4756, c_birth_country#4760, c_login#4761, c_email_address#4762, cs_ext_discount_amt#4785, cs_ext_sales_price#4786, cs_ext_wholesale_cost#4787, cs_ext_list_price#4788, d_year#4804]\n            :     :           +- Join Inner, (c_customer_sk#4746 = cs_bill_customer_sk#4766)\n            :     :              :- LogicalQueryStage Project [cs_bill_customer_sk#4766, cs_ext_discount_amt#4785, cs_ext_sales_price#4786, cs_ext_wholesale_cost#4787, cs_ext_list_price#4788, d_year#4804], ShuffleQueryStage 25\n            :     :              +- LogicalQueryStage Project [c_customer_sk#4746, c_customer_id#4747, c_first_name#4754, c_last_name#4755, c_preferred_cust_flag#4756, c_birth_country#4760, c_login#4761, c_email_address#4762], ShuffleQueryStage 12\n            :     +- Filter (isnotnull(year_total#2849) AND (year_total#2849 > 0.000000))\n            :        +- Aggregate [c_customer_id#5066, c_first_name#5073, c_last_name#5074, c_preferred_cust_flag#5075, c_birth_country#5079, c_login#5080, c_email_address#5081, d_year#5123], [c_customer_id#5066 AS customer_id#2841, sum(((((ws_ext_list_price#5107 - ws_ext_wholesale_cost#5106) - ws_ext_discount_amt#5104) + ws_ext_sales_price#5105) / 2)) AS year_total#2849]\n            :           +- Project [c_customer_id#5066, c_first_name#5073, c_last_name#5074, c_preferred_cust_flag#5075, c_birth_country#5079, c_login#5080, c_email_address#5081, ws_ext_discount_amt#5104, ws_ext_sales_price#5105, ws_ext_wholesale_cost#5106, ws_ext_list_price#5107, d_year#5123]\n            :              +- Join Inner, (c_customer_sk#5065 = ws_bill_customer_sk#5086)\n            :                 :- LogicalQueryStage Project [ws_bill_customer_sk#5086, ws_ext_discount_amt#5104, ws_ext_sales_price#5105, ws_ext_wholesale_cost#5106, ws_ext_list_price#5107, d_year#5123], ShuffleQueryStage 23\n            :                 +- LogicalQueryStage Project [c_customer_sk#5065, c_customer_id#5066, c_first_name#5073, c_last_name#5074, c_preferred_cust_flag#5075, c_birth_country#5079, c_login#5080, c_email_address#5081], ShuffleQueryStage 16\n            +- Aggregate [c_customer_id#5305, c_first_name#5312, c_last_name#5313, c_preferred_cust_flag#5314, c_birth_country#5318, c_login#5319, c_email_address#5320, d_year#5362], [c_customer_id#5305 AS customer_id#2990, sum(((((ws_ext_list_price#5346 - ws_ext_wholesale_cost#5345) - ws_ext_discount_amt#5343) + ws_ext_sales_price#5344) / 2)) AS year_total#2998]\n               +- Project [c_customer_id#5305, c_first_name#5312, c_last_name#5313, c_preferred_cust_flag#5314, c_birth_country#5318, c_login#5319, c_email_address#5320, ws_ext_discount_amt#5343, ws_ext_sales_price#5344, ws_ext_wholesale_cost#5345, ws_ext_list_price#5346, d_year#5362]\n                  +- Join Inner, (c_customer_sk#5304 = ws_bill_customer_sk#5325)\n                     :- LogicalQueryStage Project [ws_bill_customer_sk#5325, ws_ext_discount_amt#5343, ws_ext_sales_price#5344, ws_ext_wholesale_cost#5345, ws_ext_list_price#5346, d_year#5362], ShuffleQueryStage 26\n                     +- LogicalQueryStage Project [c_customer_sk#5304, c_customer_id#5305, c_first_name#5312, c_last_name#5313, c_preferred_cust_flag#5314, c_birth_country#5318, c_login#5319, c_email_address#5320], ShuffleQueryStage 20\n"
      },
      "IM" : {
        "inputSizeInBytes" : 47297448432,
        "inputRowCount" : 959104904
      },
      "PD" : {
        "0" : [ 830145, 830145, 754677, 830145, 830145, 830145, 754677, 754677, 830145, 830145, 830145, 754677, 830145, 830145, 754677, 830145, 830145, 830145, 754677, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 754677, 830145, 830145, 754677, 830145, 830145, 754677, 754677, 754677, 754677, 754677, 830145, 754677, 830145, 830145, 754677, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 754677, 754677, 754677, 830145, 830145, 830145, 754677, 830145, 754677, 830145, 830145, 754677, 830145, 830145, 830145, 754677, 754677, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 754677, 754677, 754677, 754677, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 754677, 754677, 830145, 754677, 754677, 830145, 830145, 754677, 830145, 830145, 830145, 830145, 754677, 754677, 830145, 830145, 830145, 754677, 830145, 830145, 754677, 754677, 754677, 830145, 754677, 830145, 830145, 754677, 830145, 830145, 754677, 754677, 754677, 754677, 830145, 830145, 830145, 830145, 754677, 754677, 830145, 830145, 830145, 830145, 754677, 754677, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 754677, 754677, 830145, 830145, 754677, 830145, 830145, 830145, 830145, 830145, 754677, 830145, 830145, 830145, 830145, 830145, 754677, 830145, 754677, 830145, 754677, 754677, 830145, 830145, 754677, 830145, 830145, 830145, 830145, 754677, 830145, 830145, 830145, 754677, 754677, 830145, 830145, 830145, 830145, 830145, 754677 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 16,
        "FinishedTasksNum" : 35,
        "FinishedTasksTotalTimeInMs" : 48242.0,
        "FinishedTasksDistributionInMs" : [ 746.0, 924.0, 1258.0, 1797.0, 2952.0 ]
      },
      "StartTimeInMs" : 1702226518999,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 49679,
        "IOBytes" : {
          "Total" : 14216287041,
          "Details" : {
            "IR" : 3048888025,
            "IW" : 0,
            "SR" : 6038854810,
            "SW" : 5128544206
          }
        }
      }
    }
  },
  "RuntimeQSs" : {
    "12" : {
      "QSLogical" : {
        "operators" : {
          "0" : {
            "sign" : 406600375,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 35480669679,
                "rowCount" : 275043951
              },
              "compileTime" : {
                "sizeInBytes" : 35480669679,
                "rowCount" : 275043951
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [c_customer_id#4200, c_first_name#4207, c_last_name#4208, c_preferred_cust_flag#4209, c_birth_country#4213, c_login#4214, c_email_address#4215, d_year#4246], [c_customer_id#4200 AS customer_id#2950, c_first_name#4207 AS customer_first_name#2951, c_last_name#4208 AS customer_last_name#2952, c_email_address#4215 AS customer_email_address#2956, sum(((((ss_ext_list_price#4233 - ss_ext_wholesale_cost#4232) - ss_ext_discount_amt#4230) + ss_ext_sales_price#4231) / 2)) AS year_total#2958] "
          },
          "1" : {
            "sign" : -1992676717,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 59134449465,
                "rowCount" : 275043951
              },
              "compileTime" : {
                "sizeInBytes" : 59134449465,
                "rowCount" : 275043951
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_customer_id#4200, c_first_name#4207, c_last_name#4208, c_preferred_cust_flag#4209, c_birth_country#4213, c_login#4214, c_email_address#4215, ss_ext_discount_amt#4230, ss_ext_sales_price#4231, ss_ext_wholesale_cost#4232, ss_ext_list_price#4233, d_year#4246] "
          },
          "2" : {
            "sign" : 710450233,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 61334801073,
                "rowCount" : 275043951
              },
              "compileTime" : {
                "sizeInBytes" : 61334801073,
                "rowCount" : 275043951
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (c_customer_sk#4199 = ss_customer_sk#4219) "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "Join",
          "toId" : 1,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Project",
          "toId" : 0,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Aggregate [c_customer_id#4200, c_first_name#4207, c_last_name#4208, c_preferred_cust_flag#4209, c_birth_country#4213, c_login#4214, c_email_address#4215, d_year#4246], [c_customer_id#4200 AS customer_id#2950, c_first_name#4207 AS customer_first_name#2951, c_last_name#4208 AS customer_last_name#2952, c_email_address#4215 AS customer_email_address#2956, sum(((((ss_ext_list_price#4233 - ss_ext_wholesale_cost#4232) - ss_ext_discount_amt#4230) + ss_ext_sales_price#4231) / 2)) AS year_total#2958]\n+- Project [c_customer_id#4200, c_first_name#4207, c_last_name#4208, c_preferred_cust_flag#4209, c_birth_country#4213, c_login#4214, c_email_address#4215, ss_ext_discount_amt#4230, ss_ext_sales_price#4231, ss_ext_wholesale_cost#4232, ss_ext_list_price#4233, d_year#4246]\n   +- Join Inner, (c_customer_sk#4199 = ss_customer_sk#4219)\n      :- Project [ss_customer_sk#4219, ss_ext_discount_amt#4230, ss_ext_sales_price#4231, ss_ext_wholesale_cost#4232, ss_ext_list_price#4233, d_year#4246]\n      :  +- Join Inner, (ss_sold_date_sk#4239 = d_date_sk#4240)\n      :     :- Project [ss_customer_sk#4219, ss_ext_discount_amt#4230, ss_ext_sales_price#4231, ss_ext_wholesale_cost#4232, ss_ext_list_price#4233, ss_sold_date_sk#4239]\n      :     :  +- Filter ((isnotnull(ss_customer_sk#4219) AND isnotnull(ss_sold_date_sk#4239)) AND dynamicpruning#5495 [ss_sold_date_sk#4239])\n      :     :     :  +- Project [d_date_sk#4240, d_year#4246]\n      :     :     :     +- Filter ((isnotnull(d_year#4246) AND (d_year#4246 = 2002)) AND isnotnull(d_date_sk#4240))\n      :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#4240,d_date_id#4241,d_date#4242,d_month_seq#4243,d_week_seq#4244,d_quarter_seq#4245,d_year#4246,d_dow#4247,d_moy#4248,d_dom#4249,d_qoy#4250,d_fy_year#4251,d_fy_quarter_seq#4252,d_fy_week_seq#4253,d_day_name#4254,d_quarter_name#4255,d_holiday#4256,d_weekend#4257,d_following_holiday#4258,d_first_dom#4259,d_last_dom#4260,d_same_day_ly#4261,d_same_day_lq#4262,d_current_day#4263,... 4 more fields] parquet\n      :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#4217,ss_item_sk#4218,ss_customer_sk#4219,ss_cdemo_sk#4220,ss_hdemo_sk#4221,ss_addr_sk#4222,ss_store_sk#4223,ss_promo_sk#4224,ss_ticket_number#4225L,ss_quantity#4226,ss_wholesale_cost#4227,ss_list_price#4228,ss_sales_price#4229,ss_ext_discount_amt#4230,ss_ext_sales_price#4231,ss_ext_wholesale_cost#4232,ss_ext_list_price#4233,ss_ext_tax#4234,ss_coupon_amt#4235,ss_net_paid#4236,ss_net_paid_inc_tax#4237,ss_net_profit#4238,ss_sold_date_sk#4239] parquet\n      :     +- Project [d_date_sk#4240, d_year#4246]\n      :        +- Filter ((isnotnull(d_year#4246) AND (d_year#4246 = 2002)) AND isnotnull(d_date_sk#4240))\n      :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#4240,d_date_id#4241,d_date#4242,d_month_seq#4243,d_week_seq#4244,d_quarter_seq#4245,d_year#4246,d_dow#4247,d_moy#4248,d_dom#4249,d_qoy#4250,d_fy_year#4251,d_fy_quarter_seq#4252,d_fy_week_seq#4253,d_day_name#4254,d_quarter_name#4255,d_holiday#4256,d_weekend#4257,d_following_holiday#4258,d_first_dom#4259,d_last_dom#4260,d_same_day_ly#4261,d_same_day_lq#4262,d_current_day#4263,... 4 more fields] parquet\n      +- Project [c_customer_sk#4199, c_customer_id#4200, c_first_name#4207, c_last_name#4208, c_preferred_cust_flag#4209, c_birth_country#4213, c_login#4214, c_email_address#4215]\n         +- Filter (isnotnull(c_customer_sk#4199) AND isnotnull(c_customer_id#4200))\n            +- Relation spark_catalog.tpcds_100.customer[c_customer_sk#4199,c_customer_id#4200,c_current_cdemo_sk#4201,c_current_hdemo_sk#4202,c_current_addr_sk#4203,c_first_shipto_date_sk#4204,c_first_sales_date_sk#4205,c_salutation#4206,c_first_name#4207,c_last_name#4208,c_preferred_cust_flag#4209,c_birth_day#4210,c_birth_month#4211,c_birth_year#4212,c_birth_country#4213,c_login#4214,c_email_address#4215,c_last_review_date#4216] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "4" : {
            "sign" : -1245473211,
            "className" : "org.apache.spark.sql.execution.adaptive.ShuffleQueryStageExec",
            "sizeInBytes" : 3007595192,
            "rowCount" : 53707057,
            "isRuntime" : true,
            "predicate" : " (unknown) ShuffleQueryStage Output [6]: [ss_customer_sk#4219, ss_ext_discount_amt#4230, ss_ext_sales_price#4231, ss_ext_wholesale_cost#4232, ss_ext_list_price#4233, d_year#4246] Arguments: 24 "
          },
          "5" : {
            "sign" : -518049807,
            "className" : "org.apache.spark.sql.execution.SortExec",
            "sizeInBytes" : -1,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Input [8]: [c_customer_sk#4199, c_customer_id#4200, c_first_name#4207, c_last_name#4208, c_preferred_cust_flag#4209, c_birth_country#4213, c_login#4214, c_email_address#4215] Arguments: [c_customer_sk#4199 ASC NULLS FIRST], false, 0 "
          },
          "6" : {
            "sign" : 1128137140,
            "className" : "org.apache.spark.sql.execution.adaptive.ShuffleQueryStageExec",
            "sizeInBytes" : 306068840,
            "rowCount" : 2000000,
            "isRuntime" : true,
            "predicate" : " (unknown) ShuffleQueryStage Output [8]: [c_customer_sk#4199, c_customer_id#4200, c_first_name#4207, c_last_name#4208, c_preferred_cust_flag#4209, c_birth_country#4213, c_login#4214, c_email_address#4215] Arguments: 4 "
          },
          "1" : {
            "sign" : 405561542,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 59134449465,
            "rowCount" : 275043951,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [12]: [c_customer_id#4200, c_first_name#4207, c_last_name#4208, c_preferred_cust_flag#4209, c_birth_country#4213, c_login#4214, c_email_address#4215, ss_ext_discount_amt#4230, ss_ext_sales_price#4231, ss_ext_wholesale_cost#4232, ss_ext_list_price#4233, d_year#4246] Input [14]: [ss_customer_sk#4219, ss_ext_discount_amt#4230, ss_ext_sales_price#4231, ss_ext_wholesale_cost#4232, ss_ext_list_price#4233, d_year#4246, c_customer_sk#4199, c_customer_id#4200, c_first_name#4207, c_last_name#4208, c_preferred_cust_flag#4209, c_birth_country#4213, c_login#4214, c_email_address#4215] "
          },
          "0" : {
            "sign" : 1199601286,
            "className" : "org.apache.spark.sql.execution.aggregate.HashAggregateExec",
            "sizeInBytes" : 35480669679,
            "rowCount" : 275043951,
            "isRuntime" : false,
            "predicate" : " (unknown) HashAggregate Input [12]: [c_customer_id#4200, c_first_name#4207, c_last_name#4208, c_preferred_cust_flag#4209, c_birth_country#4213, c_login#4214, c_email_address#4215, ss_ext_discount_amt#4230, ss_ext_sales_price#4231, ss_ext_wholesale_cost#4232, ss_ext_list_price#4233, d_year#4246] Keys [8]: [c_customer_id#4200, c_first_name#4207, c_last_name#4208, c_preferred_cust_flag#4209, c_birth_country#4213, c_login#4214, c_email_address#4215, d_year#4246] Functions [1]: [partial_sum(((((ss_ext_list_price#4233 - ss_ext_wholesale_cost#4232) - ss_ext_discount_amt#4230) + ss_ext_sales_price#4231) / 2))] Aggregate Attributes [2]: [sum#5504, isEmpty#5505] Results [10]: [c_customer_id#4200, c_first_name#4207, c_last_name#4208, c_preferred_cust_flag#4209, c_birth_country#4213, c_login#4214, c_email_address#4215, d_year#4246, sum#5506, isEmpty#5507] "
          },
          "2" : {
            "sign" : -889569664,
            "className" : "org.apache.spark.sql.execution.joins.SortMergeJoinExec",
            "sizeInBytes" : 61334801073,
            "rowCount" : 275043951,
            "isRuntime" : false,
            "predicate" : " (unknown) SortMergeJoin Left keys [1]: [ss_customer_sk#4219] Right keys [1]: [c_customer_sk#4199] Join type: Inner Join condition: None "
          },
          "3" : {
            "sign" : -77057172,
            "className" : "org.apache.spark.sql.execution.SortExec",
            "sizeInBytes" : -1,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Input [6]: [ss_customer_sk#4219, ss_ext_discount_amt#4230, ss_ext_sales_price#4231, ss_ext_wholesale_cost#4232, ss_ext_list_price#4233, d_year#4246] Arguments: [ss_customer_sk#4219 ASC NULLS FIRST], false, 0 "
          }
        },
        "links" : [ {
          "fromId" : 4,
          "fromName" : "ShuffleQueryStage",
          "toId" : 3,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Sort",
          "toId" : 2,
          "toName" : "SortMergeJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "ShuffleQueryStage",
          "toId" : 5,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Sort",
          "toId" : 2,
          "toName" : "SortMergeJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "SortMergeJoin",
          "toId" : 1,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Project",
          "toId" : 0,
          "toName" : "HashAggregate",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "HashAggregate(keys=[c_customer_id#4200, c_first_name#4207, c_last_name#4208, c_preferred_cust_flag#4209, c_birth_country#4213, c_login#4214, c_email_address#4215, d_year#4246], functions=[partial_sum(((((ss_ext_list_price#4233 - ss_ext_wholesale_cost#4232) - ss_ext_discount_amt#4230) + ss_ext_sales_price#4231) / 2))], output=[c_customer_id#4200, c_first_name#4207, c_last_name#4208, c_preferred_cust_flag#4209, c_birth_country#4213, c_login#4214, c_email_address#4215, d_year#4246, sum#5506, isEmpty#5507])\n+- Project [c_customer_id#4200, c_first_name#4207, c_last_name#4208, c_preferred_cust_flag#4209, c_birth_country#4213, c_login#4214, c_email_address#4215, ss_ext_discount_amt#4230, ss_ext_sales_price#4231, ss_ext_wholesale_cost#4232, ss_ext_list_price#4233, d_year#4246]\n   +- SortMergeJoin [ss_customer_sk#4219], [c_customer_sk#4199], Inner\n      :- Sort [ss_customer_sk#4219 ASC NULLS FIRST], false, 0\n      :  +- ShuffleQueryStage 24\n      :     +- Exchange hashpartitioning(ss_customer_sk#4219, 200), ENSURE_REQUIREMENTS, [plan_id=2245]\n      :        +- *(16) Project [ss_customer_sk#4219, ss_ext_discount_amt#4230, ss_ext_sales_price#4231, ss_ext_wholesale_cost#4232, ss_ext_list_price#4233, d_year#4246]\n      :           +- *(16) BroadcastHashJoin [ss_sold_date_sk#4239], [d_date_sk#4240], Inner, BuildRight, false\n      :              :- *(16) Filter isnotnull(ss_customer_sk#4219)\n      :              :  +- *(16) ColumnarToRow\n      :              :     +- FileScan parquet spark_catalog.tpcds_100.store_sales[ss_customer_sk#4219,ss_ext_discount_amt#4230,ss_ext_sales_price#4231,ss_ext_wholesale_cost#4232,ss_ext_list_price#4233,ss_sold_date_sk#4239] Batched: true, DataFilters: [isnotnull(ss_customer_sk#4219)], Format: Parquet, Location: InMemoryFileIndex(1823 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/store_..., PartitionFilters: [isnotnull(ss_sold_date_sk#4239), dynamicpruningexpression(ss_sold_date_sk#4239 IN dynamicpruning..., PushedFilters: [IsNotNull(ss_customer_sk)], ReadSchema: struct<ss_customer_sk:int,ss_ext_discount_amt:decimal(7,2),ss_ext_sales_price:decimal(7,2),ss_ext...\n      :              :           +- SubqueryBroadcast dynamicpruning#5495, 0, [d_date_sk#4240], [id=#2219]\n      :              :              +- AdaptiveSparkPlan isFinalPlan=true\n                                       +- == Final Plan ==\n                                          BroadcastQueryStage 1\n                                          +- ReusedExchange [d_date_sk#4240, d_year#4246], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=746]\n                                       +- == Initial Plan ==\n                                          BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=2216]\n                                          +- Filter ((isnotnull(d_year#4246) AND (d_year#4246 = 2002)) AND isnotnull(d_date_sk#4240))\n                                             +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#4240,d_year#4246] Batched: true, DataFilters: [isnotnull(d_year#4246), (d_year#4246 = 2002), isnotnull(d_date_sk#4240)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), EqualTo(d_year,2002), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>\n      :              +- BroadcastQueryStage 2\n      :                 +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=746]\n      :                    +- *(3) Filter ((isnotnull(d_year#4246) AND (d_year#4246 = 2002)) AND isnotnull(d_date_sk#4240))\n      :                       +- *(3) ColumnarToRow\n      :                          +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#4240,d_year#4246] Batched: true, DataFilters: [isnotnull(d_year#4246), (d_year#4246 = 2002), isnotnull(d_date_sk#4240)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), EqualTo(d_year,2002), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>\n      +- Sort [c_customer_sk#4199 ASC NULLS FIRST], false, 0\n         +- ShuffleQueryStage 4\n            +- ReusedExchange [c_customer_sk#4199, c_customer_id#4200, c_first_name#4207, c_last_name#4208, c_preferred_cust_flag#4209, c_birth_country#4213, c_login#4214, c_email_address#4215], Exchange hashpartitioning(c_customer_sk#30, 200), ENSURE_REQUIREMENTS, [plan_id=681]\n"
      },
      "IM" : {
        "inputSizeInBytes" : 3313664032,
        "inputRowCount" : 55707057
      },
      "InitialPartitionNum" : 200,
      "PD" : {
        "4" : [ 5726675, 5694587, 5601876, 5660449, 5658356, 5679656, 5610777, 5574552, 5626202, 5654181, 5765792, 5619064, 5747743, 5660863, 5652510, 5644818, 5743947, 5778678, 5693295, 5645127, 5637262, 5663013, 5824593, 5663194, 5638483, 5613368, 5612830, 5698061, 5654941, 5619408, 5650882, 5674527, 5681014, 5600424, 5720100, 5645346, 5684150, 5498434, 5531285, 5578028, 5677291, 5679656, 5583969, 5668928, 5648989, 5581190, 5643769, 5567895, 5726508, 5675162, 5733152, 5700054, 5586243, 5744107, 5631457, 5594763, 5622716, 5517805, 5648717, 5750174, 5668514, 5782256, 5637288, 5677847, 5557458, 5767300, 5639118, 5595836, 5624350, 5689874, 5701225, 5649055, 5580110, 5651302, 5759673, 5758668, 5751251, 5675593, 5748368, 5706802, 5663304, 5657342, 5758124, 5579916, 5623896, 5708411, 5604477, 5610204, 5667754, 5777215, 5683449, 5688982, 5661082, 5623377, 5733412, 5779095, 5588463, 5589095, 5580107, 5581190, 5600129, 5775931, 5631883, 5601876, 5635509, 5726221, 5693927, 5863870, 5477587, 5601876, 5624215, 5661141, 5755179, 5572837, 5677669, 5624350, 5521474, 5590450, 5720760, 5570577, 5663642, 5720650, 5714922, 5629442, 5664096, 5728728, 5625702, 5632814, 5701516, 5568590, 5739978, 5737543, 5733854, 5706802, 5604023, 5532299, 5633335, 5759038, 5715339, 5697459, 5601063, 5547105, 5678448, 5687943, 5717774, 5740808, 5833847, 5659783, 5690788, 5635482, 5702036, 5691242, 5738192, 5714116, 5730988, 5717486, 5679021, 5715089, 5779202, 5585327, 5556663, 5565610, 5708160, 5591085, 5674189, 5657796, 5651496, 5677740, 5748187, 5585612, 5715339, 5759219, 5753367, 5730327, 5605491, 5683515, 5714116, 5515465, 5711296, 5667955, 5632456, 5652056, 5508557, 5697542, 5850926, 5721455, 5903550, 5732521, 5543775, 5714974, 5739800, 5674255, 5656823, 5634766, 5714454, 5761031, 5706708, 5684848, 5764615, 5632637 ],
        "0" : [ 830145, 830145, 754677, 830145, 830145, 830145, 754677, 754677, 830145, 830145, 830145, 754677, 830145, 830145, 754677, 830145, 830145, 830145, 754677, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 754677, 830145, 830145, 754677, 830145, 830145, 754677, 754677, 754677, 754677, 754677, 830145, 754677, 830145, 830145, 754677, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 754677, 754677, 754677, 830145, 830145, 830145, 754677, 830145, 754677, 830145, 830145, 754677, 830145, 830145, 830145, 754677, 754677, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 754677, 754677, 754677, 754677, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 754677, 754677, 830145, 754677, 754677, 830145, 830145, 754677, 830145, 830145, 830145, 830145, 754677, 754677, 830145, 830145, 830145, 754677, 830145, 830145, 754677, 754677, 754677, 830145, 754677, 830145, 830145, 754677, 830145, 830145, 754677, 754677, 754677, 754677, 830145, 830145, 830145, 830145, 754677, 754677, 830145, 830145, 830145, 830145, 754677, 754677, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 754677, 754677, 830145, 830145, 754677, 830145, 830145, 830145, 830145, 830145, 754677, 830145, 830145, 830145, 830145, 830145, 754677, 830145, 754677, 830145, 754677, 754677, 830145, 830145, 754677, 830145, 830145, 830145, 830145, 754677, 830145, 830145, 830145, 754677, 754677, 830145, 830145, 830145, 830145, 830145, 754677 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 16,
        "FinishedTasksNum" : 10,
        "FinishedTasksTotalTimeInMs" : 7872.0,
        "FinishedTasksDistributionInMs" : [ 718.0, 748.0, 795.0, 810.0, 843.0 ]
      },
      "QueryStageOptimizationId" : 12,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 20 ],
      "Objectives" : {
        "DurationInMs" : 22128,
        "TotalTasksDurationInMs" : 112019,
        "IOBytes" : {
          "Total" : 1388455619,
          "Details" : {
            "IR" : 0,
            "IW" : 0,
            "SR" : 1232379582,
            "SW" : 156076037
          }
        }
      }
    },
    "8" : {
      "QSLogical" : {
        "operators" : {
          "4" : {
            "sign" : 1411799922,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 14972593792,
                "rowCount" : 71983624
              },
              "compileTime" : {
                "sizeInBytes" : 14972593792,
                "rowCount" : 71983624
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ws_sold_time_sk#5322, ws_ship_date_sk#5323, ws_item_sk#5324, ws_bill_customer_sk#5325, ws_bill_cdemo_sk#5326, ws_bill_hdemo_sk#5327, ws_bill_addr_sk#5328, ws_ship_customer_sk#5329, ws_ship_cdemo_sk#5330, ws_ship_hdemo_sk#5331, ws_ship_addr_sk#5332, ws_web_page_sk#5333, ws_web_site_sk#5334, ws_ship_mode_sk#5335, ws_warehouse_sk#5336, ws_promo_sk#5337, ws_order_number#5338L, ws_quantity#5339, ws_wholesale_cost#5340, ws_list_price#5341, ws_sales_price#5342, ws_ext_discount_amt#5343, ws_ext_sales_price#5344, ws_ext_wholesale_cost#5345, ... 10 more fields], `spark_catalog`.`tpcds_100`.`web_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "1" : {
            "sign" : -1440841958,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 3891753880,
                "rowCount" : 69495605
              },
              "compileTime" : {
                "sizeInBytes" : 3891753880,
                "rowCount" : 69495605
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ws_sold_date_sk#5355 = d_date_sk#5356) "
          },
          "0" : {
            "sign" : 188242154,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 3335789040,
                "rowCount" : 69495605
              },
              "compileTime" : {
                "sizeInBytes" : 3335789040,
                "rowCount" : 69495605
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_bill_customer_sk#5325, ws_ext_discount_amt#5343, ws_ext_sales_price#5344, ws_ext_wholesale_cost#5345, ws_ext_list_price#5346, d_year#5362] "
          },
          "2" : {
            "sign" : -2087510487,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 3454348848,
                "rowCount" : 71965601
              },
              "compileTime" : {
                "sizeInBytes" : 3454348848,
                "rowCount" : 71965601
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_bill_customer_sk#5325, ws_ext_discount_amt#5343, ws_ext_sales_price#5344, ws_ext_wholesale_cost#5345, ws_ext_list_price#5346, ws_sold_date_sk#5355] "
          },
          "3" : {
            "sign" : -569287716,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 14968845008,
                "rowCount" : 71965601
              },
              "compileTime" : {
                "sizeInBytes" : 14968845008,
                "rowCount" : 71965601
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(ws_bill_customer_sk#5325) AND isnotnull(ws_sold_date_sk#5355)) AND dynamicpruning#5499 [ws_sold_date_sk#5355]) "
          }
        },
        "links" : [ {
          "fromId" : 4,
          "fromName" : "LogicalRelation",
          "toId" : 3,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Filter",
          "toId" : 2,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Project",
          "toId" : 1,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Join",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [ws_bill_customer_sk#5325, ws_ext_discount_amt#5343, ws_ext_sales_price#5344, ws_ext_wholesale_cost#5345, ws_ext_list_price#5346, d_year#5362]\n+- Join Inner, (ws_sold_date_sk#5355 = d_date_sk#5356)\n   :- Project [ws_bill_customer_sk#5325, ws_ext_discount_amt#5343, ws_ext_sales_price#5344, ws_ext_wholesale_cost#5345, ws_ext_list_price#5346, ws_sold_date_sk#5355]\n   :  +- Filter ((isnotnull(ws_bill_customer_sk#5325) AND isnotnull(ws_sold_date_sk#5355)) AND dynamicpruning#5499 [ws_sold_date_sk#5355])\n   :     :  +- Project [d_date_sk#5356, d_year#5362]\n   :     :     +- Filter ((isnotnull(d_year#5362) AND (d_year#5362 = 2002)) AND isnotnull(d_date_sk#5356))\n   :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#5356,d_date_id#5357,d_date#5358,d_month_seq#5359,d_week_seq#5360,d_quarter_seq#5361,d_year#5362,d_dow#5363,d_moy#5364,d_dom#5365,d_qoy#5366,d_fy_year#5367,d_fy_quarter_seq#5368,d_fy_week_seq#5369,d_day_name#5370,d_quarter_name#5371,d_holiday#5372,d_weekend#5373,d_following_holiday#5374,d_first_dom#5375,d_last_dom#5376,d_same_day_ly#5377,d_same_day_lq#5378,d_current_day#5379,... 4 more fields] parquet\n   :     +- Relation spark_catalog.tpcds_100.web_sales[ws_sold_time_sk#5322,ws_ship_date_sk#5323,ws_item_sk#5324,ws_bill_customer_sk#5325,ws_bill_cdemo_sk#5326,ws_bill_hdemo_sk#5327,ws_bill_addr_sk#5328,ws_ship_customer_sk#5329,ws_ship_cdemo_sk#5330,ws_ship_hdemo_sk#5331,ws_ship_addr_sk#5332,ws_web_page_sk#5333,ws_web_site_sk#5334,ws_ship_mode_sk#5335,ws_warehouse_sk#5336,ws_promo_sk#5337,ws_order_number#5338L,ws_quantity#5339,ws_wholesale_cost#5340,ws_list_price#5341,ws_sales_price#5342,ws_ext_discount_amt#5343,ws_ext_sales_price#5344,ws_ext_wholesale_cost#5345,... 10 more fields] parquet\n   +- Project [d_date_sk#5356, d_year#5362]\n      +- Filter ((isnotnull(d_year#5362) AND (d_year#5362 = 2002)) AND isnotnull(d_date_sk#5356))\n         +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#5356,d_date_id#5357,d_date#5358,d_month_seq#5359,d_week_seq#5360,d_quarter_seq#5361,d_year#5362,d_dow#5363,d_moy#5364,d_dom#5365,d_qoy#5366,d_fy_year#5367,d_fy_quarter_seq#5368,d_fy_week_seq#5369,d_day_name#5370,d_quarter_name#5371,d_holiday#5372,d_weekend#5373,d_following_holiday#5374,d_first_dom#5375,d_last_dom#5376,d_same_day_ly#5377,d_same_day_lq#5378,d_current_day#5379,... 4 more fields] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "4" : {
            "sign" : 896221712,
            "className" : "org.apache.spark.sql.execution.adaptive.BroadcastQueryStageExec",
            "sizeInBytes" : 1051496,
            "rowCount" : 365,
            "isRuntime" : true,
            "predicate" : " (unknown) BroadcastQueryStage Output [2]: [d_date_sk#5356, d_year#5362] Arguments: 18 "
          },
          "1" : {
            "sign" : 1930950045,
            "className" : "org.apache.spark.sql.execution.joins.BroadcastHashJoinExec",
            "sizeInBytes" : 3891753880,
            "rowCount" : 69495605,
            "isRuntime" : false,
            "predicate" : " (unknown) BroadcastHashJoin Left keys [1]: [ws_sold_date_sk#5355] Right keys [1]: [d_date_sk#5356] Join type: Inner Join condition: None "
          },
          "0" : {
            "sign" : -686678787,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 3335789040,
            "rowCount" : 69495605,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [6]: [ws_bill_customer_sk#5325, ws_ext_discount_amt#5343, ws_ext_sales_price#5344, ws_ext_wholesale_cost#5345, ws_ext_list_price#5346, d_year#5362] Input [8]: [ws_bill_customer_sk#5325, ws_ext_discount_amt#5343, ws_ext_sales_price#5344, ws_ext_wholesale_cost#5345, ws_ext_list_price#5346, ws_sold_date_sk#5355, d_date_sk#5356, d_year#5362] "
          },
          "2" : {
            "sign" : -1052902696,
            "className" : "org.apache.spark.sql.execution.FilterExec",
            "sizeInBytes" : 3454348848,
            "rowCount" : 71965601,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Input [6]: [ws_bill_customer_sk#5325, ws_ext_discount_amt#5343, ws_ext_sales_price#5344, ws_ext_wholesale_cost#5345, ws_ext_list_price#5346, ws_sold_date_sk#5355] Condition : isnotnull(ws_bill_customer_sk#5325) "
          },
          "3" : {
            "sign" : -1511282749,
            "className" : "org.apache.spark.sql.execution.FileSourceScanExec",
            "sizeInBytes" : 3454348848,
            "rowCount" : 71965601,
            "isRuntime" : false,
            "predicate" : " (unknown) Scan parquet spark_catalog.tpcds_100.web_sales Output [6]: [ws_bill_customer_sk#5325, ws_ext_discount_amt#5343, ws_ext_sales_price#5344, ws_ext_wholesale_cost#5345, ws_ext_list_price#5346, ws_sold_date_sk#5355] Batched: true Location: InMemoryFileIndex [hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/web_sales/ws_sold_date_sk=2450816, ... 1822 entries] PartitionFilters: [isnotnull(ws_sold_date_sk#5355), dynamicpruningexpression(ws_sold_date_sk#5355 IN dynamicpruning#5495)] PushedFilters: [IsNotNull(ws_bill_customer_sk)] ReadSchema: struct<ws_bill_customer_sk:int,ws_ext_discount_amt:decimal(7,2),ws_ext_sales_price:decimal(7,2),ws_ext_wholesale_cost:decimal(7,2),ws_ext_list_price:decimal(7,2)> "
          }
        },
        "links" : [ {
          "fromId" : 3,
          "fromName" : "Scan parquet spark_catalog.tpcds_100.web_sales",
          "toId" : 2,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Filter",
          "toId" : 1,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "BroadcastQueryStage",
          "toId" : 1,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "BroadcastHashJoin",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [ws_bill_customer_sk#5325, ws_ext_discount_amt#5343, ws_ext_sales_price#5344, ws_ext_wholesale_cost#5345, ws_ext_list_price#5346, d_year#5362]\n+- BroadcastHashJoin [ws_sold_date_sk#5355], [d_date_sk#5356], Inner, BuildRight, false\n   :- Filter isnotnull(ws_bill_customer_sk#5325)\n   :  +- FileScan parquet spark_catalog.tpcds_100.web_sales[ws_bill_customer_sk#5325,ws_ext_discount_amt#5343,ws_ext_sales_price#5344,ws_ext_wholesale_cost#5345,ws_ext_list_price#5346,ws_sold_date_sk#5355] Batched: true, DataFilters: [isnotnull(ws_bill_customer_sk#5325)], Format: Parquet, Location: InMemoryFileIndex(1823 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/web_sa..., PartitionFilters: [isnotnull(ws_sold_date_sk#5355), dynamicpruningexpression(ws_sold_date_sk#5355 IN dynamicpruning..., PushedFilters: [IsNotNull(ws_bill_customer_sk)], ReadSchema: struct<ws_bill_customer_sk:int,ws_ext_discount_amt:decimal(7,2),ws_ext_sales_price:decimal(7,2),w...\n   :        +- ReusedSubquery SubqueryBroadcast dynamicpruning#5495, 0, [d_date_sk#4240], [id=#2219]\n   +- BroadcastQueryStage 18\n      +- ReusedExchange [d_date_sk#5356, d_year#5362], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=746]\n"
      },
      "IM" : {
        "inputSizeInBytes" : 3455400344,
        "inputRowCount" : 71965966
      },
      "InitialPartitionNum" : 0,
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 16,
        "FinishedTasksNum" : 13,
        "FinishedTasksTotalTimeInMs" : 18486.0,
        "FinishedTasksDistributionInMs" : [ 1193.0, 1333.0, 1396.0, 1494.0, 1707.0 ]
      },
      "QueryStageOptimizationId" : 8,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 11 ],
      "Objectives" : {
        "DurationInMs" : 9793,
        "TotalTasksDurationInMs" : 12752,
        "IOBytes" : {
          "Total" : 579533561,
          "Details" : {
            "IR" : 244289496,
            "IW" : 0,
            "SR" : 0,
            "SW" : 335244065
          }
        }
      }
    },
    "19" : {
      "QSLogical" : {
        "operators" : {
          "0" : {
            "sign" : 404059991,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 166933240,
                "rowCount" : 902229
              },
              "compileTime" : {
                "sizeInBytes" : 3761782752,
                "rowCount" : 72341976
              }
            },
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [c_customer_id#5305, c_first_name#5312, c_last_name#5313, c_preferred_cust_flag#5314, c_birth_country#5318, c_login#5319, c_email_address#5320, d_year#5362], [c_customer_id#5305 AS customer_id#2990, sum(((((ws_ext_list_price#5346 - ws_ext_wholesale_cost#5345) - ws_ext_discount_amt#5343) + ws_ext_sales_price#5344) / 2)) AS year_total#2998], HashAggregate(keys=[c_customer_id#5305, c_first_name#5312, c_last_name#5313, c_preferred_cust_flag#5314, c_birth_country#5318, c_login#5319, c_email_address#5320, d_year#5362], functions=[sum(((((ws_ext_list_price#5346 - ws_ext_wholesale_cost#5345) - ws_ext_discount_amt#5343) + ws_ext_sales_price#5344) / 2))]) "
          }
        },
        "links" : [ ],
        "rawPlan" : "LogicalQueryStage Aggregate [c_customer_id#5305, c_first_name#5312, c_last_name#5313, c_preferred_cust_flag#5314, c_birth_country#5318, c_login#5319, c_email_address#5320, d_year#5362], [c_customer_id#5305 AS customer_id#2990, sum(((((ws_ext_list_price#5346 - ws_ext_wholesale_cost#5345) - ws_ext_discount_amt#5343) + ws_ext_sales_price#5344) / 2)) AS year_total#2998], HashAggregate(keys=[c_customer_id#5305, c_first_name#5312, c_last_name#5313, c_preferred_cust_flag#5314, c_birth_country#5318, c_login#5319, c_email_address#5320, d_year#5362], functions=[sum(((((ws_ext_list_price#5346 - ws_ext_wholesale_cost#5345) - ws_ext_discount_amt#5343) + ws_ext_sales_price#5344) / 2))])\n"
      },
      "QSPhysical" : {
        "operators" : {
          "0" : {
            "sign" : 1630169865,
            "className" : "org.apache.spark.sql.execution.aggregate.HashAggregateExec",
            "sizeInBytes" : 166933240,
            "rowCount" : 902229,
            "isRuntime" : true,
            "predicate" : " (unknown) HashAggregate Input [10]: [c_customer_id#5305, c_first_name#5312, c_last_name#5313, c_preferred_cust_flag#5314, c_birth_country#5318, c_login#5319, c_email_address#5320, d_year#5362, sum#5522, isEmpty#5523] Keys [8]: [c_customer_id#5305, c_first_name#5312, c_last_name#5313, c_preferred_cust_flag#5314, c_birth_country#5318, c_login#5319, c_email_address#5320, d_year#5362] Functions [1]: [sum(((((ws_ext_list_price#5346 - ws_ext_wholesale_cost#5345) - ws_ext_discount_amt#5343) + ws_ext_sales_price#5344) / 2))] Aggregate Attributes [1]: [sum(((((ws_ext_list_price#5346 - ws_ext_wholesale_cost#5345) - ws_ext_discount_amt#5343) + ws_ext_sales_price#5344) / 2))#2949] Results [2]: [c_customer_id#5305 AS customer_id#2990, sum(((((ws_ext_list_price#5346 - ws_ext_wholesale_cost#5345) - ws_ext_discount_amt#5343) + ws_ext_sales_price#5344) / 2))#2949 AS year_total#2998] "
          },
          "1" : {
            "sign" : 29435348,
            "className" : "org.apache.spark.sql.execution.adaptive.ShuffleQueryStageExec",
            "sizeInBytes" : 3761782752,
            "rowCount" : 72341976,
            "isRuntime" : false,
            "predicate" : " (unknown) ShuffleQueryStage Output [10]: [c_customer_id#5305, c_first_name#5312, c_last_name#5313, c_preferred_cust_flag#5314, c_birth_country#5318, c_login#5319, c_email_address#5320, d_year#5362, sum#5522, isEmpty#5523] Arguments: 32 "
          }
        },
        "links" : [ {
          "fromId" : 1,
          "fromName" : "ShuffleQueryStage",
          "toId" : 0,
          "toName" : "HashAggregate",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "HashAggregate(keys=[c_customer_id#5305, c_first_name#5312, c_last_name#5313, c_preferred_cust_flag#5314, c_birth_country#5318, c_login#5319, c_email_address#5320, d_year#5362], functions=[sum(((((ws_ext_list_price#5346 - ws_ext_wholesale_cost#5345) - ws_ext_discount_amt#5343) + ws_ext_sales_price#5344) / 2))], output=[customer_id#2990, year_total#2998])\n+- ShuffleQueryStage 32\n   +- Exchange hashpartitioning(c_customer_id#5305, c_first_name#5312, c_last_name#5313, c_preferred_cust_flag#5314, c_birth_country#5318, c_login#5319, c_email_address#5320, d_year#5362, 200), ENSURE_REQUIREMENTS, [plan_id=4184]\n      +- *(36) HashAggregate(keys=[c_customer_id#5305, c_first_name#5312, c_last_name#5313, c_preferred_cust_flag#5314, c_birth_country#5318, c_login#5319, c_email_address#5320, d_year#5362], functions=[partial_sum(((((ws_ext_list_price#5346 - ws_ext_wholesale_cost#5345) - ws_ext_discount_amt#5343) + ws_ext_sales_price#5344) / 2))], output=[c_customer_id#5305, c_first_name#5312, c_last_name#5313, c_preferred_cust_flag#5314, c_birth_country#5318, c_login#5319, c_email_address#5320, d_year#5362, sum#5522, isEmpty#5523])\n         +- *(36) Project [c_customer_id#5305, c_first_name#5312, c_last_name#5313, c_preferred_cust_flag#5314, c_birth_country#5318, c_login#5319, c_email_address#5320, ws_ext_discount_amt#5343, ws_ext_sales_price#5344, ws_ext_wholesale_cost#5345, ws_ext_list_price#5346, d_year#5362]\n            +- *(36) SortMergeJoin [ws_bill_customer_sk#5325], [c_customer_sk#5304], Inner\n               :- *(34) Sort [ws_bill_customer_sk#5325 ASC NULLS FIRST], false, 0\n               :  +- AQEShuffleRead coalesced\n               :     +- ShuffleQueryStage 26\n               :        +- Exchange hashpartitioning(ws_bill_customer_sk#5325, 200), ENSURE_REQUIREMENTS, [plan_id=2396]\n               :           +- *(18) Project [ws_bill_customer_sk#5325, ws_ext_discount_amt#5343, ws_ext_sales_price#5344, ws_ext_wholesale_cost#5345, ws_ext_list_price#5346, d_year#5362]\n               :              +- *(18) BroadcastHashJoin [ws_sold_date_sk#5355], [d_date_sk#5356], Inner, BuildRight, false\n               :                 :- *(18) Filter isnotnull(ws_bill_customer_sk#5325)\n               :                 :  +- *(18) ColumnarToRow\n               :                 :     +- FileScan parquet spark_catalog.tpcds_100.web_sales[ws_bill_customer_sk#5325,ws_ext_discount_amt#5343,ws_ext_sales_price#5344,ws_ext_wholesale_cost#5345,ws_ext_list_price#5346,ws_sold_date_sk#5355] Batched: true, DataFilters: [isnotnull(ws_bill_customer_sk#5325)], Format: Parquet, Location: InMemoryFileIndex(1823 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/web_sa..., PartitionFilters: [isnotnull(ws_sold_date_sk#5355), dynamicpruningexpression(ws_sold_date_sk#5355 IN dynamicpruning..., PushedFilters: [IsNotNull(ws_bill_customer_sk)], ReadSchema: struct<ws_bill_customer_sk:int,ws_ext_discount_amt:decimal(7,2),ws_ext_sales_price:decimal(7,2),w...\n               :                 :           +- ReusedSubquery SubqueryBroadcast dynamicpruning#5495, 0, [d_date_sk#4240], [id=#2219]\n               :                 +- BroadcastQueryStage 18\n               :                    +- ReusedExchange [d_date_sk#5356, d_year#5362], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=746]\n               +- *(35) Sort [c_customer_sk#5304 ASC NULLS FIRST], false, 0\n                  +- AQEShuffleRead coalesced\n                     +- ShuffleQueryStage 20\n                        +- ReusedExchange [c_customer_sk#5304, c_customer_id#5305, c_first_name#5312, c_last_name#5313, c_preferred_cust_flag#5314, c_birth_country#5318, c_login#5319, c_email_address#5320], Exchange hashpartitioning(c_customer_sk#30, 200), ENSURE_REQUIREMENTS, [plan_id=681]\n"
      },
      "IM" : {
        "inputSizeInBytes" : 166933240,
        "inputRowCount" : 902229
      },
      "InitialPartitionNum" : 200,
      "PD" : {
        "12" : [ 397303, 402060, 415277, 410868, 397303, 414800, 397303, 416102, 406111, 400877, 416102, 405634, 404809, 406111, 416579, 405634, 407771, 402537, 402060, 416102, 397303, 405634, 406111, 404809, 405634, 416102, 401831, 409566, 405634, 411345, 407294, 397303, 409566, 398257, 411822, 416102, 410868, 420511, 416579, 416579, 406111, 416102, 420034, 416102, 411345, 411345, 416102, 411345, 406111, 405634, 406111, 405634, 410868, 411345, 406111, 396120, 421336, 406111, 410868, 402537, 407294, 407771, 397303, 411822, 407771, 410520, 400877, 400877, 407294, 412528, 405634, 406588, 401354, 396120, 400877, 406111, 392546, 406111, 406111, 402537, 400877, 396120, 410868, 401354, 405634, 402537, 407294, 402537, 410520, 410868, 402537, 392546, 416579, 407771, 411345, 406111, 407771, 406111, 412528, 416579, 406111, 400877, 396597, 416102, 400877, 407294, 411822, 402537, 406111, 416102, 400877, 397303, 411345, 412528, 410043, 412528, 396120, 405634, 406111, 426570, 401354, 406111, 410868, 421336, 400529, 411345, 405634, 405634, 410868, 416102, 396120, 404809, 405634, 406111, 407771, 396597, 416102, 410868, 405634, 421336, 402537, 406111, 402537, 405634, 412528, 403014, 405634, 387789, 406111, 406111, 396120, 400052, 410868, 400877, 406111, 407771, 407294, 396120, 412528, 414800, 400877, 403014, 410868, 416579, 405634, 406111, 405634, 397074, 405634, 400877, 402060, 414800, 402537, 410868, 397303, 405634, 400877, 407294, 402537, 397029, 410868, 391363, 410868, 414800, 402060, 410868, 406111, 410868, 396597, 400052, 406111, 402060, 411345, 412528, 406111, 416102, 421336, 411345, 406111, 410868 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 4,
        "FinishedTasksNum" : 13,
        "FinishedTasksTotalTimeInMs" : 47997.0,
        "FinishedTasksDistributionInMs" : [ 866.0, 3854.0, 4018.0, 4173.0, 4955.0 ]
      },
      "QueryStageOptimizationId" : 19,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 39 ],
      "Objectives" : {
        "DurationInMs" : 2831,
        "TotalTasksDurationInMs" : 5062,
        "IOBytes" : {
          "Total" : 92121779,
          "Details" : {
            "IR" : 0,
            "IW" : 0,
            "SR" : 77564897,
            "SW" : 14556882
          }
        }
      }
    },
    "4" : {
      "QSLogical" : {
        "operators" : {
          "4" : {
            "sign" : 809132870,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 29800787536,
                "rowCount" : 143273017
              },
              "compileTime" : {
                "sizeInBytes" : 29800787536,
                "rowCount" : 143273017
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [cs_sold_time_sk#4525, cs_ship_date_sk#4526, cs_bill_customer_sk#4527, cs_bill_cdemo_sk#4528, cs_bill_hdemo_sk#4529, cs_bill_addr_sk#4530, cs_ship_customer_sk#4531, cs_ship_cdemo_sk#4532, cs_ship_hdemo_sk#4533, cs_ship_addr_sk#4534, cs_call_center_sk#4535, cs_catalog_page_sk#4536, cs_ship_mode_sk#4537, cs_warehouse_sk#4538, cs_item_sk#4539, cs_promo_sk#4540, cs_order_number#4541L, cs_quantity#4542, cs_wholesale_cost#4543, cs_list_price#4544, cs_sales_price#4545, cs_ext_discount_amt#4546, cs_ext_sales_price#4547, cs_ext_wholesale_cost#4548, ... 10 more fields], `spark_catalog`.`tpcds_100`.`catalog_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "1" : {
            "sign" : 1167648207,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 7756910672,
                "rowCount" : 138516262
              },
              "compileTime" : {
                "sizeInBytes" : 7756910672,
                "rowCount" : 138516262
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cs_sold_date_sk#4558 = d_date_sk#4559) "
          },
          "0" : {
            "sign" : -104612152,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 6648780576,
                "rowCount" : 138516262
              },
              "compileTime" : {
                "sizeInBytes" : 6648780576,
                "rowCount" : 138516262
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_bill_customer_sk#4527, cs_ext_discount_amt#4546, cs_ext_sales_price#4547, cs_ext_wholesale_cost#4548, cs_ext_list_price#4549, d_year#4565] "
          },
          "2" : {
            "sign" : -1747290206,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 6842707584,
                "rowCount" : 142556408
              },
              "compileTime" : {
                "sizeInBytes" : 6842707584,
                "rowCount" : 142556408
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_bill_customer_sk#4527, cs_ext_discount_amt#4546, cs_ext_sales_price#4547, cs_ext_wholesale_cost#4548, cs_ext_list_price#4549, cs_sold_date_sk#4558] "
          },
          "3" : {
            "sign" : -1564947664,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 29651732864,
                "rowCount" : 142556408
              },
              "compileTime" : {
                "sizeInBytes" : 29651732864,
                "rowCount" : 142556408
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(cs_bill_customer_sk#4527) AND isnotnull(cs_sold_date_sk#4558)) AND dynamicpruning#5496 [cs_sold_date_sk#4558]) "
          }
        },
        "links" : [ {
          "fromId" : 4,
          "fromName" : "LogicalRelation",
          "toId" : 3,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Filter",
          "toId" : 2,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Project",
          "toId" : 1,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Join",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [cs_bill_customer_sk#4527, cs_ext_discount_amt#4546, cs_ext_sales_price#4547, cs_ext_wholesale_cost#4548, cs_ext_list_price#4549, d_year#4565]\n+- Join Inner, (cs_sold_date_sk#4558 = d_date_sk#4559)\n   :- Project [cs_bill_customer_sk#4527, cs_ext_discount_amt#4546, cs_ext_sales_price#4547, cs_ext_wholesale_cost#4548, cs_ext_list_price#4549, cs_sold_date_sk#4558]\n   :  +- Filter ((isnotnull(cs_bill_customer_sk#4527) AND isnotnull(cs_sold_date_sk#4558)) AND dynamicpruning#5496 [cs_sold_date_sk#4558])\n   :     :  +- Project [d_date_sk#4559, d_year#4565]\n   :     :     +- Filter ((isnotnull(d_year#4565) AND (d_year#4565 = 2001)) AND isnotnull(d_date_sk#4559))\n   :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#4559,d_date_id#4560,d_date#4561,d_month_seq#4562,d_week_seq#4563,d_quarter_seq#4564,d_year#4565,d_dow#4566,d_moy#4567,d_dom#4568,d_qoy#4569,d_fy_year#4570,d_fy_quarter_seq#4571,d_fy_week_seq#4572,d_day_name#4573,d_quarter_name#4574,d_holiday#4575,d_weekend#4576,d_following_holiday#4577,d_first_dom#4578,d_last_dom#4579,d_same_day_ly#4580,d_same_day_lq#4581,d_current_day#4582,... 4 more fields] parquet\n   :     +- Relation spark_catalog.tpcds_100.catalog_sales[cs_sold_time_sk#4525,cs_ship_date_sk#4526,cs_bill_customer_sk#4527,cs_bill_cdemo_sk#4528,cs_bill_hdemo_sk#4529,cs_bill_addr_sk#4530,cs_ship_customer_sk#4531,cs_ship_cdemo_sk#4532,cs_ship_hdemo_sk#4533,cs_ship_addr_sk#4534,cs_call_center_sk#4535,cs_catalog_page_sk#4536,cs_ship_mode_sk#4537,cs_warehouse_sk#4538,cs_item_sk#4539,cs_promo_sk#4540,cs_order_number#4541L,cs_quantity#4542,cs_wholesale_cost#4543,cs_list_price#4544,cs_sales_price#4545,cs_ext_discount_amt#4546,cs_ext_sales_price#4547,cs_ext_wholesale_cost#4548,... 10 more fields] parquet\n   +- Project [d_date_sk#4559, d_year#4565]\n      +- Filter ((isnotnull(d_year#4565) AND (d_year#4565 = 2001)) AND isnotnull(d_date_sk#4559))\n         +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#4559,d_date_id#4560,d_date#4561,d_month_seq#4562,d_week_seq#4563,d_quarter_seq#4564,d_year#4565,d_dow#4566,d_moy#4567,d_dom#4568,d_qoy#4569,d_fy_year#4570,d_fy_quarter_seq#4571,d_fy_week_seq#4572,d_day_name#4573,d_quarter_name#4574,d_holiday#4575,d_weekend#4576,d_following_holiday#4577,d_first_dom#4578,d_last_dom#4579,d_same_day_ly#4580,d_same_day_lq#4581,d_current_day#4582,... 4 more fields] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "4" : {
            "sign" : 646747404,
            "className" : "org.apache.spark.sql.execution.adaptive.BroadcastQueryStageExec",
            "sizeInBytes" : 1051496,
            "rowCount" : 365,
            "isRuntime" : true,
            "predicate" : " (unknown) BroadcastQueryStage Output [2]: [d_date_sk#4559, d_year#4565] Arguments: 6 "
          },
          "1" : {
            "sign" : 427945771,
            "className" : "org.apache.spark.sql.execution.joins.BroadcastHashJoinExec",
            "sizeInBytes" : 7756910672,
            "rowCount" : 138516262,
            "isRuntime" : false,
            "predicate" : " (unknown) BroadcastHashJoin Left keys [1]: [cs_sold_date_sk#4558] Right keys [1]: [d_date_sk#4559] Join type: Inner Join condition: None "
          },
          "0" : {
            "sign" : -1719848576,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 6648780576,
            "rowCount" : 138516262,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [6]: [cs_bill_customer_sk#4527, cs_ext_discount_amt#4546, cs_ext_sales_price#4547, cs_ext_wholesale_cost#4548, cs_ext_list_price#4549, d_year#4565] Input [8]: [cs_bill_customer_sk#4527, cs_ext_discount_amt#4546, cs_ext_sales_price#4547, cs_ext_wholesale_cost#4548, cs_ext_list_price#4549, cs_sold_date_sk#4558, d_date_sk#4559, d_year#4565] "
          },
          "2" : {
            "sign" : -915779674,
            "className" : "org.apache.spark.sql.execution.FilterExec",
            "sizeInBytes" : 6842707584,
            "rowCount" : 142556408,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Input [6]: [cs_bill_customer_sk#4527, cs_ext_discount_amt#4546, cs_ext_sales_price#4547, cs_ext_wholesale_cost#4548, cs_ext_list_price#4549, cs_sold_date_sk#4558] Condition : isnotnull(cs_bill_customer_sk#4527) "
          },
          "3" : {
            "sign" : -122371114,
            "className" : "org.apache.spark.sql.execution.FileSourceScanExec",
            "sizeInBytes" : 6842707584,
            "rowCount" : 142556408,
            "isRuntime" : false,
            "predicate" : " (unknown) Scan parquet spark_catalog.tpcds_100.catalog_sales Output [6]: [cs_bill_customer_sk#4527, cs_ext_discount_amt#4546, cs_ext_sales_price#4547, cs_ext_wholesale_cost#4548, cs_ext_list_price#4549, cs_sold_date_sk#4558] Batched: true Location: InMemoryFileIndex [hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/catalog_sales/cs_sold_date_sk=2450815, ... 1835 entries] PartitionFilters: [isnotnull(cs_sold_date_sk#4558), dynamicpruningexpression(cs_sold_date_sk#4558 IN dynamicpruning#5494)] PushedFilters: [IsNotNull(cs_bill_customer_sk)] ReadSchema: struct<cs_bill_customer_sk:int,cs_ext_discount_amt:decimal(7,2),cs_ext_sales_price:decimal(7,2),cs_ext_wholesale_cost:decimal(7,2),cs_ext_list_price:decimal(7,2)> "
          }
        },
        "links" : [ {
          "fromId" : 3,
          "fromName" : "Scan parquet spark_catalog.tpcds_100.catalog_sales",
          "toId" : 2,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Filter",
          "toId" : 1,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "BroadcastQueryStage",
          "toId" : 1,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "BroadcastHashJoin",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [cs_bill_customer_sk#4527, cs_ext_discount_amt#4546, cs_ext_sales_price#4547, cs_ext_wholesale_cost#4548, cs_ext_list_price#4549, d_year#4565]\n+- BroadcastHashJoin [cs_sold_date_sk#4558], [d_date_sk#4559], Inner, BuildRight, false\n   :- Filter isnotnull(cs_bill_customer_sk#4527)\n   :  +- FileScan parquet spark_catalog.tpcds_100.catalog_sales[cs_bill_customer_sk#4527,cs_ext_discount_amt#4546,cs_ext_sales_price#4547,cs_ext_wholesale_cost#4548,cs_ext_list_price#4549,cs_sold_date_sk#4558] Batched: true, DataFilters: [isnotnull(cs_bill_customer_sk#4527)], Format: Parquet, Location: InMemoryFileIndex(1836 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/catalo..., PartitionFilters: [isnotnull(cs_sold_date_sk#4558), dynamicpruningexpression(cs_sold_date_sk#4558 IN dynamicpruning..., PushedFilters: [IsNotNull(cs_bill_customer_sk)], ReadSchema: struct<cs_bill_customer_sk:int,cs_ext_discount_amt:decimal(7,2),cs_ext_sales_price:decimal(7,2),c...\n   :        +- ReusedSubquery SubqueryBroadcast dynamicpruning#5494, 0, [d_date_sk#71], [id=#1579]\n   +- BroadcastQueryStage 6\n      +- ReusedExchange [d_date_sk#4559, d_year#4565], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=662]\n"
      },
      "IM" : {
        "inputSizeInBytes" : 6843759080,
        "inputRowCount" : 142556773
      },
      "InitialPartitionNum" : 0,
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 3,
        "FinishedTasksNum" : 13,
        "FinishedTasksTotalTimeInMs" : 18486.0,
        "FinishedTasksDistributionInMs" : [ 1193.0, 1333.0, 1396.0, 1494.0, 1707.0 ]
      },
      "QueryStageOptimizationId" : 4,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 7 ],
      "Objectives" : {
        "DurationInMs" : 4802,
        "TotalTasksDurationInMs" : 20879,
        "IOBytes" : {
          "Total" : 1164206785,
          "Details" : {
            "IR" : 497783346,
            "IW" : 0,
            "SR" : 0,
            "SW" : 666423439
          }
        }
      }
    },
    "15" : {
      "QSLogical" : {
        "operators" : {
          "0" : {
            "sign" : -324957856,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 14302285452,
                "rowCount" : 275043951
              },
              "compileTime" : {
                "sizeInBytes" : 14302285452,
                "rowCount" : 275043951
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(year_total#2829) AND (year_total#2829 > 0.000000)) "
          }
        },
        "links" : [ ],
        "rawPlan" : "Filter (isnotnull(year_total#2829) AND (year_total#2829 > 0.000000))\n+- Aggregate [c_customer_id#31, c_first_name#38, c_last_name#39, c_preferred_cust_flag#40, c_birth_country#44, c_login#45, c_email_address#46, d_year#77], [c_customer_id#31 AS customer_id#2821, sum(((((ss_ext_list_price#64 - ss_ext_wholesale_cost#63) - ss_ext_discount_amt#61) + ss_ext_sales_price#62) / 2)) AS year_total#2829]\n   +- Project [c_customer_id#31, c_first_name#38, c_last_name#39, c_preferred_cust_flag#40, c_birth_country#44, c_login#45, c_email_address#46, ss_ext_discount_amt#61, ss_ext_sales_price#62, ss_ext_wholesale_cost#63, ss_ext_list_price#64, d_year#77]\n      +- Join Inner, (c_customer_sk#30 = ss_customer_sk#50)\n         :- Project [ss_customer_sk#50, ss_ext_discount_amt#61, ss_ext_sales_price#62, ss_ext_wholesale_cost#63, ss_ext_list_price#64, d_year#77]\n         :  +- Join Inner, (ss_sold_date_sk#70 = d_date_sk#71)\n         :     :- Project [ss_customer_sk#50, ss_ext_discount_amt#61, ss_ext_sales_price#62, ss_ext_wholesale_cost#63, ss_ext_list_price#64, ss_sold_date_sk#70]\n         :     :  +- Filter ((isnotnull(ss_customer_sk#50) AND isnotnull(ss_sold_date_sk#70)) AND dynamicpruning#5494 [ss_sold_date_sk#70])\n         :     :     :  +- Project [d_date_sk#71, d_year#77]\n         :     :     :     +- Filter ((isnotnull(d_year#77) AND (d_year#77 = 2001)) AND isnotnull(d_date_sk#71))\n         :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#71,d_date_id#72,d_date#73,d_month_seq#74,d_week_seq#75,d_quarter_seq#76,d_year#77,d_dow#78,d_moy#79,d_dom#80,d_qoy#81,d_fy_year#82,d_fy_quarter_seq#83,d_fy_week_seq#84,d_day_name#85,d_quarter_name#86,d_holiday#87,d_weekend#88,d_following_holiday#89,d_first_dom#90,d_last_dom#91,d_same_day_ly#92,d_same_day_lq#93,d_current_day#94,... 4 more fields] parquet\n         :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#48,ss_item_sk#49,ss_customer_sk#50,ss_cdemo_sk#51,ss_hdemo_sk#52,ss_addr_sk#53,ss_store_sk#54,ss_promo_sk#55,ss_ticket_number#56L,ss_quantity#57,ss_wholesale_cost#58,ss_list_price#59,ss_sales_price#60,ss_ext_discount_amt#61,ss_ext_sales_price#62,ss_ext_wholesale_cost#63,ss_ext_list_price#64,ss_ext_tax#65,ss_coupon_amt#66,ss_net_paid#67,ss_net_paid_inc_tax#68,ss_net_profit#69,ss_sold_date_sk#70] parquet\n         :     +- Project [d_date_sk#71, d_year#77]\n         :        +- Filter ((isnotnull(d_year#77) AND (d_year#77 = 2001)) AND isnotnull(d_date_sk#71))\n         :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#71,d_date_id#72,d_date#73,d_month_seq#74,d_week_seq#75,d_quarter_seq#76,d_year#77,d_dow#78,d_moy#79,d_dom#80,d_qoy#81,d_fy_year#82,d_fy_quarter_seq#83,d_fy_week_seq#84,d_day_name#85,d_quarter_name#86,d_holiday#87,d_weekend#88,d_following_holiday#89,d_first_dom#90,d_last_dom#91,d_same_day_ly#92,d_same_day_lq#93,d_current_day#94,... 4 more fields] parquet\n         +- Project [c_customer_sk#30, c_customer_id#31, c_first_name#38, c_last_name#39, c_preferred_cust_flag#40, c_birth_country#44, c_login#45, c_email_address#46]\n            +- Filter (isnotnull(c_customer_sk#30) AND isnotnull(c_customer_id#31))\n               +- Relation spark_catalog.tpcds_100.customer[c_customer_sk#30,c_customer_id#31,c_current_cdemo_sk#32,c_current_hdemo_sk#33,c_current_addr_sk#34,c_first_shipto_date_sk#35,c_first_sales_date_sk#36,c_salutation#37,c_first_name#38,c_last_name#39,c_preferred_cust_flag#40,c_birth_day#41,c_birth_month#42,c_birth_year#43,c_birth_country#44,c_login#45,c_email_address#46,c_last_review_date#47] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "0" : {
            "sign" : -1591232840,
            "className" : "org.apache.spark.sql.execution.FilterExec",
            "sizeInBytes" : 14302285452,
            "rowCount" : 275043951,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Input [2]: [customer_id#2821, year_total#2829] Condition : (isnotnull(year_total#2829) AND (year_total#2829 > 0.000000)) "
          },
          "1" : {
            "sign" : 1966993646,
            "className" : "org.apache.spark.sql.execution.aggregate.HashAggregateExec",
            "sizeInBytes" : 336147640,
            "rowCount" : 1816698,
            "isRuntime" : true,
            "predicate" : " (unknown) HashAggregate Input [10]: [c_customer_id#31, c_first_name#38, c_last_name#39, c_preferred_cust_flag#40, c_birth_country#44, c_login#45, c_email_address#46, d_year#77, sum#5502, isEmpty#5503] Keys [8]: [c_customer_id#31, c_first_name#38, c_last_name#39, c_preferred_cust_flag#40, c_birth_country#44, c_login#45, c_email_address#46, d_year#77] Functions [1]: [sum(((((ss_ext_list_price#64 - ss_ext_wholesale_cost#63) - ss_ext_discount_amt#61) + ss_ext_sales_price#62) / 2))] Aggregate Attributes [1]: [sum(((((ss_ext_list_price#64 - ss_ext_wholesale_cost#63) - ss_ext_discount_amt#61) + ss_ext_sales_price#62) / 2))#2947] Results [2]: [c_customer_id#31 AS customer_id#2821, sum(((((ss_ext_list_price#64 - ss_ext_wholesale_cost#63) - ss_ext_discount_amt#61) + ss_ext_sales_price#62) / 2))#2947 AS year_total#2829] "
          },
          "2" : {
            "sign" : -248898829,
            "className" : "org.apache.spark.sql.execution.adaptive.ShuffleQueryStageExec",
            "sizeInBytes" : 14302285452,
            "rowCount" : 275043951,
            "isRuntime" : false,
            "predicate" : " (unknown) ShuffleQueryStage Output [10]: [c_customer_id#31, c_first_name#38, c_last_name#39, c_preferred_cust_flag#40, c_birth_country#44, c_login#45, c_email_address#46, d_year#77, sum#5502, isEmpty#5503] Arguments: 27 "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "ShuffleQueryStage",
          "toId" : 1,
          "toName" : "HashAggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "HashAggregate",
          "toId" : 0,
          "toName" : "Filter",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Filter (isnotnull(year_total#2829) AND (year_total#2829 > 0.000000))\n+- HashAggregate(keys=[c_customer_id#31, c_first_name#38, c_last_name#39, c_preferred_cust_flag#40, c_birth_country#44, c_login#45, c_email_address#46, d_year#77], functions=[sum(((((ss_ext_list_price#64 - ss_ext_wholesale_cost#63) - ss_ext_discount_amt#61) + ss_ext_sales_price#62) / 2))], output=[customer_id#2821, year_total#2829])\n   +- ShuffleQueryStage 27\n      +- Exchange hashpartitioning(c_customer_id#31, c_first_name#38, c_last_name#39, c_preferred_cust_flag#40, c_birth_country#44, c_login#45, c_email_address#46, d_year#77, 200), ENSURE_REQUIREMENTS, [plan_id=3148]\n         +- *(21) HashAggregate(keys=[c_customer_id#31, c_first_name#38, c_last_name#39, c_preferred_cust_flag#40, c_birth_country#44, c_login#45, c_email_address#46, d_year#77], functions=[partial_sum(((((ss_ext_list_price#64 - ss_ext_wholesale_cost#63) - ss_ext_discount_amt#61) + ss_ext_sales_price#62) / 2))], output=[c_customer_id#31, c_first_name#38, c_last_name#39, c_preferred_cust_flag#40, c_birth_country#44, c_login#45, c_email_address#46, d_year#77, sum#5502, isEmpty#5503])\n            +- *(21) Project [c_customer_id#31, c_first_name#38, c_last_name#39, c_preferred_cust_flag#40, c_birth_country#44, c_login#45, c_email_address#46, ss_ext_discount_amt#61, ss_ext_sales_price#62, ss_ext_wholesale_cost#63, ss_ext_list_price#64, d_year#77]\n               +- *(21) SortMergeJoin [ss_customer_sk#50], [c_customer_sk#30], Inner\n                  :- *(19) Sort [ss_customer_sk#50 ASC NULLS FIRST], false, 0\n                  :  +- AQEShuffleRead coalesced\n                  :     +- ShuffleQueryStage 21\n                  :        +- Exchange hashpartitioning(ss_customer_sk#50, 200), ENSURE_REQUIREMENTS, [plan_id=1605]\n                  :           +- *(13) Project [ss_customer_sk#50, ss_ext_discount_amt#61, ss_ext_sales_price#62, ss_ext_wholesale_cost#63, ss_ext_list_price#64, d_year#77]\n                  :              +- *(13) BroadcastHashJoin [ss_sold_date_sk#70], [d_date_sk#71], Inner, BuildRight, false\n                  :                 :- *(13) Filter isnotnull(ss_customer_sk#50)\n                  :                 :  +- *(13) ColumnarToRow\n                  :                 :     +- FileScan parquet spark_catalog.tpcds_100.store_sales[ss_customer_sk#50,ss_ext_discount_amt#61,ss_ext_sales_price#62,ss_ext_wholesale_cost#63,ss_ext_list_price#64,ss_sold_date_sk#70] Batched: true, DataFilters: [isnotnull(ss_customer_sk#50)], Format: Parquet, Location: InMemoryFileIndex(1823 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/store_..., PartitionFilters: [isnotnull(ss_sold_date_sk#70), dynamicpruningexpression(ss_sold_date_sk#70 IN dynamicpruning#5494)], PushedFilters: [IsNotNull(ss_customer_sk)], ReadSchema: struct<ss_customer_sk:int,ss_ext_discount_amt:decimal(7,2),ss_ext_sales_price:decimal(7,2),ss_ext...\n                  :                 :           +- SubqueryBroadcast dynamicpruning#5494, 0, [d_date_sk#71], [id=#1579]\n                  :                 :              +- AdaptiveSparkPlan isFinalPlan=true\n                                                      +- == Final Plan ==\n                                                         BroadcastQueryStage 1\n                                                         +- ReusedExchange [d_date_sk#71, d_year#77], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=662]\n                                                      +- == Initial Plan ==\n                                                         BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=1576]\n                                                         +- Filter ((isnotnull(d_year#77) AND (d_year#77 = 2001)) AND isnotnull(d_date_sk#71))\n                                                            +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#71,d_year#77] Batched: true, DataFilters: [isnotnull(d_year#77), (d_year#77 = 2001), isnotnull(d_date_sk#71)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), EqualTo(d_year,2001), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>\n                  :                 +- BroadcastQueryStage 0\n                  :                    +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=662]\n                  :                       +- *(1) Filter ((isnotnull(d_year#77) AND (d_year#77 = 2001)) AND isnotnull(d_date_sk#71))\n                  :                          +- *(1) ColumnarToRow\n                  :                             +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#71,d_year#77] Batched: true, DataFilters: [isnotnull(d_year#77), (d_year#77 = 2001), isnotnull(d_date_sk#71)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), EqualTo(d_year,2001), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>\n                  +- *(20) Sort [c_customer_sk#30 ASC NULLS FIRST], false, 0\n                     +- AQEShuffleRead coalesced\n                        +- ShuffleQueryStage 1\n                           +- Exchange hashpartitioning(c_customer_sk#30, 200), ENSURE_REQUIREMENTS, [plan_id=681]\n                              +- *(2) Filter (isnotnull(c_customer_sk#30) AND isnotnull(c_customer_id#31))\n                                 +- *(2) ColumnarToRow\n                                    +- FileScan parquet spark_catalog.tpcds_100.customer[c_customer_sk#30,c_customer_id#31,c_first_name#38,c_last_name#39,c_preferred_cust_flag#40,c_birth_country#44,c_login#45,c_email_address#46] Batched: true, DataFilters: [isnotnull(c_customer_sk#30), isnotnull(c_customer_id#31)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/customer], PartitionFilters: [], PushedFilters: [IsNotNull(c_customer_sk), IsNotNull(c_customer_id)], ReadSchema: struct<c_customer_sk:int,c_customer_id:string,c_first_name:string,c_last_name:string,c_preferred_...\n"
      },
      "IM" : {
        "inputSizeInBytes" : 336147640,
        "inputRowCount" : 1816698
      },
      "InitialPartitionNum" : 200,
      "PD" : {
        "7" : [ 813864, 826018, 817796, 833917, 822086, 822479, 826018, 794920, 817796, 813864, 806358, 817796, 806358, 817796, 825660, 822086, 817796, 813864, 846106, 813864, 794920, 794562, 822086, 841781, 837456, 810290, 822121, 821728, 826053, 814615, 818154, 817796, 822086, 806000, 821728, 798852, 806000, 813864, 821728, 810290, 829592, 806358, 826053, 806358, 825660, 818870, 802426, 838207, 826053, 822837, 814222, 799210, 822121, 817796, 821728, 806358, 817796, 806358, 806358, 818154, 810648, 822086, 810290, 818154, 822086, 802784, 818154, 806716, 825660, 837849, 833524, 806358, 802784, 821728, 829950, 829592, 833882, 814222, 841388, 817796, 814222, 822479, 829592, 837456, 826376, 813864, 826018, 837456, 790988, 818512, 810648, 830343, 817796, 806358, 818189, 806716, 806751, 814222, 825660, 833882, 802426, 814222, 799568, 841388, 822086, 818154, 802819, 806358, 821728, 834310, 809932, 829592, 825660, 825660, 817796, 810290, 802068, 806358, 806716, 833917, 829950, 802426, 821728, 814615, 814615, 818189, 802784, 802426, 802784, 802784, 802426, 817796, 802068, 811006, 806000, 825660, 814222, 809932, 818154, 814222, 818154, 829592, 822837, 806358, 837849, 825660, 814222, 829592, 833524, 817796, 809932, 818189, 822086, 810290, 806358, 813864, 822802, 834633, 822479, 810290, 806358, 826053, 829985, 822086, 822086, 837456, 814222, 791670, 813864, 814222, 829592, 817796, 821728, 814580, 802784, 817796, 817796, 809932, 830343, 825660, 814222, 814222, 817796, 814580, 829950, 833917, 833917, 814222, 814222, 810648, 829592, 818512, 822086, 826018, 795278, 794562, 841388, 821728, 817796, 810290 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 16,
        "FinishedTasksNum" : 12,
        "FinishedTasksTotalTimeInMs" : 46954.0,
        "FinishedTasksDistributionInMs" : [ 3714.0, 3775.0, 3864.0, 4177.0, 4259.0 ]
      },
      "QueryStageOptimizationId" : 15,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 27 ],
      "Objectives" : {
        "DurationInMs" : 14268,
        "TotalTasksDurationInMs" : 3921,
        "IOBytes" : {
          "Total" : 184688384,
          "Details" : {
            "IR" : 0,
            "IW" : 0,
            "SR" : 155877668,
            "SW" : 28810716
          }
        }
      }
    },
    "11" : {
      "QSLogical" : {
        "operators" : {
          "0" : {
            "sign" : -863737528,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 3761782752,
                "rowCount" : 72341976
              },
              "compileTime" : {
                "sizeInBytes" : 3761782752,
                "rowCount" : 72341976
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [c_customer_id#5066, c_first_name#5073, c_last_name#5074, c_preferred_cust_flag#5075, c_birth_country#5079, c_login#5080, c_email_address#5081, d_year#5123], [c_customer_id#5066 AS customer_id#2841, sum(((((ws_ext_list_price#5107 - ws_ext_wholesale_cost#5106) - ws_ext_discount_amt#5104) + ws_ext_sales_price#5105) / 2)) AS year_total#2849] "
          },
          "1" : {
            "sign" : -1579810427,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 15553524840,
                "rowCount" : 72341976
              },
              "compileTime" : {
                "sizeInBytes" : 15553524840,
                "rowCount" : 72341976
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_customer_id#5066, c_first_name#5073, c_last_name#5074, c_preferred_cust_flag#5075, c_birth_country#5079, c_login#5080, c_email_address#5081, ws_ext_discount_amt#5104, ws_ext_sales_price#5105, ws_ext_wholesale_cost#5106, ws_ext_list_price#5107, d_year#5123] "
          },
          "2" : {
            "sign" : -2134954206,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 16132260648,
                "rowCount" : 72341976
              },
              "compileTime" : {
                "sizeInBytes" : 16132260648,
                "rowCount" : 72341976
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (c_customer_sk#5065 = ws_bill_customer_sk#5086) "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "Join",
          "toId" : 1,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Project",
          "toId" : 0,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Aggregate [c_customer_id#5066, c_first_name#5073, c_last_name#5074, c_preferred_cust_flag#5075, c_birth_country#5079, c_login#5080, c_email_address#5081, d_year#5123], [c_customer_id#5066 AS customer_id#2841, sum(((((ws_ext_list_price#5107 - ws_ext_wholesale_cost#5106) - ws_ext_discount_amt#5104) + ws_ext_sales_price#5105) / 2)) AS year_total#2849]\n+- Project [c_customer_id#5066, c_first_name#5073, c_last_name#5074, c_preferred_cust_flag#5075, c_birth_country#5079, c_login#5080, c_email_address#5081, ws_ext_discount_amt#5104, ws_ext_sales_price#5105, ws_ext_wholesale_cost#5106, ws_ext_list_price#5107, d_year#5123]\n   +- Join Inner, (c_customer_sk#5065 = ws_bill_customer_sk#5086)\n      :- Project [ws_bill_customer_sk#5086, ws_ext_discount_amt#5104, ws_ext_sales_price#5105, ws_ext_wholesale_cost#5106, ws_ext_list_price#5107, d_year#5123]\n      :  +- Join Inner, (ws_sold_date_sk#5116 = d_date_sk#5117)\n      :     :- Project [ws_bill_customer_sk#5086, ws_ext_discount_amt#5104, ws_ext_sales_price#5105, ws_ext_wholesale_cost#5106, ws_ext_list_price#5107, ws_sold_date_sk#5116]\n      :     :  +- Filter ((isnotnull(ws_bill_customer_sk#5086) AND isnotnull(ws_sold_date_sk#5116)) AND dynamicpruning#5498 [ws_sold_date_sk#5116])\n      :     :     :  +- Project [d_date_sk#5117, d_year#5123]\n      :     :     :     +- Filter ((isnotnull(d_year#5123) AND (d_year#5123 = 2001)) AND isnotnull(d_date_sk#5117))\n      :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#5117,d_date_id#5118,d_date#5119,d_month_seq#5120,d_week_seq#5121,d_quarter_seq#5122,d_year#5123,d_dow#5124,d_moy#5125,d_dom#5126,d_qoy#5127,d_fy_year#5128,d_fy_quarter_seq#5129,d_fy_week_seq#5130,d_day_name#5131,d_quarter_name#5132,d_holiday#5133,d_weekend#5134,d_following_holiday#5135,d_first_dom#5136,d_last_dom#5137,d_same_day_ly#5138,d_same_day_lq#5139,d_current_day#5140,... 4 more fields] parquet\n      :     :     +- Relation spark_catalog.tpcds_100.web_sales[ws_sold_time_sk#5083,ws_ship_date_sk#5084,ws_item_sk#5085,ws_bill_customer_sk#5086,ws_bill_cdemo_sk#5087,ws_bill_hdemo_sk#5088,ws_bill_addr_sk#5089,ws_ship_customer_sk#5090,ws_ship_cdemo_sk#5091,ws_ship_hdemo_sk#5092,ws_ship_addr_sk#5093,ws_web_page_sk#5094,ws_web_site_sk#5095,ws_ship_mode_sk#5096,ws_warehouse_sk#5097,ws_promo_sk#5098,ws_order_number#5099L,ws_quantity#5100,ws_wholesale_cost#5101,ws_list_price#5102,ws_sales_price#5103,ws_ext_discount_amt#5104,ws_ext_sales_price#5105,ws_ext_wholesale_cost#5106,... 10 more fields] parquet\n      :     +- Project [d_date_sk#5117, d_year#5123]\n      :        +- Filter ((isnotnull(d_year#5123) AND (d_year#5123 = 2001)) AND isnotnull(d_date_sk#5117))\n      :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#5117,d_date_id#5118,d_date#5119,d_month_seq#5120,d_week_seq#5121,d_quarter_seq#5122,d_year#5123,d_dow#5124,d_moy#5125,d_dom#5126,d_qoy#5127,d_fy_year#5128,d_fy_quarter_seq#5129,d_fy_week_seq#5130,d_day_name#5131,d_quarter_name#5132,d_holiday#5133,d_weekend#5134,d_following_holiday#5135,d_first_dom#5136,d_last_dom#5137,d_same_day_ly#5138,d_same_day_lq#5139,d_current_day#5140,... 4 more fields] parquet\n      +- Project [c_customer_sk#5065, c_customer_id#5066, c_first_name#5073, c_last_name#5074, c_preferred_cust_flag#5075, c_birth_country#5079, c_login#5080, c_email_address#5081]\n         +- Filter (isnotnull(c_customer_sk#5065) AND isnotnull(c_customer_id#5066))\n            +- Relation spark_catalog.tpcds_100.customer[c_customer_sk#5065,c_customer_id#5066,c_current_cdemo_sk#5067,c_current_hdemo_sk#5068,c_current_addr_sk#5069,c_first_shipto_date_sk#5070,c_first_sales_date_sk#5071,c_salutation#5072,c_first_name#5073,c_last_name#5074,c_preferred_cust_flag#5075,c_birth_day#5076,c_birth_month#5077,c_birth_year#5078,c_birth_country#5079,c_login#5080,c_email_address#5081,c_last_review_date#5082] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "4" : {
            "sign" : -1390887548,
            "className" : "org.apache.spark.sql.execution.adaptive.ShuffleQueryStageExec",
            "sizeInBytes" : 801671080,
            "rowCount" : 14315555,
            "isRuntime" : true,
            "predicate" : " (unknown) ShuffleQueryStage Output [6]: [ws_bill_customer_sk#5086, ws_ext_discount_amt#5104, ws_ext_sales_price#5105, ws_ext_wholesale_cost#5106, ws_ext_list_price#5107, d_year#5123] Arguments: 23 "
          },
          "5" : {
            "sign" : -149908146,
            "className" : "org.apache.spark.sql.execution.SortExec",
            "sizeInBytes" : -1,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Input [8]: [c_customer_sk#5065, c_customer_id#5066, c_first_name#5073, c_last_name#5074, c_preferred_cust_flag#5075, c_birth_country#5079, c_login#5080, c_email_address#5081] Arguments: [c_customer_sk#5065 ASC NULLS FIRST], false, 0 "
          },
          "6" : {
            "sign" : 2060931614,
            "className" : "org.apache.spark.sql.execution.adaptive.ShuffleQueryStageExec",
            "sizeInBytes" : 306068840,
            "rowCount" : 2000000,
            "isRuntime" : true,
            "predicate" : " (unknown) ShuffleQueryStage Output [8]: [c_customer_sk#5065, c_customer_id#5066, c_first_name#5073, c_last_name#5074, c_preferred_cust_flag#5075, c_birth_country#5079, c_login#5080, c_email_address#5081] Arguments: 16 "
          },
          "1" : {
            "sign" : 257059488,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 15553524840,
            "rowCount" : 72341976,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [12]: [c_customer_id#5066, c_first_name#5073, c_last_name#5074, c_preferred_cust_flag#5075, c_birth_country#5079, c_login#5080, c_email_address#5081, ws_ext_discount_amt#5104, ws_ext_sales_price#5105, ws_ext_wholesale_cost#5106, ws_ext_list_price#5107, d_year#5123] Input [14]: [ws_bill_customer_sk#5086, ws_ext_discount_amt#5104, ws_ext_sales_price#5105, ws_ext_wholesale_cost#5106, ws_ext_list_price#5107, d_year#5123, c_customer_sk#5065, c_customer_id#5066, c_first_name#5073, c_last_name#5074, c_preferred_cust_flag#5075, c_birth_country#5079, c_login#5080, c_email_address#5081] "
          },
          "0" : {
            "sign" : 726387858,
            "className" : "org.apache.spark.sql.execution.aggregate.HashAggregateExec",
            "sizeInBytes" : 3761782752,
            "rowCount" : 72341976,
            "isRuntime" : false,
            "predicate" : " (unknown) HashAggregate Input [12]: [c_customer_id#5066, c_first_name#5073, c_last_name#5074, c_preferred_cust_flag#5075, c_birth_country#5079, c_login#5080, c_email_address#5081, ws_ext_discount_amt#5104, ws_ext_sales_price#5105, ws_ext_wholesale_cost#5106, ws_ext_list_price#5107, d_year#5123] Keys [8]: [c_customer_id#5066, c_first_name#5073, c_last_name#5074, c_preferred_cust_flag#5075, c_birth_country#5079, c_login#5080, c_email_address#5081, d_year#5123] Functions [1]: [partial_sum(((((ws_ext_list_price#5107 - ws_ext_wholesale_cost#5106) - ws_ext_discount_amt#5104) + ws_ext_sales_price#5105) / 2))] Aggregate Attributes [2]: [sum#5516, isEmpty#5517] Results [10]: [c_customer_id#5066, c_first_name#5073, c_last_name#5074, c_preferred_cust_flag#5075, c_birth_country#5079, c_login#5080, c_email_address#5081, d_year#5123, sum#5518, isEmpty#5519] "
          },
          "2" : {
            "sign" : -498942277,
            "className" : "org.apache.spark.sql.execution.joins.SortMergeJoinExec",
            "sizeInBytes" : 16132260648,
            "rowCount" : 72341976,
            "isRuntime" : false,
            "predicate" : " (unknown) SortMergeJoin Left keys [1]: [ws_bill_customer_sk#5086] Right keys [1]: [c_customer_sk#5065] Join type: Inner Join condition: None "
          },
          "3" : {
            "sign" : 2019361544,
            "className" : "org.apache.spark.sql.execution.SortExec",
            "sizeInBytes" : -1,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Input [6]: [ws_bill_customer_sk#5086, ws_ext_discount_amt#5104, ws_ext_sales_price#5105, ws_ext_wholesale_cost#5106, ws_ext_list_price#5107, d_year#5123] Arguments: [ws_bill_customer_sk#5086 ASC NULLS FIRST], false, 0 "
          }
        },
        "links" : [ {
          "fromId" : 4,
          "fromName" : "ShuffleQueryStage",
          "toId" : 3,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Sort",
          "toId" : 2,
          "toName" : "SortMergeJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "ShuffleQueryStage",
          "toId" : 5,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Sort",
          "toId" : 2,
          "toName" : "SortMergeJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "SortMergeJoin",
          "toId" : 1,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Project",
          "toId" : 0,
          "toName" : "HashAggregate",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "HashAggregate(keys=[c_customer_id#5066, c_first_name#5073, c_last_name#5074, c_preferred_cust_flag#5075, c_birth_country#5079, c_login#5080, c_email_address#5081, d_year#5123], functions=[partial_sum(((((ws_ext_list_price#5107 - ws_ext_wholesale_cost#5106) - ws_ext_discount_amt#5104) + ws_ext_sales_price#5105) / 2))], output=[c_customer_id#5066, c_first_name#5073, c_last_name#5074, c_preferred_cust_flag#5075, c_birth_country#5079, c_login#5080, c_email_address#5081, d_year#5123, sum#5518, isEmpty#5519])\n+- Project [c_customer_id#5066, c_first_name#5073, c_last_name#5074, c_preferred_cust_flag#5075, c_birth_country#5079, c_login#5080, c_email_address#5081, ws_ext_discount_amt#5104, ws_ext_sales_price#5105, ws_ext_wholesale_cost#5106, ws_ext_list_price#5107, d_year#5123]\n   +- SortMergeJoin [ws_bill_customer_sk#5086], [c_customer_sk#5065], Inner\n      :- Sort [ws_bill_customer_sk#5086 ASC NULLS FIRST], false, 0\n      :  +- ShuffleQueryStage 23\n      :     +- Exchange hashpartitioning(ws_bill_customer_sk#5086, 200), ENSURE_REQUIREMENTS, [plan_id=1816]\n      :        +- *(15) Project [ws_bill_customer_sk#5086, ws_ext_discount_amt#5104, ws_ext_sales_price#5105, ws_ext_wholesale_cost#5106, ws_ext_list_price#5107, d_year#5123]\n      :           +- *(15) BroadcastHashJoin [ws_sold_date_sk#5116], [d_date_sk#5117], Inner, BuildRight, false\n      :              :- *(15) Filter isnotnull(ws_bill_customer_sk#5086)\n      :              :  +- *(15) ColumnarToRow\n      :              :     +- FileScan parquet spark_catalog.tpcds_100.web_sales[ws_bill_customer_sk#5086,ws_ext_discount_amt#5104,ws_ext_sales_price#5105,ws_ext_wholesale_cost#5106,ws_ext_list_price#5107,ws_sold_date_sk#5116] Batched: true, DataFilters: [isnotnull(ws_bill_customer_sk#5086)], Format: Parquet, Location: InMemoryFileIndex(1823 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/web_sa..., PartitionFilters: [isnotnull(ws_sold_date_sk#5116), dynamicpruningexpression(ws_sold_date_sk#5116 IN dynamicpruning..., PushedFilters: [IsNotNull(ws_bill_customer_sk)], ReadSchema: struct<ws_bill_customer_sk:int,ws_ext_discount_amt:decimal(7,2),ws_ext_sales_price:decimal(7,2),w...\n      :              :           +- ReusedSubquery SubqueryBroadcast dynamicpruning#5494, 0, [d_date_sk#71], [id=#1579]\n      :              +- BroadcastQueryStage 14\n      :                 +- ReusedExchange [d_date_sk#5117, d_year#5123], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=662]\n      +- Sort [c_customer_sk#5065 ASC NULLS FIRST], false, 0\n         +- ShuffleQueryStage 16\n            +- ReusedExchange [c_customer_sk#5065, c_customer_id#5066, c_first_name#5073, c_last_name#5074, c_preferred_cust_flag#5075, c_birth_country#5079, c_login#5080, c_email_address#5081], Exchange hashpartitioning(c_customer_sk#30, 200), ENSURE_REQUIREMENTS, [plan_id=681]\n"
      },
      "IM" : {
        "inputSizeInBytes" : 1107739920,
        "inputRowCount" : 16315555
      },
      "InitialPartitionNum" : 200,
      "PD" : {
        "3" : [ 1787186, 1765194, 1735778, 1720345, 1703287, 1812213, 1705028, 1711545, 1741569, 1763109, 1772252, 1705222, 1753479, 1756094, 1689907, 1758915, 1755444, 1796374, 1799628, 1791156, 1732925, 1735720, 1766498, 1754113, 1724029, 1772375, 1758834, 1763577, 1731997, 1750669, 1704655, 1806109, 1723946, 1718885, 1748357, 1723327, 1722296, 1706491, 1721379, 1723079, 1678458, 1747243, 1706590, 1752645, 1769465, 1726211, 1734474, 1755741, 1742926, 1721355, 1772492, 1819843, 1749235, 1790174, 1768652, 1719442, 1713428, 1660808, 1699673, 1740955, 1757408, 1728979, 1733119, 1763779, 1728813, 1780240, 1743735, 1694325, 1743401, 1744995, 1773203, 1768537, 1756395, 1758585, 1761146, 1747179, 1796260, 1799142, 1759882, 1733753, 1746057, 1791790, 1819179, 1694649, 1706590, 1734815, 1724425, 1736153, 1742322, 1781007, 1759051, 1741097, 1827144, 1769441, 1707238, 1748781, 1757469, 1717140, 1818520, 1733041, 1696347, 1769067, 1765053, 1756777, 1703901, 1734465, 1738735, 1734924, 1666169, 1730973, 1729137, 1729857, 1770080, 1669382, 1707319, 1727961, 1690222, 1713075, 1708417, 1719717, 1731225, 1692680, 1781739, 1719137, 1803805, 1780382, 1752289, 1762222, 1719858, 1744589, 1743239, 1750262, 1708493, 1734442, 1778410, 1726716, 1758258, 1731747, 1761168, 1726617, 1735341, 1733717, 1738384, 1769589, 1721549, 1726441, 1815098, 1697991, 1793599, 1805448, 1794256, 1755841, 1831246, 1764815, 1746903, 1778189, 1747620, 1761661, 1780130, 1705869, 1740787, 1746135, 1755192, 1725797, 1755518, 1762822, 1732742, 1775044, 1799912, 1743065, 1725932, 1783842, 1750793, 1769764, 1725156, 1719983, 1703453, 1728848, 1766593, 1769213, 1771841, 1770825, 1784455, 1684529, 1786964, 1723188, 1761384, 1684043, 1737170, 1766839, 1770374, 1721355, 1795103, 1696479, 1738438, 1767973, 1770188, 1735503, 1819870, 1693178 ],
        "0" : [ 830145, 830145, 754677, 830145, 830145, 830145, 754677, 754677, 830145, 830145, 830145, 754677, 830145, 830145, 754677, 830145, 830145, 830145, 754677, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 754677, 830145, 830145, 754677, 830145, 830145, 754677, 754677, 754677, 754677, 754677, 830145, 754677, 830145, 830145, 754677, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 754677, 754677, 754677, 830145, 830145, 830145, 754677, 830145, 754677, 830145, 830145, 754677, 830145, 830145, 830145, 754677, 754677, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 754677, 754677, 754677, 754677, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 754677, 754677, 830145, 754677, 754677, 830145, 830145, 754677, 830145, 830145, 830145, 830145, 754677, 754677, 830145, 830145, 830145, 754677, 830145, 830145, 754677, 754677, 754677, 830145, 754677, 830145, 830145, 754677, 830145, 830145, 754677, 754677, 754677, 754677, 830145, 830145, 830145, 830145, 754677, 754677, 830145, 830145, 830145, 830145, 754677, 754677, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 754677, 754677, 830145, 830145, 754677, 830145, 830145, 830145, 830145, 830145, 754677, 830145, 830145, 830145, 830145, 830145, 754677, 830145, 754677, 830145, 754677, 754677, 830145, 830145, 754677, 830145, 830145, 830145, 830145, 754677, 830145, 830145, 830145, 754677, 754677, 830145, 830145, 830145, 830145, 830145, 754677 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 16,
        "FinishedTasksNum" : 3,
        "FinishedTasksTotalTimeInMs" : 3298.0,
        "FinishedTasksDistributionInMs" : [ 1006.0, 1006.0, 1126.0, 1166.0, 1166.0 ]
      },
      "QueryStageOptimizationId" : 11,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 18 ],
      "Objectives" : {
        "DurationInMs" : 16812,
        "TotalTasksDurationInMs" : 28541,
        "IOBytes" : {
          "Total" : 561908061,
          "Details" : {
            "IR" : 0,
            "IW" : 0,
            "SR" : 484624675,
            "SW" : 77283386
          }
        }
      }
    },
    "9" : {
      "QSLogical" : {
        "operators" : {
          "0" : {
            "sign" : -298532910,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 14302285452,
                "rowCount" : 275043951
              },
              "compileTime" : {
                "sizeInBytes" : 14302285452,
                "rowCount" : 275043951
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [c_customer_id#31, c_first_name#38, c_last_name#39, c_preferred_cust_flag#40, c_birth_country#44, c_login#45, c_email_address#46, d_year#77], [c_customer_id#31 AS customer_id#2821, sum(((((ss_ext_list_price#64 - ss_ext_wholesale_cost#63) - ss_ext_discount_amt#61) + ss_ext_sales_price#62) / 2)) AS year_total#2829] "
          },
          "1" : {
            "sign" : -1585810138,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 59134449465,
                "rowCount" : 275043951
              },
              "compileTime" : {
                "sizeInBytes" : 59134449465,
                "rowCount" : 275043951
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_customer_id#31, c_first_name#38, c_last_name#39, c_preferred_cust_flag#40, c_birth_country#44, c_login#45, c_email_address#46, ss_ext_discount_amt#61, ss_ext_sales_price#62, ss_ext_wholesale_cost#63, ss_ext_list_price#64, d_year#77] "
          },
          "2" : {
            "sign" : 485121965,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 61334801073,
                "rowCount" : 275043951
              },
              "compileTime" : {
                "sizeInBytes" : 61334801073,
                "rowCount" : 275043951
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (c_customer_sk#30 = ss_customer_sk#50) "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "Join",
          "toId" : 1,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Project",
          "toId" : 0,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Aggregate [c_customer_id#31, c_first_name#38, c_last_name#39, c_preferred_cust_flag#40, c_birth_country#44, c_login#45, c_email_address#46, d_year#77], [c_customer_id#31 AS customer_id#2821, sum(((((ss_ext_list_price#64 - ss_ext_wholesale_cost#63) - ss_ext_discount_amt#61) + ss_ext_sales_price#62) / 2)) AS year_total#2829]\n+- Project [c_customer_id#31, c_first_name#38, c_last_name#39, c_preferred_cust_flag#40, c_birth_country#44, c_login#45, c_email_address#46, ss_ext_discount_amt#61, ss_ext_sales_price#62, ss_ext_wholesale_cost#63, ss_ext_list_price#64, d_year#77]\n   +- Join Inner, (c_customer_sk#30 = ss_customer_sk#50)\n      :- Project [ss_customer_sk#50, ss_ext_discount_amt#61, ss_ext_sales_price#62, ss_ext_wholesale_cost#63, ss_ext_list_price#64, d_year#77]\n      :  +- Join Inner, (ss_sold_date_sk#70 = d_date_sk#71)\n      :     :- Project [ss_customer_sk#50, ss_ext_discount_amt#61, ss_ext_sales_price#62, ss_ext_wholesale_cost#63, ss_ext_list_price#64, ss_sold_date_sk#70]\n      :     :  +- Filter ((isnotnull(ss_customer_sk#50) AND isnotnull(ss_sold_date_sk#70)) AND dynamicpruning#5494 [ss_sold_date_sk#70])\n      :     :     :  +- Project [d_date_sk#71, d_year#77]\n      :     :     :     +- Filter ((isnotnull(d_year#77) AND (d_year#77 = 2001)) AND isnotnull(d_date_sk#71))\n      :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#71,d_date_id#72,d_date#73,d_month_seq#74,d_week_seq#75,d_quarter_seq#76,d_year#77,d_dow#78,d_moy#79,d_dom#80,d_qoy#81,d_fy_year#82,d_fy_quarter_seq#83,d_fy_week_seq#84,d_day_name#85,d_quarter_name#86,d_holiday#87,d_weekend#88,d_following_holiday#89,d_first_dom#90,d_last_dom#91,d_same_day_ly#92,d_same_day_lq#93,d_current_day#94,... 4 more fields] parquet\n      :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#48,ss_item_sk#49,ss_customer_sk#50,ss_cdemo_sk#51,ss_hdemo_sk#52,ss_addr_sk#53,ss_store_sk#54,ss_promo_sk#55,ss_ticket_number#56L,ss_quantity#57,ss_wholesale_cost#58,ss_list_price#59,ss_sales_price#60,ss_ext_discount_amt#61,ss_ext_sales_price#62,ss_ext_wholesale_cost#63,ss_ext_list_price#64,ss_ext_tax#65,ss_coupon_amt#66,ss_net_paid#67,ss_net_paid_inc_tax#68,ss_net_profit#69,ss_sold_date_sk#70] parquet\n      :     +- Project [d_date_sk#71, d_year#77]\n      :        +- Filter ((isnotnull(d_year#77) AND (d_year#77 = 2001)) AND isnotnull(d_date_sk#71))\n      :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#71,d_date_id#72,d_date#73,d_month_seq#74,d_week_seq#75,d_quarter_seq#76,d_year#77,d_dow#78,d_moy#79,d_dom#80,d_qoy#81,d_fy_year#82,d_fy_quarter_seq#83,d_fy_week_seq#84,d_day_name#85,d_quarter_name#86,d_holiday#87,d_weekend#88,d_following_holiday#89,d_first_dom#90,d_last_dom#91,d_same_day_ly#92,d_same_day_lq#93,d_current_day#94,... 4 more fields] parquet\n      +- Project [c_customer_sk#30, c_customer_id#31, c_first_name#38, c_last_name#39, c_preferred_cust_flag#40, c_birth_country#44, c_login#45, c_email_address#46]\n         +- Filter (isnotnull(c_customer_sk#30) AND isnotnull(c_customer_id#31))\n            +- Relation spark_catalog.tpcds_100.customer[c_customer_sk#30,c_customer_id#31,c_current_cdemo_sk#32,c_current_hdemo_sk#33,c_current_addr_sk#34,c_first_shipto_date_sk#35,c_first_sales_date_sk#36,c_salutation#37,c_first_name#38,c_last_name#39,c_preferred_cust_flag#40,c_birth_day#41,c_birth_month#42,c_birth_year#43,c_birth_country#44,c_login#45,c_email_address#46,c_last_review_date#47] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "4" : {
            "sign" : -873666438,
            "className" : "org.apache.spark.sql.execution.adaptive.ShuffleQueryStageExec",
            "sizeInBytes" : 2991130072,
            "rowCount" : 53413037,
            "isRuntime" : true,
            "predicate" : " (unknown) ShuffleQueryStage Output [6]: [ss_customer_sk#50, ss_ext_discount_amt#61, ss_ext_sales_price#62, ss_ext_wholesale_cost#63, ss_ext_list_price#64, d_year#77] Arguments: 21 "
          },
          "5" : {
            "sign" : -2032132841,
            "className" : "org.apache.spark.sql.execution.SortExec",
            "sizeInBytes" : -1,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Input [8]: [c_customer_sk#30, c_customer_id#31, c_first_name#38, c_last_name#39, c_preferred_cust_flag#40, c_birth_country#44, c_login#45, c_email_address#46] Arguments: [c_customer_sk#30 ASC NULLS FIRST], false, 0 "
          },
          "6" : {
            "sign" : 269404266,
            "className" : "org.apache.spark.sql.execution.adaptive.ShuffleQueryStageExec",
            "sizeInBytes" : 306068840,
            "rowCount" : 2000000,
            "isRuntime" : true,
            "predicate" : " (unknown) ShuffleQueryStage Output [8]: [c_customer_sk#30, c_customer_id#31, c_first_name#38, c_last_name#39, c_preferred_cust_flag#40, c_birth_country#44, c_login#45, c_email_address#46] Arguments: 1 "
          },
          "1" : {
            "sign" : -607262308,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 59134449465,
            "rowCount" : 275043951,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [12]: [c_customer_id#31, c_first_name#38, c_last_name#39, c_preferred_cust_flag#40, c_birth_country#44, c_login#45, c_email_address#46, ss_ext_discount_amt#61, ss_ext_sales_price#62, ss_ext_wholesale_cost#63, ss_ext_list_price#64, d_year#77] Input [14]: [ss_customer_sk#50, ss_ext_discount_amt#61, ss_ext_sales_price#62, ss_ext_wholesale_cost#63, ss_ext_list_price#64, d_year#77, c_customer_sk#30, c_customer_id#31, c_first_name#38, c_last_name#39, c_preferred_cust_flag#40, c_birth_country#44, c_login#45, c_email_address#46] "
          },
          "0" : {
            "sign" : -1225908092,
            "className" : "org.apache.spark.sql.execution.aggregate.HashAggregateExec",
            "sizeInBytes" : 14302285452,
            "rowCount" : 275043951,
            "isRuntime" : false,
            "predicate" : " (unknown) HashAggregate Input [12]: [c_customer_id#31, c_first_name#38, c_last_name#39, c_preferred_cust_flag#40, c_birth_country#44, c_login#45, c_email_address#46, ss_ext_discount_amt#61, ss_ext_sales_price#62, ss_ext_wholesale_cost#63, ss_ext_list_price#64, d_year#77] Keys [8]: [c_customer_id#31, c_first_name#38, c_last_name#39, c_preferred_cust_flag#40, c_birth_country#44, c_login#45, c_email_address#46, d_year#77] Functions [1]: [partial_sum(((((ss_ext_list_price#64 - ss_ext_wholesale_cost#63) - ss_ext_discount_amt#61) + ss_ext_sales_price#62) / 2))] Aggregate Attributes [2]: [sum#5500, isEmpty#5501] Results [10]: [c_customer_id#31, c_first_name#38, c_last_name#39, c_preferred_cust_flag#40, c_birth_country#44, c_login#45, c_email_address#46, d_year#77, sum#5502, isEmpty#5503] "
          },
          "2" : {
            "sign" : 27757249,
            "className" : "org.apache.spark.sql.execution.joins.SortMergeJoinExec",
            "sizeInBytes" : 61334801073,
            "rowCount" : 275043951,
            "isRuntime" : false,
            "predicate" : " (unknown) SortMergeJoin Left keys [1]: [ss_customer_sk#50] Right keys [1]: [c_customer_sk#30] Join type: Inner Join condition: None "
          },
          "3" : {
            "sign" : -801439886,
            "className" : "org.apache.spark.sql.execution.SortExec",
            "sizeInBytes" : -1,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Input [6]: [ss_customer_sk#50, ss_ext_discount_amt#61, ss_ext_sales_price#62, ss_ext_wholesale_cost#63, ss_ext_list_price#64, d_year#77] Arguments: [ss_customer_sk#50 ASC NULLS FIRST], false, 0 "
          }
        },
        "links" : [ {
          "fromId" : 4,
          "fromName" : "ShuffleQueryStage",
          "toId" : 3,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Sort",
          "toId" : 2,
          "toName" : "SortMergeJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "ShuffleQueryStage",
          "toId" : 5,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Sort",
          "toId" : 2,
          "toName" : "SortMergeJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "SortMergeJoin",
          "toId" : 1,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Project",
          "toId" : 0,
          "toName" : "HashAggregate",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "HashAggregate(keys=[c_customer_id#31, c_first_name#38, c_last_name#39, c_preferred_cust_flag#40, c_birth_country#44, c_login#45, c_email_address#46, d_year#77], functions=[partial_sum(((((ss_ext_list_price#64 - ss_ext_wholesale_cost#63) - ss_ext_discount_amt#61) + ss_ext_sales_price#62) / 2))], output=[c_customer_id#31, c_first_name#38, c_last_name#39, c_preferred_cust_flag#40, c_birth_country#44, c_login#45, c_email_address#46, d_year#77, sum#5502, isEmpty#5503])\n+- Project [c_customer_id#31, c_first_name#38, c_last_name#39, c_preferred_cust_flag#40, c_birth_country#44, c_login#45, c_email_address#46, ss_ext_discount_amt#61, ss_ext_sales_price#62, ss_ext_wholesale_cost#63, ss_ext_list_price#64, d_year#77]\n   +- SortMergeJoin [ss_customer_sk#50], [c_customer_sk#30], Inner\n      :- Sort [ss_customer_sk#50 ASC NULLS FIRST], false, 0\n      :  +- ShuffleQueryStage 21\n      :     +- Exchange hashpartitioning(ss_customer_sk#50, 200), ENSURE_REQUIREMENTS, [plan_id=1605]\n      :        +- *(13) Project [ss_customer_sk#50, ss_ext_discount_amt#61, ss_ext_sales_price#62, ss_ext_wholesale_cost#63, ss_ext_list_price#64, d_year#77]\n      :           +- *(13) BroadcastHashJoin [ss_sold_date_sk#70], [d_date_sk#71], Inner, BuildRight, false\n      :              :- *(13) Filter isnotnull(ss_customer_sk#50)\n      :              :  +- *(13) ColumnarToRow\n      :              :     +- FileScan parquet spark_catalog.tpcds_100.store_sales[ss_customer_sk#50,ss_ext_discount_amt#61,ss_ext_sales_price#62,ss_ext_wholesale_cost#63,ss_ext_list_price#64,ss_sold_date_sk#70] Batched: true, DataFilters: [isnotnull(ss_customer_sk#50)], Format: Parquet, Location: InMemoryFileIndex(1823 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/store_..., PartitionFilters: [isnotnull(ss_sold_date_sk#70), dynamicpruningexpression(ss_sold_date_sk#70 IN dynamicpruning#5494)], PushedFilters: [IsNotNull(ss_customer_sk)], ReadSchema: struct<ss_customer_sk:int,ss_ext_discount_amt:decimal(7,2),ss_ext_sales_price:decimal(7,2),ss_ext...\n      :              :           +- SubqueryBroadcast dynamicpruning#5494, 0, [d_date_sk#71], [id=#1579]\n      :              :              +- AdaptiveSparkPlan isFinalPlan=true\n                                       +- == Final Plan ==\n                                          BroadcastQueryStage 1\n                                          +- ReusedExchange [d_date_sk#71, d_year#77], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=662]\n                                       +- == Initial Plan ==\n                                          BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=1576]\n                                          +- Filter ((isnotnull(d_year#77) AND (d_year#77 = 2001)) AND isnotnull(d_date_sk#71))\n                                             +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#71,d_year#77] Batched: true, DataFilters: [isnotnull(d_year#77), (d_year#77 = 2001), isnotnull(d_date_sk#71)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), EqualTo(d_year,2001), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>\n      :              +- BroadcastQueryStage 0\n      :                 +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=662]\n      :                    +- *(1) Filter ((isnotnull(d_year#77) AND (d_year#77 = 2001)) AND isnotnull(d_date_sk#71))\n      :                       +- *(1) ColumnarToRow\n      :                          +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#71,d_year#77] Batched: true, DataFilters: [isnotnull(d_year#77), (d_year#77 = 2001), isnotnull(d_date_sk#71)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), EqualTo(d_year,2001), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>\n      +- Sort [c_customer_sk#30 ASC NULLS FIRST], false, 0\n         +- ShuffleQueryStage 1\n            +- Exchange hashpartitioning(c_customer_sk#30, 200), ENSURE_REQUIREMENTS, [plan_id=681]\n               +- *(2) Filter (isnotnull(c_customer_sk#30) AND isnotnull(c_customer_id#31))\n                  +- *(2) ColumnarToRow\n                     +- FileScan parquet spark_catalog.tpcds_100.customer[c_customer_sk#30,c_customer_id#31,c_first_name#38,c_last_name#39,c_preferred_cust_flag#40,c_birth_country#44,c_login#45,c_email_address#46] Batched: true, DataFilters: [isnotnull(c_customer_sk#30), isnotnull(c_customer_id#31)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/customer], PartitionFilters: [], PushedFilters: [IsNotNull(c_customer_sk), IsNotNull(c_customer_id)], ReadSchema: struct<c_customer_sk:int,c_customer_id:string,c_first_name:string,c_last_name:string,c_preferred_...\n"
      },
      "IM" : {
        "inputSizeInBytes" : 3297198912,
        "inputRowCount" : 55413037
      },
      "InitialPartitionNum" : 200,
      "PD" : {
        "1" : [ 5681528, 5629845, 5556823, 5648082, 5637472, 5635416, 5635322, 5571181, 5647249, 5641782, 5749608, 5688568, 5696574, 5650128, 5598644, 5612129, 5670396, 5712829, 5661016, 5637920, 5670229, 5721733, 5662290, 5714384, 5708441, 5661495, 5633028, 5708855, 5631456, 5591877, 5512583, 5693048, 5712473, 5565610, 5674085, 5683521, 5614636, 5564096, 5534730, 5611375, 5586591, 5602036, 5504139, 5665069, 5696459, 5555652, 5789529, 5609503, 5688735, 5681295, 5645862, 5674013, 5606283, 5636426, 5578642, 5621662, 5561949, 5544223, 5556250, 5583631, 5552964, 5707649, 5571886, 5604477, 5542003, 5775618, 5666260, 5598349, 5569823, 5710845, 5655122, 5510050, 5566630, 5591502, 5652854, 5686581, 5692475, 5704180, 5732314, 5621909, 5576495, 5775747, 5681327, 5542076, 5656250, 5604023, 5549380, 5609982, 5695779, 5739619, 5578040, 5626597, 5722431, 5611299, 5625959, 5696881, 5489358, 5565397, 5622541, 5551356, 5474305, 5702558, 5599010, 5539651, 5589296, 5732107, 5713124, 5806078, 5607641, 5643015, 5531951, 5635482, 5657161, 5675228, 5695075, 5521324, 5547855, 5602355, 5590450, 5596750, 5583521, 5576717, 5692959, 5696737, 5637923, 5684942, 5590828, 5565902, 5641535, 5514298, 5691392, 5636114, 5655195, 5613389, 5606283, 5540270, 5637128, 5712936, 5606283, 5700568, 5647095, 5538937, 5661739, 5696881, 5562922, 5746892, 5786657, 5626156, 5606283, 5732975, 5706173, 5605648, 5801854, 5723376, 5743134, 5642417, 5593930, 5717937, 5706802, 5538940, 5533091, 5583969, 5675249, 5598843, 5524350, 5634483, 5610142, 5663622, 5672721, 5480439, 5630015, 5692954, 5660481, 5682820, 5651042, 5483145, 5652688, 5498177, 5663986, 5587424, 5533091, 5666968, 5552510, 5641963, 5799413, 5691242, 5826114, 5762806, 5557455, 5629623, 5651849, 5611556, 5563523, 5469485, 5657342, 5737178, 5554103, 5613462, 5717596, 5563182 ],
        "0" : [ 830145, 830145, 754677, 830145, 830145, 830145, 754677, 754677, 830145, 830145, 830145, 754677, 830145, 830145, 754677, 830145, 830145, 830145, 754677, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 754677, 830145, 830145, 754677, 830145, 830145, 754677, 754677, 754677, 754677, 754677, 830145, 754677, 830145, 830145, 754677, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 754677, 754677, 754677, 830145, 830145, 830145, 754677, 830145, 754677, 830145, 830145, 754677, 830145, 830145, 830145, 754677, 754677, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 754677, 754677, 754677, 754677, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 754677, 754677, 830145, 754677, 754677, 830145, 830145, 754677, 830145, 830145, 830145, 830145, 754677, 754677, 830145, 830145, 830145, 754677, 830145, 830145, 754677, 754677, 754677, 830145, 754677, 830145, 830145, 754677, 830145, 830145, 754677, 754677, 754677, 754677, 830145, 830145, 830145, 830145, 754677, 754677, 830145, 830145, 830145, 830145, 754677, 754677, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 754677, 754677, 830145, 830145, 754677, 830145, 830145, 830145, 830145, 830145, 754677, 830145, 830145, 830145, 830145, 830145, 754677, 830145, 754677, 830145, 754677, 754677, 830145, 830145, 754677, 830145, 830145, 830145, 830145, 754677, 830145, 830145, 830145, 754677, 754677, 830145, 830145, 830145, 830145, 830145, 754677 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 16,
        "FinishedTasksNum" : 8,
        "FinishedTasksTotalTimeInMs" : 6441.0,
        "FinishedTasksDistributionInMs" : [ 746.0, 793.0, 797.0, 840.0, 852.0 ]
      },
      "QueryStageOptimizationId" : 9,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 14 ],
      "Objectives" : {
        "DurationInMs" : 16056,
        "TotalTasksDurationInMs" : 108498,
        "IOBytes" : {
          "Total" : 1381417388,
          "Details" : {
            "IR" : 0,
            "IW" : 0,
            "SR" : 1225539720,
            "SW" : 155877668
          }
        }
      }
    },
    "13" : {
      "QSLogical" : {
        "operators" : {
          "0" : {
            "sign" : -1206636152,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 7435110696,
                "rowCount" : 142982898
              },
              "compileTime" : {
                "sizeInBytes" : 7435110696,
                "rowCount" : 142982898
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [c_customer_id#4747, c_first_name#4754, c_last_name#4755, c_preferred_cust_flag#4756, c_birth_country#4760, c_login#4761, c_email_address#4762, d_year#4804], [c_customer_id#4747 AS customer_id#2970, sum(((((cs_ext_list_price#4788 - cs_ext_wholesale_cost#4787) - cs_ext_discount_amt#4785) + cs_ext_sales_price#4786) / 2)) AS year_total#2978] "
          },
          "1" : {
            "sign" : -429448165,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 30741323070,
                "rowCount" : 142982898
              },
              "compileTime" : {
                "sizeInBytes" : 30741323070,
                "rowCount" : 142982898
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_customer_id#4747, c_first_name#4754, c_last_name#4755, c_preferred_cust_flag#4756, c_birth_country#4760, c_login#4761, c_email_address#4762, cs_ext_discount_amt#4785, cs_ext_sales_price#4786, cs_ext_wholesale_cost#4787, cs_ext_list_price#4788, d_year#4804] "
          },
          "2" : {
            "sign" : 1675417043,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 31885186254,
                "rowCount" : 142982898
              },
              "compileTime" : {
                "sizeInBytes" : 31885186254,
                "rowCount" : 142982898
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (c_customer_sk#4746 = cs_bill_customer_sk#4766) "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "Join",
          "toId" : 1,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Project",
          "toId" : 0,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Aggregate [c_customer_id#4747, c_first_name#4754, c_last_name#4755, c_preferred_cust_flag#4756, c_birth_country#4760, c_login#4761, c_email_address#4762, d_year#4804], [c_customer_id#4747 AS customer_id#2970, sum(((((cs_ext_list_price#4788 - cs_ext_wholesale_cost#4787) - cs_ext_discount_amt#4785) + cs_ext_sales_price#4786) / 2)) AS year_total#2978]\n+- Project [c_customer_id#4747, c_first_name#4754, c_last_name#4755, c_preferred_cust_flag#4756, c_birth_country#4760, c_login#4761, c_email_address#4762, cs_ext_discount_amt#4785, cs_ext_sales_price#4786, cs_ext_wholesale_cost#4787, cs_ext_list_price#4788, d_year#4804]\n   +- Join Inner, (c_customer_sk#4746 = cs_bill_customer_sk#4766)\n      :- Project [cs_bill_customer_sk#4766, cs_ext_discount_amt#4785, cs_ext_sales_price#4786, cs_ext_wholesale_cost#4787, cs_ext_list_price#4788, d_year#4804]\n      :  +- Join Inner, (cs_sold_date_sk#4797 = d_date_sk#4798)\n      :     :- Project [cs_bill_customer_sk#4766, cs_ext_discount_amt#4785, cs_ext_sales_price#4786, cs_ext_wholesale_cost#4787, cs_ext_list_price#4788, cs_sold_date_sk#4797]\n      :     :  +- Filter ((isnotnull(cs_bill_customer_sk#4766) AND isnotnull(cs_sold_date_sk#4797)) AND dynamicpruning#5497 [cs_sold_date_sk#4797])\n      :     :     :  +- Project [d_date_sk#4798, d_year#4804]\n      :     :     :     +- Filter ((isnotnull(d_year#4804) AND (d_year#4804 = 2002)) AND isnotnull(d_date_sk#4798))\n      :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#4798,d_date_id#4799,d_date#4800,d_month_seq#4801,d_week_seq#4802,d_quarter_seq#4803,d_year#4804,d_dow#4805,d_moy#4806,d_dom#4807,d_qoy#4808,d_fy_year#4809,d_fy_quarter_seq#4810,d_fy_week_seq#4811,d_day_name#4812,d_quarter_name#4813,d_holiday#4814,d_weekend#4815,d_following_holiday#4816,d_first_dom#4817,d_last_dom#4818,d_same_day_ly#4819,d_same_day_lq#4820,d_current_day#4821,... 4 more fields] parquet\n      :     :     +- Relation spark_catalog.tpcds_100.catalog_sales[cs_sold_time_sk#4764,cs_ship_date_sk#4765,cs_bill_customer_sk#4766,cs_bill_cdemo_sk#4767,cs_bill_hdemo_sk#4768,cs_bill_addr_sk#4769,cs_ship_customer_sk#4770,cs_ship_cdemo_sk#4771,cs_ship_hdemo_sk#4772,cs_ship_addr_sk#4773,cs_call_center_sk#4774,cs_catalog_page_sk#4775,cs_ship_mode_sk#4776,cs_warehouse_sk#4777,cs_item_sk#4778,cs_promo_sk#4779,cs_order_number#4780L,cs_quantity#4781,cs_wholesale_cost#4782,cs_list_price#4783,cs_sales_price#4784,cs_ext_discount_amt#4785,cs_ext_sales_price#4786,cs_ext_wholesale_cost#4787,... 10 more fields] parquet\n      :     +- Project [d_date_sk#4798, d_year#4804]\n      :        +- Filter ((isnotnull(d_year#4804) AND (d_year#4804 = 2002)) AND isnotnull(d_date_sk#4798))\n      :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#4798,d_date_id#4799,d_date#4800,d_month_seq#4801,d_week_seq#4802,d_quarter_seq#4803,d_year#4804,d_dow#4805,d_moy#4806,d_dom#4807,d_qoy#4808,d_fy_year#4809,d_fy_quarter_seq#4810,d_fy_week_seq#4811,d_day_name#4812,d_quarter_name#4813,d_holiday#4814,d_weekend#4815,d_following_holiday#4816,d_first_dom#4817,d_last_dom#4818,d_same_day_ly#4819,d_same_day_lq#4820,d_current_day#4821,... 4 more fields] parquet\n      +- Project [c_customer_sk#4746, c_customer_id#4747, c_first_name#4754, c_last_name#4755, c_preferred_cust_flag#4756, c_birth_country#4760, c_login#4761, c_email_address#4762]\n         +- Filter (isnotnull(c_customer_sk#4746) AND isnotnull(c_customer_id#4747))\n            +- Relation spark_catalog.tpcds_100.customer[c_customer_sk#4746,c_customer_id#4747,c_current_cdemo_sk#4748,c_current_hdemo_sk#4749,c_current_addr_sk#4750,c_first_shipto_date_sk#4751,c_first_sales_date_sk#4752,c_salutation#4753,c_first_name#4754,c_last_name#4755,c_preferred_cust_flag#4756,c_birth_day#4757,c_birth_month#4758,c_birth_year#4759,c_birth_country#4760,c_login#4761,c_email_address#4762,c_last_review_date#4763] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "4" : {
            "sign" : 1032567387,
            "className" : "org.apache.spark.sql.execution.adaptive.ShuffleQueryStageExec",
            "sizeInBytes" : 1591755984,
            "rowCount" : 28424214,
            "isRuntime" : true,
            "predicate" : " (unknown) ShuffleQueryStage Output [6]: [cs_bill_customer_sk#4766, cs_ext_discount_amt#4785, cs_ext_sales_price#4786, cs_ext_wholesale_cost#4787, cs_ext_list_price#4788, d_year#4804] Arguments: 25 "
          },
          "5" : {
            "sign" : -1641142784,
            "className" : "org.apache.spark.sql.execution.SortExec",
            "sizeInBytes" : -1,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Input [8]: [c_customer_sk#4746, c_customer_id#4747, c_first_name#4754, c_last_name#4755, c_preferred_cust_flag#4756, c_birth_country#4760, c_login#4761, c_email_address#4762] Arguments: [c_customer_sk#4746 ASC NULLS FIRST], false, 0 "
          },
          "6" : {
            "sign" : 1666909667,
            "className" : "org.apache.spark.sql.execution.adaptive.ShuffleQueryStageExec",
            "sizeInBytes" : 306068840,
            "rowCount" : 2000000,
            "isRuntime" : true,
            "predicate" : " (unknown) ShuffleQueryStage Output [8]: [c_customer_sk#4746, c_customer_id#4747, c_first_name#4754, c_last_name#4755, c_preferred_cust_flag#4756, c_birth_country#4760, c_login#4761, c_email_address#4762] Arguments: 12 "
          },
          "1" : {
            "sign" : 118068131,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 30741323070,
            "rowCount" : 142982898,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [12]: [c_customer_id#4747, c_first_name#4754, c_last_name#4755, c_preferred_cust_flag#4756, c_birth_country#4760, c_login#4761, c_email_address#4762, cs_ext_discount_amt#4785, cs_ext_sales_price#4786, cs_ext_wholesale_cost#4787, cs_ext_list_price#4788, d_year#4804] Input [14]: [cs_bill_customer_sk#4766, cs_ext_discount_amt#4785, cs_ext_sales_price#4786, cs_ext_wholesale_cost#4787, cs_ext_list_price#4788, d_year#4804, c_customer_sk#4746, c_customer_id#4747, c_first_name#4754, c_last_name#4755, c_preferred_cust_flag#4756, c_birth_country#4760, c_login#4761, c_email_address#4762] "
          },
          "0" : {
            "sign" : 574292449,
            "className" : "org.apache.spark.sql.execution.aggregate.HashAggregateExec",
            "sizeInBytes" : 7435110696,
            "rowCount" : 142982898,
            "isRuntime" : false,
            "predicate" : " (unknown) HashAggregate Input [12]: [c_customer_id#4747, c_first_name#4754, c_last_name#4755, c_preferred_cust_flag#4756, c_birth_country#4760, c_login#4761, c_email_address#4762, cs_ext_discount_amt#4785, cs_ext_sales_price#4786, cs_ext_wholesale_cost#4787, cs_ext_list_price#4788, d_year#4804] Keys [8]: [c_customer_id#4747, c_first_name#4754, c_last_name#4755, c_preferred_cust_flag#4756, c_birth_country#4760, c_login#4761, c_email_address#4762, d_year#4804] Functions [1]: [partial_sum(((((cs_ext_list_price#4788 - cs_ext_wholesale_cost#4787) - cs_ext_discount_amt#4785) + cs_ext_sales_price#4786) / 2))] Aggregate Attributes [2]: [sum#5512, isEmpty#5513] Results [10]: [c_customer_id#4747, c_first_name#4754, c_last_name#4755, c_preferred_cust_flag#4756, c_birth_country#4760, c_login#4761, c_email_address#4762, d_year#4804, sum#5514, isEmpty#5515] "
          },
          "2" : {
            "sign" : 1082607941,
            "className" : "org.apache.spark.sql.execution.joins.SortMergeJoinExec",
            "sizeInBytes" : 31885186254,
            "rowCount" : 142982898,
            "isRuntime" : false,
            "predicate" : " (unknown) SortMergeJoin Left keys [1]: [cs_bill_customer_sk#4766] Right keys [1]: [c_customer_sk#4746] Join type: Inner Join condition: None "
          },
          "3" : {
            "sign" : 1181926775,
            "className" : "org.apache.spark.sql.execution.SortExec",
            "sizeInBytes" : -1,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Input [6]: [cs_bill_customer_sk#4766, cs_ext_discount_amt#4785, cs_ext_sales_price#4786, cs_ext_wholesale_cost#4787, cs_ext_list_price#4788, d_year#4804] Arguments: [cs_bill_customer_sk#4766 ASC NULLS FIRST], false, 0 "
          }
        },
        "links" : [ {
          "fromId" : 4,
          "fromName" : "ShuffleQueryStage",
          "toId" : 3,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Sort",
          "toId" : 2,
          "toName" : "SortMergeJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "ShuffleQueryStage",
          "toId" : 5,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Sort",
          "toId" : 2,
          "toName" : "SortMergeJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "SortMergeJoin",
          "toId" : 1,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Project",
          "toId" : 0,
          "toName" : "HashAggregate",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "HashAggregate(keys=[c_customer_id#4747, c_first_name#4754, c_last_name#4755, c_preferred_cust_flag#4756, c_birth_country#4760, c_login#4761, c_email_address#4762, d_year#4804], functions=[partial_sum(((((cs_ext_list_price#4788 - cs_ext_wholesale_cost#4787) - cs_ext_discount_amt#4785) + cs_ext_sales_price#4786) / 2))], output=[c_customer_id#4747, c_first_name#4754, c_last_name#4755, c_preferred_cust_flag#4756, c_birth_country#4760, c_login#4761, c_email_address#4762, d_year#4804, sum#5514, isEmpty#5515])\n+- Project [c_customer_id#4747, c_first_name#4754, c_last_name#4755, c_preferred_cust_flag#4756, c_birth_country#4760, c_login#4761, c_email_address#4762, cs_ext_discount_amt#4785, cs_ext_sales_price#4786, cs_ext_wholesale_cost#4787, cs_ext_list_price#4788, d_year#4804]\n   +- SortMergeJoin [cs_bill_customer_sk#4766], [c_customer_sk#4746], Inner\n      :- Sort [cs_bill_customer_sk#4766 ASC NULLS FIRST], false, 0\n      :  +- ShuffleQueryStage 25\n      :     +- Exchange hashpartitioning(cs_bill_customer_sk#4766, 200), ENSURE_REQUIREMENTS, [plan_id=2320]\n      :        +- *(17) Project [cs_bill_customer_sk#4766, cs_ext_discount_amt#4785, cs_ext_sales_price#4786, cs_ext_wholesale_cost#4787, cs_ext_list_price#4788, d_year#4804]\n      :           +- *(17) BroadcastHashJoin [cs_sold_date_sk#4797], [d_date_sk#4798], Inner, BuildRight, false\n      :              :- *(17) Filter isnotnull(cs_bill_customer_sk#4766)\n      :              :  +- *(17) ColumnarToRow\n      :              :     +- FileScan parquet spark_catalog.tpcds_100.catalog_sales[cs_bill_customer_sk#4766,cs_ext_discount_amt#4785,cs_ext_sales_price#4786,cs_ext_wholesale_cost#4787,cs_ext_list_price#4788,cs_sold_date_sk#4797] Batched: true, DataFilters: [isnotnull(cs_bill_customer_sk#4766)], Format: Parquet, Location: InMemoryFileIndex(1836 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/catalo..., PartitionFilters: [isnotnull(cs_sold_date_sk#4797), dynamicpruningexpression(cs_sold_date_sk#4797 IN dynamicpruning..., PushedFilters: [IsNotNull(cs_bill_customer_sk)], ReadSchema: struct<cs_bill_customer_sk:int,cs_ext_discount_amt:decimal(7,2),cs_ext_sales_price:decimal(7,2),c...\n      :              :           +- ReusedSubquery SubqueryBroadcast dynamicpruning#5495, 0, [d_date_sk#4240], [id=#2219]\n      :              +- BroadcastQueryStage 10\n      :                 +- ReusedExchange [d_date_sk#4798, d_year#4804], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=746]\n      +- Sort [c_customer_sk#4746 ASC NULLS FIRST], false, 0\n         +- ShuffleQueryStage 12\n            +- ReusedExchange [c_customer_sk#4746, c_customer_id#4747, c_first_name#4754, c_last_name#4755, c_preferred_cust_flag#4756, c_birth_country#4760, c_login#4761, c_email_address#4762], Exchange hashpartitioning(c_customer_sk#30, 200), ENSURE_REQUIREMENTS, [plan_id=681]\n"
      },
      "IM" : {
        "inputSizeInBytes" : 1897824824,
        "inputRowCount" : 30424214
      },
      "InitialPartitionNum" : 200,
      "PD" : {
        "5" : [ 3539793, 3535490, 3478735, 3569889, 3448726, 3553156, 3476661, 3380948, 3465910, 3522401, 3543173, 3458962, 3446796, 3534096, 3520080, 3485501, 3594087, 3587106, 3460372, 3446796, 3438457, 3497664, 3521416, 3568030, 3544294, 3530618, 3418597, 3521334, 3537275, 3458203, 3415919, 3482858, 3550848, 3421011, 3479611, 3492128, 3501431, 3463050, 3443729, 3441111, 3466142, 3492381, 3398130, 3506031, 3542008, 3428771, 3524628, 3500737, 3456763, 3494107, 3584863, 3527439, 3485109, 3499504, 3509702, 3426528, 3521024, 3437145, 3488628, 3414743, 3483215, 3566845, 3509577, 3566141, 3457092, 3512647, 3443726, 3450710, 3496608, 3531614, 3538206, 3476231, 3431816, 3525741, 3575327, 3495857, 3545397, 3521024, 3512130, 3476963, 3557584, 3598393, 3542939, 3426934, 3458660, 3488484, 3429097, 3519971, 3537275, 3505859, 3516449, 3416063, 3479358, 3467625, 3477088, 3579694, 3447226, 3399603, 3480594, 3447289, 3435153, 3475907, 3494107, 3449874, 3457299, 3499735, 3574187, 3514775, 3441832, 3448364, 3493843, 3456605, 3558101, 3458121, 3496641, 3513771, 3480863, 3482858, 3479840, 3506754, 3538067, 3499501, 3614682, 3448813, 3464680, 3617722, 3432295, 3460799, 3494341, 3453426, 3533473, 3566941, 3537509, 3476661, 3469963, 3458959, 3560118, 3535027, 3469849, 3530953, 3490950, 3475447, 3543146, 3503804, 3523272, 3536931, 3587999, 3503058, 3509468, 3478248, 3570550, 3489303, 3578266, 3506629, 3498783, 3494771, 3493413, 3484116, 3494866, 3397918, 3499711, 3461605, 3578925, 3432208, 3528005, 3500737, 3405718, 3604149, 3519631, 3482768, 3560118, 3548069, 3505165, 3536845, 3524298, 3487371, 3552209, 3430760, 3554200, 3508774, 3473014, 3494270, 3461300, 3523272, 3585250, 3564655, 3542743, 3598823, 3469160, 3621576, 3523024, 3483642, 3456997, 3444997, 3565352, 3624975, 3534828, 3413755, 3534940, 3451279 ],
        "0" : [ 830145, 830145, 754677, 830145, 830145, 830145, 754677, 754677, 830145, 830145, 830145, 754677, 830145, 830145, 754677, 830145, 830145, 830145, 754677, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 754677, 830145, 830145, 754677, 830145, 830145, 754677, 754677, 754677, 754677, 754677, 830145, 754677, 830145, 830145, 754677, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 754677, 754677, 754677, 830145, 830145, 830145, 754677, 830145, 754677, 830145, 830145, 754677, 830145, 830145, 830145, 754677, 754677, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 754677, 754677, 754677, 754677, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 754677, 754677, 830145, 754677, 754677, 830145, 830145, 754677, 830145, 830145, 830145, 830145, 754677, 754677, 830145, 830145, 830145, 754677, 830145, 830145, 754677, 754677, 754677, 830145, 754677, 830145, 830145, 754677, 830145, 830145, 754677, 754677, 754677, 754677, 830145, 830145, 830145, 830145, 754677, 754677, 830145, 830145, 830145, 830145, 754677, 754677, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 754677, 754677, 830145, 830145, 754677, 830145, 830145, 830145, 830145, 830145, 754677, 830145, 830145, 830145, 830145, 830145, 754677, 830145, 754677, 830145, 754677, 754677, 830145, 830145, 754677, 830145, 830145, 830145, 830145, 754677, 830145, 830145, 830145, 754677, 754677, 830145, 830145, 830145, 830145, 830145, 754677 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 16,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 13,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 22 ],
      "Objectives" : {
        "DurationInMs" : 35253,
        "TotalTasksDurationInMs" : 89116,
        "IOBytes" : {
          "Total" : 956187245,
          "Details" : {
            "IR" : 0,
            "IW" : 0,
            "SR" : 818926975,
            "SW" : 137260270
          }
        }
      }
    },
    "16" : {
      "QSLogical" : {
        "operators" : {
          "0" : {
            "sign" : -1687410060,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 3761782752,
                "rowCount" : 72341976
              },
              "compileTime" : {
                "sizeInBytes" : 3761782752,
                "rowCount" : 72341976
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(year_total#2849) AND (year_total#2849 > 0.000000)) "
          }
        },
        "links" : [ ],
        "rawPlan" : "Filter (isnotnull(year_total#2849) AND (year_total#2849 > 0.000000))\n+- Aggregate [c_customer_id#5066, c_first_name#5073, c_last_name#5074, c_preferred_cust_flag#5075, c_birth_country#5079, c_login#5080, c_email_address#5081, d_year#5123], [c_customer_id#5066 AS customer_id#2841, sum(((((ws_ext_list_price#5107 - ws_ext_wholesale_cost#5106) - ws_ext_discount_amt#5104) + ws_ext_sales_price#5105) / 2)) AS year_total#2849]\n   +- Project [c_customer_id#5066, c_first_name#5073, c_last_name#5074, c_preferred_cust_flag#5075, c_birth_country#5079, c_login#5080, c_email_address#5081, ws_ext_discount_amt#5104, ws_ext_sales_price#5105, ws_ext_wholesale_cost#5106, ws_ext_list_price#5107, d_year#5123]\n      +- Join Inner, (c_customer_sk#5065 = ws_bill_customer_sk#5086)\n         :- Project [ws_bill_customer_sk#5086, ws_ext_discount_amt#5104, ws_ext_sales_price#5105, ws_ext_wholesale_cost#5106, ws_ext_list_price#5107, d_year#5123]\n         :  +- Join Inner, (ws_sold_date_sk#5116 = d_date_sk#5117)\n         :     :- Project [ws_bill_customer_sk#5086, ws_ext_discount_amt#5104, ws_ext_sales_price#5105, ws_ext_wholesale_cost#5106, ws_ext_list_price#5107, ws_sold_date_sk#5116]\n         :     :  +- Filter ((isnotnull(ws_bill_customer_sk#5086) AND isnotnull(ws_sold_date_sk#5116)) AND dynamicpruning#5498 [ws_sold_date_sk#5116])\n         :     :     :  +- Project [d_date_sk#5117, d_year#5123]\n         :     :     :     +- Filter ((isnotnull(d_year#5123) AND (d_year#5123 = 2001)) AND isnotnull(d_date_sk#5117))\n         :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#5117,d_date_id#5118,d_date#5119,d_month_seq#5120,d_week_seq#5121,d_quarter_seq#5122,d_year#5123,d_dow#5124,d_moy#5125,d_dom#5126,d_qoy#5127,d_fy_year#5128,d_fy_quarter_seq#5129,d_fy_week_seq#5130,d_day_name#5131,d_quarter_name#5132,d_holiday#5133,d_weekend#5134,d_following_holiday#5135,d_first_dom#5136,d_last_dom#5137,d_same_day_ly#5138,d_same_day_lq#5139,d_current_day#5140,... 4 more fields] parquet\n         :     :     +- Relation spark_catalog.tpcds_100.web_sales[ws_sold_time_sk#5083,ws_ship_date_sk#5084,ws_item_sk#5085,ws_bill_customer_sk#5086,ws_bill_cdemo_sk#5087,ws_bill_hdemo_sk#5088,ws_bill_addr_sk#5089,ws_ship_customer_sk#5090,ws_ship_cdemo_sk#5091,ws_ship_hdemo_sk#5092,ws_ship_addr_sk#5093,ws_web_page_sk#5094,ws_web_site_sk#5095,ws_ship_mode_sk#5096,ws_warehouse_sk#5097,ws_promo_sk#5098,ws_order_number#5099L,ws_quantity#5100,ws_wholesale_cost#5101,ws_list_price#5102,ws_sales_price#5103,ws_ext_discount_amt#5104,ws_ext_sales_price#5105,ws_ext_wholesale_cost#5106,... 10 more fields] parquet\n         :     +- Project [d_date_sk#5117, d_year#5123]\n         :        +- Filter ((isnotnull(d_year#5123) AND (d_year#5123 = 2001)) AND isnotnull(d_date_sk#5117))\n         :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#5117,d_date_id#5118,d_date#5119,d_month_seq#5120,d_week_seq#5121,d_quarter_seq#5122,d_year#5123,d_dow#5124,d_moy#5125,d_dom#5126,d_qoy#5127,d_fy_year#5128,d_fy_quarter_seq#5129,d_fy_week_seq#5130,d_day_name#5131,d_quarter_name#5132,d_holiday#5133,d_weekend#5134,d_following_holiday#5135,d_first_dom#5136,d_last_dom#5137,d_same_day_ly#5138,d_same_day_lq#5139,d_current_day#5140,... 4 more fields] parquet\n         +- Project [c_customer_sk#5065, c_customer_id#5066, c_first_name#5073, c_last_name#5074, c_preferred_cust_flag#5075, c_birth_country#5079, c_login#5080, c_email_address#5081]\n            +- Filter (isnotnull(c_customer_sk#5065) AND isnotnull(c_customer_id#5066))\n               +- Relation spark_catalog.tpcds_100.customer[c_customer_sk#5065,c_customer_id#5066,c_current_cdemo_sk#5067,c_current_hdemo_sk#5068,c_current_addr_sk#5069,c_first_shipto_date_sk#5070,c_first_sales_date_sk#5071,c_salutation#5072,c_first_name#5073,c_last_name#5074,c_preferred_cust_flag#5075,c_birth_day#5076,c_birth_month#5077,c_birth_year#5078,c_birth_country#5079,c_login#5080,c_email_address#5081,c_last_review_date#5082] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "0" : {
            "sign" : 1330209765,
            "className" : "org.apache.spark.sql.execution.FilterExec",
            "sizeInBytes" : 3761782752,
            "rowCount" : 72341976,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Input [2]: [customer_id#2841, year_total#2849] Condition : (isnotnull(year_total#2849) AND (year_total#2849 > 0.000000)) "
          },
          "1" : {
            "sign" : 1535143423,
            "className" : "org.apache.spark.sql.execution.aggregate.HashAggregateExec",
            "sizeInBytes" : 166353440,
            "rowCount" : 899061,
            "isRuntime" : true,
            "predicate" : " (unknown) HashAggregate Input [10]: [c_customer_id#5066, c_first_name#5073, c_last_name#5074, c_preferred_cust_flag#5075, c_birth_country#5079, c_login#5080, c_email_address#5081, d_year#5123, sum#5518, isEmpty#5519] Keys [8]: [c_customer_id#5066, c_first_name#5073, c_last_name#5074, c_preferred_cust_flag#5075, c_birth_country#5079, c_login#5080, c_email_address#5081, d_year#5123] Functions [1]: [sum(((((ws_ext_list_price#5107 - ws_ext_wholesale_cost#5106) - ws_ext_discount_amt#5104) + ws_ext_sales_price#5105) / 2))] Aggregate Attributes [1]: [sum(((((ws_ext_list_price#5107 - ws_ext_wholesale_cost#5106) - ws_ext_discount_amt#5104) + ws_ext_sales_price#5105) / 2))#2949] Results [2]: [c_customer_id#5066 AS customer_id#2841, sum(((((ws_ext_list_price#5107 - ws_ext_wholesale_cost#5106) - ws_ext_discount_amt#5104) + ws_ext_sales_price#5105) / 2))#2949 AS year_total#2849] "
          },
          "2" : {
            "sign" : -389985210,
            "className" : "org.apache.spark.sql.execution.adaptive.ShuffleQueryStageExec",
            "sizeInBytes" : 3761782752,
            "rowCount" : 72341976,
            "isRuntime" : false,
            "predicate" : " (unknown) ShuffleQueryStage Output [10]: [c_customer_id#5066, c_first_name#5073, c_last_name#5074, c_preferred_cust_flag#5075, c_birth_country#5079, c_login#5080, c_email_address#5081, d_year#5123, sum#5518, isEmpty#5519] Arguments: 29 "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "ShuffleQueryStage",
          "toId" : 1,
          "toName" : "HashAggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "HashAggregate",
          "toId" : 0,
          "toName" : "Filter",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Filter (isnotnull(year_total#2849) AND (year_total#2849 > 0.000000))\n+- HashAggregate(keys=[c_customer_id#5066, c_first_name#5073, c_last_name#5074, c_preferred_cust_flag#5075, c_birth_country#5079, c_login#5080, c_email_address#5081, d_year#5123], functions=[sum(((((ws_ext_list_price#5107 - ws_ext_wholesale_cost#5106) - ws_ext_discount_amt#5104) + ws_ext_sales_price#5105) / 2))], output=[customer_id#2841, year_total#2849])\n   +- ShuffleQueryStage 29\n      +- Exchange hashpartitioning(c_customer_id#5066, c_first_name#5073, c_last_name#5074, c_preferred_cust_flag#5075, c_birth_country#5079, c_login#5080, c_email_address#5081, d_year#5123, 200), ENSURE_REQUIREMENTS, [plan_id=3636]\n         +- *(27) HashAggregate(keys=[c_customer_id#5066, c_first_name#5073, c_last_name#5074, c_preferred_cust_flag#5075, c_birth_country#5079, c_login#5080, c_email_address#5081, d_year#5123], functions=[partial_sum(((((ws_ext_list_price#5107 - ws_ext_wholesale_cost#5106) - ws_ext_discount_amt#5104) + ws_ext_sales_price#5105) / 2))], output=[c_customer_id#5066, c_first_name#5073, c_last_name#5074, c_preferred_cust_flag#5075, c_birth_country#5079, c_login#5080, c_email_address#5081, d_year#5123, sum#5518, isEmpty#5519])\n            +- *(27) Project [c_customer_id#5066, c_first_name#5073, c_last_name#5074, c_preferred_cust_flag#5075, c_birth_country#5079, c_login#5080, c_email_address#5081, ws_ext_discount_amt#5104, ws_ext_sales_price#5105, ws_ext_wholesale_cost#5106, ws_ext_list_price#5107, d_year#5123]\n               +- *(27) SortMergeJoin [ws_bill_customer_sk#5086], [c_customer_sk#5065], Inner\n                  :- *(25) Sort [ws_bill_customer_sk#5086 ASC NULLS FIRST], false, 0\n                  :  +- AQEShuffleRead coalesced\n                  :     +- ShuffleQueryStage 23\n                  :        +- Exchange hashpartitioning(ws_bill_customer_sk#5086, 200), ENSURE_REQUIREMENTS, [plan_id=1816]\n                  :           +- *(15) Project [ws_bill_customer_sk#5086, ws_ext_discount_amt#5104, ws_ext_sales_price#5105, ws_ext_wholesale_cost#5106, ws_ext_list_price#5107, d_year#5123]\n                  :              +- *(15) BroadcastHashJoin [ws_sold_date_sk#5116], [d_date_sk#5117], Inner, BuildRight, false\n                  :                 :- *(15) Filter isnotnull(ws_bill_customer_sk#5086)\n                  :                 :  +- *(15) ColumnarToRow\n                  :                 :     +- FileScan parquet spark_catalog.tpcds_100.web_sales[ws_bill_customer_sk#5086,ws_ext_discount_amt#5104,ws_ext_sales_price#5105,ws_ext_wholesale_cost#5106,ws_ext_list_price#5107,ws_sold_date_sk#5116] Batched: true, DataFilters: [isnotnull(ws_bill_customer_sk#5086)], Format: Parquet, Location: InMemoryFileIndex(1823 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/web_sa..., PartitionFilters: [isnotnull(ws_sold_date_sk#5116), dynamicpruningexpression(ws_sold_date_sk#5116 IN dynamicpruning..., PushedFilters: [IsNotNull(ws_bill_customer_sk)], ReadSchema: struct<ws_bill_customer_sk:int,ws_ext_discount_amt:decimal(7,2),ws_ext_sales_price:decimal(7,2),w...\n                  :                 :           +- ReusedSubquery SubqueryBroadcast dynamicpruning#5494, 0, [d_date_sk#71], [id=#1579]\n                  :                 +- BroadcastQueryStage 14\n                  :                    +- ReusedExchange [d_date_sk#5117, d_year#5123], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=662]\n                  +- *(26) Sort [c_customer_sk#5065 ASC NULLS FIRST], false, 0\n                     +- AQEShuffleRead coalesced\n                        +- ShuffleQueryStage 16\n                           +- ReusedExchange [c_customer_sk#5065, c_customer_id#5066, c_first_name#5073, c_last_name#5074, c_preferred_cust_flag#5075, c_birth_country#5079, c_login#5080, c_email_address#5081], Exchange hashpartitioning(c_customer_sk#30, 200), ENSURE_REQUIREMENTS, [plan_id=681]\n"
      },
      "IM" : {
        "inputSizeInBytes" : 166353440,
        "inputRowCount" : 899061
      },
      "InitialPartitionNum" : 200,
      "PD" : {
        "9" : [ 392546, 402060, 402060, 410868, 405634, 410868, 412528, 402060, 402537, 392546, 397780, 412528, 402537, 407294, 416102, 407294, 416102, 407294, 437038, 407294, 401354, 402537, 399287, 426570, 402060, 402060, 412528, 406111, 410868, 402537, 405634, 407294, 412528, 402060, 402537, 392546, 402060, 402537, 406111, 392546, 402060, 407771, 402537, 406111, 404044, 412528, 397303, 407294, 407294, 402060, 404521, 397303, 402060, 397303, 410868, 407294, 402060, 392546, 407294, 416102, 411345, 405634, 402537, 402537, 411345, 408248, 402537, 417762, 410868, 412528, 407771, 407771, 403014, 402060, 411345, 410868, 405634, 405634, 397303, 402537, 389296, 394053, 407294, 416579, 413005, 397303, 411345, 413005, 397303, 399287, 396120, 402060, 409278, 407294, 400877, 406111, 412528, 407294, 407294, 410868, 397780, 400877, 402537, 417762, 402060, 407294, 396120, 402537, 400877, 426570, 403014, 417762, 407294, 402060, 402537, 412528, 397303, 402537, 406111, 402060, 417762, 402537, 405634, 413005, 402537, 405634, 399287, 406588, 392546, 397780, 402060, 397303, 397780, 402060, 393023, 407294, 407771, 402537, 417762, 402537, 417762, 403014, 407771, 396120, 417762, 416102, 407294, 401354, 406111, 402537, 402537, 407294, 410868, 394053, 396120, 414800, 413005, 407771, 406111, 397303, 402060, 407294, 410868, 392546, 410868, 412528, 398810, 405634, 393023, 406111, 407294, 407771, 407294, 392546, 394053, 412528, 417762, 397303, 397303, 401354, 413005, 407771, 405634, 398810, 401354, 402537, 412528, 412528, 406111, 412528, 401354, 405634, 397780, 410868, 407771, 392546, 422996, 402537, 405634, 400877 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 16,
        "FinishedTasksNum" : 13,
        "FinishedTasksTotalTimeInMs" : 48374.0,
        "FinishedTasksDistributionInMs" : [ 1420.0, 3747.0, 3810.0, 3922.0, 4259.0 ]
      },
      "QueryStageOptimizationId" : 16,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 30 ],
      "Objectives" : {
        "DurationInMs" : 13181,
        "TotalTasksDurationInMs" : 3701,
        "IOBytes" : {
          "Total" : 91522222,
          "Details" : {
            "IR" : 0,
            "IW" : 0,
            "SR" : 77283386,
            "SW" : 14238836
          }
        }
      }
    },
    "5" : {
      "QSLogical" : {
        "operators" : {
          "4" : {
            "sign" : -1949700921,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 14972593792,
                "rowCount" : 71983624
              },
              "compileTime" : {
                "sizeInBytes" : 14972593792,
                "rowCount" : 71983624
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ws_sold_time_sk#5083, ws_ship_date_sk#5084, ws_item_sk#5085, ws_bill_customer_sk#5086, ws_bill_cdemo_sk#5087, ws_bill_hdemo_sk#5088, ws_bill_addr_sk#5089, ws_ship_customer_sk#5090, ws_ship_cdemo_sk#5091, ws_ship_hdemo_sk#5092, ws_ship_addr_sk#5093, ws_web_page_sk#5094, ws_web_site_sk#5095, ws_ship_mode_sk#5096, ws_warehouse_sk#5097, ws_promo_sk#5098, ws_order_number#5099L, ws_quantity#5100, ws_wholesale_cost#5101, ws_list_price#5102, ws_sales_price#5103, ws_ext_discount_amt#5104, ws_ext_sales_price#5105, ws_ext_wholesale_cost#5106, ... 10 more fields], `spark_catalog`.`tpcds_100`.`web_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "1" : {
            "sign" : 226367973,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 3891753880,
                "rowCount" : 69495605
              },
              "compileTime" : {
                "sizeInBytes" : 3891753880,
                "rowCount" : 69495605
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ws_sold_date_sk#5116 = d_date_sk#5117) "
          },
          "0" : {
            "sign" : -726640814,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 3335789040,
                "rowCount" : 69495605
              },
              "compileTime" : {
                "sizeInBytes" : 3335789040,
                "rowCount" : 69495605
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_bill_customer_sk#5086, ws_ext_discount_amt#5104, ws_ext_sales_price#5105, ws_ext_wholesale_cost#5106, ws_ext_list_price#5107, d_year#5123] "
          },
          "2" : {
            "sign" : 1229180951,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 3454348848,
                "rowCount" : 71965601
              },
              "compileTime" : {
                "sizeInBytes" : 3454348848,
                "rowCount" : 71965601
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_bill_customer_sk#5086, ws_ext_discount_amt#5104, ws_ext_sales_price#5105, ws_ext_wholesale_cost#5106, ws_ext_list_price#5107, ws_sold_date_sk#5116] "
          },
          "3" : {
            "sign" : 1847345753,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 14968845008,
                "rowCount" : 71965601
              },
              "compileTime" : {
                "sizeInBytes" : 14968845008,
                "rowCount" : 71965601
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(ws_bill_customer_sk#5086) AND isnotnull(ws_sold_date_sk#5116)) AND dynamicpruning#5498 [ws_sold_date_sk#5116]) "
          }
        },
        "links" : [ {
          "fromId" : 4,
          "fromName" : "LogicalRelation",
          "toId" : 3,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Filter",
          "toId" : 2,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Project",
          "toId" : 1,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Join",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [ws_bill_customer_sk#5086, ws_ext_discount_amt#5104, ws_ext_sales_price#5105, ws_ext_wholesale_cost#5106, ws_ext_list_price#5107, d_year#5123]\n+- Join Inner, (ws_sold_date_sk#5116 = d_date_sk#5117)\n   :- Project [ws_bill_customer_sk#5086, ws_ext_discount_amt#5104, ws_ext_sales_price#5105, ws_ext_wholesale_cost#5106, ws_ext_list_price#5107, ws_sold_date_sk#5116]\n   :  +- Filter ((isnotnull(ws_bill_customer_sk#5086) AND isnotnull(ws_sold_date_sk#5116)) AND dynamicpruning#5498 [ws_sold_date_sk#5116])\n   :     :  +- Project [d_date_sk#5117, d_year#5123]\n   :     :     +- Filter ((isnotnull(d_year#5123) AND (d_year#5123 = 2001)) AND isnotnull(d_date_sk#5117))\n   :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#5117,d_date_id#5118,d_date#5119,d_month_seq#5120,d_week_seq#5121,d_quarter_seq#5122,d_year#5123,d_dow#5124,d_moy#5125,d_dom#5126,d_qoy#5127,d_fy_year#5128,d_fy_quarter_seq#5129,d_fy_week_seq#5130,d_day_name#5131,d_quarter_name#5132,d_holiday#5133,d_weekend#5134,d_following_holiday#5135,d_first_dom#5136,d_last_dom#5137,d_same_day_ly#5138,d_same_day_lq#5139,d_current_day#5140,... 4 more fields] parquet\n   :     +- Relation spark_catalog.tpcds_100.web_sales[ws_sold_time_sk#5083,ws_ship_date_sk#5084,ws_item_sk#5085,ws_bill_customer_sk#5086,ws_bill_cdemo_sk#5087,ws_bill_hdemo_sk#5088,ws_bill_addr_sk#5089,ws_ship_customer_sk#5090,ws_ship_cdemo_sk#5091,ws_ship_hdemo_sk#5092,ws_ship_addr_sk#5093,ws_web_page_sk#5094,ws_web_site_sk#5095,ws_ship_mode_sk#5096,ws_warehouse_sk#5097,ws_promo_sk#5098,ws_order_number#5099L,ws_quantity#5100,ws_wholesale_cost#5101,ws_list_price#5102,ws_sales_price#5103,ws_ext_discount_amt#5104,ws_ext_sales_price#5105,ws_ext_wholesale_cost#5106,... 10 more fields] parquet\n   +- Project [d_date_sk#5117, d_year#5123]\n      +- Filter ((isnotnull(d_year#5123) AND (d_year#5123 = 2001)) AND isnotnull(d_date_sk#5117))\n         +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#5117,d_date_id#5118,d_date#5119,d_month_seq#5120,d_week_seq#5121,d_quarter_seq#5122,d_year#5123,d_dow#5124,d_moy#5125,d_dom#5126,d_qoy#5127,d_fy_year#5128,d_fy_quarter_seq#5129,d_fy_week_seq#5130,d_day_name#5131,d_quarter_name#5132,d_holiday#5133,d_weekend#5134,d_following_holiday#5135,d_first_dom#5136,d_last_dom#5137,d_same_day_ly#5138,d_same_day_lq#5139,d_current_day#5140,... 4 more fields] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "4" : {
            "sign" : 1887639725,
            "className" : "org.apache.spark.sql.execution.adaptive.BroadcastQueryStageExec",
            "sizeInBytes" : 1051496,
            "rowCount" : 365,
            "isRuntime" : true,
            "predicate" : " (unknown) BroadcastQueryStage Output [2]: [d_date_sk#5117, d_year#5123] Arguments: 14 "
          },
          "1" : {
            "sign" : 1204500572,
            "className" : "org.apache.spark.sql.execution.joins.BroadcastHashJoinExec",
            "sizeInBytes" : 3891753880,
            "rowCount" : 69495605,
            "isRuntime" : false,
            "predicate" : " (unknown) BroadcastHashJoin Left keys [1]: [ws_sold_date_sk#5116] Right keys [1]: [d_date_sk#5117] Join type: Inner Join condition: None "
          },
          "0" : {
            "sign" : -56503791,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 3335789040,
            "rowCount" : 69495605,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [6]: [ws_bill_customer_sk#5086, ws_ext_discount_amt#5104, ws_ext_sales_price#5105, ws_ext_wholesale_cost#5106, ws_ext_list_price#5107, d_year#5123] Input [8]: [ws_bill_customer_sk#5086, ws_ext_discount_amt#5104, ws_ext_sales_price#5105, ws_ext_wholesale_cost#5106, ws_ext_list_price#5107, ws_sold_date_sk#5116, d_date_sk#5117, d_year#5123] "
          },
          "2" : {
            "sign" : 2141114726,
            "className" : "org.apache.spark.sql.execution.FilterExec",
            "sizeInBytes" : 3454348848,
            "rowCount" : 71965601,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Input [6]: [ws_bill_customer_sk#5086, ws_ext_discount_amt#5104, ws_ext_sales_price#5105, ws_ext_wholesale_cost#5106, ws_ext_list_price#5107, ws_sold_date_sk#5116] Condition : isnotnull(ws_bill_customer_sk#5086) "
          },
          "3" : {
            "sign" : 2073154583,
            "className" : "org.apache.spark.sql.execution.FileSourceScanExec",
            "sizeInBytes" : 3454348848,
            "rowCount" : 71965601,
            "isRuntime" : false,
            "predicate" : " (unknown) Scan parquet spark_catalog.tpcds_100.web_sales Output [6]: [ws_bill_customer_sk#5086, ws_ext_discount_amt#5104, ws_ext_sales_price#5105, ws_ext_wholesale_cost#5106, ws_ext_list_price#5107, ws_sold_date_sk#5116] Batched: true Location: InMemoryFileIndex [hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/web_sales/ws_sold_date_sk=2450816, ... 1822 entries] PartitionFilters: [isnotnull(ws_sold_date_sk#5116), dynamicpruningexpression(ws_sold_date_sk#5116 IN dynamicpruning#5494)] PushedFilters: [IsNotNull(ws_bill_customer_sk)] ReadSchema: struct<ws_bill_customer_sk:int,ws_ext_discount_amt:decimal(7,2),ws_ext_sales_price:decimal(7,2),ws_ext_wholesale_cost:decimal(7,2),ws_ext_list_price:decimal(7,2)> "
          }
        },
        "links" : [ {
          "fromId" : 3,
          "fromName" : "Scan parquet spark_catalog.tpcds_100.web_sales",
          "toId" : 2,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Filter",
          "toId" : 1,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "BroadcastQueryStage",
          "toId" : 1,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "BroadcastHashJoin",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [ws_bill_customer_sk#5086, ws_ext_discount_amt#5104, ws_ext_sales_price#5105, ws_ext_wholesale_cost#5106, ws_ext_list_price#5107, d_year#5123]\n+- BroadcastHashJoin [ws_sold_date_sk#5116], [d_date_sk#5117], Inner, BuildRight, false\n   :- Filter isnotnull(ws_bill_customer_sk#5086)\n   :  +- FileScan parquet spark_catalog.tpcds_100.web_sales[ws_bill_customer_sk#5086,ws_ext_discount_amt#5104,ws_ext_sales_price#5105,ws_ext_wholesale_cost#5106,ws_ext_list_price#5107,ws_sold_date_sk#5116] Batched: true, DataFilters: [isnotnull(ws_bill_customer_sk#5086)], Format: Parquet, Location: InMemoryFileIndex(1823 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/web_sa..., PartitionFilters: [isnotnull(ws_sold_date_sk#5116), dynamicpruningexpression(ws_sold_date_sk#5116 IN dynamicpruning..., PushedFilters: [IsNotNull(ws_bill_customer_sk)], ReadSchema: struct<ws_bill_customer_sk:int,ws_ext_discount_amt:decimal(7,2),ws_ext_sales_price:decimal(7,2),w...\n   :        +- ReusedSubquery SubqueryBroadcast dynamicpruning#5494, 0, [d_date_sk#71], [id=#1579]\n   +- BroadcastQueryStage 14\n      +- ReusedExchange [d_date_sk#5117, d_year#5123], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=662]\n"
      },
      "IM" : {
        "inputSizeInBytes" : 3455400344,
        "inputRowCount" : 71965966
      },
      "InitialPartitionNum" : 0,
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 3,
        "FinishedTasksNum" : 13,
        "FinishedTasksTotalTimeInMs" : 18486.0,
        "FinishedTasksDistributionInMs" : [ 1193.0, 1333.0, 1396.0, 1494.0, 1707.0 ]
      },
      "QueryStageOptimizationId" : 5,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 8 ],
      "Objectives" : {
        "DurationInMs" : 6272,
        "TotalTasksDurationInMs" : 15425,
        "IOBytes" : {
          "Total" : 575973137,
          "Details" : {
            "IR" : 243066896,
            "IW" : 0,
            "SR" : 0,
            "SW" : 332906241
          }
        }
      }
    },
    "10" : {
      "QSLogical" : {
        "operators" : {
          "0" : {
            "sign" : 1141521644,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 7435110696,
                "rowCount" : 142982898
              },
              "compileTime" : {
                "sizeInBytes" : 7435110696,
                "rowCount" : 142982898
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [c_customer_id#4508, c_first_name#4515, c_last_name#4516, c_preferred_cust_flag#4517, c_birth_country#4521, c_login#4522, c_email_address#4523, d_year#4565], [c_customer_id#4508 AS customer_id#2831, sum(((((cs_ext_list_price#4549 - cs_ext_wholesale_cost#4548) - cs_ext_discount_amt#4546) + cs_ext_sales_price#4547) / 2)) AS year_total#2839] "
          },
          "1" : {
            "sign" : 968857519,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 30741323070,
                "rowCount" : 142982898
              },
              "compileTime" : {
                "sizeInBytes" : 30741323070,
                "rowCount" : 142982898
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_customer_id#4508, c_first_name#4515, c_last_name#4516, c_preferred_cust_flag#4517, c_birth_country#4521, c_login#4522, c_email_address#4523, cs_ext_discount_amt#4546, cs_ext_sales_price#4547, cs_ext_wholesale_cost#4548, cs_ext_list_price#4549, d_year#4565] "
          },
          "2" : {
            "sign" : 1013986922,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 31885186254,
                "rowCount" : 142982898
              },
              "compileTime" : {
                "sizeInBytes" : 31885186254,
                "rowCount" : 142982898
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (c_customer_sk#4507 = cs_bill_customer_sk#4527) "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "Join",
          "toId" : 1,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Project",
          "toId" : 0,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Aggregate [c_customer_id#4508, c_first_name#4515, c_last_name#4516, c_preferred_cust_flag#4517, c_birth_country#4521, c_login#4522, c_email_address#4523, d_year#4565], [c_customer_id#4508 AS customer_id#2831, sum(((((cs_ext_list_price#4549 - cs_ext_wholesale_cost#4548) - cs_ext_discount_amt#4546) + cs_ext_sales_price#4547) / 2)) AS year_total#2839]\n+- Project [c_customer_id#4508, c_first_name#4515, c_last_name#4516, c_preferred_cust_flag#4517, c_birth_country#4521, c_login#4522, c_email_address#4523, cs_ext_discount_amt#4546, cs_ext_sales_price#4547, cs_ext_wholesale_cost#4548, cs_ext_list_price#4549, d_year#4565]\n   +- Join Inner, (c_customer_sk#4507 = cs_bill_customer_sk#4527)\n      :- Project [cs_bill_customer_sk#4527, cs_ext_discount_amt#4546, cs_ext_sales_price#4547, cs_ext_wholesale_cost#4548, cs_ext_list_price#4549, d_year#4565]\n      :  +- Join Inner, (cs_sold_date_sk#4558 = d_date_sk#4559)\n      :     :- Project [cs_bill_customer_sk#4527, cs_ext_discount_amt#4546, cs_ext_sales_price#4547, cs_ext_wholesale_cost#4548, cs_ext_list_price#4549, cs_sold_date_sk#4558]\n      :     :  +- Filter ((isnotnull(cs_bill_customer_sk#4527) AND isnotnull(cs_sold_date_sk#4558)) AND dynamicpruning#5496 [cs_sold_date_sk#4558])\n      :     :     :  +- Project [d_date_sk#4559, d_year#4565]\n      :     :     :     +- Filter ((isnotnull(d_year#4565) AND (d_year#4565 = 2001)) AND isnotnull(d_date_sk#4559))\n      :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#4559,d_date_id#4560,d_date#4561,d_month_seq#4562,d_week_seq#4563,d_quarter_seq#4564,d_year#4565,d_dow#4566,d_moy#4567,d_dom#4568,d_qoy#4569,d_fy_year#4570,d_fy_quarter_seq#4571,d_fy_week_seq#4572,d_day_name#4573,d_quarter_name#4574,d_holiday#4575,d_weekend#4576,d_following_holiday#4577,d_first_dom#4578,d_last_dom#4579,d_same_day_ly#4580,d_same_day_lq#4581,d_current_day#4582,... 4 more fields] parquet\n      :     :     +- Relation spark_catalog.tpcds_100.catalog_sales[cs_sold_time_sk#4525,cs_ship_date_sk#4526,cs_bill_customer_sk#4527,cs_bill_cdemo_sk#4528,cs_bill_hdemo_sk#4529,cs_bill_addr_sk#4530,cs_ship_customer_sk#4531,cs_ship_cdemo_sk#4532,cs_ship_hdemo_sk#4533,cs_ship_addr_sk#4534,cs_call_center_sk#4535,cs_catalog_page_sk#4536,cs_ship_mode_sk#4537,cs_warehouse_sk#4538,cs_item_sk#4539,cs_promo_sk#4540,cs_order_number#4541L,cs_quantity#4542,cs_wholesale_cost#4543,cs_list_price#4544,cs_sales_price#4545,cs_ext_discount_amt#4546,cs_ext_sales_price#4547,cs_ext_wholesale_cost#4548,... 10 more fields] parquet\n      :     +- Project [d_date_sk#4559, d_year#4565]\n      :        +- Filter ((isnotnull(d_year#4565) AND (d_year#4565 = 2001)) AND isnotnull(d_date_sk#4559))\n      :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#4559,d_date_id#4560,d_date#4561,d_month_seq#4562,d_week_seq#4563,d_quarter_seq#4564,d_year#4565,d_dow#4566,d_moy#4567,d_dom#4568,d_qoy#4569,d_fy_year#4570,d_fy_quarter_seq#4571,d_fy_week_seq#4572,d_day_name#4573,d_quarter_name#4574,d_holiday#4575,d_weekend#4576,d_following_holiday#4577,d_first_dom#4578,d_last_dom#4579,d_same_day_ly#4580,d_same_day_lq#4581,d_current_day#4582,... 4 more fields] parquet\n      +- Project [c_customer_sk#4507, c_customer_id#4508, c_first_name#4515, c_last_name#4516, c_preferred_cust_flag#4517, c_birth_country#4521, c_login#4522, c_email_address#4523]\n         +- Filter (isnotnull(c_customer_sk#4507) AND isnotnull(c_customer_id#4508))\n            +- Relation spark_catalog.tpcds_100.customer[c_customer_sk#4507,c_customer_id#4508,c_current_cdemo_sk#4509,c_current_hdemo_sk#4510,c_current_addr_sk#4511,c_first_shipto_date_sk#4512,c_first_sales_date_sk#4513,c_salutation#4514,c_first_name#4515,c_last_name#4516,c_preferred_cust_flag#4517,c_birth_day#4518,c_birth_month#4519,c_birth_year#4520,c_birth_country#4521,c_login#4522,c_email_address#4523,c_last_review_date#4524] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "4" : {
            "sign" : 1513162592,
            "className" : "org.apache.spark.sql.execution.adaptive.ShuffleQueryStageExec",
            "sizeInBytes" : 1592687936,
            "rowCount" : 28440856,
            "isRuntime" : true,
            "predicate" : " (unknown) ShuffleQueryStage Output [6]: [cs_bill_customer_sk#4527, cs_ext_discount_amt#4546, cs_ext_sales_price#4547, cs_ext_wholesale_cost#4548, cs_ext_list_price#4549, d_year#4565] Arguments: 22 "
          },
          "5" : {
            "sign" : -328106518,
            "className" : "org.apache.spark.sql.execution.SortExec",
            "sizeInBytes" : -1,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Input [8]: [c_customer_sk#4507, c_customer_id#4508, c_first_name#4515, c_last_name#4516, c_preferred_cust_flag#4517, c_birth_country#4521, c_login#4522, c_email_address#4523] Arguments: [c_customer_sk#4507 ASC NULLS FIRST], false, 0 "
          },
          "6" : {
            "sign" : -1669925126,
            "className" : "org.apache.spark.sql.execution.adaptive.ShuffleQueryStageExec",
            "sizeInBytes" : 306068840,
            "rowCount" : 2000000,
            "isRuntime" : true,
            "predicate" : " (unknown) ShuffleQueryStage Output [8]: [c_customer_sk#4507, c_customer_id#4508, c_first_name#4515, c_last_name#4516, c_preferred_cust_flag#4517, c_birth_country#4521, c_login#4522, c_email_address#4523] Arguments: 8 "
          },
          "1" : {
            "sign" : -1573412566,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 30741323070,
            "rowCount" : 142982898,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [12]: [c_customer_id#4508, c_first_name#4515, c_last_name#4516, c_preferred_cust_flag#4517, c_birth_country#4521, c_login#4522, c_email_address#4523, cs_ext_discount_amt#4546, cs_ext_sales_price#4547, cs_ext_wholesale_cost#4548, cs_ext_list_price#4549, d_year#4565] Input [14]: [cs_bill_customer_sk#4527, cs_ext_discount_amt#4546, cs_ext_sales_price#4547, cs_ext_wholesale_cost#4548, cs_ext_list_price#4549, d_year#4565, c_customer_sk#4507, c_customer_id#4508, c_first_name#4515, c_last_name#4516, c_preferred_cust_flag#4517, c_birth_country#4521, c_login#4522, c_email_address#4523] "
          },
          "0" : {
            "sign" : -947402288,
            "className" : "org.apache.spark.sql.execution.aggregate.HashAggregateExec",
            "sizeInBytes" : 7435110696,
            "rowCount" : 142982898,
            "isRuntime" : false,
            "predicate" : " (unknown) HashAggregate Input [12]: [c_customer_id#4508, c_first_name#4515, c_last_name#4516, c_preferred_cust_flag#4517, c_birth_country#4521, c_login#4522, c_email_address#4523, cs_ext_discount_amt#4546, cs_ext_sales_price#4547, cs_ext_wholesale_cost#4548, cs_ext_list_price#4549, d_year#4565] Keys [8]: [c_customer_id#4508, c_first_name#4515, c_last_name#4516, c_preferred_cust_flag#4517, c_birth_country#4521, c_login#4522, c_email_address#4523, d_year#4565] Functions [1]: [partial_sum(((((cs_ext_list_price#4549 - cs_ext_wholesale_cost#4548) - cs_ext_discount_amt#4546) + cs_ext_sales_price#4547) / 2))] Aggregate Attributes [2]: [sum#5508, isEmpty#5509] Results [10]: [c_customer_id#4508, c_first_name#4515, c_last_name#4516, c_preferred_cust_flag#4517, c_birth_country#4521, c_login#4522, c_email_address#4523, d_year#4565, sum#5510, isEmpty#5511] "
          },
          "2" : {
            "sign" : 621102249,
            "className" : "org.apache.spark.sql.execution.joins.SortMergeJoinExec",
            "sizeInBytes" : 31885186254,
            "rowCount" : 142982898,
            "isRuntime" : false,
            "predicate" : " (unknown) SortMergeJoin Left keys [1]: [cs_bill_customer_sk#4527] Right keys [1]: [c_customer_sk#4507] Join type: Inner Join condition: None "
          },
          "3" : {
            "sign" : 1954658469,
            "className" : "org.apache.spark.sql.execution.SortExec",
            "sizeInBytes" : -1,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Input [6]: [cs_bill_customer_sk#4527, cs_ext_discount_amt#4546, cs_ext_sales_price#4547, cs_ext_wholesale_cost#4548, cs_ext_list_price#4549, d_year#4565] Arguments: [cs_bill_customer_sk#4527 ASC NULLS FIRST], false, 0 "
          }
        },
        "links" : [ {
          "fromId" : 4,
          "fromName" : "ShuffleQueryStage",
          "toId" : 3,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Sort",
          "toId" : 2,
          "toName" : "SortMergeJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "ShuffleQueryStage",
          "toId" : 5,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Sort",
          "toId" : 2,
          "toName" : "SortMergeJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "SortMergeJoin",
          "toId" : 1,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Project",
          "toId" : 0,
          "toName" : "HashAggregate",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "HashAggregate(keys=[c_customer_id#4508, c_first_name#4515, c_last_name#4516, c_preferred_cust_flag#4517, c_birth_country#4521, c_login#4522, c_email_address#4523, d_year#4565], functions=[partial_sum(((((cs_ext_list_price#4549 - cs_ext_wholesale_cost#4548) - cs_ext_discount_amt#4546) + cs_ext_sales_price#4547) / 2))], output=[c_customer_id#4508, c_first_name#4515, c_last_name#4516, c_preferred_cust_flag#4517, c_birth_country#4521, c_login#4522, c_email_address#4523, d_year#4565, sum#5510, isEmpty#5511])\n+- Project [c_customer_id#4508, c_first_name#4515, c_last_name#4516, c_preferred_cust_flag#4517, c_birth_country#4521, c_login#4522, c_email_address#4523, cs_ext_discount_amt#4546, cs_ext_sales_price#4547, cs_ext_wholesale_cost#4548, cs_ext_list_price#4549, d_year#4565]\n   +- SortMergeJoin [cs_bill_customer_sk#4527], [c_customer_sk#4507], Inner\n      :- Sort [cs_bill_customer_sk#4527 ASC NULLS FIRST], false, 0\n      :  +- ShuffleQueryStage 22\n      :     +- Exchange hashpartitioning(cs_bill_customer_sk#4527, 200), ENSURE_REQUIREMENTS, [plan_id=1709]\n      :        +- *(14) Project [cs_bill_customer_sk#4527, cs_ext_discount_amt#4546, cs_ext_sales_price#4547, cs_ext_wholesale_cost#4548, cs_ext_list_price#4549, d_year#4565]\n      :           +- *(14) BroadcastHashJoin [cs_sold_date_sk#4558], [d_date_sk#4559], Inner, BuildRight, false\n      :              :- *(14) Filter isnotnull(cs_bill_customer_sk#4527)\n      :              :  +- *(14) ColumnarToRow\n      :              :     +- FileScan parquet spark_catalog.tpcds_100.catalog_sales[cs_bill_customer_sk#4527,cs_ext_discount_amt#4546,cs_ext_sales_price#4547,cs_ext_wholesale_cost#4548,cs_ext_list_price#4549,cs_sold_date_sk#4558] Batched: true, DataFilters: [isnotnull(cs_bill_customer_sk#4527)], Format: Parquet, Location: InMemoryFileIndex(1836 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/catalo..., PartitionFilters: [isnotnull(cs_sold_date_sk#4558), dynamicpruningexpression(cs_sold_date_sk#4558 IN dynamicpruning..., PushedFilters: [IsNotNull(cs_bill_customer_sk)], ReadSchema: struct<cs_bill_customer_sk:int,cs_ext_discount_amt:decimal(7,2),cs_ext_sales_price:decimal(7,2),c...\n      :              :           +- ReusedSubquery SubqueryBroadcast dynamicpruning#5494, 0, [d_date_sk#71], [id=#1579]\n      :              +- BroadcastQueryStage 6\n      :                 +- ReusedExchange [d_date_sk#4559, d_year#4565], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=662]\n      +- Sort [c_customer_sk#4507 ASC NULLS FIRST], false, 0\n         +- ShuffleQueryStage 8\n            +- ReusedExchange [c_customer_sk#4507, c_customer_id#4508, c_first_name#4515, c_last_name#4516, c_preferred_cust_flag#4517, c_birth_country#4521, c_login#4522, c_email_address#4523], Exchange hashpartitioning(c_customer_sk#30, 200), ENSURE_REQUIREMENTS, [plan_id=681]\n"
      },
      "IM" : {
        "inputSizeInBytes" : 1898756776,
        "inputRowCount" : 30440856
      },
      "InitialPartitionNum" : 200,
      "PD" : {
        "2" : [ 3553529, 3513504, 3478675, 3527578, 3441143, 3491162, 3471803, 3531260, 3500432, 3481930, 3540223, 3443734, 3483215, 3480289, 3456496, 3511863, 3466460, 3598393, 3499735, 3427328, 3479840, 3586839, 3508020, 3510434, 3422530, 3490441, 3484750, 3539670, 3504041, 3497879, 3476536, 3509392, 3473281, 3450658, 3452460, 3461297, 3420257, 3437624, 3460799, 3495432, 3459441, 3455832, 3474821, 3509133, 3480572, 3454025, 3501752, 3516593, 3528740, 3433101, 3484806, 3500859, 3465603, 3467927, 3450171, 3499074, 3461602, 3454474, 3439728, 3476895, 3415919, 3575784, 3445876, 3494270, 3513504, 3527673, 3494180, 3454806, 3489804, 3511289, 3531614, 3432045, 3457996, 3573597, 3460807, 3498595, 3561457, 3466063, 3470747, 3533473, 3446320, 3535490, 3535795, 3467266, 3507364, 3427867, 3452996, 3426547, 3524437, 3518041, 3456978, 3512647, 3517611, 3509468, 3520828, 3606770, 3390825, 3405416, 3460247, 3384522, 3485754, 3487395, 3491162, 3524437, 3473588, 3540903, 3515325, 3545421, 3440207, 3449387, 3373540, 3508880, 3586249, 3462266, 3510826, 3495503, 3375712, 3436473, 3493386, 3446135, 3482428, 3468711, 3631129, 3480572, 3626042, 3630699, 3446083, 3443729, 3470069, 3451102, 3561479, 3531187, 3558893, 3553368, 3499501, 3472712, 3495378, 3494093, 3509702, 3478931, 3462963, 3471302, 3510007, 3525292, 3495857, 3497128, 3579159, 3496431, 3564424, 3511220, 3530498, 3466811, 3569388, 3516683, 3509909, 3472660, 3523580, 3519801, 3572175, 3431958, 3425616, 3425883, 3511523, 3493840, 3498682, 3546115, 3459441, 3592302, 3471302, 3416044, 3535525, 3596104, 3470336, 3476661, 3464427, 3447436, 3517614, 3428920, 3505701, 3487286, 3492912, 3516683, 3471359, 3470997, 3523580, 3541258, 3643281, 3500040, 3405149, 3482306, 3520559, 3482575, 3493987, 3459708, 3531614, 3550421, 3525265, 3476661, 3516291, 3459795 ],
        "0" : [ 830145, 830145, 754677, 830145, 830145, 830145, 754677, 754677, 830145, 830145, 830145, 754677, 830145, 830145, 754677, 830145, 830145, 830145, 754677, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 754677, 830145, 830145, 754677, 830145, 830145, 754677, 754677, 754677, 754677, 754677, 830145, 754677, 830145, 830145, 754677, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 754677, 754677, 754677, 830145, 830145, 830145, 754677, 830145, 754677, 830145, 830145, 754677, 830145, 830145, 830145, 754677, 754677, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 754677, 754677, 754677, 754677, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 754677, 754677, 830145, 754677, 754677, 830145, 830145, 754677, 830145, 830145, 830145, 830145, 754677, 754677, 830145, 830145, 830145, 754677, 830145, 830145, 754677, 754677, 754677, 830145, 754677, 830145, 830145, 754677, 830145, 830145, 754677, 754677, 754677, 754677, 830145, 830145, 830145, 830145, 754677, 754677, 830145, 830145, 830145, 830145, 754677, 754677, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 754677, 754677, 830145, 830145, 754677, 830145, 830145, 830145, 830145, 830145, 754677, 830145, 830145, 830145, 830145, 830145, 754677, 830145, 754677, 830145, 754677, 754677, 830145, 830145, 754677, 830145, 830145, 830145, 830145, 754677, 830145, 830145, 830145, 754677, 754677, 830145, 830145, 830145, 830145, 830145, 754677 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 16,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 10,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 16 ],
      "Objectives" : {
        "DurationInMs" : 18425,
        "TotalTasksDurationInMs" : 52494,
        "IOBytes" : {
          "Total" : 955307235,
          "Details" : {
            "IR" : 0,
            "IW" : 0,
            "SR" : 818141873,
            "SW" : 137165362
          }
        }
      }
    },
    "21" : {
      "QSLogical" : {
        "operators" : {
          "8" : {
            "sign" : -1417565188,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 45044142156507206,
                "rowCount" : 193322498525782
              },
              "compileTime" : {
                "sizeInBytes" : 45044142156507206,
                "rowCount" : 193322498525782
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, ((customer_id#2821 = customer_id#2970) AND (CASE WHEN (year_total#2839 > 0.000000) THEN (year_total#2978 / year_total#2839) END > CASE WHEN (year_total#2829 > 0.000000) THEN (year_total#2958 / year_total#2829) END)) "
          },
          "4" : {
            "sign" : 687111741,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 58933069745831562836,
                "rowCount" : 252931629810435892
              },
              "compileTime" : {
                "sizeInBytes" : 58933069745831562836,
                "rowCount" : 252931629810435892
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, ((customer_id#2821 = customer_id#2990) AND (CASE WHEN (year_total#2839 > 0.000000) THEN (year_total#2978 / year_total#2839) END > CASE WHEN (year_total#2849 > 0.000000) THEN (year_total#2998 / year_total#2849) END)) "
          },
          "11" : {
            "sign" : 331269753,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 6543653635943,
                "rowCount" : 37824587491
              },
              "compileTime" : {
                "sizeInBytes" : 6543653635943,
                "rowCount" : 37824587491
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (customer_id#2950 = customer_id#2821) "
          },
          "9" : {
            "sign" : -230735523,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 511081433268651,
                "rowCount" : 2704134567559
              },
              "compileTime" : {
                "sizeInBytes" : 511081433268651,
                "rowCount" : 2704134567559
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [customer_id#2821, year_total#2829, customer_id#2950, customer_first_name#2951, customer_last_name#2952, customer_email_address#2956, year_total#2958, year_total#2839] "
          },
          "5" : {
            "sign" : 43474177,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 1321613831343848931,
                "rowCount" : 6992665774306079
              },
              "compileTime" : {
                "sizeInBytes" : 1321613831343848931,
                "rowCount" : 6992665774306079
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [customer_id#2821, customer_id#2950, customer_first_name#2951, customer_last_name#2952, customer_email_address#2956, year_total#2839, year_total#2978, year_total#2849] "
          },
          "10" : {
            "sign" : 1051407411,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 586797201160303,
                "rowCount" : 2704134567559
              },
              "compileTime" : {
                "sizeInBytes" : 586797201160303,
                "rowCount" : 2704134567559
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (customer_id#2821 = customer_id#2831) "
          },
          "6" : {
            "sign" : 731860623,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 1517408473024419143,
                "rowCount" : 6992665774306079
              },
              "compileTime" : {
                "sizeInBytes" : 1517408473024419143,
                "rowCount" : 6992665774306079
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (customer_id#2821 = customer_id#2841) "
          },
          "1" : {
            "sign" : 1701553337,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 28581274168579255796,
                "rowCount" : 252931629810435892
              },
              "compileTime" : {
                "sizeInBytes" : 28581274168579255796,
                "rowCount" : 252931629810435892
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) LocalLimit Arguments: 100 "
          },
          "0" : {
            "sign" : -1655957468,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 8800,
                "rowCount" : 100
              },
              "compileTime" : {
                "sizeInBytes" : 8800,
                "rowCount" : 100
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) GlobalLimit Arguments: 100 "
          },
          "2" : {
            "sign" : -578493382,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 28581274168579255796,
                "rowCount" : 252931629810435892
              },
              "compileTime" : {
                "sizeInBytes" : 28581274168579255796,
                "rowCount" : 252931629810435892
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [customer_id#2950 ASC NULLS FIRST, customer_first_name#2951 ASC NULLS FIRST, customer_last_name#2952 ASC NULLS FIRST, customer_email_address#2956 ASC NULLS FIRST], true "
          },
          "7" : {
            "sign" : 1506490684,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 33444792244960286,
                "rowCount" : 193322498525782
              },
              "compileTime" : {
                "sizeInBytes" : 33444792244960286,
                "rowCount" : 193322498525782
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [customer_id#2821, customer_id#2950, customer_first_name#2951, customer_last_name#2952, customer_email_address#2956, year_total#2839, year_total#2978] "
          },
          "3" : {
            "sign" : 38315897,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 28581274168579255796,
                "rowCount" : 252931629810435892
              },
              "compileTime" : {
                "sizeInBytes" : 28581274168579255796,
                "rowCount" : 252931629810435892
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [customer_id#2950, customer_first_name#2951, customer_last_name#2952, customer_email_address#2956] "
          }
        },
        "links" : [ {
          "fromId" : 11,
          "fromName" : "Join",
          "toId" : 10,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "Join",
          "toId" : 9,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "Project",
          "toId" : 8,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "Join",
          "toId" : 7,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Project",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Join",
          "toId" : 5,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Project",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Join",
          "toId" : 3,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Project",
          "toId" : 2,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "LocalLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "LocalLimit",
          "toId" : 0,
          "toName" : "GlobalLimit",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [customer_id#2950 ASC NULLS FIRST, customer_first_name#2951 ASC NULLS FIRST, customer_last_name#2952 ASC NULLS FIRST, customer_email_address#2956 ASC NULLS FIRST], true\n      +- Project [customer_id#2950, customer_first_name#2951, customer_last_name#2952, customer_email_address#2956]\n         +- Join Inner, ((customer_id#2821 = customer_id#2990) AND (CASE WHEN (year_total#2839 > 0.000000) THEN (year_total#2978 / year_total#2839) END > CASE WHEN (year_total#2849 > 0.000000) THEN (year_total#2998 / year_total#2849) END))\n            :- Project [customer_id#2821, customer_id#2950, customer_first_name#2951, customer_last_name#2952, customer_email_address#2956, year_total#2839, year_total#2978, year_total#2849]\n            :  +- Join Inner, (customer_id#2821 = customer_id#2841)\n            :     :- Project [customer_id#2821, customer_id#2950, customer_first_name#2951, customer_last_name#2952, customer_email_address#2956, year_total#2839, year_total#2978]\n            :     :  +- Join Inner, ((customer_id#2821 = customer_id#2970) AND (CASE WHEN (year_total#2839 > 0.000000) THEN (year_total#2978 / year_total#2839) END > CASE WHEN (year_total#2829 > 0.000000) THEN (year_total#2958 / year_total#2829) END))\n            :     :     :- Project [customer_id#2821, year_total#2829, customer_id#2950, customer_first_name#2951, customer_last_name#2952, customer_email_address#2956, year_total#2958, year_total#2839]\n            :     :     :  +- Join Inner, (customer_id#2821 = customer_id#2831)\n            :     :     :     :- Join Inner, (customer_id#2950 = customer_id#2821)\n            :     :     :     :  :- Filter (isnotnull(year_total#2829) AND (year_total#2829 > 0.000000))\n            :     :     :     :  :  +- Aggregate [c_customer_id#31, c_first_name#38, c_last_name#39, c_preferred_cust_flag#40, c_birth_country#44, c_login#45, c_email_address#46, d_year#77], [c_customer_id#31 AS customer_id#2821, sum(((((ss_ext_list_price#64 - ss_ext_wholesale_cost#63) - ss_ext_discount_amt#61) + ss_ext_sales_price#62) / 2)) AS year_total#2829]\n            :     :     :     :  :     +- Project [c_customer_id#31, c_first_name#38, c_last_name#39, c_preferred_cust_flag#40, c_birth_country#44, c_login#45, c_email_address#46, ss_ext_discount_amt#61, ss_ext_sales_price#62, ss_ext_wholesale_cost#63, ss_ext_list_price#64, d_year#77]\n            :     :     :     :  :        +- Join Inner, (c_customer_sk#30 = ss_customer_sk#50)\n            :     :     :     :  :           :- Project [ss_customer_sk#50, ss_ext_discount_amt#61, ss_ext_sales_price#62, ss_ext_wholesale_cost#63, ss_ext_list_price#64, d_year#77]\n            :     :     :     :  :           :  +- Join Inner, (ss_sold_date_sk#70 = d_date_sk#71)\n            :     :     :     :  :           :     :- Project [ss_customer_sk#50, ss_ext_discount_amt#61, ss_ext_sales_price#62, ss_ext_wholesale_cost#63, ss_ext_list_price#64, ss_sold_date_sk#70]\n            :     :     :     :  :           :     :  +- Filter ((isnotnull(ss_customer_sk#50) AND isnotnull(ss_sold_date_sk#70)) AND dynamicpruning#5494 [ss_sold_date_sk#70])\n            :     :     :     :  :           :     :     :  +- Project [d_date_sk#71, d_year#77]\n            :     :     :     :  :           :     :     :     +- Filter ((isnotnull(d_year#77) AND (d_year#77 = 2001)) AND isnotnull(d_date_sk#71))\n            :     :     :     :  :           :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#71,d_date_id#72,d_date#73,d_month_seq#74,d_week_seq#75,d_quarter_seq#76,d_year#77,d_dow#78,d_moy#79,d_dom#80,d_qoy#81,d_fy_year#82,d_fy_quarter_seq#83,d_fy_week_seq#84,d_day_name#85,d_quarter_name#86,d_holiday#87,d_weekend#88,d_following_holiday#89,d_first_dom#90,d_last_dom#91,d_same_day_ly#92,d_same_day_lq#93,d_current_day#94,... 4 more fields] parquet\n            :     :     :     :  :           :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#48,ss_item_sk#49,ss_customer_sk#50,ss_cdemo_sk#51,ss_hdemo_sk#52,ss_addr_sk#53,ss_store_sk#54,ss_promo_sk#55,ss_ticket_number#56L,ss_quantity#57,ss_wholesale_cost#58,ss_list_price#59,ss_sales_price#60,ss_ext_discount_amt#61,ss_ext_sales_price#62,ss_ext_wholesale_cost#63,ss_ext_list_price#64,ss_ext_tax#65,ss_coupon_amt#66,ss_net_paid#67,ss_net_paid_inc_tax#68,ss_net_profit#69,ss_sold_date_sk#70] parquet\n            :     :     :     :  :           :     +- Project [d_date_sk#71, d_year#77]\n            :     :     :     :  :           :        +- Filter ((isnotnull(d_year#77) AND (d_year#77 = 2001)) AND isnotnull(d_date_sk#71))\n            :     :     :     :  :           :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#71,d_date_id#72,d_date#73,d_month_seq#74,d_week_seq#75,d_quarter_seq#76,d_year#77,d_dow#78,d_moy#79,d_dom#80,d_qoy#81,d_fy_year#82,d_fy_quarter_seq#83,d_fy_week_seq#84,d_day_name#85,d_quarter_name#86,d_holiday#87,d_weekend#88,d_following_holiday#89,d_first_dom#90,d_last_dom#91,d_same_day_ly#92,d_same_day_lq#93,d_current_day#94,... 4 more fields] parquet\n            :     :     :     :  :           +- Project [c_customer_sk#30, c_customer_id#31, c_first_name#38, c_last_name#39, c_preferred_cust_flag#40, c_birth_country#44, c_login#45, c_email_address#46]\n            :     :     :     :  :              +- Filter (isnotnull(c_customer_sk#30) AND isnotnull(c_customer_id#31))\n            :     :     :     :  :                 +- Relation spark_catalog.tpcds_100.customer[c_customer_sk#30,c_customer_id#31,c_current_cdemo_sk#32,c_current_hdemo_sk#33,c_current_addr_sk#34,c_first_shipto_date_sk#35,c_first_sales_date_sk#36,c_salutation#37,c_first_name#38,c_last_name#39,c_preferred_cust_flag#40,c_birth_day#41,c_birth_month#42,c_birth_year#43,c_birth_country#44,c_login#45,c_email_address#46,c_last_review_date#47] parquet\n            :     :     :     :  +- Aggregate [c_customer_id#4200, c_first_name#4207, c_last_name#4208, c_preferred_cust_flag#4209, c_birth_country#4213, c_login#4214, c_email_address#4215, d_year#4246], [c_customer_id#4200 AS customer_id#2950, c_first_name#4207 AS customer_first_name#2951, c_last_name#4208 AS customer_last_name#2952, c_email_address#4215 AS customer_email_address#2956, sum(((((ss_ext_list_price#4233 - ss_ext_wholesale_cost#4232) - ss_ext_discount_amt#4230) + ss_ext_sales_price#4231) / 2)) AS year_total#2958]\n            :     :     :     :     +- Project [c_customer_id#4200, c_first_name#4207, c_last_name#4208, c_preferred_cust_flag#4209, c_birth_country#4213, c_login#4214, c_email_address#4215, ss_ext_discount_amt#4230, ss_ext_sales_price#4231, ss_ext_wholesale_cost#4232, ss_ext_list_price#4233, d_year#4246]\n            :     :     :     :        +- Join Inner, (c_customer_sk#4199 = ss_customer_sk#4219)\n            :     :     :     :           :- Project [ss_customer_sk#4219, ss_ext_discount_amt#4230, ss_ext_sales_price#4231, ss_ext_wholesale_cost#4232, ss_ext_list_price#4233, d_year#4246]\n            :     :     :     :           :  +- Join Inner, (ss_sold_date_sk#4239 = d_date_sk#4240)\n            :     :     :     :           :     :- Project [ss_customer_sk#4219, ss_ext_discount_amt#4230, ss_ext_sales_price#4231, ss_ext_wholesale_cost#4232, ss_ext_list_price#4233, ss_sold_date_sk#4239]\n            :     :     :     :           :     :  +- Filter ((isnotnull(ss_customer_sk#4219) AND isnotnull(ss_sold_date_sk#4239)) AND dynamicpruning#5495 [ss_sold_date_sk#4239])\n            :     :     :     :           :     :     :  +- Project [d_date_sk#4240, d_year#4246]\n            :     :     :     :           :     :     :     +- Filter ((isnotnull(d_year#4246) AND (d_year#4246 = 2002)) AND isnotnull(d_date_sk#4240))\n            :     :     :     :           :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#4240,d_date_id#4241,d_date#4242,d_month_seq#4243,d_week_seq#4244,d_quarter_seq#4245,d_year#4246,d_dow#4247,d_moy#4248,d_dom#4249,d_qoy#4250,d_fy_year#4251,d_fy_quarter_seq#4252,d_fy_week_seq#4253,d_day_name#4254,d_quarter_name#4255,d_holiday#4256,d_weekend#4257,d_following_holiday#4258,d_first_dom#4259,d_last_dom#4260,d_same_day_ly#4261,d_same_day_lq#4262,d_current_day#4263,... 4 more fields] parquet\n            :     :     :     :           :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#4217,ss_item_sk#4218,ss_customer_sk#4219,ss_cdemo_sk#4220,ss_hdemo_sk#4221,ss_addr_sk#4222,ss_store_sk#4223,ss_promo_sk#4224,ss_ticket_number#4225L,ss_quantity#4226,ss_wholesale_cost#4227,ss_list_price#4228,ss_sales_price#4229,ss_ext_discount_amt#4230,ss_ext_sales_price#4231,ss_ext_wholesale_cost#4232,ss_ext_list_price#4233,ss_ext_tax#4234,ss_coupon_amt#4235,ss_net_paid#4236,ss_net_paid_inc_tax#4237,ss_net_profit#4238,ss_sold_date_sk#4239] parquet\n            :     :     :     :           :     +- Project [d_date_sk#4240, d_year#4246]\n            :     :     :     :           :        +- Filter ((isnotnull(d_year#4246) AND (d_year#4246 = 2002)) AND isnotnull(d_date_sk#4240))\n            :     :     :     :           :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#4240,d_date_id#4241,d_date#4242,d_month_seq#4243,d_week_seq#4244,d_quarter_seq#4245,d_year#4246,d_dow#4247,d_moy#4248,d_dom#4249,d_qoy#4250,d_fy_year#4251,d_fy_quarter_seq#4252,d_fy_week_seq#4253,d_day_name#4254,d_quarter_name#4255,d_holiday#4256,d_weekend#4257,d_following_holiday#4258,d_first_dom#4259,d_last_dom#4260,d_same_day_ly#4261,d_same_day_lq#4262,d_current_day#4263,... 4 more fields] parquet\n            :     :     :     :           +- Project [c_customer_sk#4199, c_customer_id#4200, c_first_name#4207, c_last_name#4208, c_preferred_cust_flag#4209, c_birth_country#4213, c_login#4214, c_email_address#4215]\n            :     :     :     :              +- Filter (isnotnull(c_customer_sk#4199) AND isnotnull(c_customer_id#4200))\n            :     :     :     :                 +- Relation spark_catalog.tpcds_100.customer[c_customer_sk#4199,c_customer_id#4200,c_current_cdemo_sk#4201,c_current_hdemo_sk#4202,c_current_addr_sk#4203,c_first_shipto_date_sk#4204,c_first_sales_date_sk#4205,c_salutation#4206,c_first_name#4207,c_last_name#4208,c_preferred_cust_flag#4209,c_birth_day#4210,c_birth_month#4211,c_birth_year#4212,c_birth_country#4213,c_login#4214,c_email_address#4215,c_last_review_date#4216] parquet\n            :     :     :     +- Filter (isnotnull(year_total#2839) AND (year_total#2839 > 0.000000))\n            :     :     :        +- Aggregate [c_customer_id#4508, c_first_name#4515, c_last_name#4516, c_preferred_cust_flag#4517, c_birth_country#4521, c_login#4522, c_email_address#4523, d_year#4565], [c_customer_id#4508 AS customer_id#2831, sum(((((cs_ext_list_price#4549 - cs_ext_wholesale_cost#4548) - cs_ext_discount_amt#4546) + cs_ext_sales_price#4547) / 2)) AS year_total#2839]\n            :     :     :           +- Project [c_customer_id#4508, c_first_name#4515, c_last_name#4516, c_preferred_cust_flag#4517, c_birth_country#4521, c_login#4522, c_email_address#4523, cs_ext_discount_amt#4546, cs_ext_sales_price#4547, cs_ext_wholesale_cost#4548, cs_ext_list_price#4549, d_year#4565]\n            :     :     :              +- Join Inner, (c_customer_sk#4507 = cs_bill_customer_sk#4527)\n            :     :     :                 :- Project [cs_bill_customer_sk#4527, cs_ext_discount_amt#4546, cs_ext_sales_price#4547, cs_ext_wholesale_cost#4548, cs_ext_list_price#4549, d_year#4565]\n            :     :     :                 :  +- Join Inner, (cs_sold_date_sk#4558 = d_date_sk#4559)\n            :     :     :                 :     :- Project [cs_bill_customer_sk#4527, cs_ext_discount_amt#4546, cs_ext_sales_price#4547, cs_ext_wholesale_cost#4548, cs_ext_list_price#4549, cs_sold_date_sk#4558]\n            :     :     :                 :     :  +- Filter ((isnotnull(cs_bill_customer_sk#4527) AND isnotnull(cs_sold_date_sk#4558)) AND dynamicpruning#5496 [cs_sold_date_sk#4558])\n            :     :     :                 :     :     :  +- Project [d_date_sk#4559, d_year#4565]\n            :     :     :                 :     :     :     +- Filter ((isnotnull(d_year#4565) AND (d_year#4565 = 2001)) AND isnotnull(d_date_sk#4559))\n            :     :     :                 :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#4559,d_date_id#4560,d_date#4561,d_month_seq#4562,d_week_seq#4563,d_quarter_seq#4564,d_year#4565,d_dow#4566,d_moy#4567,d_dom#4568,d_qoy#4569,d_fy_year#4570,d_fy_quarter_seq#4571,d_fy_week_seq#4572,d_day_name#4573,d_quarter_name#4574,d_holiday#4575,d_weekend#4576,d_following_holiday#4577,d_first_dom#4578,d_last_dom#4579,d_same_day_ly#4580,d_same_day_lq#4581,d_current_day#4582,... 4 more fields] parquet\n            :     :     :                 :     :     +- Relation spark_catalog.tpcds_100.catalog_sales[cs_sold_time_sk#4525,cs_ship_date_sk#4526,cs_bill_customer_sk#4527,cs_bill_cdemo_sk#4528,cs_bill_hdemo_sk#4529,cs_bill_addr_sk#4530,cs_ship_customer_sk#4531,cs_ship_cdemo_sk#4532,cs_ship_hdemo_sk#4533,cs_ship_addr_sk#4534,cs_call_center_sk#4535,cs_catalog_page_sk#4536,cs_ship_mode_sk#4537,cs_warehouse_sk#4538,cs_item_sk#4539,cs_promo_sk#4540,cs_order_number#4541L,cs_quantity#4542,cs_wholesale_cost#4543,cs_list_price#4544,cs_sales_price#4545,cs_ext_discount_amt#4546,cs_ext_sales_price#4547,cs_ext_wholesale_cost#4548,... 10 more fields] parquet\n            :     :     :                 :     +- Project [d_date_sk#4559, d_year#4565]\n            :     :     :                 :        +- Filter ((isnotnull(d_year#4565) AND (d_year#4565 = 2001)) AND isnotnull(d_date_sk#4559))\n            :     :     :                 :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#4559,d_date_id#4560,d_date#4561,d_month_seq#4562,d_week_seq#4563,d_quarter_seq#4564,d_year#4565,d_dow#4566,d_moy#4567,d_dom#4568,d_qoy#4569,d_fy_year#4570,d_fy_quarter_seq#4571,d_fy_week_seq#4572,d_day_name#4573,d_quarter_name#4574,d_holiday#4575,d_weekend#4576,d_following_holiday#4577,d_first_dom#4578,d_last_dom#4579,d_same_day_ly#4580,d_same_day_lq#4581,d_current_day#4582,... 4 more fields] parquet\n            :     :     :                 +- Project [c_customer_sk#4507, c_customer_id#4508, c_first_name#4515, c_last_name#4516, c_preferred_cust_flag#4517, c_birth_country#4521, c_login#4522, c_email_address#4523]\n            :     :     :                    +- Filter (isnotnull(c_customer_sk#4507) AND isnotnull(c_customer_id#4508))\n            :     :     :                       +- Relation spark_catalog.tpcds_100.customer[c_customer_sk#4507,c_customer_id#4508,c_current_cdemo_sk#4509,c_current_hdemo_sk#4510,c_current_addr_sk#4511,c_first_shipto_date_sk#4512,c_first_sales_date_sk#4513,c_salutation#4514,c_first_name#4515,c_last_name#4516,c_preferred_cust_flag#4517,c_birth_day#4518,c_birth_month#4519,c_birth_year#4520,c_birth_country#4521,c_login#4522,c_email_address#4523,c_last_review_date#4524] parquet\n            :     :     +- Aggregate [c_customer_id#4747, c_first_name#4754, c_last_name#4755, c_preferred_cust_flag#4756, c_birth_country#4760, c_login#4761, c_email_address#4762, d_year#4804], [c_customer_id#4747 AS customer_id#2970, sum(((((cs_ext_list_price#4788 - cs_ext_wholesale_cost#4787) - cs_ext_discount_amt#4785) + cs_ext_sales_price#4786) / 2)) AS year_total#2978]\n            :     :        +- Project [c_customer_id#4747, c_first_name#4754, c_last_name#4755, c_preferred_cust_flag#4756, c_birth_country#4760, c_login#4761, c_email_address#4762, cs_ext_discount_amt#4785, cs_ext_sales_price#4786, cs_ext_wholesale_cost#4787, cs_ext_list_price#4788, d_year#4804]\n            :     :           +- Join Inner, (c_customer_sk#4746 = cs_bill_customer_sk#4766)\n            :     :              :- Project [cs_bill_customer_sk#4766, cs_ext_discount_amt#4785, cs_ext_sales_price#4786, cs_ext_wholesale_cost#4787, cs_ext_list_price#4788, d_year#4804]\n            :     :              :  +- Join Inner, (cs_sold_date_sk#4797 = d_date_sk#4798)\n            :     :              :     :- Project [cs_bill_customer_sk#4766, cs_ext_discount_amt#4785, cs_ext_sales_price#4786, cs_ext_wholesale_cost#4787, cs_ext_list_price#4788, cs_sold_date_sk#4797]\n            :     :              :     :  +- Filter ((isnotnull(cs_bill_customer_sk#4766) AND isnotnull(cs_sold_date_sk#4797)) AND dynamicpruning#5497 [cs_sold_date_sk#4797])\n            :     :              :     :     :  +- Project [d_date_sk#4798, d_year#4804]\n            :     :              :     :     :     +- Filter ((isnotnull(d_year#4804) AND (d_year#4804 = 2002)) AND isnotnull(d_date_sk#4798))\n            :     :              :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#4798,d_date_id#4799,d_date#4800,d_month_seq#4801,d_week_seq#4802,d_quarter_seq#4803,d_year#4804,d_dow#4805,d_moy#4806,d_dom#4807,d_qoy#4808,d_fy_year#4809,d_fy_quarter_seq#4810,d_fy_week_seq#4811,d_day_name#4812,d_quarter_name#4813,d_holiday#4814,d_weekend#4815,d_following_holiday#4816,d_first_dom#4817,d_last_dom#4818,d_same_day_ly#4819,d_same_day_lq#4820,d_current_day#4821,... 4 more fields] parquet\n            :     :              :     :     +- Relation spark_catalog.tpcds_100.catalog_sales[cs_sold_time_sk#4764,cs_ship_date_sk#4765,cs_bill_customer_sk#4766,cs_bill_cdemo_sk#4767,cs_bill_hdemo_sk#4768,cs_bill_addr_sk#4769,cs_ship_customer_sk#4770,cs_ship_cdemo_sk#4771,cs_ship_hdemo_sk#4772,cs_ship_addr_sk#4773,cs_call_center_sk#4774,cs_catalog_page_sk#4775,cs_ship_mode_sk#4776,cs_warehouse_sk#4777,cs_item_sk#4778,cs_promo_sk#4779,cs_order_number#4780L,cs_quantity#4781,cs_wholesale_cost#4782,cs_list_price#4783,cs_sales_price#4784,cs_ext_discount_amt#4785,cs_ext_sales_price#4786,cs_ext_wholesale_cost#4787,... 10 more fields] parquet\n            :     :              :     +- Project [d_date_sk#4798, d_year#4804]\n            :     :              :        +- Filter ((isnotnull(d_year#4804) AND (d_year#4804 = 2002)) AND isnotnull(d_date_sk#4798))\n            :     :              :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#4798,d_date_id#4799,d_date#4800,d_month_seq#4801,d_week_seq#4802,d_quarter_seq#4803,d_year#4804,d_dow#4805,d_moy#4806,d_dom#4807,d_qoy#4808,d_fy_year#4809,d_fy_quarter_seq#4810,d_fy_week_seq#4811,d_day_name#4812,d_quarter_name#4813,d_holiday#4814,d_weekend#4815,d_following_holiday#4816,d_first_dom#4817,d_last_dom#4818,d_same_day_ly#4819,d_same_day_lq#4820,d_current_day#4821,... 4 more fields] parquet\n            :     :              +- Project [c_customer_sk#4746, c_customer_id#4747, c_first_name#4754, c_last_name#4755, c_preferred_cust_flag#4756, c_birth_country#4760, c_login#4761, c_email_address#4762]\n            :     :                 +- Filter (isnotnull(c_customer_sk#4746) AND isnotnull(c_customer_id#4747))\n            :     :                    +- Relation spark_catalog.tpcds_100.customer[c_customer_sk#4746,c_customer_id#4747,c_current_cdemo_sk#4748,c_current_hdemo_sk#4749,c_current_addr_sk#4750,c_first_shipto_date_sk#4751,c_first_sales_date_sk#4752,c_salutation#4753,c_first_name#4754,c_last_name#4755,c_preferred_cust_flag#4756,c_birth_day#4757,c_birth_month#4758,c_birth_year#4759,c_birth_country#4760,c_login#4761,c_email_address#4762,c_last_review_date#4763] parquet\n            :     +- Filter (isnotnull(year_total#2849) AND (year_total#2849 > 0.000000))\n            :        +- Aggregate [c_customer_id#5066, c_first_name#5073, c_last_name#5074, c_preferred_cust_flag#5075, c_birth_country#5079, c_login#5080, c_email_address#5081, d_year#5123], [c_customer_id#5066 AS customer_id#2841, sum(((((ws_ext_list_price#5107 - ws_ext_wholesale_cost#5106) - ws_ext_discount_amt#5104) + ws_ext_sales_price#5105) / 2)) AS year_total#2849]\n            :           +- Project [c_customer_id#5066, c_first_name#5073, c_last_name#5074, c_preferred_cust_flag#5075, c_birth_country#5079, c_login#5080, c_email_address#5081, ws_ext_discount_amt#5104, ws_ext_sales_price#5105, ws_ext_wholesale_cost#5106, ws_ext_list_price#5107, d_year#5123]\n            :              +- Join Inner, (c_customer_sk#5065 = ws_bill_customer_sk#5086)\n            :                 :- Project [ws_bill_customer_sk#5086, ws_ext_discount_amt#5104, ws_ext_sales_price#5105, ws_ext_wholesale_cost#5106, ws_ext_list_price#5107, d_year#5123]\n            :                 :  +- Join Inner, (ws_sold_date_sk#5116 = d_date_sk#5117)\n            :                 :     :- Project [ws_bill_customer_sk#5086, ws_ext_discount_amt#5104, ws_ext_sales_price#5105, ws_ext_wholesale_cost#5106, ws_ext_list_price#5107, ws_sold_date_sk#5116]\n            :                 :     :  +- Filter ((isnotnull(ws_bill_customer_sk#5086) AND isnotnull(ws_sold_date_sk#5116)) AND dynamicpruning#5498 [ws_sold_date_sk#5116])\n            :                 :     :     :  +- Project [d_date_sk#5117, d_year#5123]\n            :                 :     :     :     +- Filter ((isnotnull(d_year#5123) AND (d_year#5123 = 2001)) AND isnotnull(d_date_sk#5117))\n            :                 :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#5117,d_date_id#5118,d_date#5119,d_month_seq#5120,d_week_seq#5121,d_quarter_seq#5122,d_year#5123,d_dow#5124,d_moy#5125,d_dom#5126,d_qoy#5127,d_fy_year#5128,d_fy_quarter_seq#5129,d_fy_week_seq#5130,d_day_name#5131,d_quarter_name#5132,d_holiday#5133,d_weekend#5134,d_following_holiday#5135,d_first_dom#5136,d_last_dom#5137,d_same_day_ly#5138,d_same_day_lq#5139,d_current_day#5140,... 4 more fields] parquet\n            :                 :     :     +- Relation spark_catalog.tpcds_100.web_sales[ws_sold_time_sk#5083,ws_ship_date_sk#5084,ws_item_sk#5085,ws_bill_customer_sk#5086,ws_bill_cdemo_sk#5087,ws_bill_hdemo_sk#5088,ws_bill_addr_sk#5089,ws_ship_customer_sk#5090,ws_ship_cdemo_sk#5091,ws_ship_hdemo_sk#5092,ws_ship_addr_sk#5093,ws_web_page_sk#5094,ws_web_site_sk#5095,ws_ship_mode_sk#5096,ws_warehouse_sk#5097,ws_promo_sk#5098,ws_order_number#5099L,ws_quantity#5100,ws_wholesale_cost#5101,ws_list_price#5102,ws_sales_price#5103,ws_ext_discount_amt#5104,ws_ext_sales_price#5105,ws_ext_wholesale_cost#5106,... 10 more fields] parquet\n            :                 :     +- Project [d_date_sk#5117, d_year#5123]\n            :                 :        +- Filter ((isnotnull(d_year#5123) AND (d_year#5123 = 2001)) AND isnotnull(d_date_sk#5117))\n            :                 :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#5117,d_date_id#5118,d_date#5119,d_month_seq#5120,d_week_seq#5121,d_quarter_seq#5122,d_year#5123,d_dow#5124,d_moy#5125,d_dom#5126,d_qoy#5127,d_fy_year#5128,d_fy_quarter_seq#5129,d_fy_week_seq#5130,d_day_name#5131,d_quarter_name#5132,d_holiday#5133,d_weekend#5134,d_following_holiday#5135,d_first_dom#5136,d_last_dom#5137,d_same_day_ly#5138,d_same_day_lq#5139,d_current_day#5140,... 4 more fields] parquet\n            :                 +- Project [c_customer_sk#5065, c_customer_id#5066, c_first_name#5073, c_last_name#5074, c_preferred_cust_flag#5075, c_birth_country#5079, c_login#5080, c_email_address#5081]\n            :                    +- Filter (isnotnull(c_customer_sk#5065) AND isnotnull(c_customer_id#5066))\n            :                       +- Relation spark_catalog.tpcds_100.customer[c_customer_sk#5065,c_customer_id#5066,c_current_cdemo_sk#5067,c_current_hdemo_sk#5068,c_current_addr_sk#5069,c_first_shipto_date_sk#5070,c_first_sales_date_sk#5071,c_salutation#5072,c_first_name#5073,c_last_name#5074,c_preferred_cust_flag#5075,c_birth_day#5076,c_birth_month#5077,c_birth_year#5078,c_birth_country#5079,c_login#5080,c_email_address#5081,c_last_review_date#5082] parquet\n            +- Aggregate [c_customer_id#5305, c_first_name#5312, c_last_name#5313, c_preferred_cust_flag#5314, c_birth_country#5318, c_login#5319, c_email_address#5320, d_year#5362], [c_customer_id#5305 AS customer_id#2990, sum(((((ws_ext_list_price#5346 - ws_ext_wholesale_cost#5345) - ws_ext_discount_amt#5343) + ws_ext_sales_price#5344) / 2)) AS year_total#2998]\n               +- Project [c_customer_id#5305, c_first_name#5312, c_last_name#5313, c_preferred_cust_flag#5314, c_birth_country#5318, c_login#5319, c_email_address#5320, ws_ext_discount_amt#5343, ws_ext_sales_price#5344, ws_ext_wholesale_cost#5345, ws_ext_list_price#5346, d_year#5362]\n                  +- Join Inner, (c_customer_sk#5304 = ws_bill_customer_sk#5325)\n                     :- Project [ws_bill_customer_sk#5325, ws_ext_discount_amt#5343, ws_ext_sales_price#5344, ws_ext_wholesale_cost#5345, ws_ext_list_price#5346, d_year#5362]\n                     :  +- Join Inner, (ws_sold_date_sk#5355 = d_date_sk#5356)\n                     :     :- Project [ws_bill_customer_sk#5325, ws_ext_discount_amt#5343, ws_ext_sales_price#5344, ws_ext_wholesale_cost#5345, ws_ext_list_price#5346, ws_sold_date_sk#5355]\n                     :     :  +- Filter ((isnotnull(ws_bill_customer_sk#5325) AND isnotnull(ws_sold_date_sk#5355)) AND dynamicpruning#5499 [ws_sold_date_sk#5355])\n                     :     :     :  +- Project [d_date_sk#5356, d_year#5362]\n                     :     :     :     +- Filter ((isnotnull(d_year#5362) AND (d_year#5362 = 2002)) AND isnotnull(d_date_sk#5356))\n                     :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#5356,d_date_id#5357,d_date#5358,d_month_seq#5359,d_week_seq#5360,d_quarter_seq#5361,d_year#5362,d_dow#5363,d_moy#5364,d_dom#5365,d_qoy#5366,d_fy_year#5367,d_fy_quarter_seq#5368,d_fy_week_seq#5369,d_day_name#5370,d_quarter_name#5371,d_holiday#5372,d_weekend#5373,d_following_holiday#5374,d_first_dom#5375,d_last_dom#5376,d_same_day_ly#5377,d_same_day_lq#5378,d_current_day#5379,... 4 more fields] parquet\n                     :     :     +- Relation spark_catalog.tpcds_100.web_sales[ws_sold_time_sk#5322,ws_ship_date_sk#5323,ws_item_sk#5324,ws_bill_customer_sk#5325,ws_bill_cdemo_sk#5326,ws_bill_hdemo_sk#5327,ws_bill_addr_sk#5328,ws_ship_customer_sk#5329,ws_ship_cdemo_sk#5330,ws_ship_hdemo_sk#5331,ws_ship_addr_sk#5332,ws_web_page_sk#5333,ws_web_site_sk#5334,ws_ship_mode_sk#5335,ws_warehouse_sk#5336,ws_promo_sk#5337,ws_order_number#5338L,ws_quantity#5339,ws_wholesale_cost#5340,ws_list_price#5341,ws_sales_price#5342,ws_ext_discount_amt#5343,ws_ext_sales_price#5344,ws_ext_wholesale_cost#5345,... 10 more fields] parquet\n                     :     +- Project [d_date_sk#5356, d_year#5362]\n                     :        +- Filter ((isnotnull(d_year#5362) AND (d_year#5362 = 2002)) AND isnotnull(d_date_sk#5356))\n                     :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#5356,d_date_id#5357,d_date#5358,d_month_seq#5359,d_week_seq#5360,d_quarter_seq#5361,d_year#5362,d_dow#5363,d_moy#5364,d_dom#5365,d_qoy#5366,d_fy_year#5367,d_fy_quarter_seq#5368,d_fy_week_seq#5369,d_day_name#5370,d_quarter_name#5371,d_holiday#5372,d_weekend#5373,d_following_holiday#5374,d_first_dom#5375,d_last_dom#5376,d_same_day_ly#5377,d_same_day_lq#5378,d_current_day#5379,... 4 more fields] parquet\n                     +- Project [c_customer_sk#5304, c_customer_id#5305, c_first_name#5312, c_last_name#5313, c_preferred_cust_flag#5314, c_birth_country#5318, c_login#5319, c_email_address#5320]\n                        +- Filter (isnotnull(c_customer_sk#5304) AND isnotnull(c_customer_id#5305))\n                           +- Relation spark_catalog.tpcds_100.customer[c_customer_sk#5304,c_customer_id#5305,c_current_cdemo_sk#5306,c_current_hdemo_sk#5307,c_current_addr_sk#5308,c_first_shipto_date_sk#5309,c_first_sales_date_sk#5310,c_salutation#5311,c_first_name#5312,c_last_name#5313,c_preferred_cust_flag#5314,c_birth_day#5315,c_birth_month#5316,c_birth_year#5317,c_birth_country#5318,c_login#5319,c_email_address#5320,c_last_review_date#5321] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "12" : {
            "sign" : 1147736664,
            "className" : "org.apache.spark.sql.execution.SortExec",
            "sizeInBytes" : -1,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Input [5]: [customer_id#2950, customer_first_name#2951, customer_last_name#2952, customer_email_address#2956, year_total#2958] Arguments: [customer_id#2950 ASC NULLS FIRST], false, 0 "
          },
          "8" : {
            "sign" : -50342935,
            "className" : "org.apache.spark.sql.execution.joins.SortMergeJoinExec",
            "sizeInBytes" : 586797201160303,
            "rowCount" : 2704134567559,
            "isRuntime" : false,
            "predicate" : " (unknown) SortMergeJoin Left keys [1]: [customer_id#2821] Right keys [1]: [customer_id#2831] Join type: Inner Join condition: None "
          },
          "19" : {
            "sign" : 1548655589,
            "className" : "org.apache.spark.sql.execution.adaptive.ShuffleQueryStageExec",
            "sizeInBytes" : 49646632,
            "rowCount" : 886547,
            "isRuntime" : true,
            "predicate" : " (unknown) ShuffleQueryStage Output [2]: [customer_id#2841, year_total#2849] Arguments: 34 "
          },
          "4" : {
            "sign" : -311986923,
            "className" : "org.apache.spark.sql.execution.joins.SortMergeJoinExec",
            "sizeInBytes" : 1517408473024419143,
            "rowCount" : 6992665774306079,
            "isRuntime" : false,
            "predicate" : " (unknown) SortMergeJoin Left keys [1]: [customer_id#2821] Right keys [1]: [customer_id#2841] Join type: Inner Join condition: None "
          },
          "15" : {
            "sign" : 1612265107,
            "className" : "org.apache.spark.sql.execution.adaptive.ShuffleQueryStageExec",
            "sizeInBytes" : 87399816,
            "rowCount" : 1560711,
            "isRuntime" : true,
            "predicate" : " (unknown) ShuffleQueryStage Output [2]: [customer_id#2831, year_total#2839] Arguments: 35 "
          },
          "11" : {
            "sign" : 165177869,
            "className" : "org.apache.spark.sql.execution.adaptive.ShuffleQueryStageExec",
            "sizeInBytes" : 101735088,
            "rowCount" : 1816698,
            "isRuntime" : true,
            "predicate" : " (unknown) ShuffleQueryStage Output [2]: [customer_id#2821, year_total#2829] Arguments: 33 "
          },
          "9" : {
            "sign" : -526070961,
            "className" : "org.apache.spark.sql.execution.joins.SortMergeJoinExec",
            "sizeInBytes" : 6543653635943,
            "rowCount" : 37824587491,
            "isRuntime" : false,
            "predicate" : " (unknown) SortMergeJoin Left keys [1]: [customer_id#2821] Right keys [1]: [customer_id#2950] Join type: Inner Join condition: None "
          },
          "13" : {
            "sign" : -33450931,
            "className" : "org.apache.spark.sql.execution.adaptive.ShuffleQueryStageExec",
            "sizeInBytes" : 229498456,
            "rowCount" : 1819089,
            "isRuntime" : true,
            "predicate" : " (unknown) ShuffleQueryStage Output [5]: [customer_id#2950, customer_first_name#2951, customer_last_name#2952, customer_email_address#2956, year_total#2958] Arguments: 36 "
          },
          "16" : {
            "sign" : -823788021,
            "className" : "org.apache.spark.sql.execution.SortExec",
            "sizeInBytes" : -1,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Input [2]: [customer_id#2970, year_total#2978] Arguments: [customer_id#2970 ASC NULLS FIRST], false, 0 "
          },
          "5" : {
            "sign" : 760920163,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 33444792244960286,
            "rowCount" : 193322498525782,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [7]: [customer_id#2821, customer_id#2950, customer_first_name#2951, customer_last_name#2952, customer_email_address#2956, year_total#2839, year_total#2978] Input [10]: [customer_id#2821, year_total#2829, customer_id#2950, customer_first_name#2951, customer_last_name#2952, customer_email_address#2956, year_total#2958, year_total#2839, customer_id#2970, year_total#2978] "
          },
          "10" : {
            "sign" : -1050329589,
            "className" : "org.apache.spark.sql.execution.SortExec",
            "sizeInBytes" : -1,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Input [2]: [customer_id#2821, year_total#2829] Arguments: [customer_id#2821 ASC NULLS FIRST], false, 0 "
          },
          "21" : {
            "sign" : 630990025,
            "className" : "org.apache.spark.sql.execution.adaptive.ShuffleQueryStageExec",
            "sizeInBytes" : 50524824,
            "rowCount" : 902229,
            "isRuntime" : true,
            "predicate" : " (unknown) ShuffleQueryStage Output [2]: [customer_id#2990, year_total#2998] Arguments: 37 "
          },
          "6" : {
            "sign" : 1695076095,
            "className" : "org.apache.spark.sql.execution.joins.SortMergeJoinExec",
            "sizeInBytes" : 45044142156507206,
            "rowCount" : 193322498525782,
            "isRuntime" : false,
            "predicate" : " (unknown) SortMergeJoin Left keys [1]: [customer_id#2821] Right keys [1]: [customer_id#2970] Join type: Inner Join condition: (CASE WHEN (year_total#2839 > 0.000000) THEN (year_total#2978 / year_total#2839) END > CASE WHEN (year_total#2829 > 0.000000) THEN (year_total#2958 / year_total#2829) END) "
          },
          "1" : {
            "sign" : 888500276,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 28581274168579255796,
            "rowCount" : 252931629810435892,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [4]: [customer_id#2950, customer_first_name#2951, customer_last_name#2952, customer_email_address#2956] Input [10]: [customer_id#2821, customer_id#2950, customer_first_name#2951, customer_last_name#2952, customer_email_address#2956, year_total#2839, year_total#2978, year_total#2849, customer_id#2990, year_total#2998] "
          },
          "17" : {
            "sign" : -1304606142,
            "className" : "org.apache.spark.sql.execution.adaptive.ShuffleQueryStageExec",
            "sizeInBytes" : 89254816,
            "rowCount" : 1593836,
            "isRuntime" : true,
            "predicate" : " (unknown) ShuffleQueryStage Output [2]: [customer_id#2970, year_total#2978] Arguments: 38 "
          },
          "14" : {
            "sign" : -1835099080,
            "className" : "org.apache.spark.sql.execution.SortExec",
            "sizeInBytes" : -1,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Input [2]: [customer_id#2831, year_total#2839] Arguments: [customer_id#2831 ASC NULLS FIRST], false, 0 "
          },
          "0" : {
            "sign" : -918332900,
            "className" : "org.apache.spark.sql.execution.TakeOrderedAndProjectExec",
            "sizeInBytes" : 8800,
            "rowCount" : 100,
            "isRuntime" : false,
            "predicate" : " (unknown) TakeOrderedAndProject Input [4]: [customer_id#2950, customer_first_name#2951, customer_last_name#2952, customer_email_address#2956] Arguments: 100, [customer_id#2950 ASC NULLS FIRST, customer_first_name#2951 ASC NULLS FIRST, customer_last_name#2952 ASC NULLS FIRST, customer_email_address#2956 ASC NULLS FIRST], [customer_id#2950, customer_first_name#2951, customer_last_name#2952, customer_email_address#2956] "
          },
          "20" : {
            "sign" : -1672962808,
            "className" : "org.apache.spark.sql.execution.SortExec",
            "sizeInBytes" : -1,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Input [2]: [customer_id#2990, year_total#2998] Arguments: [customer_id#2990 ASC NULLS FIRST], false, 0 "
          },
          "2" : {
            "sign" : 621457410,
            "className" : "org.apache.spark.sql.execution.joins.SortMergeJoinExec",
            "sizeInBytes" : 58933069745831562836,
            "rowCount" : 252931629810435892,
            "isRuntime" : false,
            "predicate" : " (unknown) SortMergeJoin Left keys [1]: [customer_id#2821] Right keys [1]: [customer_id#2990] Join type: Inner Join condition: (CASE WHEN (year_total#2839 > 0.000000) THEN (year_total#2978 / year_total#2839) END > CASE WHEN (year_total#2849 > 0.000000) THEN (year_total#2998 / year_total#2849) END) "
          },
          "18" : {
            "sign" : 1791231429,
            "className" : "org.apache.spark.sql.execution.SortExec",
            "sizeInBytes" : -1,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Input [2]: [customer_id#2841, year_total#2849] Arguments: [customer_id#2841 ASC NULLS FIRST], false, 0 "
          },
          "7" : {
            "sign" : -144551719,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 511081433268651,
            "rowCount" : 2704134567559,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [8]: [customer_id#2821, year_total#2829, customer_id#2950, customer_first_name#2951, customer_last_name#2952, customer_email_address#2956, year_total#2958, year_total#2839] Input [9]: [customer_id#2821, year_total#2829, customer_id#2950, customer_first_name#2951, customer_last_name#2952, customer_email_address#2956, year_total#2958, customer_id#2831, year_total#2839] "
          },
          "3" : {
            "sign" : 1234001215,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 1321613831343848931,
            "rowCount" : 6992665774306079,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [8]: [customer_id#2821, customer_id#2950, customer_first_name#2951, customer_last_name#2952, customer_email_address#2956, year_total#2839, year_total#2978, year_total#2849] Input [9]: [customer_id#2821, customer_id#2950, customer_first_name#2951, customer_last_name#2952, customer_email_address#2956, year_total#2839, year_total#2978, customer_id#2841, year_total#2849] "
          }
        },
        "links" : [ {
          "fromId" : 11,
          "fromName" : "ShuffleQueryStage",
          "toId" : 10,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "Sort",
          "toId" : 9,
          "toName" : "SortMergeJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 13,
          "fromName" : "ShuffleQueryStage",
          "toId" : 12,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 12,
          "fromName" : "Sort",
          "toId" : 9,
          "toName" : "SortMergeJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "SortMergeJoin",
          "toId" : 8,
          "toName" : "SortMergeJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 15,
          "fromName" : "ShuffleQueryStage",
          "toId" : 14,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 14,
          "fromName" : "Sort",
          "toId" : 8,
          "toName" : "SortMergeJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "SortMergeJoin",
          "toId" : 7,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Project",
          "toId" : 6,
          "toName" : "SortMergeJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 17,
          "fromName" : "ShuffleQueryStage",
          "toId" : 16,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 16,
          "fromName" : "Sort",
          "toId" : 6,
          "toName" : "SortMergeJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "SortMergeJoin",
          "toId" : 5,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Project",
          "toId" : 4,
          "toName" : "SortMergeJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 19,
          "fromName" : "ShuffleQueryStage",
          "toId" : 18,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 18,
          "fromName" : "Sort",
          "toId" : 4,
          "toName" : "SortMergeJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "SortMergeJoin",
          "toId" : 3,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Project",
          "toId" : 2,
          "toName" : "SortMergeJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 21,
          "fromName" : "ShuffleQueryStage",
          "toId" : 20,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 20,
          "fromName" : "Sort",
          "toId" : 2,
          "toName" : "SortMergeJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "SortMergeJoin",
          "toId" : 1,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Project",
          "toId" : 0,
          "toName" : "TakeOrderedAndProject",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "TakeOrderedAndProject(limit=100, orderBy=[customer_id#2950 ASC NULLS FIRST,customer_first_name#2951 ASC NULLS FIRST,customer_last_name#2952 ASC NULLS FIRST,customer_email_address#2956 ASC NULLS FIRST], output=[customer_id#2950,customer_first_name#2951,customer_last_name#2952,customer_email_address#2956])\n+- Project [customer_id#2950, customer_first_name#2951, customer_last_name#2952, customer_email_address#2956]\n   +- SortMergeJoin [customer_id#2821], [customer_id#2990], Inner, (CASE WHEN (year_total#2839 > 0.000000) THEN (year_total#2978 / year_total#2839) END > CASE WHEN (year_total#2849 > 0.000000) THEN (year_total#2998 / year_total#2849) END)\n      :- Project [customer_id#2821, customer_id#2950, customer_first_name#2951, customer_last_name#2952, customer_email_address#2956, year_total#2839, year_total#2978, year_total#2849]\n      :  +- SortMergeJoin [customer_id#2821], [customer_id#2841], Inner\n      :     :- Project [customer_id#2821, customer_id#2950, customer_first_name#2951, customer_last_name#2952, customer_email_address#2956, year_total#2839, year_total#2978]\n      :     :  +- SortMergeJoin [customer_id#2821], [customer_id#2970], Inner, (CASE WHEN (year_total#2839 > 0.000000) THEN (year_total#2978 / year_total#2839) END > CASE WHEN (year_total#2829 > 0.000000) THEN (year_total#2958 / year_total#2829) END)\n      :     :     :- Project [customer_id#2821, year_total#2829, customer_id#2950, customer_first_name#2951, customer_last_name#2952, customer_email_address#2956, year_total#2958, year_total#2839]\n      :     :     :  +- SortMergeJoin [customer_id#2821], [customer_id#2831], Inner\n      :     :     :     :- SortMergeJoin [customer_id#2821], [customer_id#2950], Inner\n      :     :     :     :  :- Sort [customer_id#2821 ASC NULLS FIRST], false, 0\n      :     :     :     :  :  +- ShuffleQueryStage 33\n      :     :     :     :  :     +- Exchange hashpartitioning(customer_id#2821, 200), ENSURE_REQUIREMENTS, [plan_id=4301]\n      :     :     :     :  :        +- *(37) Filter (isnotnull(year_total#2829) AND (year_total#2829 > 0.000000))\n      :     :     :     :  :           +- *(37) HashAggregate(keys=[c_customer_id#31, c_first_name#38, c_last_name#39, c_preferred_cust_flag#40, c_birth_country#44, c_login#45, c_email_address#46, d_year#77], functions=[sum(((((ss_ext_list_price#64 - ss_ext_wholesale_cost#63) - ss_ext_discount_amt#61) + ss_ext_sales_price#62) / 2))], output=[customer_id#2821, year_total#2829])\n      :     :     :     :  :              +- AQEShuffleRead coalesced\n      :     :     :     :  :                 +- ShuffleQueryStage 27\n      :     :     :     :  :                    +- Exchange hashpartitioning(c_customer_id#31, c_first_name#38, c_last_name#39, c_preferred_cust_flag#40, c_birth_country#44, c_login#45, c_email_address#46, d_year#77, 200), ENSURE_REQUIREMENTS, [plan_id=3148]\n      :     :     :     :  :                       +- *(21) HashAggregate(keys=[c_customer_id#31, c_first_name#38, c_last_name#39, c_preferred_cust_flag#40, c_birth_country#44, c_login#45, c_email_address#46, d_year#77], functions=[partial_sum(((((ss_ext_list_price#64 - ss_ext_wholesale_cost#63) - ss_ext_discount_amt#61) + ss_ext_sales_price#62) / 2))], output=[c_customer_id#31, c_first_name#38, c_last_name#39, c_preferred_cust_flag#40, c_birth_country#44, c_login#45, c_email_address#46, d_year#77, sum#5502, isEmpty#5503])\n      :     :     :     :  :                          +- *(21) Project [c_customer_id#31, c_first_name#38, c_last_name#39, c_preferred_cust_flag#40, c_birth_country#44, c_login#45, c_email_address#46, ss_ext_discount_amt#61, ss_ext_sales_price#62, ss_ext_wholesale_cost#63, ss_ext_list_price#64, d_year#77]\n      :     :     :     :  :                             +- *(21) SortMergeJoin [ss_customer_sk#50], [c_customer_sk#30], Inner\n      :     :     :     :  :                                :- *(19) Sort [ss_customer_sk#50 ASC NULLS FIRST], false, 0\n      :     :     :     :  :                                :  +- AQEShuffleRead coalesced\n      :     :     :     :  :                                :     +- ShuffleQueryStage 21\n      :     :     :     :  :                                :        +- Exchange hashpartitioning(ss_customer_sk#50, 200), ENSURE_REQUIREMENTS, [plan_id=1605]\n      :     :     :     :  :                                :           +- *(13) Project [ss_customer_sk#50, ss_ext_discount_amt#61, ss_ext_sales_price#62, ss_ext_wholesale_cost#63, ss_ext_list_price#64, d_year#77]\n      :     :     :     :  :                                :              +- *(13) BroadcastHashJoin [ss_sold_date_sk#70], [d_date_sk#71], Inner, BuildRight, false\n      :     :     :     :  :                                :                 :- *(13) Filter isnotnull(ss_customer_sk#50)\n      :     :     :     :  :                                :                 :  +- *(13) ColumnarToRow\n      :     :     :     :  :                                :                 :     +- FileScan parquet spark_catalog.tpcds_100.store_sales[ss_customer_sk#50,ss_ext_discount_amt#61,ss_ext_sales_price#62,ss_ext_wholesale_cost#63,ss_ext_list_price#64,ss_sold_date_sk#70] Batched: true, DataFilters: [isnotnull(ss_customer_sk#50)], Format: Parquet, Location: InMemoryFileIndex(1823 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/store_..., PartitionFilters: [isnotnull(ss_sold_date_sk#70), dynamicpruningexpression(ss_sold_date_sk#70 IN dynamicpruning#5494)], PushedFilters: [IsNotNull(ss_customer_sk)], ReadSchema: struct<ss_customer_sk:int,ss_ext_discount_amt:decimal(7,2),ss_ext_sales_price:decimal(7,2),ss_ext...\n      :     :     :     :  :                                :                 :           +- SubqueryBroadcast dynamicpruning#5494, 0, [d_date_sk#71], [id=#1579]\n      :     :     :     :  :                                :                 :              +- AdaptiveSparkPlan isFinalPlan=true\n                                                                                                +- == Final Plan ==\n                                                                                                   BroadcastQueryStage 1\n                                                                                                   +- ReusedExchange [d_date_sk#71, d_year#77], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=662]\n                                                                                                +- == Initial Plan ==\n                                                                                                   BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=1576]\n                                                                                                   +- Filter ((isnotnull(d_year#77) AND (d_year#77 = 2001)) AND isnotnull(d_date_sk#71))\n                                                                                                      +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#71,d_year#77] Batched: true, DataFilters: [isnotnull(d_year#77), (d_year#77 = 2001), isnotnull(d_date_sk#71)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), EqualTo(d_year,2001), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>\n      :     :     :     :  :                                :                 +- BroadcastQueryStage 0\n      :     :     :     :  :                                :                    +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=662]\n      :     :     :     :  :                                :                       +- *(1) Filter ((isnotnull(d_year#77) AND (d_year#77 = 2001)) AND isnotnull(d_date_sk#71))\n      :     :     :     :  :                                :                          +- *(1) ColumnarToRow\n      :     :     :     :  :                                :                             +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#71,d_year#77] Batched: true, DataFilters: [isnotnull(d_year#77), (d_year#77 = 2001), isnotnull(d_date_sk#71)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), EqualTo(d_year,2001), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>\n      :     :     :     :  :                                +- *(20) Sort [c_customer_sk#30 ASC NULLS FIRST], false, 0\n      :     :     :     :  :                                   +- AQEShuffleRead coalesced\n      :     :     :     :  :                                      +- ShuffleQueryStage 1\n      :     :     :     :  :                                         +- Exchange hashpartitioning(c_customer_sk#30, 200), ENSURE_REQUIREMENTS, [plan_id=681]\n      :     :     :     :  :                                            +- *(2) Filter (isnotnull(c_customer_sk#30) AND isnotnull(c_customer_id#31))\n      :     :     :     :  :                                               +- *(2) ColumnarToRow\n      :     :     :     :  :                                                  +- FileScan parquet spark_catalog.tpcds_100.customer[c_customer_sk#30,c_customer_id#31,c_first_name#38,c_last_name#39,c_preferred_cust_flag#40,c_birth_country#44,c_login#45,c_email_address#46] Batched: true, DataFilters: [isnotnull(c_customer_sk#30), isnotnull(c_customer_id#31)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/customer], PartitionFilters: [], PushedFilters: [IsNotNull(c_customer_sk), IsNotNull(c_customer_id)], ReadSchema: struct<c_customer_sk:int,c_customer_id:string,c_first_name:string,c_last_name:string,c_preferred_...\n      :     :     :     :  +- Sort [customer_id#2950 ASC NULLS FIRST], false, 0\n      :     :     :     :     +- ShuffleQueryStage 36\n      :     :     :     :        +- Exchange hashpartitioning(customer_id#2950, 200), ENSURE_REQUIREMENTS, [plan_id=4603]\n      :     :     :     :           +- *(40) HashAggregate(keys=[c_customer_id#4200, c_first_name#4207, c_last_name#4208, c_preferred_cust_flag#4209, c_birth_country#4213, c_login#4214, c_email_address#4215, d_year#4246], functions=[sum(((((ss_ext_list_price#4233 - ss_ext_wholesale_cost#4232) - ss_ext_discount_amt#4230) + ss_ext_sales_price#4231) / 2))], output=[customer_id#2950, customer_first_name#2951, customer_last_name#2952, customer_email_address#2956, year_total#2958])\n      :     :     :     :              +- AQEShuffleRead coalesced\n      :     :     :     :                 +- ShuffleQueryStage 30\n      :     :     :     :                    +- Exchange hashpartitioning(c_customer_id#4200, c_first_name#4207, c_last_name#4208, c_preferred_cust_flag#4209, c_birth_country#4213, c_login#4214, c_email_address#4215, d_year#4246, 200), ENSURE_REQUIREMENTS, [plan_id=3835]\n      :     :     :     :                       +- *(30) HashAggregate(keys=[c_customer_id#4200, c_first_name#4207, c_last_name#4208, c_preferred_cust_flag#4209, c_birth_country#4213, c_login#4214, c_email_address#4215, d_year#4246], functions=[partial_sum(((((ss_ext_list_price#4233 - ss_ext_wholesale_cost#4232) - ss_ext_discount_amt#4230) + ss_ext_sales_price#4231) / 2))], output=[c_customer_id#4200, c_first_name#4207, c_last_name#4208, c_preferred_cust_flag#4209, c_birth_country#4213, c_login#4214, c_email_address#4215, d_year#4246, sum#5506, isEmpty#5507])\n      :     :     :     :                          +- *(30) Project [c_customer_id#4200, c_first_name#4207, c_last_name#4208, c_preferred_cust_flag#4209, c_birth_country#4213, c_login#4214, c_email_address#4215, ss_ext_discount_amt#4230, ss_ext_sales_price#4231, ss_ext_wholesale_cost#4232, ss_ext_list_price#4233, d_year#4246]\n      :     :     :     :                             +- *(30) SortMergeJoin [ss_customer_sk#4219], [c_customer_sk#4199], Inner\n      :     :     :     :                                :- *(28) Sort [ss_customer_sk#4219 ASC NULLS FIRST], false, 0\n      :     :     :     :                                :  +- AQEShuffleRead coalesced\n      :     :     :     :                                :     +- ShuffleQueryStage 24\n      :     :     :     :                                :        +- Exchange hashpartitioning(ss_customer_sk#4219, 200), ENSURE_REQUIREMENTS, [plan_id=2245]\n      :     :     :     :                                :           +- *(16) Project [ss_customer_sk#4219, ss_ext_discount_amt#4230, ss_ext_sales_price#4231, ss_ext_wholesale_cost#4232, ss_ext_list_price#4233, d_year#4246]\n      :     :     :     :                                :              +- *(16) BroadcastHashJoin [ss_sold_date_sk#4239], [d_date_sk#4240], Inner, BuildRight, false\n      :     :     :     :                                :                 :- *(16) Filter isnotnull(ss_customer_sk#4219)\n      :     :     :     :                                :                 :  +- *(16) ColumnarToRow\n      :     :     :     :                                :                 :     +- FileScan parquet spark_catalog.tpcds_100.store_sales[ss_customer_sk#4219,ss_ext_discount_amt#4230,ss_ext_sales_price#4231,ss_ext_wholesale_cost#4232,ss_ext_list_price#4233,ss_sold_date_sk#4239] Batched: true, DataFilters: [isnotnull(ss_customer_sk#4219)], Format: Parquet, Location: InMemoryFileIndex(1823 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/store_..., PartitionFilters: [isnotnull(ss_sold_date_sk#4239), dynamicpruningexpression(ss_sold_date_sk#4239 IN dynamicpruning..., PushedFilters: [IsNotNull(ss_customer_sk)], ReadSchema: struct<ss_customer_sk:int,ss_ext_discount_amt:decimal(7,2),ss_ext_sales_price:decimal(7,2),ss_ext...\n      :     :     :     :                                :                 :           +- SubqueryBroadcast dynamicpruning#5495, 0, [d_date_sk#4240], [id=#2219]\n      :     :     :     :                                :                 :              +- AdaptiveSparkPlan isFinalPlan=true\n                                                                                             +- == Final Plan ==\n                                                                                                BroadcastQueryStage 1\n                                                                                                +- ReusedExchange [d_date_sk#4240, d_year#4246], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=746]\n                                                                                             +- == Initial Plan ==\n                                                                                                BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=2216]\n                                                                                                +- Filter ((isnotnull(d_year#4246) AND (d_year#4246 = 2002)) AND isnotnull(d_date_sk#4240))\n                                                                                                   +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#4240,d_year#4246] Batched: true, DataFilters: [isnotnull(d_year#4246), (d_year#4246 = 2002), isnotnull(d_date_sk#4240)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), EqualTo(d_year,2002), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>\n      :     :     :     :                                :                 +- BroadcastQueryStage 2\n      :     :     :     :                                :                    +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=746]\n      :     :     :     :                                :                       +- *(3) Filter ((isnotnull(d_year#4246) AND (d_year#4246 = 2002)) AND isnotnull(d_date_sk#4240))\n      :     :     :     :                                :                          +- *(3) ColumnarToRow\n      :     :     :     :                                :                             +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#4240,d_year#4246] Batched: true, DataFilters: [isnotnull(d_year#4246), (d_year#4246 = 2002), isnotnull(d_date_sk#4240)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), EqualTo(d_year,2002), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>\n      :     :     :     :                                +- *(29) Sort [c_customer_sk#4199 ASC NULLS FIRST], false, 0\n      :     :     :     :                                   +- AQEShuffleRead coalesced\n      :     :     :     :                                      +- ShuffleQueryStage 4\n      :     :     :     :                                         +- ReusedExchange [c_customer_sk#4199, c_customer_id#4200, c_first_name#4207, c_last_name#4208, c_preferred_cust_flag#4209, c_birth_country#4213, c_login#4214, c_email_address#4215], Exchange hashpartitioning(c_customer_sk#30, 200), ENSURE_REQUIREMENTS, [plan_id=681]\n      :     :     :     +- Sort [customer_id#2831 ASC NULLS FIRST], false, 0\n      :     :     :        +- ShuffleQueryStage 35\n      :     :     :           +- Exchange hashpartitioning(customer_id#2831, 200), ENSURE_REQUIREMENTS, [plan_id=4508]\n      :     :     :              +- *(39) Filter (isnotnull(year_total#2839) AND (year_total#2839 > 0.000000))\n      :     :     :                 +- *(39) HashAggregate(keys=[c_customer_id#4508, c_first_name#4515, c_last_name#4516, c_preferred_cust_flag#4517, c_birth_country#4521, c_login#4522, c_email_address#4523, d_year#4565], functions=[sum(((((cs_ext_list_price#4549 - cs_ext_wholesale_cost#4548) - cs_ext_discount_amt#4546) + cs_ext_sales_price#4547) / 2))], output=[customer_id#2831, year_total#2839])\n      :     :     :                    +- AQEShuffleRead coalesced\n      :     :     :                       +- ShuffleQueryStage 28\n      :     :     :                          +- Exchange hashpartitioning(c_customer_id#4508, c_first_name#4515, c_last_name#4516, c_preferred_cust_flag#4517, c_birth_country#4521, c_login#4522, c_email_address#4523, d_year#4565, 200), ENSURE_REQUIREMENTS, [plan_id=3404]\n      :     :     :                             +- *(24) HashAggregate(keys=[c_customer_id#4508, c_first_name#4515, c_last_name#4516, c_preferred_cust_flag#4517, c_birth_country#4521, c_login#4522, c_email_address#4523, d_year#4565], functions=[partial_sum(((((cs_ext_list_price#4549 - cs_ext_wholesale_cost#4548) - cs_ext_discount_amt#4546) + cs_ext_sales_price#4547) / 2))], output=[c_customer_id#4508, c_first_name#4515, c_last_name#4516, c_preferred_cust_flag#4517, c_birth_country#4521, c_login#4522, c_email_address#4523, d_year#4565, sum#5510, isEmpty#5511])\n      :     :     :                                +- *(24) Project [c_customer_id#4508, c_first_name#4515, c_last_name#4516, c_preferred_cust_flag#4517, c_birth_country#4521, c_login#4522, c_email_address#4523, cs_ext_discount_amt#4546, cs_ext_sales_price#4547, cs_ext_wholesale_cost#4548, cs_ext_list_price#4549, d_year#4565]\n      :     :     :                                   +- *(24) SortMergeJoin [cs_bill_customer_sk#4527], [c_customer_sk#4507], Inner\n      :     :     :                                      :- *(22) Sort [cs_bill_customer_sk#4527 ASC NULLS FIRST], false, 0\n      :     :     :                                      :  +- AQEShuffleRead coalesced\n      :     :     :                                      :     +- ShuffleQueryStage 22\n      :     :     :                                      :        +- Exchange hashpartitioning(cs_bill_customer_sk#4527, 200), ENSURE_REQUIREMENTS, [plan_id=1709]\n      :     :     :                                      :           +- *(14) Project [cs_bill_customer_sk#4527, cs_ext_discount_amt#4546, cs_ext_sales_price#4547, cs_ext_wholesale_cost#4548, cs_ext_list_price#4549, d_year#4565]\n      :     :     :                                      :              +- *(14) BroadcastHashJoin [cs_sold_date_sk#4558], [d_date_sk#4559], Inner, BuildRight, false\n      :     :     :                                      :                 :- *(14) Filter isnotnull(cs_bill_customer_sk#4527)\n      :     :     :                                      :                 :  +- *(14) ColumnarToRow\n      :     :     :                                      :                 :     +- FileScan parquet spark_catalog.tpcds_100.catalog_sales[cs_bill_customer_sk#4527,cs_ext_discount_amt#4546,cs_ext_sales_price#4547,cs_ext_wholesale_cost#4548,cs_ext_list_price#4549,cs_sold_date_sk#4558] Batched: true, DataFilters: [isnotnull(cs_bill_customer_sk#4527)], Format: Parquet, Location: InMemoryFileIndex(1836 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/catalo..., PartitionFilters: [isnotnull(cs_sold_date_sk#4558), dynamicpruningexpression(cs_sold_date_sk#4558 IN dynamicpruning..., PushedFilters: [IsNotNull(cs_bill_customer_sk)], ReadSchema: struct<cs_bill_customer_sk:int,cs_ext_discount_amt:decimal(7,2),cs_ext_sales_price:decimal(7,2),c...\n      :     :     :                                      :                 :           +- ReusedSubquery SubqueryBroadcast dynamicpruning#5494, 0, [d_date_sk#71], [id=#1579]\n      :     :     :                                      :                 +- BroadcastQueryStage 6\n      :     :     :                                      :                    +- ReusedExchange [d_date_sk#4559, d_year#4565], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=662]\n      :     :     :                                      +- *(23) Sort [c_customer_sk#4507 ASC NULLS FIRST], false, 0\n      :     :     :                                         +- AQEShuffleRead coalesced\n      :     :     :                                            +- ShuffleQueryStage 8\n      :     :     :                                               +- ReusedExchange [c_customer_sk#4507, c_customer_id#4508, c_first_name#4515, c_last_name#4516, c_preferred_cust_flag#4517, c_birth_country#4521, c_login#4522, c_email_address#4523], Exchange hashpartitioning(c_customer_sk#30, 200), ENSURE_REQUIREMENTS, [plan_id=681]\n      :     :     +- Sort [customer_id#2970 ASC NULLS FIRST], false, 0\n      :     :        +- ShuffleQueryStage 38\n      :     :           +- Exchange hashpartitioning(customer_id#2970, 200), ENSURE_REQUIREMENTS, [plan_id=5114]\n      :     :              +- *(42) HashAggregate(keys=[c_customer_id#4747, c_first_name#4754, c_last_name#4755, c_preferred_cust_flag#4756, c_birth_country#4760, c_login#4761, c_email_address#4762, d_year#4804], functions=[sum(((((cs_ext_list_price#4788 - cs_ext_wholesale_cost#4787) - cs_ext_discount_amt#4785) + cs_ext_sales_price#4786) / 2))], output=[customer_id#2970, year_total#2978])\n      :     :                 +- AQEShuffleRead coalesced\n      :     :                    +- ShuffleQueryStage 31\n      :     :                       +- Exchange hashpartitioning(c_customer_id#4747, c_first_name#4754, c_last_name#4755, c_preferred_cust_flag#4756, c_birth_country#4760, c_login#4761, c_email_address#4762, d_year#4804, 200), ENSURE_REQUIREMENTS, [plan_id=4025]\n      :     :                          +- *(33) HashAggregate(keys=[c_customer_id#4747, c_first_name#4754, c_last_name#4755, c_preferred_cust_flag#4756, c_birth_country#4760, c_login#4761, c_email_address#4762, d_year#4804], functions=[partial_sum(((((cs_ext_list_price#4788 - cs_ext_wholesale_cost#4787) - cs_ext_discount_amt#4785) + cs_ext_sales_price#4786) / 2))], output=[c_customer_id#4747, c_first_name#4754, c_last_name#4755, c_preferred_cust_flag#4756, c_birth_country#4760, c_login#4761, c_email_address#4762, d_year#4804, sum#5514, isEmpty#5515])\n      :     :                             +- *(33) Project [c_customer_id#4747, c_first_name#4754, c_last_name#4755, c_preferred_cust_flag#4756, c_birth_country#4760, c_login#4761, c_email_address#4762, cs_ext_discount_amt#4785, cs_ext_sales_price#4786, cs_ext_wholesale_cost#4787, cs_ext_list_price#4788, d_year#4804]\n      :     :                                +- *(33) SortMergeJoin [cs_bill_customer_sk#4766], [c_customer_sk#4746], Inner\n      :     :                                   :- *(31) Sort [cs_bill_customer_sk#4766 ASC NULLS FIRST], false, 0\n      :     :                                   :  +- AQEShuffleRead coalesced\n      :     :                                   :     +- ShuffleQueryStage 25\n      :     :                                   :        +- Exchange hashpartitioning(cs_bill_customer_sk#4766, 200), ENSURE_REQUIREMENTS, [plan_id=2320]\n      :     :                                   :           +- *(17) Project [cs_bill_customer_sk#4766, cs_ext_discount_amt#4785, cs_ext_sales_price#4786, cs_ext_wholesale_cost#4787, cs_ext_list_price#4788, d_year#4804]\n      :     :                                   :              +- *(17) BroadcastHashJoin [cs_sold_date_sk#4797], [d_date_sk#4798], Inner, BuildRight, false\n      :     :                                   :                 :- *(17) Filter isnotnull(cs_bill_customer_sk#4766)\n      :     :                                   :                 :  +- *(17) ColumnarToRow\n      :     :                                   :                 :     +- FileScan parquet spark_catalog.tpcds_100.catalog_sales[cs_bill_customer_sk#4766,cs_ext_discount_amt#4785,cs_ext_sales_price#4786,cs_ext_wholesale_cost#4787,cs_ext_list_price#4788,cs_sold_date_sk#4797] Batched: true, DataFilters: [isnotnull(cs_bill_customer_sk#4766)], Format: Parquet, Location: InMemoryFileIndex(1836 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/catalo..., PartitionFilters: [isnotnull(cs_sold_date_sk#4797), dynamicpruningexpression(cs_sold_date_sk#4797 IN dynamicpruning..., PushedFilters: [IsNotNull(cs_bill_customer_sk)], ReadSchema: struct<cs_bill_customer_sk:int,cs_ext_discount_amt:decimal(7,2),cs_ext_sales_price:decimal(7,2),c...\n      :     :                                   :                 :           +- ReusedSubquery SubqueryBroadcast dynamicpruning#5495, 0, [d_date_sk#4240], [id=#2219]\n      :     :                                   :                 +- BroadcastQueryStage 10\n      :     :                                   :                    +- ReusedExchange [d_date_sk#4798, d_year#4804], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=746]\n      :     :                                   +- *(32) Sort [c_customer_sk#4746 ASC NULLS FIRST], false, 0\n      :     :                                      +- AQEShuffleRead coalesced\n      :     :                                         +- ShuffleQueryStage 12\n      :     :                                            +- ReusedExchange [c_customer_sk#4746, c_customer_id#4747, c_first_name#4754, c_last_name#4755, c_preferred_cust_flag#4756, c_birth_country#4760, c_login#4761, c_email_address#4762], Exchange hashpartitioning(c_customer_sk#30, 200), ENSURE_REQUIREMENTS, [plan_id=681]\n      :     +- Sort [customer_id#2841 ASC NULLS FIRST], false, 0\n      :        +- ShuffleQueryStage 34\n      :           +- Exchange hashpartitioning(customer_id#2841, 200), ENSURE_REQUIREMENTS, [plan_id=4411]\n      :              +- *(38) Filter (isnotnull(year_total#2849) AND (year_total#2849 > 0.000000))\n      :                 +- *(38) HashAggregate(keys=[c_customer_id#5066, c_first_name#5073, c_last_name#5074, c_preferred_cust_flag#5075, c_birth_country#5079, c_login#5080, c_email_address#5081, d_year#5123], functions=[sum(((((ws_ext_list_price#5107 - ws_ext_wholesale_cost#5106) - ws_ext_discount_amt#5104) + ws_ext_sales_price#5105) / 2))], output=[customer_id#2841, year_total#2849])\n      :                    +- AQEShuffleRead coalesced\n      :                       +- ShuffleQueryStage 29\n      :                          +- Exchange hashpartitioning(c_customer_id#5066, c_first_name#5073, c_last_name#5074, c_preferred_cust_flag#5075, c_birth_country#5079, c_login#5080, c_email_address#5081, d_year#5123, 200), ENSURE_REQUIREMENTS, [plan_id=3636]\n      :                             +- *(27) HashAggregate(keys=[c_customer_id#5066, c_first_name#5073, c_last_name#5074, c_preferred_cust_flag#5075, c_birth_country#5079, c_login#5080, c_email_address#5081, d_year#5123], functions=[partial_sum(((((ws_ext_list_price#5107 - ws_ext_wholesale_cost#5106) - ws_ext_discount_amt#5104) + ws_ext_sales_price#5105) / 2))], output=[c_customer_id#5066, c_first_name#5073, c_last_name#5074, c_preferred_cust_flag#5075, c_birth_country#5079, c_login#5080, c_email_address#5081, d_year#5123, sum#5518, isEmpty#5519])\n      :                                +- *(27) Project [c_customer_id#5066, c_first_name#5073, c_last_name#5074, c_preferred_cust_flag#5075, c_birth_country#5079, c_login#5080, c_email_address#5081, ws_ext_discount_amt#5104, ws_ext_sales_price#5105, ws_ext_wholesale_cost#5106, ws_ext_list_price#5107, d_year#5123]\n      :                                   +- *(27) SortMergeJoin [ws_bill_customer_sk#5086], [c_customer_sk#5065], Inner\n      :                                      :- *(25) Sort [ws_bill_customer_sk#5086 ASC NULLS FIRST], false, 0\n      :                                      :  +- AQEShuffleRead coalesced\n      :                                      :     +- ShuffleQueryStage 23\n      :                                      :        +- Exchange hashpartitioning(ws_bill_customer_sk#5086, 200), ENSURE_REQUIREMENTS, [plan_id=1816]\n      :                                      :           +- *(15) Project [ws_bill_customer_sk#5086, ws_ext_discount_amt#5104, ws_ext_sales_price#5105, ws_ext_wholesale_cost#5106, ws_ext_list_price#5107, d_year#5123]\n      :                                      :              +- *(15) BroadcastHashJoin [ws_sold_date_sk#5116], [d_date_sk#5117], Inner, BuildRight, false\n      :                                      :                 :- *(15) Filter isnotnull(ws_bill_customer_sk#5086)\n      :                                      :                 :  +- *(15) ColumnarToRow\n      :                                      :                 :     +- FileScan parquet spark_catalog.tpcds_100.web_sales[ws_bill_customer_sk#5086,ws_ext_discount_amt#5104,ws_ext_sales_price#5105,ws_ext_wholesale_cost#5106,ws_ext_list_price#5107,ws_sold_date_sk#5116] Batched: true, DataFilters: [isnotnull(ws_bill_customer_sk#5086)], Format: Parquet, Location: InMemoryFileIndex(1823 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/web_sa..., PartitionFilters: [isnotnull(ws_sold_date_sk#5116), dynamicpruningexpression(ws_sold_date_sk#5116 IN dynamicpruning..., PushedFilters: [IsNotNull(ws_bill_customer_sk)], ReadSchema: struct<ws_bill_customer_sk:int,ws_ext_discount_amt:decimal(7,2),ws_ext_sales_price:decimal(7,2),w...\n      :                                      :                 :           +- ReusedSubquery SubqueryBroadcast dynamicpruning#5494, 0, [d_date_sk#71], [id=#1579]\n      :                                      :                 +- BroadcastQueryStage 14\n      :                                      :                    +- ReusedExchange [d_date_sk#5117, d_year#5123], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=662]\n      :                                      +- *(26) Sort [c_customer_sk#5065 ASC NULLS FIRST], false, 0\n      :                                         +- AQEShuffleRead coalesced\n      :                                            +- ShuffleQueryStage 16\n      :                                               +- ReusedExchange [c_customer_sk#5065, c_customer_id#5066, c_first_name#5073, c_last_name#5074, c_preferred_cust_flag#5075, c_birth_country#5079, c_login#5080, c_email_address#5081], Exchange hashpartitioning(c_customer_sk#30, 200), ENSURE_REQUIREMENTS, [plan_id=681]\n      +- Sort [customer_id#2990 ASC NULLS FIRST], false, 0\n         +- ShuffleQueryStage 37\n            +- Exchange hashpartitioning(customer_id#2990, 200), ENSURE_REQUIREMENTS, [plan_id=4897]\n               +- *(41) HashAggregate(keys=[c_customer_id#5305, c_first_name#5312, c_last_name#5313, c_preferred_cust_flag#5314, c_birth_country#5318, c_login#5319, c_email_address#5320, d_year#5362], functions=[sum(((((ws_ext_list_price#5346 - ws_ext_wholesale_cost#5345) - ws_ext_discount_amt#5343) + ws_ext_sales_price#5344) / 2))], output=[customer_id#2990, year_total#2998])\n                  +- AQEShuffleRead coalesced\n                     +- ShuffleQueryStage 32\n                        +- Exchange hashpartitioning(c_customer_id#5305, c_first_name#5312, c_last_name#5313, c_preferred_cust_flag#5314, c_birth_country#5318, c_login#5319, c_email_address#5320, d_year#5362, 200), ENSURE_REQUIREMENTS, [plan_id=4184]\n                           +- *(36) HashAggregate(keys=[c_customer_id#5305, c_first_name#5312, c_last_name#5313, c_preferred_cust_flag#5314, c_birth_country#5318, c_login#5319, c_email_address#5320, d_year#5362], functions=[partial_sum(((((ws_ext_list_price#5346 - ws_ext_wholesale_cost#5345) - ws_ext_discount_amt#5343) + ws_ext_sales_price#5344) / 2))], output=[c_customer_id#5305, c_first_name#5312, c_last_name#5313, c_preferred_cust_flag#5314, c_birth_country#5318, c_login#5319, c_email_address#5320, d_year#5362, sum#5522, isEmpty#5523])\n                              +- *(36) Project [c_customer_id#5305, c_first_name#5312, c_last_name#5313, c_preferred_cust_flag#5314, c_birth_country#5318, c_login#5319, c_email_address#5320, ws_ext_discount_amt#5343, ws_ext_sales_price#5344, ws_ext_wholesale_cost#5345, ws_ext_list_price#5346, d_year#5362]\n                                 +- *(36) SortMergeJoin [ws_bill_customer_sk#5325], [c_customer_sk#5304], Inner\n                                    :- *(34) Sort [ws_bill_customer_sk#5325 ASC NULLS FIRST], false, 0\n                                    :  +- AQEShuffleRead coalesced\n                                    :     +- ShuffleQueryStage 26\n                                    :        +- Exchange hashpartitioning(ws_bill_customer_sk#5325, 200), ENSURE_REQUIREMENTS, [plan_id=2396]\n                                    :           +- *(18) Project [ws_bill_customer_sk#5325, ws_ext_discount_amt#5343, ws_ext_sales_price#5344, ws_ext_wholesale_cost#5345, ws_ext_list_price#5346, d_year#5362]\n                                    :              +- *(18) BroadcastHashJoin [ws_sold_date_sk#5355], [d_date_sk#5356], Inner, BuildRight, false\n                                    :                 :- *(18) Filter isnotnull(ws_bill_customer_sk#5325)\n                                    :                 :  +- *(18) ColumnarToRow\n                                    :                 :     +- FileScan parquet spark_catalog.tpcds_100.web_sales[ws_bill_customer_sk#5325,ws_ext_discount_amt#5343,ws_ext_sales_price#5344,ws_ext_wholesale_cost#5345,ws_ext_list_price#5346,ws_sold_date_sk#5355] Batched: true, DataFilters: [isnotnull(ws_bill_customer_sk#5325)], Format: Parquet, Location: InMemoryFileIndex(1823 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/web_sa..., PartitionFilters: [isnotnull(ws_sold_date_sk#5355), dynamicpruningexpression(ws_sold_date_sk#5355 IN dynamicpruning..., PushedFilters: [IsNotNull(ws_bill_customer_sk)], ReadSchema: struct<ws_bill_customer_sk:int,ws_ext_discount_amt:decimal(7,2),ws_ext_sales_price:decimal(7,2),w...\n                                    :                 :           +- ReusedSubquery SubqueryBroadcast dynamicpruning#5495, 0, [d_date_sk#4240], [id=#2219]\n                                    :                 +- BroadcastQueryStage 18\n                                    :                    +- ReusedExchange [d_date_sk#5356, d_year#5362], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=746]\n                                    +- *(35) Sort [c_customer_sk#5304 ASC NULLS FIRST], false, 0\n                                       +- AQEShuffleRead coalesced\n                                          +- ShuffleQueryStage 20\n                                             +- ReusedExchange [c_customer_sk#5304, c_customer_id#5305, c_first_name#5312, c_last_name#5313, c_preferred_cust_flag#5314, c_birth_country#5318, c_login#5319, c_email_address#5320], Exchange hashpartitioning(c_customer_sk#30, 200), ENSURE_REQUIREMENTS, [plan_id=681]\n"
      },
      "IM" : {
        "inputSizeInBytes" : 608059632,
        "inputRowCount" : 8579110
      },
      "InitialPartitionNum" : 1,
      "PD" : {
        "15" : [ 130298, 124542, 130298, 130298, 136054, 130298, 124542, 130298, 136054, 136054, 136054, 130298, 136054, 136995, 136054, 136054, 130298, 131239, 136995, 130298, 136054, 131239, 135198, 135198, 136054, 136054, 130298, 130298, 135198, 135198, 136054, 136995, 136995, 136054, 136995, 135198, 135198, 130298, 135198, 136054, 136054, 136054, 136054, 136054, 130298, 136054, 135198, 130298, 136054, 136054, 135198, 136054, 136054, 136995, 136054, 130298, 136054, 135198, 136995, 130298, 136054, 135198, 130298, 136054, 136054, 130298, 130298, 135198, 136054, 130298, 136054, 136054, 135198, 135198, 130298, 130298, 136054, 136054, 135198, 130298, 135198, 130298, 135198, 130298, 136054, 136054, 136995, 136054, 130298, 135198, 136995, 136995, 136995, 136054, 135198, 130298, 136054, 136995, 136054, 136054, 136995, 136054, 136054, 136054, 135198, 135198, 136054, 136054, 136054, 136995, 131239, 136054, 129442, 136054, 130298, 130298, 136995, 136054, 136054, 136054, 135198, 136054, 135198, 135198, 136054, 136054, 136054, 135198, 135198, 129442, 130298, 135198, 136054, 136054, 136054, 130298, 136054, 135198, 136054, 135198, 136054, 135198, 136054, 136054, 129442, 130298, 136054, 130298, 136054, 136054, 136054, 136054, 136995, 130298, 136054, 136054, 129442, 136054, 130298, 129442, 136054, 136995, 130298, 135198, 136054, 135198, 135198, 136054, 130298, 135198, 135198, 136054, 136054, 136995, 124542, 130298, 130298, 130298, 136054, 136995, 136054, 135198, 136054, 136995, 130298, 136054, 135198, 129442, 130298, 130298, 136054, 136995, 136054, 130298, 136054, 129442, 136054, 136054, 136995, 136054 ],
        "13" : [ 153496, 153496, 147740, 153496, 153496, 147740, 141984, 147740, 153496, 156181, 153496, 153496, 153496, 156181, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 147740, 153496, 153496, 153496, 156181, 153496, 153496, 156181, 153496, 153496, 141984, 153496, 153496, 147740, 156181, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 156181, 153496, 147740, 153496, 156181, 150425, 153496, 153496, 153496, 150425, 156181, 153496, 147740, 153496, 153496, 156181, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 156181, 153496, 153496, 153496, 147740, 153496, 153496, 150425, 153496, 153496, 153496, 156181, 156181, 153496, 153496, 153496, 153496, 147740, 153496, 153496, 153496, 153496, 156181, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 156181, 147740, 153496, 153496, 153496, 156181, 153496, 153496, 153496, 153496, 153496, 156181, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 156181, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 156181, 153496, 153496, 147740, 153496, 147740, 153496, 150425, 153496, 153496, 153496, 153496, 156181, 147740, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 147740, 153496, 147740, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 147740, 147740, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 153496, 147740, 156181, 156181, 153496, 156181, 153496, 153496, 153496, 153496, 156181, 153496 ],
        "16" : [ 652413, 641195, 641195, 641195, 652413, 628367, 617149, 641195, 628367, 652413, 652413, 641195, 628367, 652413, 652413, 652413, 652413, 641195, 652413, 641195, 641195, 652413, 652413, 641195, 652413, 652413, 641195, 641195, 652413, 652413, 641195, 652413, 652413, 641195, 652413, 641195, 652413, 617149, 641195, 652413, 652413, 641195, 641195, 652413, 641195, 652413, 652413, 641195, 652413, 652413, 628367, 652413, 652413, 652413, 641195, 652413, 652413, 652413, 652413, 641195, 652413, 641195, 652413, 652413, 641195, 652413, 641195, 652413, 641195, 652413, 641195, 652413, 652413, 652413, 652413, 617149, 652413, 652413, 641195, 641195, 652413, 652413, 652413, 652413, 652413, 641195, 641195, 641195, 652413, 641195, 652413, 652413, 652413, 641195, 652413, 641195, 652413, 652413, 652413, 652413, 652413, 652413, 641195, 641195, 652413, 641195, 652413, 652413, 652413, 641195, 641195, 652413, 641195, 641195, 652413, 628367, 641195, 652413, 652413, 641195, 641195, 652413, 652413, 641195, 641195, 652413, 652413, 652413, 652413, 652413, 652413, 652413, 652413, 641195, 641195, 652413, 652413, 652413, 652413, 641195, 652413, 641195, 652413, 641195, 652413, 641195, 652413, 641195, 652413, 652413, 641195, 641195, 652413, 641195, 641195, 652413, 652413, 652413, 617149, 641195, 652413, 641195, 628367, 652413, 641195, 652413, 652413, 652413, 652413, 652413, 652413, 652413, 652413, 641195, 641195, 652413, 641195, 652413, 652413, 641195, 652413, 652413, 652413, 652413, 652413, 641195, 641195, 652413, 652413, 652413, 652413, 652413, 641195, 652413, 641195, 641195, 652413, 652413, 652413, 641195 ],
        "17" : [ 77101, 77101, 75848, 77101, 77101, 77101, 71345, 77101, 77101, 77101, 77101, 77101, 77101, 78479, 77101, 78479, 77101, 75848, 77101, 77101, 77101, 77101, 77101, 75848, 77101, 77101, 77101, 71345, 77101, 77101, 77101, 77101, 77101, 77101, 77101, 77101, 77101, 71345, 75848, 77101, 77101, 77101, 77101, 77101, 77101, 77101, 77101, 77101, 77101, 77101, 78479, 78479, 77101, 77101, 77101, 77101, 77101, 77101, 77101, 77101, 78479, 77101, 77101, 77101, 77101, 77101, 77101, 78479, 77101, 77101, 77101, 77101, 77101, 77101, 77101, 75848, 77101, 77101, 75848, 77101, 78479, 77101, 77101, 77101, 77101, 77101, 77101, 77101, 72723, 78479, 77101, 77101, 78479, 77101, 77101, 77101, 77101, 77101, 77101, 78479, 77101, 77101, 77101, 77101, 77101, 77101, 77101, 78479, 77101, 77101, 77101, 77101, 77101, 77101, 77101, 71345, 77101, 77101, 77101, 77101, 77101, 77101, 77101, 77101, 77101, 77101, 77101, 77101, 78479, 77101, 77101, 78479, 77101, 75848, 77101, 77101, 78479, 77101, 77101, 75848, 77101, 77101, 77101, 75848, 78479, 77101, 77101, 77101, 78479, 77101, 77101, 77101, 77101, 77101, 77101, 77101, 77101, 77101, 77101, 75848, 77101, 77101, 71345, 77101, 77101, 77101, 77101, 77101, 77101, 77101, 77101, 78479, 77101, 77101, 77101, 71345, 78479, 75848, 77101, 77101, 77101, 77101, 78479, 77101, 78479, 77101, 78479, 77101, 77101, 77101, 77101, 77101, 77101, 78479, 77101, 77101, 77101, 78479, 77101, 75848 ],
        "14" : [ 75848, 71345, 71345, 77101, 77101, 77101, 70092, 77101, 75848, 77101, 77101, 71345, 77101, 77101, 75848, 77101, 75848, 77101, 77101, 77101, 71345, 77101, 75848, 77101, 70092, 77101, 77101, 71345, 75848, 75848, 71345, 77101, 75848, 75848, 77101, 77101, 75848, 70092, 75848, 70092, 75848, 75848, 75848, 70092, 75848, 75848, 77101, 75848, 75848, 77101, 75848, 77101, 77101, 77101, 77101, 71345, 77101, 78479, 77101, 77101, 75848, 77101, 77101, 77101, 75848, 71345, 75848, 75848, 77101, 75848, 77101, 77101, 75848, 75848, 75848, 75848, 75848, 75848, 77101, 77101, 77101, 75848, 75848, 75848, 77101, 75848, 77101, 75848, 75848, 75848, 77101, 77101, 77101, 75848, 75848, 75848, 77101, 75848, 75848, 77101, 71345, 77101, 77101, 75848, 77101, 75848, 77101, 77101, 70092, 77101, 77101, 77101, 70092, 77101, 77101, 70092, 72723, 77101, 77101, 75848, 77101, 75848, 77101, 77101, 77101, 75848, 75848, 70092, 75848, 75848, 77101, 75848, 77101, 75848, 77101, 75848, 77101, 75848, 75848, 75848, 77101, 77101, 77101, 71345, 75848, 77101, 75848, 77101, 77101, 77101, 77101, 77101, 77101, 70092, 77101, 77101, 75848, 77101, 70092, 75848, 77101, 75848, 75848, 77101, 77101, 75848, 75848, 77101, 77101, 75848, 75848, 77101, 77101, 77101, 70092, 71345, 71345, 77101, 75848, 75848, 75848, 77101, 75848, 77101, 77101, 77101, 71345, 75848, 75848, 75848, 77101, 77101, 75848, 77101, 77101, 75848, 77101, 77101, 77101, 75848 ],
        "18" : [ 136054, 136995, 135198, 136054, 136054, 136995, 129442, 136054, 136054, 136995, 136995, 136054, 136995, 136054, 142386, 136054, 136054, 135198, 136995, 136995, 136995, 136995, 136995, 135198, 136054, 136995, 136054, 136054, 136995, 136054, 136054, 138030, 136995, 136054, 136995, 136054, 136054, 136054, 135198, 136995, 136995, 136054, 136995, 136054, 136054, 136995, 136054, 136054, 136054, 136054, 136995, 136995, 136054, 136995, 136054, 136054, 136995, 136995, 136054, 136054, 136995, 136054, 136054, 136054, 136054, 136054, 136995, 136995, 136054, 136054, 136054, 136995, 136054, 136995, 136995, 136054, 136995, 136995, 136054, 136054, 136054, 136054, 136995, 135198, 136995, 136054, 136995, 135198, 130298, 136054, 136054, 136054, 136995, 136054, 141530, 136995, 136054, 136054, 136995, 136054, 136995, 136054, 136054, 136054, 136995, 136054, 136995, 136995, 136995, 136995, 136054, 136054, 136054, 136995, 135198, 131239, 136995, 138030, 136995, 136054, 136054, 135198, 136054, 136054, 136054, 136995, 136995, 136054, 136995, 136995, 136054, 136995, 136995, 136054, 136054, 136054, 136054, 136054, 136054, 136995, 136995, 136054, 136995, 136054, 136054, 136054, 138030, 136054, 136054, 136054, 136054, 136054, 136995, 136995, 136054, 136995, 136054, 136995, 135198, 136054, 136995, 136995, 136054, 136054, 135198, 136054, 136995, 136054, 136054, 135198, 136054, 136995, 136054, 136054, 136054, 136995, 136995, 136054, 136054, 135198, 136995, 135198, 136054, 136054, 136054, 135198, 136054, 136995, 136054, 136054, 142386, 136054, 136054, 136995, 136995, 136054, 136054, 136054, 136054, 136054 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 21,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 63 ],
      "Objectives" : {
        "DurationInMs" : 6015,
        "TotalTasksDurationInMs" : 21517,
        "IOBytes" : {
          "Total" : 231051866,
          "Details" : {
            "IR" : 0,
            "IW" : 0,
            "SR" : 231051866,
            "SW" : 0
          }
        }
      }
    },
    "6" : {
      "QSLogical" : {
        "operators" : {
          "4" : {
            "sign" : 79939235,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 41806893656,
                "rowCount" : 275045353
              },
              "compileTime" : {
                "sizeInBytes" : 41806893656,
                "rowCount" : 275045353
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#4217, ss_item_sk#4218, ss_customer_sk#4219, ss_cdemo_sk#4220, ss_hdemo_sk#4221, ss_addr_sk#4222, ss_store_sk#4223, ss_promo_sk#4224, ss_ticket_number#4225L, ss_quantity#4226, ss_wholesale_cost#4227, ss_list_price#4228, ss_sales_price#4229, ss_ext_discount_amt#4230, ss_ext_sales_price#4231, ss_ext_wholesale_cost#4232, ss_ext_list_price#4233, ss_ext_tax#4234, ss_coupon_amt#4235, ss_net_paid#4236, ss_net_paid_inc_tax#4237, ss_net_profit#4238, ss_sold_date_sk#4239], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "1" : {
            "sign" : -1394289456,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 14870272760,
                "rowCount" : 265540585
              },
              "compileTime" : {
                "sizeInBytes" : 14870272760,
                "rowCount" : 265540585
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#4239 = d_date_sk#4240) "
          },
          "0" : {
            "sign" : -470129977,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 12745948080,
                "rowCount" : 265540585
              },
              "compileTime" : {
                "sizeInBytes" : 12745948080,
                "rowCount" : 265540585
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_customer_sk#4219, ss_ext_discount_amt#4230, ss_ext_sales_price#4231, ss_ext_wholesale_cost#4232, ss_ext_list_price#4233, d_year#4246] "
          },
          "2" : {
            "sign" : 1284024506,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 12608114544,
                "rowCount" : 262669053
              },
              "compileTime" : {
                "sizeInBytes" : 12608114544,
                "rowCount" : 262669053
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_customer_sk#4219, ss_ext_discount_amt#4230, ss_ext_sales_price#4231, ss_ext_wholesale_cost#4232, ss_ext_list_price#4233, ss_sold_date_sk#4239] "
          },
          "3" : {
            "sign" : -1174856634,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 39925696056,
                "rowCount" : 262669053
              },
              "compileTime" : {
                "sizeInBytes" : 39925696056,
                "rowCount" : 262669053
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(ss_customer_sk#4219) AND isnotnull(ss_sold_date_sk#4239)) AND dynamicpruning#5495 [ss_sold_date_sk#4239]) "
          }
        },
        "links" : [ {
          "fromId" : 4,
          "fromName" : "LogicalRelation",
          "toId" : 3,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Filter",
          "toId" : 2,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Project",
          "toId" : 1,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Join",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [ss_customer_sk#4219, ss_ext_discount_amt#4230, ss_ext_sales_price#4231, ss_ext_wholesale_cost#4232, ss_ext_list_price#4233, d_year#4246]\n+- Join Inner, (ss_sold_date_sk#4239 = d_date_sk#4240)\n   :- Project [ss_customer_sk#4219, ss_ext_discount_amt#4230, ss_ext_sales_price#4231, ss_ext_wholesale_cost#4232, ss_ext_list_price#4233, ss_sold_date_sk#4239]\n   :  +- Filter ((isnotnull(ss_customer_sk#4219) AND isnotnull(ss_sold_date_sk#4239)) AND dynamicpruning#5495 [ss_sold_date_sk#4239])\n   :     :  +- Project [d_date_sk#4240, d_year#4246]\n   :     :     +- Filter ((isnotnull(d_year#4246) AND (d_year#4246 = 2002)) AND isnotnull(d_date_sk#4240))\n   :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#4240,d_date_id#4241,d_date#4242,d_month_seq#4243,d_week_seq#4244,d_quarter_seq#4245,d_year#4246,d_dow#4247,d_moy#4248,d_dom#4249,d_qoy#4250,d_fy_year#4251,d_fy_quarter_seq#4252,d_fy_week_seq#4253,d_day_name#4254,d_quarter_name#4255,d_holiday#4256,d_weekend#4257,d_following_holiday#4258,d_first_dom#4259,d_last_dom#4260,d_same_day_ly#4261,d_same_day_lq#4262,d_current_day#4263,... 4 more fields] parquet\n   :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#4217,ss_item_sk#4218,ss_customer_sk#4219,ss_cdemo_sk#4220,ss_hdemo_sk#4221,ss_addr_sk#4222,ss_store_sk#4223,ss_promo_sk#4224,ss_ticket_number#4225L,ss_quantity#4226,ss_wholesale_cost#4227,ss_list_price#4228,ss_sales_price#4229,ss_ext_discount_amt#4230,ss_ext_sales_price#4231,ss_ext_wholesale_cost#4232,ss_ext_list_price#4233,ss_ext_tax#4234,ss_coupon_amt#4235,ss_net_paid#4236,ss_net_paid_inc_tax#4237,ss_net_profit#4238,ss_sold_date_sk#4239] parquet\n   +- Project [d_date_sk#4240, d_year#4246]\n      +- Filter ((isnotnull(d_year#4246) AND (d_year#4246 = 2002)) AND isnotnull(d_date_sk#4240))\n         +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#4240,d_date_id#4241,d_date#4242,d_month_seq#4243,d_week_seq#4244,d_quarter_seq#4245,d_year#4246,d_dow#4247,d_moy#4248,d_dom#4249,d_qoy#4250,d_fy_year#4251,d_fy_quarter_seq#4252,d_fy_week_seq#4253,d_day_name#4254,d_quarter_name#4255,d_holiday#4256,d_weekend#4257,d_following_holiday#4258,d_first_dom#4259,d_last_dom#4260,d_same_day_ly#4261,d_same_day_lq#4262,d_current_day#4263,... 4 more fields] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "4" : {
            "sign" : -2037652302,
            "className" : "org.apache.spark.sql.execution.adaptive.BroadcastQueryStageExec",
            "sizeInBytes" : 1051496,
            "rowCount" : 365,
            "isRuntime" : true,
            "predicate" : " (unknown) BroadcastQueryStage Output [2]: [d_date_sk#4240, d_year#4246] Arguments: 2 "
          },
          "1" : {
            "sign" : 1469077276,
            "className" : "org.apache.spark.sql.execution.joins.BroadcastHashJoinExec",
            "sizeInBytes" : 14870272760,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) BroadcastHashJoin Left keys [1]: [ss_sold_date_sk#4239] Right keys [1]: [d_date_sk#4240] Join type: Inner Join condition: None "
          },
          "0" : {
            "sign" : 1844952197,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 12745948080,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [6]: [ss_customer_sk#4219, ss_ext_discount_amt#4230, ss_ext_sales_price#4231, ss_ext_wholesale_cost#4232, ss_ext_list_price#4233, d_year#4246] Input [8]: [ss_customer_sk#4219, ss_ext_discount_amt#4230, ss_ext_sales_price#4231, ss_ext_wholesale_cost#4232, ss_ext_list_price#4233, ss_sold_date_sk#4239, d_date_sk#4240, d_year#4246] "
          },
          "2" : {
            "sign" : -1432210974,
            "className" : "org.apache.spark.sql.execution.FilterExec",
            "sizeInBytes" : 12608114544,
            "rowCount" : 262669053,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Input [6]: [ss_customer_sk#4219, ss_ext_discount_amt#4230, ss_ext_sales_price#4231, ss_ext_wholesale_cost#4232, ss_ext_list_price#4233, ss_sold_date_sk#4239] Condition : isnotnull(ss_customer_sk#4219) "
          },
          "3" : {
            "sign" : 1292880650,
            "className" : "org.apache.spark.sql.execution.FileSourceScanExec",
            "sizeInBytes" : 12608114544,
            "rowCount" : 262669053,
            "isRuntime" : false,
            "predicate" : " (unknown) Scan parquet spark_catalog.tpcds_100.store_sales Output [6]: [ss_customer_sk#4219, ss_ext_discount_amt#4230, ss_ext_sales_price#4231, ss_ext_wholesale_cost#4232, ss_ext_list_price#4233, ss_sold_date_sk#4239] Batched: true Location: InMemoryFileIndex [hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/store_sales/ss_sold_date_sk=2450816, ... 1822 entries] PartitionFilters: [isnotnull(ss_sold_date_sk#4239), dynamicpruningexpression(ss_sold_date_sk#4239 IN dynamicpruning#5495)] PushedFilters: [IsNotNull(ss_customer_sk)] ReadSchema: struct<ss_customer_sk:int,ss_ext_discount_amt:decimal(7,2),ss_ext_sales_price:decimal(7,2),ss_ext_wholesale_cost:decimal(7,2),ss_ext_list_price:decimal(7,2)> "
          }
        },
        "links" : [ {
          "fromId" : 3,
          "fromName" : "Scan parquet spark_catalog.tpcds_100.store_sales",
          "toId" : 2,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Filter",
          "toId" : 1,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "BroadcastQueryStage",
          "toId" : 1,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "BroadcastHashJoin",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [ss_customer_sk#4219, ss_ext_discount_amt#4230, ss_ext_sales_price#4231, ss_ext_wholesale_cost#4232, ss_ext_list_price#4233, d_year#4246]\n+- BroadcastHashJoin [ss_sold_date_sk#4239], [d_date_sk#4240], Inner, BuildRight, false\n   :- Filter isnotnull(ss_customer_sk#4219)\n   :  +- FileScan parquet spark_catalog.tpcds_100.store_sales[ss_customer_sk#4219,ss_ext_discount_amt#4230,ss_ext_sales_price#4231,ss_ext_wholesale_cost#4232,ss_ext_list_price#4233,ss_sold_date_sk#4239] Batched: true, DataFilters: [isnotnull(ss_customer_sk#4219)], Format: Parquet, Location: InMemoryFileIndex(1823 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/store_..., PartitionFilters: [isnotnull(ss_sold_date_sk#4239), dynamicpruningexpression(ss_sold_date_sk#4239 IN dynamicpruning..., PushedFilters: [IsNotNull(ss_customer_sk)], ReadSchema: struct<ss_customer_sk:int,ss_ext_discount_amt:decimal(7,2),ss_ext_sales_price:decimal(7,2),ss_ext...\n   :        +- SubqueryBroadcast dynamicpruning#5495, 0, [d_date_sk#4240], [id=#2219]\n   :           +- AdaptiveSparkPlan isFinalPlan=false\n   :              +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=2216]\n   :                 +- Filter ((isnotnull(d_year#4246) AND (d_year#4246 = 2002)) AND isnotnull(d_date_sk#4240))\n   :                    +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#4240,d_year#4246] Batched: true, DataFilters: [isnotnull(d_year#4246), (d_year#4246 = 2002), isnotnull(d_date_sk#4240)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), EqualTo(d_year,2002), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>\n   +- BroadcastQueryStage 2\n      +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=746]\n         +- *(3) Filter ((isnotnull(d_year#4246) AND (d_year#4246 = 2002)) AND isnotnull(d_date_sk#4240))\n            +- *(3) ColumnarToRow\n               +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#4240,d_year#4246] Batched: true, DataFilters: [isnotnull(d_year#4246), (d_year#4246 = 2002), isnotnull(d_date_sk#4240)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), EqualTo(d_year,2002), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>\n"
      },
      "IM" : {
        "inputSizeInBytes" : 12609166040,
        "inputRowCount" : 262669418
      },
      "InitialPartitionNum" : 0,
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 16,
        "FinishedTasksNum" : 13,
        "FinishedTasksTotalTimeInMs" : 18486.0,
        "FinishedTasksDistributionInMs" : [ 1193.0, 1333.0, 1396.0, 1494.0, 1707.0 ]
      },
      "QueryStageOptimizationId" : 6,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 9 ],
      "Objectives" : {
        "DurationInMs" : 8103,
        "TotalTasksDurationInMs" : 36247,
        "IOBytes" : {
          "Total" : 1865734847,
          "Details" : {
            "IR" : 785073699,
            "IW" : 0,
            "SR" : 0,
            "SW" : 1080661148
          }
        }
      }
    },
    "1" : {
      "QSLogical" : {
        "operators" : {
          "0" : {
            "sign" : -422713802,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 9216,
                "rowCount" : 576
              },
              "compileTime" : {
                "sizeInBytes" : 9216,
                "rowCount" : 576
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#4240, d_year#4246] "
          },
          "1" : {
            "sign" : 596675861,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 141696,
                "rowCount" : 576
              },
              "compileTime" : {
                "sizeInBytes" : 141696,
                "rowCount" : 576
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(d_year#4246) AND (d_year#4246 = 2002)) AND isnotnull(d_date_sk#4240)) "
          },
          "2" : {
            "sign" : 716423558,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 17970054,
                "rowCount" : 73049
              },
              "compileTime" : {
                "sizeInBytes" : 17970054,
                "rowCount" : 73049
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#4240, d_date_id#4241, d_date#4242, d_month_seq#4243, d_week_seq#4244, d_quarter_seq#4245, d_year#4246, d_dow#4247, d_moy#4248, d_dom#4249, d_qoy#4250, d_fy_year#4251, d_fy_quarter_seq#4252, d_fy_week_seq#4253, d_day_name#4254, d_quarter_name#4255, d_holiday#4256, d_weekend#4257, d_following_holiday#4258, d_first_dom#4259, d_last_dom#4260, d_same_day_ly#4261, d_same_day_lq#4262, d_current_day#4263, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "LogicalRelation",
          "toId" : 1,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Filter",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [d_date_sk#4240, d_year#4246]\n+- Filter ((isnotnull(d_year#4246) AND (d_year#4246 = 2002)) AND isnotnull(d_date_sk#4240))\n   +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#4240,d_date_id#4241,d_date#4242,d_month_seq#4243,d_week_seq#4244,d_quarter_seq#4245,d_year#4246,d_dow#4247,d_moy#4248,d_dom#4249,d_qoy#4250,d_fy_year#4251,d_fy_quarter_seq#4252,d_fy_week_seq#4253,d_day_name#4254,d_quarter_name#4255,d_holiday#4256,d_weekend#4257,d_following_holiday#4258,d_first_dom#4259,d_last_dom#4260,d_same_day_ly#4261,d_same_day_lq#4262,d_current_day#4263,... 4 more fields] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "0" : {
            "sign" : 1024129257,
            "className" : "org.apache.spark.sql.execution.FilterExec",
            "sizeInBytes" : 9216,
            "rowCount" : 576,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Input [2]: [d_date_sk#4240, d_year#4246] Condition : ((isnotnull(d_year#4246) AND (d_year#4246 = 2002)) AND isnotnull(d_date_sk#4240)) "
          },
          "1" : {
            "sign" : -1952279142,
            "className" : "org.apache.spark.sql.execution.FileSourceScanExec",
            "sizeInBytes" : 9216,
            "rowCount" : 576,
            "isRuntime" : false,
            "predicate" : " (unknown) Scan parquet spark_catalog.tpcds_100.date_dim Output [2]: [d_date_sk#4240, d_year#4246] Batched: true Location: InMemoryFileIndex [hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim] PushedFilters: [IsNotNull(d_year), EqualTo(d_year,2002), IsNotNull(d_date_sk)] ReadSchema: struct<d_date_sk:int,d_year:int> "
          }
        },
        "links" : [ {
          "fromId" : 1,
          "fromName" : "Scan parquet spark_catalog.tpcds_100.date_dim",
          "toId" : 0,
          "toName" : "Filter",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Filter ((isnotnull(d_year#4246) AND (d_year#4246 = 2002)) AND isnotnull(d_date_sk#4240))\n+- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#4240,d_year#4246] Batched: true, DataFilters: [isnotnull(d_year#4246), (d_year#4246 = 2002), isnotnull(d_date_sk#4240)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), EqualTo(d_year,2002), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>\n"
      },
      "IM" : {
        "inputSizeInBytes" : 9216,
        "inputRowCount" : 576
      },
      "InitialPartitionNum" : 0,
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 2,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 5 ],
      "Objectives" : {
        "DurationInMs" : 1711,
        "TotalTasksDurationInMs" : 425,
        "IOBytes" : {
          "Total" : 93562,
          "Details" : {
            "IR" : 93562,
            "IW" : 0,
            "SR" : 0,
            "SW" : 0
          }
        }
      }
    },
    "17" : {
      "QSLogical" : {
        "operators" : {
          "0" : {
            "sign" : -211851762,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 7435110696,
                "rowCount" : 142982898
              },
              "compileTime" : {
                "sizeInBytes" : 7435110696,
                "rowCount" : 142982898
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(year_total#2839) AND (year_total#2839 > 0.000000)) "
          }
        },
        "links" : [ ],
        "rawPlan" : "Filter (isnotnull(year_total#2839) AND (year_total#2839 > 0.000000))\n+- Aggregate [c_customer_id#4508, c_first_name#4515, c_last_name#4516, c_preferred_cust_flag#4517, c_birth_country#4521, c_login#4522, c_email_address#4523, d_year#4565], [c_customer_id#4508 AS customer_id#2831, sum(((((cs_ext_list_price#4549 - cs_ext_wholesale_cost#4548) - cs_ext_discount_amt#4546) + cs_ext_sales_price#4547) / 2)) AS year_total#2839]\n   +- Project [c_customer_id#4508, c_first_name#4515, c_last_name#4516, c_preferred_cust_flag#4517, c_birth_country#4521, c_login#4522, c_email_address#4523, cs_ext_discount_amt#4546, cs_ext_sales_price#4547, cs_ext_wholesale_cost#4548, cs_ext_list_price#4549, d_year#4565]\n      +- Join Inner, (c_customer_sk#4507 = cs_bill_customer_sk#4527)\n         :- Project [cs_bill_customer_sk#4527, cs_ext_discount_amt#4546, cs_ext_sales_price#4547, cs_ext_wholesale_cost#4548, cs_ext_list_price#4549, d_year#4565]\n         :  +- Join Inner, (cs_sold_date_sk#4558 = d_date_sk#4559)\n         :     :- Project [cs_bill_customer_sk#4527, cs_ext_discount_amt#4546, cs_ext_sales_price#4547, cs_ext_wholesale_cost#4548, cs_ext_list_price#4549, cs_sold_date_sk#4558]\n         :     :  +- Filter ((isnotnull(cs_bill_customer_sk#4527) AND isnotnull(cs_sold_date_sk#4558)) AND dynamicpruning#5496 [cs_sold_date_sk#4558])\n         :     :     :  +- Project [d_date_sk#4559, d_year#4565]\n         :     :     :     +- Filter ((isnotnull(d_year#4565) AND (d_year#4565 = 2001)) AND isnotnull(d_date_sk#4559))\n         :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#4559,d_date_id#4560,d_date#4561,d_month_seq#4562,d_week_seq#4563,d_quarter_seq#4564,d_year#4565,d_dow#4566,d_moy#4567,d_dom#4568,d_qoy#4569,d_fy_year#4570,d_fy_quarter_seq#4571,d_fy_week_seq#4572,d_day_name#4573,d_quarter_name#4574,d_holiday#4575,d_weekend#4576,d_following_holiday#4577,d_first_dom#4578,d_last_dom#4579,d_same_day_ly#4580,d_same_day_lq#4581,d_current_day#4582,... 4 more fields] parquet\n         :     :     +- Relation spark_catalog.tpcds_100.catalog_sales[cs_sold_time_sk#4525,cs_ship_date_sk#4526,cs_bill_customer_sk#4527,cs_bill_cdemo_sk#4528,cs_bill_hdemo_sk#4529,cs_bill_addr_sk#4530,cs_ship_customer_sk#4531,cs_ship_cdemo_sk#4532,cs_ship_hdemo_sk#4533,cs_ship_addr_sk#4534,cs_call_center_sk#4535,cs_catalog_page_sk#4536,cs_ship_mode_sk#4537,cs_warehouse_sk#4538,cs_item_sk#4539,cs_promo_sk#4540,cs_order_number#4541L,cs_quantity#4542,cs_wholesale_cost#4543,cs_list_price#4544,cs_sales_price#4545,cs_ext_discount_amt#4546,cs_ext_sales_price#4547,cs_ext_wholesale_cost#4548,... 10 more fields] parquet\n         :     +- Project [d_date_sk#4559, d_year#4565]\n         :        +- Filter ((isnotnull(d_year#4565) AND (d_year#4565 = 2001)) AND isnotnull(d_date_sk#4559))\n         :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#4559,d_date_id#4560,d_date#4561,d_month_seq#4562,d_week_seq#4563,d_quarter_seq#4564,d_year#4565,d_dow#4566,d_moy#4567,d_dom#4568,d_qoy#4569,d_fy_year#4570,d_fy_quarter_seq#4571,d_fy_week_seq#4572,d_day_name#4573,d_quarter_name#4574,d_holiday#4575,d_weekend#4576,d_following_holiday#4577,d_first_dom#4578,d_last_dom#4579,d_same_day_ly#4580,d_same_day_lq#4581,d_current_day#4582,... 4 more fields] parquet\n         +- Project [c_customer_sk#4507, c_customer_id#4508, c_first_name#4515, c_last_name#4516, c_preferred_cust_flag#4517, c_birth_country#4521, c_login#4522, c_email_address#4523]\n            +- Filter (isnotnull(c_customer_sk#4507) AND isnotnull(c_customer_id#4508))\n               +- Relation spark_catalog.tpcds_100.customer[c_customer_sk#4507,c_customer_id#4508,c_current_cdemo_sk#4509,c_current_hdemo_sk#4510,c_current_addr_sk#4511,c_first_shipto_date_sk#4512,c_first_sales_date_sk#4513,c_salutation#4514,c_first_name#4515,c_last_name#4516,c_preferred_cust_flag#4517,c_birth_day#4518,c_birth_month#4519,c_birth_year#4520,c_birth_country#4521,c_login#4522,c_email_address#4523,c_last_review_date#4524] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "0" : {
            "sign" : -468472598,
            "className" : "org.apache.spark.sql.execution.FilterExec",
            "sizeInBytes" : 7435110696,
            "rowCount" : 142982898,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Input [2]: [customer_id#2831, year_total#2839] Condition : (isnotnull(year_total#2839) AND (year_total#2839 > 0.000000)) "
          },
          "1" : {
            "sign" : -884261726,
            "className" : "org.apache.spark.sql.execution.aggregate.HashAggregateExec",
            "sizeInBytes" : 294763008,
            "rowCount" : 1592967,
            "isRuntime" : true,
            "predicate" : " (unknown) HashAggregate Input [10]: [c_customer_id#4508, c_first_name#4515, c_last_name#4516, c_preferred_cust_flag#4517, c_birth_country#4521, c_login#4522, c_email_address#4523, d_year#4565, sum#5510, isEmpty#5511] Keys [8]: [c_customer_id#4508, c_first_name#4515, c_last_name#4516, c_preferred_cust_flag#4517, c_birth_country#4521, c_login#4522, c_email_address#4523, d_year#4565] Functions [1]: [sum(((((cs_ext_list_price#4549 - cs_ext_wholesale_cost#4548) - cs_ext_discount_amt#4546) + cs_ext_sales_price#4547) / 2))] Aggregate Attributes [1]: [sum(((((cs_ext_list_price#4549 - cs_ext_wholesale_cost#4548) - cs_ext_discount_amt#4546) + cs_ext_sales_price#4547) / 2))#2948] Results [2]: [c_customer_id#4508 AS customer_id#2831, sum(((((cs_ext_list_price#4549 - cs_ext_wholesale_cost#4548) - cs_ext_discount_amt#4546) + cs_ext_sales_price#4547) / 2))#2948 AS year_total#2839] "
          },
          "2" : {
            "sign" : -1382769267,
            "className" : "org.apache.spark.sql.execution.adaptive.ShuffleQueryStageExec",
            "sizeInBytes" : 7435110696,
            "rowCount" : 142982898,
            "isRuntime" : false,
            "predicate" : " (unknown) ShuffleQueryStage Output [10]: [c_customer_id#4508, c_first_name#4515, c_last_name#4516, c_preferred_cust_flag#4517, c_birth_country#4521, c_login#4522, c_email_address#4523, d_year#4565, sum#5510, isEmpty#5511] Arguments: 28 "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "ShuffleQueryStage",
          "toId" : 1,
          "toName" : "HashAggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "HashAggregate",
          "toId" : 0,
          "toName" : "Filter",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Filter (isnotnull(year_total#2839) AND (year_total#2839 > 0.000000))\n+- HashAggregate(keys=[c_customer_id#4508, c_first_name#4515, c_last_name#4516, c_preferred_cust_flag#4517, c_birth_country#4521, c_login#4522, c_email_address#4523, d_year#4565], functions=[sum(((((cs_ext_list_price#4549 - cs_ext_wholesale_cost#4548) - cs_ext_discount_amt#4546) + cs_ext_sales_price#4547) / 2))], output=[customer_id#2831, year_total#2839])\n   +- ShuffleQueryStage 28\n      +- Exchange hashpartitioning(c_customer_id#4508, c_first_name#4515, c_last_name#4516, c_preferred_cust_flag#4517, c_birth_country#4521, c_login#4522, c_email_address#4523, d_year#4565, 200), ENSURE_REQUIREMENTS, [plan_id=3404]\n         +- *(24) HashAggregate(keys=[c_customer_id#4508, c_first_name#4515, c_last_name#4516, c_preferred_cust_flag#4517, c_birth_country#4521, c_login#4522, c_email_address#4523, d_year#4565], functions=[partial_sum(((((cs_ext_list_price#4549 - cs_ext_wholesale_cost#4548) - cs_ext_discount_amt#4546) + cs_ext_sales_price#4547) / 2))], output=[c_customer_id#4508, c_first_name#4515, c_last_name#4516, c_preferred_cust_flag#4517, c_birth_country#4521, c_login#4522, c_email_address#4523, d_year#4565, sum#5510, isEmpty#5511])\n            +- *(24) Project [c_customer_id#4508, c_first_name#4515, c_last_name#4516, c_preferred_cust_flag#4517, c_birth_country#4521, c_login#4522, c_email_address#4523, cs_ext_discount_amt#4546, cs_ext_sales_price#4547, cs_ext_wholesale_cost#4548, cs_ext_list_price#4549, d_year#4565]\n               +- *(24) SortMergeJoin [cs_bill_customer_sk#4527], [c_customer_sk#4507], Inner\n                  :- *(22) Sort [cs_bill_customer_sk#4527 ASC NULLS FIRST], false, 0\n                  :  +- AQEShuffleRead coalesced\n                  :     +- ShuffleQueryStage 22\n                  :        +- Exchange hashpartitioning(cs_bill_customer_sk#4527, 200), ENSURE_REQUIREMENTS, [plan_id=1709]\n                  :           +- *(14) Project [cs_bill_customer_sk#4527, cs_ext_discount_amt#4546, cs_ext_sales_price#4547, cs_ext_wholesale_cost#4548, cs_ext_list_price#4549, d_year#4565]\n                  :              +- *(14) BroadcastHashJoin [cs_sold_date_sk#4558], [d_date_sk#4559], Inner, BuildRight, false\n                  :                 :- *(14) Filter isnotnull(cs_bill_customer_sk#4527)\n                  :                 :  +- *(14) ColumnarToRow\n                  :                 :     +- FileScan parquet spark_catalog.tpcds_100.catalog_sales[cs_bill_customer_sk#4527,cs_ext_discount_amt#4546,cs_ext_sales_price#4547,cs_ext_wholesale_cost#4548,cs_ext_list_price#4549,cs_sold_date_sk#4558] Batched: true, DataFilters: [isnotnull(cs_bill_customer_sk#4527)], Format: Parquet, Location: InMemoryFileIndex(1836 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/catalo..., PartitionFilters: [isnotnull(cs_sold_date_sk#4558), dynamicpruningexpression(cs_sold_date_sk#4558 IN dynamicpruning..., PushedFilters: [IsNotNull(cs_bill_customer_sk)], ReadSchema: struct<cs_bill_customer_sk:int,cs_ext_discount_amt:decimal(7,2),cs_ext_sales_price:decimal(7,2),c...\n                  :                 :           +- ReusedSubquery SubqueryBroadcast dynamicpruning#5494, 0, [d_date_sk#71], [id=#1579]\n                  :                 +- BroadcastQueryStage 6\n                  :                    +- ReusedExchange [d_date_sk#4559, d_year#4565], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=662]\n                  +- *(23) Sort [c_customer_sk#4507 ASC NULLS FIRST], false, 0\n                     +- AQEShuffleRead coalesced\n                        +- ShuffleQueryStage 8\n                           +- ReusedExchange [c_customer_sk#4507, c_customer_id#4508, c_first_name#4515, c_last_name#4516, c_preferred_cust_flag#4517, c_birth_country#4521, c_login#4522, c_email_address#4523], Exchange hashpartitioning(c_customer_sk#30, 200), ENSURE_REQUIREMENTS, [plan_id=681]\n"
      },
      "IM" : {
        "inputSizeInBytes" : 294763008,
        "inputRowCount" : 1592967
      },
      "InitialPartitionNum" : 200,
      "PD" : {
        "8" : [ 719580, 735282, 731883, 740516, 718912, 710066, 724814, 714346, 724814, 699121, 694364, 730048, 714346, 723147, 724814, 707922, 724814, 703878, 740516, 724814, 694364, 709589, 719580, 726649, 719580, 719580, 724814, 716181, 730048, 730048, 724814, 712964, 726649, 698644, 721415, 709112, 707445, 724814, 724814, 724814, 728381, 718675, 719580, 707445, 747585, 723624, 694364, 721892, 727126, 725291, 726865, 712679, 724814, 709112, 721415, 709589, 714346, 704355, 709589, 714346, 714823, 721415, 707445, 716658, 716181, 707144, 724814, 704355, 712679, 724814, 721631, 709112, 713156, 709112, 726649, 731883, 733615, 710066, 730048, 714346, 712679, 728381, 734137, 730048, 735282, 719580, 725291, 735282, 699121, 712679, 701433, 714823, 723624, 723147, 710947, 699121, 699598, 699598, 719580, 735282, 714346, 706190, 706667, 738849, 723147, 712679, 706190, 699598, 709589, 728381, 723147, 730048, 721415, 726649, 718867, 719580, 719580, 696676, 716658, 730048, 711640, 701433, 731883, 718390, 720057, 721892, 710066, 704355, 709112, 714823, 709112, 724814, 714346, 713156, 720057, 735282, 716658, 716658, 716181, 723147, 726865, 719580, 721631, 705713, 735282, 740993, 714346, 716181, 720057, 716658, 713156, 714346, 724814, 716397, 717135, 707445, 725964, 730048, 724146, 713156, 716181, 731883, 719580, 716658, 713156, 719580, 717913, 692697, 714346, 725291, 735282, 711424, 731883, 718390, 697931, 717913, 730048, 709112, 721892, 716658, 714346, 719580, 721415, 723147, 737333, 731883, 714346, 719580, 704355, 717913, 716658, 728381, 728381, 730048, 714346, 709589, 744083, 724814, 709112, 717913 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 16,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 17,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 33 ],
      "Objectives" : {
        "DurationInMs" : 13102,
        "TotalTasksDurationInMs" : 5928,
        "IOBytes" : {
          "Total" : 162395468,
          "Details" : {
            "IR" : 0,
            "IW" : 0,
            "SR" : 137165362,
            "SW" : 25230106
          }
        }
      }
    },
    "14" : {
      "QSLogical" : {
        "operators" : {
          "0" : {
            "sign" : 1721756901,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 3761782752,
                "rowCount" : 72341976
              },
              "compileTime" : {
                "sizeInBytes" : 3761782752,
                "rowCount" : 72341976
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [c_customer_id#5305, c_first_name#5312, c_last_name#5313, c_preferred_cust_flag#5314, c_birth_country#5318, c_login#5319, c_email_address#5320, d_year#5362], [c_customer_id#5305 AS customer_id#2990, sum(((((ws_ext_list_price#5346 - ws_ext_wholesale_cost#5345) - ws_ext_discount_amt#5343) + ws_ext_sales_price#5344) / 2)) AS year_total#2998] "
          },
          "1" : {
            "sign" : 15740574,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 15553524840,
                "rowCount" : 72341976
              },
              "compileTime" : {
                "sizeInBytes" : 15553524840,
                "rowCount" : 72341976
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_customer_id#5305, c_first_name#5312, c_last_name#5313, c_preferred_cust_flag#5314, c_birth_country#5318, c_login#5319, c_email_address#5320, ws_ext_discount_amt#5343, ws_ext_sales_price#5344, ws_ext_wholesale_cost#5345, ws_ext_list_price#5346, d_year#5362] "
          },
          "2" : {
            "sign" : -1267807571,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 16132260648,
                "rowCount" : 72341976
              },
              "compileTime" : {
                "sizeInBytes" : 16132260648,
                "rowCount" : 72341976
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (c_customer_sk#5304 = ws_bill_customer_sk#5325) "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "Join",
          "toId" : 1,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Project",
          "toId" : 0,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Aggregate [c_customer_id#5305, c_first_name#5312, c_last_name#5313, c_preferred_cust_flag#5314, c_birth_country#5318, c_login#5319, c_email_address#5320, d_year#5362], [c_customer_id#5305 AS customer_id#2990, sum(((((ws_ext_list_price#5346 - ws_ext_wholesale_cost#5345) - ws_ext_discount_amt#5343) + ws_ext_sales_price#5344) / 2)) AS year_total#2998]\n+- Project [c_customer_id#5305, c_first_name#5312, c_last_name#5313, c_preferred_cust_flag#5314, c_birth_country#5318, c_login#5319, c_email_address#5320, ws_ext_discount_amt#5343, ws_ext_sales_price#5344, ws_ext_wholesale_cost#5345, ws_ext_list_price#5346, d_year#5362]\n   +- Join Inner, (c_customer_sk#5304 = ws_bill_customer_sk#5325)\n      :- Project [ws_bill_customer_sk#5325, ws_ext_discount_amt#5343, ws_ext_sales_price#5344, ws_ext_wholesale_cost#5345, ws_ext_list_price#5346, d_year#5362]\n      :  +- Join Inner, (ws_sold_date_sk#5355 = d_date_sk#5356)\n      :     :- Project [ws_bill_customer_sk#5325, ws_ext_discount_amt#5343, ws_ext_sales_price#5344, ws_ext_wholesale_cost#5345, ws_ext_list_price#5346, ws_sold_date_sk#5355]\n      :     :  +- Filter ((isnotnull(ws_bill_customer_sk#5325) AND isnotnull(ws_sold_date_sk#5355)) AND dynamicpruning#5499 [ws_sold_date_sk#5355])\n      :     :     :  +- Project [d_date_sk#5356, d_year#5362]\n      :     :     :     +- Filter ((isnotnull(d_year#5362) AND (d_year#5362 = 2002)) AND isnotnull(d_date_sk#5356))\n      :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#5356,d_date_id#5357,d_date#5358,d_month_seq#5359,d_week_seq#5360,d_quarter_seq#5361,d_year#5362,d_dow#5363,d_moy#5364,d_dom#5365,d_qoy#5366,d_fy_year#5367,d_fy_quarter_seq#5368,d_fy_week_seq#5369,d_day_name#5370,d_quarter_name#5371,d_holiday#5372,d_weekend#5373,d_following_holiday#5374,d_first_dom#5375,d_last_dom#5376,d_same_day_ly#5377,d_same_day_lq#5378,d_current_day#5379,... 4 more fields] parquet\n      :     :     +- Relation spark_catalog.tpcds_100.web_sales[ws_sold_time_sk#5322,ws_ship_date_sk#5323,ws_item_sk#5324,ws_bill_customer_sk#5325,ws_bill_cdemo_sk#5326,ws_bill_hdemo_sk#5327,ws_bill_addr_sk#5328,ws_ship_customer_sk#5329,ws_ship_cdemo_sk#5330,ws_ship_hdemo_sk#5331,ws_ship_addr_sk#5332,ws_web_page_sk#5333,ws_web_site_sk#5334,ws_ship_mode_sk#5335,ws_warehouse_sk#5336,ws_promo_sk#5337,ws_order_number#5338L,ws_quantity#5339,ws_wholesale_cost#5340,ws_list_price#5341,ws_sales_price#5342,ws_ext_discount_amt#5343,ws_ext_sales_price#5344,ws_ext_wholesale_cost#5345,... 10 more fields] parquet\n      :     +- Project [d_date_sk#5356, d_year#5362]\n      :        +- Filter ((isnotnull(d_year#5362) AND (d_year#5362 = 2002)) AND isnotnull(d_date_sk#5356))\n      :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#5356,d_date_id#5357,d_date#5358,d_month_seq#5359,d_week_seq#5360,d_quarter_seq#5361,d_year#5362,d_dow#5363,d_moy#5364,d_dom#5365,d_qoy#5366,d_fy_year#5367,d_fy_quarter_seq#5368,d_fy_week_seq#5369,d_day_name#5370,d_quarter_name#5371,d_holiday#5372,d_weekend#5373,d_following_holiday#5374,d_first_dom#5375,d_last_dom#5376,d_same_day_ly#5377,d_same_day_lq#5378,d_current_day#5379,... 4 more fields] parquet\n      +- Project [c_customer_sk#5304, c_customer_id#5305, c_first_name#5312, c_last_name#5313, c_preferred_cust_flag#5314, c_birth_country#5318, c_login#5319, c_email_address#5320]\n         +- Filter (isnotnull(c_customer_sk#5304) AND isnotnull(c_customer_id#5305))\n            +- Relation spark_catalog.tpcds_100.customer[c_customer_sk#5304,c_customer_id#5305,c_current_cdemo_sk#5306,c_current_hdemo_sk#5307,c_current_addr_sk#5308,c_first_shipto_date_sk#5309,c_first_sales_date_sk#5310,c_salutation#5311,c_first_name#5312,c_last_name#5313,c_preferred_cust_flag#5314,c_birth_day#5315,c_birth_month#5316,c_birth_year#5317,c_birth_country#5318,c_login#5319,c_email_address#5320,c_last_review_date#5321] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "4" : {
            "sign" : 1979301147,
            "className" : "org.apache.spark.sql.execution.adaptive.ShuffleQueryStageExec",
            "sizeInBytes" : 805892304,
            "rowCount" : 14390934,
            "isRuntime" : true,
            "predicate" : " (unknown) ShuffleQueryStage Output [6]: [ws_bill_customer_sk#5325, ws_ext_discount_amt#5343, ws_ext_sales_price#5344, ws_ext_wholesale_cost#5345, ws_ext_list_price#5346, d_year#5362] Arguments: 26 "
          },
          "5" : {
            "sign" : -722554198,
            "className" : "org.apache.spark.sql.execution.SortExec",
            "sizeInBytes" : -1,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Input [8]: [c_customer_sk#5304, c_customer_id#5305, c_first_name#5312, c_last_name#5313, c_preferred_cust_flag#5314, c_birth_country#5318, c_login#5319, c_email_address#5320] Arguments: [c_customer_sk#5304 ASC NULLS FIRST], false, 0 "
          },
          "6" : {
            "sign" : -1873614480,
            "className" : "org.apache.spark.sql.execution.adaptive.ShuffleQueryStageExec",
            "sizeInBytes" : 306068840,
            "rowCount" : 2000000,
            "isRuntime" : true,
            "predicate" : " (unknown) ShuffleQueryStage Output [8]: [c_customer_sk#5304, c_customer_id#5305, c_first_name#5312, c_last_name#5313, c_preferred_cust_flag#5314, c_birth_country#5318, c_login#5319, c_email_address#5320] Arguments: 20 "
          },
          "1" : {
            "sign" : 1320373133,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 15553524840,
            "rowCount" : 72341976,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [12]: [c_customer_id#5305, c_first_name#5312, c_last_name#5313, c_preferred_cust_flag#5314, c_birth_country#5318, c_login#5319, c_email_address#5320, ws_ext_discount_amt#5343, ws_ext_sales_price#5344, ws_ext_wholesale_cost#5345, ws_ext_list_price#5346, d_year#5362] Input [14]: [ws_bill_customer_sk#5325, ws_ext_discount_amt#5343, ws_ext_sales_price#5344, ws_ext_wholesale_cost#5345, ws_ext_list_price#5346, d_year#5362, c_customer_sk#5304, c_customer_id#5305, c_first_name#5312, c_last_name#5313, c_preferred_cust_flag#5314, c_birth_country#5318, c_login#5319, c_email_address#5320] "
          },
          "0" : {
            "sign" : 2059903575,
            "className" : "org.apache.spark.sql.execution.aggregate.HashAggregateExec",
            "sizeInBytes" : 3761782752,
            "rowCount" : 72341976,
            "isRuntime" : false,
            "predicate" : " (unknown) HashAggregate Input [12]: [c_customer_id#5305, c_first_name#5312, c_last_name#5313, c_preferred_cust_flag#5314, c_birth_country#5318, c_login#5319, c_email_address#5320, ws_ext_discount_amt#5343, ws_ext_sales_price#5344, ws_ext_wholesale_cost#5345, ws_ext_list_price#5346, d_year#5362] Keys [8]: [c_customer_id#5305, c_first_name#5312, c_last_name#5313, c_preferred_cust_flag#5314, c_birth_country#5318, c_login#5319, c_email_address#5320, d_year#5362] Functions [1]: [partial_sum(((((ws_ext_list_price#5346 - ws_ext_wholesale_cost#5345) - ws_ext_discount_amt#5343) + ws_ext_sales_price#5344) / 2))] Aggregate Attributes [2]: [sum#5520, isEmpty#5521] Results [10]: [c_customer_id#5305, c_first_name#5312, c_last_name#5313, c_preferred_cust_flag#5314, c_birth_country#5318, c_login#5319, c_email_address#5320, d_year#5362, sum#5522, isEmpty#5523] "
          },
          "2" : {
            "sign" : -799155132,
            "className" : "org.apache.spark.sql.execution.joins.SortMergeJoinExec",
            "sizeInBytes" : 16132260648,
            "rowCount" : 72341976,
            "isRuntime" : false,
            "predicate" : " (unknown) SortMergeJoin Left keys [1]: [ws_bill_customer_sk#5325] Right keys [1]: [c_customer_sk#5304] Join type: Inner Join condition: None "
          },
          "3" : {
            "sign" : -87884335,
            "className" : "org.apache.spark.sql.execution.SortExec",
            "sizeInBytes" : -1,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Input [6]: [ws_bill_customer_sk#5325, ws_ext_discount_amt#5343, ws_ext_sales_price#5344, ws_ext_wholesale_cost#5345, ws_ext_list_price#5346, d_year#5362] Arguments: [ws_bill_customer_sk#5325 ASC NULLS FIRST], false, 0 "
          }
        },
        "links" : [ {
          "fromId" : 4,
          "fromName" : "ShuffleQueryStage",
          "toId" : 3,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Sort",
          "toId" : 2,
          "toName" : "SortMergeJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "ShuffleQueryStage",
          "toId" : 5,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Sort",
          "toId" : 2,
          "toName" : "SortMergeJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "SortMergeJoin",
          "toId" : 1,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Project",
          "toId" : 0,
          "toName" : "HashAggregate",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "HashAggregate(keys=[c_customer_id#5305, c_first_name#5312, c_last_name#5313, c_preferred_cust_flag#5314, c_birth_country#5318, c_login#5319, c_email_address#5320, d_year#5362], functions=[partial_sum(((((ws_ext_list_price#5346 - ws_ext_wholesale_cost#5345) - ws_ext_discount_amt#5343) + ws_ext_sales_price#5344) / 2))], output=[c_customer_id#5305, c_first_name#5312, c_last_name#5313, c_preferred_cust_flag#5314, c_birth_country#5318, c_login#5319, c_email_address#5320, d_year#5362, sum#5522, isEmpty#5523])\n+- Project [c_customer_id#5305, c_first_name#5312, c_last_name#5313, c_preferred_cust_flag#5314, c_birth_country#5318, c_login#5319, c_email_address#5320, ws_ext_discount_amt#5343, ws_ext_sales_price#5344, ws_ext_wholesale_cost#5345, ws_ext_list_price#5346, d_year#5362]\n   +- SortMergeJoin [ws_bill_customer_sk#5325], [c_customer_sk#5304], Inner\n      :- Sort [ws_bill_customer_sk#5325 ASC NULLS FIRST], false, 0\n      :  +- ShuffleQueryStage 26\n      :     +- Exchange hashpartitioning(ws_bill_customer_sk#5325, 200), ENSURE_REQUIREMENTS, [plan_id=2396]\n      :        +- *(18) Project [ws_bill_customer_sk#5325, ws_ext_discount_amt#5343, ws_ext_sales_price#5344, ws_ext_wholesale_cost#5345, ws_ext_list_price#5346, d_year#5362]\n      :           +- *(18) BroadcastHashJoin [ws_sold_date_sk#5355], [d_date_sk#5356], Inner, BuildRight, false\n      :              :- *(18) Filter isnotnull(ws_bill_customer_sk#5325)\n      :              :  +- *(18) ColumnarToRow\n      :              :     +- FileScan parquet spark_catalog.tpcds_100.web_sales[ws_bill_customer_sk#5325,ws_ext_discount_amt#5343,ws_ext_sales_price#5344,ws_ext_wholesale_cost#5345,ws_ext_list_price#5346,ws_sold_date_sk#5355] Batched: true, DataFilters: [isnotnull(ws_bill_customer_sk#5325)], Format: Parquet, Location: InMemoryFileIndex(1823 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/web_sa..., PartitionFilters: [isnotnull(ws_sold_date_sk#5355), dynamicpruningexpression(ws_sold_date_sk#5355 IN dynamicpruning..., PushedFilters: [IsNotNull(ws_bill_customer_sk)], ReadSchema: struct<ws_bill_customer_sk:int,ws_ext_discount_amt:decimal(7,2),ws_ext_sales_price:decimal(7,2),w...\n      :              :           +- ReusedSubquery SubqueryBroadcast dynamicpruning#5495, 0, [d_date_sk#4240], [id=#2219]\n      :              +- BroadcastQueryStage 18\n      :                 +- ReusedExchange [d_date_sk#5356, d_year#5362], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=746]\n      +- Sort [c_customer_sk#5304 ASC NULLS FIRST], false, 0\n         +- ShuffleQueryStage 20\n            +- ReusedExchange [c_customer_sk#5304, c_customer_id#5305, c_first_name#5312, c_last_name#5313, c_preferred_cust_flag#5314, c_birth_country#5318, c_login#5319, c_email_address#5320], Exchange hashpartitioning(c_customer_sk#30, 200), ENSURE_REQUIREMENTS, [plan_id=681]\n"
      },
      "IM" : {
        "inputSizeInBytes" : 1111961144,
        "inputRowCount" : 16390934
      },
      "InitialPartitionNum" : 200,
      "PD" : {
        "6" : [ 1792590, 1739703, 1738581, 1793904, 1760535, 1762059, 1771120, 1685008, 1776354, 1771865, 1791186, 1726395, 1765614, 1761465, 1726787, 1820988, 1740702, 1798022, 1773037, 1793386, 1762609, 1787606, 1783900, 1783296, 1742663, 1753627, 1712832, 1761413, 1787301, 1717277, 1723579, 1769770, 1794380, 1728317, 1715797, 1754168, 1786345, 1735589, 1733840, 1732781, 1763581, 1749127, 1682936, 1786087, 1773342, 1730568, 1769476, 1751017, 1727307, 1759243, 1775005, 1786311, 1715049, 1732291, 1733717, 1763415, 1756020, 1671379, 1726839, 1754670, 1767914, 1767415, 1749073, 1781447, 1721031, 1767415, 1730041, 1772311, 1800313, 1839667, 1755540, 1769252, 1702621, 1755169, 1765525, 1735702, 1757488, 1786064, 1785731, 1765363, 1778220, 1782036, 1773938, 1732669, 1779243, 1723849, 1727295, 1759193, 1752389, 1829594, 1728744, 1808057, 1710744, 1789044, 1776388, 1753445, 1726241, 1735593, 1745995, 1737596, 1696554, 1740728, 1724131, 1738794, 1783320, 1787572, 1766466, 1782416, 1674503, 1694205, 1713357, 1774957, 1779369, 1727363, 1760225, 1763216, 1687248, 1752344, 1752641, 1761218, 1743239, 1773010, 1833798, 1730662, 1750530, 1825217, 1712102, 1723817, 1719619, 1729698, 1806920, 1799030, 1717165, 1722403, 1723843, 1765034, 1752719, 1794209, 1775896, 1791090, 1751007, 1739895, 1783266, 1735454, 1756807, 1749073, 1818166, 1828101, 1808988, 1776412, 1780907, 1798698, 1840405, 1789548, 1773342, 1760891, 1801497, 1775148, 1782168, 1731976, 1691213, 1743829, 1744615, 1798632, 1760395, 1840715, 1739761, 1783679, 1742749, 1749923, 1729527, 1758568, 1781185, 1772550, 1756219, 1767323, 1729659, 1767699, 1754168, 1762646, 1766214, 1779209, 1757701, 1750558, 1846788, 1751064, 1724641, 1773973, 1703635, 1798868, 1716747, 1755555, 1735298, 1734585, 1754631, 1803963, 1702661, 1713548, 1782528, 1677711 ],
        "0" : [ 830145, 830145, 754677, 830145, 830145, 830145, 754677, 754677, 830145, 830145, 830145, 754677, 830145, 830145, 754677, 830145, 830145, 830145, 754677, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 754677, 830145, 830145, 754677, 830145, 830145, 754677, 754677, 754677, 754677, 754677, 830145, 754677, 830145, 830145, 754677, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 754677, 754677, 754677, 830145, 830145, 830145, 754677, 830145, 754677, 830145, 830145, 754677, 830145, 830145, 830145, 754677, 754677, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 754677, 754677, 754677, 754677, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 754677, 754677, 830145, 754677, 754677, 830145, 830145, 754677, 830145, 830145, 830145, 830145, 754677, 754677, 830145, 830145, 830145, 754677, 830145, 830145, 754677, 754677, 754677, 830145, 754677, 830145, 830145, 754677, 830145, 830145, 754677, 754677, 754677, 754677, 830145, 830145, 830145, 830145, 754677, 754677, 830145, 830145, 830145, 830145, 754677, 754677, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 830145, 754677, 754677, 830145, 830145, 754677, 830145, 830145, 830145, 830145, 830145, 754677, 830145, 830145, 830145, 830145, 830145, 754677, 830145, 754677, 830145, 754677, 754677, 830145, 830145, 754677, 830145, 830145, 830145, 830145, 754677, 830145, 830145, 830145, 754677, 754677, 830145, 830145, 830145, 830145, 830145, 754677 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 16,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 14,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 24 ],
      "Objectives" : {
        "DurationInMs" : 26279,
        "TotalTasksDurationInMs" : 34731,
        "IOBytes" : {
          "Total" : 564527396,
          "Details" : {
            "IR" : 0,
            "IW" : 0,
            "SR" : 486962499,
            "SW" : 77564897
          }
        }
      }
    },
    "0" : {
      "QSLogical" : {
        "operators" : {
          "0" : {
            "sign" : -1498790795,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 9216,
                "rowCount" : 576
              },
              "compileTime" : {
                "sizeInBytes" : 9216,
                "rowCount" : 576
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#71, d_year#77] "
          },
          "1" : {
            "sign" : -1707248010,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 141696,
                "rowCount" : 576
              },
              "compileTime" : {
                "sizeInBytes" : 141696,
                "rowCount" : 576
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(d_year#77) AND (d_year#77 = 2001)) AND isnotnull(d_date_sk#71)) "
          },
          "2" : {
            "sign" : -668436058,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 17970054,
                "rowCount" : 73049
              },
              "compileTime" : {
                "sizeInBytes" : 17970054,
                "rowCount" : 73049
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#71, d_date_id#72, d_date#73, d_month_seq#74, d_week_seq#75, d_quarter_seq#76, d_year#77, d_dow#78, d_moy#79, d_dom#80, d_qoy#81, d_fy_year#82, d_fy_quarter_seq#83, d_fy_week_seq#84, d_day_name#85, d_quarter_name#86, d_holiday#87, d_weekend#88, d_following_holiday#89, d_first_dom#90, d_last_dom#91, d_same_day_ly#92, d_same_day_lq#93, d_current_day#94, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "LogicalRelation",
          "toId" : 1,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Filter",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [d_date_sk#71, d_year#77]\n+- Filter ((isnotnull(d_year#77) AND (d_year#77 = 2001)) AND isnotnull(d_date_sk#71))\n   +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#71,d_date_id#72,d_date#73,d_month_seq#74,d_week_seq#75,d_quarter_seq#76,d_year#77,d_dow#78,d_moy#79,d_dom#80,d_qoy#81,d_fy_year#82,d_fy_quarter_seq#83,d_fy_week_seq#84,d_day_name#85,d_quarter_name#86,d_holiday#87,d_weekend#88,d_following_holiday#89,d_first_dom#90,d_last_dom#91,d_same_day_ly#92,d_same_day_lq#93,d_current_day#94,... 4 more fields] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "0" : {
            "sign" : 1187292138,
            "className" : "org.apache.spark.sql.execution.FilterExec",
            "sizeInBytes" : 9216,
            "rowCount" : 576,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Input [2]: [d_date_sk#71, d_year#77] Condition : ((isnotnull(d_year#77) AND (d_year#77 = 2001)) AND isnotnull(d_date_sk#71)) "
          },
          "1" : {
            "sign" : -769536230,
            "className" : "org.apache.spark.sql.execution.FileSourceScanExec",
            "sizeInBytes" : 9216,
            "rowCount" : 576,
            "isRuntime" : false,
            "predicate" : " (unknown) Scan parquet spark_catalog.tpcds_100.date_dim Output [2]: [d_date_sk#71, d_year#77] Batched: true Location: InMemoryFileIndex [hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim] PushedFilters: [IsNotNull(d_year), EqualTo(d_year,2001), IsNotNull(d_date_sk)] ReadSchema: struct<d_date_sk:int,d_year:int> "
          }
        },
        "links" : [ {
          "fromId" : 1,
          "fromName" : "Scan parquet spark_catalog.tpcds_100.date_dim",
          "toId" : 0,
          "toName" : "Filter",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Filter ((isnotnull(d_year#77) AND (d_year#77 = 2001)) AND isnotnull(d_date_sk#71))\n+- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#71,d_year#77] Batched: true, DataFilters: [isnotnull(d_year#77), (d_year#77 = 2001), isnotnull(d_date_sk#71)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), EqualTo(d_year,2001), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>\n"
      },
      "IM" : {
        "inputSizeInBytes" : 9216,
        "inputRowCount" : 576
      },
      "InitialPartitionNum" : 0,
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 0,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 4 ],
      "Objectives" : {
        "DurationInMs" : 1576,
        "TotalTasksDurationInMs" : 399,
        "IOBytes" : {
          "Total" : 93562,
          "Details" : {
            "IR" : 93562,
            "IW" : 0,
            "SR" : 0,
            "SW" : 0
          }
        }
      }
    },
    "20" : {
      "QSLogical" : {
        "operators" : {
          "0" : {
            "sign" : -1414276816,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 294918952,
                "rowCount" : 1593836
              },
              "compileTime" : {
                "sizeInBytes" : 7435110696,
                "rowCount" : 142982898
              }
            },
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [c_customer_id#4747, c_first_name#4754, c_last_name#4755, c_preferred_cust_flag#4756, c_birth_country#4760, c_login#4761, c_email_address#4762, d_year#4804], [c_customer_id#4747 AS customer_id#2970, sum(((((cs_ext_list_price#4788 - cs_ext_wholesale_cost#4787) - cs_ext_discount_amt#4785) + cs_ext_sales_price#4786) / 2)) AS year_total#2978], HashAggregate(keys=[c_customer_id#4747, c_first_name#4754, c_last_name#4755, c_preferred_cust_flag#4756, c_birth_country#4760, c_login#4761, c_email_address#4762, d_year#4804], functions=[sum(((((cs_ext_list_price#4788 - cs_ext_wholesale_cost#4787) - cs_ext_discount_amt#4785) + cs_ext_sales_price#4786) / 2))]) "
          }
        },
        "links" : [ ],
        "rawPlan" : "LogicalQueryStage Aggregate [c_customer_id#4747, c_first_name#4754, c_last_name#4755, c_preferred_cust_flag#4756, c_birth_country#4760, c_login#4761, c_email_address#4762, d_year#4804], [c_customer_id#4747 AS customer_id#2970, sum(((((cs_ext_list_price#4788 - cs_ext_wholesale_cost#4787) - cs_ext_discount_amt#4785) + cs_ext_sales_price#4786) / 2)) AS year_total#2978], HashAggregate(keys=[c_customer_id#4747, c_first_name#4754, c_last_name#4755, c_preferred_cust_flag#4756, c_birth_country#4760, c_login#4761, c_email_address#4762, d_year#4804], functions=[sum(((((cs_ext_list_price#4788 - cs_ext_wholesale_cost#4787) - cs_ext_discount_amt#4785) + cs_ext_sales_price#4786) / 2))])\n"
      },
      "QSPhysical" : {
        "operators" : {
          "0" : {
            "sign" : 670859025,
            "className" : "org.apache.spark.sql.execution.aggregate.HashAggregateExec",
            "sizeInBytes" : 294918952,
            "rowCount" : 1593836,
            "isRuntime" : true,
            "predicate" : " (unknown) HashAggregate Input [10]: [c_customer_id#4747, c_first_name#4754, c_last_name#4755, c_preferred_cust_flag#4756, c_birth_country#4760, c_login#4761, c_email_address#4762, d_year#4804, sum#5514, isEmpty#5515] Keys [8]: [c_customer_id#4747, c_first_name#4754, c_last_name#4755, c_preferred_cust_flag#4756, c_birth_country#4760, c_login#4761, c_email_address#4762, d_year#4804] Functions [1]: [sum(((((cs_ext_list_price#4788 - cs_ext_wholesale_cost#4787) - cs_ext_discount_amt#4785) + cs_ext_sales_price#4786) / 2))] Aggregate Attributes [1]: [sum(((((cs_ext_list_price#4788 - cs_ext_wholesale_cost#4787) - cs_ext_discount_amt#4785) + cs_ext_sales_price#4786) / 2))#2948] Results [2]: [c_customer_id#4747 AS customer_id#2970, sum(((((cs_ext_list_price#4788 - cs_ext_wholesale_cost#4787) - cs_ext_discount_amt#4785) + cs_ext_sales_price#4786) / 2))#2948 AS year_total#2978] "
          },
          "1" : {
            "sign" : -1968897601,
            "className" : "org.apache.spark.sql.execution.adaptive.ShuffleQueryStageExec",
            "sizeInBytes" : 7435110696,
            "rowCount" : 142982898,
            "isRuntime" : false,
            "predicate" : " (unknown) ShuffleQueryStage Output [10]: [c_customer_id#4747, c_first_name#4754, c_last_name#4755, c_preferred_cust_flag#4756, c_birth_country#4760, c_login#4761, c_email_address#4762, d_year#4804, sum#5514, isEmpty#5515] Arguments: 31 "
          }
        },
        "links" : [ {
          "fromId" : 1,
          "fromName" : "ShuffleQueryStage",
          "toId" : 0,
          "toName" : "HashAggregate",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "HashAggregate(keys=[c_customer_id#4747, c_first_name#4754, c_last_name#4755, c_preferred_cust_flag#4756, c_birth_country#4760, c_login#4761, c_email_address#4762, d_year#4804], functions=[sum(((((cs_ext_list_price#4788 - cs_ext_wholesale_cost#4787) - cs_ext_discount_amt#4785) + cs_ext_sales_price#4786) / 2))], output=[customer_id#2970, year_total#2978])\n+- ShuffleQueryStage 31\n   +- Exchange hashpartitioning(c_customer_id#4747, c_first_name#4754, c_last_name#4755, c_preferred_cust_flag#4756, c_birth_country#4760, c_login#4761, c_email_address#4762, d_year#4804, 200), ENSURE_REQUIREMENTS, [plan_id=4025]\n      +- *(33) HashAggregate(keys=[c_customer_id#4747, c_first_name#4754, c_last_name#4755, c_preferred_cust_flag#4756, c_birth_country#4760, c_login#4761, c_email_address#4762, d_year#4804], functions=[partial_sum(((((cs_ext_list_price#4788 - cs_ext_wholesale_cost#4787) - cs_ext_discount_amt#4785) + cs_ext_sales_price#4786) / 2))], output=[c_customer_id#4747, c_first_name#4754, c_last_name#4755, c_preferred_cust_flag#4756, c_birth_country#4760, c_login#4761, c_email_address#4762, d_year#4804, sum#5514, isEmpty#5515])\n         +- *(33) Project [c_customer_id#4747, c_first_name#4754, c_last_name#4755, c_preferred_cust_flag#4756, c_birth_country#4760, c_login#4761, c_email_address#4762, cs_ext_discount_amt#4785, cs_ext_sales_price#4786, cs_ext_wholesale_cost#4787, cs_ext_list_price#4788, d_year#4804]\n            +- *(33) SortMergeJoin [cs_bill_customer_sk#4766], [c_customer_sk#4746], Inner\n               :- *(31) Sort [cs_bill_customer_sk#4766 ASC NULLS FIRST], false, 0\n               :  +- AQEShuffleRead coalesced\n               :     +- ShuffleQueryStage 25\n               :        +- Exchange hashpartitioning(cs_bill_customer_sk#4766, 200), ENSURE_REQUIREMENTS, [plan_id=2320]\n               :           +- *(17) Project [cs_bill_customer_sk#4766, cs_ext_discount_amt#4785, cs_ext_sales_price#4786, cs_ext_wholesale_cost#4787, cs_ext_list_price#4788, d_year#4804]\n               :              +- *(17) BroadcastHashJoin [cs_sold_date_sk#4797], [d_date_sk#4798], Inner, BuildRight, false\n               :                 :- *(17) Filter isnotnull(cs_bill_customer_sk#4766)\n               :                 :  +- *(17) ColumnarToRow\n               :                 :     +- FileScan parquet spark_catalog.tpcds_100.catalog_sales[cs_bill_customer_sk#4766,cs_ext_discount_amt#4785,cs_ext_sales_price#4786,cs_ext_wholesale_cost#4787,cs_ext_list_price#4788,cs_sold_date_sk#4797] Batched: true, DataFilters: [isnotnull(cs_bill_customer_sk#4766)], Format: Parquet, Location: InMemoryFileIndex(1836 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/catalo..., PartitionFilters: [isnotnull(cs_sold_date_sk#4797), dynamicpruningexpression(cs_sold_date_sk#4797 IN dynamicpruning..., PushedFilters: [IsNotNull(cs_bill_customer_sk)], ReadSchema: struct<cs_bill_customer_sk:int,cs_ext_discount_amt:decimal(7,2),cs_ext_sales_price:decimal(7,2),c...\n               :                 :           +- ReusedSubquery SubqueryBroadcast dynamicpruning#5495, 0, [d_date_sk#4240], [id=#2219]\n               :                 +- BroadcastQueryStage 10\n               :                    +- ReusedExchange [d_date_sk#4798, d_year#4804], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=746]\n               +- *(32) Sort [c_customer_sk#4746 ASC NULLS FIRST], false, 0\n                  +- AQEShuffleRead coalesced\n                     +- ShuffleQueryStage 12\n                        +- ReusedExchange [c_customer_sk#4746, c_customer_id#4747, c_first_name#4754, c_last_name#4755, c_preferred_cust_flag#4756, c_birth_country#4760, c_login#4761, c_email_address#4762], Exchange hashpartitioning(c_customer_sk#30, 200), ENSURE_REQUIREMENTS, [plan_id=681]\n"
      },
      "IM" : {
        "inputSizeInBytes" : 294918952,
        "inputRowCount" : 1593836
      },
      "InitialPartitionNum" : 200,
      "PD" : {
        "11" : [ 720057, 709112, 727126, 714346, 714346, 724814, 717913, 730048, 714346, 716181, 730048, 731883, 725291, 725291, 726649, 723147, 730048, 719580, 717913, 719580, 717913, 709589, 717913, 703878, 710947, 712679, 710947, 720057, 724814, 714346, 711424, 712679, 713156, 715300, 713156, 712679, 727171, 728381, 721415, 723147, 731883, 735759, 712679, 719580, 731883, 731883, 714346, 707922, 716397, 714823, 707445, 721892, 735282, 719580, 711424, 704355, 719580, 727126, 724814, 713156, 716181, 720102, 709112, 714346, 735282, 725291, 723147, 689130, 728381, 735282, 721415, 727126, 704832, 714346, 697454, 720057, 714823, 714346, 735282, 713156, 714346, 714346, 714823, 704355, 725291, 707922, 709785, 711163, 716181, 735282, 728381, 723147, 719580, 728381, 714346, 719580, 732882, 699121, 714346, 723147, 724814, 720057, 712679, 723147, 714346, 714346, 730048, 711640, 730048, 735804, 723147, 719580, 730048, 716658, 752819, 730048, 731883, 731883, 720534, 728381, 730048, 731883, 697454, 714823, 720057, 721415, 716181, 714346, 721415, 719580, 704355, 720057, 726649, 733615, 719580, 709112, 732360, 713156, 721415, 728858, 724814, 700956, 704355, 714346, 720057, 701172, 745750, 726649, 733900, 730048, 719580, 730048, 740516, 698644, 721892, 714346, 717913, 709112, 717913, 721415, 717913, 721892, 730048, 724814, 710947, 704355, 730048, 699598, 714346, 716181, 735759, 711424, 714346, 714346, 705929, 735282, 721892, 730048, 728381, 735282, 735282, 703878, 724814, 724814, 723147, 723147, 709112, 723147, 712679, 710066, 706190, 716397, 719580, 718390, 717913, 741038, 726649, 721415, 733615, 720057 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 20,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 43 ],
      "Objectives" : {
        "DurationInMs" : 1895,
        "TotalTasksDurationInMs" : 4288,
        "IOBytes" : {
          "Total" : 163209589,
          "Details" : {
            "IR" : 0,
            "IW" : 0,
            "SR" : 137260270,
            "SW" : 25949319
          }
        }
      }
    },
    "2" : {
      "QSLogical" : {
        "operators" : {
          "0" : {
            "sign" : -2111102187,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 366000000,
                "rowCount" : 2000000
              },
              "compileTime" : {
                "sizeInBytes" : 366000000,
                "rowCount" : 2000000
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_customer_sk#30, c_customer_id#31, c_first_name#38, c_last_name#39, c_preferred_cust_flag#40, c_birth_country#44, c_login#45, c_email_address#46] "
          },
          "1" : {
            "sign" : 18954722,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 500000000,
                "rowCount" : 2000000
              },
              "compileTime" : {
                "sizeInBytes" : 500000000,
                "rowCount" : 2000000
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(c_customer_sk#30) AND isnotnull(c_customer_id#31)) "
          },
          "2" : {
            "sign" : -1114220934,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 500000000,
                "rowCount" : 2000000
              },
              "compileTime" : {
                "sizeInBytes" : 500000000,
                "rowCount" : 2000000
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [c_customer_sk#30, c_customer_id#31, c_current_cdemo_sk#32, c_current_hdemo_sk#33, c_current_addr_sk#34, c_first_shipto_date_sk#35, c_first_sales_date_sk#36, c_salutation#37, c_first_name#38, c_last_name#39, c_preferred_cust_flag#40, c_birth_day#41, c_birth_month#42, c_birth_year#43, c_birth_country#44, c_login#45, c_email_address#46, c_last_review_date#47], `spark_catalog`.`tpcds_100`.`customer`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "LogicalRelation",
          "toId" : 1,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Filter",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [c_customer_sk#30, c_customer_id#31, c_first_name#38, c_last_name#39, c_preferred_cust_flag#40, c_birth_country#44, c_login#45, c_email_address#46]\n+- Filter (isnotnull(c_customer_sk#30) AND isnotnull(c_customer_id#31))\n   +- Relation spark_catalog.tpcds_100.customer[c_customer_sk#30,c_customer_id#31,c_current_cdemo_sk#32,c_current_hdemo_sk#33,c_current_addr_sk#34,c_first_shipto_date_sk#35,c_first_sales_date_sk#36,c_salutation#37,c_first_name#38,c_last_name#39,c_preferred_cust_flag#40,c_birth_day#41,c_birth_month#42,c_birth_year#43,c_birth_country#44,c_login#45,c_email_address#46,c_last_review_date#47] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "0" : {
            "sign" : 1845073101,
            "className" : "org.apache.spark.sql.execution.FilterExec",
            "sizeInBytes" : 366000000,
            "rowCount" : 2000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Input [8]: [c_customer_sk#30, c_customer_id#31, c_first_name#38, c_last_name#39, c_preferred_cust_flag#40, c_birth_country#44, c_login#45, c_email_address#46] Condition : (isnotnull(c_customer_sk#30) AND isnotnull(c_customer_id#31)) "
          },
          "1" : {
            "sign" : -1380570779,
            "className" : "org.apache.spark.sql.execution.FileSourceScanExec",
            "sizeInBytes" : 366000000,
            "rowCount" : 2000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Scan parquet spark_catalog.tpcds_100.customer Output [8]: [c_customer_sk#30, c_customer_id#31, c_first_name#38, c_last_name#39, c_preferred_cust_flag#40, c_birth_country#44, c_login#45, c_email_address#46] Batched: true Location: InMemoryFileIndex [hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/customer] PushedFilters: [IsNotNull(c_customer_sk), IsNotNull(c_customer_id)] ReadSchema: struct<c_customer_sk:int,c_customer_id:string,c_first_name:string,c_last_name:string,c_preferred_cust_flag:string,c_birth_country:string,c_login:string,c_email_address:string> "
          }
        },
        "links" : [ {
          "fromId" : 1,
          "fromName" : "Scan parquet spark_catalog.tpcds_100.customer",
          "toId" : 0,
          "toName" : "Filter",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Filter (isnotnull(c_customer_sk#30) AND isnotnull(c_customer_id#31))\n+- FileScan parquet spark_catalog.tpcds_100.customer[c_customer_sk#30,c_customer_id#31,c_first_name#38,c_last_name#39,c_preferred_cust_flag#40,c_birth_country#44,c_login#45,c_email_address#46] Batched: true, DataFilters: [isnotnull(c_customer_sk#30), isnotnull(c_customer_id#31)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/customer], PartitionFilters: [], PushedFilters: [IsNotNull(c_customer_sk), IsNotNull(c_customer_id)], ReadSchema: struct<c_customer_sk:int,c_customer_id:string,c_first_name:string,c_last_name:string,c_preferred_...\n"
      },
      "IM" : {
        "inputSizeInBytes" : 366000000,
        "inputRowCount" : 2000000
      },
      "InitialPartitionNum" : 0,
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 1,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 3 ],
      "Objectives" : {
        "DurationInMs" : 5837,
        "TotalTasksDurationInMs" : 31484,
        "IOBytes" : {
          "Total" : 225576626,
          "Details" : {
            "IR" : 73858192,
            "IW" : 0,
            "SR" : 0,
            "SW" : 151718434
          }
        }
      }
    },
    "18" : {
      "QSLogical" : {
        "operators" : {
          "0" : {
            "sign" : 1410425053,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 336596320,
                "rowCount" : 1819089
              },
              "compileTime" : {
                "sizeInBytes" : 35480669679,
                "rowCount" : 275043951
              }
            },
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [c_customer_id#4200, c_first_name#4207, c_last_name#4208, c_preferred_cust_flag#4209, c_birth_country#4213, c_login#4214, c_email_address#4215, d_year#4246], [c_customer_id#4200 AS customer_id#2950, c_first_name#4207 AS customer_first_name#2951, c_last_name#4208 AS customer_last_name#2952, c_email_address#4215 AS customer_email_address#2956, sum(((((ss_ext_list_price#4233 - ss_ext_wholesale_cost#4232) - ss_ext_discount_amt#4230) + ss_ext_sales_price#4231) / 2)) AS year_total#2958], HashAggregate(keys=[c_customer_id#4200, c_first_name#4207, c_last_name#4208, c_preferred_cust_flag#4209, c_birth_country#4213, c_login#4214, c_email_address#4215, d_year#4246], functions=[sum(((((ss_ext_list_price#4233 - ss_ext_wholesale_cost#4232) - ss_ext_discount_amt#4230) + ss_ext_sales_price#4231) / 2))]) "
          }
        },
        "links" : [ ],
        "rawPlan" : "LogicalQueryStage Aggregate [c_customer_id#4200, c_first_name#4207, c_last_name#4208, c_preferred_cust_flag#4209, c_birth_country#4213, c_login#4214, c_email_address#4215, d_year#4246], [c_customer_id#4200 AS customer_id#2950, c_first_name#4207 AS customer_first_name#2951, c_last_name#4208 AS customer_last_name#2952, c_email_address#4215 AS customer_email_address#2956, sum(((((ss_ext_list_price#4233 - ss_ext_wholesale_cost#4232) - ss_ext_discount_amt#4230) + ss_ext_sales_price#4231) / 2)) AS year_total#2958], HashAggregate(keys=[c_customer_id#4200, c_first_name#4207, c_last_name#4208, c_preferred_cust_flag#4209, c_birth_country#4213, c_login#4214, c_email_address#4215, d_year#4246], functions=[sum(((((ss_ext_list_price#4233 - ss_ext_wholesale_cost#4232) - ss_ext_discount_amt#4230) + ss_ext_sales_price#4231) / 2))])\n"
      },
      "QSPhysical" : {
        "operators" : {
          "0" : {
            "sign" : -1640060212,
            "className" : "org.apache.spark.sql.execution.aggregate.HashAggregateExec",
            "sizeInBytes" : 336596320,
            "rowCount" : 1819089,
            "isRuntime" : true,
            "predicate" : " (unknown) HashAggregate Input [10]: [c_customer_id#4200, c_first_name#4207, c_last_name#4208, c_preferred_cust_flag#4209, c_birth_country#4213, c_login#4214, c_email_address#4215, d_year#4246, sum#5506, isEmpty#5507] Keys [8]: [c_customer_id#4200, c_first_name#4207, c_last_name#4208, c_preferred_cust_flag#4209, c_birth_country#4213, c_login#4214, c_email_address#4215, d_year#4246] Functions [1]: [sum(((((ss_ext_list_price#4233 - ss_ext_wholesale_cost#4232) - ss_ext_discount_amt#4230) + ss_ext_sales_price#4231) / 2))] Aggregate Attributes [1]: [sum(((((ss_ext_list_price#4233 - ss_ext_wholesale_cost#4232) - ss_ext_discount_amt#4230) + ss_ext_sales_price#4231) / 2))#2947] Results [5]: [c_customer_id#4200 AS customer_id#2950, c_first_name#4207 AS customer_first_name#2951, c_last_name#4208 AS customer_last_name#2952, c_email_address#4215 AS customer_email_address#2956, sum(((((ss_ext_list_price#4233 - ss_ext_wholesale_cost#4232) - ss_ext_discount_amt#4230) + ss_ext_sales_price#4231) / 2))#2947 AS year_total#2958] "
          },
          "1" : {
            "sign" : 1841519490,
            "className" : "org.apache.spark.sql.execution.adaptive.ShuffleQueryStageExec",
            "sizeInBytes" : 35480669679,
            "rowCount" : 275043951,
            "isRuntime" : false,
            "predicate" : " (unknown) ShuffleQueryStage Output [10]: [c_customer_id#4200, c_first_name#4207, c_last_name#4208, c_preferred_cust_flag#4209, c_birth_country#4213, c_login#4214, c_email_address#4215, d_year#4246, sum#5506, isEmpty#5507] Arguments: 30 "
          }
        },
        "links" : [ {
          "fromId" : 1,
          "fromName" : "ShuffleQueryStage",
          "toId" : 0,
          "toName" : "HashAggregate",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "HashAggregate(keys=[c_customer_id#4200, c_first_name#4207, c_last_name#4208, c_preferred_cust_flag#4209, c_birth_country#4213, c_login#4214, c_email_address#4215, d_year#4246], functions=[sum(((((ss_ext_list_price#4233 - ss_ext_wholesale_cost#4232) - ss_ext_discount_amt#4230) + ss_ext_sales_price#4231) / 2))], output=[customer_id#2950, customer_first_name#2951, customer_last_name#2952, customer_email_address#2956, year_total#2958])\n+- ShuffleQueryStage 30\n   +- Exchange hashpartitioning(c_customer_id#4200, c_first_name#4207, c_last_name#4208, c_preferred_cust_flag#4209, c_birth_country#4213, c_login#4214, c_email_address#4215, d_year#4246, 200), ENSURE_REQUIREMENTS, [plan_id=3835]\n      +- *(30) HashAggregate(keys=[c_customer_id#4200, c_first_name#4207, c_last_name#4208, c_preferred_cust_flag#4209, c_birth_country#4213, c_login#4214, c_email_address#4215, d_year#4246], functions=[partial_sum(((((ss_ext_list_price#4233 - ss_ext_wholesale_cost#4232) - ss_ext_discount_amt#4230) + ss_ext_sales_price#4231) / 2))], output=[c_customer_id#4200, c_first_name#4207, c_last_name#4208, c_preferred_cust_flag#4209, c_birth_country#4213, c_login#4214, c_email_address#4215, d_year#4246, sum#5506, isEmpty#5507])\n         +- *(30) Project [c_customer_id#4200, c_first_name#4207, c_last_name#4208, c_preferred_cust_flag#4209, c_birth_country#4213, c_login#4214, c_email_address#4215, ss_ext_discount_amt#4230, ss_ext_sales_price#4231, ss_ext_wholesale_cost#4232, ss_ext_list_price#4233, d_year#4246]\n            +- *(30) SortMergeJoin [ss_customer_sk#4219], [c_customer_sk#4199], Inner\n               :- *(28) Sort [ss_customer_sk#4219 ASC NULLS FIRST], false, 0\n               :  +- AQEShuffleRead coalesced\n               :     +- ShuffleQueryStage 24\n               :        +- Exchange hashpartitioning(ss_customer_sk#4219, 200), ENSURE_REQUIREMENTS, [plan_id=2245]\n               :           +- *(16) Project [ss_customer_sk#4219, ss_ext_discount_amt#4230, ss_ext_sales_price#4231, ss_ext_wholesale_cost#4232, ss_ext_list_price#4233, d_year#4246]\n               :              +- *(16) BroadcastHashJoin [ss_sold_date_sk#4239], [d_date_sk#4240], Inner, BuildRight, false\n               :                 :- *(16) Filter isnotnull(ss_customer_sk#4219)\n               :                 :  +- *(16) ColumnarToRow\n               :                 :     +- FileScan parquet spark_catalog.tpcds_100.store_sales[ss_customer_sk#4219,ss_ext_discount_amt#4230,ss_ext_sales_price#4231,ss_ext_wholesale_cost#4232,ss_ext_list_price#4233,ss_sold_date_sk#4239] Batched: true, DataFilters: [isnotnull(ss_customer_sk#4219)], Format: Parquet, Location: InMemoryFileIndex(1823 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/store_..., PartitionFilters: [isnotnull(ss_sold_date_sk#4239), dynamicpruningexpression(ss_sold_date_sk#4239 IN dynamicpruning..., PushedFilters: [IsNotNull(ss_customer_sk)], ReadSchema: struct<ss_customer_sk:int,ss_ext_discount_amt:decimal(7,2),ss_ext_sales_price:decimal(7,2),ss_ext...\n               :                 :           +- SubqueryBroadcast dynamicpruning#5495, 0, [d_date_sk#4240], [id=#2219]\n               :                 :              +- AdaptiveSparkPlan isFinalPlan=true\n                                                   +- == Final Plan ==\n                                                      BroadcastQueryStage 1\n                                                      +- ReusedExchange [d_date_sk#4240, d_year#4246], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=746]\n                                                   +- == Initial Plan ==\n                                                      BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=2216]\n                                                      +- Filter ((isnotnull(d_year#4246) AND (d_year#4246 = 2002)) AND isnotnull(d_date_sk#4240))\n                                                         +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#4240,d_year#4246] Batched: true, DataFilters: [isnotnull(d_year#4246), (d_year#4246 = 2002), isnotnull(d_date_sk#4240)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), EqualTo(d_year,2002), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>\n               :                 +- BroadcastQueryStage 2\n               :                    +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=746]\n               :                       +- *(3) Filter ((isnotnull(d_year#4246) AND (d_year#4246 = 2002)) AND isnotnull(d_date_sk#4240))\n               :                          +- *(3) ColumnarToRow\n               :                             +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#4240,d_year#4246] Batched: true, DataFilters: [isnotnull(d_year#4246), (d_year#4246 = 2002), isnotnull(d_date_sk#4240)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), EqualTo(d_year,2002), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>\n               +- *(29) Sort [c_customer_sk#4199 ASC NULLS FIRST], false, 0\n                  +- AQEShuffleRead coalesced\n                     +- ShuffleQueryStage 4\n                        +- ReusedExchange [c_customer_sk#4199, c_customer_id#4200, c_first_name#4207, c_last_name#4208, c_preferred_cust_flag#4209, c_birth_country#4213, c_login#4214, c_email_address#4215], Exchange hashpartitioning(c_customer_sk#30, 200), ENSURE_REQUIREMENTS, [plan_id=681]\n"
      },
      "IM" : {
        "inputSizeInBytes" : 336596320,
        "inputRowCount" : 1819089
      },
      "InitialPartitionNum" : 200,
      "PD" : {
        "10" : [ 814938, 818154, 810290, 821728, 794204, 818154, 821728, 830343, 825660, 826018, 817796, 822121, 830343, 818154, 821728, 814615, 813864, 806000, 818189, 817796, 825660, 802068, 822086, 817796, 810290, 809932, 810648, 802426, 825660, 821728, 810290, 806716, 814222, 814222, 814615, 817796, 814222, 818154, 825660, 829592, 818154, 829950, 817796, 818547, 806000, 818512, 826446, 814222, 802784, 810325, 802068, 798852, 822086, 822086, 809932, 818547, 829592, 822086, 826018, 817796, 833524, 818189, 818547, 817796, 829985, 814222, 814222, 802784, 829950, 821728, 822121, 822086, 806716, 818547, 806358, 830343, 799245, 814222, 837456, 814222, 802068, 813864, 825660, 802426, 829950, 814615, 802426, 818154, 818154, 825660, 825660, 817796, 829592, 821728, 817796, 825660, 846464, 806358, 821728, 829592, 825660, 810648, 825660, 810290, 814580, 818154, 833917, 826446, 814222, 833917, 810290, 817796, 818547, 822086, 841388, 826053, 813864, 829592, 811041, 822479, 822479, 838600, 814222, 821728, 814222, 826411, 814257, 821728, 809932, 817796, 802784, 829592, 826018, 822086, 817796, 809932, 821728, 814973, 806751, 825660, 821728, 809932, 802784, 802426, 826018, 802426, 833524, 822479, 829985, 818154, 817796, 825660, 829592, 802426, 813864, 813864, 818154, 822086, 817796, 826053, 813864, 829592, 826053, 817796, 802426, 809932, 837456, 798494, 813864, 814222, 821728, 826053, 821728, 810648, 809932, 829592, 814222, 826018, 826018, 829592, 841388, 802068, 817796, 818905, 814580, 822479, 817796, 818189, 806000, 806358, 809932, 814580, 822479, 829592, 807074, 846106, 825660, 813864, 818547, 822479 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 16,
        "FinishedTasksNum" : 1,
        "FinishedTasksTotalTimeInMs" : 3854.0,
        "FinishedTasksDistributionInMs" : [ 3854.0, 3854.0, 3854.0, 3854.0, 3854.0 ]
      },
      "QueryStageOptimizationId" : 18,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 36 ],
      "Objectives" : {
        "DurationInMs" : 5919,
        "TotalTasksDurationInMs" : 4330,
        "IOBytes" : {
          "Total" : 278342044,
          "Details" : {
            "IR" : 0,
            "IW" : 0,
            "SR" : 156076037,
            "SW" : 122266007
          }
        }
      }
    },
    "7" : {
      "QSLogical" : {
        "operators" : {
          "4" : {
            "sign" : 57807540,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 29800787536,
                "rowCount" : 143273017
              },
              "compileTime" : {
                "sizeInBytes" : 29800787536,
                "rowCount" : 143273017
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [cs_sold_time_sk#4764, cs_ship_date_sk#4765, cs_bill_customer_sk#4766, cs_bill_cdemo_sk#4767, cs_bill_hdemo_sk#4768, cs_bill_addr_sk#4769, cs_ship_customer_sk#4770, cs_ship_cdemo_sk#4771, cs_ship_hdemo_sk#4772, cs_ship_addr_sk#4773, cs_call_center_sk#4774, cs_catalog_page_sk#4775, cs_ship_mode_sk#4776, cs_warehouse_sk#4777, cs_item_sk#4778, cs_promo_sk#4779, cs_order_number#4780L, cs_quantity#4781, cs_wholesale_cost#4782, cs_list_price#4783, cs_sales_price#4784, cs_ext_discount_amt#4785, cs_ext_sales_price#4786, cs_ext_wholesale_cost#4787, ... 10 more fields], `spark_catalog`.`tpcds_100`.`catalog_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "1" : {
            "sign" : -738367793,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 7756910672,
                "rowCount" : 138516262
              },
              "compileTime" : {
                "sizeInBytes" : 7756910672,
                "rowCount" : 138516262
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cs_sold_date_sk#4797 = d_date_sk#4798) "
          },
          "0" : {
            "sign" : -801072055,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 6648780576,
                "rowCount" : 138516262
              },
              "compileTime" : {
                "sizeInBytes" : 6648780576,
                "rowCount" : 138516262
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_bill_customer_sk#4766, cs_ext_discount_amt#4785, cs_ext_sales_price#4786, cs_ext_wholesale_cost#4787, cs_ext_list_price#4788, d_year#4804] "
          },
          "2" : {
            "sign" : -1816861388,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 6842707584,
                "rowCount" : 142556408
              },
              "compileTime" : {
                "sizeInBytes" : 6842707584,
                "rowCount" : 142556408
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_bill_customer_sk#4766, cs_ext_discount_amt#4785, cs_ext_sales_price#4786, cs_ext_wholesale_cost#4787, cs_ext_list_price#4788, cs_sold_date_sk#4797] "
          },
          "3" : {
            "sign" : 251325564,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 29651732864,
                "rowCount" : 142556408
              },
              "compileTime" : {
                "sizeInBytes" : 29651732864,
                "rowCount" : 142556408
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(cs_bill_customer_sk#4766) AND isnotnull(cs_sold_date_sk#4797)) AND dynamicpruning#5497 [cs_sold_date_sk#4797]) "
          }
        },
        "links" : [ {
          "fromId" : 4,
          "fromName" : "LogicalRelation",
          "toId" : 3,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Filter",
          "toId" : 2,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Project",
          "toId" : 1,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Join",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [cs_bill_customer_sk#4766, cs_ext_discount_amt#4785, cs_ext_sales_price#4786, cs_ext_wholesale_cost#4787, cs_ext_list_price#4788, d_year#4804]\n+- Join Inner, (cs_sold_date_sk#4797 = d_date_sk#4798)\n   :- Project [cs_bill_customer_sk#4766, cs_ext_discount_amt#4785, cs_ext_sales_price#4786, cs_ext_wholesale_cost#4787, cs_ext_list_price#4788, cs_sold_date_sk#4797]\n   :  +- Filter ((isnotnull(cs_bill_customer_sk#4766) AND isnotnull(cs_sold_date_sk#4797)) AND dynamicpruning#5497 [cs_sold_date_sk#4797])\n   :     :  +- Project [d_date_sk#4798, d_year#4804]\n   :     :     +- Filter ((isnotnull(d_year#4804) AND (d_year#4804 = 2002)) AND isnotnull(d_date_sk#4798))\n   :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#4798,d_date_id#4799,d_date#4800,d_month_seq#4801,d_week_seq#4802,d_quarter_seq#4803,d_year#4804,d_dow#4805,d_moy#4806,d_dom#4807,d_qoy#4808,d_fy_year#4809,d_fy_quarter_seq#4810,d_fy_week_seq#4811,d_day_name#4812,d_quarter_name#4813,d_holiday#4814,d_weekend#4815,d_following_holiday#4816,d_first_dom#4817,d_last_dom#4818,d_same_day_ly#4819,d_same_day_lq#4820,d_current_day#4821,... 4 more fields] parquet\n   :     +- Relation spark_catalog.tpcds_100.catalog_sales[cs_sold_time_sk#4764,cs_ship_date_sk#4765,cs_bill_customer_sk#4766,cs_bill_cdemo_sk#4767,cs_bill_hdemo_sk#4768,cs_bill_addr_sk#4769,cs_ship_customer_sk#4770,cs_ship_cdemo_sk#4771,cs_ship_hdemo_sk#4772,cs_ship_addr_sk#4773,cs_call_center_sk#4774,cs_catalog_page_sk#4775,cs_ship_mode_sk#4776,cs_warehouse_sk#4777,cs_item_sk#4778,cs_promo_sk#4779,cs_order_number#4780L,cs_quantity#4781,cs_wholesale_cost#4782,cs_list_price#4783,cs_sales_price#4784,cs_ext_discount_amt#4785,cs_ext_sales_price#4786,cs_ext_wholesale_cost#4787,... 10 more fields] parquet\n   +- Project [d_date_sk#4798, d_year#4804]\n      +- Filter ((isnotnull(d_year#4804) AND (d_year#4804 = 2002)) AND isnotnull(d_date_sk#4798))\n         +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#4798,d_date_id#4799,d_date#4800,d_month_seq#4801,d_week_seq#4802,d_quarter_seq#4803,d_year#4804,d_dow#4805,d_moy#4806,d_dom#4807,d_qoy#4808,d_fy_year#4809,d_fy_quarter_seq#4810,d_fy_week_seq#4811,d_day_name#4812,d_quarter_name#4813,d_holiday#4814,d_weekend#4815,d_following_holiday#4816,d_first_dom#4817,d_last_dom#4818,d_same_day_ly#4819,d_same_day_lq#4820,d_current_day#4821,... 4 more fields] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "4" : {
            "sign" : 1595075523,
            "className" : "org.apache.spark.sql.execution.adaptive.BroadcastQueryStageExec",
            "sizeInBytes" : 1051496,
            "rowCount" : 365,
            "isRuntime" : true,
            "predicate" : " (unknown) BroadcastQueryStage Output [2]: [d_date_sk#4798, d_year#4804] Arguments: 10 "
          },
          "1" : {
            "sign" : -1014857135,
            "className" : "org.apache.spark.sql.execution.joins.BroadcastHashJoinExec",
            "sizeInBytes" : 7756910672,
            "rowCount" : 138516262,
            "isRuntime" : false,
            "predicate" : " (unknown) BroadcastHashJoin Left keys [1]: [cs_sold_date_sk#4797] Right keys [1]: [d_date_sk#4798] Join type: Inner Join condition: None "
          },
          "0" : {
            "sign" : -952754771,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 6648780576,
            "rowCount" : 138516262,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [6]: [cs_bill_customer_sk#4766, cs_ext_discount_amt#4785, cs_ext_sales_price#4786, cs_ext_wholesale_cost#4787, cs_ext_list_price#4788, d_year#4804] Input [8]: [cs_bill_customer_sk#4766, cs_ext_discount_amt#4785, cs_ext_sales_price#4786, cs_ext_wholesale_cost#4787, cs_ext_list_price#4788, cs_sold_date_sk#4797, d_date_sk#4798, d_year#4804] "
          },
          "2" : {
            "sign" : 704818723,
            "className" : "org.apache.spark.sql.execution.FilterExec",
            "sizeInBytes" : 6842707584,
            "rowCount" : 142556408,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Input [6]: [cs_bill_customer_sk#4766, cs_ext_discount_amt#4785, cs_ext_sales_price#4786, cs_ext_wholesale_cost#4787, cs_ext_list_price#4788, cs_sold_date_sk#4797] Condition : isnotnull(cs_bill_customer_sk#4766) "
          },
          "3" : {
            "sign" : 183410210,
            "className" : "org.apache.spark.sql.execution.FileSourceScanExec",
            "sizeInBytes" : 6842707584,
            "rowCount" : 142556408,
            "isRuntime" : false,
            "predicate" : " (unknown) Scan parquet spark_catalog.tpcds_100.catalog_sales Output [6]: [cs_bill_customer_sk#4766, cs_ext_discount_amt#4785, cs_ext_sales_price#4786, cs_ext_wholesale_cost#4787, cs_ext_list_price#4788, cs_sold_date_sk#4797] Batched: true Location: InMemoryFileIndex [hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/catalog_sales/cs_sold_date_sk=2450815, ... 1835 entries] PartitionFilters: [isnotnull(cs_sold_date_sk#4797), dynamicpruningexpression(cs_sold_date_sk#4797 IN dynamicpruning#5495)] PushedFilters: [IsNotNull(cs_bill_customer_sk)] ReadSchema: struct<cs_bill_customer_sk:int,cs_ext_discount_amt:decimal(7,2),cs_ext_sales_price:decimal(7,2),cs_ext_wholesale_cost:decimal(7,2),cs_ext_list_price:decimal(7,2)> "
          }
        },
        "links" : [ {
          "fromId" : 3,
          "fromName" : "Scan parquet spark_catalog.tpcds_100.catalog_sales",
          "toId" : 2,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Filter",
          "toId" : 1,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "BroadcastQueryStage",
          "toId" : 1,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "BroadcastHashJoin",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [cs_bill_customer_sk#4766, cs_ext_discount_amt#4785, cs_ext_sales_price#4786, cs_ext_wholesale_cost#4787, cs_ext_list_price#4788, d_year#4804]\n+- BroadcastHashJoin [cs_sold_date_sk#4797], [d_date_sk#4798], Inner, BuildRight, false\n   :- Filter isnotnull(cs_bill_customer_sk#4766)\n   :  +- FileScan parquet spark_catalog.tpcds_100.catalog_sales[cs_bill_customer_sk#4766,cs_ext_discount_amt#4785,cs_ext_sales_price#4786,cs_ext_wholesale_cost#4787,cs_ext_list_price#4788,cs_sold_date_sk#4797] Batched: true, DataFilters: [isnotnull(cs_bill_customer_sk#4766)], Format: Parquet, Location: InMemoryFileIndex(1836 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/catalo..., PartitionFilters: [isnotnull(cs_sold_date_sk#4797), dynamicpruningexpression(cs_sold_date_sk#4797 IN dynamicpruning..., PushedFilters: [IsNotNull(cs_bill_customer_sk)], ReadSchema: struct<cs_bill_customer_sk:int,cs_ext_discount_amt:decimal(7,2),cs_ext_sales_price:decimal(7,2),c...\n   :        +- ReusedSubquery SubqueryBroadcast dynamicpruning#5495, 0, [d_date_sk#4240], [id=#2219]\n   +- BroadcastQueryStage 10\n      +- ReusedExchange [d_date_sk#4798, d_year#4804], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=746]\n"
      },
      "IM" : {
        "inputSizeInBytes" : 6843759080,
        "inputRowCount" : 142556773
      },
      "InitialPartitionNum" : 0,
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 16,
        "FinishedTasksNum" : 13,
        "FinishedTasksTotalTimeInMs" : 18486.0,
        "FinishedTasksDistributionInMs" : [ 1193.0, 1333.0, 1396.0, 1494.0, 1707.0 ]
      },
      "QueryStageOptimizationId" : 7,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 10 ],
      "Objectives" : {
        "DurationInMs" : 9099,
        "TotalTasksDurationInMs" : 21488,
        "IOBytes" : {
          "Total" : 1164761395,
          "Details" : {
            "IR" : 497552854,
            "IW" : 0,
            "SR" : 0,
            "SW" : 667208541
          }
        }
      }
    },
    "3" : {
      "QSLogical" : {
        "operators" : {
          "4" : {
            "sign" : -1587881534,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 41806893656,
                "rowCount" : 275045353
              },
              "compileTime" : {
                "sizeInBytes" : 41806893656,
                "rowCount" : 275045353
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#48, ss_item_sk#49, ss_customer_sk#50, ss_cdemo_sk#51, ss_hdemo_sk#52, ss_addr_sk#53, ss_store_sk#54, ss_promo_sk#55, ss_ticket_number#56L, ss_quantity#57, ss_wholesale_cost#58, ss_list_price#59, ss_sales_price#60, ss_ext_discount_amt#61, ss_ext_sales_price#62, ss_ext_wholesale_cost#63, ss_ext_list_price#64, ss_ext_tax#65, ss_coupon_amt#66, ss_net_paid#67, ss_net_paid_inc_tax#68, ss_net_profit#69, ss_sold_date_sk#70], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "1" : {
            "sign" : 704405852,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 14870272760,
                "rowCount" : 265540585
              },
              "compileTime" : {
                "sizeInBytes" : 14870272760,
                "rowCount" : 265540585
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#70 = d_date_sk#71) "
          },
          "0" : {
            "sign" : -39615024,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 12745948080,
                "rowCount" : 265540585
              },
              "compileTime" : {
                "sizeInBytes" : 12745948080,
                "rowCount" : 265540585
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_customer_sk#50, ss_ext_discount_amt#61, ss_ext_sales_price#62, ss_ext_wholesale_cost#63, ss_ext_list_price#64, d_year#77] "
          },
          "2" : {
            "sign" : 721631770,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 12608114544,
                "rowCount" : 262669053
              },
              "compileTime" : {
                "sizeInBytes" : 12608114544,
                "rowCount" : 262669053
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_customer_sk#50, ss_ext_discount_amt#61, ss_ext_sales_price#62, ss_ext_wholesale_cost#63, ss_ext_list_price#64, ss_sold_date_sk#70] "
          },
          "3" : {
            "sign" : -1087596026,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 39925696056,
                "rowCount" : 262669053
              },
              "compileTime" : {
                "sizeInBytes" : 39925696056,
                "rowCount" : 262669053
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(ss_customer_sk#50) AND isnotnull(ss_sold_date_sk#70)) AND dynamicpruning#5494 [ss_sold_date_sk#70]) "
          }
        },
        "links" : [ {
          "fromId" : 4,
          "fromName" : "LogicalRelation",
          "toId" : 3,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Filter",
          "toId" : 2,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Project",
          "toId" : 1,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Join",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [ss_customer_sk#50, ss_ext_discount_amt#61, ss_ext_sales_price#62, ss_ext_wholesale_cost#63, ss_ext_list_price#64, d_year#77]\n+- Join Inner, (ss_sold_date_sk#70 = d_date_sk#71)\n   :- Project [ss_customer_sk#50, ss_ext_discount_amt#61, ss_ext_sales_price#62, ss_ext_wholesale_cost#63, ss_ext_list_price#64, ss_sold_date_sk#70]\n   :  +- Filter ((isnotnull(ss_customer_sk#50) AND isnotnull(ss_sold_date_sk#70)) AND dynamicpruning#5494 [ss_sold_date_sk#70])\n   :     :  +- Project [d_date_sk#71, d_year#77]\n   :     :     +- Filter ((isnotnull(d_year#77) AND (d_year#77 = 2001)) AND isnotnull(d_date_sk#71))\n   :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#71,d_date_id#72,d_date#73,d_month_seq#74,d_week_seq#75,d_quarter_seq#76,d_year#77,d_dow#78,d_moy#79,d_dom#80,d_qoy#81,d_fy_year#82,d_fy_quarter_seq#83,d_fy_week_seq#84,d_day_name#85,d_quarter_name#86,d_holiday#87,d_weekend#88,d_following_holiday#89,d_first_dom#90,d_last_dom#91,d_same_day_ly#92,d_same_day_lq#93,d_current_day#94,... 4 more fields] parquet\n   :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#48,ss_item_sk#49,ss_customer_sk#50,ss_cdemo_sk#51,ss_hdemo_sk#52,ss_addr_sk#53,ss_store_sk#54,ss_promo_sk#55,ss_ticket_number#56L,ss_quantity#57,ss_wholesale_cost#58,ss_list_price#59,ss_sales_price#60,ss_ext_discount_amt#61,ss_ext_sales_price#62,ss_ext_wholesale_cost#63,ss_ext_list_price#64,ss_ext_tax#65,ss_coupon_amt#66,ss_net_paid#67,ss_net_paid_inc_tax#68,ss_net_profit#69,ss_sold_date_sk#70] parquet\n   +- Project [d_date_sk#71, d_year#77]\n      +- Filter ((isnotnull(d_year#77) AND (d_year#77 = 2001)) AND isnotnull(d_date_sk#71))\n         +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#71,d_date_id#72,d_date#73,d_month_seq#74,d_week_seq#75,d_quarter_seq#76,d_year#77,d_dow#78,d_moy#79,d_dom#80,d_qoy#81,d_fy_year#82,d_fy_quarter_seq#83,d_fy_week_seq#84,d_day_name#85,d_quarter_name#86,d_holiday#87,d_weekend#88,d_following_holiday#89,d_first_dom#90,d_last_dom#91,d_same_day_ly#92,d_same_day_lq#93,d_current_day#94,... 4 more fields] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "4" : {
            "sign" : -1231309620,
            "className" : "org.apache.spark.sql.execution.adaptive.BroadcastQueryStageExec",
            "sizeInBytes" : 1051496,
            "rowCount" : 365,
            "isRuntime" : true,
            "predicate" : " (unknown) BroadcastQueryStage Output [2]: [d_date_sk#71, d_year#77] Arguments: 0 "
          },
          "1" : {
            "sign" : -199996190,
            "className" : "org.apache.spark.sql.execution.joins.BroadcastHashJoinExec",
            "sizeInBytes" : 14870272760,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) BroadcastHashJoin Left keys [1]: [ss_sold_date_sk#70] Right keys [1]: [d_date_sk#71] Join type: Inner Join condition: None "
          },
          "0" : {
            "sign" : 1219462554,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 12745948080,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [6]: [ss_customer_sk#50, ss_ext_discount_amt#61, ss_ext_sales_price#62, ss_ext_wholesale_cost#63, ss_ext_list_price#64, d_year#77] Input [8]: [ss_customer_sk#50, ss_ext_discount_amt#61, ss_ext_sales_price#62, ss_ext_wholesale_cost#63, ss_ext_list_price#64, ss_sold_date_sk#70, d_date_sk#71, d_year#77] "
          },
          "2" : {
            "sign" : 490963635,
            "className" : "org.apache.spark.sql.execution.FilterExec",
            "sizeInBytes" : 12608114544,
            "rowCount" : 262669053,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Input [6]: [ss_customer_sk#50, ss_ext_discount_amt#61, ss_ext_sales_price#62, ss_ext_wholesale_cost#63, ss_ext_list_price#64, ss_sold_date_sk#70] Condition : isnotnull(ss_customer_sk#50) "
          },
          "3" : {
            "sign" : -1333782064,
            "className" : "org.apache.spark.sql.execution.FileSourceScanExec",
            "sizeInBytes" : 12608114544,
            "rowCount" : 262669053,
            "isRuntime" : false,
            "predicate" : " (unknown) Scan parquet spark_catalog.tpcds_100.store_sales Output [6]: [ss_customer_sk#50, ss_ext_discount_amt#61, ss_ext_sales_price#62, ss_ext_wholesale_cost#63, ss_ext_list_price#64, ss_sold_date_sk#70] Batched: true Location: InMemoryFileIndex [hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/store_sales/ss_sold_date_sk=2450816, ... 1822 entries] PartitionFilters: [isnotnull(ss_sold_date_sk#70), dynamicpruningexpression(ss_sold_date_sk#70 IN dynamicpruning#5494)] PushedFilters: [IsNotNull(ss_customer_sk)] ReadSchema: struct<ss_customer_sk:int,ss_ext_discount_amt:decimal(7,2),ss_ext_sales_price:decimal(7,2),ss_ext_wholesale_cost:decimal(7,2),ss_ext_list_price:decimal(7,2)> "
          }
        },
        "links" : [ {
          "fromId" : 3,
          "fromName" : "Scan parquet spark_catalog.tpcds_100.store_sales",
          "toId" : 2,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Filter",
          "toId" : 1,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "BroadcastQueryStage",
          "toId" : 1,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "BroadcastHashJoin",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [ss_customer_sk#50, ss_ext_discount_amt#61, ss_ext_sales_price#62, ss_ext_wholesale_cost#63, ss_ext_list_price#64, d_year#77]\n+- BroadcastHashJoin [ss_sold_date_sk#70], [d_date_sk#71], Inner, BuildRight, false\n   :- Filter isnotnull(ss_customer_sk#50)\n   :  +- FileScan parquet spark_catalog.tpcds_100.store_sales[ss_customer_sk#50,ss_ext_discount_amt#61,ss_ext_sales_price#62,ss_ext_wholesale_cost#63,ss_ext_list_price#64,ss_sold_date_sk#70] Batched: true, DataFilters: [isnotnull(ss_customer_sk#50)], Format: Parquet, Location: InMemoryFileIndex(1823 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/store_..., PartitionFilters: [isnotnull(ss_sold_date_sk#70), dynamicpruningexpression(ss_sold_date_sk#70 IN dynamicpruning#5494)], PushedFilters: [IsNotNull(ss_customer_sk)], ReadSchema: struct<ss_customer_sk:int,ss_ext_discount_amt:decimal(7,2),ss_ext_sales_price:decimal(7,2),ss_ext...\n   :        +- SubqueryBroadcast dynamicpruning#5494, 0, [d_date_sk#71], [id=#1579]\n   :           +- AdaptiveSparkPlan isFinalPlan=false\n   :              +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=1576]\n   :                 +- Filter ((isnotnull(d_year#77) AND (d_year#77 = 2001)) AND isnotnull(d_date_sk#71))\n   :                    +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#71,d_year#77] Batched: true, DataFilters: [isnotnull(d_year#77), (d_year#77 = 2001), isnotnull(d_date_sk#71)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), EqualTo(d_year,2001), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>\n   +- BroadcastQueryStage 0\n      +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=662]\n         +- *(1) Filter ((isnotnull(d_year#77) AND (d_year#77 = 2001)) AND isnotnull(d_date_sk#71))\n            +- *(1) ColumnarToRow\n               +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#71,d_year#77] Batched: true, DataFilters: [isnotnull(d_year#77), (d_year#77 = 2001), isnotnull(d_date_sk#71)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), EqualTo(d_year,2001), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>\n"
      },
      "IM" : {
        "inputSizeInBytes" : 12609166040,
        "inputRowCount" : 262669418
      },
      "InitialPartitionNum" : 0,
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 3,
        "FinishedTasksNum" : 13,
        "FinishedTasksTotalTimeInMs" : 18486.0,
        "FinishedTasksDistributionInMs" : [ 1193.0, 1333.0, 1396.0, 1494.0, 1707.0 ]
      },
      "QueryStageOptimizationId" : 3,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 6 ],
      "Objectives" : {
        "DurationInMs" : 3879,
        "TotalTasksDurationInMs" : 46150,
        "IOBytes" : {
          "Total" : 1854943020,
          "Details" : {
            "IR" : 781121734,
            "IW" : 0,
            "SR" : 0,
            "SW" : 1073821286
          }
        }
      }
    }
  },
  "SQLStartTimeInMs" : 1702226512707,
  "SQLEndTimeInMs" : 1702226568678,
  "Objectives" : {
    "DurationInMs" : 55971,
    "IOBytes" : {
      "Total" : 14442050791,
      "Details" : {
        "IR" : 3122933341,
        "IW" : 0,
        "SR" : 6038854810,
        "SW" : 5280262640
      }
    }
  }
}
