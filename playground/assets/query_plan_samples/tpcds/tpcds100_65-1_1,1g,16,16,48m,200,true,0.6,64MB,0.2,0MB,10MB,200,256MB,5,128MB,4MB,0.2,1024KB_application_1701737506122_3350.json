{
  "CompileTimeLQP" : {
    "LQP" : {
      "operators" : {
        "34" : {
          "sign" : 1872213407,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 192558,
          "rowCount" : 402,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: isnotnull(s_store_sk#3) "
        },
        "12" : {
          "sign" : -2098545331,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 8497298720,
          "rowCount" : 265540585,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#127 = d_date_sk#128) "
        },
        "8" : {
          "sign" : 788562246,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 1518752136,
          "rowCount" : 34517094,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: Inner, ((ss_store_sk#60 = ss_store_sk#111) AND (cast(revenue#2 as decimal(23,7)) <= (0.1 * ave#1))) "
        },
        "19" : {
          "sign" : -1759574018,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 5124,
          "rowCount" : 183,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: isnotnull(ave#1) "
        },
        "23" : {
          "sign" : 725630910,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 8497298720,
          "rowCount" : 265540585,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#76 = d_date_sk#77) "
        },
        "4" : {
          "sign" : 846111178,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 114414901722,
          "rowCount" : 577853039,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: Inner, (s_store_sk#3 = ss_store_sk#111) "
        },
        "15" : {
          "sign" : 1539146703,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 41806893656,
          "rowCount" : 275045353,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#105, ss_item_sk#106, ss_customer_sk#107, ss_cdemo_sk#108, ss_hdemo_sk#109, ss_addr_sk#110, ss_store_sk#111, ss_promo_sk#112, ss_ticket_number#113L, ss_quantity#114, ss_wholesale_cost#115, ss_list_price#116, ss_sales_price#117, ss_ext_discount_amt#118, ss_ext_sales_price#119, ss_ext_wholesale_cost#120, ss_ext_list_price#121, ss_ext_tax#122, ss_coupon_amt#123, ss_net_paid#124, ss_net_paid_inc_tax#125, ss_net_profit#126, ss_sold_date_sk#127], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "11" : {
          "sign" : 1427412637,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 6372974040,
          "rowCount" : 265540585,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [ss_item_sk#106, ss_store_sk#111, ss_sales_price#117] "
        },
        "9" : {
          "sign" : 154066027,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 828410256,
          "rowCount" : 34517094,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: isnotnull(revenue#2) "
        },
        "33" : {
          "sign" : 904771672,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 11256,
          "rowCount" : 402,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [s_store_sk#3, s_store_name#8] "
        },
        "22" : {
          "sign" : 1216321209,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 6372974040,
          "rowCount" : 265540585,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [ss_item_sk#55, ss_store_sk#60, ss_sales_price#66] "
        },
        "26" : {
          "sign" : -996268790,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 41806893656,
          "rowCount" : 275045353,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#54, ss_item_sk#55, ss_customer_sk#56, ss_cdemo_sk#57, ss_hdemo_sk#58, ss_addr_sk#59, ss_store_sk#60, ss_promo_sk#61, ss_ticket_number#62L, ss_quantity#63, ss_wholesale_cost#64, ss_list_price#65, ss_sales_price#66, ss_ext_discount_amt#67, ss_ext_sales_price#68, ss_ext_wholesale_cost#69, ss_ext_list_price#70, ss_ext_tax#71, ss_coupon_amt#72, ss_net_paid#73, ss_net_paid_inc_tax#74, ss_net_profit#75, ss_sold_date_sk#76], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "13" : {
          "sign" : 1027019424,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 7354859344,
          "rowCount" : 262673548,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [ss_item_sk#106, ss_store_sk#111, ss_sales_price#117, ss_sold_date_sk#127] "
        },
        "24" : {
          "sign" : 2038584680,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 7354859344,
          "rowCount" : 262673548,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [ss_item_sk#55, ss_store_sk#60, ss_sales_price#66, ss_sold_date_sk#76] "
        },
        "35" : {
          "sign" : -1940854156,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 192558,
          "rowCount" : 402,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [s_store_sk#3, s_store_id#4, s_rec_start_date#5, s_rec_end_date#6, s_closed_date_sk#7, s_store_name#8, s_number_employees#9, s_floor_space#10, s_hours#11, s_manager#12, s_market_id#13, s_geography_class#14, s_market_desc#15, s_market_manager#16, s_division_id#17, s_division_name#18, s_company_id#19, s_company_name#20, s_street_number#21, s_street_name#22, s_street_type#23, s_suite_number#24, s_city#25, s_county#26, ... 5 more fields], `spark_catalog`.`tpcds_100`.`store`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "16" : {
          "sign" : 588142526,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 4032,
          "rowCount" : 336,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [d_date_sk#128] "
        },
        "5" : {
          "sign" : -563081104,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 51131909938,
          "rowCount" : 287257921,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [ss_store_sk#111, revenue#2, i_item_desc#36, i_current_price#37, i_wholesale_cost#38, i_brand#40] "
        },
        "10" : {
          "sign" : -1982129383,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
          "sizeInBytes" : 828410256,
          "rowCount" : 34517094,
          "isRuntime" : false,
          "predicate" : " (unknown) Aggregate Arguments: [ss_store_sk#111, ss_item_sk#106], [ss_store_sk#111, ss_item_sk#106, MakeDecimal(sum(UnscaledValue(ss_sales_price#117)),17,2) AS revenue#2] "
        },
        "21" : {
          "sign" : 713613090,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
          "sizeInBytes" : 690341880,
          "rowCount" : 34517094,
          "isRuntime" : false,
          "predicate" : " (unknown) Aggregate Arguments: [ss_store_sk#60, ss_item_sk#55], [ss_store_sk#60, MakeDecimal(sum(UnscaledValue(ss_sales_price#66)),17,2) AS revenue#0] "
        },
        "32" : {
          "sign" : -746361211,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 86904000,
          "rowCount" : 204000,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [i_item_sk#32, i_item_id#33, i_rec_start_date#34, i_rec_end_date#35, i_item_desc#36, i_current_price#37, i_wholesale_cost#38, i_brand_id#39, i_brand#40, i_class_id#41, i_class#42, i_category_id#43, i_category#44, i_manufact_id#45, i_manufact#46, i_size#47, i_formulation#48, i_color#49, i_units#50, i_container#51, i_manager_id#52, i_product_name#53], `spark_catalog`.`tpcds_100`.`item`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "6" : {
          "sign" : 37144934,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 53429973306,
          "rowCount" : 287257921,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: Inner, (i_item_sk#32 = ss_item_sk#106) "
        },
        "1" : {
          "sign" : 462703819,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
          "sizeInBytes" : 109792077410,
          "rowCount" : 577853039,
          "isRuntime" : false,
          "predicate" : " (unknown) LocalLimit Arguments: 100 "
        },
        "17" : {
          "sign" : -481654169,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 82656,
          "rowCount" : 336,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: ((isnotnull(d_month_seq#131) AND ((d_month_seq#131 >= 1212) AND (d_month_seq#131 <= 1223))) AND isnotnull(d_date_sk#128)) "
        },
        "25" : {
          "sign" : 1834412658,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 39926379296,
          "rowCount" : 262673548,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: ((isnotnull(ss_sold_date_sk#76) AND isnotnull(ss_store_sk#60)) AND dynamicpruning#172 [ss_sold_date_sk#76]) "
        },
        "14" : {
          "sign" : 1173117476,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 39926379296,
          "rowCount" : 262673548,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: (((isnotnull(ss_sold_date_sk#127) AND isnotnull(ss_store_sk#111)) AND isnotnull(ss_item_sk#106)) AND dynamicpruning#171 [ss_sold_date_sk#127]) "
        },
        "31" : {
          "sign" : -760377188,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 86904000,
          "rowCount" : 204000,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: isnotnull(i_item_sk#32) "
        },
        "0" : {
          "sign" : 1767949338,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
          "sizeInBytes" : 9200,
          "rowCount" : 100,
          "isRuntime" : false,
          "predicate" : " (unknown) GlobalLimit Arguments: 100 "
        },
        "20" : {
          "sign" : 366391543,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
          "sizeInBytes" : 5124,
          "rowCount" : 183,
          "isRuntime" : false,
          "predicate" : " (unknown) Aggregate Arguments: [ss_store_sk#60], [ss_store_sk#60, avg(revenue#0) AS ave#1] "
        },
        "27" : {
          "sign" : 224618565,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 4032,
          "rowCount" : 336,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [d_date_sk#77] "
        },
        "2" : {
          "sign" : 878420208,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
          "sizeInBytes" : 109792077410,
          "rowCount" : 577853039,
          "isRuntime" : false,
          "predicate" : " (unknown) Sort Arguments: [s_store_name#8 ASC NULLS FIRST, i_item_desc#36 ASC NULLS FIRST], true "
        },
        "18" : {
          "sign" : -1611740874,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 17970054,
          "rowCount" : 73049,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#128, d_date_id#129, d_date#130, d_month_seq#131, d_week_seq#132, d_quarter_seq#133, d_year#134, d_dow#135, d_moy#136, d_dom#137, d_qoy#138, d_fy_year#139, d_fy_quarter_seq#140, d_fy_week_seq#141, d_day_name#142, d_quarter_name#143, d_holiday#144, d_weekend#145, d_following_holiday#146, d_first_dom#147, d_last_dom#148, d_same_day_ly#149, d_same_day_lq#150, d_current_day#151, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "30" : {
          "sign" : 1904022362,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 34680000,
          "rowCount" : 204000,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [i_item_sk#32, i_item_desc#36, i_current_price#37, i_wholesale_cost#38, i_brand#40] "
        },
        "7" : {
          "sign" : 1689331990,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 828410256,
          "rowCount" : 34517094,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [ss_store_sk#111, ss_item_sk#106, revenue#2] "
        },
        "29" : {
          "sign" : 66120808,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 17970054,
          "rowCount" : 73049,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#77, d_date_id#78, d_date#79, d_month_seq#80, d_week_seq#81, d_quarter_seq#82, d_year#83, d_dow#84, d_moy#85, d_dom#86, d_qoy#87, d_fy_year#88, d_fy_quarter_seq#89, d_fy_week_seq#90, d_day_name#91, d_quarter_name#92, d_holiday#93, d_weekend#94, d_following_holiday#95, d_first_dom#96, d_last_dom#97, d_same_day_ly#98, d_same_day_lq#99, d_current_day#100, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "3" : {
          "sign" : -1313173031,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 109792077410,
          "rowCount" : 577853039,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [s_store_name#8, i_item_desc#36, revenue#2, i_current_price#37, i_wholesale_cost#38, i_brand#40] "
        },
        "28" : {
          "sign" : -1884707209,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 82656,
          "rowCount" : 336,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: ((isnotnull(d_month_seq#80) AND ((d_month_seq#80 >= 1212) AND (d_month_seq#80 <= 1223))) AND isnotnull(d_date_sk#77)) "
        }
      },
      "links" : [ {
        "fromId" : 15,
        "fromName" : "LogicalRelation",
        "toId" : 14,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 18,
        "fromName" : "LogicalRelation",
        "toId" : 17,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 17,
        "fromName" : "Filter",
        "toId" : 16,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 16,
        "fromName" : "Project",
        "toId" : 14,
        "toName" : "Filter",
        "linkType" : "Subquery"
      }, {
        "fromId" : 14,
        "fromName" : "Filter",
        "toId" : 13,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 13,
        "fromName" : "Project",
        "toId" : 12,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 16,
        "fromName" : "Project",
        "toId" : 12,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 12,
        "fromName" : "Join",
        "toId" : 11,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 11,
        "fromName" : "Project",
        "toId" : 10,
        "toName" : "Aggregate",
        "linkType" : "Operator"
      }, {
        "fromId" : 10,
        "fromName" : "Aggregate",
        "toId" : 9,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 9,
        "fromName" : "Filter",
        "toId" : 8,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 26,
        "fromName" : "LogicalRelation",
        "toId" : 25,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 29,
        "fromName" : "LogicalRelation",
        "toId" : 28,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 28,
        "fromName" : "Filter",
        "toId" : 27,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 27,
        "fromName" : "Project",
        "toId" : 25,
        "toName" : "Filter",
        "linkType" : "Subquery"
      }, {
        "fromId" : 25,
        "fromName" : "Filter",
        "toId" : 24,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 24,
        "fromName" : "Project",
        "toId" : 23,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 27,
        "fromName" : "Project",
        "toId" : 23,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 23,
        "fromName" : "Join",
        "toId" : 22,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 22,
        "fromName" : "Project",
        "toId" : 21,
        "toName" : "Aggregate",
        "linkType" : "Operator"
      }, {
        "fromId" : 21,
        "fromName" : "Aggregate",
        "toId" : 20,
        "toName" : "Aggregate",
        "linkType" : "Operator"
      }, {
        "fromId" : 20,
        "fromName" : "Aggregate",
        "toId" : 19,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 19,
        "fromName" : "Filter",
        "toId" : 8,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 8,
        "fromName" : "Join",
        "toId" : 7,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 7,
        "fromName" : "Project",
        "toId" : 6,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 32,
        "fromName" : "LogicalRelation",
        "toId" : 31,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 31,
        "fromName" : "Filter",
        "toId" : 30,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 30,
        "fromName" : "Project",
        "toId" : 6,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 6,
        "fromName" : "Join",
        "toId" : 5,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 5,
        "fromName" : "Project",
        "toId" : 4,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 35,
        "fromName" : "LogicalRelation",
        "toId" : 34,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 34,
        "fromName" : "Filter",
        "toId" : 33,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 33,
        "fromName" : "Project",
        "toId" : 4,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 4,
        "fromName" : "Join",
        "toId" : 3,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 3,
        "fromName" : "Project",
        "toId" : 2,
        "toName" : "Sort",
        "linkType" : "Operator"
      }, {
        "fromId" : 2,
        "fromName" : "Sort",
        "toId" : 1,
        "toName" : "LocalLimit",
        "linkType" : "Operator"
      }, {
        "fromId" : 1,
        "fromName" : "LocalLimit",
        "toId" : 0,
        "toName" : "GlobalLimit",
        "linkType" : "Operator"
      } ],
      "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [s_store_name#8 ASC NULLS FIRST, i_item_desc#36 ASC NULLS FIRST], true\n      +- Project [s_store_name#8, i_item_desc#36, revenue#2, i_current_price#37, i_wholesale_cost#38, i_brand#40]\n         +- Join Inner, (s_store_sk#3 = ss_store_sk#111)\n            :- Project [ss_store_sk#111, revenue#2, i_item_desc#36, i_current_price#37, i_wholesale_cost#38, i_brand#40]\n            :  +- Join Inner, (i_item_sk#32 = ss_item_sk#106)\n            :     :- Project [ss_store_sk#111, ss_item_sk#106, revenue#2]\n            :     :  +- Join Inner, ((ss_store_sk#60 = ss_store_sk#111) AND (cast(revenue#2 as decimal(23,7)) <= (0.1 * ave#1)))\n            :     :     :- Filter isnotnull(revenue#2)\n            :     :     :  +- Aggregate [ss_store_sk#111, ss_item_sk#106], [ss_store_sk#111, ss_item_sk#106, MakeDecimal(sum(UnscaledValue(ss_sales_price#117)),17,2) AS revenue#2]\n            :     :     :     +- Project [ss_item_sk#106, ss_store_sk#111, ss_sales_price#117]\n            :     :     :        +- Join Inner, (ss_sold_date_sk#127 = d_date_sk#128)\n            :     :     :           :- Project [ss_item_sk#106, ss_store_sk#111, ss_sales_price#117, ss_sold_date_sk#127]\n            :     :     :           :  +- Filter (((isnotnull(ss_sold_date_sk#127) AND isnotnull(ss_store_sk#111)) AND isnotnull(ss_item_sk#106)) AND dynamicpruning#171 [ss_sold_date_sk#127])\n            :     :     :           :     :  +- Project [d_date_sk#128]\n            :     :     :           :     :     +- Filter ((isnotnull(d_month_seq#131) AND ((d_month_seq#131 >= 1212) AND (d_month_seq#131 <= 1223))) AND isnotnull(d_date_sk#128))\n            :     :     :           :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#128,d_date_id#129,d_date#130,d_month_seq#131,d_week_seq#132,d_quarter_seq#133,d_year#134,d_dow#135,d_moy#136,d_dom#137,d_qoy#138,d_fy_year#139,d_fy_quarter_seq#140,d_fy_week_seq#141,d_day_name#142,d_quarter_name#143,d_holiday#144,d_weekend#145,d_following_holiday#146,d_first_dom#147,d_last_dom#148,d_same_day_ly#149,d_same_day_lq#150,d_current_day#151,... 4 more fields] parquet\n            :     :     :           :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#105,ss_item_sk#106,ss_customer_sk#107,ss_cdemo_sk#108,ss_hdemo_sk#109,ss_addr_sk#110,ss_store_sk#111,ss_promo_sk#112,ss_ticket_number#113L,ss_quantity#114,ss_wholesale_cost#115,ss_list_price#116,ss_sales_price#117,ss_ext_discount_amt#118,ss_ext_sales_price#119,ss_ext_wholesale_cost#120,ss_ext_list_price#121,ss_ext_tax#122,ss_coupon_amt#123,ss_net_paid#124,ss_net_paid_inc_tax#125,ss_net_profit#126,ss_sold_date_sk#127] parquet\n            :     :     :           +- Project [d_date_sk#128]\n            :     :     :              +- Filter ((isnotnull(d_month_seq#131) AND ((d_month_seq#131 >= 1212) AND (d_month_seq#131 <= 1223))) AND isnotnull(d_date_sk#128))\n            :     :     :                 +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#128,d_date_id#129,d_date#130,d_month_seq#131,d_week_seq#132,d_quarter_seq#133,d_year#134,d_dow#135,d_moy#136,d_dom#137,d_qoy#138,d_fy_year#139,d_fy_quarter_seq#140,d_fy_week_seq#141,d_day_name#142,d_quarter_name#143,d_holiday#144,d_weekend#145,d_following_holiday#146,d_first_dom#147,d_last_dom#148,d_same_day_ly#149,d_same_day_lq#150,d_current_day#151,... 4 more fields] parquet\n            :     :     +- Filter isnotnull(ave#1)\n            :     :        +- Aggregate [ss_store_sk#60], [ss_store_sk#60, avg(revenue#0) AS ave#1]\n            :     :           +- Aggregate [ss_store_sk#60, ss_item_sk#55], [ss_store_sk#60, MakeDecimal(sum(UnscaledValue(ss_sales_price#66)),17,2) AS revenue#0]\n            :     :              +- Project [ss_item_sk#55, ss_store_sk#60, ss_sales_price#66]\n            :     :                 +- Join Inner, (ss_sold_date_sk#76 = d_date_sk#77)\n            :     :                    :- Project [ss_item_sk#55, ss_store_sk#60, ss_sales_price#66, ss_sold_date_sk#76]\n            :     :                    :  +- Filter ((isnotnull(ss_sold_date_sk#76) AND isnotnull(ss_store_sk#60)) AND dynamicpruning#172 [ss_sold_date_sk#76])\n            :     :                    :     :  +- Project [d_date_sk#77]\n            :     :                    :     :     +- Filter ((isnotnull(d_month_seq#80) AND ((d_month_seq#80 >= 1212) AND (d_month_seq#80 <= 1223))) AND isnotnull(d_date_sk#77))\n            :     :                    :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#77,d_date_id#78,d_date#79,d_month_seq#80,d_week_seq#81,d_quarter_seq#82,d_year#83,d_dow#84,d_moy#85,d_dom#86,d_qoy#87,d_fy_year#88,d_fy_quarter_seq#89,d_fy_week_seq#90,d_day_name#91,d_quarter_name#92,d_holiday#93,d_weekend#94,d_following_holiday#95,d_first_dom#96,d_last_dom#97,d_same_day_ly#98,d_same_day_lq#99,d_current_day#100,... 4 more fields] parquet\n            :     :                    :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#54,ss_item_sk#55,ss_customer_sk#56,ss_cdemo_sk#57,ss_hdemo_sk#58,ss_addr_sk#59,ss_store_sk#60,ss_promo_sk#61,ss_ticket_number#62L,ss_quantity#63,ss_wholesale_cost#64,ss_list_price#65,ss_sales_price#66,ss_ext_discount_amt#67,ss_ext_sales_price#68,ss_ext_wholesale_cost#69,ss_ext_list_price#70,ss_ext_tax#71,ss_coupon_amt#72,ss_net_paid#73,ss_net_paid_inc_tax#74,ss_net_profit#75,ss_sold_date_sk#76] parquet\n            :     :                    +- Project [d_date_sk#77]\n            :     :                       +- Filter ((isnotnull(d_month_seq#80) AND ((d_month_seq#80 >= 1212) AND (d_month_seq#80 <= 1223))) AND isnotnull(d_date_sk#77))\n            :     :                          +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#77,d_date_id#78,d_date#79,d_month_seq#80,d_week_seq#81,d_quarter_seq#82,d_year#83,d_dow#84,d_moy#85,d_dom#86,d_qoy#87,d_fy_year#88,d_fy_quarter_seq#89,d_fy_week_seq#90,d_day_name#91,d_quarter_name#92,d_holiday#93,d_weekend#94,d_following_holiday#95,d_first_dom#96,d_last_dom#97,d_same_day_ly#98,d_same_day_lq#99,d_current_day#100,... 4 more fields] parquet\n            :     +- Project [i_item_sk#32, i_item_desc#36, i_current_price#37, i_wholesale_cost#38, i_brand#40]\n            :        +- Filter isnotnull(i_item_sk#32)\n            :           +- Relation spark_catalog.tpcds_100.item[i_item_sk#32,i_item_id#33,i_rec_start_date#34,i_rec_end_date#35,i_item_desc#36,i_current_price#37,i_wholesale_cost#38,i_brand_id#39,i_brand#40,i_class_id#41,i_class#42,i_category_id#43,i_category#44,i_manufact_id#45,i_manufact#46,i_size#47,i_formulation#48,i_color#49,i_units#50,i_container#51,i_manager_id#52,i_product_name#53] parquet\n            +- Project [s_store_sk#3, s_store_name#8]\n               +- Filter isnotnull(s_store_sk#3)\n                  +- Relation spark_catalog.tpcds_100.store[s_store_sk#3,s_store_id#4,s_rec_start_date#5,s_rec_end_date#6,s_closed_date_sk#7,s_store_name#8,s_number_employees#9,s_floor_space#10,s_hours#11,s_manager#12,s_market_id#13,s_geography_class#14,s_market_desc#15,s_market_manager#16,s_division_id#17,s_division_name#18,s_company_id#19,s_company_name#20,s_street_number#21,s_street_name#22,s_street_type#23,s_suite_number#24,s_city#25,s_county#26,... 5 more fields] parquet\n"
    },
    "IM" : {
      "inputSizeInBytes" : 83736823978,
      "inputRowCount" : 550441206
    },
    "PD" : { },
    "Configuration" : {
      "theta_c" : [ {
        "spark.executor.memory" : "1g"
      }, {
        "spark.executor.cores" : "1"
      }, {
        "spark.executor.instances" : "16"
      }, {
        "spark.default.parallelism" : "16"
      }, {
        "spark.reducer.maxSizeInFlight" : "48m"
      }, {
        "spark.shuffle.sort.bypassMergeThreshold" : "200"
      }, {
        "spark.shuffle.compress" : "true"
      }, {
        "spark.memory.fraction" : "0.6"
      } ],
      "theta_p" : [ {
        "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
      }, {
        "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
      }, {
        "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
      }, {
        "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
      }, {
        "spark.sql.shuffle.partitions" : "200"
      }, {
        "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
      }, {
        "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
      }, {
        "spark.sql.files.maxPartitionBytes" : "128MB"
      }, {
        "spark.sql.files.openCostInBytes" : "4MB"
      } ],
      "theta_s" : [ {
        "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
      }, {
        "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
      } ]
    }
  },
  "RuntimeLQPs" : {
    "8" : {
      "LQP" : {
        "operators" : {
          "8" : {
            "sign" : 1872093007,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 35049104,
            "rowCount" : 204000,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_item_sk#32, i_item_desc#36, i_current_price#37, i_wholesale_cost#38, i_brand#40], ShuffleQueryStage 3 "
          },
          "4" : {
            "sign" : -1314285137,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 10475849534400000,
            "rowCount" : 104758495344000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (s_store_sk#3 = ss_store_sk#182) "
          },
          "9" : {
            "sign" : -2141542035,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1051792,
            "rowCount" : 402,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [s_store_sk#3, s_store_name#8], BroadcastQueryStage 4 "
          },
          "5" : {
            "sign" : -750464774,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 19805088672000,
            "rowCount" : 260593272000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_store_sk#182, revenue#175, i_item_desc#36, i_current_price#37, i_wholesale_cost#38, i_brand#40] "
          },
          "6" : {
            "sign" : 1591900095,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 21889834848000,
            "rowCount" : 260593272000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (i_item_sk#32 = ss_item_sk#177) "
          },
          "1" : {
            "sign" : -574101189,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
            "sizeInBytes" : 9637781571648000,
            "rowCount" : 104758495344000,
            "isRuntime" : false,
            "predicate" : " (unknown) LocalLimit Arguments: 100 "
          },
          "0" : {
            "sign" : 1946731650,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
            "sizeInBytes" : 9200,
            "rowCount" : 100,
            "isRuntime" : false,
            "predicate" : " (unknown) GlobalLimit Arguments: 100 "
          },
          "2" : {
            "sign" : 918435672,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 9637781571648000,
            "rowCount" : 104758495344000,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [s_store_name#8 ASC NULLS FIRST, i_item_desc#36 ASC NULLS FIRST], true "
          },
          "7" : {
            "sign" : -806159504,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 40877376,
            "rowCount" : 1277418,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ss_store_sk#182, ss_item_sk#177, revenue#175], ShuffleQueryStage 9 "
          },
          "3" : {
            "sign" : -519442359,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 9637781571648000,
            "rowCount" : 104758495344000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [s_store_name#8, i_item_desc#36, revenue#175, i_current_price#37, i_wholesale_cost#38, i_brand#40] "
          }
        },
        "links" : [ {
          "fromId" : 7,
          "fromName" : "LogicalQueryStage",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "LogicalQueryStage",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Join",
          "toId" : 5,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Project",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "LogicalQueryStage",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Join",
          "toId" : 3,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Project",
          "toId" : 2,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "LocalLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "LocalLimit",
          "toId" : 0,
          "toName" : "GlobalLimit",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [s_store_name#8 ASC NULLS FIRST, i_item_desc#36 ASC NULLS FIRST], true\n      +- Project [s_store_name#8, i_item_desc#36, revenue#175, i_current_price#37, i_wholesale_cost#38, i_brand#40]\n         +- Join Inner, (s_store_sk#3 = ss_store_sk#182)\n            :- Project [ss_store_sk#182, revenue#175, i_item_desc#36, i_current_price#37, i_wholesale_cost#38, i_brand#40]\n            :  +- Join Inner, (i_item_sk#32 = ss_item_sk#177)\n            :     :- LogicalQueryStage Project [ss_store_sk#182, ss_item_sk#177, revenue#175], ShuffleQueryStage 9\n            :     +- LogicalQueryStage Project [i_item_sk#32, i_item_desc#36, i_current_price#37, i_wholesale_cost#38, i_brand#40], ShuffleQueryStage 3\n            +- LogicalQueryStage Project [s_store_sk#3, s_store_name#8], BroadcastQueryStage 4\n"
      },
      "IM" : {
        "inputSizeInBytes" : 76978272,
        "inputRowCount" : 1481820
      },
      "PD" : {
        "4" : [ 98404, 93736, 92958, 97704, 100544, 89988, 103833, 89281, 91279, 106536, 97626, 88451, 104611, 92764, 99844, 99844, 99631, 101265, 107179, 107886, 100487, 101265, 97510, 92764, 98210, 98853, 95876, 100487, 102043, 93542, 110688, 98853, 102256, 93542, 100409, 100700, 92984, 89988, 88574, 105467, 96848, 98210, 93542, 101265, 98988, 98404, 100409, 93684, 95434, 102043, 103755, 105467, 94320, 100622, 98404, 100409, 104611, 103112, 95741, 100409, 95876, 92835, 97510, 105467, 100622, 96654, 103755, 98210, 100622, 97432, 98931, 94320, 102121, 98404, 95876, 97297, 96654, 97432, 99066, 94391, 95876, 91473, 102412, 94398, 99709, 96654, 94320, 104611, 102256, 96654, 102977, 92835, 98075, 90871, 99709, 96070, 95947, 96654, 103755, 95169, 97626, 100544, 101187, 105680, 96070, 98988, 100700, 101478, 96654, 98988, 101265, 99766, 92764, 105680, 89988, 98988, 98988, 94320, 94320, 98075, 100487, 95098, 107030, 96654, 96654, 101265, 101265, 88645, 97432, 94320, 97432, 98210, 100622, 98210, 99766, 100409, 99631, 98210, 96725, 95098, 99709, 98988, 104824, 98988, 99766, 98988, 95098, 96654, 104824, 98988, 96654, 92906, 98075, 96654, 102043, 110624, 102043, 102899, 95876, 95292, 92958, 101478, 96848, 98075, 103833, 99631, 99066, 91473, 101400, 98988, 89281, 100700, 101265, 95247, 102199, 93542, 88574, 93736, 95876, 95947, 94320, 101187, 94320, 95947, 110688, 106323, 94320, 99631, 98210, 95947, 96654, 97432, 102899, 95098, 94054, 92764, 98853, 98931, 102977, 100622 ],
        "0" : [ 112177, 112177, 112177, 112177, 123395, 112177, 123395, 112177, 101979, 112177, 123395, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 123395, 123395, 123395, 123395, 112177, 112177, 123395, 112177, 112177, 112177, 112177, 112177, 123395, 112177, 123395, 112177, 112177, 123395, 112177, 112177, 112177, 123395, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 123395, 123395, 112177, 112177, 112177, 123395, 123395, 112177, 112177, 112177, 112177, 123395, 112177, 123395, 112177, 112177, 123395, 112177, 123395, 123395, 123395, 112177, 112177, 123395, 112177, 112177, 112177, 123395, 112177, 112177, 112177, 112177, 123395, 112177, 123395, 112177, 112177, 123395, 123395, 112177, 112177, 112177, 112177, 112177, 123395, 123395, 112177, 112177, 123395, 112177, 112177, 123395, 112177, 123395, 112177, 112177, 112177, 123395, 112177, 112177, 112177, 112177, 112177, 123395, 112177, 112177, 101979, 112177, 112177, 112177, 112177, 112177, 123395, 112177, 123395, 123395, 112177, 112177, 123395, 112177, 112177, 112177, 112177, 123395, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 123395, 123395, 123395, 112177, 112177, 112177, 123395, 112177, 112177, 112177, 123395, 112177, 112177, 123395, 112177, 112177, 112177, 112177, 112177, 123395, 123395, 123395, 112177, 112177, 112177, 112177, 123395, 112177, 112177, 123395, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 123395, 123395, 112177, 112177, 112177, 112177, 123395, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 123395, 123395 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "StartTimeInMs" : 1702227258083,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 1570,
        "IOBytes" : {
          "Total" : 40760861,
          "Details" : {
            "IR" : 0,
            "IW" : 0,
            "SR" : 40760861,
            "SW" : 0
          }
        }
      }
    },
    "4" : {
      "LQP" : {
        "operators" : {
          "12" : {
            "sign" : 1411083108,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 5124,
            "rowCount" : 183,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [ss_store_sk#60], [ss_store_sk#60, avg(revenue#173) AS ave#174] "
          },
          "8" : {
            "sign" : 1596308751,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 2252292944,
            "rowCount" : 51188476,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, ((ss_store_sk#60 = ss_store_sk#182) AND (cast(revenue#175 as decimal(23,7)) <= (0.1 * ave#174))) "
          },
          "4" : {
            "sign" : 1898601431,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 419786453980800000,
            "rowCount" : 4197864539808000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (s_store_sk#3 = ss_store_sk#182) "
          },
          "15" : {
            "sign" : -2141542035,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1051792,
            "rowCount" : 402,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [s_store_sk#3, s_store_name#8], BroadcastQueryStage 4 "
          },
          "11" : {
            "sign" : -227463240,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 5124,
            "rowCount" : 183,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: isnotnull(ave#174) "
          },
          "9" : {
            "sign" : 14530742,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 1228523424,
            "rowCount" : 51188476,
            "isRuntime" : true,
            "predicate" : " (unknown) Filter Arguments: isnotnull(revenue#175) "
          },
          "13" : {
            "sign" : -1652255073,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 690341880,
            "rowCount" : 34517094,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [ss_store_sk#60, ss_item_sk#55], [ss_store_sk#60, MakeDecimal(sum(UnscaledValue(ss_sales_price#66)),17,2) AS revenue#173], HashAggregate(keys=[ss_store_sk#60, ss_item_sk#55], functions=[sum(UnscaledValue(ss_sales_price#66))]) "
          },
          "5" : {
            "sign" : -1270752966,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 793626131904000,
            "rowCount" : 10442449104000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_store_sk#182, revenue#175, i_item_desc#36, i_current_price#37, i_wholesale_cost#38, i_brand#40] "
          },
          "10" : {
            "sign" : 106500171,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1638031232,
            "rowCount" : 51188476,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [ss_store_sk#182, ss_item_sk#177], [ss_store_sk#182, ss_item_sk#177, MakeDecimal(sum(UnscaledValue(ss_sales_price#188)),17,2) AS revenue#175], HashAggregate(keys=[ss_store_sk#182, ss_item_sk#177], functions=[sum(UnscaledValue(ss_sales_price#188))]) "
          },
          "6" : {
            "sign" : -1798403293,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 877165724736000,
            "rowCount" : 10442449104000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (i_item_sk#32 = ss_item_sk#177) "
          },
          "1" : {
            "sign" : 1359466019,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
            "sizeInBytes" : 386203537662336000,
            "rowCount" : 4197864539808000,
            "isRuntime" : false,
            "predicate" : " (unknown) LocalLimit Arguments: 100 "
          },
          "14" : {
            "sign" : 1872093007,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 35049104,
            "rowCount" : 204000,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_item_sk#32, i_item_desc#36, i_current_price#37, i_wholesale_cost#38, i_brand#40], ShuffleQueryStage 3 "
          },
          "0" : {
            "sign" : -869764246,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
            "sizeInBytes" : 9200,
            "rowCount" : 100,
            "isRuntime" : false,
            "predicate" : " (unknown) GlobalLimit Arguments: 100 "
          },
          "2" : {
            "sign" : 218823360,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 386203537662336000,
            "rowCount" : 4197864539808000,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [s_store_name#8 ASC NULLS FIRST, i_item_desc#36 ASC NULLS FIRST], true "
          },
          "7" : {
            "sign" : 479544152,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 1228523424,
            "rowCount" : 51188476,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_store_sk#182, ss_item_sk#177, revenue#175] "
          },
          "3" : {
            "sign" : 228720049,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 386203537662336000,
            "rowCount" : 4197864539808000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [s_store_name#8, i_item_desc#36, revenue#175, i_current_price#37, i_wholesale_cost#38, i_brand#40] "
          }
        },
        "links" : [ {
          "fromId" : 10,
          "fromName" : "LogicalQueryStage",
          "toId" : 9,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "Filter",
          "toId" : 8,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 13,
          "fromName" : "LogicalQueryStage",
          "toId" : 12,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 12,
          "fromName" : "Aggregate",
          "toId" : 11,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "Filter",
          "toId" : 8,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "Join",
          "toId" : 7,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Project",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 14,
          "fromName" : "LogicalQueryStage",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Join",
          "toId" : 5,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Project",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 15,
          "fromName" : "LogicalQueryStage",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Join",
          "toId" : 3,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Project",
          "toId" : 2,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "LocalLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "LocalLimit",
          "toId" : 0,
          "toName" : "GlobalLimit",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [s_store_name#8 ASC NULLS FIRST, i_item_desc#36 ASC NULLS FIRST], true\n      +- Project [s_store_name#8, i_item_desc#36, revenue#175, i_current_price#37, i_wholesale_cost#38, i_brand#40]\n         +- Join Inner, (s_store_sk#3 = ss_store_sk#182)\n            :- Project [ss_store_sk#182, revenue#175, i_item_desc#36, i_current_price#37, i_wholesale_cost#38, i_brand#40]\n            :  +- Join Inner, (i_item_sk#32 = ss_item_sk#177)\n            :     :- Project [ss_store_sk#182, ss_item_sk#177, revenue#175]\n            :     :  +- Join Inner, ((ss_store_sk#60 = ss_store_sk#182) AND (cast(revenue#175 as decimal(23,7)) <= (0.1 * ave#174)))\n            :     :     :- Filter isnotnull(revenue#175)\n            :     :     :  +- LogicalQueryStage Aggregate [ss_store_sk#182, ss_item_sk#177], [ss_store_sk#182, ss_item_sk#177, MakeDecimal(sum(UnscaledValue(ss_sales_price#188)),17,2) AS revenue#175], HashAggregate(keys=[ss_store_sk#182, ss_item_sk#177], functions=[sum(UnscaledValue(ss_sales_price#188))])\n            :     :     +- Filter isnotnull(ave#174)\n            :     :        +- Aggregate [ss_store_sk#60], [ss_store_sk#60, avg(revenue#173) AS ave#174]\n            :     :           +- LogicalQueryStage Aggregate [ss_store_sk#60, ss_item_sk#55], [ss_store_sk#60, MakeDecimal(sum(UnscaledValue(ss_sales_price#66)),17,2) AS revenue#173], HashAggregate(keys=[ss_store_sk#60, ss_item_sk#55], functions=[sum(UnscaledValue(ss_sales_price#66))])\n            :     +- LogicalQueryStage Project [i_item_sk#32, i_item_desc#36, i_current_price#37, i_wholesale_cost#38, i_brand#40], ShuffleQueryStage 3\n            +- LogicalQueryStage Project [s_store_sk#3, s_store_name#8], BroadcastQueryStage 4\n"
      },
      "IM" : {
        "inputSizeInBytes" : 2364474008,
        "inputRowCount" : 85909972
      },
      "PD" : {
        "0" : [ 112177, 112177, 112177, 112177, 123395, 112177, 123395, 112177, 101979, 112177, 123395, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 123395, 123395, 123395, 123395, 112177, 112177, 123395, 112177, 112177, 112177, 112177, 112177, 123395, 112177, 123395, 112177, 112177, 123395, 112177, 112177, 112177, 123395, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 123395, 123395, 112177, 112177, 112177, 123395, 123395, 112177, 112177, 112177, 112177, 123395, 112177, 123395, 112177, 112177, 123395, 112177, 123395, 123395, 123395, 112177, 112177, 123395, 112177, 112177, 112177, 123395, 112177, 112177, 112177, 112177, 123395, 112177, 123395, 112177, 112177, 123395, 123395, 112177, 112177, 112177, 112177, 112177, 123395, 123395, 112177, 112177, 123395, 112177, 112177, 123395, 112177, 123395, 112177, 112177, 112177, 123395, 112177, 112177, 112177, 112177, 112177, 123395, 112177, 112177, 101979, 112177, 112177, 112177, 112177, 112177, 123395, 112177, 123395, 123395, 112177, 112177, 123395, 112177, 112177, 112177, 112177, 123395, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 123395, 123395, 123395, 112177, 112177, 112177, 123395, 112177, 112177, 112177, 123395, 112177, 112177, 123395, 112177, 112177, 112177, 112177, 112177, 123395, 123395, 123395, 112177, 112177, 112177, 112177, 123395, 112177, 112177, 123395, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 123395, 123395, 112177, 112177, 112177, 112177, 123395, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 123395, 123395 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 6,
        "FinishedTasksNum" : 26,
        "FinishedTasksTotalTimeInMs" : 39041.0,
        "FinishedTasksDistributionInMs" : [ 274.0, 1257.0, 1361.0, 1572.0, 4433.0 ]
      },
      "StartTimeInMs" : 1702227250128,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 9525,
        "IOBytes" : {
          "Total" : 2664003315,
          "Details" : {
            "IR" : 355545816,
            "IW" : 0,
            "SR" : 1540013519,
            "SW" : 768443980
          }
        }
      }
    },
    "5" : {
      "LQP" : {
        "operators" : {
          "12" : {
            "sign" : 1411083108,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 2293243724,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [ss_store_sk#60], [ss_store_sk#60, avg(revenue#173) AS ave#174] "
          },
          "8" : {
            "sign" : 1596308751,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 3521767148,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, ((ss_store_sk#60 = ss_store_sk#182) AND (cast(revenue#175 as decimal(23,7)) <= (0.1 * ave#174))) "
          },
          "4" : {
            "sign" : 1898601431,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 64070821502711097470368,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (s_store_sk#3 = ss_store_sk#182) "
          },
          "15" : {
            "sign" : -2141542035,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1051792,
            "rowCount" : 402,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [s_store_sk#3, s_store_name#8], BroadcastQueryStage 4 "
          },
          "11" : {
            "sign" : -227463240,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 2293243724,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: isnotnull(ave#174) "
          },
          "9" : {
            "sign" : 14530742,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 1228523424,
            "rowCount" : 51188476,
            "isRuntime" : true,
            "predicate" : " (unknown) Filter Arguments: isnotnull(revenue#175) "
          },
          "13" : {
            "sign" : -1652255073,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1638031232,
            "rowCount" : 51188476,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [ss_store_sk#60, ss_item_sk#55], [ss_store_sk#60, MakeDecimal(sum(UnscaledValue(ss_sales_price#66)),17,2) AS revenue#173], HashAggregate(keys=[ss_store_sk#60, ss_item_sk#55], functions=[sum(UnscaledValue(ss_sales_price#66))]) "
          },
          "5" : {
            "sign" : -1270752966,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 60915866923033354,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_store_sk#182, revenue#175, i_item_desc#36, i_current_price#37, i_wholesale_cost#38, i_brand#40] "
          },
          "10" : {
            "sign" : 106500171,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1638031232,
            "rowCount" : 51188476,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [ss_store_sk#182, ss_item_sk#177], [ss_store_sk#182, ss_item_sk#177, MakeDecimal(sum(UnscaledValue(ss_sales_price#188)),17,2) AS revenue#175], HashAggregate(keys=[ss_store_sk#182, ss_item_sk#177], functions=[sum(UnscaledValue(ss_sales_price#188))]) "
          },
          "6" : {
            "sign" : -1798403293,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 67328063441247392,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (i_item_sk#32 = ss_item_sk#177) "
          },
          "1" : {
            "sign" : 1359466019,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
            "sizeInBytes" : 58945155782494209672738,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) LocalLimit Arguments: 100 "
          },
          "14" : {
            "sign" : 1872093007,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 35049104,
            "rowCount" : 204000,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_item_sk#32, i_item_desc#36, i_current_price#37, i_wholesale_cost#38, i_brand#40], ShuffleQueryStage 3 "
          },
          "0" : {
            "sign" : -869764246,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
            "sizeInBytes" : 9200,
            "rowCount" : 100,
            "isRuntime" : false,
            "predicate" : " (unknown) GlobalLimit Arguments: 100 "
          },
          "2" : {
            "sign" : 218823360,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 58945155782494209672738,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [s_store_name#8 ASC NULLS FIRST, i_item_desc#36 ASC NULLS FIRST], true "
          },
          "7" : {
            "sign" : 479544152,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 1920963898,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_store_sk#182, ss_item_sk#177, revenue#175] "
          },
          "3" : {
            "sign" : 228720049,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 58945155782494209672738,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [s_store_name#8, i_item_desc#36, revenue#175, i_current_price#37, i_wholesale_cost#38, i_brand#40] "
          }
        },
        "links" : [ {
          "fromId" : 10,
          "fromName" : "LogicalQueryStage",
          "toId" : 9,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "Filter",
          "toId" : 8,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 13,
          "fromName" : "LogicalQueryStage",
          "toId" : 12,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 12,
          "fromName" : "Aggregate",
          "toId" : 11,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "Filter",
          "toId" : 8,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "Join",
          "toId" : 7,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Project",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 14,
          "fromName" : "LogicalQueryStage",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Join",
          "toId" : 5,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Project",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 15,
          "fromName" : "LogicalQueryStage",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Join",
          "toId" : 3,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Project",
          "toId" : 2,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "LocalLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "LocalLimit",
          "toId" : 0,
          "toName" : "GlobalLimit",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [s_store_name#8 ASC NULLS FIRST, i_item_desc#36 ASC NULLS FIRST], true\n      +- Project [s_store_name#8, i_item_desc#36, revenue#175, i_current_price#37, i_wholesale_cost#38, i_brand#40]\n         +- Join Inner, (s_store_sk#3 = ss_store_sk#182)\n            :- Project [ss_store_sk#182, revenue#175, i_item_desc#36, i_current_price#37, i_wholesale_cost#38, i_brand#40]\n            :  +- Join Inner, (i_item_sk#32 = ss_item_sk#177)\n            :     :- Project [ss_store_sk#182, ss_item_sk#177, revenue#175]\n            :     :  +- Join Inner, ((ss_store_sk#60 = ss_store_sk#182) AND (cast(revenue#175 as decimal(23,7)) <= (0.1 * ave#174)))\n            :     :     :- Filter isnotnull(revenue#175)\n            :     :     :  +- LogicalQueryStage Aggregate [ss_store_sk#182, ss_item_sk#177], [ss_store_sk#182, ss_item_sk#177, MakeDecimal(sum(UnscaledValue(ss_sales_price#188)),17,2) AS revenue#175], HashAggregate(keys=[ss_store_sk#182, ss_item_sk#177], functions=[sum(UnscaledValue(ss_sales_price#188))])\n            :     :     +- Filter isnotnull(ave#174)\n            :     :        +- Aggregate [ss_store_sk#60], [ss_store_sk#60, avg(revenue#173) AS ave#174]\n            :     :           +- LogicalQueryStage Aggregate [ss_store_sk#60, ss_item_sk#55], [ss_store_sk#60, MakeDecimal(sum(UnscaledValue(ss_sales_price#66)),17,2) AS revenue#173], HashAggregate(keys=[ss_store_sk#60, ss_item_sk#55], functions=[sum(UnscaledValue(ss_sales_price#66))])\n            :     +- LogicalQueryStage Project [i_item_sk#32, i_item_desc#36, i_current_price#37, i_wholesale_cost#38, i_brand#40], ShuffleQueryStage 3\n            +- LogicalQueryStage Project [s_store_sk#3, s_store_name#8], BroadcastQueryStage 4\n"
      },
      "IM" : {
        "inputSizeInBytes" : 3312163360,
        "inputRowCount" : 102581354
      },
      "PD" : {
        "0" : [ 112177, 112177, 112177, 112177, 123395, 112177, 123395, 112177, 101979, 112177, 123395, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 123395, 123395, 123395, 123395, 112177, 112177, 123395, 112177, 112177, 112177, 112177, 112177, 123395, 112177, 123395, 112177, 112177, 123395, 112177, 112177, 112177, 123395, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 123395, 123395, 112177, 112177, 112177, 123395, 123395, 112177, 112177, 112177, 112177, 123395, 112177, 123395, 112177, 112177, 123395, 112177, 123395, 123395, 123395, 112177, 112177, 123395, 112177, 112177, 112177, 123395, 112177, 112177, 112177, 112177, 123395, 112177, 123395, 112177, 112177, 123395, 123395, 112177, 112177, 112177, 112177, 112177, 123395, 123395, 112177, 112177, 123395, 112177, 112177, 123395, 112177, 123395, 112177, 112177, 112177, 123395, 112177, 112177, 112177, 112177, 112177, 123395, 112177, 112177, 101979, 112177, 112177, 112177, 112177, 112177, 123395, 112177, 123395, 123395, 112177, 112177, 123395, 112177, 112177, 112177, 112177, 123395, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 123395, 123395, 123395, 112177, 112177, 112177, 123395, 112177, 112177, 112177, 123395, 112177, 112177, 123395, 112177, 112177, 112177, 112177, 112177, 123395, 123395, 123395, 112177, 112177, 112177, 112177, 123395, 112177, 112177, 123395, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 123395, 123395, 112177, 112177, 112177, 112177, 123395, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 123395, 123395 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "StartTimeInMs" : 1702227251008,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 8645,
        "IOBytes" : {
          "Total" : 1558902548,
          "Details" : {
            "IR" : 0,
            "IW" : 0,
            "SR" : 1540013519,
            "SW" : 18889029
          }
        }
      }
    },
    "6" : {
      "LQP" : {
        "operators" : {
          "12" : {
            "sign" : 535836936,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 115776,
            "rowCount" : 2412,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [ss_store_sk#60], [ss_store_sk#60, avg(revenue#173) AS ave#174], HashAggregate(keys=[ss_store_sk#60], functions=[avg(revenue#173)]) "
          },
          "8" : {
            "sign" : -309481795,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 5432530580928,
            "rowCount" : 123466604112,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, ((ss_store_sk#60 = ss_store_sk#182) AND (cast(revenue#175 as decimal(23,7)) <= (0.1 * ave#174))) "
          },
          "4" : {
            "sign" : -1435024751,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 1012524927001689600000,
            "rowCount" : 10125249270016896000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (s_store_sk#3 = ss_store_sk#182) "
          },
          "11" : {
            "sign" : -2063722774,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 67536,
            "rowCount" : 2412,
            "isRuntime" : true,
            "predicate" : " (unknown) Filter Arguments: isnotnull(ave#174) "
          },
          "9" : {
            "sign" : 14530742,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 1228523424,
            "rowCount" : 51188476,
            "isRuntime" : true,
            "predicate" : " (unknown) Filter Arguments: isnotnull(revenue#175) "
          },
          "13" : {
            "sign" : 1872093007,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 35049104,
            "rowCount" : 204000,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_item_sk#32, i_item_desc#36, i_current_price#37, i_wholesale_cost#38, i_brand#40], ShuffleQueryStage 3 "
          },
          "5" : {
            "sign" : -2106866334,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 1914226230152448000,
            "rowCount" : 25187187238848000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_store_sk#182, revenue#175, i_item_desc#36, i_current_price#37, i_wholesale_cost#38, i_brand#40] "
          },
          "10" : {
            "sign" : 106500171,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1638031232,
            "rowCount" : 51188476,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [ss_store_sk#182, ss_item_sk#177], [ss_store_sk#182, ss_item_sk#177, MakeDecimal(sum(UnscaledValue(ss_sales_price#188)),17,2) AS revenue#175], HashAggregate(keys=[ss_store_sk#182, ss_item_sk#177], functions=[sum(UnscaledValue(ss_sales_price#188))]) "
          },
          "6" : {
            "sign" : 645959941,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 2115723728063232000,
            "rowCount" : 25187187238848000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (i_item_sk#32 = ss_item_sk#177) "
          },
          "1" : {
            "sign" : 671665701,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
            "sizeInBytes" : 931522932841554432000,
            "rowCount" : 10125249270016896000,
            "isRuntime" : false,
            "predicate" : " (unknown) LocalLimit Arguments: 100 "
          },
          "14" : {
            "sign" : -2141542035,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1051792,
            "rowCount" : 402,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [s_store_sk#3, s_store_name#8], BroadcastQueryStage 4 "
          },
          "0" : {
            "sign" : -417927010,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
            "sizeInBytes" : 9200,
            "rowCount" : 100,
            "isRuntime" : false,
            "predicate" : " (unknown) GlobalLimit Arguments: 100 "
          },
          "2" : {
            "sign" : -628812856,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 931522932841554432000,
            "rowCount" : 10125249270016896000,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [s_store_name#8 ASC NULLS FIRST, i_item_desc#36 ASC NULLS FIRST], true "
          },
          "7" : {
            "sign" : 390301386,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 2963198498688,
            "rowCount" : 123466604112,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_store_sk#182, ss_item_sk#177, revenue#175] "
          },
          "3" : {
            "sign" : 964960051,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 931522932841554432000,
            "rowCount" : 10125249270016896000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [s_store_name#8, i_item_desc#36, revenue#175, i_current_price#37, i_wholesale_cost#38, i_brand#40] "
          }
        },
        "links" : [ {
          "fromId" : 10,
          "fromName" : "LogicalQueryStage",
          "toId" : 9,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "Filter",
          "toId" : 8,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 12,
          "fromName" : "LogicalQueryStage",
          "toId" : 11,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "Filter",
          "toId" : 8,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "Join",
          "toId" : 7,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Project",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 13,
          "fromName" : "LogicalQueryStage",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Join",
          "toId" : 5,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Project",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 14,
          "fromName" : "LogicalQueryStage",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Join",
          "toId" : 3,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Project",
          "toId" : 2,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "LocalLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "LocalLimit",
          "toId" : 0,
          "toName" : "GlobalLimit",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [s_store_name#8 ASC NULLS FIRST, i_item_desc#36 ASC NULLS FIRST], true\n      +- Project [s_store_name#8, i_item_desc#36, revenue#175, i_current_price#37, i_wholesale_cost#38, i_brand#40]\n         +- Join Inner, (s_store_sk#3 = ss_store_sk#182)\n            :- Project [ss_store_sk#182, revenue#175, i_item_desc#36, i_current_price#37, i_wholesale_cost#38, i_brand#40]\n            :  +- Join Inner, (i_item_sk#32 = ss_item_sk#177)\n            :     :- Project [ss_store_sk#182, ss_item_sk#177, revenue#175]\n            :     :  +- Join Inner, ((ss_store_sk#60 = ss_store_sk#182) AND (cast(revenue#175 as decimal(23,7)) <= (0.1 * ave#174)))\n            :     :     :- Filter isnotnull(revenue#175)\n            :     :     :  +- LogicalQueryStage Aggregate [ss_store_sk#182, ss_item_sk#177], [ss_store_sk#182, ss_item_sk#177, MakeDecimal(sum(UnscaledValue(ss_sales_price#188)),17,2) AS revenue#175], HashAggregate(keys=[ss_store_sk#182, ss_item_sk#177], functions=[sum(UnscaledValue(ss_sales_price#188))])\n            :     :     +- Filter isnotnull(ave#174)\n            :     :        +- LogicalQueryStage Aggregate [ss_store_sk#60], [ss_store_sk#60, avg(revenue#173) AS ave#174], HashAggregate(keys=[ss_store_sk#60], functions=[avg(revenue#173)])\n            :     +- LogicalQueryStage Project [i_item_sk#32, i_item_desc#36, i_current_price#37, i_wholesale_cost#38, i_brand#40], ShuffleQueryStage 3\n            +- LogicalQueryStage Project [s_store_sk#3, s_store_name#8], BroadcastQueryStage 4\n"
      },
      "IM" : {
        "inputSizeInBytes" : 1674247904,
        "inputRowCount" : 51395290
      },
      "PD" : {
        "0" : [ 112177, 112177, 112177, 112177, 123395, 112177, 123395, 112177, 101979, 112177, 123395, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 123395, 123395, 123395, 123395, 112177, 112177, 123395, 112177, 112177, 112177, 112177, 112177, 123395, 112177, 123395, 112177, 112177, 123395, 112177, 112177, 112177, 123395, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 123395, 123395, 112177, 112177, 112177, 123395, 123395, 112177, 112177, 112177, 112177, 123395, 112177, 123395, 112177, 112177, 123395, 112177, 123395, 123395, 123395, 112177, 112177, 123395, 112177, 112177, 112177, 123395, 112177, 112177, 112177, 112177, 123395, 112177, 123395, 112177, 112177, 123395, 123395, 112177, 112177, 112177, 112177, 112177, 123395, 123395, 112177, 112177, 123395, 112177, 112177, 123395, 112177, 123395, 112177, 112177, 112177, 123395, 112177, 112177, 112177, 112177, 112177, 123395, 112177, 112177, 101979, 112177, 112177, 112177, 112177, 112177, 123395, 112177, 123395, 123395, 112177, 112177, 123395, 112177, 112177, 112177, 112177, 123395, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 123395, 123395, 123395, 112177, 112177, 112177, 123395, 112177, 112177, 112177, 123395, 112177, 112177, 123395, 112177, 112177, 112177, 112177, 112177, 123395, 123395, 123395, 112177, 112177, 112177, 112177, 123395, 112177, 112177, 123395, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 123395, 123395, 112177, 112177, 112177, 112177, 123395, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 123395, 123395 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "StartTimeInMs" : 1702227254282,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 5371,
        "IOBytes" : {
          "Total" : 809204841,
          "Details" : {
            "IR" : 0,
            "IW" : 0,
            "SR" : 790458568,
            "SW" : 18746273
          }
        }
      }
    },
    "1" : {
      "LQP" : {
        "operators" : {
          "12" : {
            "sign" : -371379887,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 8497298720,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#198 = d_date_sk#199) "
          },
          "8" : {
            "sign" : 1134114893,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 1518752136,
            "rowCount" : 34517094,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, ((ss_store_sk#60 = ss_store_sk#182) AND (cast(revenue#175 as decimal(23,7)) <= (0.1 * ave#174))) "
          },
          "19" : {
            "sign" : 1942718027,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 4032,
            "rowCount" : 336,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#199], BroadcastQueryStage 0 "
          },
          "23" : {
            "sign" : -997386702,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 6372974040,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#55, ss_store_sk#60, ss_sales_price#66] "
          },
          "4" : {
            "sign" : 2070730617,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 23326492216884,
            "rowCount" : 115477684242,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (s_store_sk#3 = ss_store_sk#182) "
          },
          "15" : {
            "sign" : -2120854659,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#176, ss_item_sk#177, ss_customer_sk#178, ss_cdemo_sk#179, ss_hdemo_sk#180, ss_addr_sk#181, ss_store_sk#182, ss_promo_sk#183, ss_ticket_number#184L, ss_quantity#185, ss_wholesale_cost#186, ss_list_price#187, ss_sales_price#188, ss_ext_discount_amt#189, ss_ext_sales_price#190, ss_ext_wholesale_cost#191, ss_ext_list_price#192, ss_ext_tax#193, ss_coupon_amt#194, ss_net_paid#195, ss_net_paid_inc_tax#196, ss_net_profit#197, ss_sold_date_sk#198], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "11" : {
            "sign" : -1236755561,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 6372974040,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#177, ss_store_sk#182, ss_sales_price#188] "
          },
          "9" : {
            "sign" : -1832061821,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 828410256,
            "rowCount" : 34517094,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: isnotnull(revenue#175) "
          },
          "33" : {
            "sign" : -2141542035,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1051792,
            "rowCount" : 402,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [s_store_sk#3, s_store_name#8], BroadcastQueryStage 4 "
          },
          "22" : {
            "sign" : -33538926,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 690341880,
            "rowCount" : 34517094,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [ss_store_sk#60, ss_item_sk#55], [ss_store_sk#60, MakeDecimal(sum(UnscaledValue(ss_sales_price#66)),17,2) AS revenue#173] "
          },
          "26" : {
            "sign" : -331194714,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 39926379296,
            "rowCount" : 262673548,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(ss_sold_date_sk#76) AND isnotnull(ss_store_sk#60)) AND dynamicpruning#239 [ss_sold_date_sk#76]) "
          },
          "13" : {
            "sign" : 1891150671,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 7354859344,
            "rowCount" : 262673548,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#177, ss_store_sk#182, ss_sales_price#188, ss_sold_date_sk#198] "
          },
          "24" : {
            "sign" : -888171183,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 8497298720,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#76 = d_date_sk#77) "
          },
          "16" : {
            "sign" : 1971682445,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 4032,
            "rowCount" : 336,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#199] "
          },
          "5" : {
            "sign" : 347416778,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 51131909938,
            "rowCount" : 287257921,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_store_sk#182, revenue#175, i_item_desc#36, i_current_price#37, i_wholesale_cost#38, i_brand#40] "
          },
          "10" : {
            "sign" : 2002574830,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 828410256,
            "rowCount" : 34517094,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [ss_store_sk#182, ss_item_sk#177], [ss_store_sk#182, ss_item_sk#177, MakeDecimal(sum(UnscaledValue(ss_sales_price#188)),17,2) AS revenue#175] "
          },
          "21" : {
            "sign" : 1047811693,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 5124,
            "rowCount" : 183,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [ss_store_sk#60], [ss_store_sk#60, avg(revenue#173) AS ave#174] "
          },
          "32" : {
            "sign" : 1872093007,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 34680000,
            "rowCount" : 204000,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_item_sk#32, i_item_desc#36, i_current_price#37, i_wholesale_cost#38, i_brand#40], ShuffleQueryStage 3 "
          },
          "6" : {
            "sign" : -1648686959,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 53429973306,
            "rowCount" : 287257921,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (i_item_sk#32 = ss_item_sk#177) "
          },
          "1" : {
            "sign" : 154583447,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
            "sizeInBytes" : 22402670742948,
            "rowCount" : 115477684242,
            "isRuntime" : false,
            "predicate" : " (unknown) LocalLimit Arguments: 100 "
          },
          "17" : {
            "sign" : -1153258266,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 82656,
            "rowCount" : 336,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(d_month_seq#202) AND ((d_month_seq#202 >= 1212) AND (d_month_seq#202 <= 1223))) AND isnotnull(d_date_sk#199)) "
          },
          "25" : {
            "sign" : -1048765540,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 7354859344,
            "rowCount" : 262673548,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#55, ss_store_sk#60, ss_sales_price#66, ss_sold_date_sk#76] "
          },
          "14" : {
            "sign" : -283470773,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 39926379296,
            "rowCount" : 262673548,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(ss_sold_date_sk#198) AND isnotnull(ss_store_sk#182)) AND isnotnull(ss_item_sk#177)) AND dynamicpruning#238 [ss_sold_date_sk#198]) "
          },
          "31" : {
            "sign" : -942800950,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 4032,
            "rowCount" : 336,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#77], BroadcastQueryStage 2 "
          },
          "0" : {
            "sign" : -1220346868,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
            "sizeInBytes" : 9200,
            "rowCount" : 100,
            "isRuntime" : false,
            "predicate" : " (unknown) GlobalLimit Arguments: 100 "
          },
          "20" : {
            "sign" : 554343659,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 5124,
            "rowCount" : 183,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: isnotnull(ave#174) "
          },
          "27" : {
            "sign" : -996268790,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#54, ss_item_sk#55, ss_customer_sk#56, ss_cdemo_sk#57, ss_hdemo_sk#58, ss_addr_sk#59, ss_store_sk#60, ss_promo_sk#61, ss_ticket_number#62L, ss_quantity#63, ss_wholesale_cost#64, ss_list_price#65, ss_sales_price#66, ss_ext_discount_amt#67, ss_ext_sales_price#68, ss_ext_wholesale_cost#69, ss_ext_list_price#70, ss_ext_tax#71, ss_coupon_amt#72, ss_net_paid#73, ss_net_paid_inc_tax#74, ss_net_profit#75, ss_sold_date_sk#76], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "2" : {
            "sign" : -2059763550,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 22402670742948,
            "rowCount" : 115477684242,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [s_store_name#8 ASC NULLS FIRST, i_item_desc#36 ASC NULLS FIRST], true "
          },
          "18" : {
            "sign" : 1309245952,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#199, d_date_id#200, d_date#201, d_month_seq#202, d_week_seq#203, d_quarter_seq#204, d_year#205, d_dow#206, d_moy#207, d_dom#208, d_qoy#209, d_fy_year#210, d_fy_quarter_seq#211, d_fy_week_seq#212, d_day_name#213, d_quarter_name#214, d_holiday#215, d_weekend#216, d_following_holiday#217, d_first_dom#218, d_last_dom#219, d_same_day_ly#220, d_same_day_lq#221, d_current_day#222, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "30" : {
            "sign" : 66120808,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#77, d_date_id#78, d_date#79, d_month_seq#80, d_week_seq#81, d_quarter_seq#82, d_year#83, d_dow#84, d_moy#85, d_dom#86, d_qoy#87, d_fy_year#88, d_fy_quarter_seq#89, d_fy_week_seq#90, d_day_name#91, d_quarter_name#92, d_holiday#93, d_weekend#94, d_following_holiday#95, d_first_dom#96, d_last_dom#97, d_same_day_ly#98, d_same_day_lq#99, d_current_day#100, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "7" : {
            "sign" : -340326612,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 828410256,
            "rowCount" : 34517094,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_store_sk#182, ss_item_sk#177, revenue#175] "
          },
          "29" : {
            "sign" : -1884707209,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 82656,
            "rowCount" : 336,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(d_month_seq#80) AND ((d_month_seq#80 >= 1212) AND (d_month_seq#80 <= 1223))) AND isnotnull(d_date_sk#77)) "
          },
          "3" : {
            "sign" : -2021728795,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 22402670742948,
            "rowCount" : 115477684242,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [s_store_name#8, i_item_desc#36, revenue#175, i_current_price#37, i_wholesale_cost#38, i_brand#40] "
          },
          "28" : {
            "sign" : 224618565,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 4032,
            "rowCount" : 336,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#77] "
          }
        },
        "links" : [ {
          "fromId" : 15,
          "fromName" : "LogicalRelation",
          "toId" : 14,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 18,
          "fromName" : "LogicalRelation",
          "toId" : 17,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 17,
          "fromName" : "Filter",
          "toId" : 16,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 16,
          "fromName" : "Project",
          "toId" : 14,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 14,
          "fromName" : "Filter",
          "toId" : 13,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 13,
          "fromName" : "Project",
          "toId" : 12,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 19,
          "fromName" : "LogicalQueryStage",
          "toId" : 12,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 12,
          "fromName" : "Join",
          "toId" : 11,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "Project",
          "toId" : 10,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "Aggregate",
          "toId" : 9,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "Filter",
          "toId" : 8,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 27,
          "fromName" : "LogicalRelation",
          "toId" : 26,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 30,
          "fromName" : "LogicalRelation",
          "toId" : 29,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 29,
          "fromName" : "Filter",
          "toId" : 28,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 28,
          "fromName" : "Project",
          "toId" : 26,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 26,
          "fromName" : "Filter",
          "toId" : 25,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 25,
          "fromName" : "Project",
          "toId" : 24,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 31,
          "fromName" : "LogicalQueryStage",
          "toId" : 24,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 24,
          "fromName" : "Join",
          "toId" : 23,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 23,
          "fromName" : "Project",
          "toId" : 22,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 22,
          "fromName" : "Aggregate",
          "toId" : 21,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 21,
          "fromName" : "Aggregate",
          "toId" : 20,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 20,
          "fromName" : "Filter",
          "toId" : 8,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "Join",
          "toId" : 7,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Project",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 32,
          "fromName" : "LogicalQueryStage",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Join",
          "toId" : 5,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Project",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 33,
          "fromName" : "LogicalQueryStage",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Join",
          "toId" : 3,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Project",
          "toId" : 2,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "LocalLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "LocalLimit",
          "toId" : 0,
          "toName" : "GlobalLimit",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [s_store_name#8 ASC NULLS FIRST, i_item_desc#36 ASC NULLS FIRST], true\n      +- Project [s_store_name#8, i_item_desc#36, revenue#175, i_current_price#37, i_wholesale_cost#38, i_brand#40]\n         +- Join Inner, (s_store_sk#3 = ss_store_sk#182)\n            :- Project [ss_store_sk#182, revenue#175, i_item_desc#36, i_current_price#37, i_wholesale_cost#38, i_brand#40]\n            :  +- Join Inner, (i_item_sk#32 = ss_item_sk#177)\n            :     :- Project [ss_store_sk#182, ss_item_sk#177, revenue#175]\n            :     :  +- Join Inner, ((ss_store_sk#60 = ss_store_sk#182) AND (cast(revenue#175 as decimal(23,7)) <= (0.1 * ave#174)))\n            :     :     :- Filter isnotnull(revenue#175)\n            :     :     :  +- Aggregate [ss_store_sk#182, ss_item_sk#177], [ss_store_sk#182, ss_item_sk#177, MakeDecimal(sum(UnscaledValue(ss_sales_price#188)),17,2) AS revenue#175]\n            :     :     :     +- Project [ss_item_sk#177, ss_store_sk#182, ss_sales_price#188]\n            :     :     :        +- Join Inner, (ss_sold_date_sk#198 = d_date_sk#199)\n            :     :     :           :- Project [ss_item_sk#177, ss_store_sk#182, ss_sales_price#188, ss_sold_date_sk#198]\n            :     :     :           :  +- Filter (((isnotnull(ss_sold_date_sk#198) AND isnotnull(ss_store_sk#182)) AND isnotnull(ss_item_sk#177)) AND dynamicpruning#238 [ss_sold_date_sk#198])\n            :     :     :           :     :  +- Project [d_date_sk#199]\n            :     :     :           :     :     +- Filter ((isnotnull(d_month_seq#202) AND ((d_month_seq#202 >= 1212) AND (d_month_seq#202 <= 1223))) AND isnotnull(d_date_sk#199))\n            :     :     :           :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#199,d_date_id#200,d_date#201,d_month_seq#202,d_week_seq#203,d_quarter_seq#204,d_year#205,d_dow#206,d_moy#207,d_dom#208,d_qoy#209,d_fy_year#210,d_fy_quarter_seq#211,d_fy_week_seq#212,d_day_name#213,d_quarter_name#214,d_holiday#215,d_weekend#216,d_following_holiday#217,d_first_dom#218,d_last_dom#219,d_same_day_ly#220,d_same_day_lq#221,d_current_day#222,... 4 more fields] parquet\n            :     :     :           :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#176,ss_item_sk#177,ss_customer_sk#178,ss_cdemo_sk#179,ss_hdemo_sk#180,ss_addr_sk#181,ss_store_sk#182,ss_promo_sk#183,ss_ticket_number#184L,ss_quantity#185,ss_wholesale_cost#186,ss_list_price#187,ss_sales_price#188,ss_ext_discount_amt#189,ss_ext_sales_price#190,ss_ext_wholesale_cost#191,ss_ext_list_price#192,ss_ext_tax#193,ss_coupon_amt#194,ss_net_paid#195,ss_net_paid_inc_tax#196,ss_net_profit#197,ss_sold_date_sk#198] parquet\n            :     :     :           +- LogicalQueryStage Project [d_date_sk#199], BroadcastQueryStage 0\n            :     :     +- Filter isnotnull(ave#174)\n            :     :        +- Aggregate [ss_store_sk#60], [ss_store_sk#60, avg(revenue#173) AS ave#174]\n            :     :           +- Aggregate [ss_store_sk#60, ss_item_sk#55], [ss_store_sk#60, MakeDecimal(sum(UnscaledValue(ss_sales_price#66)),17,2) AS revenue#173]\n            :     :              +- Project [ss_item_sk#55, ss_store_sk#60, ss_sales_price#66]\n            :     :                 +- Join Inner, (ss_sold_date_sk#76 = d_date_sk#77)\n            :     :                    :- Project [ss_item_sk#55, ss_store_sk#60, ss_sales_price#66, ss_sold_date_sk#76]\n            :     :                    :  +- Filter ((isnotnull(ss_sold_date_sk#76) AND isnotnull(ss_store_sk#60)) AND dynamicpruning#239 [ss_sold_date_sk#76])\n            :     :                    :     :  +- Project [d_date_sk#77]\n            :     :                    :     :     +- Filter ((isnotnull(d_month_seq#80) AND ((d_month_seq#80 >= 1212) AND (d_month_seq#80 <= 1223))) AND isnotnull(d_date_sk#77))\n            :     :                    :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#77,d_date_id#78,d_date#79,d_month_seq#80,d_week_seq#81,d_quarter_seq#82,d_year#83,d_dow#84,d_moy#85,d_dom#86,d_qoy#87,d_fy_year#88,d_fy_quarter_seq#89,d_fy_week_seq#90,d_day_name#91,d_quarter_name#92,d_holiday#93,d_weekend#94,d_following_holiday#95,d_first_dom#96,d_last_dom#97,d_same_day_ly#98,d_same_day_lq#99,d_current_day#100,... 4 more fields] parquet\n            :     :                    :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#54,ss_item_sk#55,ss_customer_sk#56,ss_cdemo_sk#57,ss_hdemo_sk#58,ss_addr_sk#59,ss_store_sk#60,ss_promo_sk#61,ss_ticket_number#62L,ss_quantity#63,ss_wholesale_cost#64,ss_list_price#65,ss_sales_price#66,ss_ext_discount_amt#67,ss_ext_sales_price#68,ss_ext_wholesale_cost#69,ss_ext_list_price#70,ss_ext_tax#71,ss_coupon_amt#72,ss_net_paid#73,ss_net_paid_inc_tax#74,ss_net_profit#75,ss_sold_date_sk#76] parquet\n            :     :                    +- LogicalQueryStage Project [d_date_sk#77], BroadcastQueryStage 2\n            :     +- LogicalQueryStage Project [i_item_sk#32, i_item_desc#36, i_current_price#37, i_wholesale_cost#38, i_brand#40], ShuffleQueryStage 3\n            +- LogicalQueryStage Project [s_store_sk#3, s_store_name#8], BroadcastQueryStage 4\n"
      },
      "IM" : {
        "inputSizeInBytes" : 83649527168,
        "inputRowCount" : 550295780
      },
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 3,
        "FinishedTasksNum" : 2,
        "FinishedTasksTotalTimeInMs" : 2563.0,
        "FinishedTasksDistributionInMs" : [ 1253.0, 1253.0, 1310.0, 1310.0, 1310.0 ]
      },
      "StartTimeInMs" : 1702227226957,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 32696,
        "IOBytes" : {
          "Total" : 3803763425,
          "Details" : {
            "IR" : 723736387,
            "IW" : 0,
            "SR" : 1540013519,
            "SW" : 1540013519
          }
        }
      }
    },
    "2" : {
      "LQP" : {
        "operators" : {
          "12" : {
            "sign" : -371379887,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 3068027040640,
            "rowCount" : 95875845020,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#198 = d_date_sk#199) "
          },
          "8" : {
            "sign" : 1134114893,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 1518752136,
            "rowCount" : 34517094,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, ((ss_store_sk#60 = ss_store_sk#182) AND (cast(revenue#175 as decimal(23,7)) <= (0.1 * ave#174))) "
          },
          "19" : {
            "sign" : 1942718027,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1051496,
            "rowCount" : 365,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#199], BroadcastQueryStage 0 "
          },
          "23" : {
            "sign" : -997386702,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 2301020280480,
            "rowCount" : 95875845020,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#55, ss_store_sk#60, ss_sales_price#66] "
          },
          "4" : {
            "sign" : 2070730617,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 23326492216884,
            "rowCount" : 115477684242,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (s_store_sk#3 = ss_store_sk#182) "
          },
          "15" : {
            "sign" : -2120854659,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#176, ss_item_sk#177, ss_customer_sk#178, ss_cdemo_sk#179, ss_hdemo_sk#180, ss_addr_sk#181, ss_store_sk#182, ss_promo_sk#183, ss_ticket_number#184L, ss_quantity#185, ss_wholesale_cost#186, ss_list_price#187, ss_sales_price#188, ss_ext_discount_amt#189, ss_ext_sales_price#190, ss_ext_wholesale_cost#191, ss_ext_list_price#192, ss_ext_tax#193, ss_coupon_amt#194, ss_net_paid#195, ss_net_paid_inc_tax#196, ss_net_profit#197, ss_sold_date_sk#198], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "11" : {
            "sign" : -1236755561,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 2301020280480,
            "rowCount" : 95875845020,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#177, ss_store_sk#182, ss_sales_price#188] "
          },
          "9" : {
            "sign" : -1832061821,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 828410256,
            "rowCount" : 34517094,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: isnotnull(revenue#175) "
          },
          "33" : {
            "sign" : -2141542035,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1051792,
            "rowCount" : 402,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [s_store_sk#3, s_store_name#8], BroadcastQueryStage 4 "
          },
          "22" : {
            "sign" : -33538926,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 690341880,
            "rowCount" : 34517094,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [ss_store_sk#60, ss_item_sk#55], [ss_store_sk#60, MakeDecimal(sum(UnscaledValue(ss_sales_price#66)),17,2) AS revenue#173] "
          },
          "26" : {
            "sign" : -331194714,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 39926379296,
            "rowCount" : 262673548,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(ss_sold_date_sk#76) AND isnotnull(ss_store_sk#60)) AND dynamicpruning#239 [ss_sold_date_sk#76]) "
          },
          "13" : {
            "sign" : 1891150671,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 7354859344,
            "rowCount" : 262673548,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#177, ss_store_sk#182, ss_sales_price#188, ss_sold_date_sk#198] "
          },
          "24" : {
            "sign" : -888171183,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 3068027040640,
            "rowCount" : 95875845020,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#76 = d_date_sk#77) "
          },
          "16" : {
            "sign" : 1971682445,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 4032,
            "rowCount" : 336,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#199] "
          },
          "5" : {
            "sign" : 347416778,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 51131909938,
            "rowCount" : 287257921,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_store_sk#182, revenue#175, i_item_desc#36, i_current_price#37, i_wholesale_cost#38, i_brand#40] "
          },
          "10" : {
            "sign" : 2002574830,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 828410256,
            "rowCount" : 34517094,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [ss_store_sk#182, ss_item_sk#177], [ss_store_sk#182, ss_item_sk#177, MakeDecimal(sum(UnscaledValue(ss_sales_price#188)),17,2) AS revenue#175] "
          },
          "21" : {
            "sign" : 1047811693,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 5124,
            "rowCount" : 183,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [ss_store_sk#60], [ss_store_sk#60, avg(revenue#173) AS ave#174] "
          },
          "32" : {
            "sign" : 1872093007,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 34680000,
            "rowCount" : 204000,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_item_sk#32, i_item_desc#36, i_current_price#37, i_wholesale_cost#38, i_brand#40], ShuffleQueryStage 3 "
          },
          "6" : {
            "sign" : -1648686959,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 53429973306,
            "rowCount" : 287257921,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (i_item_sk#32 = ss_item_sk#177) "
          },
          "1" : {
            "sign" : 154583447,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
            "sizeInBytes" : 22402670742948,
            "rowCount" : 115477684242,
            "isRuntime" : false,
            "predicate" : " (unknown) LocalLimit Arguments: 100 "
          },
          "17" : {
            "sign" : -1153258266,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 82656,
            "rowCount" : 336,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(d_month_seq#202) AND ((d_month_seq#202 >= 1212) AND (d_month_seq#202 <= 1223))) AND isnotnull(d_date_sk#199)) "
          },
          "25" : {
            "sign" : -1048765540,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 7354859344,
            "rowCount" : 262673548,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#55, ss_store_sk#60, ss_sales_price#66, ss_sold_date_sk#76] "
          },
          "14" : {
            "sign" : -283470773,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 39926379296,
            "rowCount" : 262673548,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(ss_sold_date_sk#198) AND isnotnull(ss_store_sk#182)) AND isnotnull(ss_item_sk#177)) AND dynamicpruning#238 [ss_sold_date_sk#198]) "
          },
          "31" : {
            "sign" : -942800950,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1051496,
            "rowCount" : 365,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#77], BroadcastQueryStage 2 "
          },
          "0" : {
            "sign" : -1220346868,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
            "sizeInBytes" : 9200,
            "rowCount" : 100,
            "isRuntime" : false,
            "predicate" : " (unknown) GlobalLimit Arguments: 100 "
          },
          "20" : {
            "sign" : 554343659,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 5124,
            "rowCount" : 183,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: isnotnull(ave#174) "
          },
          "27" : {
            "sign" : -996268790,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#54, ss_item_sk#55, ss_customer_sk#56, ss_cdemo_sk#57, ss_hdemo_sk#58, ss_addr_sk#59, ss_store_sk#60, ss_promo_sk#61, ss_ticket_number#62L, ss_quantity#63, ss_wholesale_cost#64, ss_list_price#65, ss_sales_price#66, ss_ext_discount_amt#67, ss_ext_sales_price#68, ss_ext_wholesale_cost#69, ss_ext_list_price#70, ss_ext_tax#71, ss_coupon_amt#72, ss_net_paid#73, ss_net_paid_inc_tax#74, ss_net_profit#75, ss_sold_date_sk#76], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "2" : {
            "sign" : -2059763550,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 22402670742948,
            "rowCount" : 115477684242,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [s_store_name#8 ASC NULLS FIRST, i_item_desc#36 ASC NULLS FIRST], true "
          },
          "18" : {
            "sign" : 1309245952,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#199, d_date_id#200, d_date#201, d_month_seq#202, d_week_seq#203, d_quarter_seq#204, d_year#205, d_dow#206, d_moy#207, d_dom#208, d_qoy#209, d_fy_year#210, d_fy_quarter_seq#211, d_fy_week_seq#212, d_day_name#213, d_quarter_name#214, d_holiday#215, d_weekend#216, d_following_holiday#217, d_first_dom#218, d_last_dom#219, d_same_day_ly#220, d_same_day_lq#221, d_current_day#222, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "30" : {
            "sign" : 66120808,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#77, d_date_id#78, d_date#79, d_month_seq#80, d_week_seq#81, d_quarter_seq#82, d_year#83, d_dow#84, d_moy#85, d_dom#86, d_qoy#87, d_fy_year#88, d_fy_quarter_seq#89, d_fy_week_seq#90, d_day_name#91, d_quarter_name#92, d_holiday#93, d_weekend#94, d_following_holiday#95, d_first_dom#96, d_last_dom#97, d_same_day_ly#98, d_same_day_lq#99, d_current_day#100, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "7" : {
            "sign" : -340326612,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 828410256,
            "rowCount" : 34517094,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_store_sk#182, ss_item_sk#177, revenue#175] "
          },
          "29" : {
            "sign" : -1884707209,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 82656,
            "rowCount" : 336,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(d_month_seq#80) AND ((d_month_seq#80 >= 1212) AND (d_month_seq#80 <= 1223))) AND isnotnull(d_date_sk#77)) "
          },
          "3" : {
            "sign" : -2021728795,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 22402670742948,
            "rowCount" : 115477684242,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [s_store_name#8, i_item_desc#36, revenue#175, i_current_price#37, i_wholesale_cost#38, i_brand#40] "
          },
          "28" : {
            "sign" : 224618565,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 4032,
            "rowCount" : 336,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#77] "
          }
        },
        "links" : [ {
          "fromId" : 15,
          "fromName" : "LogicalRelation",
          "toId" : 14,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 18,
          "fromName" : "LogicalRelation",
          "toId" : 17,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 17,
          "fromName" : "Filter",
          "toId" : 16,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 16,
          "fromName" : "Project",
          "toId" : 14,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 14,
          "fromName" : "Filter",
          "toId" : 13,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 13,
          "fromName" : "Project",
          "toId" : 12,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 19,
          "fromName" : "LogicalQueryStage",
          "toId" : 12,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 12,
          "fromName" : "Join",
          "toId" : 11,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "Project",
          "toId" : 10,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "Aggregate",
          "toId" : 9,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "Filter",
          "toId" : 8,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 27,
          "fromName" : "LogicalRelation",
          "toId" : 26,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 30,
          "fromName" : "LogicalRelation",
          "toId" : 29,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 29,
          "fromName" : "Filter",
          "toId" : 28,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 28,
          "fromName" : "Project",
          "toId" : 26,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 26,
          "fromName" : "Filter",
          "toId" : 25,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 25,
          "fromName" : "Project",
          "toId" : 24,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 31,
          "fromName" : "LogicalQueryStage",
          "toId" : 24,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 24,
          "fromName" : "Join",
          "toId" : 23,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 23,
          "fromName" : "Project",
          "toId" : 22,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 22,
          "fromName" : "Aggregate",
          "toId" : 21,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 21,
          "fromName" : "Aggregate",
          "toId" : 20,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 20,
          "fromName" : "Filter",
          "toId" : 8,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "Join",
          "toId" : 7,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Project",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 32,
          "fromName" : "LogicalQueryStage",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Join",
          "toId" : 5,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Project",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 33,
          "fromName" : "LogicalQueryStage",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Join",
          "toId" : 3,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Project",
          "toId" : 2,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "LocalLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "LocalLimit",
          "toId" : 0,
          "toName" : "GlobalLimit",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [s_store_name#8 ASC NULLS FIRST, i_item_desc#36 ASC NULLS FIRST], true\n      +- Project [s_store_name#8, i_item_desc#36, revenue#175, i_current_price#37, i_wholesale_cost#38, i_brand#40]\n         +- Join Inner, (s_store_sk#3 = ss_store_sk#182)\n            :- Project [ss_store_sk#182, revenue#175, i_item_desc#36, i_current_price#37, i_wholesale_cost#38, i_brand#40]\n            :  +- Join Inner, (i_item_sk#32 = ss_item_sk#177)\n            :     :- Project [ss_store_sk#182, ss_item_sk#177, revenue#175]\n            :     :  +- Join Inner, ((ss_store_sk#60 = ss_store_sk#182) AND (cast(revenue#175 as decimal(23,7)) <= (0.1 * ave#174)))\n            :     :     :- Filter isnotnull(revenue#175)\n            :     :     :  +- Aggregate [ss_store_sk#182, ss_item_sk#177], [ss_store_sk#182, ss_item_sk#177, MakeDecimal(sum(UnscaledValue(ss_sales_price#188)),17,2) AS revenue#175]\n            :     :     :     +- Project [ss_item_sk#177, ss_store_sk#182, ss_sales_price#188]\n            :     :     :        +- Join Inner, (ss_sold_date_sk#198 = d_date_sk#199)\n            :     :     :           :- Project [ss_item_sk#177, ss_store_sk#182, ss_sales_price#188, ss_sold_date_sk#198]\n            :     :     :           :  +- Filter (((isnotnull(ss_sold_date_sk#198) AND isnotnull(ss_store_sk#182)) AND isnotnull(ss_item_sk#177)) AND dynamicpruning#238 [ss_sold_date_sk#198])\n            :     :     :           :     :  +- Project [d_date_sk#199]\n            :     :     :           :     :     +- Filter ((isnotnull(d_month_seq#202) AND ((d_month_seq#202 >= 1212) AND (d_month_seq#202 <= 1223))) AND isnotnull(d_date_sk#199))\n            :     :     :           :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#199,d_date_id#200,d_date#201,d_month_seq#202,d_week_seq#203,d_quarter_seq#204,d_year#205,d_dow#206,d_moy#207,d_dom#208,d_qoy#209,d_fy_year#210,d_fy_quarter_seq#211,d_fy_week_seq#212,d_day_name#213,d_quarter_name#214,d_holiday#215,d_weekend#216,d_following_holiday#217,d_first_dom#218,d_last_dom#219,d_same_day_ly#220,d_same_day_lq#221,d_current_day#222,... 4 more fields] parquet\n            :     :     :           :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#176,ss_item_sk#177,ss_customer_sk#178,ss_cdemo_sk#179,ss_hdemo_sk#180,ss_addr_sk#181,ss_store_sk#182,ss_promo_sk#183,ss_ticket_number#184L,ss_quantity#185,ss_wholesale_cost#186,ss_list_price#187,ss_sales_price#188,ss_ext_discount_amt#189,ss_ext_sales_price#190,ss_ext_wholesale_cost#191,ss_ext_list_price#192,ss_ext_tax#193,ss_coupon_amt#194,ss_net_paid#195,ss_net_paid_inc_tax#196,ss_net_profit#197,ss_sold_date_sk#198] parquet\n            :     :     :           +- LogicalQueryStage Project [d_date_sk#199], BroadcastQueryStage 0\n            :     :     +- Filter isnotnull(ave#174)\n            :     :        +- Aggregate [ss_store_sk#60], [ss_store_sk#60, avg(revenue#173) AS ave#174]\n            :     :           +- Aggregate [ss_store_sk#60, ss_item_sk#55], [ss_store_sk#60, MakeDecimal(sum(UnscaledValue(ss_sales_price#66)),17,2) AS revenue#173]\n            :     :              +- Project [ss_item_sk#55, ss_store_sk#60, ss_sales_price#66]\n            :     :                 +- Join Inner, (ss_sold_date_sk#76 = d_date_sk#77)\n            :     :                    :- Project [ss_item_sk#55, ss_store_sk#60, ss_sales_price#66, ss_sold_date_sk#76]\n            :     :                    :  +- Filter ((isnotnull(ss_sold_date_sk#76) AND isnotnull(ss_store_sk#60)) AND dynamicpruning#239 [ss_sold_date_sk#76])\n            :     :                    :     :  +- Project [d_date_sk#77]\n            :     :                    :     :     +- Filter ((isnotnull(d_month_seq#80) AND ((d_month_seq#80 >= 1212) AND (d_month_seq#80 <= 1223))) AND isnotnull(d_date_sk#77))\n            :     :                    :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#77,d_date_id#78,d_date#79,d_month_seq#80,d_week_seq#81,d_quarter_seq#82,d_year#83,d_dow#84,d_moy#85,d_dom#86,d_qoy#87,d_fy_year#88,d_fy_quarter_seq#89,d_fy_week_seq#90,d_day_name#91,d_quarter_name#92,d_holiday#93,d_weekend#94,d_following_holiday#95,d_first_dom#96,d_last_dom#97,d_same_day_ly#98,d_same_day_lq#99,d_current_day#100,... 4 more fields] parquet\n            :     :                    :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#54,ss_item_sk#55,ss_customer_sk#56,ss_cdemo_sk#57,ss_hdemo_sk#58,ss_addr_sk#59,ss_store_sk#60,ss_promo_sk#61,ss_ticket_number#62L,ss_quantity#63,ss_wholesale_cost#64,ss_list_price#65,ss_sales_price#66,ss_ext_discount_amt#67,ss_ext_sales_price#68,ss_ext_wholesale_cost#69,ss_ext_list_price#70,ss_ext_tax#71,ss_coupon_amt#72,ss_net_paid#73,ss_net_paid_inc_tax#74,ss_net_profit#75,ss_sold_date_sk#76] parquet\n            :     :                    +- LogicalQueryStage Project [d_date_sk#77], BroadcastQueryStage 2\n            :     +- LogicalQueryStage Project [i_item_sk#32, i_item_desc#36, i_current_price#37, i_wholesale_cost#38, i_brand#40], ShuffleQueryStage 3\n            +- LogicalQueryStage Project [s_store_sk#3, s_store_name#8], BroadcastQueryStage 4\n"
      },
      "IM" : {
        "inputSizeInBytes" : 83651622096,
        "inputRowCount" : 550295838
      },
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 1,
        "FinishedTasksNum" : 4,
        "FinishedTasksTotalTimeInMs" : 6159.0,
        "FinishedTasksDistributionInMs" : [ 1253.0, 1310.0, 1785.0, 1811.0, 1811.0 ]
      },
      "StartTimeInMs" : 1702227227092,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 32561,
        "IOBytes" : {
          "Total" : 3803763425,
          "Details" : {
            "IR" : 723736387,
            "IW" : 0,
            "SR" : 1540013519,
            "SW" : 1540013519
          }
        }
      }
    },
    "7" : {
      "LQP" : {
        "operators" : {
          "12" : {
            "sign" : 1872093007,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 35049104,
            "rowCount" : 204000,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_item_sk#32, i_item_desc#36, i_current_price#37, i_wholesale_cost#38, i_brand#40], ShuffleQueryStage 3 "
          },
          "8" : {
            "sign" : -1788966015,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 452710881744,
            "rowCount" : 10288883676,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, ((ss_store_sk#60 = ss_store_sk#182) AND (cast(revenue#175 as decimal(23,7)) <= (0.1 * ave#174))) "
          },
          "4" : {
            "sign" : 1389883021,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 84377077250140800000,
            "rowCount" : 843770772501408000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (s_store_sk#3 = ss_store_sk#182) "
          },
          "11" : {
            "sign" : 1187588508,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1051776,
            "rowCount" : 201,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Filter isnotnull(ave#174), BroadcastQueryStage 8 "
          },
          "9" : {
            "sign" : 14530742,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 1228523424,
            "rowCount" : 51188476,
            "isRuntime" : true,
            "predicate" : " (unknown) Filter Arguments: isnotnull(revenue#175) "
          },
          "13" : {
            "sign" : -2141542035,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1051792,
            "rowCount" : 402,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [s_store_sk#3, s_store_name#8], BroadcastQueryStage 4 "
          },
          "5" : {
            "sign" : 1604844182,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 159518852512704000,
            "rowCount" : 2098932269904000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_store_sk#182, revenue#175, i_item_desc#36, i_current_price#37, i_wholesale_cost#38, i_brand#40] "
          },
          "10" : {
            "sign" : 106500171,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1638031232,
            "rowCount" : 51188476,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [ss_store_sk#182, ss_item_sk#177], [ss_store_sk#182, ss_item_sk#177, MakeDecimal(sum(UnscaledValue(ss_sales_price#188)),17,2) AS revenue#175], HashAggregate(keys=[ss_store_sk#182, ss_item_sk#177], functions=[sum(UnscaledValue(ss_sales_price#188))]) "
          },
          "6" : {
            "sign" : 556040545,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 176310310671936000,
            "rowCount" : 2098932269904000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (i_item_sk#32 = ss_item_sk#177) "
          },
          "1" : {
            "sign" : -1228640449,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
            "sizeInBytes" : 77626911070129536000,
            "rowCount" : 843770772501408000,
            "isRuntime" : false,
            "predicate" : " (unknown) LocalLimit Arguments: 100 "
          },
          "0" : {
            "sign" : 558239456,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
            "sizeInBytes" : 9200,
            "rowCount" : 100,
            "isRuntime" : false,
            "predicate" : " (unknown) GlobalLimit Arguments: 100 "
          },
          "2" : {
            "sign" : 1209169014,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 77626911070129536000,
            "rowCount" : 843770772501408000,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [s_store_name#8 ASC NULLS FIRST, i_item_desc#36 ASC NULLS FIRST], true "
          },
          "7" : {
            "sign" : -1172643716,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 246933208224,
            "rowCount" : 10288883676,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_store_sk#182, ss_item_sk#177, revenue#175] "
          },
          "3" : {
            "sign" : -233753459,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 77626911070129536000,
            "rowCount" : 843770772501408000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [s_store_name#8, i_item_desc#36, revenue#175, i_current_price#37, i_wholesale_cost#38, i_brand#40] "
          }
        },
        "links" : [ {
          "fromId" : 10,
          "fromName" : "LogicalQueryStage",
          "toId" : 9,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "Filter",
          "toId" : 8,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "LogicalQueryStage",
          "toId" : 8,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "Join",
          "toId" : 7,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Project",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 12,
          "fromName" : "LogicalQueryStage",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Join",
          "toId" : 5,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Project",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 13,
          "fromName" : "LogicalQueryStage",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Join",
          "toId" : 3,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Project",
          "toId" : 2,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "LocalLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "LocalLimit",
          "toId" : 0,
          "toName" : "GlobalLimit",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [s_store_name#8 ASC NULLS FIRST, i_item_desc#36 ASC NULLS FIRST], true\n      +- Project [s_store_name#8, i_item_desc#36, revenue#175, i_current_price#37, i_wholesale_cost#38, i_brand#40]\n         +- Join Inner, (s_store_sk#3 = ss_store_sk#182)\n            :- Project [ss_store_sk#182, revenue#175, i_item_desc#36, i_current_price#37, i_wholesale_cost#38, i_brand#40]\n            :  +- Join Inner, (i_item_sk#32 = ss_item_sk#177)\n            :     :- Project [ss_store_sk#182, ss_item_sk#177, revenue#175]\n            :     :  +- Join Inner, ((ss_store_sk#60 = ss_store_sk#182) AND (cast(revenue#175 as decimal(23,7)) <= (0.1 * ave#174)))\n            :     :     :- Filter isnotnull(revenue#175)\n            :     :     :  +- LogicalQueryStage Aggregate [ss_store_sk#182, ss_item_sk#177], [ss_store_sk#182, ss_item_sk#177, MakeDecimal(sum(UnscaledValue(ss_sales_price#188)),17,2) AS revenue#175], HashAggregate(keys=[ss_store_sk#182, ss_item_sk#177], functions=[sum(UnscaledValue(ss_sales_price#188))])\n            :     :     +- LogicalQueryStage Filter isnotnull(ave#174), BroadcastQueryStage 8\n            :     +- LogicalQueryStage Project [i_item_sk#32, i_item_desc#36, i_current_price#37, i_wholesale_cost#38, i_brand#40], ShuffleQueryStage 3\n            +- LogicalQueryStage Project [s_store_sk#3, s_store_name#8], BroadcastQueryStage 4\n"
      },
      "IM" : {
        "inputSizeInBytes" : 1675183904,
        "inputRowCount" : 51393079
      },
      "PD" : {
        "0" : [ 112177, 112177, 112177, 112177, 123395, 112177, 123395, 112177, 101979, 112177, 123395, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 123395, 123395, 123395, 123395, 112177, 112177, 123395, 112177, 112177, 112177, 112177, 112177, 123395, 112177, 123395, 112177, 112177, 123395, 112177, 112177, 112177, 123395, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 123395, 123395, 112177, 112177, 112177, 123395, 123395, 112177, 112177, 112177, 112177, 123395, 112177, 123395, 112177, 112177, 123395, 112177, 123395, 123395, 123395, 112177, 112177, 123395, 112177, 112177, 112177, 123395, 112177, 112177, 112177, 112177, 123395, 112177, 123395, 112177, 112177, 123395, 123395, 112177, 112177, 112177, 112177, 112177, 123395, 123395, 112177, 112177, 123395, 112177, 112177, 123395, 112177, 123395, 112177, 112177, 112177, 123395, 112177, 112177, 112177, 112177, 112177, 123395, 112177, 112177, 101979, 112177, 112177, 112177, 112177, 112177, 123395, 112177, 123395, 123395, 112177, 112177, 123395, 112177, 112177, 112177, 112177, 123395, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 123395, 123395, 123395, 112177, 112177, 112177, 123395, 112177, 112177, 112177, 123395, 112177, 112177, 123395, 112177, 112177, 112177, 112177, 112177, 123395, 123395, 123395, 112177, 112177, 112177, 112177, 123395, 112177, 112177, 123395, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 123395, 123395, 112177, 112177, 112177, 112177, 123395, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 123395, 123395 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "StartTimeInMs" : 1702227254461,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 5192,
        "IOBytes" : {
          "Total" : 809062085,
          "Details" : {
            "IR" : 0,
            "IW" : 0,
            "SR" : 790315812,
            "SW" : 18746273
          }
        }
      }
    },
    "3" : {
      "LQP" : {
        "operators" : {
          "12" : {
            "sign" : 1411083108,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 5124,
            "rowCount" : 183,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [ss_store_sk#60], [ss_store_sk#60, avg(revenue#173) AS ave#174] "
          },
          "8" : {
            "sign" : 1596308751,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 1518752136,
            "rowCount" : 34517094,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, ((ss_store_sk#60 = ss_store_sk#182) AND (cast(revenue#175 as decimal(23,7)) <= (0.1 * ave#174))) "
          },
          "4" : {
            "sign" : 1898601431,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 283067784475200000,
            "rowCount" : 2830677844752000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (s_store_sk#3 = ss_store_sk#182) "
          },
          "15" : {
            "sign" : -2141542035,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1051792,
            "rowCount" : 402,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [s_store_sk#3, s_store_name#8], BroadcastQueryStage 4 "
          },
          "11" : {
            "sign" : -227463240,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 5124,
            "rowCount" : 183,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: isnotnull(ave#174) "
          },
          "9" : {
            "sign" : 14530742,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 828410256,
            "rowCount" : 34517094,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: isnotnull(revenue#175) "
          },
          "13" : {
            "sign" : -1652255073,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 690341880,
            "rowCount" : 34517094,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [ss_store_sk#60, ss_item_sk#55], [ss_store_sk#60, MakeDecimal(sum(UnscaledValue(ss_sales_price#66)),17,2) AS revenue#173], HashAggregate(keys=[ss_store_sk#60, ss_item_sk#55], functions=[sum(UnscaledValue(ss_sales_price#66))]) "
          },
          "5" : {
            "sign" : -1270752966,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 535153025376000,
            "rowCount" : 7041487176000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_store_sk#182, revenue#175, i_item_desc#36, i_current_price#37, i_wholesale_cost#38, i_brand#40] "
          },
          "10" : {
            "sign" : 106500171,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 828410256,
            "rowCount" : 34517094,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [ss_store_sk#182, ss_item_sk#177], [ss_store_sk#182, ss_item_sk#177, MakeDecimal(sum(UnscaledValue(ss_sales_price#188)),17,2) AS revenue#175], HashAggregate(keys=[ss_store_sk#182, ss_item_sk#177], functions=[sum(UnscaledValue(ss_sales_price#188))]) "
          },
          "6" : {
            "sign" : -1798403293,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 591484922784000,
            "rowCount" : 7041487176000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (i_item_sk#32 = ss_item_sk#177) "
          },
          "1" : {
            "sign" : 1359466019,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
            "sizeInBytes" : 260422361717184000,
            "rowCount" : 2830677844752000,
            "isRuntime" : false,
            "predicate" : " (unknown) LocalLimit Arguments: 100 "
          },
          "14" : {
            "sign" : 1872093007,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 35049104,
            "rowCount" : 204000,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_item_sk#32, i_item_desc#36, i_current_price#37, i_wholesale_cost#38, i_brand#40], ShuffleQueryStage 3 "
          },
          "0" : {
            "sign" : -869764246,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
            "sizeInBytes" : 9200,
            "rowCount" : 100,
            "isRuntime" : false,
            "predicate" : " (unknown) GlobalLimit Arguments: 100 "
          },
          "2" : {
            "sign" : 218823360,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 260422361717184000,
            "rowCount" : 2830677844752000,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [s_store_name#8 ASC NULLS FIRST, i_item_desc#36 ASC NULLS FIRST], true "
          },
          "7" : {
            "sign" : 479544152,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 828410256,
            "rowCount" : 34517094,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_store_sk#182, ss_item_sk#177, revenue#175] "
          },
          "3" : {
            "sign" : 228720049,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 260422361717184000,
            "rowCount" : 2830677844752000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [s_store_name#8, i_item_desc#36, revenue#175, i_current_price#37, i_wholesale_cost#38, i_brand#40] "
          }
        },
        "links" : [ {
          "fromId" : 10,
          "fromName" : "LogicalQueryStage",
          "toId" : 9,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "Filter",
          "toId" : 8,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 13,
          "fromName" : "LogicalQueryStage",
          "toId" : 12,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 12,
          "fromName" : "Aggregate",
          "toId" : 11,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "Filter",
          "toId" : 8,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "Join",
          "toId" : 7,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Project",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 14,
          "fromName" : "LogicalQueryStage",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Join",
          "toId" : 5,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Project",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 15,
          "fromName" : "LogicalQueryStage",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Join",
          "toId" : 3,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Project",
          "toId" : 2,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "LocalLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "LocalLimit",
          "toId" : 0,
          "toName" : "GlobalLimit",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [s_store_name#8 ASC NULLS FIRST, i_item_desc#36 ASC NULLS FIRST], true\n      +- Project [s_store_name#8, i_item_desc#36, revenue#175, i_current_price#37, i_wholesale_cost#38, i_brand#40]\n         +- Join Inner, (s_store_sk#3 = ss_store_sk#182)\n            :- Project [ss_store_sk#182, revenue#175, i_item_desc#36, i_current_price#37, i_wholesale_cost#38, i_brand#40]\n            :  +- Join Inner, (i_item_sk#32 = ss_item_sk#177)\n            :     :- Project [ss_store_sk#182, ss_item_sk#177, revenue#175]\n            :     :  +- Join Inner, ((ss_store_sk#60 = ss_store_sk#182) AND (cast(revenue#175 as decimal(23,7)) <= (0.1 * ave#174)))\n            :     :     :- Filter isnotnull(revenue#175)\n            :     :     :  +- LogicalQueryStage Aggregate [ss_store_sk#182, ss_item_sk#177], [ss_store_sk#182, ss_item_sk#177, MakeDecimal(sum(UnscaledValue(ss_sales_price#188)),17,2) AS revenue#175], HashAggregate(keys=[ss_store_sk#182, ss_item_sk#177], functions=[sum(UnscaledValue(ss_sales_price#188))])\n            :     :     +- Filter isnotnull(ave#174)\n            :     :        +- Aggregate [ss_store_sk#60], [ss_store_sk#60, avg(revenue#173) AS ave#174]\n            :     :           +- LogicalQueryStage Aggregate [ss_store_sk#60, ss_item_sk#55], [ss_store_sk#60, MakeDecimal(sum(UnscaledValue(ss_sales_price#66)),17,2) AS revenue#173], HashAggregate(keys=[ss_store_sk#60, ss_item_sk#55], functions=[sum(UnscaledValue(ss_sales_price#66))])\n            :     +- LogicalQueryStage Project [i_item_sk#32, i_item_desc#36, i_current_price#37, i_wholesale_cost#38, i_brand#40], ShuffleQueryStage 3\n            +- LogicalQueryStage Project [s_store_sk#3, s_store_name#8], BroadcastQueryStage 4\n"
      },
      "IM" : {
        "inputSizeInBytes" : 1554853032,
        "inputRowCount" : 69238590
      },
      "PD" : {
        "0" : [ 112177, 112177, 112177, 112177, 123395, 112177, 123395, 112177, 101979, 112177, 123395, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 123395, 123395, 123395, 123395, 112177, 112177, 123395, 112177, 112177, 112177, 112177, 112177, 123395, 112177, 123395, 112177, 112177, 123395, 112177, 112177, 112177, 123395, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 123395, 123395, 112177, 112177, 112177, 123395, 123395, 112177, 112177, 112177, 112177, 123395, 112177, 123395, 112177, 112177, 123395, 112177, 123395, 123395, 123395, 112177, 112177, 123395, 112177, 112177, 112177, 123395, 112177, 112177, 112177, 112177, 123395, 112177, 123395, 112177, 112177, 123395, 123395, 112177, 112177, 112177, 112177, 112177, 123395, 123395, 112177, 112177, 123395, 112177, 112177, 123395, 112177, 123395, 112177, 112177, 112177, 123395, 112177, 112177, 112177, 112177, 112177, 123395, 112177, 112177, 101979, 112177, 112177, 112177, 112177, 112177, 123395, 112177, 123395, 123395, 112177, 112177, 123395, 112177, 112177, 112177, 112177, 123395, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 123395, 123395, 123395, 112177, 112177, 112177, 123395, 112177, 112177, 112177, 123395, 112177, 112177, 123395, 112177, 112177, 112177, 112177, 112177, 123395, 123395, 123395, 112177, 112177, 112177, 112177, 123395, 112177, 112177, 123395, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 123395, 123395, 112177, 112177, 112177, 112177, 123395, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 123395, 123395 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 16,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "StartTimeInMs" : 1702227228323,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 31330,
        "IOBytes" : {
          "Total" : 3769143498,
          "Details" : {
            "IR" : 711131048,
            "IW" : 0,
            "SR" : 1540013519,
            "SW" : 1517998931
          }
        }
      }
    }
  },
  "RuntimeQSs" : {
    "8" : {
      "QSLogical" : {
        "operators" : {
          "4" : {
            "sign" : -1635303490,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 114414901722,
                "rowCount" : 577853039
              },
              "compileTime" : {
                "sizeInBytes" : 114414901722,
                "rowCount" : 577853039
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (s_store_sk#3 = ss_store_sk#182) "
          },
          "5" : {
            "sign" : -762007704,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 51131909938,
                "rowCount" : 287257921
              },
              "compileTime" : {
                "sizeInBytes" : 51131909938,
                "rowCount" : 287257921
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_store_sk#182, revenue#175, i_item_desc#36, i_current_price#37, i_wholesale_cost#38, i_brand#40] "
          },
          "6" : {
            "sign" : 1765456535,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 53429973306,
                "rowCount" : 287257921
              },
              "compileTime" : {
                "sizeInBytes" : 53429973306,
                "rowCount" : 287257921
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (i_item_sk#32 = ss_item_sk#177) "
          },
          "1" : {
            "sign" : -1533370768,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 109792077410,
                "rowCount" : 577853039
              },
              "compileTime" : {
                "sizeInBytes" : 109792077410,
                "rowCount" : 577853039
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) LocalLimit Arguments: 100 "
          },
          "0" : {
            "sign" : -1285203503,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 9200,
                "rowCount" : 100
              },
              "compileTime" : {
                "sizeInBytes" : 9200,
                "rowCount" : 100
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) GlobalLimit Arguments: 100 "
          },
          "2" : {
            "sign" : -164183833,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 109792077410,
                "rowCount" : 577853039
              },
              "compileTime" : {
                "sizeInBytes" : 109792077410,
                "rowCount" : 577853039
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [s_store_name#8 ASC NULLS FIRST, i_item_desc#36 ASC NULLS FIRST], true "
          },
          "3" : {
            "sign" : -161244610,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 109792077410,
                "rowCount" : 577853039
              },
              "compileTime" : {
                "sizeInBytes" : 109792077410,
                "rowCount" : 577853039
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [s_store_name#8, i_item_desc#36, revenue#175, i_current_price#37, i_wholesale_cost#38, i_brand#40] "
          }
        },
        "links" : [ {
          "fromId" : 6,
          "fromName" : "Join",
          "toId" : 5,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Project",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Join",
          "toId" : 3,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Project",
          "toId" : 2,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "LocalLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "LocalLimit",
          "toId" : 0,
          "toName" : "GlobalLimit",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [s_store_name#8 ASC NULLS FIRST, i_item_desc#36 ASC NULLS FIRST], true\n      +- Project [s_store_name#8, i_item_desc#36, revenue#175, i_current_price#37, i_wholesale_cost#38, i_brand#40]\n         +- Join Inner, (s_store_sk#3 = ss_store_sk#182)\n            :- Project [ss_store_sk#182, revenue#175, i_item_desc#36, i_current_price#37, i_wholesale_cost#38, i_brand#40]\n            :  +- Join Inner, (i_item_sk#32 = ss_item_sk#177)\n            :     :- Project [ss_store_sk#182, ss_item_sk#177, revenue#175]\n            :     :  +- Join Inner, ((ss_store_sk#60 = ss_store_sk#182) AND (cast(revenue#175 as decimal(23,7)) <= (0.1 * ave#174)))\n            :     :     :- Filter isnotnull(revenue#175)\n            :     :     :  +- Aggregate [ss_store_sk#182, ss_item_sk#177], [ss_store_sk#182, ss_item_sk#177, MakeDecimal(sum(UnscaledValue(ss_sales_price#188)),17,2) AS revenue#175]\n            :     :     :     +- Project [ss_item_sk#177, ss_store_sk#182, ss_sales_price#188]\n            :     :     :        +- Join Inner, (ss_sold_date_sk#198 = d_date_sk#199)\n            :     :     :           :- Project [ss_item_sk#177, ss_store_sk#182, ss_sales_price#188, ss_sold_date_sk#198]\n            :     :     :           :  +- Filter (((isnotnull(ss_sold_date_sk#198) AND isnotnull(ss_store_sk#182)) AND isnotnull(ss_item_sk#177)) AND dynamicpruning#238 [ss_sold_date_sk#198])\n            :     :     :           :     :  +- Project [d_date_sk#199]\n            :     :     :           :     :     +- Filter ((isnotnull(d_month_seq#202) AND ((d_month_seq#202 >= 1212) AND (d_month_seq#202 <= 1223))) AND isnotnull(d_date_sk#199))\n            :     :     :           :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#199,d_date_id#200,d_date#201,d_month_seq#202,d_week_seq#203,d_quarter_seq#204,d_year#205,d_dow#206,d_moy#207,d_dom#208,d_qoy#209,d_fy_year#210,d_fy_quarter_seq#211,d_fy_week_seq#212,d_day_name#213,d_quarter_name#214,d_holiday#215,d_weekend#216,d_following_holiday#217,d_first_dom#218,d_last_dom#219,d_same_day_ly#220,d_same_day_lq#221,d_current_day#222,... 4 more fields] parquet\n            :     :     :           :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#176,ss_item_sk#177,ss_customer_sk#178,ss_cdemo_sk#179,ss_hdemo_sk#180,ss_addr_sk#181,ss_store_sk#182,ss_promo_sk#183,ss_ticket_number#184L,ss_quantity#185,ss_wholesale_cost#186,ss_list_price#187,ss_sales_price#188,ss_ext_discount_amt#189,ss_ext_sales_price#190,ss_ext_wholesale_cost#191,ss_ext_list_price#192,ss_ext_tax#193,ss_coupon_amt#194,ss_net_paid#195,ss_net_paid_inc_tax#196,ss_net_profit#197,ss_sold_date_sk#198] parquet\n            :     :     :           +- Project [d_date_sk#199]\n            :     :     :              +- Filter ((isnotnull(d_month_seq#202) AND ((d_month_seq#202 >= 1212) AND (d_month_seq#202 <= 1223))) AND isnotnull(d_date_sk#199))\n            :     :     :                 +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#199,d_date_id#200,d_date#201,d_month_seq#202,d_week_seq#203,d_quarter_seq#204,d_year#205,d_dow#206,d_moy#207,d_dom#208,d_qoy#209,d_fy_year#210,d_fy_quarter_seq#211,d_fy_week_seq#212,d_day_name#213,d_quarter_name#214,d_holiday#215,d_weekend#216,d_following_holiday#217,d_first_dom#218,d_last_dom#219,d_same_day_ly#220,d_same_day_lq#221,d_current_day#222,... 4 more fields] parquet\n            :     :     +- Filter isnotnull(ave#174)\n            :     :        +- Aggregate [ss_store_sk#60], [ss_store_sk#60, avg(revenue#173) AS ave#174]\n            :     :           +- Aggregate [ss_store_sk#60, ss_item_sk#55], [ss_store_sk#60, MakeDecimal(sum(UnscaledValue(ss_sales_price#66)),17,2) AS revenue#173]\n            :     :              +- Project [ss_item_sk#55, ss_store_sk#60, ss_sales_price#66]\n            :     :                 +- Join Inner, (ss_sold_date_sk#76 = d_date_sk#77)\n            :     :                    :- Project [ss_item_sk#55, ss_store_sk#60, ss_sales_price#66, ss_sold_date_sk#76]\n            :     :                    :  +- Filter ((isnotnull(ss_sold_date_sk#76) AND isnotnull(ss_store_sk#60)) AND dynamicpruning#239 [ss_sold_date_sk#76])\n            :     :                    :     :  +- Project [d_date_sk#77]\n            :     :                    :     :     +- Filter ((isnotnull(d_month_seq#80) AND ((d_month_seq#80 >= 1212) AND (d_month_seq#80 <= 1223))) AND isnotnull(d_date_sk#77))\n            :     :                    :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#77,d_date_id#78,d_date#79,d_month_seq#80,d_week_seq#81,d_quarter_seq#82,d_year#83,d_dow#84,d_moy#85,d_dom#86,d_qoy#87,d_fy_year#88,d_fy_quarter_seq#89,d_fy_week_seq#90,d_day_name#91,d_quarter_name#92,d_holiday#93,d_weekend#94,d_following_holiday#95,d_first_dom#96,d_last_dom#97,d_same_day_ly#98,d_same_day_lq#99,d_current_day#100,... 4 more fields] parquet\n            :     :                    :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#54,ss_item_sk#55,ss_customer_sk#56,ss_cdemo_sk#57,ss_hdemo_sk#58,ss_addr_sk#59,ss_store_sk#60,ss_promo_sk#61,ss_ticket_number#62L,ss_quantity#63,ss_wholesale_cost#64,ss_list_price#65,ss_sales_price#66,ss_ext_discount_amt#67,ss_ext_sales_price#68,ss_ext_wholesale_cost#69,ss_ext_list_price#70,ss_ext_tax#71,ss_coupon_amt#72,ss_net_paid#73,ss_net_paid_inc_tax#74,ss_net_profit#75,ss_sold_date_sk#76] parquet\n            :     :                    +- Project [d_date_sk#77]\n            :     :                       +- Filter ((isnotnull(d_month_seq#80) AND ((d_month_seq#80 >= 1212) AND (d_month_seq#80 <= 1223))) AND isnotnull(d_date_sk#77))\n            :     :                          +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#77,d_date_id#78,d_date#79,d_month_seq#80,d_week_seq#81,d_quarter_seq#82,d_year#83,d_dow#84,d_moy#85,d_dom#86,d_qoy#87,d_fy_year#88,d_fy_quarter_seq#89,d_fy_week_seq#90,d_day_name#91,d_quarter_name#92,d_holiday#93,d_weekend#94,d_following_holiday#95,d_first_dom#96,d_last_dom#97,d_same_day_ly#98,d_same_day_lq#99,d_current_day#100,... 4 more fields] parquet\n            :     +- Project [i_item_sk#32, i_item_desc#36, i_current_price#37, i_wholesale_cost#38, i_brand#40]\n            :        +- Filter isnotnull(i_item_sk#32)\n            :           +- Relation spark_catalog.tpcds_100.item[i_item_sk#32,i_item_id#33,i_rec_start_date#34,i_rec_end_date#35,i_item_desc#36,i_current_price#37,i_wholesale_cost#38,i_brand_id#39,i_brand#40,i_class_id#41,i_class#42,i_category_id#43,i_category#44,i_manufact_id#45,i_manufact#46,i_size#47,i_formulation#48,i_color#49,i_units#50,i_container#51,i_manager_id#52,i_product_name#53] parquet\n            +- Project [s_store_sk#3, s_store_name#8]\n               +- Filter isnotnull(s_store_sk#3)\n                  +- Relation spark_catalog.tpcds_100.store[s_store_sk#3,s_store_id#4,s_rec_start_date#5,s_rec_end_date#6,s_closed_date_sk#7,s_store_name#8,s_number_employees#9,s_floor_space#10,s_hours#11,s_manager#12,s_market_id#13,s_geography_class#14,s_market_desc#15,s_market_manager#16,s_division_id#17,s_division_name#18,s_company_id#19,s_company_name#20,s_street_number#21,s_street_name#22,s_street_type#23,s_suite_number#24,s_city#25,s_county#26,... 5 more fields] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "8" : {
            "sign" : -1786056458,
            "className" : "org.apache.spark.sql.execution.adaptive.ShuffleQueryStageExec",
            "sizeInBytes" : 35049104,
            "rowCount" : 204000,
            "isRuntime" : true,
            "predicate" : " (unknown) ShuffleQueryStage Output [5]: [i_item_sk#32, i_item_desc#36, i_current_price#37, i_wholesale_cost#38, i_brand#40] Arguments: 3 "
          },
          "4" : {
            "sign" : -2138635873,
            "className" : "org.apache.spark.sql.execution.joins.SortMergeJoinExec",
            "sizeInBytes" : 53429973306,
            "rowCount" : 287257921,
            "isRuntime" : false,
            "predicate" : " (unknown) SortMergeJoin Left keys [1]: [ss_item_sk#177] Right keys [1]: [i_item_sk#32] Join type: Inner Join condition: None "
          },
          "9" : {
            "sign" : -1500638403,
            "className" : "org.apache.spark.sql.execution.adaptive.BroadcastQueryStageExec",
            "sizeInBytes" : 1051792,
            "rowCount" : 402,
            "isRuntime" : true,
            "predicate" : " (unknown) BroadcastQueryStage Output [2]: [s_store_sk#3, s_store_name#8] Arguments: 4 "
          },
          "5" : {
            "sign" : -1470146111,
            "className" : "org.apache.spark.sql.execution.SortExec",
            "sizeInBytes" : -1,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Input [3]: [ss_store_sk#182, ss_item_sk#177, revenue#175] Arguments: [ss_item_sk#177 ASC NULLS FIRST], false, 0 "
          },
          "6" : {
            "sign" : 1565216794,
            "className" : "org.apache.spark.sql.execution.adaptive.ShuffleQueryStageExec",
            "sizeInBytes" : 40877376,
            "rowCount" : 1277418,
            "isRuntime" : true,
            "predicate" : " (unknown) ShuffleQueryStage Output [3]: [ss_store_sk#182, ss_item_sk#177, revenue#175] Arguments: 9 "
          },
          "1" : {
            "sign" : 2115515225,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 109792077410,
            "rowCount" : 577853039,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [6]: [s_store_name#8, i_item_desc#36, revenue#175, i_current_price#37, i_wholesale_cost#38, i_brand#40] Input [8]: [ss_store_sk#182, revenue#175, i_item_desc#36, i_current_price#37, i_wholesale_cost#38, i_brand#40, s_store_sk#3, s_store_name#8] "
          },
          "0" : {
            "sign" : -312681541,
            "className" : "org.apache.spark.sql.execution.TakeOrderedAndProjectExec",
            "sizeInBytes" : 9200,
            "rowCount" : 100,
            "isRuntime" : false,
            "predicate" : " (unknown) TakeOrderedAndProject Input [6]: [s_store_name#8, i_item_desc#36, revenue#175, i_current_price#37, i_wholesale_cost#38, i_brand#40] Arguments: 100, [s_store_name#8 ASC NULLS FIRST, i_item_desc#36 ASC NULLS FIRST], [s_store_name#8, i_item_desc#36, revenue#175, i_current_price#37, i_wholesale_cost#38, i_brand#40] "
          },
          "2" : {
            "sign" : 757966173,
            "className" : "org.apache.spark.sql.execution.joins.BroadcastHashJoinExec",
            "sizeInBytes" : 114414901722,
            "rowCount" : 577853039,
            "isRuntime" : false,
            "predicate" : " (unknown) BroadcastHashJoin Left keys [1]: [ss_store_sk#182] Right keys [1]: [s_store_sk#3] Join type: Inner Join condition: None "
          },
          "7" : {
            "sign" : -1813501334,
            "className" : "org.apache.spark.sql.execution.SortExec",
            "sizeInBytes" : -1,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Input [5]: [i_item_sk#32, i_item_desc#36, i_current_price#37, i_wholesale_cost#38, i_brand#40] Arguments: [i_item_sk#32 ASC NULLS FIRST], false, 0 "
          },
          "3" : {
            "sign" : 235627370,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 51131909938,
            "rowCount" : 287257921,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [6]: [ss_store_sk#182, revenue#175, i_item_desc#36, i_current_price#37, i_wholesale_cost#38, i_brand#40] Input [8]: [ss_store_sk#182, ss_item_sk#177, revenue#175, i_item_sk#32, i_item_desc#36, i_current_price#37, i_wholesale_cost#38, i_brand#40] "
          }
        },
        "links" : [ {
          "fromId" : 6,
          "fromName" : "ShuffleQueryStage",
          "toId" : 5,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Sort",
          "toId" : 4,
          "toName" : "SortMergeJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "ShuffleQueryStage",
          "toId" : 7,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Sort",
          "toId" : 4,
          "toName" : "SortMergeJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "SortMergeJoin",
          "toId" : 3,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Project",
          "toId" : 2,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "BroadcastQueryStage",
          "toId" : 2,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "BroadcastHashJoin",
          "toId" : 1,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Project",
          "toId" : 0,
          "toName" : "TakeOrderedAndProject",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "TakeOrderedAndProject(limit=100, orderBy=[s_store_name#8 ASC NULLS FIRST,i_item_desc#36 ASC NULLS FIRST], output=[s_store_name#8,i_item_desc#36,revenue#175,i_current_price#37,i_wholesale_cost#38,i_brand#40])\n+- Project [s_store_name#8, i_item_desc#36, revenue#175, i_current_price#37, i_wholesale_cost#38, i_brand#40]\n   +- BroadcastHashJoin [ss_store_sk#182], [s_store_sk#3], Inner, BuildRight, false\n      :- Project [ss_store_sk#182, revenue#175, i_item_desc#36, i_current_price#37, i_wholesale_cost#38, i_brand#40]\n      :  +- SortMergeJoin [ss_item_sk#177], [i_item_sk#32], Inner\n      :     :- Sort [ss_item_sk#177 ASC NULLS FIRST], false, 0\n      :     :  +- ShuffleQueryStage 9\n      :     :     +- Exchange hashpartitioning(ss_item_sk#177, 200), ENSURE_REQUIREMENTS, [plan_id=1208]\n      :     :        +- *(9) Project [ss_store_sk#182, ss_item_sk#177, revenue#175]\n      :     :           +- *(9) BroadcastHashJoin [ss_store_sk#182], [ss_store_sk#60], Inner, BuildRight, (cast(revenue#175 as decimal(23,7)) <= (0.1 * ave#174)), false\n      :     :              :- *(9) Filter isnotnull(revenue#175)\n      :     :              :  +- *(9) HashAggregate(keys=[ss_store_sk#182, ss_item_sk#177], functions=[sum(UnscaledValue(ss_sales_price#188))], output=[ss_store_sk#182, ss_item_sk#177, revenue#175])\n      :     :              :     +- AQEShuffleRead coalesced\n      :     :              :        +- ShuffleQueryStage 5\n      :     :              :           +- Exchange hashpartitioning(ss_store_sk#182, ss_item_sk#177, 200), ENSURE_REQUIREMENTS, [plan_id=736]\n      :     :              :              +- *(5) HashAggregate(keys=[ss_store_sk#182, ss_item_sk#177], functions=[partial_sum(UnscaledValue(ss_sales_price#188))], output=[ss_store_sk#182, ss_item_sk#177, sum#241L])\n      :     :              :                 +- *(5) Project [ss_item_sk#177, ss_store_sk#182, ss_sales_price#188]\n      :     :              :                    +- *(5) BroadcastHashJoin [ss_sold_date_sk#198], [d_date_sk#199], Inner, BuildRight, false\n      :     :              :                       :- *(5) Filter (isnotnull(ss_store_sk#182) AND isnotnull(ss_item_sk#177))\n      :     :              :                       :  +- *(5) ColumnarToRow\n      :     :              :                       :     +- FileScan parquet spark_catalog.tpcds_100.store_sales[ss_item_sk#177,ss_store_sk#182,ss_sales_price#188,ss_sold_date_sk#198] Batched: true, DataFilters: [isnotnull(ss_store_sk#182), isnotnull(ss_item_sk#177)], Format: Parquet, Location: InMemoryFileIndex(1823 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/store_..., PartitionFilters: [isnotnull(ss_sold_date_sk#198), dynamicpruningexpression(ss_sold_date_sk#198 IN dynamicpruning#2..., PushedFilters: [IsNotNull(ss_store_sk), IsNotNull(ss_item_sk)], ReadSchema: struct<ss_item_sk:int,ss_store_sk:int,ss_sales_price:decimal(7,2)>\n      :     :              :                       :           +- SubqueryBroadcast dynamicpruning#238, 0, [d_date_sk#199], [id=#705]\n      :     :              :                       :              +- AdaptiveSparkPlan isFinalPlan=true\n                                                                     +- == Final Plan ==\n                                                                        BroadcastQueryStage 1\n                                                                        +- ReusedExchange [d_date_sk#199], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=292]\n                                                                     +- == Initial Plan ==\n                                                                        BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=702]\n                                                                        +- Project [d_date_sk#199]\n                                                                           +- Filter (((isnotnull(d_month_seq#202) AND (d_month_seq#202 >= 1212)) AND (d_month_seq#202 <= 1223)) AND isnotnull(d_date_sk#199))\n                                                                              +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#199,d_month_seq#202] Batched: true, DataFilters: [isnotnull(d_month_seq#202), (d_month_seq#202 >= 1212), (d_month_seq#202 <= 1223), isnotnull(d_da..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_month_seq), GreaterThanOrEqual(d_month_seq,1212), LessThanOrEqual(d_month_seq,1223),..., ReadSchema: struct<d_date_sk:int,d_month_seq:int>\n      :     :              :                       +- BroadcastQueryStage 0\n      :     :              :                          +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=292]\n      :     :              :                             +- *(1) Project [d_date_sk#199]\n      :     :              :                                +- *(1) Filter (((isnotnull(d_month_seq#202) AND (d_month_seq#202 >= 1212)) AND (d_month_seq#202 <= 1223)) AND isnotnull(d_date_sk#199))\n      :     :              :                                   +- *(1) ColumnarToRow\n      :     :              :                                      +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#199,d_month_seq#202] Batched: true, DataFilters: [isnotnull(d_month_seq#202), (d_month_seq#202 >= 1212), (d_month_seq#202 <= 1223), isnotnull(d_da..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_month_seq), GreaterThanOrEqual(d_month_seq,1212), LessThanOrEqual(d_month_seq,1223),..., ReadSchema: struct<d_date_sk:int,d_month_seq:int>\n      :     :              +- BroadcastQueryStage 8\n      :     :                 +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=1131]\n      :     :                    +- *(8) Filter isnotnull(ave#174)\n      :     :                       +- *(8) HashAggregate(keys=[ss_store_sk#60], functions=[avg(revenue#173)], output=[ss_store_sk#60, ave#174])\n      :     :                          +- AQEShuffleRead coalesced\n      :     :                             +- ShuffleQueryStage 7\n      :     :                                +- Exchange hashpartitioning(ss_store_sk#60, 200), ENSURE_REQUIREMENTS, [plan_id=1043]\n      :     :                                   +- *(7) HashAggregate(keys=[ss_store_sk#60], functions=[partial_avg(revenue#173)], output=[ss_store_sk#60, sum#244, count#245L])\n      :     :                                      +- *(7) HashAggregate(keys=[ss_store_sk#60, ss_item_sk#55], functions=[sum(UnscaledValue(ss_sales_price#66))], output=[ss_store_sk#60, revenue#173])\n      :     :                                         +- AQEShuffleRead coalesced\n      :     :                                            +- ShuffleQueryStage 6\n      :     :                                               +- Exchange hashpartitioning(ss_store_sk#60, ss_item_sk#55, 200), ENSURE_REQUIREMENTS, [plan_id=794]\n      :     :                                                  +- *(6) HashAggregate(keys=[ss_store_sk#60, ss_item_sk#55], functions=[partial_sum(UnscaledValue(ss_sales_price#66))], output=[ss_store_sk#60, ss_item_sk#55, sum#247L])\n      :     :                                                     +- *(6) Project [ss_item_sk#55, ss_store_sk#60, ss_sales_price#66]\n      :     :                                                        +- *(6) BroadcastHashJoin [ss_sold_date_sk#76], [d_date_sk#77], Inner, BuildRight, false\n      :     :                                                           :- *(6) Filter isnotnull(ss_store_sk#60)\n      :     :                                                           :  +- *(6) ColumnarToRow\n      :     :                                                           :     +- FileScan parquet spark_catalog.tpcds_100.store_sales[ss_item_sk#55,ss_store_sk#60,ss_sales_price#66,ss_sold_date_sk#76] Batched: true, DataFilters: [isnotnull(ss_store_sk#60)], Format: Parquet, Location: InMemoryFileIndex(1823 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/store_..., PartitionFilters: [isnotnull(ss_sold_date_sk#76), dynamicpruningexpression(ss_sold_date_sk#76 IN dynamicpruning#238)], PushedFilters: [IsNotNull(ss_store_sk)], ReadSchema: struct<ss_item_sk:int,ss_store_sk:int,ss_sales_price:decimal(7,2)>\n      :     :                                                           :           +- ReusedSubquery SubqueryBroadcast dynamicpruning#238, 0, [d_date_sk#199], [id=#705]\n      :     :                                                           +- BroadcastQueryStage 2\n      :     :                                                              +- ReusedExchange [d_date_sk#77], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=292]\n      :     +- Sort [i_item_sk#32 ASC NULLS FIRST], false, 0\n      :        +- ShuffleQueryStage 3\n      :           +- Exchange hashpartitioning(i_item_sk#32, 200), ENSURE_REQUIREMENTS, [plan_id=355]\n      :              +- *(3) Filter isnotnull(i_item_sk#32)\n      :                 +- *(3) ColumnarToRow\n      :                    +- FileScan parquet spark_catalog.tpcds_100.item[i_item_sk#32,i_item_desc#36,i_current_price#37,i_wholesale_cost#38,i_brand#40] Batched: true, DataFilters: [isnotnull(i_item_sk#32)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/item], PartitionFilters: [], PushedFilters: [IsNotNull(i_item_sk)], ReadSchema: struct<i_item_sk:int,i_item_desc:string,i_current_price:decimal(7,2),i_wholesale_cost:decimal(7,2...\n      +- BroadcastQueryStage 4\n         +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=378]\n            +- *(4) Filter isnotnull(s_store_sk#3)\n               +- *(4) ColumnarToRow\n                  +- FileScan parquet spark_catalog.tpcds_100.store[s_store_sk#3,s_store_name#8] Batched: true, DataFilters: [isnotnull(s_store_sk#3)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/store], PartitionFilters: [], PushedFilters: [IsNotNull(s_store_sk)], ReadSchema: struct<s_store_sk:int,s_store_name:string>\n"
      },
      "IM" : {
        "inputSizeInBytes" : 76978272,
        "inputRowCount" : 1481820
      },
      "InitialPartitionNum" : 1,
      "PD" : {
        "4" : [ 98404, 93736, 92958, 97704, 100544, 89988, 103833, 89281, 91279, 106536, 97626, 88451, 104611, 92764, 99844, 99844, 99631, 101265, 107179, 107886, 100487, 101265, 97510, 92764, 98210, 98853, 95876, 100487, 102043, 93542, 110688, 98853, 102256, 93542, 100409, 100700, 92984, 89988, 88574, 105467, 96848, 98210, 93542, 101265, 98988, 98404, 100409, 93684, 95434, 102043, 103755, 105467, 94320, 100622, 98404, 100409, 104611, 103112, 95741, 100409, 95876, 92835, 97510, 105467, 100622, 96654, 103755, 98210, 100622, 97432, 98931, 94320, 102121, 98404, 95876, 97297, 96654, 97432, 99066, 94391, 95876, 91473, 102412, 94398, 99709, 96654, 94320, 104611, 102256, 96654, 102977, 92835, 98075, 90871, 99709, 96070, 95947, 96654, 103755, 95169, 97626, 100544, 101187, 105680, 96070, 98988, 100700, 101478, 96654, 98988, 101265, 99766, 92764, 105680, 89988, 98988, 98988, 94320, 94320, 98075, 100487, 95098, 107030, 96654, 96654, 101265, 101265, 88645, 97432, 94320, 97432, 98210, 100622, 98210, 99766, 100409, 99631, 98210, 96725, 95098, 99709, 98988, 104824, 98988, 99766, 98988, 95098, 96654, 104824, 98988, 96654, 92906, 98075, 96654, 102043, 110624, 102043, 102899, 95876, 95292, 92958, 101478, 96848, 98075, 103833, 99631, 99066, 91473, 101400, 98988, 89281, 100700, 101265, 95247, 102199, 93542, 88574, 93736, 95876, 95947, 94320, 101187, 94320, 95947, 110688, 106323, 94320, 99631, 98210, 95947, 96654, 97432, 102899, 95098, 94054, 92764, 98853, 98931, 102977, 100622 ],
        "0" : [ 112177, 112177, 112177, 112177, 123395, 112177, 123395, 112177, 101979, 112177, 123395, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 123395, 123395, 123395, 123395, 112177, 112177, 123395, 112177, 112177, 112177, 112177, 112177, 123395, 112177, 123395, 112177, 112177, 123395, 112177, 112177, 112177, 123395, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 123395, 123395, 112177, 112177, 112177, 123395, 123395, 112177, 112177, 112177, 112177, 123395, 112177, 123395, 112177, 112177, 123395, 112177, 123395, 123395, 123395, 112177, 112177, 123395, 112177, 112177, 112177, 123395, 112177, 112177, 112177, 112177, 123395, 112177, 123395, 112177, 112177, 123395, 123395, 112177, 112177, 112177, 112177, 112177, 123395, 123395, 112177, 112177, 123395, 112177, 112177, 123395, 112177, 123395, 112177, 112177, 112177, 123395, 112177, 112177, 112177, 112177, 112177, 123395, 112177, 112177, 101979, 112177, 112177, 112177, 112177, 112177, 123395, 112177, 123395, 123395, 112177, 112177, 123395, 112177, 112177, 112177, 112177, 123395, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 123395, 123395, 123395, 112177, 112177, 112177, 123395, 112177, 112177, 112177, 123395, 112177, 112177, 123395, 112177, 112177, 112177, 112177, 112177, 123395, 123395, 123395, 112177, 112177, 112177, 112177, 123395, 112177, 112177, 123395, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 123395, 123395, 112177, 112177, 112177, 112177, 123395, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 123395, 123395 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 8,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 16 ],
      "Objectives" : {
        "DurationInMs" : 1378,
        "TotalTasksDurationInMs" : 1369,
        "IOBytes" : {
          "Total" : 40760861,
          "Details" : {
            "IR" : 0,
            "IW" : 0,
            "SR" : 40760861,
            "SW" : 0
          }
        }
      }
    },
    "4" : {
      "QSLogical" : {
        "operators" : {
          "4" : {
            "sign" : -331194714,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 39926379296,
                "rowCount" : 262673548
              },
              "compileTime" : {
                "sizeInBytes" : 39926379296,
                "rowCount" : 262673548
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(ss_sold_date_sk#76) AND isnotnull(ss_store_sk#60)) AND dynamicpruning#239 [ss_sold_date_sk#76]) "
          },
          "5" : {
            "sign" : -996268790,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 41806893656,
                "rowCount" : 275045353
              },
              "compileTime" : {
                "sizeInBytes" : 41806893656,
                "rowCount" : 275045353
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#54, ss_item_sk#55, ss_customer_sk#56, ss_cdemo_sk#57, ss_hdemo_sk#58, ss_addr_sk#59, ss_store_sk#60, ss_promo_sk#61, ss_ticket_number#62L, ss_quantity#63, ss_wholesale_cost#64, ss_list_price#65, ss_sales_price#66, ss_ext_discount_amt#67, ss_ext_sales_price#68, ss_ext_wholesale_cost#69, ss_ext_list_price#70, ss_ext_tax#71, ss_coupon_amt#72, ss_net_paid#73, ss_net_paid_inc_tax#74, ss_net_profit#75, ss_sold_date_sk#76], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "1" : {
            "sign" : 1368124653,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 6372974040,
                "rowCount" : 265540585
              },
              "compileTime" : {
                "sizeInBytes" : 6372974040,
                "rowCount" : 265540585
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#55, ss_store_sk#60, ss_sales_price#66] "
          },
          "0" : {
            "sign" : 1615066763,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 690341880,
                "rowCount" : 34517094
              },
              "compileTime" : {
                "sizeInBytes" : 690341880,
                "rowCount" : 34517094
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [ss_store_sk#60, ss_item_sk#55], [ss_store_sk#60, MakeDecimal(sum(UnscaledValue(ss_sales_price#66)),17,2) AS revenue#173] "
          },
          "2" : {
            "sign" : -145755894,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 8497298720,
                "rowCount" : 265540585
              },
              "compileTime" : {
                "sizeInBytes" : 8497298720,
                "rowCount" : 265540585
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#76 = d_date_sk#77) "
          },
          "3" : {
            "sign" : -1048765540,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 7354859344,
                "rowCount" : 262673548
              },
              "compileTime" : {
                "sizeInBytes" : 7354859344,
                "rowCount" : 262673548
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#55, ss_store_sk#60, ss_sales_price#66, ss_sold_date_sk#76] "
          }
        },
        "links" : [ {
          "fromId" : 5,
          "fromName" : "LogicalRelation",
          "toId" : 4,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Filter",
          "toId" : 3,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Project",
          "toId" : 2,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Join",
          "toId" : 1,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Project",
          "toId" : 0,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Aggregate [ss_store_sk#60, ss_item_sk#55], [ss_store_sk#60, MakeDecimal(sum(UnscaledValue(ss_sales_price#66)),17,2) AS revenue#173]\n+- Project [ss_item_sk#55, ss_store_sk#60, ss_sales_price#66]\n   +- Join Inner, (ss_sold_date_sk#76 = d_date_sk#77)\n      :- Project [ss_item_sk#55, ss_store_sk#60, ss_sales_price#66, ss_sold_date_sk#76]\n      :  +- Filter ((isnotnull(ss_sold_date_sk#76) AND isnotnull(ss_store_sk#60)) AND dynamicpruning#239 [ss_sold_date_sk#76])\n      :     :  +- Project [d_date_sk#77]\n      :     :     +- Filter ((isnotnull(d_month_seq#80) AND ((d_month_seq#80 >= 1212) AND (d_month_seq#80 <= 1223))) AND isnotnull(d_date_sk#77))\n      :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#77,d_date_id#78,d_date#79,d_month_seq#80,d_week_seq#81,d_quarter_seq#82,d_year#83,d_dow#84,d_moy#85,d_dom#86,d_qoy#87,d_fy_year#88,d_fy_quarter_seq#89,d_fy_week_seq#90,d_day_name#91,d_quarter_name#92,d_holiday#93,d_weekend#94,d_following_holiday#95,d_first_dom#96,d_last_dom#97,d_same_day_ly#98,d_same_day_lq#99,d_current_day#100,... 4 more fields] parquet\n      :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#54,ss_item_sk#55,ss_customer_sk#56,ss_cdemo_sk#57,ss_hdemo_sk#58,ss_addr_sk#59,ss_store_sk#60,ss_promo_sk#61,ss_ticket_number#62L,ss_quantity#63,ss_wholesale_cost#64,ss_list_price#65,ss_sales_price#66,ss_ext_discount_amt#67,ss_ext_sales_price#68,ss_ext_wholesale_cost#69,ss_ext_list_price#70,ss_ext_tax#71,ss_coupon_amt#72,ss_net_paid#73,ss_net_paid_inc_tax#74,ss_net_profit#75,ss_sold_date_sk#76] parquet\n      +- Project [d_date_sk#77]\n         +- Filter ((isnotnull(d_month_seq#80) AND ((d_month_seq#80 >= 1212) AND (d_month_seq#80 <= 1223))) AND isnotnull(d_date_sk#77))\n            +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#77,d_date_id#78,d_date#79,d_month_seq#80,d_week_seq#81,d_quarter_seq#82,d_year#83,d_dow#84,d_moy#85,d_dom#86,d_qoy#87,d_fy_year#88,d_fy_quarter_seq#89,d_fy_week_seq#90,d_day_name#91,d_quarter_name#92,d_holiday#93,d_weekend#94,d_following_holiday#95,d_first_dom#96,d_last_dom#97,d_same_day_ly#98,d_same_day_lq#99,d_current_day#100,... 4 more fields] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "4" : {
            "sign" : -120720174,
            "className" : "org.apache.spark.sql.execution.FileSourceScanExec",
            "sizeInBytes" : 7354859344,
            "rowCount" : 262673548,
            "isRuntime" : false,
            "predicate" : " (unknown) Scan parquet spark_catalog.tpcds_100.store_sales Output [4]: [ss_item_sk#55, ss_store_sk#60, ss_sales_price#66, ss_sold_date_sk#76] Batched: true Location: InMemoryFileIndex [hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/store_sales/ss_sold_date_sk=2450816, ... 1822 entries] PartitionFilters: [isnotnull(ss_sold_date_sk#76), dynamicpruningexpression(ss_sold_date_sk#76 IN dynamicpruning#238)] PushedFilters: [IsNotNull(ss_store_sk)] ReadSchema: struct<ss_item_sk:int,ss_store_sk:int,ss_sales_price:decimal(7,2)> "
          },
          "5" : {
            "sign" : 219152948,
            "className" : "org.apache.spark.sql.execution.adaptive.BroadcastQueryStageExec",
            "sizeInBytes" : 1051496,
            "rowCount" : 365,
            "isRuntime" : true,
            "predicate" : " (unknown) BroadcastQueryStage Output [1]: [d_date_sk#77] Arguments: 2 "
          },
          "1" : {
            "sign" : 848943691,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 6372974040,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [3]: [ss_item_sk#55, ss_store_sk#60, ss_sales_price#66] Input [5]: [ss_item_sk#55, ss_store_sk#60, ss_sales_price#66, ss_sold_date_sk#76, d_date_sk#77] "
          },
          "0" : {
            "sign" : 2016316664,
            "className" : "org.apache.spark.sql.execution.aggregate.HashAggregateExec",
            "sizeInBytes" : 690341880,
            "rowCount" : 34517094,
            "isRuntime" : false,
            "predicate" : " (unknown) HashAggregate Input [3]: [ss_item_sk#55, ss_store_sk#60, ss_sales_price#66] Keys [2]: [ss_store_sk#60, ss_item_sk#55] Functions [1]: [partial_sum(UnscaledValue(ss_sales_price#66))] Aggregate Attributes [1]: [sum#246L] Results [3]: [ss_store_sk#60, ss_item_sk#55, sum#247L] "
          },
          "2" : {
            "sign" : 1781559482,
            "className" : "org.apache.spark.sql.execution.joins.BroadcastHashJoinExec",
            "sizeInBytes" : 8497298720,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) BroadcastHashJoin Left keys [1]: [ss_sold_date_sk#76] Right keys [1]: [d_date_sk#77] Join type: Inner Join condition: None "
          },
          "3" : {
            "sign" : -1768967923,
            "className" : "org.apache.spark.sql.execution.FilterExec",
            "sizeInBytes" : 7354859344,
            "rowCount" : 262673548,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Input [4]: [ss_item_sk#55, ss_store_sk#60, ss_sales_price#66, ss_sold_date_sk#76] Condition : isnotnull(ss_store_sk#60) "
          }
        },
        "links" : [ {
          "fromId" : 4,
          "fromName" : "Scan parquet spark_catalog.tpcds_100.store_sales",
          "toId" : 3,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Filter",
          "toId" : 2,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "BroadcastQueryStage",
          "toId" : 2,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "BroadcastHashJoin",
          "toId" : 1,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Project",
          "toId" : 0,
          "toName" : "HashAggregate",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "HashAggregate(keys=[ss_store_sk#60, ss_item_sk#55], functions=[partial_sum(UnscaledValue(ss_sales_price#66))], output=[ss_store_sk#60, ss_item_sk#55, sum#247L])\n+- Project [ss_item_sk#55, ss_store_sk#60, ss_sales_price#66]\n   +- BroadcastHashJoin [ss_sold_date_sk#76], [d_date_sk#77], Inner, BuildRight, false\n      :- Filter isnotnull(ss_store_sk#60)\n      :  +- FileScan parquet spark_catalog.tpcds_100.store_sales[ss_item_sk#55,ss_store_sk#60,ss_sales_price#66,ss_sold_date_sk#76] Batched: true, DataFilters: [isnotnull(ss_store_sk#60)], Format: Parquet, Location: InMemoryFileIndex(1823 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/store_..., PartitionFilters: [isnotnull(ss_sold_date_sk#76), dynamicpruningexpression(ss_sold_date_sk#76 IN dynamicpruning#238)], PushedFilters: [IsNotNull(ss_store_sk)], ReadSchema: struct<ss_item_sk:int,ss_store_sk:int,ss_sales_price:decimal(7,2)>\n      :        +- ReusedSubquery SubqueryBroadcast dynamicpruning#238, 0, [d_date_sk#199], [id=#705]\n      +- BroadcastQueryStage 2\n         +- ReusedExchange [d_date_sk#77], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=292]\n"
      },
      "IM" : {
        "inputSizeInBytes" : 7355910840,
        "inputRowCount" : 262673913
      },
      "InitialPartitionNum" : 0,
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 1,
        "FinishedTasksNum" : 4,
        "FinishedTasksTotalTimeInMs" : 6159.0,
        "FinishedTasksDistributionInMs" : [ 1253.0, 1310.0, 1785.0, 1811.0, 1811.0 ]
      },
      "QueryStageOptimizationId" : 4,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 5 ],
      "Objectives" : {
        "DurationInMs" : 23404,
        "TotalTasksDurationInMs" : 48015,
        "IOBytes" : {
          "Total" : 1105100767,
          "Details" : {
            "IR" : 355545816,
            "IW" : 0,
            "SR" : 0,
            "SW" : 749554951
          }
        }
      }
    },
    "5" : {
      "QSLogical" : {
        "operators" : {
          "0" : {
            "sign" : 530843176,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 5124,
                "rowCount" : 183
              },
              "compileTime" : {
                "sizeInBytes" : 5124,
                "rowCount" : 183
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [ss_store_sk#60], [ss_store_sk#60, avg(revenue#173) AS ave#174] "
          }
        },
        "links" : [ ],
        "rawPlan" : "Aggregate [ss_store_sk#60], [ss_store_sk#60, avg(revenue#173) AS ave#174]\n+- Aggregate [ss_store_sk#60, ss_item_sk#55], [ss_store_sk#60, MakeDecimal(sum(UnscaledValue(ss_sales_price#66)),17,2) AS revenue#173]\n   +- Project [ss_item_sk#55, ss_store_sk#60, ss_sales_price#66]\n      +- Join Inner, (ss_sold_date_sk#76 = d_date_sk#77)\n         :- Project [ss_item_sk#55, ss_store_sk#60, ss_sales_price#66, ss_sold_date_sk#76]\n         :  +- Filter ((isnotnull(ss_sold_date_sk#76) AND isnotnull(ss_store_sk#60)) AND dynamicpruning#239 [ss_sold_date_sk#76])\n         :     :  +- Project [d_date_sk#77]\n         :     :     +- Filter ((isnotnull(d_month_seq#80) AND ((d_month_seq#80 >= 1212) AND (d_month_seq#80 <= 1223))) AND isnotnull(d_date_sk#77))\n         :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#77,d_date_id#78,d_date#79,d_month_seq#80,d_week_seq#81,d_quarter_seq#82,d_year#83,d_dow#84,d_moy#85,d_dom#86,d_qoy#87,d_fy_year#88,d_fy_quarter_seq#89,d_fy_week_seq#90,d_day_name#91,d_quarter_name#92,d_holiday#93,d_weekend#94,d_following_holiday#95,d_first_dom#96,d_last_dom#97,d_same_day_ly#98,d_same_day_lq#99,d_current_day#100,... 4 more fields] parquet\n         :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#54,ss_item_sk#55,ss_customer_sk#56,ss_cdemo_sk#57,ss_hdemo_sk#58,ss_addr_sk#59,ss_store_sk#60,ss_promo_sk#61,ss_ticket_number#62L,ss_quantity#63,ss_wholesale_cost#64,ss_list_price#65,ss_sales_price#66,ss_ext_discount_amt#67,ss_ext_sales_price#68,ss_ext_wholesale_cost#69,ss_ext_list_price#70,ss_ext_tax#71,ss_coupon_amt#72,ss_net_paid#73,ss_net_paid_inc_tax#74,ss_net_profit#75,ss_sold_date_sk#76] parquet\n         +- Project [d_date_sk#77]\n            +- Filter ((isnotnull(d_month_seq#80) AND ((d_month_seq#80 >= 1212) AND (d_month_seq#80 <= 1223))) AND isnotnull(d_date_sk#77))\n               +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#77,d_date_id#78,d_date#79,d_month_seq#80,d_week_seq#81,d_quarter_seq#82,d_year#83,d_dow#84,d_moy#85,d_dom#86,d_qoy#87,d_fy_year#88,d_fy_quarter_seq#89,d_fy_week_seq#90,d_day_name#91,d_quarter_name#92,d_holiday#93,d_weekend#94,d_following_holiday#95,d_first_dom#96,d_last_dom#97,d_same_day_ly#98,d_same_day_lq#99,d_current_day#100,... 4 more fields] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "0" : {
            "sign" : 2103797156,
            "className" : "org.apache.spark.sql.execution.aggregate.HashAggregateExec",
            "sizeInBytes" : 5124,
            "rowCount" : 183,
            "isRuntime" : false,
            "predicate" : " (unknown) HashAggregate Input [2]: [ss_store_sk#60, revenue#173] Keys [1]: [ss_store_sk#60] Functions [1]: [partial_avg(revenue#173)] Aggregate Attributes [2]: [sum#242, count#243L] Results [3]: [ss_store_sk#60, sum#244, count#245L] "
          },
          "1" : {
            "sign" : 449914065,
            "className" : "org.apache.spark.sql.execution.aggregate.HashAggregateExec",
            "sizeInBytes" : 1638031232,
            "rowCount" : 51188476,
            "isRuntime" : true,
            "predicate" : " (unknown) HashAggregate Input [3]: [ss_store_sk#60, ss_item_sk#55, sum#247L] Keys [2]: [ss_store_sk#60, ss_item_sk#55] Functions [1]: [sum(UnscaledValue(ss_sales_price#66))] Aggregate Attributes [1]: [sum(UnscaledValue(ss_sales_price#66))#227L] Results [2]: [ss_store_sk#60, MakeDecimal(sum(UnscaledValue(ss_sales_price#66))#227L,17,2) AS revenue#173] "
          },
          "2" : {
            "sign" : -1699991931,
            "className" : "org.apache.spark.sql.execution.adaptive.ShuffleQueryStageExec",
            "sizeInBytes" : 690341880,
            "rowCount" : 34517094,
            "isRuntime" : false,
            "predicate" : " (unknown) ShuffleQueryStage Output [3]: [ss_store_sk#60, ss_item_sk#55, sum#247L] Arguments: 6 "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "ShuffleQueryStage",
          "toId" : 1,
          "toName" : "HashAggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "HashAggregate",
          "toId" : 0,
          "toName" : "HashAggregate",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "HashAggregate(keys=[ss_store_sk#60], functions=[partial_avg(revenue#173)], output=[ss_store_sk#60, sum#244, count#245L])\n+- HashAggregate(keys=[ss_store_sk#60, ss_item_sk#55], functions=[sum(UnscaledValue(ss_sales_price#66))], output=[ss_store_sk#60, revenue#173])\n   +- ShuffleQueryStage 6\n      +- Exchange hashpartitioning(ss_store_sk#60, ss_item_sk#55, 200), ENSURE_REQUIREMENTS, [plan_id=794]\n         +- *(6) HashAggregate(keys=[ss_store_sk#60, ss_item_sk#55], functions=[partial_sum(UnscaledValue(ss_sales_price#66))], output=[ss_store_sk#60, ss_item_sk#55, sum#247L])\n            +- *(6) Project [ss_item_sk#55, ss_store_sk#60, ss_sales_price#66]\n               +- *(6) BroadcastHashJoin [ss_sold_date_sk#76], [d_date_sk#77], Inner, BuildRight, false\n                  :- *(6) Filter isnotnull(ss_store_sk#60)\n                  :  +- *(6) ColumnarToRow\n                  :     +- FileScan parquet spark_catalog.tpcds_100.store_sales[ss_item_sk#55,ss_store_sk#60,ss_sales_price#66,ss_sold_date_sk#76] Batched: true, DataFilters: [isnotnull(ss_store_sk#60)], Format: Parquet, Location: InMemoryFileIndex(1823 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/store_..., PartitionFilters: [isnotnull(ss_sold_date_sk#76), dynamicpruningexpression(ss_sold_date_sk#76 IN dynamicpruning#238)], PushedFilters: [IsNotNull(ss_store_sk)], ReadSchema: struct<ss_item_sk:int,ss_store_sk:int,ss_sales_price:decimal(7,2)>\n                  :           +- ReusedSubquery SubqueryBroadcast dynamicpruning#238, 0, [d_date_sk#199], [id=#705]\n                  +- BroadcastQueryStage 2\n                     +- ReusedExchange [d_date_sk#77], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=292]\n"
      },
      "IM" : {
        "inputSizeInBytes" : 1638031232,
        "inputRowCount" : 51188476
      },
      "InitialPartitionNum" : 200,
      "PD" : {
        "2" : [ 3936601, 3937834, 3936601, 3936601, 3950174, 3926096, 3900185, 3909455, 3903253, 3939669, 3938436, 3936601, 3952009, 3898950, 3865002, 3952009, 3924261, 3963747, 3952009, 3926096, 3888447, 3937834, 3910688, 3910688, 3945207, 3938436, 3953242, 3979155, 3900185, 3910688, 3897717, 3936601, 3992728, 3926096, 3897115, 3938436, 3952009, 3950174, 3938436, 3977320, 3936601, 3907556, 3923028, 3912523, 3923028, 3914991, 3926096, 3923028, 3900185, 3938436, 3929166, 3966815, 3930399, 3930399, 3963747, 3897115, 3924261, 3897115, 3914991, 3977320, 3937834, 3952009, 3939669, 3924863, 3926096, 3952009, 3952009, 3979155, 3939669, 3977320, 3909455, 3926096, 3912523, 3936601, 3954477, 3889680, 3942739, 3924261, 3927331, 3909455, 3951407, 3915593, 3926096, 3936601, 3897115, 3952009, 3924863, 3980388, 3952009, 3952009, 3924261, 3952009, 3953242, 3952009, 3936601, 3965582, 3898950, 3912523, 3906323, 3924863, 3937834, 3926096, 3897115, 3900185, 3909455, 3963747, 3938436, 3963747, 3924863, 3924261, 3912523, 3950174, 3912523, 3926096, 3924261, 3911290, 3923028, 3938436, 3901418, 3940904, 3939669, 3951407, 3912523, 3950174, 3910688, 3953242, 3936601, 3953242, 3938436, 3927331, 3936601, 3889680, 3924863, 3937834, 3898950, 3965582, 3924863, 3943972, 3965582, 3926096, 3936601, 3928564, 3910688, 3916826, 3926096, 3952009, 3952009, 3924261, 3911290, 3963747, 3952937, 3965582, 3897717, 3905721, 3992728, 3889680, 3936601, 3909455, 3924863, 3912523, 3907556, 3923028, 3918061, 3952009, 3963747, 3909455, 3929166, 3923028, 3924863, 3937834, 3926096, 3942739, 3915593, 3938436, 3950174, 3910688, 3952009, 3938436, 3939669, 3923028, 3938436, 3953242, 3977320, 3953242, 3923028, 3898950, 3924863, 3953242, 3912523, 3938436, 3911290, 3938436, 3929166, 3910688, 3936601, 3936601, 3877342, 3887845, 3965582, 3897717 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 5,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 7 ],
      "Objectives" : {
        "DurationInMs" : 3152,
        "TotalTasksDurationInMs" : 33621,
        "IOBytes" : {
          "Total" : 749697707,
          "Details" : {
            "IR" : 0,
            "IW" : 0,
            "SR" : 749554951,
            "SW" : 142756
          }
        }
      }
    },
    "6" : {
      "QSLogical" : {
        "operators" : {
          "0" : {
            "sign" : 75249188,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 5124,
                "rowCount" : 183
              },
              "compileTime" : {
                "sizeInBytes" : 5124,
                "rowCount" : 183
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: isnotnull(ave#174) "
          }
        },
        "links" : [ ],
        "rawPlan" : "Filter isnotnull(ave#174)\n+- Aggregate [ss_store_sk#60], [ss_store_sk#60, avg(revenue#173) AS ave#174]\n   +- Aggregate [ss_store_sk#60, ss_item_sk#55], [ss_store_sk#60, MakeDecimal(sum(UnscaledValue(ss_sales_price#66)),17,2) AS revenue#173]\n      +- Project [ss_item_sk#55, ss_store_sk#60, ss_sales_price#66]\n         +- Join Inner, (ss_sold_date_sk#76 = d_date_sk#77)\n            :- Project [ss_item_sk#55, ss_store_sk#60, ss_sales_price#66, ss_sold_date_sk#76]\n            :  +- Filter ((isnotnull(ss_sold_date_sk#76) AND isnotnull(ss_store_sk#60)) AND dynamicpruning#239 [ss_sold_date_sk#76])\n            :     :  +- Project [d_date_sk#77]\n            :     :     +- Filter ((isnotnull(d_month_seq#80) AND ((d_month_seq#80 >= 1212) AND (d_month_seq#80 <= 1223))) AND isnotnull(d_date_sk#77))\n            :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#77,d_date_id#78,d_date#79,d_month_seq#80,d_week_seq#81,d_quarter_seq#82,d_year#83,d_dow#84,d_moy#85,d_dom#86,d_qoy#87,d_fy_year#88,d_fy_quarter_seq#89,d_fy_week_seq#90,d_day_name#91,d_quarter_name#92,d_holiday#93,d_weekend#94,d_following_holiday#95,d_first_dom#96,d_last_dom#97,d_same_day_ly#98,d_same_day_lq#99,d_current_day#100,... 4 more fields] parquet\n            :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#54,ss_item_sk#55,ss_customer_sk#56,ss_cdemo_sk#57,ss_hdemo_sk#58,ss_addr_sk#59,ss_store_sk#60,ss_promo_sk#61,ss_ticket_number#62L,ss_quantity#63,ss_wholesale_cost#64,ss_list_price#65,ss_sales_price#66,ss_ext_discount_amt#67,ss_ext_sales_price#68,ss_ext_wholesale_cost#69,ss_ext_list_price#70,ss_ext_tax#71,ss_coupon_amt#72,ss_net_paid#73,ss_net_paid_inc_tax#74,ss_net_profit#75,ss_sold_date_sk#76] parquet\n            +- Project [d_date_sk#77]\n               +- Filter ((isnotnull(d_month_seq#80) AND ((d_month_seq#80 >= 1212) AND (d_month_seq#80 <= 1223))) AND isnotnull(d_date_sk#77))\n                  +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#77,d_date_id#78,d_date#79,d_month_seq#80,d_week_seq#81,d_quarter_seq#82,d_year#83,d_dow#84,d_moy#85,d_dom#86,d_qoy#87,d_fy_year#88,d_fy_quarter_seq#89,d_fy_week_seq#90,d_day_name#91,d_quarter_name#92,d_holiday#93,d_weekend#94,d_following_holiday#95,d_first_dom#96,d_last_dom#97,d_same_day_ly#98,d_same_day_lq#99,d_current_day#100,... 4 more fields] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "0" : {
            "sign" : 1713663075,
            "className" : "org.apache.spark.sql.execution.FilterExec",
            "sizeInBytes" : 5124,
            "rowCount" : 183,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Input [2]: [ss_store_sk#60, ave#174] Condition : isnotnull(ave#174) "
          },
          "1" : {
            "sign" : 684854615,
            "className" : "org.apache.spark.sql.execution.aggregate.HashAggregateExec",
            "sizeInBytes" : 115776,
            "rowCount" : 2412,
            "isRuntime" : true,
            "predicate" : " (unknown) HashAggregate Input [3]: [ss_store_sk#60, sum#244, count#245L] Keys [1]: [ss_store_sk#60] Functions [1]: [avg(revenue#173)] Aggregate Attributes [1]: [avg(revenue#173)#231] Results [2]: [ss_store_sk#60, avg(revenue#173)#231 AS ave#174] "
          },
          "2" : {
            "sign" : 821762250,
            "className" : "org.apache.spark.sql.execution.adaptive.ShuffleQueryStageExec",
            "sizeInBytes" : 5124,
            "rowCount" : 183,
            "isRuntime" : false,
            "predicate" : " (unknown) ShuffleQueryStage Output [3]: [ss_store_sk#60, sum#244, count#245L] Arguments: 7 "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "ShuffleQueryStage",
          "toId" : 1,
          "toName" : "HashAggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "HashAggregate",
          "toId" : 0,
          "toName" : "Filter",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Filter isnotnull(ave#174)\n+- HashAggregate(keys=[ss_store_sk#60], functions=[avg(revenue#173)], output=[ss_store_sk#60, ave#174])\n   +- ShuffleQueryStage 7\n      +- Exchange hashpartitioning(ss_store_sk#60, 200), ENSURE_REQUIREMENTS, [plan_id=1043]\n         +- *(7) HashAggregate(keys=[ss_store_sk#60], functions=[partial_avg(revenue#173)], output=[ss_store_sk#60, sum#244, count#245L])\n            +- *(7) HashAggregate(keys=[ss_store_sk#60, ss_item_sk#55], functions=[sum(UnscaledValue(ss_sales_price#66))], output=[ss_store_sk#60, revenue#173])\n               +- AQEShuffleRead coalesced\n                  +- ShuffleQueryStage 6\n                     +- Exchange hashpartitioning(ss_store_sk#60, ss_item_sk#55, 200), ENSURE_REQUIREMENTS, [plan_id=794]\n                        +- *(6) HashAggregate(keys=[ss_store_sk#60, ss_item_sk#55], functions=[partial_sum(UnscaledValue(ss_sales_price#66))], output=[ss_store_sk#60, ss_item_sk#55, sum#247L])\n                           +- *(6) Project [ss_item_sk#55, ss_store_sk#60, ss_sales_price#66]\n                              +- *(6) BroadcastHashJoin [ss_sold_date_sk#76], [d_date_sk#77], Inner, BuildRight, false\n                                 :- *(6) Filter isnotnull(ss_store_sk#60)\n                                 :  +- *(6) ColumnarToRow\n                                 :     +- FileScan parquet spark_catalog.tpcds_100.store_sales[ss_item_sk#55,ss_store_sk#60,ss_sales_price#66,ss_sold_date_sk#76] Batched: true, DataFilters: [isnotnull(ss_store_sk#60)], Format: Parquet, Location: InMemoryFileIndex(1823 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/store_..., PartitionFilters: [isnotnull(ss_sold_date_sk#76), dynamicpruningexpression(ss_sold_date_sk#76 IN dynamicpruning#238)], PushedFilters: [IsNotNull(ss_store_sk)], ReadSchema: struct<ss_item_sk:int,ss_store_sk:int,ss_sales_price:decimal(7,2)>\n                                 :           +- ReusedSubquery SubqueryBroadcast dynamicpruning#238, 0, [d_date_sk#199], [id=#705]\n                                 +- BroadcastQueryStage 2\n                                    +- ReusedExchange [d_date_sk#77], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=292]\n"
      },
      "IM" : {
        "inputSizeInBytes" : 115776,
        "inputRowCount" : 2412
      },
      "InitialPartitionNum" : 200,
      "PD" : {
        "3" : [ 1056, 1056, 992, 1048, 0, 0, 1294, 1048, 1056, 0, 0, 1872, 1056, 1056, 1048, 0, 0, 0, 1056, 1305, 0, 1294, 1056, 1272, 1056, 1056, 1056, 1056, 0, 0, 1272, 1613, 1548, 1272, 1056, 0, 1048, 1048, 1056, 1272, 0, 1056, 1056, 1272, 1056, 1048, 1056, 1056, 1600, 1283, 1056, 1283, 1272, 1548, 1048, 1283, 1272, 1283, 0, 0, 1056, 0, 0, 1056, 0, 1056, 1283, 0, 0, 1294, 1056, 0, 0, 1048, 0, 1040, 0, 1056, 1056, 1048, 0, 0, 1056, 0, 1056, 1574, 1056, 0, 1316, 0, 0, 1263, 0, 1048, 0, 0, 0, 1056, 1056, 1305, 1548, 1548, 1349, 1561, 0, 0, 1613, 1056, 1587, 1056, 1294, 0, 1048, 1548, 1056, 1048, 1283, 0, 0, 0, 0, 0, 1294, 0, 1056, 0, 0, 0, 1272, 1639, 1056, 1548, 1272, 0, 0, 1056, 1056, 1294, 0, 0, 0, 1056, 0, 1056, 0, 1272, 1283, 0, 0, 0, 960, 1056, 1056, 1056, 1056, 1872, 1561, 0, 0, 1056, 1056, 1272, 1272, 0, 1056, 1561, 0, 1048, 1040, 1272, 1272, 1872, 1056, 1056, 1272, 0, 0, 0, 1056, 1056, 0, 0, 1548, 0, 1272, 0, 0, 0, 1056, 0, 0, 0, 0, 1056, 1056, 1056, 0, 0, 1272, 0 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 6,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 10 ],
      "Objectives" : {
        "DurationInMs" : 93,
        "TotalTasksDurationInMs" : 86,
        "IOBytes" : {
          "Total" : 142756,
          "Details" : {
            "IR" : 0,
            "IW" : 0,
            "SR" : 142756,
            "SW" : 0
          }
        }
      }
    },
    "1" : {
      "QSLogical" : {
        "operators" : {
          "0" : {
            "sign" : 904771672,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 11256,
                "rowCount" : 402
              },
              "compileTime" : {
                "sizeInBytes" : 11256,
                "rowCount" : 402
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [s_store_sk#3, s_store_name#8] "
          },
          "1" : {
            "sign" : 1872213407,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 192558,
                "rowCount" : 402
              },
              "compileTime" : {
                "sizeInBytes" : 192558,
                "rowCount" : 402
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: isnotnull(s_store_sk#3) "
          },
          "2" : {
            "sign" : -1940854156,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 192558,
                "rowCount" : 402
              },
              "compileTime" : {
                "sizeInBytes" : 192558,
                "rowCount" : 402
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [s_store_sk#3, s_store_id#4, s_rec_start_date#5, s_rec_end_date#6, s_closed_date_sk#7, s_store_name#8, s_number_employees#9, s_floor_space#10, s_hours#11, s_manager#12, s_market_id#13, s_geography_class#14, s_market_desc#15, s_market_manager#16, s_division_id#17, s_division_name#18, s_company_id#19, s_company_name#20, s_street_number#21, s_street_name#22, s_street_type#23, s_suite_number#24, s_city#25, s_county#26, ... 5 more fields], `spark_catalog`.`tpcds_100`.`store`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "LogicalRelation",
          "toId" : 1,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Filter",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [s_store_sk#3, s_store_name#8]\n+- Filter isnotnull(s_store_sk#3)\n   +- Relation spark_catalog.tpcds_100.store[s_store_sk#3,s_store_id#4,s_rec_start_date#5,s_rec_end_date#6,s_closed_date_sk#7,s_store_name#8,s_number_employees#9,s_floor_space#10,s_hours#11,s_manager#12,s_market_id#13,s_geography_class#14,s_market_desc#15,s_market_manager#16,s_division_id#17,s_division_name#18,s_company_id#19,s_company_name#20,s_street_number#21,s_street_name#22,s_street_type#23,s_suite_number#24,s_city#25,s_county#26,... 5 more fields] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "0" : {
            "sign" : 1384591815,
            "className" : "org.apache.spark.sql.execution.FilterExec",
            "sizeInBytes" : 11256,
            "rowCount" : 402,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Input [2]: [s_store_sk#3, s_store_name#8] Condition : isnotnull(s_store_sk#3) "
          },
          "1" : {
            "sign" : 1797822290,
            "className" : "org.apache.spark.sql.execution.FileSourceScanExec",
            "sizeInBytes" : 11256,
            "rowCount" : 402,
            "isRuntime" : false,
            "predicate" : " (unknown) Scan parquet spark_catalog.tpcds_100.store Output [2]: [s_store_sk#3, s_store_name#8] Batched: true Location: InMemoryFileIndex [hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/store] PushedFilters: [IsNotNull(s_store_sk)] ReadSchema: struct<s_store_sk:int,s_store_name:string> "
          }
        },
        "links" : [ {
          "fromId" : 1,
          "fromName" : "Scan parquet spark_catalog.tpcds_100.store",
          "toId" : 0,
          "toName" : "Filter",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Filter isnotnull(s_store_sk#3)\n+- FileScan parquet spark_catalog.tpcds_100.store[s_store_sk#3,s_store_name#8] Batched: true, DataFilters: [isnotnull(s_store_sk#3)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/store], PartitionFilters: [], PushedFilters: [IsNotNull(s_store_sk)], ReadSchema: struct<s_store_sk:int,s_store_name:string>\n"
      },
      "IM" : {
        "inputSizeInBytes" : 11256,
        "inputRowCount" : 402
      },
      "InitialPartitionNum" : 0,
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 2,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 2 ],
      "Objectives" : {
        "DurationInMs" : 1534,
        "TotalTasksDurationInMs" : 1527,
        "IOBytes" : {
          "Total" : 14351,
          "Details" : {
            "IR" : 14351,
            "IW" : 0,
            "SR" : 0,
            "SW" : 0
          }
        }
      }
    },
    "0" : {
      "QSLogical" : {
        "operators" : {
          "0" : {
            "sign" : 1971682445,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 4032,
                "rowCount" : 336
              },
              "compileTime" : {
                "sizeInBytes" : 4032,
                "rowCount" : 336
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#199] "
          },
          "1" : {
            "sign" : -1153258266,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 82656,
                "rowCount" : 336
              },
              "compileTime" : {
                "sizeInBytes" : 82656,
                "rowCount" : 336
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(d_month_seq#202) AND ((d_month_seq#202 >= 1212) AND (d_month_seq#202 <= 1223))) AND isnotnull(d_date_sk#199)) "
          },
          "2" : {
            "sign" : 1309245952,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 17970054,
                "rowCount" : 73049
              },
              "compileTime" : {
                "sizeInBytes" : 17970054,
                "rowCount" : 73049
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#199, d_date_id#200, d_date#201, d_month_seq#202, d_week_seq#203, d_quarter_seq#204, d_year#205, d_dow#206, d_moy#207, d_dom#208, d_qoy#209, d_fy_year#210, d_fy_quarter_seq#211, d_fy_week_seq#212, d_day_name#213, d_quarter_name#214, d_holiday#215, d_weekend#216, d_following_holiday#217, d_first_dom#218, d_last_dom#219, d_same_day_ly#220, d_same_day_lq#221, d_current_day#222, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "LogicalRelation",
          "toId" : 1,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Filter",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [d_date_sk#199]\n+- Filter ((isnotnull(d_month_seq#202) AND ((d_month_seq#202 >= 1212) AND (d_month_seq#202 <= 1223))) AND isnotnull(d_date_sk#199))\n   +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#199,d_date_id#200,d_date#201,d_month_seq#202,d_week_seq#203,d_quarter_seq#204,d_year#205,d_dow#206,d_moy#207,d_dom#208,d_qoy#209,d_fy_year#210,d_fy_quarter_seq#211,d_fy_week_seq#212,d_day_name#213,d_quarter_name#214,d_holiday#215,d_weekend#216,d_following_holiday#217,d_first_dom#218,d_last_dom#219,d_same_day_ly#220,d_same_day_lq#221,d_current_day#222,... 4 more fields] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "0" : {
            "sign" : -1236668621,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 4032,
            "rowCount" : 336,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [1]: [d_date_sk#199] Input [2]: [d_date_sk#199, d_month_seq#202] "
          },
          "1" : {
            "sign" : -918705360,
            "className" : "org.apache.spark.sql.execution.FilterExec",
            "sizeInBytes" : 4032,
            "rowCount" : 336,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Input [2]: [d_date_sk#199, d_month_seq#202] Condition : (((isnotnull(d_month_seq#202) AND (d_month_seq#202 >= 1212)) AND (d_month_seq#202 <= 1223)) AND isnotnull(d_date_sk#199)) "
          },
          "2" : {
            "sign" : -355879752,
            "className" : "org.apache.spark.sql.execution.FileSourceScanExec",
            "sizeInBytes" : 4032,
            "rowCount" : 336,
            "isRuntime" : false,
            "predicate" : " (unknown) Scan parquet spark_catalog.tpcds_100.date_dim Output [2]: [d_date_sk#199, d_month_seq#202] Batched: true Location: InMemoryFileIndex [hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim] PushedFilters: [IsNotNull(d_month_seq), GreaterThanOrEqual(d_month_seq,1212), LessThanOrEqual(d_month_seq,1223), IsNotNull(d_date_sk)] ReadSchema: struct<d_date_sk:int,d_month_seq:int> "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "Scan parquet spark_catalog.tpcds_100.date_dim",
          "toId" : 1,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Filter",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [d_date_sk#199]\n+- Filter (((isnotnull(d_month_seq#202) AND (d_month_seq#202 >= 1212)) AND (d_month_seq#202 <= 1223)) AND isnotnull(d_date_sk#199))\n   +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#199,d_month_seq#202] Batched: true, DataFilters: [isnotnull(d_month_seq#202), (d_month_seq#202 >= 1212), (d_month_seq#202 <= 1223), isnotnull(d_da..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_month_seq), GreaterThanOrEqual(d_month_seq,1212), LessThanOrEqual(d_month_seq,1223),..., ReadSchema: struct<d_date_sk:int,d_month_seq:int>\n"
      },
      "IM" : {
        "inputSizeInBytes" : 4032,
        "inputRowCount" : 336
      },
      "InitialPartitionNum" : 0,
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 0,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 3 ],
      "Objectives" : {
        "DurationInMs" : 1561,
        "TotalTasksDurationInMs" : 1554,
        "IOBytes" : {
          "Total" : 112967,
          "Details" : {
            "IR" : 112967,
            "IW" : 0,
            "SR" : 0,
            "SW" : 0
          }
        }
      }
    },
    "2" : {
      "QSLogical" : {
        "operators" : {
          "0" : {
            "sign" : 1904022362,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 34680000,
                "rowCount" : 204000
              },
              "compileTime" : {
                "sizeInBytes" : 34680000,
                "rowCount" : 204000
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_item_sk#32, i_item_desc#36, i_current_price#37, i_wholesale_cost#38, i_brand#40] "
          },
          "1" : {
            "sign" : -760377188,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 86904000,
                "rowCount" : 204000
              },
              "compileTime" : {
                "sizeInBytes" : 86904000,
                "rowCount" : 204000
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: isnotnull(i_item_sk#32) "
          },
          "2" : {
            "sign" : -746361211,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 86904000,
                "rowCount" : 204000
              },
              "compileTime" : {
                "sizeInBytes" : 86904000,
                "rowCount" : 204000
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [i_item_sk#32, i_item_id#33, i_rec_start_date#34, i_rec_end_date#35, i_item_desc#36, i_current_price#37, i_wholesale_cost#38, i_brand_id#39, i_brand#40, i_class_id#41, i_class#42, i_category_id#43, i_category#44, i_manufact_id#45, i_manufact#46, i_size#47, i_formulation#48, i_color#49, i_units#50, i_container#51, i_manager_id#52, i_product_name#53], `spark_catalog`.`tpcds_100`.`item`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "LogicalRelation",
          "toId" : 1,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Filter",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [i_item_sk#32, i_item_desc#36, i_current_price#37, i_wholesale_cost#38, i_brand#40]\n+- Filter isnotnull(i_item_sk#32)\n   +- Relation spark_catalog.tpcds_100.item[i_item_sk#32,i_item_id#33,i_rec_start_date#34,i_rec_end_date#35,i_item_desc#36,i_current_price#37,i_wholesale_cost#38,i_brand_id#39,i_brand#40,i_class_id#41,i_class#42,i_category_id#43,i_category#44,i_manufact_id#45,i_manufact#46,i_size#47,i_formulation#48,i_color#49,i_units#50,i_container#51,i_manager_id#52,i_product_name#53] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "0" : {
            "sign" : -1581303606,
            "className" : "org.apache.spark.sql.execution.FilterExec",
            "sizeInBytes" : 34680000,
            "rowCount" : 204000,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Input [5]: [i_item_sk#32, i_item_desc#36, i_current_price#37, i_wholesale_cost#38, i_brand#40] Condition : isnotnull(i_item_sk#32) "
          },
          "1" : {
            "sign" : -1118383999,
            "className" : "org.apache.spark.sql.execution.FileSourceScanExec",
            "sizeInBytes" : 34680000,
            "rowCount" : 204000,
            "isRuntime" : false,
            "predicate" : " (unknown) Scan parquet spark_catalog.tpcds_100.item Output [5]: [i_item_sk#32, i_item_desc#36, i_current_price#37, i_wholesale_cost#38, i_brand#40] Batched: true Location: InMemoryFileIndex [hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/item] PushedFilters: [IsNotNull(i_item_sk)] ReadSchema: struct<i_item_sk:int,i_item_desc:string,i_current_price:decimal(7,2),i_wholesale_cost:decimal(7,2),i_brand:string> "
          }
        },
        "links" : [ {
          "fromId" : 1,
          "fromName" : "Scan parquet spark_catalog.tpcds_100.item",
          "toId" : 0,
          "toName" : "Filter",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Filter isnotnull(i_item_sk#32)\n+- FileScan parquet spark_catalog.tpcds_100.item[i_item_sk#32,i_item_desc#36,i_current_price#37,i_wholesale_cost#38,i_brand#40] Batched: true, DataFilters: [isnotnull(i_item_sk#32)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/item], PartitionFilters: [], PushedFilters: [IsNotNull(i_item_sk)], ReadSchema: struct<i_item_sk:int,i_item_desc:string,i_current_price:decimal(7,2),i_wholesale_cost:decimal(7,2...\n"
      },
      "IM" : {
        "inputSizeInBytes" : 34680000,
        "inputRowCount" : 204000
      },
      "InitialPartitionNum" : 0,
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 1,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 1 ],
      "Objectives" : {
        "DurationInMs" : 3076,
        "TotalTasksDurationInMs" : 9180,
        "IOBytes" : {
          "Total" : 34619927,
          "Details" : {
            "IR" : 12605339,
            "IW" : 0,
            "SR" : 0,
            "SW" : 22014588
          }
        }
      }
    },
    "7" : {
      "QSLogical" : {
        "operators" : {
          "0" : {
            "sign" : 1040546331,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 828410256,
                "rowCount" : 34517094
              },
              "compileTime" : {
                "sizeInBytes" : 828410256,
                "rowCount" : 34517094
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_store_sk#182, ss_item_sk#177, revenue#175] "
          },
          "1" : {
            "sign" : -874344396,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 1518752136,
                "rowCount" : 34517094
              },
              "compileTime" : {
                "sizeInBytes" : 1518752136,
                "rowCount" : 34517094
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, ((ss_store_sk#60 = ss_store_sk#182) AND (cast(revenue#175 as decimal(23,7)) <= (0.1 * ave#174))) "
          },
          "2" : {
            "sign" : 1697085269,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 828410256,
                "rowCount" : 34517094
              },
              "compileTime" : {
                "sizeInBytes" : 828410256,
                "rowCount" : 34517094
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: isnotnull(revenue#175) "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "Filter",
          "toId" : 1,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Join",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [ss_store_sk#182, ss_item_sk#177, revenue#175]\n+- Join Inner, ((ss_store_sk#60 = ss_store_sk#182) AND (cast(revenue#175 as decimal(23,7)) <= (0.1 * ave#174)))\n   :- Filter isnotnull(revenue#175)\n   :  +- Aggregate [ss_store_sk#182, ss_item_sk#177], [ss_store_sk#182, ss_item_sk#177, MakeDecimal(sum(UnscaledValue(ss_sales_price#188)),17,2) AS revenue#175]\n   :     +- Project [ss_item_sk#177, ss_store_sk#182, ss_sales_price#188]\n   :        +- Join Inner, (ss_sold_date_sk#198 = d_date_sk#199)\n   :           :- Project [ss_item_sk#177, ss_store_sk#182, ss_sales_price#188, ss_sold_date_sk#198]\n   :           :  +- Filter (((isnotnull(ss_sold_date_sk#198) AND isnotnull(ss_store_sk#182)) AND isnotnull(ss_item_sk#177)) AND dynamicpruning#238 [ss_sold_date_sk#198])\n   :           :     :  +- Project [d_date_sk#199]\n   :           :     :     +- Filter ((isnotnull(d_month_seq#202) AND ((d_month_seq#202 >= 1212) AND (d_month_seq#202 <= 1223))) AND isnotnull(d_date_sk#199))\n   :           :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#199,d_date_id#200,d_date#201,d_month_seq#202,d_week_seq#203,d_quarter_seq#204,d_year#205,d_dow#206,d_moy#207,d_dom#208,d_qoy#209,d_fy_year#210,d_fy_quarter_seq#211,d_fy_week_seq#212,d_day_name#213,d_quarter_name#214,d_holiday#215,d_weekend#216,d_following_holiday#217,d_first_dom#218,d_last_dom#219,d_same_day_ly#220,d_same_day_lq#221,d_current_day#222,... 4 more fields] parquet\n   :           :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#176,ss_item_sk#177,ss_customer_sk#178,ss_cdemo_sk#179,ss_hdemo_sk#180,ss_addr_sk#181,ss_store_sk#182,ss_promo_sk#183,ss_ticket_number#184L,ss_quantity#185,ss_wholesale_cost#186,ss_list_price#187,ss_sales_price#188,ss_ext_discount_amt#189,ss_ext_sales_price#190,ss_ext_wholesale_cost#191,ss_ext_list_price#192,ss_ext_tax#193,ss_coupon_amt#194,ss_net_paid#195,ss_net_paid_inc_tax#196,ss_net_profit#197,ss_sold_date_sk#198] parquet\n   :           +- Project [d_date_sk#199]\n   :              +- Filter ((isnotnull(d_month_seq#202) AND ((d_month_seq#202 >= 1212) AND (d_month_seq#202 <= 1223))) AND isnotnull(d_date_sk#199))\n   :                 +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#199,d_date_id#200,d_date#201,d_month_seq#202,d_week_seq#203,d_quarter_seq#204,d_year#205,d_dow#206,d_moy#207,d_dom#208,d_qoy#209,d_fy_year#210,d_fy_quarter_seq#211,d_fy_week_seq#212,d_day_name#213,d_quarter_name#214,d_holiday#215,d_weekend#216,d_following_holiday#217,d_first_dom#218,d_last_dom#219,d_same_day_ly#220,d_same_day_lq#221,d_current_day#222,... 4 more fields] parquet\n   +- Filter isnotnull(ave#174)\n      +- Aggregate [ss_store_sk#60], [ss_store_sk#60, avg(revenue#173) AS ave#174]\n         +- Aggregate [ss_store_sk#60, ss_item_sk#55], [ss_store_sk#60, MakeDecimal(sum(UnscaledValue(ss_sales_price#66)),17,2) AS revenue#173]\n            +- Project [ss_item_sk#55, ss_store_sk#60, ss_sales_price#66]\n               +- Join Inner, (ss_sold_date_sk#76 = d_date_sk#77)\n                  :- Project [ss_item_sk#55, ss_store_sk#60, ss_sales_price#66, ss_sold_date_sk#76]\n                  :  +- Filter ((isnotnull(ss_sold_date_sk#76) AND isnotnull(ss_store_sk#60)) AND dynamicpruning#239 [ss_sold_date_sk#76])\n                  :     :  +- Project [d_date_sk#77]\n                  :     :     +- Filter ((isnotnull(d_month_seq#80) AND ((d_month_seq#80 >= 1212) AND (d_month_seq#80 <= 1223))) AND isnotnull(d_date_sk#77))\n                  :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#77,d_date_id#78,d_date#79,d_month_seq#80,d_week_seq#81,d_quarter_seq#82,d_year#83,d_dow#84,d_moy#85,d_dom#86,d_qoy#87,d_fy_year#88,d_fy_quarter_seq#89,d_fy_week_seq#90,d_day_name#91,d_quarter_name#92,d_holiday#93,d_weekend#94,d_following_holiday#95,d_first_dom#96,d_last_dom#97,d_same_day_ly#98,d_same_day_lq#99,d_current_day#100,... 4 more fields] parquet\n                  :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#54,ss_item_sk#55,ss_customer_sk#56,ss_cdemo_sk#57,ss_hdemo_sk#58,ss_addr_sk#59,ss_store_sk#60,ss_promo_sk#61,ss_ticket_number#62L,ss_quantity#63,ss_wholesale_cost#64,ss_list_price#65,ss_sales_price#66,ss_ext_discount_amt#67,ss_ext_sales_price#68,ss_ext_wholesale_cost#69,ss_ext_list_price#70,ss_ext_tax#71,ss_coupon_amt#72,ss_net_paid#73,ss_net_paid_inc_tax#74,ss_net_profit#75,ss_sold_date_sk#76] parquet\n                  +- Project [d_date_sk#77]\n                     +- Filter ((isnotnull(d_month_seq#80) AND ((d_month_seq#80 >= 1212) AND (d_month_seq#80 <= 1223))) AND isnotnull(d_date_sk#77))\n                        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#77,d_date_id#78,d_date#79,d_month_seq#80,d_week_seq#81,d_quarter_seq#82,d_year#83,d_dow#84,d_moy#85,d_dom#86,d_qoy#87,d_fy_year#88,d_fy_quarter_seq#89,d_fy_week_seq#90,d_day_name#91,d_quarter_name#92,d_holiday#93,d_weekend#94,d_following_holiday#95,d_first_dom#96,d_last_dom#97,d_same_day_ly#98,d_same_day_lq#99,d_current_day#100,... 4 more fields] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "4" : {
            "sign" : 41794891,
            "className" : "org.apache.spark.sql.execution.adaptive.ShuffleQueryStageExec",
            "sizeInBytes" : 828410256,
            "rowCount" : 34517094,
            "isRuntime" : false,
            "predicate" : " (unknown) ShuffleQueryStage Output [3]: [ss_store_sk#182, ss_item_sk#177, sum#241L] Arguments: 5 "
          },
          "5" : {
            "sign" : 1810167127,
            "className" : "org.apache.spark.sql.execution.adaptive.BroadcastQueryStageExec",
            "sizeInBytes" : 1051776,
            "rowCount" : 201,
            "isRuntime" : true,
            "predicate" : " (unknown) BroadcastQueryStage Output [2]: [ss_store_sk#60, ave#174] Arguments: 8 "
          },
          "1" : {
            "sign" : -1045612653,
            "className" : "org.apache.spark.sql.execution.joins.BroadcastHashJoinExec",
            "sizeInBytes" : 1518752136,
            "rowCount" : 34517094,
            "isRuntime" : false,
            "predicate" : " (unknown) BroadcastHashJoin Left keys [1]: [ss_store_sk#182] Right keys [1]: [ss_store_sk#60] Join type: Inner Join condition: (cast(revenue#175 as decimal(23,7)) <= (0.1 * ave#174)) "
          },
          "0" : {
            "sign" : -509009790,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 828410256,
            "rowCount" : 34517094,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [3]: [ss_store_sk#182, ss_item_sk#177, revenue#175] Input [5]: [ss_store_sk#182, ss_item_sk#177, revenue#175, ss_store_sk#60, ave#174] "
          },
          "2" : {
            "sign" : 1744724225,
            "className" : "org.apache.spark.sql.execution.FilterExec",
            "sizeInBytes" : 828410256,
            "rowCount" : 34517094,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Input [3]: [ss_store_sk#182, ss_item_sk#177, revenue#175] Condition : isnotnull(revenue#175) "
          },
          "3" : {
            "sign" : 1037133626,
            "className" : "org.apache.spark.sql.execution.aggregate.HashAggregateExec",
            "sizeInBytes" : 1638031232,
            "rowCount" : 51188476,
            "isRuntime" : true,
            "predicate" : " (unknown) HashAggregate Input [3]: [ss_store_sk#182, ss_item_sk#177, sum#241L] Keys [2]: [ss_store_sk#182, ss_item_sk#177] Functions [1]: [sum(UnscaledValue(ss_sales_price#188))] Aggregate Attributes [1]: [sum(UnscaledValue(ss_sales_price#188))#228L] Results [3]: [ss_store_sk#182, ss_item_sk#177, MakeDecimal(sum(UnscaledValue(ss_sales_price#188))#228L,17,2) AS revenue#175] "
          }
        },
        "links" : [ {
          "fromId" : 4,
          "fromName" : "ShuffleQueryStage",
          "toId" : 3,
          "toName" : "HashAggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "HashAggregate",
          "toId" : 2,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Filter",
          "toId" : 1,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "BroadcastQueryStage",
          "toId" : 1,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "BroadcastHashJoin",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [ss_store_sk#182, ss_item_sk#177, revenue#175]\n+- BroadcastHashJoin [ss_store_sk#182], [ss_store_sk#60], Inner, BuildRight, (cast(revenue#175 as decimal(23,7)) <= (0.1 * ave#174)), false\n   :- Filter isnotnull(revenue#175)\n   :  +- HashAggregate(keys=[ss_store_sk#182, ss_item_sk#177], functions=[sum(UnscaledValue(ss_sales_price#188))], output=[ss_store_sk#182, ss_item_sk#177, revenue#175])\n   :     +- ShuffleQueryStage 5\n   :        +- Exchange hashpartitioning(ss_store_sk#182, ss_item_sk#177, 200), ENSURE_REQUIREMENTS, [plan_id=736]\n   :           +- *(5) HashAggregate(keys=[ss_store_sk#182, ss_item_sk#177], functions=[partial_sum(UnscaledValue(ss_sales_price#188))], output=[ss_store_sk#182, ss_item_sk#177, sum#241L])\n   :              +- *(5) Project [ss_item_sk#177, ss_store_sk#182, ss_sales_price#188]\n   :                 +- *(5) BroadcastHashJoin [ss_sold_date_sk#198], [d_date_sk#199], Inner, BuildRight, false\n   :                    :- *(5) Filter (isnotnull(ss_store_sk#182) AND isnotnull(ss_item_sk#177))\n   :                    :  +- *(5) ColumnarToRow\n   :                    :     +- FileScan parquet spark_catalog.tpcds_100.store_sales[ss_item_sk#177,ss_store_sk#182,ss_sales_price#188,ss_sold_date_sk#198] Batched: true, DataFilters: [isnotnull(ss_store_sk#182), isnotnull(ss_item_sk#177)], Format: Parquet, Location: InMemoryFileIndex(1823 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/store_..., PartitionFilters: [isnotnull(ss_sold_date_sk#198), dynamicpruningexpression(ss_sold_date_sk#198 IN dynamicpruning#2..., PushedFilters: [IsNotNull(ss_store_sk), IsNotNull(ss_item_sk)], ReadSchema: struct<ss_item_sk:int,ss_store_sk:int,ss_sales_price:decimal(7,2)>\n   :                    :           +- SubqueryBroadcast dynamicpruning#238, 0, [d_date_sk#199], [id=#705]\n   :                    :              +- AdaptiveSparkPlan isFinalPlan=true\n                                          +- == Final Plan ==\n                                             BroadcastQueryStage 1\n                                             +- ReusedExchange [d_date_sk#199], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=292]\n                                          +- == Initial Plan ==\n                                             BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=702]\n                                             +- Project [d_date_sk#199]\n                                                +- Filter (((isnotnull(d_month_seq#202) AND (d_month_seq#202 >= 1212)) AND (d_month_seq#202 <= 1223)) AND isnotnull(d_date_sk#199))\n                                                   +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#199,d_month_seq#202] Batched: true, DataFilters: [isnotnull(d_month_seq#202), (d_month_seq#202 >= 1212), (d_month_seq#202 <= 1223), isnotnull(d_da..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_month_seq), GreaterThanOrEqual(d_month_seq,1212), LessThanOrEqual(d_month_seq,1223),..., ReadSchema: struct<d_date_sk:int,d_month_seq:int>\n   :                    +- BroadcastQueryStage 0\n   :                       +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=292]\n   :                          +- *(1) Project [d_date_sk#199]\n   :                             +- *(1) Filter (((isnotnull(d_month_seq#202) AND (d_month_seq#202 >= 1212)) AND (d_month_seq#202 <= 1223)) AND isnotnull(d_date_sk#199))\n   :                                +- *(1) ColumnarToRow\n   :                                   +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#199,d_month_seq#202] Batched: true, DataFilters: [isnotnull(d_month_seq#202), (d_month_seq#202 >= 1212), (d_month_seq#202 <= 1223), isnotnull(d_da..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_month_seq), GreaterThanOrEqual(d_month_seq,1212), LessThanOrEqual(d_month_seq,1223),..., ReadSchema: struct<d_date_sk:int,d_month_seq:int>\n   +- BroadcastQueryStage 8\n      +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=1131]\n         +- *(8) Filter isnotnull(ave#174)\n            +- *(8) HashAggregate(keys=[ss_store_sk#60], functions=[avg(revenue#173)], output=[ss_store_sk#60, ave#174])\n               +- AQEShuffleRead coalesced\n                  +- ShuffleQueryStage 7\n                     +- Exchange hashpartitioning(ss_store_sk#60, 200), ENSURE_REQUIREMENTS, [plan_id=1043]\n                        +- *(7) HashAggregate(keys=[ss_store_sk#60], functions=[partial_avg(revenue#173)], output=[ss_store_sk#60, sum#244, count#245L])\n                           +- *(7) HashAggregate(keys=[ss_store_sk#60, ss_item_sk#55], functions=[sum(UnscaledValue(ss_sales_price#66))], output=[ss_store_sk#60, revenue#173])\n                              +- AQEShuffleRead coalesced\n                                 +- ShuffleQueryStage 6\n                                    +- Exchange hashpartitioning(ss_store_sk#60, ss_item_sk#55, 200), ENSURE_REQUIREMENTS, [plan_id=794]\n                                       +- *(6) HashAggregate(keys=[ss_store_sk#60, ss_item_sk#55], functions=[partial_sum(UnscaledValue(ss_sales_price#66))], output=[ss_store_sk#60, ss_item_sk#55, sum#247L])\n                                          +- *(6) Project [ss_item_sk#55, ss_store_sk#60, ss_sales_price#66]\n                                             +- *(6) BroadcastHashJoin [ss_sold_date_sk#76], [d_date_sk#77], Inner, BuildRight, false\n                                                :- *(6) Filter isnotnull(ss_store_sk#60)\n                                                :  +- *(6) ColumnarToRow\n                                                :     +- FileScan parquet spark_catalog.tpcds_100.store_sales[ss_item_sk#55,ss_store_sk#60,ss_sales_price#66,ss_sold_date_sk#76] Batched: true, DataFilters: [isnotnull(ss_store_sk#60)], Format: Parquet, Location: InMemoryFileIndex(1823 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/store_..., PartitionFilters: [isnotnull(ss_sold_date_sk#76), dynamicpruningexpression(ss_sold_date_sk#76 IN dynamicpruning#238)], PushedFilters: [IsNotNull(ss_store_sk)], ReadSchema: struct<ss_item_sk:int,ss_store_sk:int,ss_sales_price:decimal(7,2)>\n                                                :           +- ReusedSubquery SubqueryBroadcast dynamicpruning#238, 0, [d_date_sk#199], [id=#705]\n                                                +- BroadcastQueryStage 2\n                                                   +- ReusedExchange [d_date_sk#77], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=292]\n"
      },
      "IM" : {
        "inputSizeInBytes" : 1639083008,
        "inputRowCount" : 51188677
      },
      "InitialPartitionNum" : 200,
      "PD" : {
        "1" : [ 3936601, 3937834, 3936601, 3936601, 3950174, 3926096, 3900185, 3909455, 3903253, 3939669, 3938436, 3936601, 3952009, 3898950, 3865002, 3952009, 3924261, 3963747, 3952009, 3926096, 3888447, 3937834, 3910688, 3910688, 3945207, 3938436, 3953242, 3979155, 3900185, 3910688, 3897717, 3936601, 3992728, 3926096, 3897115, 3938436, 3952009, 3950174, 3938436, 3977320, 3936601, 3907556, 3923028, 3912523, 3923028, 3914991, 3926096, 3923028, 3900185, 3938436, 3929166, 3966815, 3930399, 3930399, 3963747, 3897115, 3924261, 3897115, 3914991, 3977320, 3937834, 3952009, 3939669, 3924863, 3926096, 3952009, 3952009, 3979155, 3939669, 3977320, 3909455, 3926096, 3912523, 3936601, 3954477, 3889680, 3942739, 3924261, 3927331, 3909455, 3951407, 3915593, 3926096, 3936601, 3897115, 3952009, 3924863, 3980388, 3952009, 3952009, 3924261, 3952009, 3953242, 3952009, 3936601, 3965582, 3898950, 3912523, 3906323, 3924863, 3937834, 3926096, 3897115, 3900185, 3909455, 3963747, 3938436, 3963747, 3924863, 3924261, 3912523, 3950174, 3912523, 3926096, 3924261, 3911290, 3923028, 3938436, 3901418, 3940904, 3939669, 3951407, 3912523, 3950174, 3910688, 3953242, 3936601, 3953242, 3938436, 3927331, 3936601, 3889680, 3924863, 3937834, 3898950, 3965582, 3924863, 3943972, 3965582, 3926096, 3936601, 3928564, 3910688, 3916826, 3926096, 3952009, 3952009, 3924261, 3911290, 3963747, 3952937, 3965582, 3897717, 3905721, 3992728, 3889680, 3936601, 3909455, 3924863, 3912523, 3907556, 3923028, 3918061, 3952009, 3963747, 3909455, 3929166, 3923028, 3924863, 3937834, 3926096, 3942739, 3915593, 3938436, 3950174, 3910688, 3952009, 3938436, 3939669, 3923028, 3938436, 3953242, 3977320, 3953242, 3923028, 3898950, 3924863, 3953242, 3912523, 3938436, 3911290, 3938436, 3929166, 3910688, 3936601, 3936601, 3877342, 3887845, 3965582, 3897717 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 7,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 12 ],
      "Objectives" : {
        "DurationInMs" : 3541,
        "TotalTasksDurationInMs" : 30894,
        "IOBytes" : {
          "Total" : 768301224,
          "Details" : {
            "IR" : 0,
            "IW" : 0,
            "SR" : 749554951,
            "SW" : 18746273
          }
        }
      }
    },
    "3" : {
      "QSLogical" : {
        "operators" : {
          "4" : {
            "sign" : -283470773,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 39926379296,
                "rowCount" : 262673548
              },
              "compileTime" : {
                "sizeInBytes" : 39926379296,
                "rowCount" : 262673548
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(ss_sold_date_sk#198) AND isnotnull(ss_store_sk#182)) AND isnotnull(ss_item_sk#177)) AND dynamicpruning#238 [ss_sold_date_sk#198]) "
          },
          "5" : {
            "sign" : -2120854659,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 41806893656,
                "rowCount" : 275045353
              },
              "compileTime" : {
                "sizeInBytes" : 41806893656,
                "rowCount" : 275045353
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#176, ss_item_sk#177, ss_customer_sk#178, ss_cdemo_sk#179, ss_hdemo_sk#180, ss_addr_sk#181, ss_store_sk#182, ss_promo_sk#183, ss_ticket_number#184L, ss_quantity#185, ss_wholesale_cost#186, ss_list_price#187, ss_sales_price#188, ss_ext_discount_amt#189, ss_ext_sales_price#190, ss_ext_wholesale_cost#191, ss_ext_list_price#192, ss_ext_tax#193, ss_coupon_amt#194, ss_net_paid#195, ss_net_paid_inc_tax#196, ss_net_profit#197, ss_sold_date_sk#198], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "1" : {
            "sign" : 855150529,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 6372974040,
                "rowCount" : 265540585
              },
              "compileTime" : {
                "sizeInBytes" : 6372974040,
                "rowCount" : 265540585
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#177, ss_store_sk#182, ss_sales_price#188] "
          },
          "0" : {
            "sign" : 598455126,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 828410256,
                "rowCount" : 34517094
              },
              "compileTime" : {
                "sizeInBytes" : 828410256,
                "rowCount" : 34517094
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [ss_store_sk#182, ss_item_sk#177], [ss_store_sk#182, ss_item_sk#177, MakeDecimal(sum(UnscaledValue(ss_sales_price#188)),17,2) AS revenue#175] "
          },
          "2" : {
            "sign" : 778885139,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 8497298720,
                "rowCount" : 265540585
              },
              "compileTime" : {
                "sizeInBytes" : 8497298720,
                "rowCount" : 265540585
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#198 = d_date_sk#199) "
          },
          "3" : {
            "sign" : 1891150671,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 7354859344,
                "rowCount" : 262673548
              },
              "compileTime" : {
                "sizeInBytes" : 7354859344,
                "rowCount" : 262673548
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#177, ss_store_sk#182, ss_sales_price#188, ss_sold_date_sk#198] "
          }
        },
        "links" : [ {
          "fromId" : 5,
          "fromName" : "LogicalRelation",
          "toId" : 4,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Filter",
          "toId" : 3,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Project",
          "toId" : 2,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Join",
          "toId" : 1,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Project",
          "toId" : 0,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Aggregate [ss_store_sk#182, ss_item_sk#177], [ss_store_sk#182, ss_item_sk#177, MakeDecimal(sum(UnscaledValue(ss_sales_price#188)),17,2) AS revenue#175]\n+- Project [ss_item_sk#177, ss_store_sk#182, ss_sales_price#188]\n   +- Join Inner, (ss_sold_date_sk#198 = d_date_sk#199)\n      :- Project [ss_item_sk#177, ss_store_sk#182, ss_sales_price#188, ss_sold_date_sk#198]\n      :  +- Filter (((isnotnull(ss_sold_date_sk#198) AND isnotnull(ss_store_sk#182)) AND isnotnull(ss_item_sk#177)) AND dynamicpruning#238 [ss_sold_date_sk#198])\n      :     :  +- Project [d_date_sk#199]\n      :     :     +- Filter ((isnotnull(d_month_seq#202) AND ((d_month_seq#202 >= 1212) AND (d_month_seq#202 <= 1223))) AND isnotnull(d_date_sk#199))\n      :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#199,d_date_id#200,d_date#201,d_month_seq#202,d_week_seq#203,d_quarter_seq#204,d_year#205,d_dow#206,d_moy#207,d_dom#208,d_qoy#209,d_fy_year#210,d_fy_quarter_seq#211,d_fy_week_seq#212,d_day_name#213,d_quarter_name#214,d_holiday#215,d_weekend#216,d_following_holiday#217,d_first_dom#218,d_last_dom#219,d_same_day_ly#220,d_same_day_lq#221,d_current_day#222,... 4 more fields] parquet\n      :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#176,ss_item_sk#177,ss_customer_sk#178,ss_cdemo_sk#179,ss_hdemo_sk#180,ss_addr_sk#181,ss_store_sk#182,ss_promo_sk#183,ss_ticket_number#184L,ss_quantity#185,ss_wholesale_cost#186,ss_list_price#187,ss_sales_price#188,ss_ext_discount_amt#189,ss_ext_sales_price#190,ss_ext_wholesale_cost#191,ss_ext_list_price#192,ss_ext_tax#193,ss_coupon_amt#194,ss_net_paid#195,ss_net_paid_inc_tax#196,ss_net_profit#197,ss_sold_date_sk#198] parquet\n      +- Project [d_date_sk#199]\n         +- Filter ((isnotnull(d_month_seq#202) AND ((d_month_seq#202 >= 1212) AND (d_month_seq#202 <= 1223))) AND isnotnull(d_date_sk#199))\n            +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#199,d_date_id#200,d_date#201,d_month_seq#202,d_week_seq#203,d_quarter_seq#204,d_year#205,d_dow#206,d_moy#207,d_dom#208,d_qoy#209,d_fy_year#210,d_fy_quarter_seq#211,d_fy_week_seq#212,d_day_name#213,d_quarter_name#214,d_holiday#215,d_weekend#216,d_following_holiday#217,d_first_dom#218,d_last_dom#219,d_same_day_ly#220,d_same_day_lq#221,d_current_day#222,... 4 more fields] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "4" : {
            "sign" : -809632983,
            "className" : "org.apache.spark.sql.execution.FileSourceScanExec",
            "sizeInBytes" : 7354859344,
            "rowCount" : 262673548,
            "isRuntime" : false,
            "predicate" : " (unknown) Scan parquet spark_catalog.tpcds_100.store_sales Output [4]: [ss_item_sk#177, ss_store_sk#182, ss_sales_price#188, ss_sold_date_sk#198] Batched: true Location: InMemoryFileIndex [hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/store_sales/ss_sold_date_sk=2450816, ... 1822 entries] PartitionFilters: [isnotnull(ss_sold_date_sk#198), dynamicpruningexpression(ss_sold_date_sk#198 IN dynamicpruning#238)] PushedFilters: [IsNotNull(ss_store_sk), IsNotNull(ss_item_sk)] ReadSchema: struct<ss_item_sk:int,ss_store_sk:int,ss_sales_price:decimal(7,2)> "
          },
          "5" : {
            "sign" : 1353237583,
            "className" : "org.apache.spark.sql.execution.adaptive.BroadcastQueryStageExec",
            "sizeInBytes" : 1051496,
            "rowCount" : 365,
            "isRuntime" : true,
            "predicate" : " (unknown) BroadcastQueryStage Output [1]: [d_date_sk#199] Arguments: 0 "
          },
          "1" : {
            "sign" : 2103806295,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 6372974040,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [3]: [ss_item_sk#177, ss_store_sk#182, ss_sales_price#188] Input [5]: [ss_item_sk#177, ss_store_sk#182, ss_sales_price#188, ss_sold_date_sk#198, d_date_sk#199] "
          },
          "0" : {
            "sign" : 1031720485,
            "className" : "org.apache.spark.sql.execution.aggregate.HashAggregateExec",
            "sizeInBytes" : 828410256,
            "rowCount" : 34517094,
            "isRuntime" : false,
            "predicate" : " (unknown) HashAggregate Input [3]: [ss_item_sk#177, ss_store_sk#182, ss_sales_price#188] Keys [2]: [ss_store_sk#182, ss_item_sk#177] Functions [1]: [partial_sum(UnscaledValue(ss_sales_price#188))] Aggregate Attributes [1]: [sum#240L] Results [3]: [ss_store_sk#182, ss_item_sk#177, sum#241L] "
          },
          "2" : {
            "sign" : -263143755,
            "className" : "org.apache.spark.sql.execution.joins.BroadcastHashJoinExec",
            "sizeInBytes" : 8497298720,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) BroadcastHashJoin Left keys [1]: [ss_sold_date_sk#198] Right keys [1]: [d_date_sk#199] Join type: Inner Join condition: None "
          },
          "3" : {
            "sign" : 1751974455,
            "className" : "org.apache.spark.sql.execution.FilterExec",
            "sizeInBytes" : 7354859344,
            "rowCount" : 262673548,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Input [4]: [ss_item_sk#177, ss_store_sk#182, ss_sales_price#188, ss_sold_date_sk#198] Condition : (isnotnull(ss_store_sk#182) AND isnotnull(ss_item_sk#177)) "
          }
        },
        "links" : [ {
          "fromId" : 4,
          "fromName" : "Scan parquet spark_catalog.tpcds_100.store_sales",
          "toId" : 3,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Filter",
          "toId" : 2,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "BroadcastQueryStage",
          "toId" : 2,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "BroadcastHashJoin",
          "toId" : 1,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Project",
          "toId" : 0,
          "toName" : "HashAggregate",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "HashAggregate(keys=[ss_store_sk#182, ss_item_sk#177], functions=[partial_sum(UnscaledValue(ss_sales_price#188))], output=[ss_store_sk#182, ss_item_sk#177, sum#241L])\n+- Project [ss_item_sk#177, ss_store_sk#182, ss_sales_price#188]\n   +- BroadcastHashJoin [ss_sold_date_sk#198], [d_date_sk#199], Inner, BuildRight, false\n      :- Filter (isnotnull(ss_store_sk#182) AND isnotnull(ss_item_sk#177))\n      :  +- FileScan parquet spark_catalog.tpcds_100.store_sales[ss_item_sk#177,ss_store_sk#182,ss_sales_price#188,ss_sold_date_sk#198] Batched: true, DataFilters: [isnotnull(ss_store_sk#182), isnotnull(ss_item_sk#177)], Format: Parquet, Location: InMemoryFileIndex(1823 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/store_..., PartitionFilters: [isnotnull(ss_sold_date_sk#198), dynamicpruningexpression(ss_sold_date_sk#198 IN dynamicpruning#2..., PushedFilters: [IsNotNull(ss_store_sk), IsNotNull(ss_item_sk)], ReadSchema: struct<ss_item_sk:int,ss_store_sk:int,ss_sales_price:decimal(7,2)>\n      :        +- SubqueryBroadcast dynamicpruning#238, 0, [d_date_sk#199], [id=#705]\n      :           +- AdaptiveSparkPlan isFinalPlan=false\n      :              +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=702]\n      :                 +- Project [d_date_sk#199]\n      :                    +- Filter (((isnotnull(d_month_seq#202) AND (d_month_seq#202 >= 1212)) AND (d_month_seq#202 <= 1223)) AND isnotnull(d_date_sk#199))\n      :                       +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#199,d_month_seq#202] Batched: true, DataFilters: [isnotnull(d_month_seq#202), (d_month_seq#202 >= 1212), (d_month_seq#202 <= 1223), isnotnull(d_da..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_month_seq), GreaterThanOrEqual(d_month_seq,1212), LessThanOrEqual(d_month_seq,1223),..., ReadSchema: struct<d_date_sk:int,d_month_seq:int>\n      +- BroadcastQueryStage 0\n         +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=292]\n            +- *(1) Project [d_date_sk#199]\n               +- *(1) Filter (((isnotnull(d_month_seq#202) AND (d_month_seq#202 >= 1212)) AND (d_month_seq#202 <= 1223)) AND isnotnull(d_date_sk#199))\n                  +- *(1) ColumnarToRow\n                     +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#199,d_month_seq#202] Batched: true, DataFilters: [isnotnull(d_month_seq#202), (d_month_seq#202 >= 1212), (d_month_seq#202 <= 1223), isnotnull(d_da..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_month_seq), GreaterThanOrEqual(d_month_seq,1212), LessThanOrEqual(d_month_seq,1223),..., ReadSchema: struct<d_date_sk:int,d_month_seq:int>\n"
      },
      "IM" : {
        "inputSizeInBytes" : 7355910840,
        "inputRowCount" : 262673913
      },
      "InitialPartitionNum" : 0,
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 1,
        "FinishedTasksNum" : 4,
        "FinishedTasksTotalTimeInMs" : 6159.0,
        "FinishedTasksDistributionInMs" : [ 1253.0, 1310.0, 1785.0, 1811.0, 1811.0 ]
      },
      "QueryStageOptimizationId" : 3,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 4 ],
      "Objectives" : {
        "DurationInMs" : 22634,
        "TotalTasksDurationInMs" : 312603,
        "IOBytes" : {
          "Total" : 1105140183,
          "Details" : {
            "IR" : 355585232,
            "IW" : 0,
            "SR" : 0,
            "SW" : 749554951
          }
        }
      }
    }
  },
  "SQLStartTimeInMs" : 1702227223938,
  "SQLEndTimeInMs" : 1702227259653,
  "Objectives" : {
    "DurationInMs" : 35715,
    "IOBytes" : {
      "Total" : 3803890743,
      "Details" : {
        "IR" : 723863705,
        "IW" : 0,
        "SR" : 1540013519,
        "SW" : 1540013519
      }
    }
  }
}
