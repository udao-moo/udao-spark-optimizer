{
  "CompileTimeLQP" : {
    "LQP" : {
      "operators" : {
        "12" : {
          "sign" : 1608590622,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 41806893656,
          "rowCount" : 275045353,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#5, ss_item_sk#6, ss_customer_sk#7, ss_cdemo_sk#8, ss_hdemo_sk#9, ss_addr_sk#10, ss_store_sk#11, ss_promo_sk#12, ss_ticket_number#13L, ss_quantity#14, ss_wholesale_cost#15, ss_list_price#16, ss_sales_price#17, ss_ext_discount_amt#18, ss_ext_sales_price#19, ss_ext_wholesale_cost#20, ss_ext_list_price#21, ss_ext_tax#22, ss_coupon_amt#23, ss_net_paid#24, ss_net_paid_inc_tax#25, ss_net_profit#26, ss_sold_date_sk#27], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "8" : {
          "sign" : 1079547361,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 8497298720,
          "rowCount" : 265540585,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [ss_item_sk#6, ss_customer_sk#7, ss_store_sk#11, ss_ticket_number#13L, ss_sold_date_sk#27] "
        },
        "19" : {
          "sign" : -358482032,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 754762260,
          "rowCount" : 26955795,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [sr_item_sk#29, sr_customer_sk#30, sr_ticket_number#36L, sr_returned_date_sk#47] "
        },
        "23" : {
          "sign" : 424936361,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 3557606528,
          "rowCount" : 27793801,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [sr_return_time_sk#28, sr_item_sk#29, sr_customer_sk#30, sr_cdemo_sk#31, sr_hdemo_sk#32, sr_addr_sk#33, sr_store_sk#34, sr_reason_sk#35, sr_ticket_number#36L, sr_return_quantity#37, sr_return_amt#38, sr_return_tax#39, sr_return_amt_inc_tax#40, sr_fee#41, sr_return_ship_cost#42, sr_refunded_cash#43, sr_reversed_charge#44, sr_store_credit#45, sr_net_loss#46, sr_returned_date_sk#47], `spark_catalog`.`tpcds_100`.`store_returns`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "4" : {
          "sign" : -1096234597,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 65673550845,
          "rowCount" : 347479105,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [ss_sold_date_sk#27, sr_returned_date_sk#47, s_store_name#53, s_company_id#64, s_street_number#66, s_street_name#67, s_street_type#68, s_suite_number#69, s_city#70, s_county#71, s_state#72, s_zip#73] "
        },
        "15" : {
          "sign" : 66120808,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 17970054,
          "rowCount" : 73049,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#77, d_date_id#78, d_date#79, d_month_seq#80, d_week_seq#81, d_quarter_seq#82, d_year#83, d_dow#84, d_moy#85, d_dom#86, d_qoy#87, d_fy_year#88, d_fy_quarter_seq#89, d_fy_week_seq#90, d_day_name#91, d_quarter_name#92, d_holiday#93, d_weekend#94, d_following_holiday#95, d_first_dom#96, d_last_dom#97, d_same_day_ly#98, d_same_day_lq#99, d_current_day#100, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "11" : {
          "sign" : 2116338474,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 38129799488,
          "rowCount" : 250853944,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: ((((isnotnull(ss_ticket_number#13L) AND isnotnull(ss_item_sk#6)) AND isnotnull(ss_customer_sk#7)) AND isnotnull(ss_store_sk#11)) AND isnotnull(ss_sold_date_sk#27)) "
        },
        "9" : {
          "sign" : -76262431,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 9559461060,
          "rowCount" : 265540585,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#27 = d_date_sk#77) "
        },
        "22" : {
          "sign" : 90093088,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 3433101696,
          "rowCount" : 26821107,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: ((((isnotnull(sr_ticket_number#36L) AND isnotnull(sr_item_sk#29)) AND isnotnull(sr_customer_sk#30)) AND isnotnull(sr_returned_date_sk#47)) AND dynamicpruning#158 [sr_returned_date_sk#47]) "
        },
        "26" : {
          "sign" : -1041367030,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 17970054,
          "rowCount" : 73049,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#105, d_date_id#106, d_date#107, d_month_seq#108, d_week_seq#109, d_quarter_seq#110, d_year#111, d_dow#112, d_moy#113, d_dom#114, d_qoy#115, d_fy_year#116, d_fy_quarter_seq#117, d_fy_week_seq#118, d_day_name#119, d_quarter_name#120, d_holiday#121, d_weekend#122, d_following_holiday#123, d_first_dom#124, d_last_dom#125, d_same_day_ly#126, d_same_day_lq#127, d_current_day#128, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "13" : {
          "sign" : -31555300,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 876588,
          "rowCount" : 73049,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [d_date_sk#77] "
        },
        "24" : {
          "sign" : -308280633,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 600,
          "rowCount" : 50,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [d_date_sk#105] "
        },
        "16" : {
          "sign" : 492861683,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 74370,
          "rowCount" : 402,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [s_store_sk#48, s_store_name#53, s_company_id#64, s_street_number#66, s_street_name#67, s_street_type#68, s_suite_number#69, s_city#70, s_county#71, s_state#72, s_zip#73] "
        },
        "5" : {
          "sign" : -779133797,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 76792882205,
          "rowCount" : 347479105,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: Inner, (((ss_ticket_number#13L = sr_ticket_number#36L) AND (ss_item_sk#6 = sr_item_sk#29)) AND (ss_customer_sk#7 = sr_customer_sk#30)) "
        },
        "10" : {
          "sign" : 1877918980,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 8027326208,
          "rowCount" : 250853944,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [ss_item_sk#6, ss_customer_sk#7, ss_store_sk#11, ss_ticket_number#13L, ss_sold_date_sk#27] "
        },
        "21" : {
          "sign" : 1916306481,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 750990996,
          "rowCount" : 26821107,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [sr_item_sk#29, sr_customer_sk#30, sr_ticket_number#36L, sr_returned_date_sk#47] "
        },
        "6" : {
          "sign" : 1629904931,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 116148460839,
          "rowCount" : 577853039,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [ss_item_sk#6, ss_customer_sk#7, ss_ticket_number#13L, ss_sold_date_sk#27, s_store_name#53, s_company_id#64, s_street_number#66, s_street_name#67, s_street_type#68, s_suite_number#69, s_city#70, s_county#71, s_state#72, s_zip#73] "
        },
        "1" : {
          "sign" : 303395684,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
          "sizeInBytes" : 76792882205,
          "rowCount" : 347479105,
          "isRuntime" : false,
          "predicate" : " (unknown) LocalLimit Arguments: 100 "
        },
        "17" : {
          "sign" : 1179596692,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 192558,
          "rowCount" : 402,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: isnotnull(s_store_sk#48) "
        },
        "25" : {
          "sign" : -247753979,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 12300,
          "rowCount" : 50,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: (((isnotnull(d_year#111) AND isnotnull(d_moy#113)) AND ((d_year#111 = 2000) AND (d_moy#113 = 9))) AND isnotnull(d_date_sk#105)) "
        },
        "14" : {
          "sign" : -253756672,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 17970054,
          "rowCount" : 73049,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: isnotnull(d_date_sk#77) "
        },
        "0" : {
          "sign" : -2063738465,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
          "sizeInBytes" : 23200,
          "rowCount" : 100,
          "isRuntime" : false,
          "predicate" : " (unknown) GlobalLimit Arguments: 100 "
        },
        "20" : {
          "sign" : -1316707497,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 862585440,
          "rowCount" : 26955795,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: Inner, (sr_returned_date_sk#47 = d_date_sk#105) "
        },
        "2" : {
          "sign" : -382977847,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
          "sizeInBytes" : 76792882205,
          "rowCount" : 347479105,
          "isRuntime" : false,
          "predicate" : " (unknown) Sort Arguments: [s_store_name#53 ASC NULLS FIRST, s_company_id#64 ASC NULLS FIRST, s_street_number#66 ASC NULLS FIRST, s_street_name#67 ASC NULLS FIRST, s_street_type#68 ASC NULLS FIRST, s_suite_number#69 ASC NULLS FIRST, s_city#70 ASC NULLS FIRST, s_county#71 ASC NULLS FIRST, s_state#72 ASC NULLS FIRST, s_zip#73 ASC NULLS FIRST], true "
        },
        "18" : {
          "sign" : -787714196,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 192558,
          "rowCount" : 402,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [s_store_sk#48, s_store_id#49, s_rec_start_date#50, s_rec_end_date#51, s_closed_date_sk#52, s_store_name#53, s_number_employees#54, s_floor_space#55, s_hours#56, s_manager#57, s_market_id#58, s_geography_class#59, s_market_desc#60, s_market_manager#61, s_division_id#62, s_division_name#63, s_company_id#64, s_company_name#65, s_street_number#66, s_street_name#67, s_street_type#68, s_suite_number#69, s_city#70, s_county#71, ... 5 more fields], `spark_catalog`.`tpcds_100`.`store`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "7" : {
          "sign" : 1821703554,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 120771285151,
          "rowCount" : 577853039,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: Inner, (ss_store_sk#11 = s_store_sk#48) "
        },
        "3" : {
          "sign" : 808181440,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
          "sizeInBytes" : 76792882205,
          "rowCount" : 347479105,
          "isRuntime" : false,
          "predicate" : " (unknown) Aggregate Arguments: [s_store_name#53, s_company_id#64, s_street_number#66, s_street_name#67, s_street_type#68, s_suite_number#69, s_city#70, s_county#71, s_state#72, s_zip#73], [s_store_name#53, s_company_id#64, s_street_number#66, s_street_name#67, s_street_type#68, s_suite_number#69, s_city#70, s_county#71, s_state#72, s_zip#73, sum(CASE WHEN ((sr_returned_date_sk#47 - ss_sold_date_sk#27) <= 30) THEN 1 ELSE 0 END) AS 30 days#0L, sum(CASE WHEN (((sr_returned_date_sk#47 - ss_sold_date_sk#27) > 30) AND ((sr_returned_date_sk#47 - ss_sold_date_sk#27) <= 60)) THEN 1 ELSE 0 END) AS 31-60 days#1L, sum(CASE WHEN (((sr_returned_date_sk#47 - ss_sold_date_sk#27) > 60) AND ((sr_returned_date_sk#47 - ss_sold_date_sk#27) <= 90)) THEN 1 ELSE 0 END) AS 61-90 days#2L, sum(CASE WHEN (((sr_returned_date_sk#47 - ss_sold_date_sk#27) > 90) AND ((sr_returned_date_sk#47 - ss_sold_date_sk#27) <= 120)) THEN 1 ELSE 0 END) AS 91-120 days#3L, sum(CASE WHEN ((sr_returned_date_sk#47 - ss_sold_date_sk#27) > 120) THEN 1 ELSE 0 END) AS >120 days#4L] "
        }
      },
      "links" : [ {
        "fromId" : 12,
        "fromName" : "LogicalRelation",
        "toId" : 11,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 11,
        "fromName" : "Filter",
        "toId" : 10,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 10,
        "fromName" : "Project",
        "toId" : 9,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 15,
        "fromName" : "LogicalRelation",
        "toId" : 14,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 14,
        "fromName" : "Filter",
        "toId" : 13,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 13,
        "fromName" : "Project",
        "toId" : 9,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 9,
        "fromName" : "Join",
        "toId" : 8,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 8,
        "fromName" : "Project",
        "toId" : 7,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 18,
        "fromName" : "LogicalRelation",
        "toId" : 17,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 17,
        "fromName" : "Filter",
        "toId" : 16,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 16,
        "fromName" : "Project",
        "toId" : 7,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 7,
        "fromName" : "Join",
        "toId" : 6,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 6,
        "fromName" : "Project",
        "toId" : 5,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 23,
        "fromName" : "LogicalRelation",
        "toId" : 22,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 26,
        "fromName" : "LogicalRelation",
        "toId" : 25,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 25,
        "fromName" : "Filter",
        "toId" : 24,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 24,
        "fromName" : "Project",
        "toId" : 22,
        "toName" : "Filter",
        "linkType" : "Subquery"
      }, {
        "fromId" : 22,
        "fromName" : "Filter",
        "toId" : 21,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 21,
        "fromName" : "Project",
        "toId" : 20,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 24,
        "fromName" : "Project",
        "toId" : 20,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 20,
        "fromName" : "Join",
        "toId" : 19,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 19,
        "fromName" : "Project",
        "toId" : 5,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 5,
        "fromName" : "Join",
        "toId" : 4,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 4,
        "fromName" : "Project",
        "toId" : 3,
        "toName" : "Aggregate",
        "linkType" : "Operator"
      }, {
        "fromId" : 3,
        "fromName" : "Aggregate",
        "toId" : 2,
        "toName" : "Sort",
        "linkType" : "Operator"
      }, {
        "fromId" : 2,
        "fromName" : "Sort",
        "toId" : 1,
        "toName" : "LocalLimit",
        "linkType" : "Operator"
      }, {
        "fromId" : 1,
        "fromName" : "LocalLimit",
        "toId" : 0,
        "toName" : "GlobalLimit",
        "linkType" : "Operator"
      } ],
      "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [s_store_name#53 ASC NULLS FIRST, s_company_id#64 ASC NULLS FIRST, s_street_number#66 ASC NULLS FIRST, s_street_name#67 ASC NULLS FIRST, s_street_type#68 ASC NULLS FIRST, s_suite_number#69 ASC NULLS FIRST, s_city#70 ASC NULLS FIRST, s_county#71 ASC NULLS FIRST, s_state#72 ASC NULLS FIRST, s_zip#73 ASC NULLS FIRST], true\n      +- Aggregate [s_store_name#53, s_company_id#64, s_street_number#66, s_street_name#67, s_street_type#68, s_suite_number#69, s_city#70, s_county#71, s_state#72, s_zip#73], [s_store_name#53, s_company_id#64, s_street_number#66, s_street_name#67, s_street_type#68, s_suite_number#69, s_city#70, s_county#71, s_state#72, s_zip#73, sum(CASE WHEN ((sr_returned_date_sk#47 - ss_sold_date_sk#27) <= 30) THEN 1 ELSE 0 END) AS 30 days#0L, sum(CASE WHEN (((sr_returned_date_sk#47 - ss_sold_date_sk#27) > 30) AND ((sr_returned_date_sk#47 - ss_sold_date_sk#27) <= 60)) THEN 1 ELSE 0 END) AS 31-60 days#1L, sum(CASE WHEN (((sr_returned_date_sk#47 - ss_sold_date_sk#27) > 60) AND ((sr_returned_date_sk#47 - ss_sold_date_sk#27) <= 90)) THEN 1 ELSE 0 END) AS 61-90 days#2L, sum(CASE WHEN (((sr_returned_date_sk#47 - ss_sold_date_sk#27) > 90) AND ((sr_returned_date_sk#47 - ss_sold_date_sk#27) <= 120)) THEN 1 ELSE 0 END) AS 91-120 days#3L, sum(CASE WHEN ((sr_returned_date_sk#47 - ss_sold_date_sk#27) > 120) THEN 1 ELSE 0 END) AS >120 days#4L]\n         +- Project [ss_sold_date_sk#27, sr_returned_date_sk#47, s_store_name#53, s_company_id#64, s_street_number#66, s_street_name#67, s_street_type#68, s_suite_number#69, s_city#70, s_county#71, s_state#72, s_zip#73]\n            +- Join Inner, (((ss_ticket_number#13L = sr_ticket_number#36L) AND (ss_item_sk#6 = sr_item_sk#29)) AND (ss_customer_sk#7 = sr_customer_sk#30))\n               :- Project [ss_item_sk#6, ss_customer_sk#7, ss_ticket_number#13L, ss_sold_date_sk#27, s_store_name#53, s_company_id#64, s_street_number#66, s_street_name#67, s_street_type#68, s_suite_number#69, s_city#70, s_county#71, s_state#72, s_zip#73]\n               :  +- Join Inner, (ss_store_sk#11 = s_store_sk#48)\n               :     :- Project [ss_item_sk#6, ss_customer_sk#7, ss_store_sk#11, ss_ticket_number#13L, ss_sold_date_sk#27]\n               :     :  +- Join Inner, (ss_sold_date_sk#27 = d_date_sk#77)\n               :     :     :- Project [ss_item_sk#6, ss_customer_sk#7, ss_store_sk#11, ss_ticket_number#13L, ss_sold_date_sk#27]\n               :     :     :  +- Filter ((((isnotnull(ss_ticket_number#13L) AND isnotnull(ss_item_sk#6)) AND isnotnull(ss_customer_sk#7)) AND isnotnull(ss_store_sk#11)) AND isnotnull(ss_sold_date_sk#27))\n               :     :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#5,ss_item_sk#6,ss_customer_sk#7,ss_cdemo_sk#8,ss_hdemo_sk#9,ss_addr_sk#10,ss_store_sk#11,ss_promo_sk#12,ss_ticket_number#13L,ss_quantity#14,ss_wholesale_cost#15,ss_list_price#16,ss_sales_price#17,ss_ext_discount_amt#18,ss_ext_sales_price#19,ss_ext_wholesale_cost#20,ss_ext_list_price#21,ss_ext_tax#22,ss_coupon_amt#23,ss_net_paid#24,ss_net_paid_inc_tax#25,ss_net_profit#26,ss_sold_date_sk#27] parquet\n               :     :     +- Project [d_date_sk#77]\n               :     :        +- Filter isnotnull(d_date_sk#77)\n               :     :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#77,d_date_id#78,d_date#79,d_month_seq#80,d_week_seq#81,d_quarter_seq#82,d_year#83,d_dow#84,d_moy#85,d_dom#86,d_qoy#87,d_fy_year#88,d_fy_quarter_seq#89,d_fy_week_seq#90,d_day_name#91,d_quarter_name#92,d_holiday#93,d_weekend#94,d_following_holiday#95,d_first_dom#96,d_last_dom#97,d_same_day_ly#98,d_same_day_lq#99,d_current_day#100,... 4 more fields] parquet\n               :     +- Project [s_store_sk#48, s_store_name#53, s_company_id#64, s_street_number#66, s_street_name#67, s_street_type#68, s_suite_number#69, s_city#70, s_county#71, s_state#72, s_zip#73]\n               :        +- Filter isnotnull(s_store_sk#48)\n               :           +- Relation spark_catalog.tpcds_100.store[s_store_sk#48,s_store_id#49,s_rec_start_date#50,s_rec_end_date#51,s_closed_date_sk#52,s_store_name#53,s_number_employees#54,s_floor_space#55,s_hours#56,s_manager#57,s_market_id#58,s_geography_class#59,s_market_desc#60,s_market_manager#61,s_division_id#62,s_division_name#63,s_company_id#64,s_company_name#65,s_street_number#66,s_street_name#67,s_street_type#68,s_suite_number#69,s_city#70,s_county#71,... 5 more fields] parquet\n               +- Project [sr_item_sk#29, sr_customer_sk#30, sr_ticket_number#36L, sr_returned_date_sk#47]\n                  +- Join Inner, (sr_returned_date_sk#47 = d_date_sk#105)\n                     :- Project [sr_item_sk#29, sr_customer_sk#30, sr_ticket_number#36L, sr_returned_date_sk#47]\n                     :  +- Filter ((((isnotnull(sr_ticket_number#36L) AND isnotnull(sr_item_sk#29)) AND isnotnull(sr_customer_sk#30)) AND isnotnull(sr_returned_date_sk#47)) AND dynamicpruning#158 [sr_returned_date_sk#47])\n                     :     :  +- Project [d_date_sk#105]\n                     :     :     +- Filter (((isnotnull(d_year#111) AND isnotnull(d_moy#113)) AND ((d_year#111 = 2000) AND (d_moy#113 = 9))) AND isnotnull(d_date_sk#105))\n                     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#105,d_date_id#106,d_date#107,d_month_seq#108,d_week_seq#109,d_quarter_seq#110,d_year#111,d_dow#112,d_moy#113,d_dom#114,d_qoy#115,d_fy_year#116,d_fy_quarter_seq#117,d_fy_week_seq#118,d_day_name#119,d_quarter_name#120,d_holiday#121,d_weekend#122,d_following_holiday#123,d_first_dom#124,d_last_dom#125,d_same_day_ly#126,d_same_day_lq#127,d_current_day#128,... 4 more fields] parquet\n                     :     +- Relation spark_catalog.tpcds_100.store_returns[sr_return_time_sk#28,sr_item_sk#29,sr_customer_sk#30,sr_cdemo_sk#31,sr_hdemo_sk#32,sr_addr_sk#33,sr_store_sk#34,sr_reason_sk#35,sr_ticket_number#36L,sr_return_quantity#37,sr_return_amt#38,sr_return_tax#39,sr_return_amt_inc_tax#40,sr_fee#41,sr_return_ship_cost#42,sr_refunded_cash#43,sr_reversed_charge#44,sr_store_credit#45,sr_net_loss#46,sr_returned_date_sk#47] parquet\n                     +- Project [d_date_sk#105]\n                        +- Filter (((isnotnull(d_year#111) AND isnotnull(d_moy#113)) AND ((d_year#111 = 2000) AND (d_moy#113 = 9))) AND isnotnull(d_date_sk#105))\n                           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#105,d_date_id#106,d_date#107,d_month_seq#108,d_week_seq#109,d_quarter_seq#110,d_year#111,d_dow#112,d_moy#113,d_dom#114,d_qoy#115,d_fy_year#116,d_fy_quarter_seq#117,d_fy_week_seq#118,d_day_name#119,d_quarter_name#120,d_holiday#121,d_weekend#122,d_following_holiday#123,d_first_dom#124,d_last_dom#125,d_same_day_ly#126,d_same_day_lq#127,d_current_day#128,... 4 more fields] parquet\n"
    },
    "IM" : {
      "inputSizeInBytes" : 45400632850,
      "inputRowCount" : 302985654
    },
    "PD" : { },
    "Configuration" : {
      "theta_c" : [ {
        "spark.executor.memory" : "1g"
      }, {
        "spark.executor.cores" : "1"
      }, {
        "spark.executor.instances" : "16"
      }, {
        "spark.default.parallelism" : "16"
      }, {
        "spark.reducer.maxSizeInFlight" : "48m"
      }, {
        "spark.shuffle.sort.bypassMergeThreshold" : "200"
      }, {
        "spark.shuffle.compress" : "true"
      }, {
        "spark.memory.fraction" : "0.6"
      } ],
      "theta_p" : [ {
        "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
      }, {
        "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
      }, {
        "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
      }, {
        "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
      }, {
        "spark.sql.shuffle.partitions" : "200"
      }, {
        "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
      }, {
        "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
      }, {
        "spark.sql.files.maxPartitionBytes" : "128MB"
      }, {
        "spark.sql.files.openCostInBytes" : "4MB"
      } ],
      "theta_s" : [ {
        "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
      }, {
        "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
      } ]
    }
  },
  "RuntimeLQPs" : {
    "4" : {
      "LQP" : {
        "operators" : {
          "4" : {
            "sign" : 849543387,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 36645740845445340,
            "rowCount" : 193892808706060,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_sold_date_sk#27, sr_returned_date_sk#47, s_store_name#53, s_company_id#64, s_street_number#66, s_street_name#67, s_street_type#68, s_suite_number#69, s_city#70, s_county#71, s_state#72, s_zip#73] "
          },
          "5" : {
            "sign" : 1868186267,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 42850310724039260,
            "rowCount" : 193892808706060,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (((ss_ticket_number#13L = sr_ticket_number#36L) AND (ss_item_sk#6 = sr_item_sk#29)) AND (ss_customer_sk#7 = sr_customer_sk#30)) "
          },
          "6" : {
            "sign" : 92086927,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 116148460839,
            "rowCount" : 577853039,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ss_item_sk#6, ss_customer_sk#7, ss_ticket_number#13L, ss_sold_date_sk#27, s_store_name#53, s_company_id#64, s_street_number#66, s_street_name#67, s_street_type#68, s_suite_number#69, s_city#70, s_county#71, s_state#72, s_zip#73], ShuffleQueryStage 4 "
          },
          "1" : {
            "sign" : 693393847,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
            "sizeInBytes" : 42850310724039260,
            "rowCount" : 193892808706060,
            "isRuntime" : false,
            "predicate" : " (unknown) LocalLimit Arguments: 100 "
          },
          "0" : {
            "sign" : -941825934,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
            "sizeInBytes" : 23200,
            "rowCount" : 100,
            "isRuntime" : false,
            "predicate" : " (unknown) GlobalLimit Arguments: 100 "
          },
          "2" : {
            "sign" : -1604809700,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 42850310724039260,
            "rowCount" : 193892808706060,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [s_store_name#53 ASC NULLS FIRST, s_company_id#64 ASC NULLS FIRST, s_street_number#66 ASC NULLS FIRST, s_street_name#67 ASC NULLS FIRST, s_street_type#68 ASC NULLS FIRST, s_suite_number#69 ASC NULLS FIRST, s_city#70 ASC NULLS FIRST, s_county#71 ASC NULLS FIRST, s_state#72 ASC NULLS FIRST, s_zip#73 ASC NULLS FIRST], true "
          },
          "7" : {
            "sign" : 1213756162,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 13421600,
            "rowCount" : 335540,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [sr_item_sk#29, sr_customer_sk#30, sr_ticket_number#36L, sr_returned_date_sk#47], ShuffleQueryStage 3 "
          },
          "3" : {
            "sign" : -609471469,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 42850310724039260,
            "rowCount" : 193892808706060,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [s_store_name#53, s_company_id#64, s_street_number#66, s_street_name#67, s_street_type#68, s_suite_number#69, s_city#70, s_county#71, s_state#72, s_zip#73], [s_store_name#53, s_company_id#64, s_street_number#66, s_street_name#67, s_street_type#68, s_suite_number#69, s_city#70, s_county#71, s_state#72, s_zip#73, sum(CASE WHEN ((sr_returned_date_sk#47 - ss_sold_date_sk#27) <= 30) THEN 1 ELSE 0 END) AS 30 days#159L, sum(CASE WHEN (((sr_returned_date_sk#47 - ss_sold_date_sk#27) > 30) AND ((sr_returned_date_sk#47 - ss_sold_date_sk#27) <= 60)) THEN 1 ELSE 0 END) AS 31-60 days#160L, sum(CASE WHEN (((sr_returned_date_sk#47 - ss_sold_date_sk#27) > 60) AND ((sr_returned_date_sk#47 - ss_sold_date_sk#27) <= 90)) THEN 1 ELSE 0 END) AS 61-90 days#161L, sum(CASE WHEN (((sr_returned_date_sk#47 - ss_sold_date_sk#27) > 90) AND ((sr_returned_date_sk#47 - ss_sold_date_sk#27) <= 120)) THEN 1 ELSE 0 END) AS 91-120 days#162L, sum(CASE WHEN ((sr_returned_date_sk#47 - ss_sold_date_sk#27) > 120) THEN 1 ELSE 0 END) AS >120 days#163L] "
          }
        },
        "links" : [ {
          "fromId" : 6,
          "fromName" : "LogicalQueryStage",
          "toId" : 5,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "LogicalQueryStage",
          "toId" : 5,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Join",
          "toId" : 4,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Project",
          "toId" : 3,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Aggregate",
          "toId" : 2,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "LocalLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "LocalLimit",
          "toId" : 0,
          "toName" : "GlobalLimit",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [s_store_name#53 ASC NULLS FIRST, s_company_id#64 ASC NULLS FIRST, s_street_number#66 ASC NULLS FIRST, s_street_name#67 ASC NULLS FIRST, s_street_type#68 ASC NULLS FIRST, s_suite_number#69 ASC NULLS FIRST, s_city#70 ASC NULLS FIRST, s_county#71 ASC NULLS FIRST, s_state#72 ASC NULLS FIRST, s_zip#73 ASC NULLS FIRST], true\n      +- Aggregate [s_store_name#53, s_company_id#64, s_street_number#66, s_street_name#67, s_street_type#68, s_suite_number#69, s_city#70, s_county#71, s_state#72, s_zip#73], [s_store_name#53, s_company_id#64, s_street_number#66, s_street_name#67, s_street_type#68, s_suite_number#69, s_city#70, s_county#71, s_state#72, s_zip#73, sum(CASE WHEN ((sr_returned_date_sk#47 - ss_sold_date_sk#27) <= 30) THEN 1 ELSE 0 END) AS 30 days#159L, sum(CASE WHEN (((sr_returned_date_sk#47 - ss_sold_date_sk#27) > 30) AND ((sr_returned_date_sk#47 - ss_sold_date_sk#27) <= 60)) THEN 1 ELSE 0 END) AS 31-60 days#160L, sum(CASE WHEN (((sr_returned_date_sk#47 - ss_sold_date_sk#27) > 60) AND ((sr_returned_date_sk#47 - ss_sold_date_sk#27) <= 90)) THEN 1 ELSE 0 END) AS 61-90 days#161L, sum(CASE WHEN (((sr_returned_date_sk#47 - ss_sold_date_sk#27) > 90) AND ((sr_returned_date_sk#47 - ss_sold_date_sk#27) <= 120)) THEN 1 ELSE 0 END) AS 91-120 days#162L, sum(CASE WHEN ((sr_returned_date_sk#47 - ss_sold_date_sk#27) > 120) THEN 1 ELSE 0 END) AS >120 days#163L]\n         +- Project [ss_sold_date_sk#27, sr_returned_date_sk#47, s_store_name#53, s_company_id#64, s_street_number#66, s_street_name#67, s_street_type#68, s_suite_number#69, s_city#70, s_county#71, s_state#72, s_zip#73]\n            +- Join Inner, (((ss_ticket_number#13L = sr_ticket_number#36L) AND (ss_item_sk#6 = sr_item_sk#29)) AND (ss_customer_sk#7 = sr_customer_sk#30))\n               :- LogicalQueryStage Project [ss_item_sk#6, ss_customer_sk#7, ss_ticket_number#13L, ss_sold_date_sk#27, s_store_name#53, s_company_id#64, s_street_number#66, s_street_name#67, s_street_type#68, s_suite_number#69, s_city#70, s_county#71, s_state#72, s_zip#73], ShuffleQueryStage 4\n               +- LogicalQueryStage Project [sr_item_sk#29, sr_customer_sk#30, sr_ticket_number#36L, sr_returned_date_sk#47], ShuffleQueryStage 3\n"
      },
      "IM" : {
        "inputSizeInBytes" : 116161882439,
        "inputRowCount" : 578188579
      },
      "PD" : {
        "0" : [ 33117, 33751, 34224, 34883, 33559, 34754, 34738, 34840, 33054, 34473, 35472, 33823, 35453, 33973, 35026, 35318, 34387, 33810, 33752, 34159, 35039, 35042, 34103, 35205, 34442, 33136, 34504, 33669, 34498, 36131, 34285, 35850, 34903, 36591, 36131, 35093, 36382, 32644, 35886, 35459, 32925, 33298, 35456, 35396, 34410, 35290, 36669, 35022, 34143, 35046, 35476, 33116, 34979, 34533, 32686, 35310, 34119, 34185, 34371, 34758, 35399, 34324, 34876, 36441, 33875, 33689, 34410, 35720, 35019, 34019, 35863, 35003, 35208, 34325, 34224, 35538, 36284, 34821, 34895, 35006, 33220, 33937, 36518, 33693, 34303, 36407, 33956, 34368, 34840, 34615, 37196, 34039, 35586, 35287, 36127, 34801, 33670, 33318, 34817, 34162, 34410, 34592, 35954, 36455, 34777, 34285, 35137, 34162, 34674, 33566, 35945, 34256, 34801, 33669, 35433, 34572, 33814, 36039, 34285, 34214, 35003, 34060, 35522, 35358, 34221, 35170, 34186, 33214, 34826, 34818, 34865, 35456, 33996, 35022, 35479, 35456, 35519, 35003, 33539, 34596, 35225, 33279, 33527, 36832, 34549, 34837, 35236, 33680, 35416, 35783, 33586, 36675, 33148, 35090, 33752, 35065, 34139, 34920, 34694, 33798, 33566, 34612, 35333, 33980, 34541, 34078, 35724, 35042, 36541, 35006, 33895, 34638, 34735, 34367, 34798, 33806, 33097, 34449, 35845, 35929, 34636, 33128, 35658, 35188, 36059, 34425, 34553, 35954, 35720, 34573, 34368, 37171, 34869, 34592, 34644, 35339, 33875, 36216, 34690, 33787 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 16,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "StartTimeInMs" : 1702227032290,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 91579,
        "IOBytes" : {
          "Total" : 44488916367,
          "Details" : {
            "IR" : 1607394817,
            "IW" : 0,
            "SR" : 21444073520,
            "SW" : 21437448030
          }
        }
      }
    },
    "5" : {
      "LQP" : {
        "operators" : {
          "4" : {
            "sign" : 849543387,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 17805726381820000,
            "rowCount" : 89028631909100,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_sold_date_sk#27, sr_returned_date_sk#47, s_store_name#53, s_company_id#64, s_street_number#66, s_street_name#67, s_street_type#68, s_suite_number#69, s_city#70, s_county#71, s_state#72, s_zip#73] "
          },
          "5" : {
            "sign" : 1868186267,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 20654642602911200,
            "rowCount" : 89028631909100,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (((ss_ticket_number#13L = sr_ticket_number#36L) AND (ss_item_sk#6 = sr_item_sk#29)) AND (ss_customer_sk#7 = sr_customer_sk#30)) "
          },
          "6" : {
            "sign" : 92086927,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 56286617608,
            "rowCount" : 265329415,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ss_item_sk#6, ss_customer_sk#7, ss_ticket_number#13L, ss_sold_date_sk#27, s_store_name#53, s_company_id#64, s_street_number#66, s_street_name#67, s_street_type#68, s_suite_number#69, s_city#70, s_county#71, s_state#72, s_zip#73], ShuffleQueryStage 4 "
          },
          "1" : {
            "sign" : 693393847,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
            "sizeInBytes" : 20654642602911200,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) LocalLimit Arguments: 100 "
          },
          "0" : {
            "sign" : -941825934,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
            "sizeInBytes" : 23200,
            "rowCount" : 100,
            "isRuntime" : false,
            "predicate" : " (unknown) GlobalLimit Arguments: 100 "
          },
          "2" : {
            "sign" : -1604809700,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 20654642602911200,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [s_store_name#53 ASC NULLS FIRST, s_company_id#64 ASC NULLS FIRST, s_street_number#66 ASC NULLS FIRST, s_street_name#67 ASC NULLS FIRST, s_street_type#68 ASC NULLS FIRST, s_suite_number#69 ASC NULLS FIRST, s_city#70 ASC NULLS FIRST, s_county#71 ASC NULLS FIRST, s_state#72 ASC NULLS FIRST, s_zip#73 ASC NULLS FIRST], true "
          },
          "7" : {
            "sign" : 1213756162,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 13421600,
            "rowCount" : 335540,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [sr_item_sk#29, sr_customer_sk#30, sr_ticket_number#36L, sr_returned_date_sk#47], ShuffleQueryStage 3 "
          },
          "3" : {
            "sign" : -609471469,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 20654642602911200,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [s_store_name#53, s_company_id#64, s_street_number#66, s_street_name#67, s_street_type#68, s_suite_number#69, s_city#70, s_county#71, s_state#72, s_zip#73], [s_store_name#53, s_company_id#64, s_street_number#66, s_street_name#67, s_street_type#68, s_suite_number#69, s_city#70, s_county#71, s_state#72, s_zip#73, sum(CASE WHEN ((sr_returned_date_sk#47 - ss_sold_date_sk#27) <= 30) THEN 1 ELSE 0 END) AS 30 days#159L, sum(CASE WHEN (((sr_returned_date_sk#47 - ss_sold_date_sk#27) > 30) AND ((sr_returned_date_sk#47 - ss_sold_date_sk#27) <= 60)) THEN 1 ELSE 0 END) AS 31-60 days#160L, sum(CASE WHEN (((sr_returned_date_sk#47 - ss_sold_date_sk#27) > 60) AND ((sr_returned_date_sk#47 - ss_sold_date_sk#27) <= 90)) THEN 1 ELSE 0 END) AS 61-90 days#161L, sum(CASE WHEN (((sr_returned_date_sk#47 - ss_sold_date_sk#27) > 90) AND ((sr_returned_date_sk#47 - ss_sold_date_sk#27) <= 120)) THEN 1 ELSE 0 END) AS 91-120 days#162L, sum(CASE WHEN ((sr_returned_date_sk#47 - ss_sold_date_sk#27) > 120) THEN 1 ELSE 0 END) AS >120 days#163L] "
          }
        },
        "links" : [ {
          "fromId" : 6,
          "fromName" : "LogicalQueryStage",
          "toId" : 5,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "LogicalQueryStage",
          "toId" : 5,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Join",
          "toId" : 4,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Project",
          "toId" : 3,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Aggregate",
          "toId" : 2,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "LocalLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "LocalLimit",
          "toId" : 0,
          "toName" : "GlobalLimit",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [s_store_name#53 ASC NULLS FIRST, s_company_id#64 ASC NULLS FIRST, s_street_number#66 ASC NULLS FIRST, s_street_name#67 ASC NULLS FIRST, s_street_type#68 ASC NULLS FIRST, s_suite_number#69 ASC NULLS FIRST, s_city#70 ASC NULLS FIRST, s_county#71 ASC NULLS FIRST, s_state#72 ASC NULLS FIRST, s_zip#73 ASC NULLS FIRST], true\n      +- Aggregate [s_store_name#53, s_company_id#64, s_street_number#66, s_street_name#67, s_street_type#68, s_suite_number#69, s_city#70, s_county#71, s_state#72, s_zip#73], [s_store_name#53, s_company_id#64, s_street_number#66, s_street_name#67, s_street_type#68, s_suite_number#69, s_city#70, s_county#71, s_state#72, s_zip#73, sum(CASE WHEN ((sr_returned_date_sk#47 - ss_sold_date_sk#27) <= 30) THEN 1 ELSE 0 END) AS 30 days#159L, sum(CASE WHEN (((sr_returned_date_sk#47 - ss_sold_date_sk#27) > 30) AND ((sr_returned_date_sk#47 - ss_sold_date_sk#27) <= 60)) THEN 1 ELSE 0 END) AS 31-60 days#160L, sum(CASE WHEN (((sr_returned_date_sk#47 - ss_sold_date_sk#27) > 60) AND ((sr_returned_date_sk#47 - ss_sold_date_sk#27) <= 90)) THEN 1 ELSE 0 END) AS 61-90 days#161L, sum(CASE WHEN (((sr_returned_date_sk#47 - ss_sold_date_sk#27) > 90) AND ((sr_returned_date_sk#47 - ss_sold_date_sk#27) <= 120)) THEN 1 ELSE 0 END) AS 91-120 days#162L, sum(CASE WHEN ((sr_returned_date_sk#47 - ss_sold_date_sk#27) > 120) THEN 1 ELSE 0 END) AS >120 days#163L]\n         +- Project [ss_sold_date_sk#27, sr_returned_date_sk#47, s_store_name#53, s_company_id#64, s_street_number#66, s_street_name#67, s_street_type#68, s_suite_number#69, s_city#70, s_county#71, s_state#72, s_zip#73]\n            +- Join Inner, (((ss_ticket_number#13L = sr_ticket_number#36L) AND (ss_item_sk#6 = sr_item_sk#29)) AND (ss_customer_sk#7 = sr_customer_sk#30))\n               :- LogicalQueryStage Project [ss_item_sk#6, ss_customer_sk#7, ss_ticket_number#13L, ss_sold_date_sk#27, s_store_name#53, s_company_id#64, s_street_number#66, s_street_name#67, s_street_type#68, s_suite_number#69, s_city#70, s_county#71, s_state#72, s_zip#73], ShuffleQueryStage 4\n               +- LogicalQueryStage Project [sr_item_sk#29, sr_customer_sk#30, sr_ticket_number#36L, sr_returned_date_sk#47], ShuffleQueryStage 3\n"
      },
      "IM" : {
        "inputSizeInBytes" : 56300039208,
        "inputRowCount" : 265664955
      },
      "PD" : {
        "1" : [ 111911483, 112247611, 111968183, 112051197, 111994497, 112311461, 111900261, 111760547, 111760547, 111843561, 112145433, 111926575, 111836015, 111911483, 111701579, 111986951, 111892715, 112145433, 111879617, 111911483, 111968183, 112285147, 111919029, 112126665, 111968183, 112085057, 112077511, 112084372, 111926575, 112292693, 112062419, 112190911, 111843561, 111903937, 111994497, 112228447, 112062419, 111907807, 112002043, 112256363, 112160525, 111986951, 112217225, 112402021, 112077511, 111994497, 112141757, 112036105, 112062419, 112002043, 112126665, 112485035, 112002043, 112002043, 111926575, 111790933, 112051197, 112368161, 112356939, 112001358, 111925890, 112002043, 112335507, 111994497, 112375707, 111960637, 112480674, 112058743, 112183365, 112073150, 112311461, 111760547, 111911483, 112235993, 112085057, 112091918, 112115964, 112058743, 111960730, 112145433, 112092603, 111926575, 111900261, 111975729, 112134211, 112051197, 111987347, 111968183, 112168071, 112228447, 111986951, 112002043, 111900261, 112292693, 112145433, 111903937, 112183365, 112228447, 112202133, 112145433, 111836015, 111734233, 111767408, 112148618, 111892715, 112134211, 112051197, 111993812, 112202133, 112209679, 112043651, 111836015, 112077511, 111602065, 112160525, 112008904, 112202133, 111836015, 112285147, 111843561, 112259915, 112424861, 112069965, 112316739, 112326553, 112077511, 111843561, 112209679, 111892715, 112107897, 112292693, 112323079, 112069965, 111836015, 112084372, 112026089, 111941667, 111836015, 112077511, 112085057, 111994497, 111986951, 111836015, 112285147, 111975729, 112292693, 112319007, 112152979, 112002043, 111692625, 111994497, 111892715, 111990821, 112190911, 111968183, 112101557, 111828469, 112168071, 112091918, 111919029, 111873947, 112258833, 112085057, 112069965, 112209679, 111903937, 112217225, 111960637, 111911483, 111919029, 112077511, 112141757, 112126665, 112319007, 111994497, 112257946, 112062419, 112066289, 111624703, 112002043, 111990821, 111919029, 111843561, 111828469, 112002043, 112077511, 112141757, 111900261, 111994497, 111892715, 111925890, 111919029, 111836015, 111836015, 111982590, 112009589, 112153896, 111836015, 111979405, 111911483 ],
        "0" : [ 33117, 33751, 34224, 34883, 33559, 34754, 34738, 34840, 33054, 34473, 35472, 33823, 35453, 33973, 35026, 35318, 34387, 33810, 33752, 34159, 35039, 35042, 34103, 35205, 34442, 33136, 34504, 33669, 34498, 36131, 34285, 35850, 34903, 36591, 36131, 35093, 36382, 32644, 35886, 35459, 32925, 33298, 35456, 35396, 34410, 35290, 36669, 35022, 34143, 35046, 35476, 33116, 34979, 34533, 32686, 35310, 34119, 34185, 34371, 34758, 35399, 34324, 34876, 36441, 33875, 33689, 34410, 35720, 35019, 34019, 35863, 35003, 35208, 34325, 34224, 35538, 36284, 34821, 34895, 35006, 33220, 33937, 36518, 33693, 34303, 36407, 33956, 34368, 34840, 34615, 37196, 34039, 35586, 35287, 36127, 34801, 33670, 33318, 34817, 34162, 34410, 34592, 35954, 36455, 34777, 34285, 35137, 34162, 34674, 33566, 35945, 34256, 34801, 33669, 35433, 34572, 33814, 36039, 34285, 34214, 35003, 34060, 35522, 35358, 34221, 35170, 34186, 33214, 34826, 34818, 34865, 35456, 33996, 35022, 35479, 35456, 35519, 35003, 33539, 34596, 35225, 33279, 33527, 36832, 34549, 34837, 35236, 33680, 35416, 35783, 33586, 36675, 33148, 35090, 33752, 35065, 34139, 34920, 34694, 33798, 33566, 34612, 35333, 33980, 34541, 34078, 35724, 35042, 36541, 35006, 33895, 34638, 34735, 34367, 34798, 33806, 33097, 34449, 35845, 35929, 34636, 33128, 35658, 35188, 36059, 34425, 34553, 35954, 35720, 34573, 34368, 37171, 34869, 34592, 34644, 35339, 33875, 36216, 34690, 33787 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "StartTimeInMs" : 1702227056957,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 66912,
        "IOBytes" : {
          "Total" : 21451444256,
          "Details" : {
            "IR" : 0,
            "IW" : 0,
            "SR" : 21444073520,
            "SW" : 7370736
          }
        }
      }
    },
    "6" : {
      "LQP" : {
        "operators" : {
          "0" : {
            "sign" : 86318076,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
            "sizeInBytes" : 23200,
            "rowCount" : 100,
            "isRuntime" : false,
            "predicate" : " (unknown) GlobalLimit Arguments: 100 "
          },
          "1" : {
            "sign" : 786785891,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
            "sizeInBytes" : 8828480,
            "rowCount" : 40104,
            "isRuntime" : true,
            "predicate" : " (unknown) LocalLimit Arguments: 100 "
          },
          "2" : {
            "sign" : -803096942,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 8828480,
            "rowCount" : 40104,
            "isRuntime" : true,
            "predicate" : " (unknown) Sort Arguments: [s_store_name#53 ASC NULLS FIRST, s_company_id#64 ASC NULLS FIRST, s_street_number#66 ASC NULLS FIRST, s_street_name#67 ASC NULLS FIRST, s_street_type#68 ASC NULLS FIRST, s_suite_number#69 ASC NULLS FIRST, s_city#70 ASC NULLS FIRST, s_county#71 ASC NULLS FIRST, s_state#72 ASC NULLS FIRST, s_zip#73 ASC NULLS FIRST], true "
          },
          "3" : {
            "sign" : -1979533689,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 8828480,
            "rowCount" : 40104,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [s_store_name#53, s_company_id#64, s_street_number#66, s_street_name#67, s_street_type#68, s_suite_number#69, s_city#70, s_county#71, s_state#72, s_zip#73], [s_store_name#53, s_company_id#64, s_street_number#66, s_street_name#67, s_street_type#68, s_suite_number#69, s_city#70, s_county#71, s_state#72, s_zip#73, sum(CASE WHEN ((sr_returned_date_sk#47 - ss_sold_date_sk#27) <= 30) THEN 1 ELSE 0 END) AS 30 days#159L, sum(CASE WHEN (((sr_returned_date_sk#47 - ss_sold_date_sk#27) > 30) AND ((sr_returned_date_sk#47 - ss_sold_date_sk#27) <= 60)) THEN 1 ELSE 0 END) AS 31-60 days#160L, sum(CASE WHEN (((sr_returned_date_sk#47 - ss_sold_date_sk#27) > 60) AND ((sr_returned_date_sk#47 - ss_sold_date_sk#27) <= 90)) THEN 1 ELSE 0 END) AS 61-90 days#161L, sum(CASE WHEN (((sr_returned_date_sk#47 - ss_sold_date_sk#27) > 90) AND ((sr_returned_date_sk#47 - ss_sold_date_sk#27) <= 120)) THEN 1 ELSE 0 END) AS 91-120 days#162L, sum(CASE WHEN ((sr_returned_date_sk#47 - ss_sold_date_sk#27) > 120) THEN 1 ELSE 0 END) AS >120 days#163L], HashAggregate(keys=[s_store_name#53, s_company_id#64, s_street_number#66, s_street_name#67, s_street_type#68, s_suite_number#69, s_city#70, s_county#71, s_state#72, s_zip#73], functions=[sum(CASE WHEN ((sr_returned_date_sk#47 - ss_sold_date_sk#27) <= 30) THEN 1 ELSE 0 END), sum(CASE WHEN (((sr_returned_date_sk#47 - ss_sold_date_sk#27) > 30) AND ((sr_returned_date_sk#47 - ss_sold_date_sk#27) <= 60)) THEN 1 ELSE 0 END), sum(CASE WHEN (((sr_returned_date_sk#47 - ss_sold_date_sk#27) > 60) AND ((sr_returned_date_sk#47 - ss_sold_date_sk#27) <= 90)) THEN 1 ELSE 0 END), sum(CASE WHEN (((sr_returned_date_sk#47 - ss_sold_date_sk#27) > 90) AND ((sr_returned_date_sk#47 - ss_sold_date_sk#27) <= 120)) THEN 1 ELSE 0 END), sum(CASE WHEN ((sr_returned_date_sk#47 - ss_sold_date_sk#27) > 120) THEN 1 ELSE 0 END)]) "
          }
        },
        "links" : [ {
          "fromId" : 3,
          "fromName" : "LogicalQueryStage",
          "toId" : 2,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "LocalLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "LocalLimit",
          "toId" : 0,
          "toName" : "GlobalLimit",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [s_store_name#53 ASC NULLS FIRST, s_company_id#64 ASC NULLS FIRST, s_street_number#66 ASC NULLS FIRST, s_street_name#67 ASC NULLS FIRST, s_street_type#68 ASC NULLS FIRST, s_suite_number#69 ASC NULLS FIRST, s_city#70 ASC NULLS FIRST, s_county#71 ASC NULLS FIRST, s_state#72 ASC NULLS FIRST, s_zip#73 ASC NULLS FIRST], true\n      +- LogicalQueryStage Aggregate [s_store_name#53, s_company_id#64, s_street_number#66, s_street_name#67, s_street_type#68, s_suite_number#69, s_city#70, s_county#71, s_state#72, s_zip#73], [s_store_name#53, s_company_id#64, s_street_number#66, s_street_name#67, s_street_type#68, s_suite_number#69, s_city#70, s_county#71, s_state#72, s_zip#73, sum(CASE WHEN ((sr_returned_date_sk#47 - ss_sold_date_sk#27) <= 30) THEN 1 ELSE 0 END) AS 30 days#159L, sum(CASE WHEN (((sr_returned_date_sk#47 - ss_sold_date_sk#27) > 30) AND ((sr_returned_date_sk#47 - ss_sold_date_sk#27) <= 60)) THEN 1 ELSE 0 END) AS 31-60 days#160L, sum(CASE WHEN (((sr_returned_date_sk#47 - ss_sold_date_sk#27) > 60) AND ((sr_returned_date_sk#47 - ss_sold_date_sk#27) <= 90)) THEN 1 ELSE 0 END) AS 61-90 days#161L, sum(CASE WHEN (((sr_returned_date_sk#47 - ss_sold_date_sk#27) > 90) AND ((sr_returned_date_sk#47 - ss_sold_date_sk#27) <= 120)) THEN 1 ELSE 0 END) AS 91-120 days#162L, sum(CASE WHEN ((sr_returned_date_sk#47 - ss_sold_date_sk#27) > 120) THEN 1 ELSE 0 END) AS >120 days#163L], HashAggregate(keys=[s_store_name#53, s_company_id#64, s_street_number#66, s_street_name#67, s_street_type#68, s_suite_number#69, s_city#70, s_county#71, s_state#72, s_zip#73], functions=[sum(CASE WHEN ((sr_returned_date_sk#47 - ss_sold_date_sk#27) <= 30) THEN 1 ELSE 0 END), sum(CASE WHEN (((sr_returned_date_sk#47 - ss_sold_date_sk#27) > 30) AND ((sr_returned_date_sk#47 - ss_sold_date_sk#27) <= 60)) THEN 1 ELSE 0 END), sum(CASE WHEN (((sr_returned_date_sk#47 - ss_sold_date_sk#27) > 60) AND ((sr_returned_date_sk#47 - ss_sold_date_sk#27) <= 90)) THEN 1 ELSE 0 END), sum(CASE WHEN (((sr_returned_date_sk#47 - ss_sold_date_sk#27) > 90) AND ((sr_returned_date_sk#47 - ss_sold_date_sk#27) <= 120)) THEN 1 ELSE 0 END), sum(CASE WHEN ((sr_returned_date_sk#47 - ss_sold_date_sk#27) > 120) THEN 1 ELSE 0 END)])\n"
      },
      "IM" : {
        "inputSizeInBytes" : 8828480,
        "inputRowCount" : 40104
      },
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "StartTimeInMs" : 1702227123435,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 434,
        "IOBytes" : {
          "Total" : 7370736,
          "Details" : {
            "IR" : 0,
            "IW" : 0,
            "SR" : 7370736,
            "SW" : 0
          }
        }
      }
    },
    "1" : {
      "LQP" : {
        "operators" : {
          "12" : {
            "sign" : 1608590622,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#5, ss_item_sk#6, ss_customer_sk#7, ss_cdemo_sk#8, ss_hdemo_sk#9, ss_addr_sk#10, ss_store_sk#11, ss_promo_sk#12, ss_ticket_number#13L, ss_quantity#14, ss_wholesale_cost#15, ss_list_price#16, ss_sales_price#17, ss_ext_discount_amt#18, ss_ext_sales_price#19, ss_ext_wholesale_cost#20, ss_ext_list_price#21, ss_ext_tax#22, ss_coupon_amt#23, ss_net_paid#24, ss_net_paid_inc_tax#25, ss_net_profit#26, ss_sold_date_sk#27], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "8" : {
            "sign" : 1797388241,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 8497298720,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#6, ss_customer_sk#7, ss_store_sk#11, ss_ticket_number#13L, ss_sold_date_sk#27] "
          },
          "19" : {
            "sign" : 424936361,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 3557606528,
            "rowCount" : 27793801,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [sr_return_time_sk#28, sr_item_sk#29, sr_customer_sk#30, sr_cdemo_sk#31, sr_hdemo_sk#32, sr_addr_sk#33, sr_store_sk#34, sr_reason_sk#35, sr_ticket_number#36L, sr_return_quantity#37, sr_return_amt#38, sr_return_tax#39, sr_return_amt_inc_tax#40, sr_fee#41, sr_return_ship_cost#42, sr_refunded_cash#43, sr_reversed_charge#44, sr_store_credit#45, sr_net_loss#46, sr_returned_date_sk#47], `spark_catalog`.`tpcds_100`.`store_returns`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "23" : {
            "sign" : -1097222997,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 600,
            "rowCount" : 50,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#164], BroadcastQueryStage 2 "
          },
          "4" : {
            "sign" : 1521341189,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 69495821000,
            "rowCount" : 347479105,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_sold_date_sk#27, sr_returned_date_sk#47, s_store_name#53, s_company_id#64, s_street_number#66, s_street_name#67, s_street_type#68, s_suite_number#69, s_city#70, s_county#71, s_state#72, s_zip#73] "
          },
          "15" : {
            "sign" : -1084964677,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 754762260,
            "rowCount" : 26955795,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [sr_item_sk#29, sr_customer_sk#30, sr_ticket_number#36L, sr_returned_date_sk#47] "
          },
          "11" : {
            "sign" : 2116338474,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 38129799488,
            "rowCount" : 250853944,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((((isnotnull(ss_ticket_number#13L) AND isnotnull(ss_item_sk#6)) AND isnotnull(ss_customer_sk#7)) AND isnotnull(ss_store_sk#11)) AND isnotnull(ss_sold_date_sk#27)) "
          },
          "9" : {
            "sign" : 669822817,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 9559461060,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#27 = d_date_sk#77) "
          },
          "22" : {
            "sign" : -148535994,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#164, d_date_id#165, d_date#166, d_month_seq#167, d_week_seq#168, d_quarter_seq#169, d_year#170, d_dow#171, d_moy#172, d_dom#173, d_qoy#174, d_fy_year#175, d_fy_quarter_seq#176, d_fy_week_seq#177, d_day_name#178, d_quarter_name#179, d_holiday#180, d_weekend#181, d_following_holiday#182, d_first_dom#183, d_last_dom#184, d_same_day_ly#185, d_same_day_lq#186, d_current_day#187, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "13" : {
            "sign" : -942801012,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 876588,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#77], BroadcastQueryStage 0 "
          },
          "16" : {
            "sign" : -1839722098,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 862585440,
            "rowCount" : 26955795,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (sr_returned_date_sk#47 = d_date_sk#164) "
          },
          "5" : {
            "sign" : 1235531593,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 80615152360,
            "rowCount" : 347479105,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (((ss_ticket_number#13L = sr_ticket_number#36L) AND (ss_item_sk#6 = sr_item_sk#29)) AND (ss_customer_sk#7 = sr_customer_sk#30)) "
          },
          "10" : {
            "sign" : 1877918980,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 8027326208,
            "rowCount" : 250853944,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#6, ss_customer_sk#7, ss_store_sk#11, ss_ticket_number#13L, ss_sold_date_sk#27] "
          },
          "21" : {
            "sign" : 1182374458,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 12300,
            "rowCount" : 50,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(d_year#170) AND isnotnull(d_moy#172)) AND ((d_year#170 = 2000) AND (d_moy#172 = 9))) AND isnotnull(d_date_sk#164)) "
          },
          "6" : {
            "sign" : -1737945076,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 22630430816040,
            "rowCount" : 106747315170,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#6, ss_customer_sk#7, ss_ticket_number#13L, ss_sold_date_sk#27, s_store_name#53, s_company_id#64, s_street_number#66, s_street_name#67, s_street_type#68, s_suite_number#69, s_city#70, s_county#71, s_state#72, s_zip#73] "
          },
          "1" : {
            "sign" : 1808261477,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
            "sizeInBytes" : 80615152360,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) LocalLimit Arguments: 100 "
          },
          "17" : {
            "sign" : 402042207,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 750990996,
            "rowCount" : 26821107,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [sr_item_sk#29, sr_customer_sk#30, sr_ticket_number#36L, sr_returned_date_sk#47] "
          },
          "14" : {
            "sign" : -1951724776,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1051792,
            "rowCount" : 402,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [s_store_sk#48, s_store_name#53, s_company_id#64, s_street_number#66, s_street_name#67, s_street_type#68, s_suite_number#69, s_city#70, s_county#71, s_state#72, s_zip#73], BroadcastQueryStage 1 "
          },
          "0" : {
            "sign" : -1731112292,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
            "sizeInBytes" : 23200,
            "rowCount" : 100,
            "isRuntime" : false,
            "predicate" : " (unknown) GlobalLimit Arguments: 100 "
          },
          "20" : {
            "sign" : -1636383261,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 600,
            "rowCount" : 50,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#164] "
          },
          "2" : {
            "sign" : 213107654,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 80615152360,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [s_store_name#53 ASC NULLS FIRST, s_company_id#64 ASC NULLS FIRST, s_street_number#66 ASC NULLS FIRST, s_street_name#67 ASC NULLS FIRST, s_street_type#68 ASC NULLS FIRST, s_suite_number#69 ASC NULLS FIRST, s_city#70 ASC NULLS FIRST, s_county#71 ASC NULLS FIRST, s_state#72 ASC NULLS FIRST, s_zip#73 ASC NULLS FIRST], true "
          },
          "18" : {
            "sign" : 1237141124,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 3433101696,
            "rowCount" : 26821107,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((((isnotnull(sr_ticket_number#36L) AND isnotnull(sr_item_sk#29)) AND isnotnull(sr_customer_sk#30)) AND isnotnull(sr_returned_date_sk#47)) AND dynamicpruning#213 [sr_returned_date_sk#47]) "
          },
          "7" : {
            "sign" : 1403258161,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 23484409337400,
            "rowCount" : 106747315170,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_store_sk#11 = s_store_sk#48) "
          },
          "3" : {
            "sign" : 748902465,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 80615152360,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [s_store_name#53, s_company_id#64, s_street_number#66, s_street_name#67, s_street_type#68, s_suite_number#69, s_city#70, s_county#71, s_state#72, s_zip#73], [s_store_name#53, s_company_id#64, s_street_number#66, s_street_name#67, s_street_type#68, s_suite_number#69, s_city#70, s_county#71, s_state#72, s_zip#73, sum(CASE WHEN ((sr_returned_date_sk#47 - ss_sold_date_sk#27) <= 30) THEN 1 ELSE 0 END) AS 30 days#159L, sum(CASE WHEN (((sr_returned_date_sk#47 - ss_sold_date_sk#27) > 30) AND ((sr_returned_date_sk#47 - ss_sold_date_sk#27) <= 60)) THEN 1 ELSE 0 END) AS 31-60 days#160L, sum(CASE WHEN (((sr_returned_date_sk#47 - ss_sold_date_sk#27) > 60) AND ((sr_returned_date_sk#47 - ss_sold_date_sk#27) <= 90)) THEN 1 ELSE 0 END) AS 61-90 days#161L, sum(CASE WHEN (((sr_returned_date_sk#47 - ss_sold_date_sk#27) > 90) AND ((sr_returned_date_sk#47 - ss_sold_date_sk#27) <= 120)) THEN 1 ELSE 0 END) AS 91-120 days#162L, sum(CASE WHEN ((sr_returned_date_sk#47 - ss_sold_date_sk#27) > 120) THEN 1 ELSE 0 END) AS >120 days#163L] "
          }
        },
        "links" : [ {
          "fromId" : 12,
          "fromName" : "LogicalRelation",
          "toId" : 11,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "Filter",
          "toId" : 10,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "Project",
          "toId" : 9,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 13,
          "fromName" : "LogicalQueryStage",
          "toId" : 9,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "Join",
          "toId" : 8,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "Project",
          "toId" : 7,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 14,
          "fromName" : "LogicalQueryStage",
          "toId" : 7,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Join",
          "toId" : 6,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Project",
          "toId" : 5,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 19,
          "fromName" : "LogicalRelation",
          "toId" : 18,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 22,
          "fromName" : "LogicalRelation",
          "toId" : 21,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 21,
          "fromName" : "Filter",
          "toId" : 20,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 20,
          "fromName" : "Project",
          "toId" : 18,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 18,
          "fromName" : "Filter",
          "toId" : 17,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 17,
          "fromName" : "Project",
          "toId" : 16,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 23,
          "fromName" : "LogicalQueryStage",
          "toId" : 16,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 16,
          "fromName" : "Join",
          "toId" : 15,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 15,
          "fromName" : "Project",
          "toId" : 5,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Join",
          "toId" : 4,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Project",
          "toId" : 3,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Aggregate",
          "toId" : 2,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "LocalLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "LocalLimit",
          "toId" : 0,
          "toName" : "GlobalLimit",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [s_store_name#53 ASC NULLS FIRST, s_company_id#64 ASC NULLS FIRST, s_street_number#66 ASC NULLS FIRST, s_street_name#67 ASC NULLS FIRST, s_street_type#68 ASC NULLS FIRST, s_suite_number#69 ASC NULLS FIRST, s_city#70 ASC NULLS FIRST, s_county#71 ASC NULLS FIRST, s_state#72 ASC NULLS FIRST, s_zip#73 ASC NULLS FIRST], true\n      +- Aggregate [s_store_name#53, s_company_id#64, s_street_number#66, s_street_name#67, s_street_type#68, s_suite_number#69, s_city#70, s_county#71, s_state#72, s_zip#73], [s_store_name#53, s_company_id#64, s_street_number#66, s_street_name#67, s_street_type#68, s_suite_number#69, s_city#70, s_county#71, s_state#72, s_zip#73, sum(CASE WHEN ((sr_returned_date_sk#47 - ss_sold_date_sk#27) <= 30) THEN 1 ELSE 0 END) AS 30 days#159L, sum(CASE WHEN (((sr_returned_date_sk#47 - ss_sold_date_sk#27) > 30) AND ((sr_returned_date_sk#47 - ss_sold_date_sk#27) <= 60)) THEN 1 ELSE 0 END) AS 31-60 days#160L, sum(CASE WHEN (((sr_returned_date_sk#47 - ss_sold_date_sk#27) > 60) AND ((sr_returned_date_sk#47 - ss_sold_date_sk#27) <= 90)) THEN 1 ELSE 0 END) AS 61-90 days#161L, sum(CASE WHEN (((sr_returned_date_sk#47 - ss_sold_date_sk#27) > 90) AND ((sr_returned_date_sk#47 - ss_sold_date_sk#27) <= 120)) THEN 1 ELSE 0 END) AS 91-120 days#162L, sum(CASE WHEN ((sr_returned_date_sk#47 - ss_sold_date_sk#27) > 120) THEN 1 ELSE 0 END) AS >120 days#163L]\n         +- Project [ss_sold_date_sk#27, sr_returned_date_sk#47, s_store_name#53, s_company_id#64, s_street_number#66, s_street_name#67, s_street_type#68, s_suite_number#69, s_city#70, s_county#71, s_state#72, s_zip#73]\n            +- Join Inner, (((ss_ticket_number#13L = sr_ticket_number#36L) AND (ss_item_sk#6 = sr_item_sk#29)) AND (ss_customer_sk#7 = sr_customer_sk#30))\n               :- Project [ss_item_sk#6, ss_customer_sk#7, ss_ticket_number#13L, ss_sold_date_sk#27, s_store_name#53, s_company_id#64, s_street_number#66, s_street_name#67, s_street_type#68, s_suite_number#69, s_city#70, s_county#71, s_state#72, s_zip#73]\n               :  +- Join Inner, (ss_store_sk#11 = s_store_sk#48)\n               :     :- Project [ss_item_sk#6, ss_customer_sk#7, ss_store_sk#11, ss_ticket_number#13L, ss_sold_date_sk#27]\n               :     :  +- Join Inner, (ss_sold_date_sk#27 = d_date_sk#77)\n               :     :     :- Project [ss_item_sk#6, ss_customer_sk#7, ss_store_sk#11, ss_ticket_number#13L, ss_sold_date_sk#27]\n               :     :     :  +- Filter ((((isnotnull(ss_ticket_number#13L) AND isnotnull(ss_item_sk#6)) AND isnotnull(ss_customer_sk#7)) AND isnotnull(ss_store_sk#11)) AND isnotnull(ss_sold_date_sk#27))\n               :     :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#5,ss_item_sk#6,ss_customer_sk#7,ss_cdemo_sk#8,ss_hdemo_sk#9,ss_addr_sk#10,ss_store_sk#11,ss_promo_sk#12,ss_ticket_number#13L,ss_quantity#14,ss_wholesale_cost#15,ss_list_price#16,ss_sales_price#17,ss_ext_discount_amt#18,ss_ext_sales_price#19,ss_ext_wholesale_cost#20,ss_ext_list_price#21,ss_ext_tax#22,ss_coupon_amt#23,ss_net_paid#24,ss_net_paid_inc_tax#25,ss_net_profit#26,ss_sold_date_sk#27] parquet\n               :     :     +- LogicalQueryStage Project [d_date_sk#77], BroadcastQueryStage 0\n               :     +- LogicalQueryStage Project [s_store_sk#48, s_store_name#53, s_company_id#64, s_street_number#66, s_street_name#67, s_street_type#68, s_suite_number#69, s_city#70, s_county#71, s_state#72, s_zip#73], BroadcastQueryStage 1\n               +- Project [sr_item_sk#29, sr_customer_sk#30, sr_ticket_number#36L, sr_returned_date_sk#47]\n                  +- Join Inner, (sr_returned_date_sk#47 = d_date_sk#164)\n                     :- Project [sr_item_sk#29, sr_customer_sk#30, sr_ticket_number#36L, sr_returned_date_sk#47]\n                     :  +- Filter ((((isnotnull(sr_ticket_number#36L) AND isnotnull(sr_item_sk#29)) AND isnotnull(sr_customer_sk#30)) AND isnotnull(sr_returned_date_sk#47)) AND dynamicpruning#213 [sr_returned_date_sk#47])\n                     :     :  +- Project [d_date_sk#164]\n                     :     :     +- Filter (((isnotnull(d_year#170) AND isnotnull(d_moy#172)) AND ((d_year#170 = 2000) AND (d_moy#172 = 9))) AND isnotnull(d_date_sk#164))\n                     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#164,d_date_id#165,d_date#166,d_month_seq#167,d_week_seq#168,d_quarter_seq#169,d_year#170,d_dow#171,d_moy#172,d_dom#173,d_qoy#174,d_fy_year#175,d_fy_quarter_seq#176,d_fy_week_seq#177,d_day_name#178,d_quarter_name#179,d_holiday#180,d_weekend#181,d_following_holiday#182,d_first_dom#183,d_last_dom#184,d_same_day_ly#185,d_same_day_lq#186,d_current_day#187,... 4 more fields] parquet\n                     :     +- Relation spark_catalog.tpcds_100.store_returns[sr_return_time_sk#28,sr_item_sk#29,sr_customer_sk#30,sr_cdemo_sk#31,sr_hdemo_sk#32,sr_addr_sk#33,sr_store_sk#34,sr_reason_sk#35,sr_ticket_number#36L,sr_return_quantity#37,sr_return_amt#38,sr_return_tax#39,sr_return_amt_inc_tax#40,sr_fee#41,sr_return_ship_cost#42,sr_refunded_cash#43,sr_reversed_charge#44,sr_store_credit#45,sr_net_loss#46,sr_returned_date_sk#47] parquet\n                     +- LogicalQueryStage Project [d_date_sk#164], BroadcastQueryStage 2\n"
      },
      "IM" : {
        "inputSizeInBytes" : 45366429164,
        "inputRowCount" : 302912655
      },
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 2,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "StartTimeInMs" : 1702227029341,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 94528,
        "IOBytes" : {
          "Total" : 44500629723,
          "Details" : {
            "IR" : 1612482683,
            "IW" : 0,
            "SR" : 21444073520,
            "SW" : 21444073520
          }
        }
      }
    },
    "2" : {
      "LQP" : {
        "operators" : {
          "12" : {
            "sign" : 1608590622,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#5, ss_item_sk#6, ss_customer_sk#7, ss_cdemo_sk#8, ss_hdemo_sk#9, ss_addr_sk#10, ss_store_sk#11, ss_promo_sk#12, ss_ticket_number#13L, ss_quantity#14, ss_wholesale_cost#15, ss_list_price#16, ss_sales_price#17, ss_ext_discount_amt#18, ss_ext_sales_price#19, ss_ext_wholesale_cost#20, ss_ext_list_price#21, ss_ext_tax#22, ss_coupon_amt#23, ss_net_paid#24, ss_net_paid_inc_tax#25, ss_net_profit#26, ss_sold_date_sk#27], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "8" : {
            "sign" : 1797388241,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 8497298720,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#6, ss_customer_sk#7, ss_store_sk#11, ss_ticket_number#13L, ss_sold_date_sk#27] "
          },
          "19" : {
            "sign" : 424936361,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 3557606528,
            "rowCount" : 27793801,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [sr_return_time_sk#28, sr_item_sk#29, sr_customer_sk#30, sr_cdemo_sk#31, sr_hdemo_sk#32, sr_addr_sk#33, sr_store_sk#34, sr_reason_sk#35, sr_ticket_number#36L, sr_return_quantity#37, sr_return_amt#38, sr_return_tax#39, sr_return_amt_inc_tax#40, sr_fee#41, sr_return_ship_cost#42, sr_refunded_cash#43, sr_reversed_charge#44, sr_store_credit#45, sr_net_loss#46, sr_returned_date_sk#47], `spark_catalog`.`tpcds_100`.`store_returns`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "23" : {
            "sign" : -1097222997,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1048816,
            "rowCount" : 30,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#164], BroadcastQueryStage 2 "
          },
          "4" : {
            "sign" : 1521341189,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 69495821000,
            "rowCount" : 347479105,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_sold_date_sk#27, sr_returned_date_sk#47, s_store_name#53, s_company_id#64, s_street_number#66, s_street_name#67, s_street_type#68, s_suite_number#69, s_city#70, s_county#71, s_state#72, s_zip#73] "
          },
          "15" : {
            "sign" : -1084964677,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 22529729880,
            "rowCount" : 804633210,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [sr_item_sk#29, sr_customer_sk#30, sr_ticket_number#36L, sr_returned_date_sk#47] "
          },
          "11" : {
            "sign" : 2116338474,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 38129799488,
            "rowCount" : 250853944,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((((isnotnull(ss_ticket_number#13L) AND isnotnull(ss_item_sk#6)) AND isnotnull(ss_customer_sk#7)) AND isnotnull(ss_store_sk#11)) AND isnotnull(ss_sold_date_sk#27)) "
          },
          "9" : {
            "sign" : 669822817,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 9559461060,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#27 = d_date_sk#77) "
          },
          "22" : {
            "sign" : -148535994,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#164, d_date_id#165, d_date#166, d_month_seq#167, d_week_seq#168, d_quarter_seq#169, d_year#170, d_dow#171, d_moy#172, d_dom#173, d_qoy#174, d_fy_year#175, d_fy_quarter_seq#176, d_fy_week_seq#177, d_day_name#178, d_quarter_name#179, d_holiday#180, d_weekend#181, d_following_holiday#182, d_first_dom#183, d_last_dom#184, d_same_day_ly#185, d_same_day_lq#186, d_current_day#187, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "13" : {
            "sign" : -942801012,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 876588,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#77], BroadcastQueryStage 0 "
          },
          "16" : {
            "sign" : -1839722098,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 25748262720,
            "rowCount" : 804633210,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (sr_returned_date_sk#47 = d_date_sk#164) "
          },
          "5" : {
            "sign" : 1235531593,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 80615152360,
            "rowCount" : 347479105,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (((ss_ticket_number#13L = sr_ticket_number#36L) AND (ss_item_sk#6 = sr_item_sk#29)) AND (ss_customer_sk#7 = sr_customer_sk#30)) "
          },
          "10" : {
            "sign" : 1877918980,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 8027326208,
            "rowCount" : 250853944,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#6, ss_customer_sk#7, ss_store_sk#11, ss_ticket_number#13L, ss_sold_date_sk#27] "
          },
          "21" : {
            "sign" : 1182374458,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 12300,
            "rowCount" : 50,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(d_year#170) AND isnotnull(d_moy#172)) AND ((d_year#170 = 2000) AND (d_moy#172 = 9))) AND isnotnull(d_date_sk#164)) "
          },
          "6" : {
            "sign" : -1737945076,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 22630430816040,
            "rowCount" : 106747315170,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#6, ss_customer_sk#7, ss_ticket_number#13L, ss_sold_date_sk#27, s_store_name#53, s_company_id#64, s_street_number#66, s_street_name#67, s_street_type#68, s_suite_number#69, s_city#70, s_county#71, s_state#72, s_zip#73] "
          },
          "1" : {
            "sign" : 1808261477,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
            "sizeInBytes" : 80615152360,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) LocalLimit Arguments: 100 "
          },
          "17" : {
            "sign" : 402042207,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 750990996,
            "rowCount" : 26821107,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [sr_item_sk#29, sr_customer_sk#30, sr_ticket_number#36L, sr_returned_date_sk#47] "
          },
          "14" : {
            "sign" : -1951724776,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1051792,
            "rowCount" : 402,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [s_store_sk#48, s_store_name#53, s_company_id#64, s_street_number#66, s_street_name#67, s_street_type#68, s_suite_number#69, s_city#70, s_county#71, s_state#72, s_zip#73], BroadcastQueryStage 1 "
          },
          "0" : {
            "sign" : -1731112292,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
            "sizeInBytes" : 23200,
            "rowCount" : 100,
            "isRuntime" : false,
            "predicate" : " (unknown) GlobalLimit Arguments: 100 "
          },
          "20" : {
            "sign" : -1636383261,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 600,
            "rowCount" : 50,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#164] "
          },
          "2" : {
            "sign" : 213107654,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 80615152360,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [s_store_name#53 ASC NULLS FIRST, s_company_id#64 ASC NULLS FIRST, s_street_number#66 ASC NULLS FIRST, s_street_name#67 ASC NULLS FIRST, s_street_type#68 ASC NULLS FIRST, s_suite_number#69 ASC NULLS FIRST, s_city#70 ASC NULLS FIRST, s_county#71 ASC NULLS FIRST, s_state#72 ASC NULLS FIRST, s_zip#73 ASC NULLS FIRST], true "
          },
          "18" : {
            "sign" : 1237141124,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 3433101696,
            "rowCount" : 26821107,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((((isnotnull(sr_ticket_number#36L) AND isnotnull(sr_item_sk#29)) AND isnotnull(sr_customer_sk#30)) AND isnotnull(sr_returned_date_sk#47)) AND dynamicpruning#213 [sr_returned_date_sk#47]) "
          },
          "7" : {
            "sign" : 1403258161,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 23484409337400,
            "rowCount" : 106747315170,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_store_sk#11 = s_store_sk#48) "
          },
          "3" : {
            "sign" : 748902465,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 80615152360,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [s_store_name#53, s_company_id#64, s_street_number#66, s_street_name#67, s_street_type#68, s_suite_number#69, s_city#70, s_county#71, s_state#72, s_zip#73], [s_store_name#53, s_company_id#64, s_street_number#66, s_street_name#67, s_street_type#68, s_suite_number#69, s_city#70, s_county#71, s_state#72, s_zip#73, sum(CASE WHEN ((sr_returned_date_sk#47 - ss_sold_date_sk#27) <= 30) THEN 1 ELSE 0 END) AS 30 days#159L, sum(CASE WHEN (((sr_returned_date_sk#47 - ss_sold_date_sk#27) > 30) AND ((sr_returned_date_sk#47 - ss_sold_date_sk#27) <= 60)) THEN 1 ELSE 0 END) AS 31-60 days#160L, sum(CASE WHEN (((sr_returned_date_sk#47 - ss_sold_date_sk#27) > 60) AND ((sr_returned_date_sk#47 - ss_sold_date_sk#27) <= 90)) THEN 1 ELSE 0 END) AS 61-90 days#161L, sum(CASE WHEN (((sr_returned_date_sk#47 - ss_sold_date_sk#27) > 90) AND ((sr_returned_date_sk#47 - ss_sold_date_sk#27) <= 120)) THEN 1 ELSE 0 END) AS 91-120 days#162L, sum(CASE WHEN ((sr_returned_date_sk#47 - ss_sold_date_sk#27) > 120) THEN 1 ELSE 0 END) AS >120 days#163L] "
          }
        },
        "links" : [ {
          "fromId" : 12,
          "fromName" : "LogicalRelation",
          "toId" : 11,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "Filter",
          "toId" : 10,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "Project",
          "toId" : 9,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 13,
          "fromName" : "LogicalQueryStage",
          "toId" : 9,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "Join",
          "toId" : 8,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "Project",
          "toId" : 7,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 14,
          "fromName" : "LogicalQueryStage",
          "toId" : 7,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Join",
          "toId" : 6,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Project",
          "toId" : 5,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 19,
          "fromName" : "LogicalRelation",
          "toId" : 18,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 22,
          "fromName" : "LogicalRelation",
          "toId" : 21,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 21,
          "fromName" : "Filter",
          "toId" : 20,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 20,
          "fromName" : "Project",
          "toId" : 18,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 18,
          "fromName" : "Filter",
          "toId" : 17,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 17,
          "fromName" : "Project",
          "toId" : 16,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 23,
          "fromName" : "LogicalQueryStage",
          "toId" : 16,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 16,
          "fromName" : "Join",
          "toId" : 15,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 15,
          "fromName" : "Project",
          "toId" : 5,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Join",
          "toId" : 4,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Project",
          "toId" : 3,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Aggregate",
          "toId" : 2,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "LocalLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "LocalLimit",
          "toId" : 0,
          "toName" : "GlobalLimit",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [s_store_name#53 ASC NULLS FIRST, s_company_id#64 ASC NULLS FIRST, s_street_number#66 ASC NULLS FIRST, s_street_name#67 ASC NULLS FIRST, s_street_type#68 ASC NULLS FIRST, s_suite_number#69 ASC NULLS FIRST, s_city#70 ASC NULLS FIRST, s_county#71 ASC NULLS FIRST, s_state#72 ASC NULLS FIRST, s_zip#73 ASC NULLS FIRST], true\n      +- Aggregate [s_store_name#53, s_company_id#64, s_street_number#66, s_street_name#67, s_street_type#68, s_suite_number#69, s_city#70, s_county#71, s_state#72, s_zip#73], [s_store_name#53, s_company_id#64, s_street_number#66, s_street_name#67, s_street_type#68, s_suite_number#69, s_city#70, s_county#71, s_state#72, s_zip#73, sum(CASE WHEN ((sr_returned_date_sk#47 - ss_sold_date_sk#27) <= 30) THEN 1 ELSE 0 END) AS 30 days#159L, sum(CASE WHEN (((sr_returned_date_sk#47 - ss_sold_date_sk#27) > 30) AND ((sr_returned_date_sk#47 - ss_sold_date_sk#27) <= 60)) THEN 1 ELSE 0 END) AS 31-60 days#160L, sum(CASE WHEN (((sr_returned_date_sk#47 - ss_sold_date_sk#27) > 60) AND ((sr_returned_date_sk#47 - ss_sold_date_sk#27) <= 90)) THEN 1 ELSE 0 END) AS 61-90 days#161L, sum(CASE WHEN (((sr_returned_date_sk#47 - ss_sold_date_sk#27) > 90) AND ((sr_returned_date_sk#47 - ss_sold_date_sk#27) <= 120)) THEN 1 ELSE 0 END) AS 91-120 days#162L, sum(CASE WHEN ((sr_returned_date_sk#47 - ss_sold_date_sk#27) > 120) THEN 1 ELSE 0 END) AS >120 days#163L]\n         +- Project [ss_sold_date_sk#27, sr_returned_date_sk#47, s_store_name#53, s_company_id#64, s_street_number#66, s_street_name#67, s_street_type#68, s_suite_number#69, s_city#70, s_county#71, s_state#72, s_zip#73]\n            +- Join Inner, (((ss_ticket_number#13L = sr_ticket_number#36L) AND (ss_item_sk#6 = sr_item_sk#29)) AND (ss_customer_sk#7 = sr_customer_sk#30))\n               :- Project [ss_item_sk#6, ss_customer_sk#7, ss_ticket_number#13L, ss_sold_date_sk#27, s_store_name#53, s_company_id#64, s_street_number#66, s_street_name#67, s_street_type#68, s_suite_number#69, s_city#70, s_county#71, s_state#72, s_zip#73]\n               :  +- Join Inner, (ss_store_sk#11 = s_store_sk#48)\n               :     :- Project [ss_item_sk#6, ss_customer_sk#7, ss_store_sk#11, ss_ticket_number#13L, ss_sold_date_sk#27]\n               :     :  +- Join Inner, (ss_sold_date_sk#27 = d_date_sk#77)\n               :     :     :- Project [ss_item_sk#6, ss_customer_sk#7, ss_store_sk#11, ss_ticket_number#13L, ss_sold_date_sk#27]\n               :     :     :  +- Filter ((((isnotnull(ss_ticket_number#13L) AND isnotnull(ss_item_sk#6)) AND isnotnull(ss_customer_sk#7)) AND isnotnull(ss_store_sk#11)) AND isnotnull(ss_sold_date_sk#27))\n               :     :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#5,ss_item_sk#6,ss_customer_sk#7,ss_cdemo_sk#8,ss_hdemo_sk#9,ss_addr_sk#10,ss_store_sk#11,ss_promo_sk#12,ss_ticket_number#13L,ss_quantity#14,ss_wholesale_cost#15,ss_list_price#16,ss_sales_price#17,ss_ext_discount_amt#18,ss_ext_sales_price#19,ss_ext_wholesale_cost#20,ss_ext_list_price#21,ss_ext_tax#22,ss_coupon_amt#23,ss_net_paid#24,ss_net_paid_inc_tax#25,ss_net_profit#26,ss_sold_date_sk#27] parquet\n               :     :     +- LogicalQueryStage Project [d_date_sk#77], BroadcastQueryStage 0\n               :     +- LogicalQueryStage Project [s_store_sk#48, s_store_name#53, s_company_id#64, s_street_number#66, s_street_name#67, s_street_type#68, s_suite_number#69, s_city#70, s_county#71, s_state#72, s_zip#73], BroadcastQueryStage 1\n               +- Project [sr_item_sk#29, sr_customer_sk#30, sr_ticket_number#36L, sr_returned_date_sk#47]\n                  +- Join Inner, (sr_returned_date_sk#47 = d_date_sk#164)\n                     :- Project [sr_item_sk#29, sr_customer_sk#30, sr_ticket_number#36L, sr_returned_date_sk#47]\n                     :  +- Filter ((((isnotnull(sr_ticket_number#36L) AND isnotnull(sr_item_sk#29)) AND isnotnull(sr_customer_sk#30)) AND isnotnull(sr_returned_date_sk#47)) AND dynamicpruning#213 [sr_returned_date_sk#47])\n                     :     :  +- Project [d_date_sk#164]\n                     :     :     +- Filter (((isnotnull(d_year#170) AND isnotnull(d_moy#172)) AND ((d_year#170 = 2000) AND (d_moy#172 = 9))) AND isnotnull(d_date_sk#164))\n                     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#164,d_date_id#165,d_date#166,d_month_seq#167,d_week_seq#168,d_quarter_seq#169,d_year#170,d_dow#171,d_moy#172,d_dom#173,d_qoy#174,d_fy_year#175,d_fy_quarter_seq#176,d_fy_week_seq#177,d_day_name#178,d_quarter_name#179,d_holiday#180,d_weekend#181,d_following_holiday#182,d_first_dom#183,d_last_dom#184,d_same_day_ly#185,d_same_day_lq#186,d_current_day#187,... 4 more fields] parquet\n                     :     +- Relation spark_catalog.tpcds_100.store_returns[sr_return_time_sk#28,sr_item_sk#29,sr_customer_sk#30,sr_cdemo_sk#31,sr_hdemo_sk#32,sr_addr_sk#33,sr_store_sk#34,sr_reason_sk#35,sr_ticket_number#36L,sr_return_quantity#37,sr_return_amt#38,sr_return_tax#39,sr_return_amt_inc_tax#40,sr_fee#41,sr_return_ship_cost#42,sr_refunded_cash#43,sr_reversed_charge#44,sr_store_credit#45,sr_net_loss#46,sr_returned_date_sk#47] parquet\n                     +- LogicalQueryStage Project [d_date_sk#164], BroadcastQueryStage 2\n"
      },
      "IM" : {
        "inputSizeInBytes" : 45367477380,
        "inputRowCount" : 302912635
      },
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 1,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "StartTimeInMs" : 1702227029438,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 94431,
        "IOBytes" : {
          "Total" : 44500535773,
          "Details" : {
            "IR" : 1612388733,
            "IW" : 0,
            "SR" : 21444073520,
            "SW" : 21444073520
          }
        }
      }
    },
    "3" : {
      "LQP" : {
        "operators" : {
          "12" : {
            "sign" : 1608590622,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#5, ss_item_sk#6, ss_customer_sk#7, ss_cdemo_sk#8, ss_hdemo_sk#9, ss_addr_sk#10, ss_store_sk#11, ss_promo_sk#12, ss_ticket_number#13L, ss_quantity#14, ss_wholesale_cost#15, ss_list_price#16, ss_sales_price#17, ss_ext_discount_amt#18, ss_ext_sales_price#19, ss_ext_wholesale_cost#20, ss_ext_list_price#21, ss_ext_tax#22, ss_coupon_amt#23, ss_net_paid#24, ss_net_paid_inc_tax#25, ss_net_profit#26, ss_sold_date_sk#27], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "8" : {
            "sign" : 1797388241,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 586388152168192,
            "rowCount" : 18324629755256,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#6, ss_customer_sk#7, ss_store_sk#11, ss_ticket_number#13L, ss_sold_date_sk#27] "
          },
          "4" : {
            "sign" : -444088244,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 69495821000,
            "rowCount" : 347479105,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_sold_date_sk#27, sr_returned_date_sk#47, s_store_name#53, s_company_id#64, s_street_number#66, s_street_name#67, s_street_type#68, s_suite_number#69, s_city#70, s_county#71, s_state#72, s_zip#73] "
          },
          "15" : {
            "sign" : 1213756162,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 754762260,
            "rowCount" : 26955795,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [sr_item_sk#29, sr_customer_sk#30, sr_ticket_number#36L, sr_returned_date_sk#47], ShuffleQueryStage 3 "
          },
          "11" : {
            "sign" : 2116338474,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 38129799488,
            "rowCount" : 250853944,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((((isnotnull(ss_ticket_number#13L) AND isnotnull(ss_item_sk#6)) AND isnotnull(ss_customer_sk#7)) AND isnotnull(ss_store_sk#11)) AND isnotnull(ss_sold_date_sk#27)) "
          },
          "9" : {
            "sign" : 669822817,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 659686671189216,
            "rowCount" : 18324629755256,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#27 = d_date_sk#77) "
          },
          "13" : {
            "sign" : -942801012,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 2681544,
            "rowCount" : 73049,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#77], BroadcastQueryStage 0 "
          },
          "5" : {
            "sign" : 258724768,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 80615152360,
            "rowCount" : 347479105,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (((ss_ticket_number#13L = sr_ticket_number#36L) AND (ss_item_sk#6 = sr_item_sk#29)) AND (ss_customer_sk#7 = sr_customer_sk#30)) "
          },
          "10" : {
            "sign" : 1877918980,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 8027326208,
            "rowCount" : 250853944,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#6, ss_customer_sk#7, ss_store_sk#11, ss_ticket_number#13L, ss_sold_date_sk#27] "
          },
          "6" : {
            "sign" : -1737945076,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 1561698246261937344,
            "rowCount" : 7366501161612912,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#6, ss_customer_sk#7, ss_ticket_number#13L, ss_sold_date_sk#27, s_store_name#53, s_company_id#64, s_street_number#66, s_street_name#67, s_street_type#68, s_suite_number#69, s_city#70, s_county#71, s_state#72, s_zip#73] "
          },
          "1" : {
            "sign" : 1779067836,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
            "sizeInBytes" : 80615152360,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) LocalLimit Arguments: 100 "
          },
          "14" : {
            "sign" : -1951724776,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1051792,
            "rowCount" : 402,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [s_store_sk#48, s_store_name#53, s_company_id#64, s_street_number#66, s_street_name#67, s_street_type#68, s_suite_number#69, s_city#70, s_county#71, s_state#72, s_zip#73], BroadcastQueryStage 1 "
          },
          "0" : {
            "sign" : -829017053,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
            "sizeInBytes" : 23200,
            "rowCount" : 100,
            "isRuntime" : false,
            "predicate" : " (unknown) GlobalLimit Arguments: 100 "
          },
          "2" : {
            "sign" : 251778893,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 80615152360,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [s_store_name#53 ASC NULLS FIRST, s_company_id#64 ASC NULLS FIRST, s_street_number#66 ASC NULLS FIRST, s_street_name#67 ASC NULLS FIRST, s_street_type#68 ASC NULLS FIRST, s_suite_number#69 ASC NULLS FIRST, s_city#70 ASC NULLS FIRST, s_county#71 ASC NULLS FIRST, s_state#72 ASC NULLS FIRST, s_zip#73 ASC NULLS FIRST], true "
          },
          "7" : {
            "sign" : 1403258161,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 1620630255554840640,
            "rowCount" : 7366501161612912,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_store_sk#11 = s_store_sk#48) "
          },
          "3" : {
            "sign" : 1514374424,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 80615152360,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [s_store_name#53, s_company_id#64, s_street_number#66, s_street_name#67, s_street_type#68, s_suite_number#69, s_city#70, s_county#71, s_state#72, s_zip#73], [s_store_name#53, s_company_id#64, s_street_number#66, s_street_name#67, s_street_type#68, s_suite_number#69, s_city#70, s_county#71, s_state#72, s_zip#73, sum(CASE WHEN ((sr_returned_date_sk#47 - ss_sold_date_sk#27) <= 30) THEN 1 ELSE 0 END) AS 30 days#159L, sum(CASE WHEN (((sr_returned_date_sk#47 - ss_sold_date_sk#27) > 30) AND ((sr_returned_date_sk#47 - ss_sold_date_sk#27) <= 60)) THEN 1 ELSE 0 END) AS 31-60 days#160L, sum(CASE WHEN (((sr_returned_date_sk#47 - ss_sold_date_sk#27) > 60) AND ((sr_returned_date_sk#47 - ss_sold_date_sk#27) <= 90)) THEN 1 ELSE 0 END) AS 61-90 days#161L, sum(CASE WHEN (((sr_returned_date_sk#47 - ss_sold_date_sk#27) > 90) AND ((sr_returned_date_sk#47 - ss_sold_date_sk#27) <= 120)) THEN 1 ELSE 0 END) AS 91-120 days#162L, sum(CASE WHEN ((sr_returned_date_sk#47 - ss_sold_date_sk#27) > 120) THEN 1 ELSE 0 END) AS >120 days#163L] "
          }
        },
        "links" : [ {
          "fromId" : 12,
          "fromName" : "LogicalRelation",
          "toId" : 11,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "Filter",
          "toId" : 10,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "Project",
          "toId" : 9,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 13,
          "fromName" : "LogicalQueryStage",
          "toId" : 9,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "Join",
          "toId" : 8,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "Project",
          "toId" : 7,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 14,
          "fromName" : "LogicalQueryStage",
          "toId" : 7,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Join",
          "toId" : 6,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Project",
          "toId" : 5,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 15,
          "fromName" : "LogicalQueryStage",
          "toId" : 5,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Join",
          "toId" : 4,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Project",
          "toId" : 3,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Aggregate",
          "toId" : 2,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "LocalLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "LocalLimit",
          "toId" : 0,
          "toName" : "GlobalLimit",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [s_store_name#53 ASC NULLS FIRST, s_company_id#64 ASC NULLS FIRST, s_street_number#66 ASC NULLS FIRST, s_street_name#67 ASC NULLS FIRST, s_street_type#68 ASC NULLS FIRST, s_suite_number#69 ASC NULLS FIRST, s_city#70 ASC NULLS FIRST, s_county#71 ASC NULLS FIRST, s_state#72 ASC NULLS FIRST, s_zip#73 ASC NULLS FIRST], true\n      +- Aggregate [s_store_name#53, s_company_id#64, s_street_number#66, s_street_name#67, s_street_type#68, s_suite_number#69, s_city#70, s_county#71, s_state#72, s_zip#73], [s_store_name#53, s_company_id#64, s_street_number#66, s_street_name#67, s_street_type#68, s_suite_number#69, s_city#70, s_county#71, s_state#72, s_zip#73, sum(CASE WHEN ((sr_returned_date_sk#47 - ss_sold_date_sk#27) <= 30) THEN 1 ELSE 0 END) AS 30 days#159L, sum(CASE WHEN (((sr_returned_date_sk#47 - ss_sold_date_sk#27) > 30) AND ((sr_returned_date_sk#47 - ss_sold_date_sk#27) <= 60)) THEN 1 ELSE 0 END) AS 31-60 days#160L, sum(CASE WHEN (((sr_returned_date_sk#47 - ss_sold_date_sk#27) > 60) AND ((sr_returned_date_sk#47 - ss_sold_date_sk#27) <= 90)) THEN 1 ELSE 0 END) AS 61-90 days#161L, sum(CASE WHEN (((sr_returned_date_sk#47 - ss_sold_date_sk#27) > 90) AND ((sr_returned_date_sk#47 - ss_sold_date_sk#27) <= 120)) THEN 1 ELSE 0 END) AS 91-120 days#162L, sum(CASE WHEN ((sr_returned_date_sk#47 - ss_sold_date_sk#27) > 120) THEN 1 ELSE 0 END) AS >120 days#163L]\n         +- Project [ss_sold_date_sk#27, sr_returned_date_sk#47, s_store_name#53, s_company_id#64, s_street_number#66, s_street_name#67, s_street_type#68, s_suite_number#69, s_city#70, s_county#71, s_state#72, s_zip#73]\n            +- Join Inner, (((ss_ticket_number#13L = sr_ticket_number#36L) AND (ss_item_sk#6 = sr_item_sk#29)) AND (ss_customer_sk#7 = sr_customer_sk#30))\n               :- Project [ss_item_sk#6, ss_customer_sk#7, ss_ticket_number#13L, ss_sold_date_sk#27, s_store_name#53, s_company_id#64, s_street_number#66, s_street_name#67, s_street_type#68, s_suite_number#69, s_city#70, s_county#71, s_state#72, s_zip#73]\n               :  +- Join Inner, (ss_store_sk#11 = s_store_sk#48)\n               :     :- Project [ss_item_sk#6, ss_customer_sk#7, ss_store_sk#11, ss_ticket_number#13L, ss_sold_date_sk#27]\n               :     :  +- Join Inner, (ss_sold_date_sk#27 = d_date_sk#77)\n               :     :     :- Project [ss_item_sk#6, ss_customer_sk#7, ss_store_sk#11, ss_ticket_number#13L, ss_sold_date_sk#27]\n               :     :     :  +- Filter ((((isnotnull(ss_ticket_number#13L) AND isnotnull(ss_item_sk#6)) AND isnotnull(ss_customer_sk#7)) AND isnotnull(ss_store_sk#11)) AND isnotnull(ss_sold_date_sk#27))\n               :     :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#5,ss_item_sk#6,ss_customer_sk#7,ss_cdemo_sk#8,ss_hdemo_sk#9,ss_addr_sk#10,ss_store_sk#11,ss_promo_sk#12,ss_ticket_number#13L,ss_quantity#14,ss_wholesale_cost#15,ss_list_price#16,ss_sales_price#17,ss_ext_discount_amt#18,ss_ext_sales_price#19,ss_ext_wholesale_cost#20,ss_ext_list_price#21,ss_ext_tax#22,ss_coupon_amt#23,ss_net_paid#24,ss_net_paid_inc_tax#25,ss_net_profit#26,ss_sold_date_sk#27] parquet\n               :     :     +- LogicalQueryStage Project [d_date_sk#77], BroadcastQueryStage 0\n               :     +- LogicalQueryStage Project [s_store_sk#48, s_store_name#53, s_company_id#64, s_street_number#66, s_street_name#67, s_street_type#68, s_suite_number#69, s_city#70, s_county#71, s_state#72, s_zip#73], BroadcastQueryStage 1\n               +- LogicalQueryStage Project [sr_item_sk#29, sr_customer_sk#30, sr_ticket_number#36L, sr_returned_date_sk#47], ShuffleQueryStage 3\n"
      },
      "IM" : {
        "inputSizeInBytes" : 42565389252,
        "inputRowCount" : 302074599
      },
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 15,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "StartTimeInMs" : 1702227030066,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 93803,
        "IOBytes" : {
          "Total" : 44500231863,
          "Details" : {
            "IR" : 1612084823,
            "IW" : 0,
            "SR" : 21444073520,
            "SW" : 21444073520
          }
        }
      }
    }
  },
  "RuntimeQSs" : {
    "4" : {
      "QSLogical" : {
        "operators" : {
          "4" : {
            "sign" : 1877918980,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 8027326208,
                "rowCount" : 250853944
              },
              "compileTime" : {
                "sizeInBytes" : 8027326208,
                "rowCount" : 250853944
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#6, ss_customer_sk#7, ss_store_sk#11, ss_ticket_number#13L, ss_sold_date_sk#27] "
          },
          "5" : {
            "sign" : 2116338474,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 38129799488,
                "rowCount" : 250853944
              },
              "compileTime" : {
                "sizeInBytes" : 38129799488,
                "rowCount" : 250853944
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((((isnotnull(ss_ticket_number#13L) AND isnotnull(ss_item_sk#6)) AND isnotnull(ss_customer_sk#7)) AND isnotnull(ss_store_sk#11)) AND isnotnull(ss_sold_date_sk#27)) "
          },
          "6" : {
            "sign" : 1608590622,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 41806893656,
                "rowCount" : 275045353
              },
              "compileTime" : {
                "sizeInBytes" : 41806893656,
                "rowCount" : 275045353
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#5, ss_item_sk#6, ss_customer_sk#7, ss_cdemo_sk#8, ss_hdemo_sk#9, ss_addr_sk#10, ss_store_sk#11, ss_promo_sk#12, ss_ticket_number#13L, ss_quantity#14, ss_wholesale_cost#15, ss_list_price#16, ss_sales_price#17, ss_ext_discount_amt#18, ss_ext_sales_price#19, ss_ext_wholesale_cost#20, ss_ext_list_price#21, ss_ext_tax#22, ss_coupon_amt#23, ss_net_paid#24, ss_net_paid_inc_tax#25, ss_net_profit#26, ss_sold_date_sk#27], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "1" : {
            "sign" : 1821703554,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 120771285151,
                "rowCount" : 577853039
              },
              "compileTime" : {
                "sizeInBytes" : 120771285151,
                "rowCount" : 577853039
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_store_sk#11 = s_store_sk#48) "
          },
          "0" : {
            "sign" : 1629904931,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 116148460839,
                "rowCount" : 577853039
              },
              "compileTime" : {
                "sizeInBytes" : 116148460839,
                "rowCount" : 577853039
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#6, ss_customer_sk#7, ss_ticket_number#13L, ss_sold_date_sk#27, s_store_name#53, s_company_id#64, s_street_number#66, s_street_name#67, s_street_type#68, s_suite_number#69, s_city#70, s_county#71, s_state#72, s_zip#73] "
          },
          "2" : {
            "sign" : 1079547361,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 8497298720,
                "rowCount" : 265540585
              },
              "compileTime" : {
                "sizeInBytes" : 8497298720,
                "rowCount" : 265540585
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#6, ss_customer_sk#7, ss_store_sk#11, ss_ticket_number#13L, ss_sold_date_sk#27] "
          },
          "3" : {
            "sign" : -76262431,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 9559461060,
                "rowCount" : 265540585
              },
              "compileTime" : {
                "sizeInBytes" : 9559461060,
                "rowCount" : 265540585
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#27 = d_date_sk#77) "
          }
        },
        "links" : [ {
          "fromId" : 6,
          "fromName" : "LogicalRelation",
          "toId" : 5,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Filter",
          "toId" : 4,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Project",
          "toId" : 3,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Join",
          "toId" : 2,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Project",
          "toId" : 1,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Join",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [ss_item_sk#6, ss_customer_sk#7, ss_ticket_number#13L, ss_sold_date_sk#27, s_store_name#53, s_company_id#64, s_street_number#66, s_street_name#67, s_street_type#68, s_suite_number#69, s_city#70, s_county#71, s_state#72, s_zip#73]\n+- Join Inner, (ss_store_sk#11 = s_store_sk#48)\n   :- Project [ss_item_sk#6, ss_customer_sk#7, ss_store_sk#11, ss_ticket_number#13L, ss_sold_date_sk#27]\n   :  +- Join Inner, (ss_sold_date_sk#27 = d_date_sk#77)\n   :     :- Project [ss_item_sk#6, ss_customer_sk#7, ss_store_sk#11, ss_ticket_number#13L, ss_sold_date_sk#27]\n   :     :  +- Filter ((((isnotnull(ss_ticket_number#13L) AND isnotnull(ss_item_sk#6)) AND isnotnull(ss_customer_sk#7)) AND isnotnull(ss_store_sk#11)) AND isnotnull(ss_sold_date_sk#27))\n   :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#5,ss_item_sk#6,ss_customer_sk#7,ss_cdemo_sk#8,ss_hdemo_sk#9,ss_addr_sk#10,ss_store_sk#11,ss_promo_sk#12,ss_ticket_number#13L,ss_quantity#14,ss_wholesale_cost#15,ss_list_price#16,ss_sales_price#17,ss_ext_discount_amt#18,ss_ext_sales_price#19,ss_ext_wholesale_cost#20,ss_ext_list_price#21,ss_ext_tax#22,ss_coupon_amt#23,ss_net_paid#24,ss_net_paid_inc_tax#25,ss_net_profit#26,ss_sold_date_sk#27] parquet\n   :     +- Project [d_date_sk#77]\n   :        +- Filter isnotnull(d_date_sk#77)\n   :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#77,d_date_id#78,d_date#79,d_month_seq#80,d_week_seq#81,d_quarter_seq#82,d_year#83,d_dow#84,d_moy#85,d_dom#86,d_qoy#87,d_fy_year#88,d_fy_quarter_seq#89,d_fy_week_seq#90,d_day_name#91,d_quarter_name#92,d_holiday#93,d_weekend#94,d_following_holiday#95,d_first_dom#96,d_last_dom#97,d_same_day_ly#98,d_same_day_lq#99,d_current_day#100,... 4 more fields] parquet\n   +- Project [s_store_sk#48, s_store_name#53, s_company_id#64, s_street_number#66, s_street_name#67, s_street_type#68, s_suite_number#69, s_city#70, s_county#71, s_state#72, s_zip#73]\n      +- Filter isnotnull(s_store_sk#48)\n         +- Relation spark_catalog.tpcds_100.store[s_store_sk#48,s_store_id#49,s_rec_start_date#50,s_rec_end_date#51,s_closed_date_sk#52,s_store_name#53,s_number_employees#54,s_floor_space#55,s_hours#56,s_manager#57,s_market_id#58,s_geography_class#59,s_market_desc#60,s_market_manager#61,s_division_id#62,s_division_name#63,s_company_id#64,s_company_name#65,s_street_number#66,s_street_name#67,s_street_type#68,s_suite_number#69,s_city#70,s_county#71,... 5 more fields] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "4" : {
            "sign" : -205046500,
            "className" : "org.apache.spark.sql.execution.FilterExec",
            "sizeInBytes" : 8027326208,
            "rowCount" : 250853944,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Input [5]: [ss_item_sk#6, ss_customer_sk#7, ss_store_sk#11, ss_ticket_number#13L, ss_sold_date_sk#27] Condition : (((isnotnull(ss_ticket_number#13L) AND isnotnull(ss_item_sk#6)) AND isnotnull(ss_customer_sk#7)) AND isnotnull(ss_store_sk#11)) "
          },
          "5" : {
            "sign" : -1078547076,
            "className" : "org.apache.spark.sql.execution.FileSourceScanExec",
            "sizeInBytes" : 8027326208,
            "rowCount" : 250853944,
            "isRuntime" : false,
            "predicate" : " (unknown) Scan parquet spark_catalog.tpcds_100.store_sales Output [5]: [ss_item_sk#6, ss_customer_sk#7, ss_store_sk#11, ss_ticket_number#13L, ss_sold_date_sk#27] Batched: true Location: InMemoryFileIndex [hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/store_sales/ss_sold_date_sk=2450816, ... 1822 entries] PartitionFilters: [isnotnull(ss_sold_date_sk#27)] PushedFilters: [IsNotNull(ss_ticket_number), IsNotNull(ss_item_sk), IsNotNull(ss_customer_sk), IsNotNull(ss_store_sk)] ReadSchema: struct<ss_item_sk:int,ss_customer_sk:int,ss_store_sk:int,ss_ticket_number:bigint> "
          },
          "6" : {
            "sign" : -596231042,
            "className" : "org.apache.spark.sql.execution.adaptive.BroadcastQueryStageExec",
            "sizeInBytes" : 2681544,
            "rowCount" : 73049,
            "isRuntime" : true,
            "predicate" : " (unknown) BroadcastQueryStage Output [1]: [d_date_sk#77] Arguments: 0 "
          },
          "1" : {
            "sign" : 768051373,
            "className" : "org.apache.spark.sql.execution.joins.BroadcastHashJoinExec",
            "sizeInBytes" : 120771285151,
            "rowCount" : 577853039,
            "isRuntime" : false,
            "predicate" : " (unknown) BroadcastHashJoin Left keys [1]: [ss_store_sk#11] Right keys [1]: [s_store_sk#48] Join type: Inner Join condition: None "
          },
          "0" : {
            "sign" : -1886496342,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 116148460839,
            "rowCount" : 577853039,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [14]: [ss_item_sk#6, ss_customer_sk#7, ss_ticket_number#13L, ss_sold_date_sk#27, s_store_name#53, s_company_id#64, s_street_number#66, s_street_name#67, s_street_type#68, s_suite_number#69, s_city#70, s_county#71, s_state#72, s_zip#73] Input [16]: [ss_item_sk#6, ss_customer_sk#7, ss_store_sk#11, ss_ticket_number#13L, ss_sold_date_sk#27, s_store_sk#48, s_store_name#53, s_company_id#64, s_street_number#66, s_street_name#67, s_street_type#68, s_suite_number#69, s_city#70, s_county#71, s_state#72, s_zip#73] "
          },
          "2" : {
            "sign" : 636832513,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 8497298720,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [5]: [ss_item_sk#6, ss_customer_sk#7, ss_store_sk#11, ss_ticket_number#13L, ss_sold_date_sk#27] Input [6]: [ss_item_sk#6, ss_customer_sk#7, ss_store_sk#11, ss_ticket_number#13L, ss_sold_date_sk#27, d_date_sk#77] "
          },
          "7" : {
            "sign" : -1622395168,
            "className" : "org.apache.spark.sql.execution.adaptive.BroadcastQueryStageExec",
            "sizeInBytes" : 1051792,
            "rowCount" : 402,
            "isRuntime" : true,
            "predicate" : " (unknown) BroadcastQueryStage Output [11]: [s_store_sk#48, s_store_name#53, s_company_id#64, s_street_number#66, s_street_name#67, s_street_type#68, s_suite_number#69, s_city#70, s_county#71, s_state#72, s_zip#73] Arguments: 1 "
          },
          "3" : {
            "sign" : 788564373,
            "className" : "org.apache.spark.sql.execution.joins.BroadcastHashJoinExec",
            "sizeInBytes" : 9559461060,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) BroadcastHashJoin Left keys [1]: [ss_sold_date_sk#27] Right keys [1]: [d_date_sk#77] Join type: Inner Join condition: None "
          }
        },
        "links" : [ {
          "fromId" : 5,
          "fromName" : "Scan parquet spark_catalog.tpcds_100.store_sales",
          "toId" : 4,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Filter",
          "toId" : 3,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "BroadcastQueryStage",
          "toId" : 3,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "BroadcastHashJoin",
          "toId" : 2,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Project",
          "toId" : 1,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "BroadcastQueryStage",
          "toId" : 1,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "BroadcastHashJoin",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [ss_item_sk#6, ss_customer_sk#7, ss_ticket_number#13L, ss_sold_date_sk#27, s_store_name#53, s_company_id#64, s_street_number#66, s_street_name#67, s_street_type#68, s_suite_number#69, s_city#70, s_county#71, s_state#72, s_zip#73]\n+- BroadcastHashJoin [ss_store_sk#11], [s_store_sk#48], Inner, BuildRight, false\n   :- Project [ss_item_sk#6, ss_customer_sk#7, ss_store_sk#11, ss_ticket_number#13L, ss_sold_date_sk#27]\n   :  +- BroadcastHashJoin [ss_sold_date_sk#27], [d_date_sk#77], Inner, BuildRight, false\n   :     :- Filter (((isnotnull(ss_ticket_number#13L) AND isnotnull(ss_item_sk#6)) AND isnotnull(ss_customer_sk#7)) AND isnotnull(ss_store_sk#11))\n   :     :  +- FileScan parquet spark_catalog.tpcds_100.store_sales[ss_item_sk#6,ss_customer_sk#7,ss_store_sk#11,ss_ticket_number#13L,ss_sold_date_sk#27] Batched: true, DataFilters: [isnotnull(ss_ticket_number#13L), isnotnull(ss_item_sk#6), isnotnull(ss_customer_sk#7), isnotnull..., Format: Parquet, Location: InMemoryFileIndex(1823 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/store_..., PartitionFilters: [isnotnull(ss_sold_date_sk#27)], PushedFilters: [IsNotNull(ss_ticket_number), IsNotNull(ss_item_sk), IsNotNull(ss_customer_sk), IsNotNull(ss_stor..., ReadSchema: struct<ss_item_sk:int,ss_customer_sk:int,ss_store_sk:int,ss_ticket_number:bigint>\n   :     +- BroadcastQueryStage 0\n   :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=196]\n   :           +- *(1) Filter isnotnull(d_date_sk#77)\n   :              +- *(1) ColumnarToRow\n   :                 +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#77] Batched: true, DataFilters: [isnotnull(d_date_sk#77)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int>\n   +- BroadcastQueryStage 1\n      +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=213]\n         +- *(2) Filter isnotnull(s_store_sk#48)\n            +- *(2) ColumnarToRow\n               +- FileScan parquet spark_catalog.tpcds_100.store[s_store_sk#48,s_store_name#53,s_company_id#64,s_street_number#66,s_street_name#67,s_street_type#68,s_suite_number#69,s_city#70,s_county#71,s_state#72,s_zip#73] Batched: true, DataFilters: [isnotnull(s_store_sk#48)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/store], PartitionFilters: [], PushedFilters: [IsNotNull(s_store_sk)], ReadSchema: struct<s_store_sk:int,s_store_name:string,s_company_id:int,s_street_number:string,s_street_name:s...\n"
      },
      "IM" : {
        "inputSizeInBytes" : 8031059544,
        "inputRowCount" : 250927395
      },
      "InitialPartitionNum" : 0,
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 15,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 4,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 6 ],
      "Objectives" : {
        "DurationInMs" : 26740,
        "TotalTasksDurationInMs" : 394489,
        "IOBytes" : {
          "Total" : 23037472111,
          "Details" : {
            "IR" : 1607394817,
            "IW" : 0,
            "SR" : 0,
            "SW" : 21430077294
          }
        }
      }
    },
    "5" : {
      "QSLogical" : {
        "operators" : {
          "0" : {
            "sign" : 72047044,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 76792882205,
                "rowCount" : 347479105
              },
              "compileTime" : {
                "sizeInBytes" : 76792882205,
                "rowCount" : 347479105
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [s_store_name#53, s_company_id#64, s_street_number#66, s_street_name#67, s_street_type#68, s_suite_number#69, s_city#70, s_county#71, s_state#72, s_zip#73], [s_store_name#53, s_company_id#64, s_street_number#66, s_street_name#67, s_street_type#68, s_suite_number#69, s_city#70, s_county#71, s_state#72, s_zip#73, sum(CASE WHEN ((sr_returned_date_sk#47 - ss_sold_date_sk#27) <= 30) THEN 1 ELSE 0 END) AS 30 days#159L, sum(CASE WHEN (((sr_returned_date_sk#47 - ss_sold_date_sk#27) > 30) AND ((sr_returned_date_sk#47 - ss_sold_date_sk#27) <= 60)) THEN 1 ELSE 0 END) AS 31-60 days#160L, sum(CASE WHEN (((sr_returned_date_sk#47 - ss_sold_date_sk#27) > 60) AND ((sr_returned_date_sk#47 - ss_sold_date_sk#27) <= 90)) THEN 1 ELSE 0 END) AS 61-90 days#161L, sum(CASE WHEN (((sr_returned_date_sk#47 - ss_sold_date_sk#27) > 90) AND ((sr_returned_date_sk#47 - ss_sold_date_sk#27) <= 120)) THEN 1 ELSE 0 END) AS 91-120 days#162L, sum(CASE WHEN ((sr_returned_date_sk#47 - ss_sold_date_sk#27) > 120) THEN 1 ELSE 0 END) AS >120 days#163L] "
          },
          "1" : {
            "sign" : -1323539810,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 65673550845,
                "rowCount" : 347479105
              },
              "compileTime" : {
                "sizeInBytes" : 65673550845,
                "rowCount" : 347479105
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_sold_date_sk#27, sr_returned_date_sk#47, s_store_name#53, s_company_id#64, s_street_number#66, s_street_name#67, s_street_type#68, s_suite_number#69, s_city#70, s_county#71, s_state#72, s_zip#73] "
          },
          "2" : {
            "sign" : -1972284148,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 76792882205,
                "rowCount" : 347479105
              },
              "compileTime" : {
                "sizeInBytes" : 76792882205,
                "rowCount" : 347479105
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (((ss_ticket_number#13L = sr_ticket_number#36L) AND (ss_item_sk#6 = sr_item_sk#29)) AND (ss_customer_sk#7 = sr_customer_sk#30)) "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "Join",
          "toId" : 1,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Project",
          "toId" : 0,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Aggregate [s_store_name#53, s_company_id#64, s_street_number#66, s_street_name#67, s_street_type#68, s_suite_number#69, s_city#70, s_county#71, s_state#72, s_zip#73], [s_store_name#53, s_company_id#64, s_street_number#66, s_street_name#67, s_street_type#68, s_suite_number#69, s_city#70, s_county#71, s_state#72, s_zip#73, sum(CASE WHEN ((sr_returned_date_sk#47 - ss_sold_date_sk#27) <= 30) THEN 1 ELSE 0 END) AS 30 days#159L, sum(CASE WHEN (((sr_returned_date_sk#47 - ss_sold_date_sk#27) > 30) AND ((sr_returned_date_sk#47 - ss_sold_date_sk#27) <= 60)) THEN 1 ELSE 0 END) AS 31-60 days#160L, sum(CASE WHEN (((sr_returned_date_sk#47 - ss_sold_date_sk#27) > 60) AND ((sr_returned_date_sk#47 - ss_sold_date_sk#27) <= 90)) THEN 1 ELSE 0 END) AS 61-90 days#161L, sum(CASE WHEN (((sr_returned_date_sk#47 - ss_sold_date_sk#27) > 90) AND ((sr_returned_date_sk#47 - ss_sold_date_sk#27) <= 120)) THEN 1 ELSE 0 END) AS 91-120 days#162L, sum(CASE WHEN ((sr_returned_date_sk#47 - ss_sold_date_sk#27) > 120) THEN 1 ELSE 0 END) AS >120 days#163L]\n+- Project [ss_sold_date_sk#27, sr_returned_date_sk#47, s_store_name#53, s_company_id#64, s_street_number#66, s_street_name#67, s_street_type#68, s_suite_number#69, s_city#70, s_county#71, s_state#72, s_zip#73]\n   +- Join Inner, (((ss_ticket_number#13L = sr_ticket_number#36L) AND (ss_item_sk#6 = sr_item_sk#29)) AND (ss_customer_sk#7 = sr_customer_sk#30))\n      :- Project [ss_item_sk#6, ss_customer_sk#7, ss_ticket_number#13L, ss_sold_date_sk#27, s_store_name#53, s_company_id#64, s_street_number#66, s_street_name#67, s_street_type#68, s_suite_number#69, s_city#70, s_county#71, s_state#72, s_zip#73]\n      :  +- Join Inner, (ss_store_sk#11 = s_store_sk#48)\n      :     :- Project [ss_item_sk#6, ss_customer_sk#7, ss_store_sk#11, ss_ticket_number#13L, ss_sold_date_sk#27]\n      :     :  +- Join Inner, (ss_sold_date_sk#27 = d_date_sk#77)\n      :     :     :- Project [ss_item_sk#6, ss_customer_sk#7, ss_store_sk#11, ss_ticket_number#13L, ss_sold_date_sk#27]\n      :     :     :  +- Filter ((((isnotnull(ss_ticket_number#13L) AND isnotnull(ss_item_sk#6)) AND isnotnull(ss_customer_sk#7)) AND isnotnull(ss_store_sk#11)) AND isnotnull(ss_sold_date_sk#27))\n      :     :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#5,ss_item_sk#6,ss_customer_sk#7,ss_cdemo_sk#8,ss_hdemo_sk#9,ss_addr_sk#10,ss_store_sk#11,ss_promo_sk#12,ss_ticket_number#13L,ss_quantity#14,ss_wholesale_cost#15,ss_list_price#16,ss_sales_price#17,ss_ext_discount_amt#18,ss_ext_sales_price#19,ss_ext_wholesale_cost#20,ss_ext_list_price#21,ss_ext_tax#22,ss_coupon_amt#23,ss_net_paid#24,ss_net_paid_inc_tax#25,ss_net_profit#26,ss_sold_date_sk#27] parquet\n      :     :     +- Project [d_date_sk#77]\n      :     :        +- Filter isnotnull(d_date_sk#77)\n      :     :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#77,d_date_id#78,d_date#79,d_month_seq#80,d_week_seq#81,d_quarter_seq#82,d_year#83,d_dow#84,d_moy#85,d_dom#86,d_qoy#87,d_fy_year#88,d_fy_quarter_seq#89,d_fy_week_seq#90,d_day_name#91,d_quarter_name#92,d_holiday#93,d_weekend#94,d_following_holiday#95,d_first_dom#96,d_last_dom#97,d_same_day_ly#98,d_same_day_lq#99,d_current_day#100,... 4 more fields] parquet\n      :     +- Project [s_store_sk#48, s_store_name#53, s_company_id#64, s_street_number#66, s_street_name#67, s_street_type#68, s_suite_number#69, s_city#70, s_county#71, s_state#72, s_zip#73]\n      :        +- Filter isnotnull(s_store_sk#48)\n      :           +- Relation spark_catalog.tpcds_100.store[s_store_sk#48,s_store_id#49,s_rec_start_date#50,s_rec_end_date#51,s_closed_date_sk#52,s_store_name#53,s_number_employees#54,s_floor_space#55,s_hours#56,s_manager#57,s_market_id#58,s_geography_class#59,s_market_desc#60,s_market_manager#61,s_division_id#62,s_division_name#63,s_company_id#64,s_company_name#65,s_street_number#66,s_street_name#67,s_street_type#68,s_suite_number#69,s_city#70,s_county#71,... 5 more fields] parquet\n      +- Project [sr_item_sk#29, sr_customer_sk#30, sr_ticket_number#36L, sr_returned_date_sk#47]\n         +- Join Inner, (sr_returned_date_sk#47 = d_date_sk#164)\n            :- Project [sr_item_sk#29, sr_customer_sk#30, sr_ticket_number#36L, sr_returned_date_sk#47]\n            :  +- Filter ((((isnotnull(sr_ticket_number#36L) AND isnotnull(sr_item_sk#29)) AND isnotnull(sr_customer_sk#30)) AND isnotnull(sr_returned_date_sk#47)) AND dynamicpruning#213 [sr_returned_date_sk#47])\n            :     :  +- Project [d_date_sk#164]\n            :     :     +- Filter (((isnotnull(d_year#170) AND isnotnull(d_moy#172)) AND ((d_year#170 = 2000) AND (d_moy#172 = 9))) AND isnotnull(d_date_sk#164))\n            :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#164,d_date_id#165,d_date#166,d_month_seq#167,d_week_seq#168,d_quarter_seq#169,d_year#170,d_dow#171,d_moy#172,d_dom#173,d_qoy#174,d_fy_year#175,d_fy_quarter_seq#176,d_fy_week_seq#177,d_day_name#178,d_quarter_name#179,d_holiday#180,d_weekend#181,d_following_holiday#182,d_first_dom#183,d_last_dom#184,d_same_day_ly#185,d_same_day_lq#186,d_current_day#187,... 4 more fields] parquet\n            :     +- Relation spark_catalog.tpcds_100.store_returns[sr_return_time_sk#28,sr_item_sk#29,sr_customer_sk#30,sr_cdemo_sk#31,sr_hdemo_sk#32,sr_addr_sk#33,sr_store_sk#34,sr_reason_sk#35,sr_ticket_number#36L,sr_return_quantity#37,sr_return_amt#38,sr_return_tax#39,sr_return_amt_inc_tax#40,sr_fee#41,sr_return_ship_cost#42,sr_refunded_cash#43,sr_reversed_charge#44,sr_store_credit#45,sr_net_loss#46,sr_returned_date_sk#47] parquet\n            +- Project [d_date_sk#164]\n               +- Filter (((isnotnull(d_year#170) AND isnotnull(d_moy#172)) AND ((d_year#170 = 2000) AND (d_moy#172 = 9))) AND isnotnull(d_date_sk#164))\n                  +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#164,d_date_id#165,d_date#166,d_month_seq#167,d_week_seq#168,d_quarter_seq#169,d_year#170,d_dow#171,d_moy#172,d_dom#173,d_qoy#174,d_fy_year#175,d_fy_quarter_seq#176,d_fy_week_seq#177,d_day_name#178,d_quarter_name#179,d_holiday#180,d_weekend#181,d_following_holiday#182,d_first_dom#183,d_last_dom#184,d_same_day_ly#185,d_same_day_lq#186,d_current_day#187,... 4 more fields] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "4" : {
            "sign" : 1616866935,
            "className" : "org.apache.spark.sql.execution.adaptive.ShuffleQueryStageExec",
            "sizeInBytes" : 56286617608,
            "rowCount" : 265329415,
            "isRuntime" : true,
            "predicate" : " (unknown) ShuffleQueryStage Output [14]: [ss_item_sk#6, ss_customer_sk#7, ss_ticket_number#13L, ss_sold_date_sk#27, s_store_name#53, s_company_id#64, s_street_number#66, s_street_name#67, s_street_type#68, s_suite_number#69, s_city#70, s_county#71, s_state#72, s_zip#73] Arguments: 4 "
          },
          "5" : {
            "sign" : -1664107175,
            "className" : "org.apache.spark.sql.execution.SortExec",
            "sizeInBytes" : -1,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Input [4]: [sr_item_sk#29, sr_customer_sk#30, sr_ticket_number#36L, sr_returned_date_sk#47] Arguments: [sr_ticket_number#36L ASC NULLS FIRST, sr_item_sk#29 ASC NULLS FIRST, sr_customer_sk#30 ASC NULLS FIRST], false, 0 "
          },
          "6" : {
            "sign" : -587984340,
            "className" : "org.apache.spark.sql.execution.adaptive.ShuffleQueryStageExec",
            "sizeInBytes" : 13421600,
            "rowCount" : 335540,
            "isRuntime" : true,
            "predicate" : " (unknown) ShuffleQueryStage Output [4]: [sr_item_sk#29, sr_customer_sk#30, sr_ticket_number#36L, sr_returned_date_sk#47] Arguments: 3 "
          },
          "1" : {
            "sign" : -432550784,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 65673550845,
            "rowCount" : 347479105,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [12]: [ss_sold_date_sk#27, sr_returned_date_sk#47, s_store_name#53, s_company_id#64, s_street_number#66, s_street_name#67, s_street_type#68, s_suite_number#69, s_city#70, s_county#71, s_state#72, s_zip#73] Input [18]: [ss_item_sk#6, ss_customer_sk#7, ss_ticket_number#13L, ss_sold_date_sk#27, s_store_name#53, s_company_id#64, s_street_number#66, s_street_name#67, s_street_type#68, s_suite_number#69, s_city#70, s_county#71, s_state#72, s_zip#73, sr_item_sk#29, sr_customer_sk#30, sr_ticket_number#36L, sr_returned_date_sk#47] "
          },
          "0" : {
            "sign" : -646789529,
            "className" : "org.apache.spark.sql.execution.aggregate.HashAggregateExec",
            "sizeInBytes" : 76792882205,
            "rowCount" : 347479105,
            "isRuntime" : false,
            "predicate" : " (unknown) HashAggregate Input [12]: [ss_sold_date_sk#27, sr_returned_date_sk#47, s_store_name#53, s_company_id#64, s_street_number#66, s_street_name#67, s_street_type#68, s_suite_number#69, s_city#70, s_county#71, s_state#72, s_zip#73] Keys [10]: [s_store_name#53, s_company_id#64, s_street_number#66, s_street_name#67, s_street_type#68, s_suite_number#69, s_city#70, s_county#71, s_state#72, s_zip#73] Functions [5]: [partial_sum(CASE WHEN ((sr_returned_date_sk#47 - ss_sold_date_sk#27) <= 30) THEN 1 ELSE 0 END), partial_sum(CASE WHEN (((sr_returned_date_sk#47 - ss_sold_date_sk#27) > 30) AND ((sr_returned_date_sk#47 - ss_sold_date_sk#27) <= 60)) THEN 1 ELSE 0 END), partial_sum(CASE WHEN (((sr_returned_date_sk#47 - ss_sold_date_sk#27) > 60) AND ((sr_returned_date_sk#47 - ss_sold_date_sk#27) <= 90)) THEN 1 ELSE 0 END), partial_sum(CASE WHEN (((sr_returned_date_sk#47 - ss_sold_date_sk#27) > 90) AND ((sr_returned_date_sk#47 - ss_sold_date_sk#27) <= 120)) THEN 1 ELSE 0 END), partial_sum(CASE WHEN ((sr_returned_date_sk#47 - ss_sold_date_sk#27) > 120) THEN 1 ELSE 0 END)] Aggregate Attributes [5]: [sum#214L, sum#215L, sum#216L, sum#217L, sum#218L] Results [15]: [s_store_name#53, s_company_id#64, s_street_number#66, s_street_name#67, s_street_type#68, s_suite_number#69, s_city#70, s_county#71, s_state#72, s_zip#73, sum#219L, sum#220L, sum#221L, sum#222L, sum#223L] "
          },
          "2" : {
            "sign" : 1302817034,
            "className" : "org.apache.spark.sql.execution.joins.SortMergeJoinExec",
            "sizeInBytes" : 76792882205,
            "rowCount" : 347479105,
            "isRuntime" : false,
            "predicate" : " (unknown) SortMergeJoin Left keys [3]: [ss_ticket_number#13L, ss_item_sk#6, ss_customer_sk#7] Right keys [3]: [sr_ticket_number#36L, sr_item_sk#29, sr_customer_sk#30] Join type: Inner Join condition: None "
          },
          "3" : {
            "sign" : 238592495,
            "className" : "org.apache.spark.sql.execution.SortExec",
            "sizeInBytes" : -1,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Input [14]: [ss_item_sk#6, ss_customer_sk#7, ss_ticket_number#13L, ss_sold_date_sk#27, s_store_name#53, s_company_id#64, s_street_number#66, s_street_name#67, s_street_type#68, s_suite_number#69, s_city#70, s_county#71, s_state#72, s_zip#73] Arguments: [ss_ticket_number#13L ASC NULLS FIRST, ss_item_sk#6 ASC NULLS FIRST, ss_customer_sk#7 ASC NULLS FIRST], false, 0 "
          }
        },
        "links" : [ {
          "fromId" : 4,
          "fromName" : "ShuffleQueryStage",
          "toId" : 3,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Sort",
          "toId" : 2,
          "toName" : "SortMergeJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "ShuffleQueryStage",
          "toId" : 5,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Sort",
          "toId" : 2,
          "toName" : "SortMergeJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "SortMergeJoin",
          "toId" : 1,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Project",
          "toId" : 0,
          "toName" : "HashAggregate",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "HashAggregate(keys=[s_store_name#53, s_company_id#64, s_street_number#66, s_street_name#67, s_street_type#68, s_suite_number#69, s_city#70, s_county#71, s_state#72, s_zip#73], functions=[partial_sum(CASE WHEN ((sr_returned_date_sk#47 - ss_sold_date_sk#27) <= 30) THEN 1 ELSE 0 END), partial_sum(CASE WHEN (((sr_returned_date_sk#47 - ss_sold_date_sk#27) > 30) AND ((sr_returned_date_sk#47 - ss_sold_date_sk#27) <= 60)) THEN 1 ELSE 0 END), partial_sum(CASE WHEN (((sr_returned_date_sk#47 - ss_sold_date_sk#27) > 60) AND ((sr_returned_date_sk#47 - ss_sold_date_sk#27) <= 90)) THEN 1 ELSE 0 END), partial_sum(CASE WHEN (((sr_returned_date_sk#47 - ss_sold_date_sk#27) > 90) AND ((sr_returned_date_sk#47 - ss_sold_date_sk#27) <= 120)) THEN 1 ELSE 0 END), partial_sum(CASE WHEN ((sr_returned_date_sk#47 - ss_sold_date_sk#27) > 120) THEN 1 ELSE 0 END)], output=[s_store_name#53, s_company_id#64, s_street_number#66, s_street_name#67, s_street_type#68, s_suite_number#69, s_city#70, s_county#71, s_state#72, s_zip#73, sum#219L, sum#220L, sum#221L, sum#222L, sum#223L])\n+- Project [ss_sold_date_sk#27, sr_returned_date_sk#47, s_store_name#53, s_company_id#64, s_street_number#66, s_street_name#67, s_street_type#68, s_suite_number#69, s_city#70, s_county#71, s_state#72, s_zip#73]\n   +- SortMergeJoin [ss_ticket_number#13L, ss_item_sk#6, ss_customer_sk#7], [sr_ticket_number#36L, sr_item_sk#29, sr_customer_sk#30], Inner\n      :- Sort [ss_ticket_number#13L ASC NULLS FIRST, ss_item_sk#6 ASC NULLS FIRST, ss_customer_sk#7 ASC NULLS FIRST], false, 0\n      :  +- ShuffleQueryStage 4\n      :     +- Exchange hashpartitioning(ss_ticket_number#13L, ss_item_sk#6, ss_customer_sk#7, 200), ENSURE_REQUIREMENTS, [plan_id=593]\n      :        +- *(5) Project [ss_item_sk#6, ss_customer_sk#7, ss_ticket_number#13L, ss_sold_date_sk#27, s_store_name#53, s_company_id#64, s_street_number#66, s_street_name#67, s_street_type#68, s_suite_number#69, s_city#70, s_county#71, s_state#72, s_zip#73]\n      :           +- *(5) BroadcastHashJoin [ss_store_sk#11], [s_store_sk#48], Inner, BuildRight, false\n      :              :- *(5) Project [ss_item_sk#6, ss_customer_sk#7, ss_store_sk#11, ss_ticket_number#13L, ss_sold_date_sk#27]\n      :              :  +- *(5) BroadcastHashJoin [ss_sold_date_sk#27], [d_date_sk#77], Inner, BuildRight, false\n      :              :     :- *(5) Filter (((isnotnull(ss_ticket_number#13L) AND isnotnull(ss_item_sk#6)) AND isnotnull(ss_customer_sk#7)) AND isnotnull(ss_store_sk#11))\n      :              :     :  +- *(5) ColumnarToRow\n      :              :     :     +- FileScan parquet spark_catalog.tpcds_100.store_sales[ss_item_sk#6,ss_customer_sk#7,ss_store_sk#11,ss_ticket_number#13L,ss_sold_date_sk#27] Batched: true, DataFilters: [isnotnull(ss_ticket_number#13L), isnotnull(ss_item_sk#6), isnotnull(ss_customer_sk#7), isnotnull..., Format: Parquet, Location: InMemoryFileIndex(1823 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/store_..., PartitionFilters: [isnotnull(ss_sold_date_sk#27)], PushedFilters: [IsNotNull(ss_ticket_number), IsNotNull(ss_item_sk), IsNotNull(ss_customer_sk), IsNotNull(ss_stor..., ReadSchema: struct<ss_item_sk:int,ss_customer_sk:int,ss_store_sk:int,ss_ticket_number:bigint>\n      :              :     +- BroadcastQueryStage 0\n      :              :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=196]\n      :              :           +- *(1) Filter isnotnull(d_date_sk#77)\n      :              :              +- *(1) ColumnarToRow\n      :              :                 +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#77] Batched: true, DataFilters: [isnotnull(d_date_sk#77)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int>\n      :              +- BroadcastQueryStage 1\n      :                 +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=213]\n      :                    +- *(2) Filter isnotnull(s_store_sk#48)\n      :                       +- *(2) ColumnarToRow\n      :                          +- FileScan parquet spark_catalog.tpcds_100.store[s_store_sk#48,s_store_name#53,s_company_id#64,s_street_number#66,s_street_name#67,s_street_type#68,s_suite_number#69,s_city#70,s_county#71,s_state#72,s_zip#73] Batched: true, DataFilters: [isnotnull(s_store_sk#48)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/store], PartitionFilters: [], PushedFilters: [IsNotNull(s_store_sk)], ReadSchema: struct<s_store_sk:int,s_store_name:string,s_company_id:int,s_street_number:string,s_street_name:s...\n      +- Sort [sr_ticket_number#36L ASC NULLS FIRST, sr_item_sk#29 ASC NULLS FIRST, sr_customer_sk#30 ASC NULLS FIRST], false, 0\n         +- ShuffleQueryStage 3\n            +- Exchange hashpartitioning(sr_ticket_number#36L, sr_item_sk#29, sr_customer_sk#30, 200), ENSURE_REQUIREMENTS, [plan_id=469]\n               +- *(4) Project [sr_item_sk#29, sr_customer_sk#30, sr_ticket_number#36L, sr_returned_date_sk#47]\n                  +- *(4) BroadcastHashJoin [sr_returned_date_sk#47], [d_date_sk#164], Inner, BuildRight, false\n                     :- *(4) Filter ((isnotnull(sr_ticket_number#36L) AND isnotnull(sr_item_sk#29)) AND isnotnull(sr_customer_sk#30))\n                     :  +- *(4) ColumnarToRow\n                     :     +- FileScan parquet spark_catalog.tpcds_100.store_returns[sr_item_sk#29,sr_customer_sk#30,sr_ticket_number#36L,sr_returned_date_sk#47] Batched: true, DataFilters: [isnotnull(sr_ticket_number#36L), isnotnull(sr_item_sk#29), isnotnull(sr_customer_sk#30)], Format: Parquet, Location: InMemoryFileIndex(2003 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/store_..., PartitionFilters: [isnotnull(sr_returned_date_sk#47), dynamicpruningexpression(sr_returned_date_sk#47 IN dynamicpru..., PushedFilters: [IsNotNull(sr_ticket_number), IsNotNull(sr_item_sk), IsNotNull(sr_customer_sk)], ReadSchema: struct<sr_item_sk:int,sr_customer_sk:int,sr_ticket_number:bigint>\n                     :           +- SubqueryBroadcast dynamicpruning#213, 0, [d_date_sk#164], [id=#443]\n                     :              +- AdaptiveSparkPlan isFinalPlan=true\n                                       +- == Final Plan ==\n                                          BroadcastQueryStage 1\n                                          +- ReusedExchange [d_date_sk#164], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=234]\n                                       +- == Initial Plan ==\n                                          BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=440]\n                                          +- Project [d_date_sk#164]\n                                             +- Filter ((((isnotnull(d_year#170) AND isnotnull(d_moy#172)) AND (d_year#170 = 2000)) AND (d_moy#172 = 9)) AND isnotnull(d_date_sk#164))\n                                                +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#164,d_year#170,d_moy#172] Batched: true, DataFilters: [isnotnull(d_year#170), isnotnull(d_moy#172), (d_year#170 = 2000), (d_moy#172 = 9), isnotnull(d_d..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), IsNotNull(d_moy), EqualTo(d_year,2000), EqualTo(d_moy,9), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>\n                     +- BroadcastQueryStage 2\n                        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=234]\n                           +- *(3) Project [d_date_sk#164]\n                              +- *(3) Filter ((((isnotnull(d_year#170) AND isnotnull(d_moy#172)) AND (d_year#170 = 2000)) AND (d_moy#172 = 9)) AND isnotnull(d_date_sk#164))\n                                 +- *(3) ColumnarToRow\n                                    +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#164,d_year#170,d_moy#172] Batched: true, DataFilters: [isnotnull(d_year#170), isnotnull(d_moy#172), (d_year#170 = 2000), (d_moy#172 = 9), isnotnull(d_d..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), IsNotNull(d_moy), EqualTo(d_year,2000), EqualTo(d_moy,9), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>\n"
      },
      "IM" : {
        "inputSizeInBytes" : 56300039208,
        "inputRowCount" : 265664955
      },
      "InitialPartitionNum" : 200,
      "PD" : {
        "1" : [ 111911483, 112247611, 111968183, 112051197, 111994497, 112311461, 111900261, 111760547, 111760547, 111843561, 112145433, 111926575, 111836015, 111911483, 111701579, 111986951, 111892715, 112145433, 111879617, 111911483, 111968183, 112285147, 111919029, 112126665, 111968183, 112085057, 112077511, 112084372, 111926575, 112292693, 112062419, 112190911, 111843561, 111903937, 111994497, 112228447, 112062419, 111907807, 112002043, 112256363, 112160525, 111986951, 112217225, 112402021, 112077511, 111994497, 112141757, 112036105, 112062419, 112002043, 112126665, 112485035, 112002043, 112002043, 111926575, 111790933, 112051197, 112368161, 112356939, 112001358, 111925890, 112002043, 112335507, 111994497, 112375707, 111960637, 112480674, 112058743, 112183365, 112073150, 112311461, 111760547, 111911483, 112235993, 112085057, 112091918, 112115964, 112058743, 111960730, 112145433, 112092603, 111926575, 111900261, 111975729, 112134211, 112051197, 111987347, 111968183, 112168071, 112228447, 111986951, 112002043, 111900261, 112292693, 112145433, 111903937, 112183365, 112228447, 112202133, 112145433, 111836015, 111734233, 111767408, 112148618, 111892715, 112134211, 112051197, 111993812, 112202133, 112209679, 112043651, 111836015, 112077511, 111602065, 112160525, 112008904, 112202133, 111836015, 112285147, 111843561, 112259915, 112424861, 112069965, 112316739, 112326553, 112077511, 111843561, 112209679, 111892715, 112107897, 112292693, 112323079, 112069965, 111836015, 112084372, 112026089, 111941667, 111836015, 112077511, 112085057, 111994497, 111986951, 111836015, 112285147, 111975729, 112292693, 112319007, 112152979, 112002043, 111692625, 111994497, 111892715, 111990821, 112190911, 111968183, 112101557, 111828469, 112168071, 112091918, 111919029, 111873947, 112258833, 112085057, 112069965, 112209679, 111903937, 112217225, 111960637, 111911483, 111919029, 112077511, 112141757, 112126665, 112319007, 111994497, 112257946, 112062419, 112066289, 111624703, 112002043, 111990821, 111919029, 111843561, 111828469, 112002043, 112077511, 112141757, 111900261, 111994497, 111892715, 111925890, 111919029, 111836015, 111836015, 111982590, 112009589, 112153896, 111836015, 111979405, 111911483 ],
        "0" : [ 33117, 33751, 34224, 34883, 33559, 34754, 34738, 34840, 33054, 34473, 35472, 33823, 35453, 33973, 35026, 35318, 34387, 33810, 33752, 34159, 35039, 35042, 34103, 35205, 34442, 33136, 34504, 33669, 34498, 36131, 34285, 35850, 34903, 36591, 36131, 35093, 36382, 32644, 35886, 35459, 32925, 33298, 35456, 35396, 34410, 35290, 36669, 35022, 34143, 35046, 35476, 33116, 34979, 34533, 32686, 35310, 34119, 34185, 34371, 34758, 35399, 34324, 34876, 36441, 33875, 33689, 34410, 35720, 35019, 34019, 35863, 35003, 35208, 34325, 34224, 35538, 36284, 34821, 34895, 35006, 33220, 33937, 36518, 33693, 34303, 36407, 33956, 34368, 34840, 34615, 37196, 34039, 35586, 35287, 36127, 34801, 33670, 33318, 34817, 34162, 34410, 34592, 35954, 36455, 34777, 34285, 35137, 34162, 34674, 33566, 35945, 34256, 34801, 33669, 35433, 34572, 33814, 36039, 34285, 34214, 35003, 34060, 35522, 35358, 34221, 35170, 34186, 33214, 34826, 34818, 34865, 35456, 33996, 35022, 35479, 35456, 35519, 35003, 33539, 34596, 35225, 33279, 33527, 36832, 34549, 34837, 35236, 33680, 35416, 35783, 33586, 36675, 33148, 35090, 33752, 35065, 34139, 34920, 34694, 33798, 33566, 34612, 35333, 33980, 34541, 34078, 35724, 35042, 36541, 35006, 33895, 34638, 34735, 34367, 34798, 33806, 33097, 34449, 35845, 35929, 34636, 33128, 35658, 35188, 36059, 34425, 34553, 35954, 35720, 34573, 34368, 37171, 34869, 34592, 34644, 35339, 33875, 36216, 34690, 33787 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 5,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 9 ],
      "Objectives" : {
        "DurationInMs" : 66137,
        "TotalTasksDurationInMs" : 1039264,
        "IOBytes" : {
          "Total" : 21444073520,
          "Details" : {
            "IR" : 0,
            "IW" : 0,
            "SR" : 21436702784,
            "SW" : 7370736
          }
        }
      }
    },
    "6" : {
      "QSLogical" : {
        "operators" : {
          "0" : {
            "sign" : 721240693,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 23200,
                "rowCount" : 100
              },
              "compileTime" : {
                "sizeInBytes" : 23200,
                "rowCount" : 100
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) GlobalLimit Arguments: 100 "
          },
          "1" : {
            "sign" : 236010664,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 76792882205,
                "rowCount" : 347479105
              },
              "compileTime" : {
                "sizeInBytes" : 76792882205,
                "rowCount" : 347479105
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) LocalLimit Arguments: 100 "
          },
          "2" : {
            "sign" : 1224122719,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 76792882205,
                "rowCount" : 347479105
              },
              "compileTime" : {
                "sizeInBytes" : 76792882205,
                "rowCount" : 347479105
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [s_store_name#53 ASC NULLS FIRST, s_company_id#64 ASC NULLS FIRST, s_street_number#66 ASC NULLS FIRST, s_street_name#67 ASC NULLS FIRST, s_street_type#68 ASC NULLS FIRST, s_suite_number#69 ASC NULLS FIRST, s_city#70 ASC NULLS FIRST, s_county#71 ASC NULLS FIRST, s_state#72 ASC NULLS FIRST, s_zip#73 ASC NULLS FIRST], true "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "LocalLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "LocalLimit",
          "toId" : 0,
          "toName" : "GlobalLimit",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [s_store_name#53 ASC NULLS FIRST, s_company_id#64 ASC NULLS FIRST, s_street_number#66 ASC NULLS FIRST, s_street_name#67 ASC NULLS FIRST, s_street_type#68 ASC NULLS FIRST, s_suite_number#69 ASC NULLS FIRST, s_city#70 ASC NULLS FIRST, s_county#71 ASC NULLS FIRST, s_state#72 ASC NULLS FIRST, s_zip#73 ASC NULLS FIRST], true\n      +- Aggregate [s_store_name#53, s_company_id#64, s_street_number#66, s_street_name#67, s_street_type#68, s_suite_number#69, s_city#70, s_county#71, s_state#72, s_zip#73], [s_store_name#53, s_company_id#64, s_street_number#66, s_street_name#67, s_street_type#68, s_suite_number#69, s_city#70, s_county#71, s_state#72, s_zip#73, sum(CASE WHEN ((sr_returned_date_sk#47 - ss_sold_date_sk#27) <= 30) THEN 1 ELSE 0 END) AS 30 days#159L, sum(CASE WHEN (((sr_returned_date_sk#47 - ss_sold_date_sk#27) > 30) AND ((sr_returned_date_sk#47 - ss_sold_date_sk#27) <= 60)) THEN 1 ELSE 0 END) AS 31-60 days#160L, sum(CASE WHEN (((sr_returned_date_sk#47 - ss_sold_date_sk#27) > 60) AND ((sr_returned_date_sk#47 - ss_sold_date_sk#27) <= 90)) THEN 1 ELSE 0 END) AS 61-90 days#161L, sum(CASE WHEN (((sr_returned_date_sk#47 - ss_sold_date_sk#27) > 90) AND ((sr_returned_date_sk#47 - ss_sold_date_sk#27) <= 120)) THEN 1 ELSE 0 END) AS 91-120 days#162L, sum(CASE WHEN ((sr_returned_date_sk#47 - ss_sold_date_sk#27) > 120) THEN 1 ELSE 0 END) AS >120 days#163L]\n         +- Project [ss_sold_date_sk#27, sr_returned_date_sk#47, s_store_name#53, s_company_id#64, s_street_number#66, s_street_name#67, s_street_type#68, s_suite_number#69, s_city#70, s_county#71, s_state#72, s_zip#73]\n            +- Join Inner, (((ss_ticket_number#13L = sr_ticket_number#36L) AND (ss_item_sk#6 = sr_item_sk#29)) AND (ss_customer_sk#7 = sr_customer_sk#30))\n               :- Project [ss_item_sk#6, ss_customer_sk#7, ss_ticket_number#13L, ss_sold_date_sk#27, s_store_name#53, s_company_id#64, s_street_number#66, s_street_name#67, s_street_type#68, s_suite_number#69, s_city#70, s_county#71, s_state#72, s_zip#73]\n               :  +- Join Inner, (ss_store_sk#11 = s_store_sk#48)\n               :     :- Project [ss_item_sk#6, ss_customer_sk#7, ss_store_sk#11, ss_ticket_number#13L, ss_sold_date_sk#27]\n               :     :  +- Join Inner, (ss_sold_date_sk#27 = d_date_sk#77)\n               :     :     :- Project [ss_item_sk#6, ss_customer_sk#7, ss_store_sk#11, ss_ticket_number#13L, ss_sold_date_sk#27]\n               :     :     :  +- Filter ((((isnotnull(ss_ticket_number#13L) AND isnotnull(ss_item_sk#6)) AND isnotnull(ss_customer_sk#7)) AND isnotnull(ss_store_sk#11)) AND isnotnull(ss_sold_date_sk#27))\n               :     :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#5,ss_item_sk#6,ss_customer_sk#7,ss_cdemo_sk#8,ss_hdemo_sk#9,ss_addr_sk#10,ss_store_sk#11,ss_promo_sk#12,ss_ticket_number#13L,ss_quantity#14,ss_wholesale_cost#15,ss_list_price#16,ss_sales_price#17,ss_ext_discount_amt#18,ss_ext_sales_price#19,ss_ext_wholesale_cost#20,ss_ext_list_price#21,ss_ext_tax#22,ss_coupon_amt#23,ss_net_paid#24,ss_net_paid_inc_tax#25,ss_net_profit#26,ss_sold_date_sk#27] parquet\n               :     :     +- Project [d_date_sk#77]\n               :     :        +- Filter isnotnull(d_date_sk#77)\n               :     :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#77,d_date_id#78,d_date#79,d_month_seq#80,d_week_seq#81,d_quarter_seq#82,d_year#83,d_dow#84,d_moy#85,d_dom#86,d_qoy#87,d_fy_year#88,d_fy_quarter_seq#89,d_fy_week_seq#90,d_day_name#91,d_quarter_name#92,d_holiday#93,d_weekend#94,d_following_holiday#95,d_first_dom#96,d_last_dom#97,d_same_day_ly#98,d_same_day_lq#99,d_current_day#100,... 4 more fields] parquet\n               :     +- Project [s_store_sk#48, s_store_name#53, s_company_id#64, s_street_number#66, s_street_name#67, s_street_type#68, s_suite_number#69, s_city#70, s_county#71, s_state#72, s_zip#73]\n               :        +- Filter isnotnull(s_store_sk#48)\n               :           +- Relation spark_catalog.tpcds_100.store[s_store_sk#48,s_store_id#49,s_rec_start_date#50,s_rec_end_date#51,s_closed_date_sk#52,s_store_name#53,s_number_employees#54,s_floor_space#55,s_hours#56,s_manager#57,s_market_id#58,s_geography_class#59,s_market_desc#60,s_market_manager#61,s_division_id#62,s_division_name#63,s_company_id#64,s_company_name#65,s_street_number#66,s_street_name#67,s_street_type#68,s_suite_number#69,s_city#70,s_county#71,... 5 more fields] parquet\n               +- Project [sr_item_sk#29, sr_customer_sk#30, sr_ticket_number#36L, sr_returned_date_sk#47]\n                  +- Join Inner, (sr_returned_date_sk#47 = d_date_sk#164)\n                     :- Project [sr_item_sk#29, sr_customer_sk#30, sr_ticket_number#36L, sr_returned_date_sk#47]\n                     :  +- Filter ((((isnotnull(sr_ticket_number#36L) AND isnotnull(sr_item_sk#29)) AND isnotnull(sr_customer_sk#30)) AND isnotnull(sr_returned_date_sk#47)) AND dynamicpruning#213 [sr_returned_date_sk#47])\n                     :     :  +- Project [d_date_sk#164]\n                     :     :     +- Filter (((isnotnull(d_year#170) AND isnotnull(d_moy#172)) AND ((d_year#170 = 2000) AND (d_moy#172 = 9))) AND isnotnull(d_date_sk#164))\n                     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#164,d_date_id#165,d_date#166,d_month_seq#167,d_week_seq#168,d_quarter_seq#169,d_year#170,d_dow#171,d_moy#172,d_dom#173,d_qoy#174,d_fy_year#175,d_fy_quarter_seq#176,d_fy_week_seq#177,d_day_name#178,d_quarter_name#179,d_holiday#180,d_weekend#181,d_following_holiday#182,d_first_dom#183,d_last_dom#184,d_same_day_ly#185,d_same_day_lq#186,d_current_day#187,... 4 more fields] parquet\n                     :     +- Relation spark_catalog.tpcds_100.store_returns[sr_return_time_sk#28,sr_item_sk#29,sr_customer_sk#30,sr_cdemo_sk#31,sr_hdemo_sk#32,sr_addr_sk#33,sr_store_sk#34,sr_reason_sk#35,sr_ticket_number#36L,sr_return_quantity#37,sr_return_amt#38,sr_return_tax#39,sr_return_amt_inc_tax#40,sr_fee#41,sr_return_ship_cost#42,sr_refunded_cash#43,sr_reversed_charge#44,sr_store_credit#45,sr_net_loss#46,sr_returned_date_sk#47] parquet\n                     +- Project [d_date_sk#164]\n                        +- Filter (((isnotnull(d_year#170) AND isnotnull(d_moy#172)) AND ((d_year#170 = 2000) AND (d_moy#172 = 9))) AND isnotnull(d_date_sk#164))\n                           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#164,d_date_id#165,d_date#166,d_month_seq#167,d_week_seq#168,d_quarter_seq#169,d_year#170,d_dow#171,d_moy#172,d_dom#173,d_qoy#174,d_fy_year#175,d_fy_quarter_seq#176,d_fy_week_seq#177,d_day_name#178,d_quarter_name#179,d_holiday#180,d_weekend#181,d_following_holiday#182,d_first_dom#183,d_last_dom#184,d_same_day_ly#185,d_same_day_lq#186,d_current_day#187,... 4 more fields] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "0" : {
            "sign" : -389020676,
            "className" : "org.apache.spark.sql.execution.TakeOrderedAndProjectExec",
            "sizeInBytes" : 23200,
            "rowCount" : 100,
            "isRuntime" : false,
            "predicate" : " (unknown) TakeOrderedAndProject Input [15]: [s_store_name#53, s_company_id#64, s_street_number#66, s_street_name#67, s_street_type#68, s_suite_number#69, s_city#70, s_county#71, s_state#72, s_zip#73, 30 days#159L, 31-60 days#160L, 61-90 days#161L, 91-120 days#162L, >120 days#163L] Arguments: 100, [s_store_name#53 ASC NULLS FIRST, s_company_id#64 ASC NULLS FIRST, s_street_number#66 ASC NULLS FIRST, s_street_name#67 ASC NULLS FIRST, s_street_type#68 ASC NULLS FIRST, s_suite_number#69 ASC NULLS FIRST, s_city#70 ASC NULLS FIRST, s_county#71 ASC NULLS FIRST, s_state#72 ASC NULLS FIRST, s_zip#73 ASC NULLS FIRST], [s_store_name#53, s_company_id#64, s_street_number#66, s_street_name#67, s_street_type#68, s_suite_number#69, s_city#70, s_county#71, s_state#72, s_zip#73, 30 days#159L, 31-60 days#160L, 61-90 days#161L, 91-120 days#162L, >120 days#163L] "
          },
          "1" : {
            "sign" : -667731069,
            "className" : "org.apache.spark.sql.execution.aggregate.HashAggregateExec",
            "sizeInBytes" : 8828480,
            "rowCount" : 40104,
            "isRuntime" : true,
            "predicate" : " (unknown) HashAggregate Input [15]: [s_store_name#53, s_company_id#64, s_street_number#66, s_street_name#67, s_street_type#68, s_suite_number#69, s_city#70, s_county#71, s_state#72, s_zip#73, sum#219L, sum#220L, sum#221L, sum#222L, sum#223L] Keys [10]: [s_store_name#53, s_company_id#64, s_street_number#66, s_street_name#67, s_street_type#68, s_suite_number#69, s_city#70, s_county#71, s_state#72, s_zip#73] Functions [5]: [sum(CASE WHEN ((sr_returned_date_sk#47 - ss_sold_date_sk#27) <= 30) THEN 1 ELSE 0 END), sum(CASE WHEN (((sr_returned_date_sk#47 - ss_sold_date_sk#27) > 30) AND ((sr_returned_date_sk#47 - ss_sold_date_sk#27) <= 60)) THEN 1 ELSE 0 END), sum(CASE WHEN (((sr_returned_date_sk#47 - ss_sold_date_sk#27) > 60) AND ((sr_returned_date_sk#47 - ss_sold_date_sk#27) <= 90)) THEN 1 ELSE 0 END), sum(CASE WHEN (((sr_returned_date_sk#47 - ss_sold_date_sk#27) > 90) AND ((sr_returned_date_sk#47 - ss_sold_date_sk#27) <= 120)) THEN 1 ELSE 0 END), sum(CASE WHEN ((sr_returned_date_sk#47 - ss_sold_date_sk#27) > 120) THEN 1 ELSE 0 END)] Aggregate Attributes [5]: [sum(CASE WHEN ((sr_returned_date_sk#47 - ss_sold_date_sk#27) <= 30) THEN 1 ELSE 0 END)#192L, sum(CASE WHEN (((sr_returned_date_sk#47 - ss_sold_date_sk#27) > 30) AND ((sr_returned_date_sk#47 - ss_sold_date_sk#27) <= 60)) THEN 1 ELSE 0 END)#193L, sum(CASE WHEN (((sr_returned_date_sk#47 - ss_sold_date_sk#27) > 60) AND ((sr_returned_date_sk#47 - ss_sold_date_sk#27) <= 90)) THEN 1 ELSE 0 END)#194L, sum(CASE WHEN (((sr_returned_date_sk#47 - ss_sold_date_sk#27) > 90) AND ((sr_returned_date_sk#47 - ss_sold_date_sk#27) <= 120)) THEN 1 ELSE 0 END)#195L, sum(CASE WHEN ((sr_returned_date_sk#47 - ss_sold_date_sk#27) > 120) THEN 1 ELSE 0 END)#196L] Results [15]: [s_store_name#53, s_company_id#64, s_street_number#66, s_street_name#67, s_street_type#68, s_suite_number#69, s_city#70, s_county#71, s_state#72, s_zip#73, sum(CASE WHEN ((sr_returned_date_sk#47 - ss_sold_date_sk#27) <= 30) THEN 1 ELSE 0 END)#192L AS 30 days#159L, sum(CASE WHEN (((sr_returned_date_sk#47 - ss_sold_date_sk#27) > 30) AND ((sr_returned_date_sk#47 - ss_sold_date_sk#27) <= 60)) THEN 1 ELSE 0 END)#193L AS 31-60 days#160L, sum(CASE WHEN (((sr_returned_date_sk#47 - ss_sold_date_sk#27) > 60) AND ((sr_returned_date_sk#47 - ss_sold_date_sk#27) <= 90)) THEN 1 ELSE 0 END)#194L AS 61-90 days#161L, sum(CASE WHEN (((sr_returned_date_sk#47 - ss_sold_date_sk#27) > 90) AND ((sr_returned_date_sk#47 - ss_sold_date_sk#27) <= 120)) THEN 1 ELSE 0 END)#195L AS 91-120 days#162L, sum(CASE WHEN ((sr_returned_date_sk#47 - ss_sold_date_sk#27) > 120) THEN 1 ELSE 0 END)#196L AS >120 days#163L] "
          },
          "2" : {
            "sign" : 1981198517,
            "className" : "org.apache.spark.sql.execution.adaptive.ShuffleQueryStageExec",
            "sizeInBytes" : 76792882205,
            "rowCount" : 347479105,
            "isRuntime" : false,
            "predicate" : " (unknown) ShuffleQueryStage Output [15]: [s_store_name#53, s_company_id#64, s_street_number#66, s_street_name#67, s_street_type#68, s_suite_number#69, s_city#70, s_county#71, s_state#72, s_zip#73, sum#219L, sum#220L, sum#221L, sum#222L, sum#223L] Arguments: 5 "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "ShuffleQueryStage",
          "toId" : 1,
          "toName" : "HashAggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "HashAggregate",
          "toId" : 0,
          "toName" : "TakeOrderedAndProject",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "TakeOrderedAndProject(limit=100, orderBy=[s_store_name#53 ASC NULLS FIRST,s_company_id#64 ASC NULLS FIRST,s_street_number#66 ASC NULLS FIRST,s_street_name#67 ASC NULLS FIRST,s_street_type#68 ASC NULLS FIRST,s_suite_number#69 ASC NULLS FIRST,s_city#70 ASC NULLS FIRST,s_county#71 ASC NULLS FIRST,s_state#72 ASC NULLS FIRST,s_zip#73 ASC NULLS FIRST], output=[s_store_name#53,s_company_id#64,s_street_number#66,s_street_name#67,s_street_type#68,s_suite_number#69,s_city#70,s_county#71,s_state#72,s_zip#73,30 days#159L,31-60 days#160L,61-90 days#161L,91-120 days#162L,>120 days#163L])\n+- HashAggregate(keys=[s_store_name#53, s_company_id#64, s_street_number#66, s_street_name#67, s_street_type#68, s_suite_number#69, s_city#70, s_county#71, s_state#72, s_zip#73], functions=[sum(CASE WHEN ((sr_returned_date_sk#47 - ss_sold_date_sk#27) <= 30) THEN 1 ELSE 0 END), sum(CASE WHEN (((sr_returned_date_sk#47 - ss_sold_date_sk#27) > 30) AND ((sr_returned_date_sk#47 - ss_sold_date_sk#27) <= 60)) THEN 1 ELSE 0 END), sum(CASE WHEN (((sr_returned_date_sk#47 - ss_sold_date_sk#27) > 60) AND ((sr_returned_date_sk#47 - ss_sold_date_sk#27) <= 90)) THEN 1 ELSE 0 END), sum(CASE WHEN (((sr_returned_date_sk#47 - ss_sold_date_sk#27) > 90) AND ((sr_returned_date_sk#47 - ss_sold_date_sk#27) <= 120)) THEN 1 ELSE 0 END), sum(CASE WHEN ((sr_returned_date_sk#47 - ss_sold_date_sk#27) > 120) THEN 1 ELSE 0 END)], output=[s_store_name#53, s_company_id#64, s_street_number#66, s_street_name#67, s_street_type#68, s_suite_number#69, s_city#70, s_county#71, s_state#72, s_zip#73, 30 days#159L, 31-60 days#160L, 61-90 days#161L, 91-120 days#162L, >120 days#163L])\n   +- ShuffleQueryStage 5\n      +- Exchange hashpartitioning(s_store_name#53, s_company_id#64, s_street_number#66, s_street_name#67, s_street_type#68, s_suite_number#69, s_city#70, s_county#71, s_state#72, s_zip#73, 200), ENSURE_REQUIREMENTS, [plan_id=693]\n         +- *(8) HashAggregate(keys=[s_store_name#53, s_company_id#64, s_street_number#66, s_street_name#67, s_street_type#68, s_suite_number#69, s_city#70, s_county#71, s_state#72, s_zip#73], functions=[partial_sum(CASE WHEN ((sr_returned_date_sk#47 - ss_sold_date_sk#27) <= 30) THEN 1 ELSE 0 END), partial_sum(CASE WHEN (((sr_returned_date_sk#47 - ss_sold_date_sk#27) > 30) AND ((sr_returned_date_sk#47 - ss_sold_date_sk#27) <= 60)) THEN 1 ELSE 0 END), partial_sum(CASE WHEN (((sr_returned_date_sk#47 - ss_sold_date_sk#27) > 60) AND ((sr_returned_date_sk#47 - ss_sold_date_sk#27) <= 90)) THEN 1 ELSE 0 END), partial_sum(CASE WHEN (((sr_returned_date_sk#47 - ss_sold_date_sk#27) > 90) AND ((sr_returned_date_sk#47 - ss_sold_date_sk#27) <= 120)) THEN 1 ELSE 0 END), partial_sum(CASE WHEN ((sr_returned_date_sk#47 - ss_sold_date_sk#27) > 120) THEN 1 ELSE 0 END)], output=[s_store_name#53, s_company_id#64, s_street_number#66, s_street_name#67, s_street_type#68, s_suite_number#69, s_city#70, s_county#71, s_state#72, s_zip#73, sum#219L, sum#220L, sum#221L, sum#222L, sum#223L])\n            +- *(8) Project [ss_sold_date_sk#27, sr_returned_date_sk#47, s_store_name#53, s_company_id#64, s_street_number#66, s_street_name#67, s_street_type#68, s_suite_number#69, s_city#70, s_county#71, s_state#72, s_zip#73]\n               +- *(8) SortMergeJoin [ss_ticket_number#13L, ss_item_sk#6, ss_customer_sk#7], [sr_ticket_number#36L, sr_item_sk#29, sr_customer_sk#30], Inner\n                  :- *(6) Sort [ss_ticket_number#13L ASC NULLS FIRST, ss_item_sk#6 ASC NULLS FIRST, ss_customer_sk#7 ASC NULLS FIRST], false, 0\n                  :  +- ShuffleQueryStage 4\n                  :     +- Exchange hashpartitioning(ss_ticket_number#13L, ss_item_sk#6, ss_customer_sk#7, 200), ENSURE_REQUIREMENTS, [plan_id=593]\n                  :        +- *(5) Project [ss_item_sk#6, ss_customer_sk#7, ss_ticket_number#13L, ss_sold_date_sk#27, s_store_name#53, s_company_id#64, s_street_number#66, s_street_name#67, s_street_type#68, s_suite_number#69, s_city#70, s_county#71, s_state#72, s_zip#73]\n                  :           +- *(5) BroadcastHashJoin [ss_store_sk#11], [s_store_sk#48], Inner, BuildRight, false\n                  :              :- *(5) Project [ss_item_sk#6, ss_customer_sk#7, ss_store_sk#11, ss_ticket_number#13L, ss_sold_date_sk#27]\n                  :              :  +- *(5) BroadcastHashJoin [ss_sold_date_sk#27], [d_date_sk#77], Inner, BuildRight, false\n                  :              :     :- *(5) Filter (((isnotnull(ss_ticket_number#13L) AND isnotnull(ss_item_sk#6)) AND isnotnull(ss_customer_sk#7)) AND isnotnull(ss_store_sk#11))\n                  :              :     :  +- *(5) ColumnarToRow\n                  :              :     :     +- FileScan parquet spark_catalog.tpcds_100.store_sales[ss_item_sk#6,ss_customer_sk#7,ss_store_sk#11,ss_ticket_number#13L,ss_sold_date_sk#27] Batched: true, DataFilters: [isnotnull(ss_ticket_number#13L), isnotnull(ss_item_sk#6), isnotnull(ss_customer_sk#7), isnotnull..., Format: Parquet, Location: InMemoryFileIndex(1823 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/store_..., PartitionFilters: [isnotnull(ss_sold_date_sk#27)], PushedFilters: [IsNotNull(ss_ticket_number), IsNotNull(ss_item_sk), IsNotNull(ss_customer_sk), IsNotNull(ss_stor..., ReadSchema: struct<ss_item_sk:int,ss_customer_sk:int,ss_store_sk:int,ss_ticket_number:bigint>\n                  :              :     +- BroadcastQueryStage 0\n                  :              :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=196]\n                  :              :           +- *(1) Filter isnotnull(d_date_sk#77)\n                  :              :              +- *(1) ColumnarToRow\n                  :              :                 +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#77] Batched: true, DataFilters: [isnotnull(d_date_sk#77)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int>\n                  :              +- BroadcastQueryStage 1\n                  :                 +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=213]\n                  :                    +- *(2) Filter isnotnull(s_store_sk#48)\n                  :                       +- *(2) ColumnarToRow\n                  :                          +- FileScan parquet spark_catalog.tpcds_100.store[s_store_sk#48,s_store_name#53,s_company_id#64,s_street_number#66,s_street_name#67,s_street_type#68,s_suite_number#69,s_city#70,s_county#71,s_state#72,s_zip#73] Batched: true, DataFilters: [isnotnull(s_store_sk#48)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/store], PartitionFilters: [], PushedFilters: [IsNotNull(s_store_sk)], ReadSchema: struct<s_store_sk:int,s_store_name:string,s_company_id:int,s_street_number:string,s_street_name:s...\n                  +- *(7) Sort [sr_ticket_number#36L ASC NULLS FIRST, sr_item_sk#29 ASC NULLS FIRST, sr_customer_sk#30 ASC NULLS FIRST], false, 0\n                     +- ShuffleQueryStage 3\n                        +- Exchange hashpartitioning(sr_ticket_number#36L, sr_item_sk#29, sr_customer_sk#30, 200), ENSURE_REQUIREMENTS, [plan_id=469]\n                           +- *(4) Project [sr_item_sk#29, sr_customer_sk#30, sr_ticket_number#36L, sr_returned_date_sk#47]\n                              +- *(4) BroadcastHashJoin [sr_returned_date_sk#47], [d_date_sk#164], Inner, BuildRight, false\n                                 :- *(4) Filter ((isnotnull(sr_ticket_number#36L) AND isnotnull(sr_item_sk#29)) AND isnotnull(sr_customer_sk#30))\n                                 :  +- *(4) ColumnarToRow\n                                 :     +- FileScan parquet spark_catalog.tpcds_100.store_returns[sr_item_sk#29,sr_customer_sk#30,sr_ticket_number#36L,sr_returned_date_sk#47] Batched: true, DataFilters: [isnotnull(sr_ticket_number#36L), isnotnull(sr_item_sk#29), isnotnull(sr_customer_sk#30)], Format: Parquet, Location: InMemoryFileIndex(2003 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/store_..., PartitionFilters: [isnotnull(sr_returned_date_sk#47), dynamicpruningexpression(sr_returned_date_sk#47 IN dynamicpru..., PushedFilters: [IsNotNull(sr_ticket_number), IsNotNull(sr_item_sk), IsNotNull(sr_customer_sk)], ReadSchema: struct<sr_item_sk:int,sr_customer_sk:int,sr_ticket_number:bigint>\n                                 :           +- SubqueryBroadcast dynamicpruning#213, 0, [d_date_sk#164], [id=#443]\n                                 :              +- AdaptiveSparkPlan isFinalPlan=true\n                                                   +- == Final Plan ==\n                                                      BroadcastQueryStage 1\n                                                      +- ReusedExchange [d_date_sk#164], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=234]\n                                                   +- == Initial Plan ==\n                                                      BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=440]\n                                                      +- Project [d_date_sk#164]\n                                                         +- Filter ((((isnotnull(d_year#170) AND isnotnull(d_moy#172)) AND (d_year#170 = 2000)) AND (d_moy#172 = 9)) AND isnotnull(d_date_sk#164))\n                                                            +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#164,d_year#170,d_moy#172] Batched: true, DataFilters: [isnotnull(d_year#170), isnotnull(d_moy#172), (d_year#170 = 2000), (d_moy#172 = 9), isnotnull(d_d..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), IsNotNull(d_moy), EqualTo(d_year,2000), EqualTo(d_moy,9), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>\n                                 +- BroadcastQueryStage 2\n                                    +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=234]\n                                       +- *(3) Project [d_date_sk#164]\n                                          +- *(3) Filter ((((isnotnull(d_year#170) AND isnotnull(d_moy#172)) AND (d_year#170 = 2000)) AND (d_moy#172 = 9)) AND isnotnull(d_date_sk#164))\n                                             +- *(3) ColumnarToRow\n                                                +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#164,d_year#170,d_moy#172] Batched: true, DataFilters: [isnotnull(d_year#170), isnotnull(d_moy#172), (d_year#170 = 2000), (d_moy#172 = 9), isnotnull(d_d..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), IsNotNull(d_moy), EqualTo(d_year,2000), EqualTo(d_moy,9), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>\n"
      },
      "IM" : {
        "inputSizeInBytes" : 8828480,
        "inputRowCount" : 40104
      },
      "InitialPartitionNum" : 1,
      "PD" : {
        "2" : [ 45167, 41742, 45600, 45558, 44574, 0, 73637, 0, 80643, 66770, 142905, 48222, 49280, 96689, 0, 46014, 66560, 0, 65750, 107212, 73290, 74681, 68602, 0, 73426, 44889, 0, 0, 0, 0, 73711, 45646, 0, 72759, 0, 45579, 44346, 45285, 43101, 0, 73358, 128247, 43335, 73426, 50154, 46752, 46497, 74821, 0, 0, 0, 45330, 0, 73483, 72897, 48613, 0, 0, 46292, 44847, 45225, 0, 0, 0, 46635, 0, 0, 45395, 73520, 50131, 79767, 47396, 0, 45623, 73275, 0, 45372, 0, 46384, 0, 73320, 0, 45600, 0, 70604, 66936, 0, 0, 96438, 46018, 71756, 45558, 0, 0, 0, 0, 44259, 0, 77103, 43878, 0, 0, 0, 73357, 79298, 0, 0, 0, 73600, 45309, 0, 74258, 74710, 45390, 46520, 47902, 45600, 0, 99936, 0, 97621, 45600, 45558, 0, 45474, 0, 0, 88709, 0, 50177, 0, 0, 97730, 67136, 0, 0, 48452, 45453, 44907, 45372, 73711, 42513, 0, 74710, 73637, 45516, 101198, 49535, 0, 47969, 43899, 98000, 44907, 93905, 49834, 0, 45600, 0, 44175, 71896, 0, 66574, 0, 0, 47099, 0, 94580, 0, 0, 44367, 43920, 46133, 45807, 92623, 45600, 123089, 45144, 0, 0, 45418, 0, 45537, 0, 0, 67990, 0, 0, 71726, 42222, 0, 45807, 42096, 44739, 0, 97608, 0, 44931, 45600, 47833, 46727 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 6,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 13 ],
      "Objectives" : {
        "DurationInMs" : 224,
        "TotalTasksDurationInMs" : 214,
        "IOBytes" : {
          "Total" : 7370736,
          "Details" : {
            "IR" : 0,
            "IW" : 0,
            "SR" : 7370736,
            "SW" : 0
          }
        }
      }
    },
    "1" : {
      "QSLogical" : {
        "operators" : {
          "0" : {
            "sign" : 492861683,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 74370,
                "rowCount" : 402
              },
              "compileTime" : {
                "sizeInBytes" : 74370,
                "rowCount" : 402
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [s_store_sk#48, s_store_name#53, s_company_id#64, s_street_number#66, s_street_name#67, s_street_type#68, s_suite_number#69, s_city#70, s_county#71, s_state#72, s_zip#73] "
          },
          "1" : {
            "sign" : 1179596692,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 192558,
                "rowCount" : 402
              },
              "compileTime" : {
                "sizeInBytes" : 192558,
                "rowCount" : 402
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: isnotnull(s_store_sk#48) "
          },
          "2" : {
            "sign" : -787714196,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 192558,
                "rowCount" : 402
              },
              "compileTime" : {
                "sizeInBytes" : 192558,
                "rowCount" : 402
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [s_store_sk#48, s_store_id#49, s_rec_start_date#50, s_rec_end_date#51, s_closed_date_sk#52, s_store_name#53, s_number_employees#54, s_floor_space#55, s_hours#56, s_manager#57, s_market_id#58, s_geography_class#59, s_market_desc#60, s_market_manager#61, s_division_id#62, s_division_name#63, s_company_id#64, s_company_name#65, s_street_number#66, s_street_name#67, s_street_type#68, s_suite_number#69, s_city#70, s_county#71, ... 5 more fields], `spark_catalog`.`tpcds_100`.`store`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "LogicalRelation",
          "toId" : 1,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Filter",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [s_store_sk#48, s_store_name#53, s_company_id#64, s_street_number#66, s_street_name#67, s_street_type#68, s_suite_number#69, s_city#70, s_county#71, s_state#72, s_zip#73]\n+- Filter isnotnull(s_store_sk#48)\n   +- Relation spark_catalog.tpcds_100.store[s_store_sk#48,s_store_id#49,s_rec_start_date#50,s_rec_end_date#51,s_closed_date_sk#52,s_store_name#53,s_number_employees#54,s_floor_space#55,s_hours#56,s_manager#57,s_market_id#58,s_geography_class#59,s_market_desc#60,s_market_manager#61,s_division_id#62,s_division_name#63,s_company_id#64,s_company_name#65,s_street_number#66,s_street_name#67,s_street_type#68,s_suite_number#69,s_city#70,s_county#71,... 5 more fields] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "0" : {
            "sign" : 765228451,
            "className" : "org.apache.spark.sql.execution.FilterExec",
            "sizeInBytes" : 74370,
            "rowCount" : 402,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Input [11]: [s_store_sk#48, s_store_name#53, s_company_id#64, s_street_number#66, s_street_name#67, s_street_type#68, s_suite_number#69, s_city#70, s_county#71, s_state#72, s_zip#73] Condition : isnotnull(s_store_sk#48) "
          },
          "1" : {
            "sign" : -1163025541,
            "className" : "org.apache.spark.sql.execution.FileSourceScanExec",
            "sizeInBytes" : 74370,
            "rowCount" : 402,
            "isRuntime" : false,
            "predicate" : " (unknown) Scan parquet spark_catalog.tpcds_100.store Output [11]: [s_store_sk#48, s_store_name#53, s_company_id#64, s_street_number#66, s_street_name#67, s_street_type#68, s_suite_number#69, s_city#70, s_county#71, s_state#72, s_zip#73] Batched: true Location: InMemoryFileIndex [hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/store] PushedFilters: [IsNotNull(s_store_sk)] ReadSchema: struct<s_store_sk:int,s_store_name:string,s_company_id:int,s_street_number:string,s_street_name:string,s_street_type:string,s_suite_number:string,s_city:string,s_county:string,s_state:string,s_zip:string> "
          }
        },
        "links" : [ {
          "fromId" : 1,
          "fromName" : "Scan parquet spark_catalog.tpcds_100.store",
          "toId" : 0,
          "toName" : "Filter",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Filter isnotnull(s_store_sk#48)\n+- FileScan parquet spark_catalog.tpcds_100.store[s_store_sk#48,s_store_name#53,s_company_id#64,s_street_number#66,s_street_name#67,s_street_type#68,s_suite_number#69,s_city#70,s_county#71,s_state#72,s_zip#73] Batched: true, DataFilters: [isnotnull(s_store_sk#48)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/store], PartitionFilters: [], PushedFilters: [IsNotNull(s_store_sk)], ReadSchema: struct<s_store_sk:int,s_store_name:string,s_company_id:int,s_street_number:string,s_street_name:s...\n"
      },
      "IM" : {
        "inputSizeInBytes" : 74370,
        "inputRowCount" : 402
      },
      "InitialPartitionNum" : 0,
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 1,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 3 ],
      "Objectives" : {
        "DurationInMs" : 1247,
        "TotalTasksDurationInMs" : 1241,
        "IOBytes" : {
          "Total" : 21988,
          "Details" : {
            "IR" : 21988,
            "IW" : 0,
            "SR" : 0,
            "SW" : 0
          }
        }
      }
    },
    "0" : {
      "QSLogical" : {
        "operators" : {
          "0" : {
            "sign" : -31555300,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 876588,
                "rowCount" : 73049
              },
              "compileTime" : {
                "sizeInBytes" : 876588,
                "rowCount" : 73049
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#77] "
          },
          "1" : {
            "sign" : -253756672,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 17970054,
                "rowCount" : 73049
              },
              "compileTime" : {
                "sizeInBytes" : 17970054,
                "rowCount" : 73049
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: isnotnull(d_date_sk#77) "
          },
          "2" : {
            "sign" : 66120808,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 17970054,
                "rowCount" : 73049
              },
              "compileTime" : {
                "sizeInBytes" : 17970054,
                "rowCount" : 73049
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#77, d_date_id#78, d_date#79, d_month_seq#80, d_week_seq#81, d_quarter_seq#82, d_year#83, d_dow#84, d_moy#85, d_dom#86, d_qoy#87, d_fy_year#88, d_fy_quarter_seq#89, d_fy_week_seq#90, d_day_name#91, d_quarter_name#92, d_holiday#93, d_weekend#94, d_following_holiday#95, d_first_dom#96, d_last_dom#97, d_same_day_ly#98, d_same_day_lq#99, d_current_day#100, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "LogicalRelation",
          "toId" : 1,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Filter",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [d_date_sk#77]\n+- Filter isnotnull(d_date_sk#77)\n   +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#77,d_date_id#78,d_date#79,d_month_seq#80,d_week_seq#81,d_quarter_seq#82,d_year#83,d_dow#84,d_moy#85,d_dom#86,d_qoy#87,d_fy_year#88,d_fy_quarter_seq#89,d_fy_week_seq#90,d_day_name#91,d_quarter_name#92,d_holiday#93,d_weekend#94,d_following_holiday#95,d_first_dom#96,d_last_dom#97,d_same_day_ly#98,d_same_day_lq#99,d_current_day#100,... 4 more fields] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "0" : {
            "sign" : 268941360,
            "className" : "org.apache.spark.sql.execution.FilterExec",
            "sizeInBytes" : 876588,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Input [1]: [d_date_sk#77] Condition : isnotnull(d_date_sk#77) "
          },
          "1" : {
            "sign" : 1936213448,
            "className" : "org.apache.spark.sql.execution.FileSourceScanExec",
            "sizeInBytes" : 876588,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) Scan parquet spark_catalog.tpcds_100.date_dim Output [1]: [d_date_sk#77] Batched: true Location: InMemoryFileIndex [hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim] PushedFilters: [IsNotNull(d_date_sk)] ReadSchema: struct<d_date_sk:int> "
          }
        },
        "links" : [ {
          "fromId" : 1,
          "fromName" : "Scan parquet spark_catalog.tpcds_100.date_dim",
          "toId" : 0,
          "toName" : "Filter",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Filter isnotnull(d_date_sk#77)\n+- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#77] Batched: true, DataFilters: [isnotnull(d_date_sk#77)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int>\n"
      },
      "IM" : {
        "inputSizeInBytes" : 876588,
        "inputRowCount" : 73049
      },
      "InitialPartitionNum" : 0,
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 0,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 2 ],
      "Objectives" : {
        "DurationInMs" : 1984,
        "TotalTasksDurationInMs" : 1973,
        "IOBytes" : {
          "Total" : 303910,
          "Details" : {
            "IR" : 303910,
            "IW" : 0,
            "SR" : 0,
            "SW" : 0
          }
        }
      }
    },
    "2" : {
      "QSLogical" : {
        "operators" : {
          "0" : {
            "sign" : -1636383261,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 600,
                "rowCount" : 50
              },
              "compileTime" : {
                "sizeInBytes" : 600,
                "rowCount" : 50
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#164] "
          },
          "1" : {
            "sign" : 1182374458,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 12300,
                "rowCount" : 50
              },
              "compileTime" : {
                "sizeInBytes" : 12300,
                "rowCount" : 50
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(d_year#170) AND isnotnull(d_moy#172)) AND ((d_year#170 = 2000) AND (d_moy#172 = 9))) AND isnotnull(d_date_sk#164)) "
          },
          "2" : {
            "sign" : -148535994,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 17970054,
                "rowCount" : 73049
              },
              "compileTime" : {
                "sizeInBytes" : 17970054,
                "rowCount" : 73049
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#164, d_date_id#165, d_date#166, d_month_seq#167, d_week_seq#168, d_quarter_seq#169, d_year#170, d_dow#171, d_moy#172, d_dom#173, d_qoy#174, d_fy_year#175, d_fy_quarter_seq#176, d_fy_week_seq#177, d_day_name#178, d_quarter_name#179, d_holiday#180, d_weekend#181, d_following_holiday#182, d_first_dom#183, d_last_dom#184, d_same_day_ly#185, d_same_day_lq#186, d_current_day#187, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "LogicalRelation",
          "toId" : 1,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Filter",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [d_date_sk#164]\n+- Filter (((isnotnull(d_year#170) AND isnotnull(d_moy#172)) AND ((d_year#170 = 2000) AND (d_moy#172 = 9))) AND isnotnull(d_date_sk#164))\n   +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#164,d_date_id#165,d_date#166,d_month_seq#167,d_week_seq#168,d_quarter_seq#169,d_year#170,d_dow#171,d_moy#172,d_dom#173,d_qoy#174,d_fy_year#175,d_fy_quarter_seq#176,d_fy_week_seq#177,d_day_name#178,d_quarter_name#179,d_holiday#180,d_weekend#181,d_following_holiday#182,d_first_dom#183,d_last_dom#184,d_same_day_ly#185,d_same_day_lq#186,d_current_day#187,... 4 more fields] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "0" : {
            "sign" : 1925704790,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 600,
            "rowCount" : 50,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [1]: [d_date_sk#164] Input [3]: [d_date_sk#164, d_year#170, d_moy#172] "
          },
          "1" : {
            "sign" : -1840893537,
            "className" : "org.apache.spark.sql.execution.FilterExec",
            "sizeInBytes" : 600,
            "rowCount" : 50,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Input [3]: [d_date_sk#164, d_year#170, d_moy#172] Condition : ((((isnotnull(d_year#170) AND isnotnull(d_moy#172)) AND (d_year#170 = 2000)) AND (d_moy#172 = 9)) AND isnotnull(d_date_sk#164)) "
          },
          "2" : {
            "sign" : 1692011091,
            "className" : "org.apache.spark.sql.execution.FileSourceScanExec",
            "sizeInBytes" : 600,
            "rowCount" : 50,
            "isRuntime" : false,
            "predicate" : " (unknown) Scan parquet spark_catalog.tpcds_100.date_dim Output [3]: [d_date_sk#164, d_year#170, d_moy#172] Batched: true Location: InMemoryFileIndex [hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim] PushedFilters: [IsNotNull(d_year), IsNotNull(d_moy), EqualTo(d_year,2000), EqualTo(d_moy,9), IsNotNull(d_date_sk)] ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int> "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "Scan parquet spark_catalog.tpcds_100.date_dim",
          "toId" : 1,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Filter",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [d_date_sk#164]\n+- Filter ((((isnotnull(d_year#170) AND isnotnull(d_moy#172)) AND (d_year#170 = 2000)) AND (d_moy#172 = 9)) AND isnotnull(d_date_sk#164))\n   +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#164,d_year#170,d_moy#172] Batched: true, DataFilters: [isnotnull(d_year#170), isnotnull(d_moy#172), (d_year#170 = 2000), (d_moy#172 = 9), isnotnull(d_d..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), IsNotNull(d_moy), EqualTo(d_year,2000), EqualTo(d_moy,9), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>\n"
      },
      "IM" : {
        "inputSizeInBytes" : 600,
        "inputRowCount" : 50
      },
      "InitialPartitionNum" : 0,
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 2,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 4 ],
      "Objectives" : {
        "DurationInMs" : 1373,
        "TotalTasksDurationInMs" : 1369,
        "IOBytes" : {
          "Total" : 93950,
          "Details" : {
            "IR" : 93950,
            "IW" : 0,
            "SR" : 0,
            "SW" : 0
          }
        }
      }
    },
    "3" : {
      "QSLogical" : {
        "operators" : {
          "4" : {
            "sign" : 424936361,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 3557606528,
                "rowCount" : 27793801
              },
              "compileTime" : {
                "sizeInBytes" : 3557606528,
                "rowCount" : 27793801
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [sr_return_time_sk#28, sr_item_sk#29, sr_customer_sk#30, sr_cdemo_sk#31, sr_hdemo_sk#32, sr_addr_sk#33, sr_store_sk#34, sr_reason_sk#35, sr_ticket_number#36L, sr_return_quantity#37, sr_return_amt#38, sr_return_tax#39, sr_return_amt_inc_tax#40, sr_fee#41, sr_return_ship_cost#42, sr_refunded_cash#43, sr_reversed_charge#44, sr_store_credit#45, sr_net_loss#46, sr_returned_date_sk#47], `spark_catalog`.`tpcds_100`.`store_returns`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "1" : {
            "sign" : 538351112,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 862585440,
                "rowCount" : 26955795
              },
              "compileTime" : {
                "sizeInBytes" : 862585440,
                "rowCount" : 26955795
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (sr_returned_date_sk#47 = d_date_sk#164) "
          },
          "0" : {
            "sign" : -1740264877,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 754762260,
                "rowCount" : 26955795
              },
              "compileTime" : {
                "sizeInBytes" : 754762260,
                "rowCount" : 26955795
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [sr_item_sk#29, sr_customer_sk#30, sr_ticket_number#36L, sr_returned_date_sk#47] "
          },
          "2" : {
            "sign" : 402042207,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 750990996,
                "rowCount" : 26821107
              },
              "compileTime" : {
                "sizeInBytes" : 750990996,
                "rowCount" : 26821107
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [sr_item_sk#29, sr_customer_sk#30, sr_ticket_number#36L, sr_returned_date_sk#47] "
          },
          "3" : {
            "sign" : 1237141124,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 3433101696,
                "rowCount" : 26821107
              },
              "compileTime" : {
                "sizeInBytes" : 3433101696,
                "rowCount" : 26821107
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((((isnotnull(sr_ticket_number#36L) AND isnotnull(sr_item_sk#29)) AND isnotnull(sr_customer_sk#30)) AND isnotnull(sr_returned_date_sk#47)) AND dynamicpruning#213 [sr_returned_date_sk#47]) "
          }
        },
        "links" : [ {
          "fromId" : 4,
          "fromName" : "LogicalRelation",
          "toId" : 3,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Filter",
          "toId" : 2,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Project",
          "toId" : 1,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Join",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [sr_item_sk#29, sr_customer_sk#30, sr_ticket_number#36L, sr_returned_date_sk#47]\n+- Join Inner, (sr_returned_date_sk#47 = d_date_sk#164)\n   :- Project [sr_item_sk#29, sr_customer_sk#30, sr_ticket_number#36L, sr_returned_date_sk#47]\n   :  +- Filter ((((isnotnull(sr_ticket_number#36L) AND isnotnull(sr_item_sk#29)) AND isnotnull(sr_customer_sk#30)) AND isnotnull(sr_returned_date_sk#47)) AND dynamicpruning#213 [sr_returned_date_sk#47])\n   :     :  +- Project [d_date_sk#164]\n   :     :     +- Filter (((isnotnull(d_year#170) AND isnotnull(d_moy#172)) AND ((d_year#170 = 2000) AND (d_moy#172 = 9))) AND isnotnull(d_date_sk#164))\n   :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#164,d_date_id#165,d_date#166,d_month_seq#167,d_week_seq#168,d_quarter_seq#169,d_year#170,d_dow#171,d_moy#172,d_dom#173,d_qoy#174,d_fy_year#175,d_fy_quarter_seq#176,d_fy_week_seq#177,d_day_name#178,d_quarter_name#179,d_holiday#180,d_weekend#181,d_following_holiday#182,d_first_dom#183,d_last_dom#184,d_same_day_ly#185,d_same_day_lq#186,d_current_day#187,... 4 more fields] parquet\n   :     +- Relation spark_catalog.tpcds_100.store_returns[sr_return_time_sk#28,sr_item_sk#29,sr_customer_sk#30,sr_cdemo_sk#31,sr_hdemo_sk#32,sr_addr_sk#33,sr_store_sk#34,sr_reason_sk#35,sr_ticket_number#36L,sr_return_quantity#37,sr_return_amt#38,sr_return_tax#39,sr_return_amt_inc_tax#40,sr_fee#41,sr_return_ship_cost#42,sr_refunded_cash#43,sr_reversed_charge#44,sr_store_credit#45,sr_net_loss#46,sr_returned_date_sk#47] parquet\n   +- Project [d_date_sk#164]\n      +- Filter (((isnotnull(d_year#170) AND isnotnull(d_moy#172)) AND ((d_year#170 = 2000) AND (d_moy#172 = 9))) AND isnotnull(d_date_sk#164))\n         +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#164,d_date_id#165,d_date#166,d_month_seq#167,d_week_seq#168,d_quarter_seq#169,d_year#170,d_dow#171,d_moy#172,d_dom#173,d_qoy#174,d_fy_year#175,d_fy_quarter_seq#176,d_fy_week_seq#177,d_day_name#178,d_quarter_name#179,d_holiday#180,d_weekend#181,d_following_holiday#182,d_first_dom#183,d_last_dom#184,d_same_day_ly#185,d_same_day_lq#186,d_current_day#187,... 4 more fields] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "4" : {
            "sign" : 1557801010,
            "className" : "org.apache.spark.sql.execution.adaptive.BroadcastQueryStageExec",
            "sizeInBytes" : 1048816,
            "rowCount" : 30,
            "isRuntime" : true,
            "predicate" : " (unknown) BroadcastQueryStage Output [1]: [d_date_sk#164] Arguments: 2 "
          },
          "1" : {
            "sign" : -241001565,
            "className" : "org.apache.spark.sql.execution.joins.BroadcastHashJoinExec",
            "sizeInBytes" : 862585440,
            "rowCount" : 26955795,
            "isRuntime" : false,
            "predicate" : " (unknown) BroadcastHashJoin Left keys [1]: [sr_returned_date_sk#47] Right keys [1]: [d_date_sk#164] Join type: Inner Join condition: None "
          },
          "0" : {
            "sign" : -426652560,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 754762260,
            "rowCount" : 26955795,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [4]: [sr_item_sk#29, sr_customer_sk#30, sr_ticket_number#36L, sr_returned_date_sk#47] Input [5]: [sr_item_sk#29, sr_customer_sk#30, sr_ticket_number#36L, sr_returned_date_sk#47, d_date_sk#164] "
          },
          "2" : {
            "sign" : 1921310865,
            "className" : "org.apache.spark.sql.execution.FilterExec",
            "sizeInBytes" : 750990996,
            "rowCount" : 26821107,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Input [4]: [sr_item_sk#29, sr_customer_sk#30, sr_ticket_number#36L, sr_returned_date_sk#47] Condition : ((isnotnull(sr_ticket_number#36L) AND isnotnull(sr_item_sk#29)) AND isnotnull(sr_customer_sk#30)) "
          },
          "3" : {
            "sign" : -1111655437,
            "className" : "org.apache.spark.sql.execution.FileSourceScanExec",
            "sizeInBytes" : 750990996,
            "rowCount" : 26821107,
            "isRuntime" : false,
            "predicate" : " (unknown) Scan parquet spark_catalog.tpcds_100.store_returns Output [4]: [sr_item_sk#29, sr_customer_sk#30, sr_ticket_number#36L, sr_returned_date_sk#47] Batched: true Location: InMemoryFileIndex [hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/store_returns/sr_returned_date_sk=2450820, ... 2002 entries] PartitionFilters: [isnotnull(sr_returned_date_sk#47), dynamicpruningexpression(sr_returned_date_sk#47 IN dynamicpruning#213)] PushedFilters: [IsNotNull(sr_ticket_number), IsNotNull(sr_item_sk), IsNotNull(sr_customer_sk)] ReadSchema: struct<sr_item_sk:int,sr_customer_sk:int,sr_ticket_number:bigint> "
          }
        },
        "links" : [ {
          "fromId" : 3,
          "fromName" : "Scan parquet spark_catalog.tpcds_100.store_returns",
          "toId" : 2,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Filter",
          "toId" : 1,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "BroadcastQueryStage",
          "toId" : 1,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "BroadcastHashJoin",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [sr_item_sk#29, sr_customer_sk#30, sr_ticket_number#36L, sr_returned_date_sk#47]\n+- BroadcastHashJoin [sr_returned_date_sk#47], [d_date_sk#164], Inner, BuildRight, false\n   :- Filter ((isnotnull(sr_ticket_number#36L) AND isnotnull(sr_item_sk#29)) AND isnotnull(sr_customer_sk#30))\n   :  +- FileScan parquet spark_catalog.tpcds_100.store_returns[sr_item_sk#29,sr_customer_sk#30,sr_ticket_number#36L,sr_returned_date_sk#47] Batched: true, DataFilters: [isnotnull(sr_ticket_number#36L), isnotnull(sr_item_sk#29), isnotnull(sr_customer_sk#30)], Format: Parquet, Location: InMemoryFileIndex(2003 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/store_..., PartitionFilters: [isnotnull(sr_returned_date_sk#47), dynamicpruningexpression(sr_returned_date_sk#47 IN dynamicpru..., PushedFilters: [IsNotNull(sr_ticket_number), IsNotNull(sr_item_sk), IsNotNull(sr_customer_sk)], ReadSchema: struct<sr_item_sk:int,sr_customer_sk:int,sr_ticket_number:bigint>\n   :        +- SubqueryBroadcast dynamicpruning#213, 0, [d_date_sk#164], [id=#443]\n   :           +- AdaptiveSparkPlan isFinalPlan=false\n   :              +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=440]\n   :                 +- Project [d_date_sk#164]\n   :                    +- Filter ((((isnotnull(d_year#170) AND isnotnull(d_moy#172)) AND (d_year#170 = 2000)) AND (d_moy#172 = 9)) AND isnotnull(d_date_sk#164))\n   :                       +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#164,d_year#170,d_moy#172] Batched: true, DataFilters: [isnotnull(d_year#170), isnotnull(d_moy#172), (d_year#170 = 2000), (d_moy#172 = 9), isnotnull(d_d..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), IsNotNull(d_moy), EqualTo(d_year,2000), EqualTo(d_moy,9), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>\n   +- BroadcastQueryStage 2\n      +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=234]\n         +- *(3) Project [d_date_sk#164]\n            +- *(3) Filter ((((isnotnull(d_year#170) AND isnotnull(d_moy#172)) AND (d_year#170 = 2000)) AND (d_moy#172 = 9)) AND isnotnull(d_date_sk#164))\n               +- *(3) ColumnarToRow\n                  +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#164,d_year#170,d_moy#172] Batched: true, DataFilters: [isnotnull(d_year#170), isnotnull(d_moy#172), (d_year#170 = 2000), (d_moy#172 = 9), isnotnull(d_d..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), IsNotNull(d_moy), EqualTo(d_year,2000), EqualTo(d_moy,9), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>\n"
      },
      "IM" : {
        "inputSizeInBytes" : 752039812,
        "inputRowCount" : 26821137
      },
      "InitialPartitionNum" : 0,
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 1,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 3,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 5 ],
      "Objectives" : {
        "DurationInMs" : 2677,
        "TotalTasksDurationInMs" : 28356,
        "IOBytes" : {
          "Total" : 11315496,
          "Details" : {
            "IR" : 4690006,
            "IW" : 0,
            "SR" : 0,
            "SW" : 6625490
          }
        }
      }
    }
  },
  "SQLStartTimeInMs" : 1702227027451,
  "SQLEndTimeInMs" : 1702227123869,
  "Objectives" : {
    "DurationInMs" : 96418,
    "IOBytes" : {
      "Total" : 44500651711,
      "Details" : {
        "IR" : 1612504671,
        "IW" : 0,
        "SR" : 21444073520,
        "SW" : 21444073520
      }
    }
  }
}
