{
  "CompileTimeLQP" : {
    "LQP" : {
      "operators" : {
        "45" : {
          "sign" : 851368722,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
          "sizeInBytes" : 24,
          "rowCount" : 1,
          "isRuntime" : false,
          "predicate" : " (unknown) Aggregate Arguments: [max(csales#10) AS tpcds_cmax#11] "
        },
        "34" : {
          "sign" : 1527680306,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 23812188,
          "rowCount" : 1984349,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [c_customer_sk#249] "
        },
        "67" : {
          "sign" : 2096928071,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 1667894520,
          "rowCount" : 69495605,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [ws_bill_customer_sk#144, ws_quantity#158, ws_list_price#160] "
        },
        "12" : {
          "sign" : -579619502,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 4561805056,
          "rowCount" : 142556408,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [cs_bill_customer_sk#109, cs_item_sk#121, cs_quantity#124, cs_list_price#126, cs_sold_date_sk#140] "
        },
        "66" : {
          "sign" : -1309582474,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 4702228440,
          "rowCount" : 72341976,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: Inner, (ws_bill_customer_sk#144 = c_customer_sk#313) "
        },
        "89" : {
          "sign" : 1236192170,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 500000000,
          "rowCount" : 2000000,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: isnotnull(c_customer_sk#313) "
        },
        "51" : {
          "sign" : -1403684604,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 7354733484,
          "rowCount" : 262669053,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [ss_customer_sk#177, ss_quantity#184, ss_sales_price#187, ss_sold_date_sk#197] "
        },
        "84" : {
          "sign" : 2090956150,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 6372974040,
          "rowCount" : 265540585,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#38 = d_date_sk#39) "
        },
        "8" : {
          "sign" : 179382905,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 4432520384,
          "rowCount" : 138516262,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: Inner, (cs_sold_date_sk#140 = d_date_sk#285) "
        },
        "73" : {
          "sign" : 2025418498,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 14968845008,
          "rowCount" : 71965601,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: ((isnotnull(ws_bill_customer_sk#144) AND isnotnull(ws_sold_date_sk#174)) AND dynamicpruning#390 [ws_sold_date_sk#174]) "
        },
        "78" : {
          "sign" : -1463882021,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 3447095052,
          "rowCount" : -1,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [item_sk#7] "
        },
        "19" : {
          "sign" : 1784678436,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 5745158420,
          "rowCount" : -1,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: (cnt#9L > 4) "
        },
        "23" : {
          "sign" : 1507436284,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 4248649360,
          "rowCount" : 265540585,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [ss_item_sk#17, d_date#41] "
        },
        "62" : {
          "sign" : -441924552,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 500000000,
          "rowCount" : 2000000,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: isnotnull(c_customer_sk#267) "
        },
        "4" : {
          "sign" : 94747928,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
          "sizeInBytes" : 1648640717,
          "rowCount" : 27026897,
          "isRuntime" : false,
          "predicate" : " (unknown) Aggregate Arguments: [c_last_name#276, c_first_name#275], [c_last_name#276, c_first_name#275, sum((cast(cs_quantity#124 as decimal(10,0)) * cs_list_price#126)) AS sales#0] "
        },
        "88" : {
          "sign" : 1416139355,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 98000000,
          "rowCount" : 2000000,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [c_customer_sk#313, c_first_name#321, c_last_name#322] "
        },
        "77" : {
          "sign" : 1620142570,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 17970054,
          "rowCount" : 73049,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#331, d_date_id#332, d_date#333, d_month_seq#334, d_week_seq#335, d_quarter_seq#336, d_year#337, d_dow#338, d_moy#339, d_dom#340, d_qoy#341, d_fy_year#342, d_fy_quarter_seq#343, d_fy_week_seq#344, d_day_name#345, d_quarter_name#346, d_holiday#347, d_weekend#348, d_following_holiday#349, d_first_dom#350, d_last_dom#351, d_same_day_ly#352, d_same_day_lq#353, d_current_day#354, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "40" : {
          "sign" : -625726851,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 41807125152,
          "rowCount" : 275046876,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: isnotnull(ss_customer_sk#228) "
        },
        "15" : {
          "sign" : 494075984,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 900,
          "rowCount" : 75,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [d_date_sk#285] "
        },
        "11" : {
          "sign" : -1185636999,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 4561805056,
          "rowCount" : 142556408,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: LeftSemi, (cs_item_sk#121 = item_sk#7) "
        },
        "90" : {
          "sign" : 1416001724,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 500000000,
          "rowCount" : 2000000,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [c_customer_sk#313, c_customer_id#314, c_current_cdemo_sk#315, c_current_hdemo_sk#316, c_current_addr_sk#317, c_first_shipto_date_sk#318, c_first_sales_date_sk#319, c_salutation#320, c_first_name#321, c_last_name#322, c_preferred_cust_flag#323, c_birth_day#324, c_birth_month#325, c_birth_year#326, c_birth_country#327, c_login#328, c_email_address#329, c_last_review_date#330], `spark_catalog`.`tpcds_100`.`customer`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "9" : {
          "sign" : 1817223165,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 3991579424,
          "rowCount" : 142556408,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: LeftSemi, (cs_bill_customer_sk#109 = c_customer_sk#249) "
        },
        "44" : {
          "sign" : -452187342,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 500000000,
          "rowCount" : 2000000,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [c_customer_sk#249, c_customer_id#250, c_current_cdemo_sk#251, c_current_hdemo_sk#252, c_current_addr_sk#253, c_first_shipto_date_sk#254, c_first_sales_date_sk#255, c_salutation#256, c_first_name#257, c_last_name#258, c_preferred_cust_flag#259, c_birth_day#260, c_birth_month#261, c_birth_year#262, c_birth_country#263, c_login#264, c_email_address#265, c_last_review_date#266], `spark_catalog`.`tpcds_100`.`customer`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "33" : {
          "sign" : 1444627727,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 86904000,
          "rowCount" : 204000,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [i_item_sk#67, i_item_id#68, i_rec_start_date#69, i_rec_end_date#70, i_item_desc#71, i_current_price#72, i_wholesale_cost#73, i_brand_id#74, i_brand#75, i_class_id#76, i_class#77, i_category_id#78, i_category#79, i_manufact_id#80, i_manufact#81, i_size#82, i_formulation#83, i_color#84, i_units#85, i_container#86, i_manager_id#87, i_product_name#88], `spark_catalog`.`tpcds_100`.`item`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "22" : {
          "sign" : -1415675944,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 38205303493,
          "rowCount" : 287257921,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: Inner, (ss_item_sk#17 = i_item_sk#67) "
        },
        "56" : {
          "sign" : -1200914412,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 17970054,
          "rowCount" : 73049,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#198, d_date_id#199, d_date#200, d_month_seq#201, d_week_seq#202, d_quarter_seq#203, d_year#204, d_dow#205, d_moy#206, d_dom#207, d_qoy#208, d_fy_year#209, d_fy_quarter_seq#210, d_fy_week_seq#211, d_day_name#212, d_quarter_name#213, d_holiday#214, d_weekend#215, d_following_holiday#216, d_first_dom#217, d_last_dom#218, d_same_day_ly#219, d_same_day_lq#220, d_current_day#221, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "55" : {
          "sign" : -838854454,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 355962,
          "rowCount" : 1447,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: (d_year#204 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#198)) "
        },
        "26" : {
          "sign" : 2140478044,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 41806893656,
          "rowCount" : 275045353,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: ((isnotnull(ss_sold_date_sk#38) AND isnotnull(ss_item_sk#17)) AND dynamicpruning#383 [ss_sold_date_sk#38]) "
        },
        "50" : {
          "sign" : 405287499,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 8497298720,
          "rowCount" : 265540585,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#197 = d_date_sk#198) "
        },
        "37" : {
          "sign" : 185242800,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 6601054824,
          "rowCount" : 275043951,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [ss_quantity#235, ss_sales_price#238, c_customer_sk#249] "
        },
        "68" : {
          "sign" : 668983664,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 2223859360,
          "rowCount" : 69495605,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: Inner, (ws_sold_date_sk#174 = d_date_sk#331) "
        },
        "61" : {
          "sign" : 1796399363,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 98000000,
          "rowCount" : 2000000,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [c_customer_sk#267, c_first_name#275, c_last_name#276] "
        },
        "13" : {
          "sign" : -1549556304,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 29651732864,
          "rowCount" : 142556408,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: ((isnotnull(cs_bill_customer_sk#109) AND isnotnull(cs_sold_date_sk#140)) AND dynamicpruning#388 [cs_sold_date_sk#140]) "
        },
        "46" : {
          "sign" : 1541445856,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
          "sizeInBytes" : 47624376,
          "rowCount" : 1984349,
          "isRuntime" : false,
          "predicate" : " (unknown) Aggregate Arguments: [c_customer_sk#89], [sum((cast(ss_quantity#184 as decimal(10,0)) * ss_sales_price#187)) AS csales#10] "
        },
        "24" : {
          "sign" : -906867980,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 6372974040,
          "rowCount" : 265540585,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#38 = d_date_sk#39) "
        },
        "83" : {
          "sign" : -1156480582,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 4248649360,
          "rowCount" : 265540585,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [ss_item_sk#17, d_date#41] "
        },
        "35" : {
          "sign" : -2017065384,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 55561772,
          "rowCount" : 1984349,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: (isnotnull(ssales#12) AND (cast(ssales#12 as decimal(38,8)) > (0.950000 * scalar-subquery#13 []))) "
        },
        "16" : {
          "sign" : -288098077,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 18450,
          "rowCount" : 75,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: (((isnotnull(d_year#291) AND isnotnull(d_moy#293)) AND ((d_year#291 = 1999) AND (d_moy#293 = 1))) AND isnotnull(d_date_sk#285)) "
        },
        "79" : {
          "sign" : 1559431778,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 5745158420,
          "rowCount" : -1,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: (cnt#9L > 4) "
        },
        "5" : {
          "sign" : -429288521,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 8150025186,
          "rowCount" : 142982898,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [cs_quantity#124, cs_list_price#126, c_first_name#275, c_last_name#276] "
        },
        "72" : {
          "sign" : -1239525219,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 2302899232,
          "rowCount" : 71965601,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [ws_item_sk#143, ws_bill_customer_sk#144, ws_quantity#158, ws_list_price#160, ws_sold_date_sk#174] "
        },
        "10" : {
          "sign" : -1533000391,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 3991579424,
          "rowCount" : 142556408,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [cs_bill_customer_sk#109, cs_quantity#124, cs_list_price#126, cs_sold_date_sk#140] "
        },
        "59" : {
          "sign" : -576393737,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 500000000,
          "rowCount" : 2000000,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [c_customer_sk#89, c_customer_id#90, c_current_cdemo_sk#91, c_current_hdemo_sk#92, c_current_addr_sk#93, c_first_shipto_date_sk#94, c_first_sales_date_sk#95, c_salutation#96, c_first_name#97, c_last_name#98, c_preferred_cust_flag#99, c_birth_day#100, c_birth_month#101, c_birth_year#102, c_birth_country#103, c_login#104, c_email_address#105, c_last_review_date#106], `spark_catalog`.`tpcds_100`.`customer`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "87" : {
          "sign" : -468574573,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 98000000,
          "rowCount" : 2000000,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: LeftSemi, (c_customer_sk#313 = c_customer_sk#249) "
        },
        "48" : {
          "sign" : 1486065451,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 7701230628,
          "rowCount" : 275043951,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: Inner, (ss_customer_sk#177 = c_customer_sk#89) "
        },
        "21" : {
          "sign" : 1463359176,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 10341285156,
          "rowCount" : 287257921,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [d_date#41, i_item_sk#67, substr(i_item_desc#71, 1, 30) AS _groupingexpression#382] "
        },
        "76" : {
          "sign" : 2075465278,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 18450,
          "rowCount" : 75,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: (((isnotnull(d_year#337) AND isnotnull(d_moy#339)) AND ((d_year#337 = 1999) AND (d_moy#339 = 1))) AND isnotnull(d_date_sk#331)) "
        },
        "54" : {
          "sign" : -859196700,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 17364,
          "rowCount" : 1447,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [d_date_sk#198] "
        },
        "43" : {
          "sign" : 959302974,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 500000000,
          "rowCount" : 2000000,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: isnotnull(c_customer_sk#249) "
        },
        "65" : {
          "sign" : -501673370,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 4123492632,
          "rowCount" : 72341976,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [ws_quantity#158, ws_list_price#160, c_first_name#321, c_last_name#322] "
        },
        "71" : {
          "sign" : -400980004,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 2302899232,
          "rowCount" : 71965601,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: LeftSemi, (ws_item_sk#143 = item_sk#7) "
        },
        "57" : {
          "sign" : 1085635783,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 24000000,
          "rowCount" : 2000000,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [c_customer_sk#89] "
        },
        "32" : {
          "sign" : -1751086968,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 86904000,
          "rowCount" : 204000,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: isnotnull(i_item_sk#67) "
        },
        "80" : {
          "sign" : 787914630,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
          "sizeInBytes" : 5745158420,
          "rowCount" : -1,
          "isRuntime" : false,
          "predicate" : " (unknown) Aggregate Arguments: [_groupingexpression#382, i_item_sk#67, d_date#41], [i_item_sk#67 AS item_sk#7, count(1) AS cnt#9L] "
        },
        "82" : {
          "sign" : 932561814,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 38205303493,
          "rowCount" : 287257921,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: Inner, (ss_item_sk#17 = i_item_sk#67) "
        },
        "49" : {
          "sign" : 913586712,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 6372974040,
          "rowCount" : 265540585,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [ss_customer_sk#177, ss_quantity#184, ss_sales_price#187] "
        },
        "6" : {
          "sign" : 2096799240,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 9293888370,
          "rowCount" : 142982898,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: Inner, (cs_bill_customer_sk#109 = c_customer_sk#267) "
        },
        "36" : {
          "sign" : -689210676,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
          "sizeInBytes" : 55561772,
          "rowCount" : 1984349,
          "isRuntime" : false,
          "predicate" : " (unknown) Aggregate Arguments: [c_customer_sk#249], [c_customer_sk#249, sum((cast(ss_quantity#235 as decimal(10,0)) * ss_sales_price#238)) AS ssales#12] "
        },
        "1" : {
          "sign" : 977726779,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
          "sizeInBytes" : 3297281434,
          "rowCount" : 54053794,
          "isRuntime" : false,
          "predicate" : " (unknown) LocalLimit Arguments: 100 "
        },
        "39" : {
          "sign" : -1560061009,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 6601125024,
          "rowCount" : 275046876,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [ss_customer_sk#228, ss_quantity#235, ss_sales_price#238] "
        },
        "17" : {
          "sign" : 394301489,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 17970054,
          "rowCount" : 73049,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#285, d_date_id#286, d_date#287, d_month_seq#288, d_week_seq#289, d_quarter_seq#290, d_year#291, d_dow#292, d_moy#293, d_dom#294, d_qoy#295, d_fy_year#296, d_fy_quarter_seq#297, d_fy_week_seq#298, d_day_name#299, d_quarter_name#300, d_holiday#301, d_weekend#302, d_following_holiday#303, d_first_dom#304, d_last_dom#305, d_same_day_ly#306, d_same_day_lq#307, d_current_day#308, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "25" : {
          "sign" : -633857718,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 4400725648,
          "rowCount" : 275045353,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [ss_item_sk#17, ss_sold_date_sk#38] "
        },
        "60" : {
          "sign" : 681273925,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 98000000,
          "rowCount" : 2000000,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: LeftSemi, (c_customer_sk#267 = c_customer_sk#249) "
        },
        "14" : {
          "sign" : 1536480445,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 29800787536,
          "rowCount" : 143273017,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [cs_sold_time_sk#107, cs_ship_date_sk#108, cs_bill_customer_sk#109, cs_bill_cdemo_sk#110, cs_bill_hdemo_sk#111, cs_bill_addr_sk#112, cs_ship_customer_sk#113, cs_ship_cdemo_sk#114, cs_ship_hdemo_sk#115, cs_ship_addr_sk#116, cs_call_center_sk#117, cs_catalog_page_sk#118, cs_ship_mode_sk#119, cs_warehouse_sk#120, cs_item_sk#121, cs_promo_sk#122, cs_order_number#123L, cs_quantity#124, cs_wholesale_cost#125, cs_list_price#126, cs_sales_price#127, cs_ext_discount_amt#128, cs_ext_sales_price#129, cs_ext_wholesale_cost#130, ... 10 more fields], `spark_catalog`.`tpcds_100`.`catalog_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "47" : {
          "sign" : -398990033,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 6601054824,
          "rowCount" : 275043951,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [ss_quantity#184, ss_sales_price#187, c_customer_sk#89] "
        },
        "31" : {
          "sign" : -825358377,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 25500000,
          "rowCount" : 204000,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [i_item_sk#67, i_item_desc#71] "
        },
        "69" : {
          "sign" : -313837626,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 2015036828,
          "rowCount" : 71965601,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: LeftSemi, (ws_bill_customer_sk#144 = c_customer_sk#249) "
        },
        "58" : {
          "sign" : -337975679,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 500000000,
          "rowCount" : 2000000,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: isnotnull(c_customer_sk#89) "
        },
        "64" : {
          "sign" : -1969627731,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
          "sizeInBytes" : 1648640717,
          "rowCount" : 27026897,
          "isRuntime" : false,
          "predicate" : " (unknown) Aggregate Arguments: [c_last_name#322, c_first_name#321], [c_last_name#322, c_first_name#321, sum((cast(ws_quantity#158 as decimal(10,0)) * ws_list_price#160)) AS sales#3] "
        },
        "53" : {
          "sign" : 174504602,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 41806893656,
          "rowCount" : 275045353,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#175, ss_item_sk#176, ss_customer_sk#177, ss_cdemo_sk#178, ss_hdemo_sk#179, ss_addr_sk#180, ss_store_sk#181, ss_promo_sk#182, ss_ticket_number#183L, ss_quantity#184, ss_wholesale_cost#185, ss_list_price#186, ss_sales_price#187, ss_ext_discount_amt#188, ss_ext_sales_price#189, ss_ext_wholesale_cost#190, ss_ext_list_price#191, ss_ext_tax#192, ss_coupon_amt#193, ss_net_paid#194, ss_net_paid_inc_tax#195, ss_net_profit#196, ss_sold_date_sk#197], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "42" : {
          "sign" : -1208300746,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 24000000,
          "rowCount" : 2000000,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [c_customer_sk#249] "
        },
        "75" : {
          "sign" : -160985655,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 900,
          "rowCount" : 75,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [d_date_sk#331] "
        },
        "0" : {
          "sign" : -1427421396,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
          "sizeInBytes" : 6400,
          "rowCount" : 100,
          "isRuntime" : false,
          "predicate" : " (unknown) GlobalLimit Arguments: 100 "
        },
        "20" : {
          "sign" : 456178888,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
          "sizeInBytes" : 5745158420,
          "rowCount" : -1,
          "isRuntime" : false,
          "predicate" : " (unknown) Aggregate Arguments: [_groupingexpression#382, i_item_sk#67, d_date#41], [i_item_sk#67 AS item_sk#7, count(1) AS cnt#9L] "
        },
        "27" : {
          "sign" : 437822322,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 41806893656,
          "rowCount" : 275045353,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#16, ss_item_sk#17, ss_customer_sk#18, ss_cdemo_sk#19, ss_hdemo_sk#20, ss_addr_sk#21, ss_store_sk#22, ss_promo_sk#23, ss_ticket_number#24L, ss_quantity#25, ss_wholesale_cost#26, ss_list_price#27, ss_sales_price#28, ss_ext_discount_amt#29, ss_ext_sales_price#30, ss_ext_wholesale_cost#31, ss_ext_list_price#32, ss_ext_tax#33, ss_coupon_amt#34, ss_net_paid#35, ss_net_paid_inc_tax#36, ss_net_profit#37, ss_sold_date_sk#38], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "70" : {
          "sign" : -750350975,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 2015036828,
          "rowCount" : 71965601,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [ws_bill_customer_sk#144, ws_quantity#158, ws_list_price#160, ws_sold_date_sk#174] "
        },
        "2" : {
          "sign" : 412242582,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
          "sizeInBytes" : 3297281434,
          "rowCount" : 54053794,
          "isRuntime" : false,
          "predicate" : " (unknown) Sort Arguments: [c_last_name#276 ASC NULLS FIRST, c_first_name#275 ASC NULLS FIRST, sales#0 ASC NULLS FIRST], true "
        },
        "86" : {
          "sign" : 1049460702,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 41806893656,
          "rowCount" : 275045353,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: ((isnotnull(ss_sold_date_sk#38) AND isnotnull(ss_item_sk#17)) AND dynamicpruning#385 [ss_sold_date_sk#38]) "
        },
        "38" : {
          "sign" : 260124862,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 7701230628,
          "rowCount" : 275043951,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: Inner, (ss_customer_sk#228 = c_customer_sk#249) "
        },
        "81" : {
          "sign" : 1243462150,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 10341285156,
          "rowCount" : 287257921,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [d_date#41, i_item_sk#67, substr(i_item_desc#71, 1, 30) AS _groupingexpression#382] "
        },
        "18" : {
          "sign" : 1467673885,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 3447095052,
          "rowCount" : -1,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [item_sk#7] "
        },
        "30" : {
          "sign" : 1227723257,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 17970054,
          "rowCount" : 73049,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#39, d_date_id#40, d_date#41, d_month_seq#42, d_week_seq#43, d_quarter_seq#44, d_year#45, d_dow#46, d_moy#47, d_dom#48, d_qoy#49, d_fy_year#50, d_fy_quarter_seq#51, d_fy_week_seq#52, d_day_name#53, d_quarter_name#54, d_holiday#55, d_weekend#56, d_following_holiday#57, d_first_dom#58, d_last_dom#59, d_same_day_ly#60, d_same_day_lq#61, d_current_day#62, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "7" : {
          "sign" : 2002905738,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 3324390288,
          "rowCount" : 138516262,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [cs_bill_customer_sk#109, cs_quantity#124, cs_list_price#126] "
        },
        "29" : {
          "sign" : 1327533026,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 355962,
          "rowCount" : 1447,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: (d_year#45 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#39)) "
        },
        "41" : {
          "sign" : 173275759,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 43776970976,
          "rowCount" : 288006388,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#226, ss_item_sk#227, ss_customer_sk#228, ss_cdemo_sk#229, ss_hdemo_sk#230, ss_addr_sk#231, ss_store_sk#232, ss_promo_sk#233, ss_ticket_number#234L, ss_quantity#235, ss_wholesale_cost#236, ss_list_price#237, ss_sales_price#238, ss_ext_discount_amt#239, ss_ext_sales_price#240, ss_ext_wholesale_cost#241, ss_ext_list_price#242, ss_ext_tax#243, ss_coupon_amt#244, ss_net_paid#245, ss_net_paid_inc_tax#246, ss_net_profit#247, ss_sold_date_sk#248], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "63" : {
          "sign" : -1802442264,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 500000000,
          "rowCount" : 2000000,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [c_customer_sk#267, c_customer_id#268, c_current_cdemo_sk#269, c_current_hdemo_sk#270, c_current_addr_sk#271, c_first_shipto_date_sk#272, c_first_sales_date_sk#273, c_salutation#274, c_first_name#275, c_last_name#276, c_preferred_cust_flag#277, c_birth_day#278, c_birth_month#279, c_birth_year#280, c_birth_country#281, c_login#282, c_email_address#283, c_last_review_date#284], `spark_catalog`.`tpcds_100`.`customer`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "3" : {
          "sign" : -1847535287,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Union",
          "sizeInBytes" : 3297281434,
          "rowCount" : 54053794,
          "isRuntime" : false,
          "predicate" : " (unknown) Union Arguments: false, false "
        },
        "74" : {
          "sign" : 2108049380,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 14972593792,
          "rowCount" : 71983624,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ws_sold_time_sk#141, ws_ship_date_sk#142, ws_item_sk#143, ws_bill_customer_sk#144, ws_bill_cdemo_sk#145, ws_bill_hdemo_sk#146, ws_bill_addr_sk#147, ws_ship_customer_sk#148, ws_ship_cdemo_sk#149, ws_ship_hdemo_sk#150, ws_ship_addr_sk#151, ws_web_page_sk#152, ws_web_site_sk#153, ws_ship_mode_sk#154, ws_warehouse_sk#155, ws_promo_sk#156, ws_order_number#157L, ws_quantity#158, ws_wholesale_cost#159, ws_list_price#160, ws_sales_price#161, ws_ext_discount_amt#162, ws_ext_sales_price#163, ws_ext_wholesale_cost#164, ... 10 more fields], `spark_catalog`.`tpcds_100`.`web_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "52" : {
          "sign" : -251127268,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 39925696056,
          "rowCount" : 262669053,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: ((isnotnull(ss_customer_sk#177) AND isnotnull(ss_sold_date_sk#197)) AND dynamicpruning#384 [ss_sold_date_sk#197]) "
        },
        "85" : {
          "sign" : -1253422132,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 4400725648,
          "rowCount" : 275045353,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [ss_item_sk#17, ss_sold_date_sk#38] "
        },
        "28" : {
          "sign" : 886815593,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 23152,
          "rowCount" : 1447,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [d_date_sk#39, d_date#41] "
        }
      },
      "links" : [ {
        "fromId" : 14,
        "fromName" : "LogicalRelation",
        "toId" : 13,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 17,
        "fromName" : "LogicalRelation",
        "toId" : 16,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 16,
        "fromName" : "Filter",
        "toId" : 15,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 15,
        "fromName" : "Project",
        "toId" : 13,
        "toName" : "Filter",
        "linkType" : "Subquery"
      }, {
        "fromId" : 13,
        "fromName" : "Filter",
        "toId" : 12,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 12,
        "fromName" : "Project",
        "toId" : 11,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 27,
        "fromName" : "LogicalRelation",
        "toId" : 26,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 30,
        "fromName" : "LogicalRelation",
        "toId" : 29,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 29,
        "fromName" : "Filter",
        "toId" : 28,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 28,
        "fromName" : "Project",
        "toId" : 26,
        "toName" : "Filter",
        "linkType" : "Subquery"
      }, {
        "fromId" : 26,
        "fromName" : "Filter",
        "toId" : 25,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 25,
        "fromName" : "Project",
        "toId" : 24,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 28,
        "fromName" : "Project",
        "toId" : 24,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 24,
        "fromName" : "Join",
        "toId" : 23,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 23,
        "fromName" : "Project",
        "toId" : 22,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 33,
        "fromName" : "LogicalRelation",
        "toId" : 32,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 32,
        "fromName" : "Filter",
        "toId" : 31,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 31,
        "fromName" : "Project",
        "toId" : 22,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 22,
        "fromName" : "Join",
        "toId" : 21,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 21,
        "fromName" : "Project",
        "toId" : 20,
        "toName" : "Aggregate",
        "linkType" : "Operator"
      }, {
        "fromId" : 20,
        "fromName" : "Aggregate",
        "toId" : 19,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 19,
        "fromName" : "Filter",
        "toId" : 18,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 18,
        "fromName" : "Project",
        "toId" : 11,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 11,
        "fromName" : "Join",
        "toId" : 10,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 10,
        "fromName" : "Project",
        "toId" : 9,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 41,
        "fromName" : "LogicalRelation",
        "toId" : 40,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 40,
        "fromName" : "Filter",
        "toId" : 39,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 39,
        "fromName" : "Project",
        "toId" : 38,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 44,
        "fromName" : "LogicalRelation",
        "toId" : 43,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 43,
        "fromName" : "Filter",
        "toId" : 42,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 42,
        "fromName" : "Project",
        "toId" : 38,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 38,
        "fromName" : "Join",
        "toId" : 37,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 37,
        "fromName" : "Project",
        "toId" : 36,
        "toName" : "Aggregate",
        "linkType" : "Operator"
      }, {
        "fromId" : 36,
        "fromName" : "Aggregate",
        "toId" : 35,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 53,
        "fromName" : "LogicalRelation",
        "toId" : 52,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 56,
        "fromName" : "LogicalRelation",
        "toId" : 55,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 55,
        "fromName" : "Filter",
        "toId" : 54,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 54,
        "fromName" : "Project",
        "toId" : 52,
        "toName" : "Filter",
        "linkType" : "Subquery"
      }, {
        "fromId" : 52,
        "fromName" : "Filter",
        "toId" : 51,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 51,
        "fromName" : "Project",
        "toId" : 50,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 54,
        "fromName" : "Project",
        "toId" : 50,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 50,
        "fromName" : "Join",
        "toId" : 49,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 49,
        "fromName" : "Project",
        "toId" : 48,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 59,
        "fromName" : "LogicalRelation",
        "toId" : 58,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 58,
        "fromName" : "Filter",
        "toId" : 57,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 57,
        "fromName" : "Project",
        "toId" : 48,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 48,
        "fromName" : "Join",
        "toId" : 47,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 47,
        "fromName" : "Project",
        "toId" : 46,
        "toName" : "Aggregate",
        "linkType" : "Operator"
      }, {
        "fromId" : 46,
        "fromName" : "Aggregate",
        "toId" : 45,
        "toName" : "Aggregate",
        "linkType" : "Operator"
      }, {
        "fromId" : 45,
        "fromName" : "Aggregate",
        "toId" : 35,
        "toName" : "Filter",
        "linkType" : "Subquery"
      }, {
        "fromId" : 35,
        "fromName" : "Filter",
        "toId" : 34,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 34,
        "fromName" : "Project",
        "toId" : 9,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 9,
        "fromName" : "Join",
        "toId" : 8,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 15,
        "fromName" : "Project",
        "toId" : 8,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 8,
        "fromName" : "Join",
        "toId" : 7,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 7,
        "fromName" : "Project",
        "toId" : 6,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 63,
        "fromName" : "LogicalRelation",
        "toId" : 62,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 62,
        "fromName" : "Filter",
        "toId" : 61,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 61,
        "fromName" : "Project",
        "toId" : 60,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 34,
        "fromName" : "Project",
        "toId" : 60,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 60,
        "fromName" : "Join",
        "toId" : 6,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 6,
        "fromName" : "Join",
        "toId" : 5,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 5,
        "fromName" : "Project",
        "toId" : 4,
        "toName" : "Aggregate",
        "linkType" : "Operator"
      }, {
        "fromId" : 4,
        "fromName" : "Aggregate",
        "toId" : 3,
        "toName" : "Union",
        "linkType" : "Operator"
      }, {
        "fromId" : 74,
        "fromName" : "LogicalRelation",
        "toId" : 73,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 77,
        "fromName" : "LogicalRelation",
        "toId" : 76,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 76,
        "fromName" : "Filter",
        "toId" : 75,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 75,
        "fromName" : "Project",
        "toId" : 73,
        "toName" : "Filter",
        "linkType" : "Subquery"
      }, {
        "fromId" : 73,
        "fromName" : "Filter",
        "toId" : 72,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 72,
        "fromName" : "Project",
        "toId" : 71,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 27,
        "fromName" : "LogicalRelation",
        "toId" : 86,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 28,
        "fromName" : "Project",
        "toId" : 86,
        "toName" : "Filter",
        "linkType" : "Subquery"
      }, {
        "fromId" : 86,
        "fromName" : "Filter",
        "toId" : 85,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 85,
        "fromName" : "Project",
        "toId" : 84,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 28,
        "fromName" : "Project",
        "toId" : 84,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 84,
        "fromName" : "Join",
        "toId" : 83,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 83,
        "fromName" : "Project",
        "toId" : 82,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 31,
        "fromName" : "Project",
        "toId" : 82,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 82,
        "fromName" : "Join",
        "toId" : 81,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 81,
        "fromName" : "Project",
        "toId" : 80,
        "toName" : "Aggregate",
        "linkType" : "Operator"
      }, {
        "fromId" : 80,
        "fromName" : "Aggregate",
        "toId" : 79,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 79,
        "fromName" : "Filter",
        "toId" : 78,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 78,
        "fromName" : "Project",
        "toId" : 71,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 71,
        "fromName" : "Join",
        "toId" : 70,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 70,
        "fromName" : "Project",
        "toId" : 69,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 34,
        "fromName" : "Project",
        "toId" : 69,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 69,
        "fromName" : "Join",
        "toId" : 68,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 75,
        "fromName" : "Project",
        "toId" : 68,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 68,
        "fromName" : "Join",
        "toId" : 67,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 67,
        "fromName" : "Project",
        "toId" : 66,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 90,
        "fromName" : "LogicalRelation",
        "toId" : 89,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 89,
        "fromName" : "Filter",
        "toId" : 88,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 88,
        "fromName" : "Project",
        "toId" : 87,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 34,
        "fromName" : "Project",
        "toId" : 87,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 87,
        "fromName" : "Join",
        "toId" : 66,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 66,
        "fromName" : "Join",
        "toId" : 65,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 65,
        "fromName" : "Project",
        "toId" : 64,
        "toName" : "Aggregate",
        "linkType" : "Operator"
      }, {
        "fromId" : 64,
        "fromName" : "Aggregate",
        "toId" : 3,
        "toName" : "Union",
        "linkType" : "Operator"
      }, {
        "fromId" : 3,
        "fromName" : "Union",
        "toId" : 2,
        "toName" : "Sort",
        "linkType" : "Operator"
      }, {
        "fromId" : 2,
        "fromName" : "Sort",
        "toId" : 1,
        "toName" : "LocalLimit",
        "linkType" : "Operator"
      }, {
        "fromId" : 1,
        "fromName" : "LocalLimit",
        "toId" : 0,
        "toName" : "GlobalLimit",
        "linkType" : "Operator"
      } ],
      "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [c_last_name#276 ASC NULLS FIRST, c_first_name#275 ASC NULLS FIRST, sales#0 ASC NULLS FIRST], true\n      +- Union false, false\n         :- Aggregate [c_last_name#276, c_first_name#275], [c_last_name#276, c_first_name#275, sum((cast(cs_quantity#124 as decimal(10,0)) * cs_list_price#126)) AS sales#0]\n         :  +- Project [cs_quantity#124, cs_list_price#126, c_first_name#275, c_last_name#276]\n         :     +- Join Inner, (cs_bill_customer_sk#109 = c_customer_sk#267)\n         :        :- Project [cs_bill_customer_sk#109, cs_quantity#124, cs_list_price#126]\n         :        :  +- Join Inner, (cs_sold_date_sk#140 = d_date_sk#285)\n         :        :     :- Join LeftSemi, (cs_bill_customer_sk#109 = c_customer_sk#249)\n         :        :     :  :- Project [cs_bill_customer_sk#109, cs_quantity#124, cs_list_price#126, cs_sold_date_sk#140]\n         :        :     :  :  +- Join LeftSemi, (cs_item_sk#121 = item_sk#7)\n         :        :     :  :     :- Project [cs_bill_customer_sk#109, cs_item_sk#121, cs_quantity#124, cs_list_price#126, cs_sold_date_sk#140]\n         :        :     :  :     :  +- Filter ((isnotnull(cs_bill_customer_sk#109) AND isnotnull(cs_sold_date_sk#140)) AND dynamicpruning#388 [cs_sold_date_sk#140])\n         :        :     :  :     :     :  +- Project [d_date_sk#285]\n         :        :     :  :     :     :     +- Filter (((isnotnull(d_year#291) AND isnotnull(d_moy#293)) AND ((d_year#291 = 1999) AND (d_moy#293 = 1))) AND isnotnull(d_date_sk#285))\n         :        :     :  :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#285,d_date_id#286,d_date#287,d_month_seq#288,d_week_seq#289,d_quarter_seq#290,d_year#291,d_dow#292,d_moy#293,d_dom#294,d_qoy#295,d_fy_year#296,d_fy_quarter_seq#297,d_fy_week_seq#298,d_day_name#299,d_quarter_name#300,d_holiday#301,d_weekend#302,d_following_holiday#303,d_first_dom#304,d_last_dom#305,d_same_day_ly#306,d_same_day_lq#307,d_current_day#308,... 4 more fields] parquet\n         :        :     :  :     :     +- Relation spark_catalog.tpcds_100.catalog_sales[cs_sold_time_sk#107,cs_ship_date_sk#108,cs_bill_customer_sk#109,cs_bill_cdemo_sk#110,cs_bill_hdemo_sk#111,cs_bill_addr_sk#112,cs_ship_customer_sk#113,cs_ship_cdemo_sk#114,cs_ship_hdemo_sk#115,cs_ship_addr_sk#116,cs_call_center_sk#117,cs_catalog_page_sk#118,cs_ship_mode_sk#119,cs_warehouse_sk#120,cs_item_sk#121,cs_promo_sk#122,cs_order_number#123L,cs_quantity#124,cs_wholesale_cost#125,cs_list_price#126,cs_sales_price#127,cs_ext_discount_amt#128,cs_ext_sales_price#129,cs_ext_wholesale_cost#130,... 10 more fields] parquet\n         :        :     :  :     +- Project [item_sk#7]\n         :        :     :  :        +- Filter (cnt#9L > 4)\n         :        :     :  :           +- Aggregate [_groupingexpression#382, i_item_sk#67, d_date#41], [i_item_sk#67 AS item_sk#7, count(1) AS cnt#9L]\n         :        :     :  :              +- Project [d_date#41, i_item_sk#67, substr(i_item_desc#71, 1, 30) AS _groupingexpression#382]\n         :        :     :  :                 +- Join Inner, (ss_item_sk#17 = i_item_sk#67)\n         :        :     :  :                    :- Project [ss_item_sk#17, d_date#41]\n         :        :     :  :                    :  +- Join Inner, (ss_sold_date_sk#38 = d_date_sk#39)\n         :        :     :  :                    :     :- Project [ss_item_sk#17, ss_sold_date_sk#38]\n         :        :     :  :                    :     :  +- Filter ((isnotnull(ss_sold_date_sk#38) AND isnotnull(ss_item_sk#17)) AND dynamicpruning#383 [ss_sold_date_sk#38])\n         :        :     :  :                    :     :     :  +- Project [d_date_sk#39, d_date#41]\n         :        :     :  :                    :     :     :     +- Filter (d_year#45 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#39))\n         :        :     :  :                    :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#39,d_date_id#40,d_date#41,d_month_seq#42,d_week_seq#43,d_quarter_seq#44,d_year#45,d_dow#46,d_moy#47,d_dom#48,d_qoy#49,d_fy_year#50,d_fy_quarter_seq#51,d_fy_week_seq#52,d_day_name#53,d_quarter_name#54,d_holiday#55,d_weekend#56,d_following_holiday#57,d_first_dom#58,d_last_dom#59,d_same_day_ly#60,d_same_day_lq#61,d_current_day#62,... 4 more fields] parquet\n         :        :     :  :                    :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#16,ss_item_sk#17,ss_customer_sk#18,ss_cdemo_sk#19,ss_hdemo_sk#20,ss_addr_sk#21,ss_store_sk#22,ss_promo_sk#23,ss_ticket_number#24L,ss_quantity#25,ss_wholesale_cost#26,ss_list_price#27,ss_sales_price#28,ss_ext_discount_amt#29,ss_ext_sales_price#30,ss_ext_wholesale_cost#31,ss_ext_list_price#32,ss_ext_tax#33,ss_coupon_amt#34,ss_net_paid#35,ss_net_paid_inc_tax#36,ss_net_profit#37,ss_sold_date_sk#38] parquet\n         :        :     :  :                    :     +- Project [d_date_sk#39, d_date#41]\n         :        :     :  :                    :        +- Filter (d_year#45 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#39))\n         :        :     :  :                    :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#39,d_date_id#40,d_date#41,d_month_seq#42,d_week_seq#43,d_quarter_seq#44,d_year#45,d_dow#46,d_moy#47,d_dom#48,d_qoy#49,d_fy_year#50,d_fy_quarter_seq#51,d_fy_week_seq#52,d_day_name#53,d_quarter_name#54,d_holiday#55,d_weekend#56,d_following_holiday#57,d_first_dom#58,d_last_dom#59,d_same_day_ly#60,d_same_day_lq#61,d_current_day#62,... 4 more fields] parquet\n         :        :     :  :                    +- Project [i_item_sk#67, i_item_desc#71]\n         :        :     :  :                       +- Filter isnotnull(i_item_sk#67)\n         :        :     :  :                          +- Relation spark_catalog.tpcds_100.item[i_item_sk#67,i_item_id#68,i_rec_start_date#69,i_rec_end_date#70,i_item_desc#71,i_current_price#72,i_wholesale_cost#73,i_brand_id#74,i_brand#75,i_class_id#76,i_class#77,i_category_id#78,i_category#79,i_manufact_id#80,i_manufact#81,i_size#82,i_formulation#83,i_color#84,i_units#85,i_container#86,i_manager_id#87,i_product_name#88] parquet\n         :        :     :  +- Project [c_customer_sk#249]\n         :        :     :     +- Filter (isnotnull(ssales#12) AND (cast(ssales#12 as decimal(38,8)) > (0.950000 * scalar-subquery#13 [])))\n         :        :     :        :  +- Aggregate [max(csales#10) AS tpcds_cmax#11]\n         :        :     :        :     +- Aggregate [c_customer_sk#89], [sum((cast(ss_quantity#184 as decimal(10,0)) * ss_sales_price#187)) AS csales#10]\n         :        :     :        :        +- Project [ss_quantity#184, ss_sales_price#187, c_customer_sk#89]\n         :        :     :        :           +- Join Inner, (ss_customer_sk#177 = c_customer_sk#89)\n         :        :     :        :              :- Project [ss_customer_sk#177, ss_quantity#184, ss_sales_price#187]\n         :        :     :        :              :  +- Join Inner, (ss_sold_date_sk#197 = d_date_sk#198)\n         :        :     :        :              :     :- Project [ss_customer_sk#177, ss_quantity#184, ss_sales_price#187, ss_sold_date_sk#197]\n         :        :     :        :              :     :  +- Filter ((isnotnull(ss_customer_sk#177) AND isnotnull(ss_sold_date_sk#197)) AND dynamicpruning#384 [ss_sold_date_sk#197])\n         :        :     :        :              :     :     :  +- Project [d_date_sk#198]\n         :        :     :        :              :     :     :     +- Filter (d_year#204 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#198))\n         :        :     :        :              :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#198,d_date_id#199,d_date#200,d_month_seq#201,d_week_seq#202,d_quarter_seq#203,d_year#204,d_dow#205,d_moy#206,d_dom#207,d_qoy#208,d_fy_year#209,d_fy_quarter_seq#210,d_fy_week_seq#211,d_day_name#212,d_quarter_name#213,d_holiday#214,d_weekend#215,d_following_holiday#216,d_first_dom#217,d_last_dom#218,d_same_day_ly#219,d_same_day_lq#220,d_current_day#221,... 4 more fields] parquet\n         :        :     :        :              :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#175,ss_item_sk#176,ss_customer_sk#177,ss_cdemo_sk#178,ss_hdemo_sk#179,ss_addr_sk#180,ss_store_sk#181,ss_promo_sk#182,ss_ticket_number#183L,ss_quantity#184,ss_wholesale_cost#185,ss_list_price#186,ss_sales_price#187,ss_ext_discount_amt#188,ss_ext_sales_price#189,ss_ext_wholesale_cost#190,ss_ext_list_price#191,ss_ext_tax#192,ss_coupon_amt#193,ss_net_paid#194,ss_net_paid_inc_tax#195,ss_net_profit#196,ss_sold_date_sk#197] parquet\n         :        :     :        :              :     +- Project [d_date_sk#198]\n         :        :     :        :              :        +- Filter (d_year#204 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#198))\n         :        :     :        :              :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#198,d_date_id#199,d_date#200,d_month_seq#201,d_week_seq#202,d_quarter_seq#203,d_year#204,d_dow#205,d_moy#206,d_dom#207,d_qoy#208,d_fy_year#209,d_fy_quarter_seq#210,d_fy_week_seq#211,d_day_name#212,d_quarter_name#213,d_holiday#214,d_weekend#215,d_following_holiday#216,d_first_dom#217,d_last_dom#218,d_same_day_ly#219,d_same_day_lq#220,d_current_day#221,... 4 more fields] parquet\n         :        :     :        :              +- Project [c_customer_sk#89]\n         :        :     :        :                 +- Filter isnotnull(c_customer_sk#89)\n         :        :     :        :                    +- Relation spark_catalog.tpcds_100.customer[c_customer_sk#89,c_customer_id#90,c_current_cdemo_sk#91,c_current_hdemo_sk#92,c_current_addr_sk#93,c_first_shipto_date_sk#94,c_first_sales_date_sk#95,c_salutation#96,c_first_name#97,c_last_name#98,c_preferred_cust_flag#99,c_birth_day#100,c_birth_month#101,c_birth_year#102,c_birth_country#103,c_login#104,c_email_address#105,c_last_review_date#106] parquet\n         :        :     :        +- Aggregate [c_customer_sk#249], [c_customer_sk#249, sum((cast(ss_quantity#235 as decimal(10,0)) * ss_sales_price#238)) AS ssales#12]\n         :        :     :           +- Project [ss_quantity#235, ss_sales_price#238, c_customer_sk#249]\n         :        :     :              +- Join Inner, (ss_customer_sk#228 = c_customer_sk#249)\n         :        :     :                 :- Project [ss_customer_sk#228, ss_quantity#235, ss_sales_price#238]\n         :        :     :                 :  +- Filter isnotnull(ss_customer_sk#228)\n         :        :     :                 :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#226,ss_item_sk#227,ss_customer_sk#228,ss_cdemo_sk#229,ss_hdemo_sk#230,ss_addr_sk#231,ss_store_sk#232,ss_promo_sk#233,ss_ticket_number#234L,ss_quantity#235,ss_wholesale_cost#236,ss_list_price#237,ss_sales_price#238,ss_ext_discount_amt#239,ss_ext_sales_price#240,ss_ext_wholesale_cost#241,ss_ext_list_price#242,ss_ext_tax#243,ss_coupon_amt#244,ss_net_paid#245,ss_net_paid_inc_tax#246,ss_net_profit#247,ss_sold_date_sk#248] parquet\n         :        :     :                 +- Project [c_customer_sk#249]\n         :        :     :                    +- Filter isnotnull(c_customer_sk#249)\n         :        :     :                       +- Relation spark_catalog.tpcds_100.customer[c_customer_sk#249,c_customer_id#250,c_current_cdemo_sk#251,c_current_hdemo_sk#252,c_current_addr_sk#253,c_first_shipto_date_sk#254,c_first_sales_date_sk#255,c_salutation#256,c_first_name#257,c_last_name#258,c_preferred_cust_flag#259,c_birth_day#260,c_birth_month#261,c_birth_year#262,c_birth_country#263,c_login#264,c_email_address#265,c_last_review_date#266] parquet\n         :        :     +- Project [d_date_sk#285]\n         :        :        +- Filter (((isnotnull(d_year#291) AND isnotnull(d_moy#293)) AND ((d_year#291 = 1999) AND (d_moy#293 = 1))) AND isnotnull(d_date_sk#285))\n         :        :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#285,d_date_id#286,d_date#287,d_month_seq#288,d_week_seq#289,d_quarter_seq#290,d_year#291,d_dow#292,d_moy#293,d_dom#294,d_qoy#295,d_fy_year#296,d_fy_quarter_seq#297,d_fy_week_seq#298,d_day_name#299,d_quarter_name#300,d_holiday#301,d_weekend#302,d_following_holiday#303,d_first_dom#304,d_last_dom#305,d_same_day_ly#306,d_same_day_lq#307,d_current_day#308,... 4 more fields] parquet\n         :        +- Join LeftSemi, (c_customer_sk#267 = c_customer_sk#249)\n         :           :- Project [c_customer_sk#267, c_first_name#275, c_last_name#276]\n         :           :  +- Filter isnotnull(c_customer_sk#267)\n         :           :     +- Relation spark_catalog.tpcds_100.customer[c_customer_sk#267,c_customer_id#268,c_current_cdemo_sk#269,c_current_hdemo_sk#270,c_current_addr_sk#271,c_first_shipto_date_sk#272,c_first_sales_date_sk#273,c_salutation#274,c_first_name#275,c_last_name#276,c_preferred_cust_flag#277,c_birth_day#278,c_birth_month#279,c_birth_year#280,c_birth_country#281,c_login#282,c_email_address#283,c_last_review_date#284] parquet\n         :           +- Project [c_customer_sk#249]\n         :              +- Filter (isnotnull(ssales#12) AND (cast(ssales#12 as decimal(38,8)) > (0.950000 * scalar-subquery#13 [])))\n         :                 :  +- Aggregate [max(csales#10) AS tpcds_cmax#11]\n         :                 :     +- Aggregate [c_customer_sk#89], [sum((cast(ss_quantity#184 as decimal(10,0)) * ss_sales_price#187)) AS csales#10]\n         :                 :        +- Project [ss_quantity#184, ss_sales_price#187, c_customer_sk#89]\n         :                 :           +- Join Inner, (ss_customer_sk#177 = c_customer_sk#89)\n         :                 :              :- Project [ss_customer_sk#177, ss_quantity#184, ss_sales_price#187]\n         :                 :              :  +- Join Inner, (ss_sold_date_sk#197 = d_date_sk#198)\n         :                 :              :     :- Project [ss_customer_sk#177, ss_quantity#184, ss_sales_price#187, ss_sold_date_sk#197]\n         :                 :              :     :  +- Filter ((isnotnull(ss_customer_sk#177) AND isnotnull(ss_sold_date_sk#197)) AND dynamicpruning#384 [ss_sold_date_sk#197])\n         :                 :              :     :     :  +- Project [d_date_sk#198]\n         :                 :              :     :     :     +- Filter (d_year#204 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#198))\n         :                 :              :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#198,d_date_id#199,d_date#200,d_month_seq#201,d_week_seq#202,d_quarter_seq#203,d_year#204,d_dow#205,d_moy#206,d_dom#207,d_qoy#208,d_fy_year#209,d_fy_quarter_seq#210,d_fy_week_seq#211,d_day_name#212,d_quarter_name#213,d_holiday#214,d_weekend#215,d_following_holiday#216,d_first_dom#217,d_last_dom#218,d_same_day_ly#219,d_same_day_lq#220,d_current_day#221,... 4 more fields] parquet\n         :                 :              :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#175,ss_item_sk#176,ss_customer_sk#177,ss_cdemo_sk#178,ss_hdemo_sk#179,ss_addr_sk#180,ss_store_sk#181,ss_promo_sk#182,ss_ticket_number#183L,ss_quantity#184,ss_wholesale_cost#185,ss_list_price#186,ss_sales_price#187,ss_ext_discount_amt#188,ss_ext_sales_price#189,ss_ext_wholesale_cost#190,ss_ext_list_price#191,ss_ext_tax#192,ss_coupon_amt#193,ss_net_paid#194,ss_net_paid_inc_tax#195,ss_net_profit#196,ss_sold_date_sk#197] parquet\n         :                 :              :     +- Project [d_date_sk#198]\n         :                 :              :        +- Filter (d_year#204 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#198))\n         :                 :              :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#198,d_date_id#199,d_date#200,d_month_seq#201,d_week_seq#202,d_quarter_seq#203,d_year#204,d_dow#205,d_moy#206,d_dom#207,d_qoy#208,d_fy_year#209,d_fy_quarter_seq#210,d_fy_week_seq#211,d_day_name#212,d_quarter_name#213,d_holiday#214,d_weekend#215,d_following_holiday#216,d_first_dom#217,d_last_dom#218,d_same_day_ly#219,d_same_day_lq#220,d_current_day#221,... 4 more fields] parquet\n         :                 :              +- Project [c_customer_sk#89]\n         :                 :                 +- Filter isnotnull(c_customer_sk#89)\n         :                 :                    +- Relation spark_catalog.tpcds_100.customer[c_customer_sk#89,c_customer_id#90,c_current_cdemo_sk#91,c_current_hdemo_sk#92,c_current_addr_sk#93,c_first_shipto_date_sk#94,c_first_sales_date_sk#95,c_salutation#96,c_first_name#97,c_last_name#98,c_preferred_cust_flag#99,c_birth_day#100,c_birth_month#101,c_birth_year#102,c_birth_country#103,c_login#104,c_email_address#105,c_last_review_date#106] parquet\n         :                 +- Aggregate [c_customer_sk#249], [c_customer_sk#249, sum((cast(ss_quantity#235 as decimal(10,0)) * ss_sales_price#238)) AS ssales#12]\n         :                    +- Project [ss_quantity#235, ss_sales_price#238, c_customer_sk#249]\n         :                       +- Join Inner, (ss_customer_sk#228 = c_customer_sk#249)\n         :                          :- Project [ss_customer_sk#228, ss_quantity#235, ss_sales_price#238]\n         :                          :  +- Filter isnotnull(ss_customer_sk#228)\n         :                          :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#226,ss_item_sk#227,ss_customer_sk#228,ss_cdemo_sk#229,ss_hdemo_sk#230,ss_addr_sk#231,ss_store_sk#232,ss_promo_sk#233,ss_ticket_number#234L,ss_quantity#235,ss_wholesale_cost#236,ss_list_price#237,ss_sales_price#238,ss_ext_discount_amt#239,ss_ext_sales_price#240,ss_ext_wholesale_cost#241,ss_ext_list_price#242,ss_ext_tax#243,ss_coupon_amt#244,ss_net_paid#245,ss_net_paid_inc_tax#246,ss_net_profit#247,ss_sold_date_sk#248] parquet\n         :                          +- Project [c_customer_sk#249]\n         :                             +- Filter isnotnull(c_customer_sk#249)\n         :                                +- Relation spark_catalog.tpcds_100.customer[c_customer_sk#249,c_customer_id#250,c_current_cdemo_sk#251,c_current_hdemo_sk#252,c_current_addr_sk#253,c_first_shipto_date_sk#254,c_first_sales_date_sk#255,c_salutation#256,c_first_name#257,c_last_name#258,c_preferred_cust_flag#259,c_birth_day#260,c_birth_month#261,c_birth_year#262,c_birth_country#263,c_login#264,c_email_address#265,c_last_review_date#266] parquet\n         +- Aggregate [c_last_name#322, c_first_name#321], [c_last_name#322, c_first_name#321, sum((cast(ws_quantity#158 as decimal(10,0)) * ws_list_price#160)) AS sales#3]\n            +- Project [ws_quantity#158, ws_list_price#160, c_first_name#321, c_last_name#322]\n               +- Join Inner, (ws_bill_customer_sk#144 = c_customer_sk#313)\n                  :- Project [ws_bill_customer_sk#144, ws_quantity#158, ws_list_price#160]\n                  :  +- Join Inner, (ws_sold_date_sk#174 = d_date_sk#331)\n                  :     :- Join LeftSemi, (ws_bill_customer_sk#144 = c_customer_sk#249)\n                  :     :  :- Project [ws_bill_customer_sk#144, ws_quantity#158, ws_list_price#160, ws_sold_date_sk#174]\n                  :     :  :  +- Join LeftSemi, (ws_item_sk#143 = item_sk#7)\n                  :     :  :     :- Project [ws_item_sk#143, ws_bill_customer_sk#144, ws_quantity#158, ws_list_price#160, ws_sold_date_sk#174]\n                  :     :  :     :  +- Filter ((isnotnull(ws_bill_customer_sk#144) AND isnotnull(ws_sold_date_sk#174)) AND dynamicpruning#390 [ws_sold_date_sk#174])\n                  :     :  :     :     :  +- Project [d_date_sk#331]\n                  :     :  :     :     :     +- Filter (((isnotnull(d_year#337) AND isnotnull(d_moy#339)) AND ((d_year#337 = 1999) AND (d_moy#339 = 1))) AND isnotnull(d_date_sk#331))\n                  :     :  :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#331,d_date_id#332,d_date#333,d_month_seq#334,d_week_seq#335,d_quarter_seq#336,d_year#337,d_dow#338,d_moy#339,d_dom#340,d_qoy#341,d_fy_year#342,d_fy_quarter_seq#343,d_fy_week_seq#344,d_day_name#345,d_quarter_name#346,d_holiday#347,d_weekend#348,d_following_holiday#349,d_first_dom#350,d_last_dom#351,d_same_day_ly#352,d_same_day_lq#353,d_current_day#354,... 4 more fields] parquet\n                  :     :  :     :     +- Relation spark_catalog.tpcds_100.web_sales[ws_sold_time_sk#141,ws_ship_date_sk#142,ws_item_sk#143,ws_bill_customer_sk#144,ws_bill_cdemo_sk#145,ws_bill_hdemo_sk#146,ws_bill_addr_sk#147,ws_ship_customer_sk#148,ws_ship_cdemo_sk#149,ws_ship_hdemo_sk#150,ws_ship_addr_sk#151,ws_web_page_sk#152,ws_web_site_sk#153,ws_ship_mode_sk#154,ws_warehouse_sk#155,ws_promo_sk#156,ws_order_number#157L,ws_quantity#158,ws_wholesale_cost#159,ws_list_price#160,ws_sales_price#161,ws_ext_discount_amt#162,ws_ext_sales_price#163,ws_ext_wholesale_cost#164,... 10 more fields] parquet\n                  :     :  :     +- Project [item_sk#7]\n                  :     :  :        +- Filter (cnt#9L > 4)\n                  :     :  :           +- Aggregate [_groupingexpression#382, i_item_sk#67, d_date#41], [i_item_sk#67 AS item_sk#7, count(1) AS cnt#9L]\n                  :     :  :              +- Project [d_date#41, i_item_sk#67, substr(i_item_desc#71, 1, 30) AS _groupingexpression#382]\n                  :     :  :                 +- Join Inner, (ss_item_sk#17 = i_item_sk#67)\n                  :     :  :                    :- Project [ss_item_sk#17, d_date#41]\n                  :     :  :                    :  +- Join Inner, (ss_sold_date_sk#38 = d_date_sk#39)\n                  :     :  :                    :     :- Project [ss_item_sk#17, ss_sold_date_sk#38]\n                  :     :  :                    :     :  +- Filter ((isnotnull(ss_sold_date_sk#38) AND isnotnull(ss_item_sk#17)) AND dynamicpruning#385 [ss_sold_date_sk#38])\n                  :     :  :                    :     :     :  +- Project [d_date_sk#39, d_date#41]\n                  :     :  :                    :     :     :     +- Filter (d_year#45 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#39))\n                  :     :  :                    :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#39,d_date_id#40,d_date#41,d_month_seq#42,d_week_seq#43,d_quarter_seq#44,d_year#45,d_dow#46,d_moy#47,d_dom#48,d_qoy#49,d_fy_year#50,d_fy_quarter_seq#51,d_fy_week_seq#52,d_day_name#53,d_quarter_name#54,d_holiday#55,d_weekend#56,d_following_holiday#57,d_first_dom#58,d_last_dom#59,d_same_day_ly#60,d_same_day_lq#61,d_current_day#62,... 4 more fields] parquet\n                  :     :  :                    :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#16,ss_item_sk#17,ss_customer_sk#18,ss_cdemo_sk#19,ss_hdemo_sk#20,ss_addr_sk#21,ss_store_sk#22,ss_promo_sk#23,ss_ticket_number#24L,ss_quantity#25,ss_wholesale_cost#26,ss_list_price#27,ss_sales_price#28,ss_ext_discount_amt#29,ss_ext_sales_price#30,ss_ext_wholesale_cost#31,ss_ext_list_price#32,ss_ext_tax#33,ss_coupon_amt#34,ss_net_paid#35,ss_net_paid_inc_tax#36,ss_net_profit#37,ss_sold_date_sk#38] parquet\n                  :     :  :                    :     +- Project [d_date_sk#39, d_date#41]\n                  :     :  :                    :        +- Filter (d_year#45 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#39))\n                  :     :  :                    :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#39,d_date_id#40,d_date#41,d_month_seq#42,d_week_seq#43,d_quarter_seq#44,d_year#45,d_dow#46,d_moy#47,d_dom#48,d_qoy#49,d_fy_year#50,d_fy_quarter_seq#51,d_fy_week_seq#52,d_day_name#53,d_quarter_name#54,d_holiday#55,d_weekend#56,d_following_holiday#57,d_first_dom#58,d_last_dom#59,d_same_day_ly#60,d_same_day_lq#61,d_current_day#62,... 4 more fields] parquet\n                  :     :  :                    +- Project [i_item_sk#67, i_item_desc#71]\n                  :     :  :                       +- Filter isnotnull(i_item_sk#67)\n                  :     :  :                          +- Relation spark_catalog.tpcds_100.item[i_item_sk#67,i_item_id#68,i_rec_start_date#69,i_rec_end_date#70,i_item_desc#71,i_current_price#72,i_wholesale_cost#73,i_brand_id#74,i_brand#75,i_class_id#76,i_class#77,i_category_id#78,i_category#79,i_manufact_id#80,i_manufact#81,i_size#82,i_formulation#83,i_color#84,i_units#85,i_container#86,i_manager_id#87,i_product_name#88] parquet\n                  :     :  +- Project [c_customer_sk#249]\n                  :     :     +- Filter (isnotnull(ssales#12) AND (cast(ssales#12 as decimal(38,8)) > (0.950000 * scalar-subquery#13 [])))\n                  :     :        :  +- Aggregate [max(csales#10) AS tpcds_cmax#11]\n                  :     :        :     +- Aggregate [c_customer_sk#89], [sum((cast(ss_quantity#184 as decimal(10,0)) * ss_sales_price#187)) AS csales#10]\n                  :     :        :        +- Project [ss_quantity#184, ss_sales_price#187, c_customer_sk#89]\n                  :     :        :           +- Join Inner, (ss_customer_sk#177 = c_customer_sk#89)\n                  :     :        :              :- Project [ss_customer_sk#177, ss_quantity#184, ss_sales_price#187]\n                  :     :        :              :  +- Join Inner, (ss_sold_date_sk#197 = d_date_sk#198)\n                  :     :        :              :     :- Project [ss_customer_sk#177, ss_quantity#184, ss_sales_price#187, ss_sold_date_sk#197]\n                  :     :        :              :     :  +- Filter ((isnotnull(ss_customer_sk#177) AND isnotnull(ss_sold_date_sk#197)) AND dynamicpruning#384 [ss_sold_date_sk#197])\n                  :     :        :              :     :     :  +- Project [d_date_sk#198]\n                  :     :        :              :     :     :     +- Filter (d_year#204 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#198))\n                  :     :        :              :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#198,d_date_id#199,d_date#200,d_month_seq#201,d_week_seq#202,d_quarter_seq#203,d_year#204,d_dow#205,d_moy#206,d_dom#207,d_qoy#208,d_fy_year#209,d_fy_quarter_seq#210,d_fy_week_seq#211,d_day_name#212,d_quarter_name#213,d_holiday#214,d_weekend#215,d_following_holiday#216,d_first_dom#217,d_last_dom#218,d_same_day_ly#219,d_same_day_lq#220,d_current_day#221,... 4 more fields] parquet\n                  :     :        :              :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#175,ss_item_sk#176,ss_customer_sk#177,ss_cdemo_sk#178,ss_hdemo_sk#179,ss_addr_sk#180,ss_store_sk#181,ss_promo_sk#182,ss_ticket_number#183L,ss_quantity#184,ss_wholesale_cost#185,ss_list_price#186,ss_sales_price#187,ss_ext_discount_amt#188,ss_ext_sales_price#189,ss_ext_wholesale_cost#190,ss_ext_list_price#191,ss_ext_tax#192,ss_coupon_amt#193,ss_net_paid#194,ss_net_paid_inc_tax#195,ss_net_profit#196,ss_sold_date_sk#197] parquet\n                  :     :        :              :     +- Project [d_date_sk#198]\n                  :     :        :              :        +- Filter (d_year#204 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#198))\n                  :     :        :              :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#198,d_date_id#199,d_date#200,d_month_seq#201,d_week_seq#202,d_quarter_seq#203,d_year#204,d_dow#205,d_moy#206,d_dom#207,d_qoy#208,d_fy_year#209,d_fy_quarter_seq#210,d_fy_week_seq#211,d_day_name#212,d_quarter_name#213,d_holiday#214,d_weekend#215,d_following_holiday#216,d_first_dom#217,d_last_dom#218,d_same_day_ly#219,d_same_day_lq#220,d_current_day#221,... 4 more fields] parquet\n                  :     :        :              +- Project [c_customer_sk#89]\n                  :     :        :                 +- Filter isnotnull(c_customer_sk#89)\n                  :     :        :                    +- Relation spark_catalog.tpcds_100.customer[c_customer_sk#89,c_customer_id#90,c_current_cdemo_sk#91,c_current_hdemo_sk#92,c_current_addr_sk#93,c_first_shipto_date_sk#94,c_first_sales_date_sk#95,c_salutation#96,c_first_name#97,c_last_name#98,c_preferred_cust_flag#99,c_birth_day#100,c_birth_month#101,c_birth_year#102,c_birth_country#103,c_login#104,c_email_address#105,c_last_review_date#106] parquet\n                  :     :        +- Aggregate [c_customer_sk#249], [c_customer_sk#249, sum((cast(ss_quantity#235 as decimal(10,0)) * ss_sales_price#238)) AS ssales#12]\n                  :     :           +- Project [ss_quantity#235, ss_sales_price#238, c_customer_sk#249]\n                  :     :              +- Join Inner, (ss_customer_sk#228 = c_customer_sk#249)\n                  :     :                 :- Project [ss_customer_sk#228, ss_quantity#235, ss_sales_price#238]\n                  :     :                 :  +- Filter isnotnull(ss_customer_sk#228)\n                  :     :                 :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#226,ss_item_sk#227,ss_customer_sk#228,ss_cdemo_sk#229,ss_hdemo_sk#230,ss_addr_sk#231,ss_store_sk#232,ss_promo_sk#233,ss_ticket_number#234L,ss_quantity#235,ss_wholesale_cost#236,ss_list_price#237,ss_sales_price#238,ss_ext_discount_amt#239,ss_ext_sales_price#240,ss_ext_wholesale_cost#241,ss_ext_list_price#242,ss_ext_tax#243,ss_coupon_amt#244,ss_net_paid#245,ss_net_paid_inc_tax#246,ss_net_profit#247,ss_sold_date_sk#248] parquet\n                  :     :                 +- Project [c_customer_sk#249]\n                  :     :                    +- Filter isnotnull(c_customer_sk#249)\n                  :     :                       +- Relation spark_catalog.tpcds_100.customer[c_customer_sk#249,c_customer_id#250,c_current_cdemo_sk#251,c_current_hdemo_sk#252,c_current_addr_sk#253,c_first_shipto_date_sk#254,c_first_sales_date_sk#255,c_salutation#256,c_first_name#257,c_last_name#258,c_preferred_cust_flag#259,c_birth_day#260,c_birth_month#261,c_birth_year#262,c_birth_country#263,c_login#264,c_email_address#265,c_last_review_date#266] parquet\n                  :     +- Project [d_date_sk#331]\n                  :        +- Filter (((isnotnull(d_year#337) AND isnotnull(d_moy#339)) AND ((d_year#337 = 1999) AND (d_moy#339 = 1))) AND isnotnull(d_date_sk#331))\n                  :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#331,d_date_id#332,d_date#333,d_month_seq#334,d_week_seq#335,d_quarter_seq#336,d_year#337,d_dow#338,d_moy#339,d_dom#340,d_qoy#341,d_fy_year#342,d_fy_quarter_seq#343,d_fy_week_seq#344,d_day_name#345,d_quarter_name#346,d_holiday#347,d_weekend#348,d_following_holiday#349,d_first_dom#350,d_last_dom#351,d_same_day_ly#352,d_same_day_lq#353,d_current_day#354,... 4 more fields] parquet\n                  +- Join LeftSemi, (c_customer_sk#313 = c_customer_sk#249)\n                     :- Project [c_customer_sk#313, c_first_name#321, c_last_name#322]\n                     :  +- Filter isnotnull(c_customer_sk#313)\n                     :     +- Relation spark_catalog.tpcds_100.customer[c_customer_sk#313,c_customer_id#314,c_current_cdemo_sk#315,c_current_hdemo_sk#316,c_current_addr_sk#317,c_first_shipto_date_sk#318,c_first_sales_date_sk#319,c_salutation#320,c_first_name#321,c_last_name#322,c_preferred_cust_flag#323,c_birth_day#324,c_birth_month#325,c_birth_year#326,c_birth_country#327,c_login#328,c_email_address#329,c_last_review_date#330] parquet\n                     +- Project [c_customer_sk#249]\n                        +- Filter (isnotnull(ssales#12) AND (cast(ssales#12 as decimal(38,8)) > (0.950000 * scalar-subquery#13 [])))\n                           :  +- Aggregate [max(csales#10) AS tpcds_cmax#11]\n                           :     +- Aggregate [c_customer_sk#89], [sum((cast(ss_quantity#184 as decimal(10,0)) * ss_sales_price#187)) AS csales#10]\n                           :        +- Project [ss_quantity#184, ss_sales_price#187, c_customer_sk#89]\n                           :           +- Join Inner, (ss_customer_sk#177 = c_customer_sk#89)\n                           :              :- Project [ss_customer_sk#177, ss_quantity#184, ss_sales_price#187]\n                           :              :  +- Join Inner, (ss_sold_date_sk#197 = d_date_sk#198)\n                           :              :     :- Project [ss_customer_sk#177, ss_quantity#184, ss_sales_price#187, ss_sold_date_sk#197]\n                           :              :     :  +- Filter ((isnotnull(ss_customer_sk#177) AND isnotnull(ss_sold_date_sk#197)) AND dynamicpruning#384 [ss_sold_date_sk#197])\n                           :              :     :     :  +- Project [d_date_sk#198]\n                           :              :     :     :     +- Filter (d_year#204 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#198))\n                           :              :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#198,d_date_id#199,d_date#200,d_month_seq#201,d_week_seq#202,d_quarter_seq#203,d_year#204,d_dow#205,d_moy#206,d_dom#207,d_qoy#208,d_fy_year#209,d_fy_quarter_seq#210,d_fy_week_seq#211,d_day_name#212,d_quarter_name#213,d_holiday#214,d_weekend#215,d_following_holiday#216,d_first_dom#217,d_last_dom#218,d_same_day_ly#219,d_same_day_lq#220,d_current_day#221,... 4 more fields] parquet\n                           :              :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#175,ss_item_sk#176,ss_customer_sk#177,ss_cdemo_sk#178,ss_hdemo_sk#179,ss_addr_sk#180,ss_store_sk#181,ss_promo_sk#182,ss_ticket_number#183L,ss_quantity#184,ss_wholesale_cost#185,ss_list_price#186,ss_sales_price#187,ss_ext_discount_amt#188,ss_ext_sales_price#189,ss_ext_wholesale_cost#190,ss_ext_list_price#191,ss_ext_tax#192,ss_coupon_amt#193,ss_net_paid#194,ss_net_paid_inc_tax#195,ss_net_profit#196,ss_sold_date_sk#197] parquet\n                           :              :     +- Project [d_date_sk#198]\n                           :              :        +- Filter (d_year#204 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#198))\n                           :              :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#198,d_date_id#199,d_date#200,d_month_seq#201,d_week_seq#202,d_quarter_seq#203,d_year#204,d_dow#205,d_moy#206,d_dom#207,d_qoy#208,d_fy_year#209,d_fy_quarter_seq#210,d_fy_week_seq#211,d_day_name#212,d_quarter_name#213,d_holiday#214,d_weekend#215,d_following_holiday#216,d_first_dom#217,d_last_dom#218,d_same_day_ly#219,d_same_day_lq#220,d_current_day#221,... 4 more fields] parquet\n                           :              +- Project [c_customer_sk#89]\n                           :                 +- Filter isnotnull(c_customer_sk#89)\n                           :                    +- Relation spark_catalog.tpcds_100.customer[c_customer_sk#89,c_customer_id#90,c_current_cdemo_sk#91,c_current_hdemo_sk#92,c_current_addr_sk#93,c_first_shipto_date_sk#94,c_first_sales_date_sk#95,c_salutation#96,c_first_name#97,c_last_name#98,c_preferred_cust_flag#99,c_birth_day#100,c_birth_month#101,c_birth_year#102,c_birth_country#103,c_login#104,c_email_address#105,c_last_review_date#106] parquet\n                           +- Aggregate [c_customer_sk#249], [c_customer_sk#249, sum((cast(ss_quantity#235 as decimal(10,0)) * ss_sales_price#238)) AS ssales#12]\n                              +- Project [ss_quantity#235, ss_sales_price#238, c_customer_sk#249]\n                                 +- Join Inner, (ss_customer_sk#228 = c_customer_sk#249)\n                                    :- Project [ss_customer_sk#228, ss_quantity#235, ss_sales_price#238]\n                                    :  +- Filter isnotnull(ss_customer_sk#228)\n                                    :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#226,ss_item_sk#227,ss_customer_sk#228,ss_cdemo_sk#229,ss_hdemo_sk#230,ss_addr_sk#231,ss_store_sk#232,ss_promo_sk#233,ss_ticket_number#234L,ss_quantity#235,ss_wholesale_cost#236,ss_list_price#237,ss_sales_price#238,ss_ext_discount_amt#239,ss_ext_sales_price#240,ss_ext_wholesale_cost#241,ss_ext_list_price#242,ss_ext_tax#243,ss_coupon_amt#244,ss_net_paid#245,ss_net_paid_inc_tax#246,ss_net_profit#247,ss_sold_date_sk#248] parquet\n                                    +- Project [c_customer_sk#249]\n                                       +- Filter isnotnull(c_customer_sk#249)\n                                          +- Relation spark_catalog.tpcds_100.customer[c_customer_sk#249,c_customer_id#250,c_current_cdemo_sk#251,c_current_hdemo_sk#252,c_current_addr_sk#253,c_first_shipto_date_sk#254,c_first_sales_date_sk#255,c_salutation#256,c_first_name#257,c_last_name#258,c_preferred_cust_flag#259,c_birth_day#260,c_birth_month#261,c_birth_year#262,c_birth_country#263,c_login#264,c_email_address#265,c_last_review_date#266] parquet\n"
    },
    "IM" : {
      "inputSizeInBytes" : 306740740760,
      "inputRowCount" : 1930073095
    },
    "PD" : { },
    "Configuration" : {
      "theta_c" : [ {
        "spark.executor.memory" : "1g"
      }, {
        "spark.executor.cores" : "1"
      }, {
        "spark.executor.instances" : "16"
      }, {
        "spark.default.parallelism" : "16"
      }, {
        "spark.reducer.maxSizeInFlight" : "48m"
      }, {
        "spark.shuffle.sort.bypassMergeThreshold" : "200"
      }, {
        "spark.shuffle.compress" : "true"
      }, {
        "spark.memory.fraction" : "0.6"
      } ],
      "theta_p" : [ {
        "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
      }, {
        "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
      }, {
        "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
      }, {
        "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
      }, {
        "spark.sql.shuffle.partitions" : "200"
      }, {
        "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
      }, {
        "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
      }, {
        "spark.sql.files.maxPartitionBytes" : "128MB"
      }, {
        "spark.sql.files.openCostInBytes" : "4MB"
      } ],
      "theta_s" : [ {
        "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
      }, {
        "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
      } ]
    }
  },
  "RuntimeLQPs" : {
    "12" : {
      "LQP" : {
        "operators" : {
          "45" : {
            "sign" : -350419576,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 6601125024000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_customer_sk#481] "
          },
          "34" : {
            "sign" : 1565358831,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 39925696056,
            "rowCount" : 262669053,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(ss_customer_sk#409) AND isnotnull(ss_sold_date_sk#429)) AND dynamicpruning#610 [ss_sold_date_sk#429]) "
          },
          "67" : {
            "sign" : 388376503,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 26102424,
            "rowCount" : 204000,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_item_sk#67, i_item_desc#71], ShuffleQueryStage 15 "
          },
          "12" : {
            "sign" : -938487710,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 67361424,
            "rowCount" : 1403363,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [cs_bill_customer_sk#109, cs_item_sk#121, cs_quantity#124, cs_list_price#126, cs_sold_date_sk#140], ShuffleQueryStage 0 "
          },
          "66" : {
            "sign" : -1070534819,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 5280146112,
            "rowCount" : 220006088,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ss_item_sk#17, d_date#41], ShuffleQueryStage 30 "
          },
          "51" : {
            "sign" : 1454164637,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 32000000,
            "rowCount" : 2000000,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [c_customer_sk#481], ShuffleQueryStage 10 "
          },
          "84" : {
            "sign" : 1454165815,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 32000000,
            "rowCount" : 2000000,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [c_customer_sk#481], ShuffleQueryStage 27 "
          },
          "8" : {
            "sign" : 1441568544,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 1392136096,
            "rowCount" : 43504253,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cs_sold_date_sk#140 = d_date_sk#517) "
          },
          "73" : {
            "sign" : 457576007,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 8801500032,
            "rowCount" : 275046876,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ss_customer_sk#460, ss_quantity#467, ss_sales_price#470], ShuffleQueryStage 17 "
          },
          "78" : {
            "sign" : 290084495,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 6601125024000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_customer_sk#481] "
          },
          "19" : {
            "sign" : 1120906919,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 26102424,
            "rowCount" : 204000,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_item_sk#67, i_item_desc#71], ShuffleQueryStage 2 "
          },
          "23" : {
            "sign" : 1623804386,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 13202250048000000,
            "rowCount" : 550093752000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_quantity#467, ss_sales_price#470, c_customer_sk#481] "
          },
          "62" : {
            "sign" : 770061938,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 897624839040000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (cnt#400L > 4) "
          },
          "4" : {
            "sign" : 1365193141,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 5568544384000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [c_last_name#508, c_first_name#507], [c_last_name#508, c_first_name#507, sum((cast(cs_quantity#124 as decimal(10,0)) * cs_list_price#126)) AS sales#391] "
          },
          "77" : {
            "sign" : 1358266277,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 96527848,
            "rowCount" : 2000000,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [c_customer_sk#545, c_first_name#553, c_last_name#554], ShuffleQueryStage 23 "
          },
          "40" : {
            "sign" : -337975679,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 500000000,
            "rowCount" : 2000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: isnotnull(c_customer_sk#89) "
          },
          "15" : {
            "sign" : -500295036,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 897624839040000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [_groupingexpression#608, i_item_sk#67, d_date#41], [i_item_sk#67 AS item_sk#398, count(1) AS cnt#400L] "
          },
          "11" : {
            "sign" : 2111785784,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 44907616,
            "rowCount" : 1403363,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (cs_item_sk#121 = item_sk#398) "
          },
          "9" : {
            "sign" : -990926960,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 39294164,
            "rowCount" : 1403363,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (cs_bill_customer_sk#109 = c_customer_sk#481) "
          },
          "44" : {
            "sign" : 435063190,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 96527848,
            "rowCount" : 2000000,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [c_customer_sk#499, c_first_name#507, c_last_name#508], ShuffleQueryStage 6 "
          },
          "33" : {
            "sign" : -861776479,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 7354733484,
            "rowCount" : 262669053,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_customer_sk#409, ss_quantity#416, ss_sales_price#419, ss_sold_date_sk#429] "
          },
          "22" : {
            "sign" : 1934210699,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 15402625056000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [c_customer_sk#481], [c_customer_sk#481, sum((cast(ss_quantity#467 as decimal(10,0)) * ss_sales_price#470)) AS ssales#403] "
          },
          "56" : {
            "sign" : -2079294392,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 835624096,
            "rowCount" : 26113253,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ws_sold_date_sk#174 = d_date_sk#563) "
          },
          "55" : {
            "sign" : 2065671769,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 626718072,
            "rowCount" : 26113253,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_bill_customer_sk#144, ws_quantity#158, ws_list_price#160] "
          },
          "26" : {
            "sign" : 739645252,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 32000000,
            "rowCount" : 2000000,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [c_customer_sk#481], ShuffleQueryStage 4 "
          },
          "50" : {
            "sign" : -1093617969,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 8801500032,
            "rowCount" : 275046876,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ss_customer_sk#460, ss_quantity#467, ss_sales_price#470], ShuffleQueryStage 8 "
          },
          "37" : {
            "sign" : 2051540096,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 355962,
            "rowCount" : 1447,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (d_year#436 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#430)) "
          },
          "68" : {
            "sign" : 998370159,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 6601125024000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_customer_sk#481] "
          },
          "61" : {
            "sign" : 2022277624,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 538574903424000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [item_sk#398] "
          },
          "13" : {
            "sign" : 1981268591,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 538574903424000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [item_sk#398] "
          },
          "46" : {
            "sign" : 789941336,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 15402625056000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(ssales#403) AND (cast(ssales#403 as decimal(38,8)) > (0.950000 * scalar-subquery#404 []))) "
          },
          "24" : {
            "sign" : 1908847787,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 15402625056000000,
            "rowCount" : 550093752000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_customer_sk#460 = c_customer_sk#481) "
          },
          "83" : {
            "sign" : 457576906,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 8801500032,
            "rowCount" : 275046876,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ss_customer_sk#460, ss_quantity#467, ss_sales_price#470], ShuffleQueryStage 25 "
          },
          "35" : {
            "sign" : -977156952,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#407, ss_item_sk#408, ss_customer_sk#409, ss_cdemo_sk#410, ss_hdemo_sk#411, ss_addr_sk#412, ss_store_sk#413, ss_promo_sk#414, ss_ticket_number#415L, ss_quantity#416, ss_wholesale_cost#417, ss_list_price#418, ss_sales_price#419, ss_ext_discount_amt#420, ss_ext_sales_price#421, ss_ext_wholesale_cost#422, ss_ext_list_price#423, ss_ext_tax#424, ss_coupon_amt#425, ss_net_paid#426, ss_net_paid_inc_tax#427, ss_net_profit#428, ss_sold_date_sk#429], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "16" : {
            "sign" : -2009662925,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 1615724710272000,
            "rowCount" : 44881241952000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date#41, i_item_sk#67, substr(i_item_desc#71, 1, 30) AS _groupingexpression#608] "
          },
          "79" : {
            "sign" : -639744623,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 15402625056000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(ssales#403) AND (cast(ssales#403 as decimal(38,8)) > (0.950000 * scalar-subquery#404 []))) "
          },
          "5" : {
            "sign" : -1523964623,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 5220510360000000,
            "rowCount" : 87008506000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_quantity#124, cs_list_price#126, c_first_name#507, c_last_name#508] "
          },
          "72" : {
            "sign" : 914322748,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 15402625056000000,
            "rowCount" : 550093752000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_customer_sk#460 = c_customer_sk#481) "
          },
          "10" : {
            "sign" : -1537602824,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 39294164,
            "rowCount" : 1403363,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_bill_customer_sk#109, cs_quantity#124, cs_list_price#126, cs_sold_date_sk#140] "
          },
          "59" : {
            "sign" : 910944340,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 26955616,
            "rowCount" : 842363,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (ws_item_sk#143 = item_sk#398) "
          },
          "48" : {
            "sign" : 47435418,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 13202250048000000,
            "rowCount" : 550093752000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_quantity#467, ss_sales_price#470, c_customer_sk#481] "
          },
          "21" : {
            "sign" : -1901984732,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 15402625056000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(ssales#403) AND (cast(ssales#403 as decimal(38,8)) > (0.950000 * scalar-subquery#404 []))) "
          },
          "76" : {
            "sign" : 1645687881,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 104000000,
            "rowCount" : 2000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (c_customer_sk#545 = c_customer_sk#481) "
          },
          "54" : {
            "sign" : 2038011901,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 3551402408000000,
            "rowCount" : 52226506000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ws_bill_customer_sk#144 = c_customer_sk#545) "
          },
          "43" : {
            "sign" : -528156139,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 104000000,
            "rowCount" : 2000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (c_customer_sk#499 = c_customer_sk#481) "
          },
          "65" : {
            "sign" : -1904280941,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 1795249678080000,
            "rowCount" : 44881241952000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_item_sk#17 = i_item_sk#67) "
          },
          "71" : {
            "sign" : 82168585,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 13202250048000000,
            "rowCount" : 550093752000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_quantity#467, ss_sales_price#470, c_customer_sk#481] "
          },
          "57" : {
            "sign" : -433298353,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 23586164,
            "rowCount" : 842363,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (ws_bill_customer_sk#144 = c_customer_sk#481) "
          },
          "32" : {
            "sign" : 305748262,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 8497298720,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#429 = d_date_sk#430) "
          },
          "80" : {
            "sign" : 2102197308,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 15402625056000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [c_customer_sk#481], [c_customer_sk#481, sum((cast(ss_quantity#467 as decimal(10,0)) * ss_sales_price#470)) AS ssales#403] "
          },
          "82" : {
            "sign" : -1025989668,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 15402625056000000,
            "rowCount" : 550093752000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_customer_sk#460 = c_customer_sk#481) "
          },
          "49" : {
            "sign" : -1437901541,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 15402625056000000,
            "rowCount" : 550093752000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_customer_sk#460 = c_customer_sk#481) "
          },
          "6" : {
            "sign" : 1133093440,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 5916578408000000,
            "rowCount" : 87008506000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cs_bill_customer_sk#109 = c_customer_sk#499) "
          },
          "36" : {
            "sign" : 1217444409,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 17364,
            "rowCount" : 1447,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#430] "
          },
          "1" : {
            "sign" : -1256479583,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
            "sizeInBytes" : 8911040768000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) LocalLimit Arguments: 100 "
          },
          "39" : {
            "sign" : 1085635783,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 24000000,
            "rowCount" : 2000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_customer_sk#89] "
          },
          "17" : {
            "sign" : 566394868,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 1795249678080000,
            "rowCount" : 44881241952000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_item_sk#17 = i_item_sk#67) "
          },
          "25" : {
            "sign" : -1093618124,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 8801500032,
            "rowCount" : 275046876,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ss_customer_sk#460, ss_quantity#467, ss_sales_price#470], ShuffleQueryStage 3 "
          },
          "60" : {
            "sign" : 1832837103,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 40433424,
            "rowCount" : 842363,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ws_item_sk#143, ws_bill_customer_sk#144, ws_quantity#158, ws_list_price#160, ws_sold_date_sk#174], ShuffleQueryStage 11 "
          },
          "14" : {
            "sign" : 1045330691,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 897624839040000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (cnt#400L > 4) "
          },
          "47" : {
            "sign" : 431587195,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 15402625056000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [c_customer_sk#481], [c_customer_sk#481, sum((cast(ss_quantity#467 as decimal(10,0)) * ss_sales_price#470)) AS ssales#403] "
          },
          "31" : {
            "sign" : 1802383537,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 6372974040,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_customer_sk#409, ss_quantity#416, ss_sales_price#419] "
          },
          "69" : {
            "sign" : -1882899317,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 15402625056000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(ssales#403) AND (cast(ssales#403 as decimal(38,8)) > (0.950000 * scalar-subquery#404 []))) "
          },
          "58" : {
            "sign" : -1718060309,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 23586164,
            "rowCount" : 842363,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_bill_customer_sk#144, ws_quantity#158, ws_list_price#160, ws_sold_date_sk#174] "
          },
          "64" : {
            "sign" : 1825233538,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 1615724710272000,
            "rowCount" : 44881241952000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date#41, i_item_sk#67, substr(i_item_desc#71, 1, 30) AS _groupingexpression#608] "
          },
          "53" : {
            "sign" : 1873577481,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 3133590360000000,
            "rowCount" : 52226506000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_quantity#158, ws_list_price#160, c_first_name#553, c_last_name#554] "
          },
          "42" : {
            "sign" : 1758754844,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1048824,
            "rowCount" : 31,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#517], BroadcastQueryStage 5 "
          },
          "75" : {
            "sign" : -2138347845,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1048824,
            "rowCount" : 31,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#563], BroadcastQueryStage 21 "
          },
          "0" : {
            "sign" : -616519630,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
            "sizeInBytes" : 6400,
            "rowCount" : 100,
            "isRuntime" : false,
            "predicate" : " (unknown) GlobalLimit Arguments: 100 "
          },
          "20" : {
            "sign" : 2123397918,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 6601125024000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_customer_sk#481] "
          },
          "27" : {
            "sign" : -582481967,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 24,
            "rowCount" : 1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [max(csales#401) AS tpcds_cmax#402] "
          },
          "70" : {
            "sign" : -1381279908,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 15402625056000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [c_customer_sk#481], [c_customer_sk#481, sum((cast(ss_quantity#467 as decimal(10,0)) * ss_sales_price#470)) AS ssales#403] "
          },
          "2" : {
            "sign" : -1336807780,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 8911040768000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [c_last_name#508 ASC NULLS FIRST, c_first_name#507 ASC NULLS FIRST, sales#391 ASC NULLS FIRST], true "
          },
          "38" : {
            "sign" : -358797686,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#430, d_date_id#431, d_date#432, d_month_seq#433, d_week_seq#434, d_quarter_seq#435, d_year#436, d_dow#437, d_moy#438, d_dom#439, d_qoy#440, d_fy_year#441, d_fy_quarter_seq#442, d_fy_week_seq#443, d_day_name#444, d_quarter_name#445, d_holiday#446, d_weekend#447, d_following_holiday#448, d_first_dom#449, d_last_dom#450, d_same_day_ly#451, d_same_day_lq#452, d_current_day#453, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "81" : {
            "sign" : -2121928113,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 13202250048000000,
            "rowCount" : 550093752000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_quantity#467, ss_sales_price#470, c_customer_sk#481] "
          },
          "18" : {
            "sign" : -1070535532,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 5280146112,
            "rowCount" : 220006088,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ss_item_sk#17, d_date#41], ShuffleQueryStage 28 "
          },
          "30" : {
            "sign" : -949612920,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 7701230628,
            "rowCount" : 275043951,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_customer_sk#409 = c_customer_sk#89) "
          },
          "7" : {
            "sign" : -758780695,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 1044102072,
            "rowCount" : 43504253,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_bill_customer_sk#109, cs_quantity#124, cs_list_price#126] "
          },
          "29" : {
            "sign" : -1338930356,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 6601054824,
            "rowCount" : 275043951,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_quantity#416, ss_sales_price#419, c_customer_sk#89] "
          },
          "41" : {
            "sign" : -576393737,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 500000000,
            "rowCount" : 2000000,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [c_customer_sk#89, c_customer_id#90, c_current_cdemo_sk#91, c_current_hdemo_sk#92, c_current_addr_sk#93, c_first_shipto_date_sk#94, c_first_sales_date_sk#95, c_salutation#96, c_first_name#97, c_last_name#98, c_preferred_cust_flag#99, c_birth_day#100, c_birth_month#101, c_birth_year#102, c_birth_country#103, c_login#104, c_email_address#105, c_last_review_date#106], `spark_catalog`.`tpcds_100`.`customer`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "63" : {
            "sign" : 1782114115,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 897624839040000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [_groupingexpression#608, i_item_sk#67, d_date#41], [i_item_sk#67 AS item_sk#398, count(1) AS cnt#400L] "
          },
          "3" : {
            "sign" : 225600940,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Union",
            "sizeInBytes" : 8911040768000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Union Arguments: false, false "
          },
          "74" : {
            "sign" : 1454164916,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 32000000,
            "rowCount" : 2000000,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [c_customer_sk#481], ShuffleQueryStage 19 "
          },
          "52" : {
            "sign" : 1307009313,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 3342496384000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [c_last_name#554, c_first_name#553], [c_last_name#554, c_first_name#553, sum((cast(ws_quantity#158 as decimal(10,0)) * ws_list_price#160)) AS sales#394] "
          },
          "28" : {
            "sign" : -660295919,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 47624376,
            "rowCount" : 1984349,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [c_customer_sk#89], [sum((cast(ss_quantity#416 as decimal(10,0)) * ss_sales_price#419)) AS csales#401] "
          }
        },
        "links" : [ {
          "fromId" : 12,
          "fromName" : "LogicalQueryStage",
          "toId" : 11,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 18,
          "fromName" : "LogicalQueryStage",
          "toId" : 17,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 19,
          "fromName" : "LogicalQueryStage",
          "toId" : 17,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 17,
          "fromName" : "Join",
          "toId" : 16,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 16,
          "fromName" : "Project",
          "toId" : 15,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 15,
          "fromName" : "Aggregate",
          "toId" : 14,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 14,
          "fromName" : "Filter",
          "toId" : 13,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 13,
          "fromName" : "Project",
          "toId" : 11,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "Join",
          "toId" : 10,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "Project",
          "toId" : 9,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 25,
          "fromName" : "LogicalQueryStage",
          "toId" : 24,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 26,
          "fromName" : "LogicalQueryStage",
          "toId" : 24,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 24,
          "fromName" : "Join",
          "toId" : 23,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 23,
          "fromName" : "Project",
          "toId" : 22,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 22,
          "fromName" : "Aggregate",
          "toId" : 21,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 35,
          "fromName" : "LogicalRelation",
          "toId" : 34,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 38,
          "fromName" : "LogicalRelation",
          "toId" : 37,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 37,
          "fromName" : "Filter",
          "toId" : 36,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 36,
          "fromName" : "Project",
          "toId" : 34,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 34,
          "fromName" : "Filter",
          "toId" : 33,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 33,
          "fromName" : "Project",
          "toId" : 32,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 36,
          "fromName" : "Project",
          "toId" : 32,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 32,
          "fromName" : "Join",
          "toId" : 31,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 31,
          "fromName" : "Project",
          "toId" : 30,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 41,
          "fromName" : "LogicalRelation",
          "toId" : 40,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 40,
          "fromName" : "Filter",
          "toId" : 39,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 39,
          "fromName" : "Project",
          "toId" : 30,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 30,
          "fromName" : "Join",
          "toId" : 29,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 29,
          "fromName" : "Project",
          "toId" : 28,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 28,
          "fromName" : "Aggregate",
          "toId" : 27,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 27,
          "fromName" : "Aggregate",
          "toId" : 21,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 21,
          "fromName" : "Filter",
          "toId" : 20,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 20,
          "fromName" : "Project",
          "toId" : 9,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "Join",
          "toId" : 8,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 42,
          "fromName" : "LogicalQueryStage",
          "toId" : 8,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "Join",
          "toId" : 7,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Project",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 44,
          "fromName" : "LogicalQueryStage",
          "toId" : 43,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 50,
          "fromName" : "LogicalQueryStage",
          "toId" : 49,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 51,
          "fromName" : "LogicalQueryStage",
          "toId" : 49,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 49,
          "fromName" : "Join",
          "toId" : 48,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 48,
          "fromName" : "Project",
          "toId" : 47,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 47,
          "fromName" : "Aggregate",
          "toId" : 46,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 27,
          "fromName" : "Aggregate",
          "toId" : 46,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 46,
          "fromName" : "Filter",
          "toId" : 45,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 45,
          "fromName" : "Project",
          "toId" : 43,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 43,
          "fromName" : "Join",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Join",
          "toId" : 5,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Project",
          "toId" : 4,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Aggregate",
          "toId" : 3,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 60,
          "fromName" : "LogicalQueryStage",
          "toId" : 59,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 66,
          "fromName" : "LogicalQueryStage",
          "toId" : 65,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 67,
          "fromName" : "LogicalQueryStage",
          "toId" : 65,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 65,
          "fromName" : "Join",
          "toId" : 64,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 64,
          "fromName" : "Project",
          "toId" : 63,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 63,
          "fromName" : "Aggregate",
          "toId" : 62,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 62,
          "fromName" : "Filter",
          "toId" : 61,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 61,
          "fromName" : "Project",
          "toId" : 59,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 59,
          "fromName" : "Join",
          "toId" : 58,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 58,
          "fromName" : "Project",
          "toId" : 57,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 73,
          "fromName" : "LogicalQueryStage",
          "toId" : 72,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 74,
          "fromName" : "LogicalQueryStage",
          "toId" : 72,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 72,
          "fromName" : "Join",
          "toId" : 71,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 71,
          "fromName" : "Project",
          "toId" : 70,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 70,
          "fromName" : "Aggregate",
          "toId" : 69,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 27,
          "fromName" : "Aggregate",
          "toId" : 69,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 69,
          "fromName" : "Filter",
          "toId" : 68,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 68,
          "fromName" : "Project",
          "toId" : 57,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 57,
          "fromName" : "Join",
          "toId" : 56,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 75,
          "fromName" : "LogicalQueryStage",
          "toId" : 56,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 56,
          "fromName" : "Join",
          "toId" : 55,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 55,
          "fromName" : "Project",
          "toId" : 54,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 77,
          "fromName" : "LogicalQueryStage",
          "toId" : 76,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 83,
          "fromName" : "LogicalQueryStage",
          "toId" : 82,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 84,
          "fromName" : "LogicalQueryStage",
          "toId" : 82,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 82,
          "fromName" : "Join",
          "toId" : 81,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 81,
          "fromName" : "Project",
          "toId" : 80,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 80,
          "fromName" : "Aggregate",
          "toId" : 79,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 27,
          "fromName" : "Aggregate",
          "toId" : 79,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 79,
          "fromName" : "Filter",
          "toId" : 78,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 78,
          "fromName" : "Project",
          "toId" : 76,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 76,
          "fromName" : "Join",
          "toId" : 54,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 54,
          "fromName" : "Join",
          "toId" : 53,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 53,
          "fromName" : "Project",
          "toId" : 52,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 52,
          "fromName" : "Aggregate",
          "toId" : 3,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Union",
          "toId" : 2,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "LocalLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "LocalLimit",
          "toId" : 0,
          "toName" : "GlobalLimit",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [c_last_name#508 ASC NULLS FIRST, c_first_name#507 ASC NULLS FIRST, sales#391 ASC NULLS FIRST], true\n      +- Union false, false\n         :- Aggregate [c_last_name#508, c_first_name#507], [c_last_name#508, c_first_name#507, sum((cast(cs_quantity#124 as decimal(10,0)) * cs_list_price#126)) AS sales#391]\n         :  +- Project [cs_quantity#124, cs_list_price#126, c_first_name#507, c_last_name#508]\n         :     +- Join Inner, (cs_bill_customer_sk#109 = c_customer_sk#499)\n         :        :- Project [cs_bill_customer_sk#109, cs_quantity#124, cs_list_price#126]\n         :        :  +- Join Inner, (cs_sold_date_sk#140 = d_date_sk#517)\n         :        :     :- Join LeftSemi, (cs_bill_customer_sk#109 = c_customer_sk#481)\n         :        :     :  :- Project [cs_bill_customer_sk#109, cs_quantity#124, cs_list_price#126, cs_sold_date_sk#140]\n         :        :     :  :  +- Join LeftSemi, (cs_item_sk#121 = item_sk#398)\n         :        :     :  :     :- LogicalQueryStage Project [cs_bill_customer_sk#109, cs_item_sk#121, cs_quantity#124, cs_list_price#126, cs_sold_date_sk#140], ShuffleQueryStage 0\n         :        :     :  :     +- Project [item_sk#398]\n         :        :     :  :        +- Filter (cnt#400L > 4)\n         :        :     :  :           +- Aggregate [_groupingexpression#608, i_item_sk#67, d_date#41], [i_item_sk#67 AS item_sk#398, count(1) AS cnt#400L]\n         :        :     :  :              +- Project [d_date#41, i_item_sk#67, substr(i_item_desc#71, 1, 30) AS _groupingexpression#608]\n         :        :     :  :                 +- Join Inner, (ss_item_sk#17 = i_item_sk#67)\n         :        :     :  :                    :- LogicalQueryStage Project [ss_item_sk#17, d_date#41], ShuffleQueryStage 28\n         :        :     :  :                    +- LogicalQueryStage Project [i_item_sk#67, i_item_desc#71], ShuffleQueryStage 2\n         :        :     :  +- Project [c_customer_sk#481]\n         :        :     :     +- Filter (isnotnull(ssales#403) AND (cast(ssales#403 as decimal(38,8)) > (0.950000 * scalar-subquery#404 [])))\n         :        :     :        :  +- Aggregate [max(csales#401) AS tpcds_cmax#402]\n         :        :     :        :     +- Aggregate [c_customer_sk#89], [sum((cast(ss_quantity#416 as decimal(10,0)) * ss_sales_price#419)) AS csales#401]\n         :        :     :        :        +- Project [ss_quantity#416, ss_sales_price#419, c_customer_sk#89]\n         :        :     :        :           +- Join Inner, (ss_customer_sk#409 = c_customer_sk#89)\n         :        :     :        :              :- Project [ss_customer_sk#409, ss_quantity#416, ss_sales_price#419]\n         :        :     :        :              :  +- Join Inner, (ss_sold_date_sk#429 = d_date_sk#430)\n         :        :     :        :              :     :- Project [ss_customer_sk#409, ss_quantity#416, ss_sales_price#419, ss_sold_date_sk#429]\n         :        :     :        :              :     :  +- Filter ((isnotnull(ss_customer_sk#409) AND isnotnull(ss_sold_date_sk#429)) AND dynamicpruning#610 [ss_sold_date_sk#429])\n         :        :     :        :              :     :     :  +- Project [d_date_sk#430]\n         :        :     :        :              :     :     :     +- Filter (d_year#436 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#430))\n         :        :     :        :              :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#430,d_date_id#431,d_date#432,d_month_seq#433,d_week_seq#434,d_quarter_seq#435,d_year#436,d_dow#437,d_moy#438,d_dom#439,d_qoy#440,d_fy_year#441,d_fy_quarter_seq#442,d_fy_week_seq#443,d_day_name#444,d_quarter_name#445,d_holiday#446,d_weekend#447,d_following_holiday#448,d_first_dom#449,d_last_dom#450,d_same_day_ly#451,d_same_day_lq#452,d_current_day#453,... 4 more fields] parquet\n         :        :     :        :              :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#407,ss_item_sk#408,ss_customer_sk#409,ss_cdemo_sk#410,ss_hdemo_sk#411,ss_addr_sk#412,ss_store_sk#413,ss_promo_sk#414,ss_ticket_number#415L,ss_quantity#416,ss_wholesale_cost#417,ss_list_price#418,ss_sales_price#419,ss_ext_discount_amt#420,ss_ext_sales_price#421,ss_ext_wholesale_cost#422,ss_ext_list_price#423,ss_ext_tax#424,ss_coupon_amt#425,ss_net_paid#426,ss_net_paid_inc_tax#427,ss_net_profit#428,ss_sold_date_sk#429] parquet\n         :        :     :        :              :     +- Project [d_date_sk#430]\n         :        :     :        :              :        +- Filter (d_year#436 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#430))\n         :        :     :        :              :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#430,d_date_id#431,d_date#432,d_month_seq#433,d_week_seq#434,d_quarter_seq#435,d_year#436,d_dow#437,d_moy#438,d_dom#439,d_qoy#440,d_fy_year#441,d_fy_quarter_seq#442,d_fy_week_seq#443,d_day_name#444,d_quarter_name#445,d_holiday#446,d_weekend#447,d_following_holiday#448,d_first_dom#449,d_last_dom#450,d_same_day_ly#451,d_same_day_lq#452,d_current_day#453,... 4 more fields] parquet\n         :        :     :        :              +- Project [c_customer_sk#89]\n         :        :     :        :                 +- Filter isnotnull(c_customer_sk#89)\n         :        :     :        :                    +- Relation spark_catalog.tpcds_100.customer[c_customer_sk#89,c_customer_id#90,c_current_cdemo_sk#91,c_current_hdemo_sk#92,c_current_addr_sk#93,c_first_shipto_date_sk#94,c_first_sales_date_sk#95,c_salutation#96,c_first_name#97,c_last_name#98,c_preferred_cust_flag#99,c_birth_day#100,c_birth_month#101,c_birth_year#102,c_birth_country#103,c_login#104,c_email_address#105,c_last_review_date#106] parquet\n         :        :     :        +- Aggregate [c_customer_sk#481], [c_customer_sk#481, sum((cast(ss_quantity#467 as decimal(10,0)) * ss_sales_price#470)) AS ssales#403]\n         :        :     :           +- Project [ss_quantity#467, ss_sales_price#470, c_customer_sk#481]\n         :        :     :              +- Join Inner, (ss_customer_sk#460 = c_customer_sk#481)\n         :        :     :                 :- LogicalQueryStage Project [ss_customer_sk#460, ss_quantity#467, ss_sales_price#470], ShuffleQueryStage 3\n         :        :     :                 +- LogicalQueryStage Project [c_customer_sk#481], ShuffleQueryStage 4\n         :        :     +- LogicalQueryStage Project [d_date_sk#517], BroadcastQueryStage 5\n         :        +- Join LeftSemi, (c_customer_sk#499 = c_customer_sk#481)\n         :           :- LogicalQueryStage Project [c_customer_sk#499, c_first_name#507, c_last_name#508], ShuffleQueryStage 6\n         :           +- Project [c_customer_sk#481]\n         :              +- Filter (isnotnull(ssales#403) AND (cast(ssales#403 as decimal(38,8)) > (0.950000 * scalar-subquery#404 [])))\n         :                 :  +- Aggregate [max(csales#401) AS tpcds_cmax#402]\n         :                 :     +- Aggregate [c_customer_sk#89], [sum((cast(ss_quantity#416 as decimal(10,0)) * ss_sales_price#419)) AS csales#401]\n         :                 :        +- Project [ss_quantity#416, ss_sales_price#419, c_customer_sk#89]\n         :                 :           +- Join Inner, (ss_customer_sk#409 = c_customer_sk#89)\n         :                 :              :- Project [ss_customer_sk#409, ss_quantity#416, ss_sales_price#419]\n         :                 :              :  +- Join Inner, (ss_sold_date_sk#429 = d_date_sk#430)\n         :                 :              :     :- Project [ss_customer_sk#409, ss_quantity#416, ss_sales_price#419, ss_sold_date_sk#429]\n         :                 :              :     :  +- Filter ((isnotnull(ss_customer_sk#409) AND isnotnull(ss_sold_date_sk#429)) AND dynamicpruning#610 [ss_sold_date_sk#429])\n         :                 :              :     :     :  +- Project [d_date_sk#430]\n         :                 :              :     :     :     +- Filter (d_year#436 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#430))\n         :                 :              :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#430,d_date_id#431,d_date#432,d_month_seq#433,d_week_seq#434,d_quarter_seq#435,d_year#436,d_dow#437,d_moy#438,d_dom#439,d_qoy#440,d_fy_year#441,d_fy_quarter_seq#442,d_fy_week_seq#443,d_day_name#444,d_quarter_name#445,d_holiday#446,d_weekend#447,d_following_holiday#448,d_first_dom#449,d_last_dom#450,d_same_day_ly#451,d_same_day_lq#452,d_current_day#453,... 4 more fields] parquet\n         :                 :              :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#407,ss_item_sk#408,ss_customer_sk#409,ss_cdemo_sk#410,ss_hdemo_sk#411,ss_addr_sk#412,ss_store_sk#413,ss_promo_sk#414,ss_ticket_number#415L,ss_quantity#416,ss_wholesale_cost#417,ss_list_price#418,ss_sales_price#419,ss_ext_discount_amt#420,ss_ext_sales_price#421,ss_ext_wholesale_cost#422,ss_ext_list_price#423,ss_ext_tax#424,ss_coupon_amt#425,ss_net_paid#426,ss_net_paid_inc_tax#427,ss_net_profit#428,ss_sold_date_sk#429] parquet\n         :                 :              :     +- Project [d_date_sk#430]\n         :                 :              :        +- Filter (d_year#436 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#430))\n         :                 :              :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#430,d_date_id#431,d_date#432,d_month_seq#433,d_week_seq#434,d_quarter_seq#435,d_year#436,d_dow#437,d_moy#438,d_dom#439,d_qoy#440,d_fy_year#441,d_fy_quarter_seq#442,d_fy_week_seq#443,d_day_name#444,d_quarter_name#445,d_holiday#446,d_weekend#447,d_following_holiday#448,d_first_dom#449,d_last_dom#450,d_same_day_ly#451,d_same_day_lq#452,d_current_day#453,... 4 more fields] parquet\n         :                 :              +- Project [c_customer_sk#89]\n         :                 :                 +- Filter isnotnull(c_customer_sk#89)\n         :                 :                    +- Relation spark_catalog.tpcds_100.customer[c_customer_sk#89,c_customer_id#90,c_current_cdemo_sk#91,c_current_hdemo_sk#92,c_current_addr_sk#93,c_first_shipto_date_sk#94,c_first_sales_date_sk#95,c_salutation#96,c_first_name#97,c_last_name#98,c_preferred_cust_flag#99,c_birth_day#100,c_birth_month#101,c_birth_year#102,c_birth_country#103,c_login#104,c_email_address#105,c_last_review_date#106] parquet\n         :                 +- Aggregate [c_customer_sk#481], [c_customer_sk#481, sum((cast(ss_quantity#467 as decimal(10,0)) * ss_sales_price#470)) AS ssales#403]\n         :                    +- Project [ss_quantity#467, ss_sales_price#470, c_customer_sk#481]\n         :                       +- Join Inner, (ss_customer_sk#460 = c_customer_sk#481)\n         :                          :- LogicalQueryStage Project [ss_customer_sk#460, ss_quantity#467, ss_sales_price#470], ShuffleQueryStage 8\n         :                          +- LogicalQueryStage Project [c_customer_sk#481], ShuffleQueryStage 10\n         +- Aggregate [c_last_name#554, c_first_name#553], [c_last_name#554, c_first_name#553, sum((cast(ws_quantity#158 as decimal(10,0)) * ws_list_price#160)) AS sales#394]\n            +- Project [ws_quantity#158, ws_list_price#160, c_first_name#553, c_last_name#554]\n               +- Join Inner, (ws_bill_customer_sk#144 = c_customer_sk#545)\n                  :- Project [ws_bill_customer_sk#144, ws_quantity#158, ws_list_price#160]\n                  :  +- Join Inner, (ws_sold_date_sk#174 = d_date_sk#563)\n                  :     :- Join LeftSemi, (ws_bill_customer_sk#144 = c_customer_sk#481)\n                  :     :  :- Project [ws_bill_customer_sk#144, ws_quantity#158, ws_list_price#160, ws_sold_date_sk#174]\n                  :     :  :  +- Join LeftSemi, (ws_item_sk#143 = item_sk#398)\n                  :     :  :     :- LogicalQueryStage Project [ws_item_sk#143, ws_bill_customer_sk#144, ws_quantity#158, ws_list_price#160, ws_sold_date_sk#174], ShuffleQueryStage 11\n                  :     :  :     +- Project [item_sk#398]\n                  :     :  :        +- Filter (cnt#400L > 4)\n                  :     :  :           +- Aggregate [_groupingexpression#608, i_item_sk#67, d_date#41], [i_item_sk#67 AS item_sk#398, count(1) AS cnt#400L]\n                  :     :  :              +- Project [d_date#41, i_item_sk#67, substr(i_item_desc#71, 1, 30) AS _groupingexpression#608]\n                  :     :  :                 +- Join Inner, (ss_item_sk#17 = i_item_sk#67)\n                  :     :  :                    :- LogicalQueryStage Project [ss_item_sk#17, d_date#41], ShuffleQueryStage 30\n                  :     :  :                    +- LogicalQueryStage Project [i_item_sk#67, i_item_desc#71], ShuffleQueryStage 15\n                  :     :  +- Project [c_customer_sk#481]\n                  :     :     +- Filter (isnotnull(ssales#403) AND (cast(ssales#403 as decimal(38,8)) > (0.950000 * scalar-subquery#404 [])))\n                  :     :        :  +- Aggregate [max(csales#401) AS tpcds_cmax#402]\n                  :     :        :     +- Aggregate [c_customer_sk#89], [sum((cast(ss_quantity#416 as decimal(10,0)) * ss_sales_price#419)) AS csales#401]\n                  :     :        :        +- Project [ss_quantity#416, ss_sales_price#419, c_customer_sk#89]\n                  :     :        :           +- Join Inner, (ss_customer_sk#409 = c_customer_sk#89)\n                  :     :        :              :- Project [ss_customer_sk#409, ss_quantity#416, ss_sales_price#419]\n                  :     :        :              :  +- Join Inner, (ss_sold_date_sk#429 = d_date_sk#430)\n                  :     :        :              :     :- Project [ss_customer_sk#409, ss_quantity#416, ss_sales_price#419, ss_sold_date_sk#429]\n                  :     :        :              :     :  +- Filter ((isnotnull(ss_customer_sk#409) AND isnotnull(ss_sold_date_sk#429)) AND dynamicpruning#610 [ss_sold_date_sk#429])\n                  :     :        :              :     :     :  +- Project [d_date_sk#430]\n                  :     :        :              :     :     :     +- Filter (d_year#436 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#430))\n                  :     :        :              :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#430,d_date_id#431,d_date#432,d_month_seq#433,d_week_seq#434,d_quarter_seq#435,d_year#436,d_dow#437,d_moy#438,d_dom#439,d_qoy#440,d_fy_year#441,d_fy_quarter_seq#442,d_fy_week_seq#443,d_day_name#444,d_quarter_name#445,d_holiday#446,d_weekend#447,d_following_holiday#448,d_first_dom#449,d_last_dom#450,d_same_day_ly#451,d_same_day_lq#452,d_current_day#453,... 4 more fields] parquet\n                  :     :        :              :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#407,ss_item_sk#408,ss_customer_sk#409,ss_cdemo_sk#410,ss_hdemo_sk#411,ss_addr_sk#412,ss_store_sk#413,ss_promo_sk#414,ss_ticket_number#415L,ss_quantity#416,ss_wholesale_cost#417,ss_list_price#418,ss_sales_price#419,ss_ext_discount_amt#420,ss_ext_sales_price#421,ss_ext_wholesale_cost#422,ss_ext_list_price#423,ss_ext_tax#424,ss_coupon_amt#425,ss_net_paid#426,ss_net_paid_inc_tax#427,ss_net_profit#428,ss_sold_date_sk#429] parquet\n                  :     :        :              :     +- Project [d_date_sk#430]\n                  :     :        :              :        +- Filter (d_year#436 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#430))\n                  :     :        :              :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#430,d_date_id#431,d_date#432,d_month_seq#433,d_week_seq#434,d_quarter_seq#435,d_year#436,d_dow#437,d_moy#438,d_dom#439,d_qoy#440,d_fy_year#441,d_fy_quarter_seq#442,d_fy_week_seq#443,d_day_name#444,d_quarter_name#445,d_holiday#446,d_weekend#447,d_following_holiday#448,d_first_dom#449,d_last_dom#450,d_same_day_ly#451,d_same_day_lq#452,d_current_day#453,... 4 more fields] parquet\n                  :     :        :              +- Project [c_customer_sk#89]\n                  :     :        :                 +- Filter isnotnull(c_customer_sk#89)\n                  :     :        :                    +- Relation spark_catalog.tpcds_100.customer[c_customer_sk#89,c_customer_id#90,c_current_cdemo_sk#91,c_current_hdemo_sk#92,c_current_addr_sk#93,c_first_shipto_date_sk#94,c_first_sales_date_sk#95,c_salutation#96,c_first_name#97,c_last_name#98,c_preferred_cust_flag#99,c_birth_day#100,c_birth_month#101,c_birth_year#102,c_birth_country#103,c_login#104,c_email_address#105,c_last_review_date#106] parquet\n                  :     :        +- Aggregate [c_customer_sk#481], [c_customer_sk#481, sum((cast(ss_quantity#467 as decimal(10,0)) * ss_sales_price#470)) AS ssales#403]\n                  :     :           +- Project [ss_quantity#467, ss_sales_price#470, c_customer_sk#481]\n                  :     :              +- Join Inner, (ss_customer_sk#460 = c_customer_sk#481)\n                  :     :                 :- LogicalQueryStage Project [ss_customer_sk#460, ss_quantity#467, ss_sales_price#470], ShuffleQueryStage 17\n                  :     :                 +- LogicalQueryStage Project [c_customer_sk#481], ShuffleQueryStage 19\n                  :     +- LogicalQueryStage Project [d_date_sk#563], BroadcastQueryStage 21\n                  +- Join LeftSemi, (c_customer_sk#545 = c_customer_sk#481)\n                     :- LogicalQueryStage Project [c_customer_sk#545, c_first_name#553, c_last_name#554], ShuffleQueryStage 23\n                     +- Project [c_customer_sk#481]\n                        +- Filter (isnotnull(ssales#403) AND (cast(ssales#403 as decimal(38,8)) > (0.950000 * scalar-subquery#404 [])))\n                           :  +- Aggregate [max(csales#401) AS tpcds_cmax#402]\n                           :     +- Aggregate [c_customer_sk#89], [sum((cast(ss_quantity#416 as decimal(10,0)) * ss_sales_price#419)) AS csales#401]\n                           :        +- Project [ss_quantity#416, ss_sales_price#419, c_customer_sk#89]\n                           :           +- Join Inner, (ss_customer_sk#409 = c_customer_sk#89)\n                           :              :- Project [ss_customer_sk#409, ss_quantity#416, ss_sales_price#419]\n                           :              :  +- Join Inner, (ss_sold_date_sk#429 = d_date_sk#430)\n                           :              :     :- Project [ss_customer_sk#409, ss_quantity#416, ss_sales_price#419, ss_sold_date_sk#429]\n                           :              :     :  +- Filter ((isnotnull(ss_customer_sk#409) AND isnotnull(ss_sold_date_sk#429)) AND dynamicpruning#610 [ss_sold_date_sk#429])\n                           :              :     :     :  +- Project [d_date_sk#430]\n                           :              :     :     :     +- Filter (d_year#436 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#430))\n                           :              :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#430,d_date_id#431,d_date#432,d_month_seq#433,d_week_seq#434,d_quarter_seq#435,d_year#436,d_dow#437,d_moy#438,d_dom#439,d_qoy#440,d_fy_year#441,d_fy_quarter_seq#442,d_fy_week_seq#443,d_day_name#444,d_quarter_name#445,d_holiday#446,d_weekend#447,d_following_holiday#448,d_first_dom#449,d_last_dom#450,d_same_day_ly#451,d_same_day_lq#452,d_current_day#453,... 4 more fields] parquet\n                           :              :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#407,ss_item_sk#408,ss_customer_sk#409,ss_cdemo_sk#410,ss_hdemo_sk#411,ss_addr_sk#412,ss_store_sk#413,ss_promo_sk#414,ss_ticket_number#415L,ss_quantity#416,ss_wholesale_cost#417,ss_list_price#418,ss_sales_price#419,ss_ext_discount_amt#420,ss_ext_sales_price#421,ss_ext_wholesale_cost#422,ss_ext_list_price#423,ss_ext_tax#424,ss_coupon_amt#425,ss_net_paid#426,ss_net_paid_inc_tax#427,ss_net_profit#428,ss_sold_date_sk#429] parquet\n                           :              :     +- Project [d_date_sk#430]\n                           :              :        +- Filter (d_year#436 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#430))\n                           :              :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#430,d_date_id#431,d_date#432,d_month_seq#433,d_week_seq#434,d_quarter_seq#435,d_year#436,d_dow#437,d_moy#438,d_dom#439,d_qoy#440,d_fy_year#441,d_fy_quarter_seq#442,d_fy_week_seq#443,d_day_name#444,d_quarter_name#445,d_holiday#446,d_weekend#447,d_following_holiday#448,d_first_dom#449,d_last_dom#450,d_same_day_ly#451,d_same_day_lq#452,d_current_day#453,... 4 more fields] parquet\n                           :              +- Project [c_customer_sk#89]\n                           :                 +- Filter isnotnull(c_customer_sk#89)\n                           :                    +- Relation spark_catalog.tpcds_100.customer[c_customer_sk#89,c_customer_id#90,c_current_cdemo_sk#91,c_current_hdemo_sk#92,c_current_addr_sk#93,c_first_shipto_date_sk#94,c_first_sales_date_sk#95,c_salutation#96,c_first_name#97,c_last_name#98,c_preferred_cust_flag#99,c_birth_day#100,c_birth_month#101,c_birth_year#102,c_birth_country#103,c_login#104,c_email_address#105,c_last_review_date#106] parquet\n                           +- Aggregate [c_customer_sk#481], [c_customer_sk#481, sum((cast(ss_quantity#467 as decimal(10,0)) * ss_sales_price#470)) AS ssales#403]\n                              +- Project [ss_quantity#467, ss_sales_price#470, c_customer_sk#481]\n                                 +- Join Inner, (ss_customer_sk#460 = c_customer_sk#481)\n                                    :- LogicalQueryStage Project [ss_customer_sk#460, ss_quantity#467, ss_sales_price#470], ShuffleQueryStage 25\n                                    +- LogicalQueryStage Project [c_customer_sk#481], ShuffleQueryStage 27\n"
      },
      "IM" : {
        "inputSizeInBytes" : 46249445392,
        "inputRowCount" : 1554853468
      },
      "PD" : {
        "4" : [ 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 290960, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 290960, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 290960, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 290960, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 290960, 264509, 264509, 290960, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 290960, 264509, 264509, 264509, 290960, 264509, 290960, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 290960, 264509, 290960, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509 ],
        "5" : [ 92897, 90784, 103761, 90428, 98316, 97427, 101149, 90784, 84788, 92742, 102014, 97350, 92721, 91819, 94834, 93337, 90456, 91442, 93321, 90784, 92393, 96288, 88877, 91845, 104847, 93804, 94191, 93687, 87972, 94260, 96819, 89988, 101560, 98948, 95408, 96771, 95805, 97937, 94674, 92881, 91931, 90413, 93316, 92721, 91267, 93799, 97785, 93799, 88895, 84890, 104191, 94351, 97233, 94309, 93847, 98364, 96771, 94282, 95322, 95413, 96819, 94834, 93777, 97350, 80847, 96867, 92833, 91315, 101555, 98799, 94791, 91931, 99407, 98316, 91707, 98900, 90497, 108866, 96219, 94743, 94818, 94308, 91470, 93777, 100063, 93407, 96723, 92436, 101000, 91819, 97833, 99813, 94330, 89447, 99282, 102062, 90789, 90301, 99917, 88480, 92281, 98407, 93826, 91267, 97302, 98895, 97446, 99236, 85251, 91931, 91336, 89973, 89378, 99551, 95805, 95317, 90461, 92350, 91358, 98924, 90519, 94260, 99028, 93156, 100474, 96379, 93295, 95226, 96944, 92860, 93337, 97302, 89866, 91336, 90987, 89007, 89973, 99455, 97302, 98799, 102747, 89952, 96288, 99938, 93428, 95301, 92376, 95512, 95274, 95365, 92790, 85795, 95875, 96920, 94308, 92484, 95930, 89093, 97422, 86253, 96219, 102379, 98489, 102784, 96331, 96379, 92371, 93316, 92785, 93916, 94791, 102115, 94469, 96793, 95805, 96867, 89581, 88981, 94399, 98489, 98220, 89472, 93708, 89292, 96336, 95848, 95274, 90875, 94871, 92345, 94834, 92238, 91798, 83153, 95205, 93471, 96422, 89533, 96750, 101101 ],
        "6" : [ 6049721, 6030087, 6204013, 6143364, 6417576, 6042564, 6427913, 5778625, 5802410, 6411635, 6422810, 5944342, 6367492, 5961967, 6243307, 5978402, 6191850, 6371424, 6587778, 6447297, 6313620, 6422810, 6028759, 5986266, 6421901, 6258983, 6233722, 6298395, 6109356, 6084514, 6507783, 6147943, 6449506, 5943635, 6244334, 6411910, 6019024, 5910282, 5905669, 6426226, 6101492, 6107347, 5950904, 6407585, 6150044, 6285611, 6391406, 6019593, 5851354, 6052555, 6657567, 6402396, 6214507, 6340497, 6127688, 6436563, 6457410, 6417576, 6044880, 6353092, 6106752, 6341799, 6132922, 6412342, 5860767, 6165654, 6422810, 6223170, 6422423, 6411910, 6397594, 5872911, 6362735, 6382717, 6145732, 6258506, 5834571, 6414643, 6350965, 6122454, 6278991, 5887337, 6381892, 6294693, 6432891, 6137679, 6015092, 6454484, 6422810, 6113288, 6422810, 6167074, 6333110, 5741320, 6417576, 6407108, 5994751, 6045789, 6451622, 5926010, 6167807, 6423588, 6126386, 6427135, 6157732, 6380938, 6300275, 6530871, 5845065, 6187918, 6157790, 6327399, 5858511, 6427135, 5971840, 6316931, 6144692, 5996734, 5858511, 6365713, 6104122, 6334889, 6597081, 6381892, 6266847, 6376181, 6316106, 5889475, 6351790, 6040974, 6187918, 6386649, 6257348, 6272906, 6037330, 6211400, 6013764, 6417576, 6407108, 6096651, 6396640, 5930563, 6397117, 6422810, 6035347, 6407585, 6135526, 6112607, 6422810, 6412342, 6102794, 5760780, 6370947, 6234115, 6330983, 6517864, 6360249, 6289936, 6154709, 5842783, 5890648, 6428566, 6350011, 6397117, 6417576, 6341799, 6341406, 5878878, 6392360, 6043185, 6061289, 6427135, 6386649, 6229339, 6407585, 6115892, 5486094, 5850647, 6071076, 6269909, 6260659, 6081151, 6223647, 5969236, 6560397, 6432891, 6152472, 6261961, 6224556, 5905074, 6235024, 5960070, 6279468, 5841958, 6357978, 5867677, 6180649, 5920069, 6445866, 6427135 ],
        "1" : [ 84280, 84280, 84280, 92709, 92709, 84280, 92709, 84280, 76619, 92709, 92709, 84280, 92709, 84280, 84280, 84280, 84280, 84280, 92709, 92709, 92709, 92709, 84280, 84280, 92709, 84280, 84280, 92709, 84280, 92709, 92709, 92709, 92709, 84280, 84280, 92709, 84280, 84280, 84280, 92709, 84280, 84280, 84280, 92709, 92709, 84280, 84280, 84280, 84280, 84280, 92709, 92709, 84280, 84280, 84280, 92709, 92709, 92709, 84280, 84280, 84280, 92709, 84280, 92709, 84280, 92709, 92709, 84280, 92709, 92709, 92709, 84280, 92709, 92709, 84280, 92709, 84280, 92709, 84280, 84280, 92709, 84280, 92709, 84280, 92709, 84280, 84280, 92709, 92709, 84280, 84280, 84280, 92709, 84280, 92709, 92709, 84280, 92709, 92709, 84280, 84280, 92709, 84280, 92709, 92709, 84280, 84280, 92709, 84280, 92709, 84280, 92709, 84280, 92709, 92709, 92709, 76619, 92709, 84280, 84280, 84280, 92709, 92709, 92709, 92709, 92709, 84280, 84280, 92709, 84280, 84280, 84280, 84280, 92709, 84280, 84280, 92709, 92709, 92709, 84280, 84280, 84280, 92709, 92709, 92709, 84280, 84280, 84280, 92709, 84280, 92709, 84280, 92709, 84280, 84280, 92709, 84280, 92709, 84280, 84280, 84280, 92709, 92709, 92709, 84280, 92709, 84280, 84280, 92709, 84280, 84280, 92709, 84280, 84280, 92709, 84280, 84280, 84280, 84280, 84280, 84280, 84280, 92709, 84280, 92709, 92709, 84280, 84280, 84280, 84280, 92709, 84280, 84280, 84280, 84280, 84280, 84280, 84280, 92709, 92709 ],
        "0" : [ 146748, 148062, 162268, 147121, 156091, 155997, 162866, 145655, 137010, 149774, 166912, 149859, 147977, 148375, 146423, 147452, 146578, 149316, 154962, 146511, 149571, 154021, 147977, 141730, 163713, 148833, 153080, 150257, 141384, 155903, 150342, 142671, 164244, 155997, 151301, 154479, 154962, 155493, 149401, 149097, 146578, 146681, 151386, 149774, 147604, 149486, 162678, 148062, 143527, 135298, 167947, 150342, 155420, 154021, 145324, 154021, 158337, 152139, 156844, 150342, 154021, 152139, 155921, 159761, 133326, 153080, 151750, 147537, 165373, 160292, 151198, 144383, 155988, 152139, 147434, 159184, 141375, 164748, 155514, 149774, 147036, 146663, 150360, 148079, 159351, 149932, 150342, 148545, 160984, 153623, 158504, 163713, 148478, 136672, 156938, 162772, 145324, 146180, 155997, 145239, 151656, 154962, 147036, 150715, 152597, 149774, 158337, 156938, 137450, 150800, 144298, 148460, 142231, 158900, 149774, 159667, 146748, 148918, 146663, 157879, 145324, 150715, 157375, 152224, 154962, 150809, 153080, 158820, 153538, 151198, 152139, 158820, 146095, 148918, 147036, 142671, 141978, 162866, 155056, 155420, 160313, 146596, 150360, 155997, 150885, 157785, 153080, 153538, 153538, 155420, 144951, 134977, 152691, 153165, 151656, 154962, 156455, 141357, 158431, 137944, 155056, 164244, 158820, 162362, 150715, 151814, 151198, 149003, 148375, 153080, 155420, 157879, 149868, 155420, 153165, 153080, 137450, 137528, 152597, 157302, 153538, 141357, 152597, 141044, 152157, 155235, 151826, 146180, 151741, 147977, 152224, 146265, 143442, 136594, 156844, 148833, 149401, 143925, 147977, 160796 ],
        "2" : [ 17371601, 17313063, 16996707, 17100959, 17033226, 17236981, 17071883, 16947894, 17078453, 17320527, 17392136, 17189957, 17396414, 17311465, 17218617, 17091886, 17296486, 17602538, 17086450, 17206721, 17104075, 17257645, 17447592, 17284068, 17180017, 17251810, 17078510, 17428751, 17190703, 17091180, 16888245, 17130838, 17230626, 16956499, 17240499, 17279493, 17046255, 16925646, 16907666, 17034480, 16940011, 17199974, 16869146, 17295966, 17353222, 16846943, 17325947, 17131813, 17231729, 17311901, 17440035, 17297061, 17072505, 17276021, 17146516, 17169923, 17129259, 16823901, 16978621, 17169124, 17091808, 17480756, 16982840, 17160489, 16978313, 17460598, 17233558, 17090869, 17156297, 17354514, 17312619, 17034009, 16927254, 17287614, 17365219, 17389547, 17480370, 17316975, 17251186, 17264228, 17243624, 17381439, 17433913, 16760532, 17064606, 16931418, 17063808, 17170220, 17151390, 17444256, 17095914, 17182115, 17324912, 17111549, 17203150, 17522946, 16932260, 16948450, 17145841, 16867015, 16765024, 17338612, 17173734, 16986979, 17131384, 17352202, 17241238, 17627527, 16822357, 16867839, 17008290, 17184359, 17395163, 17082612, 17338942, 17121168, 16815534, 16899165, 17149200, 17075267, 17087177, 17178853, 17547989, 17158451, 17252438, 17439694, 17073151, 16986975, 17140740, 16958860, 17422277, 17317255, 17311966, 17191736, 16950873, 17009149, 17326021, 17377512, 17100048, 17282433, 17170675, 16883065, 17109865, 17346265, 17166782, 17218832, 17598899, 17156005, 17190632, 17175152, 17467989, 17158171, 17400931, 17351617, 17331236, 17383323, 17108352, 17275713, 17473037, 16820939, 16928731, 16941370, 17356646, 16899933, 17228069, 17252334, 17147748, 17345681, 17313972, 16910213, 17387811, 17599878, 17309032, 17226960, 17276187, 16945588, 17360401, 16960900, 17134588, 17028930, 17029163, 17234190, 17064091, 17105964, 17637409, 17303023, 17722750, 17370523, 17066032, 17283328, 17271878, 17131573, 17011172, 16816679, 17307952, 17504379, 17083957, 17159149, 17341949, 16921044 ],
        "3" : [ 52331, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 57565, 57565, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 57565, 52331, 52331, 52331, 57565, 57565, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 57565, 57565, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 57565, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 57565, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 57565, 57565, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 57565, 57565, 52331, 57565, 52331, 57565, 52331, 57565, 52331, 52331, 57565, 52331, 57565, 57565, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 57565, 57565, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 57565, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 57565, 57565, 52331, 52331, 52331, 52331 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "StartTimeInMs" : 1702226741042,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 129899,
        "IOBytes" : {
          "Total" : 15776153735,
          "Details" : {
            "IR" : 853684861,
            "IW" : 0,
            "SR" : 12332414216,
            "SW" : 2590054658
          }
        }
      }
    },
    "8" : {
      "LQP" : {
        "operators" : {
          "45" : {
            "sign" : -350419576,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 6601125024000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_customer_sk#481] "
          },
          "34" : {
            "sign" : 1565358831,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 39925696056,
            "rowCount" : 262669053,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(ss_customer_sk#409) AND isnotnull(ss_sold_date_sk#429)) AND dynamicpruning#610 [ss_sold_date_sk#429]) "
          },
          "67" : {
            "sign" : 388376503,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 26102424,
            "rowCount" : 204000,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_item_sk#67, i_item_desc#71], ShuffleQueryStage 15 "
          },
          "12" : {
            "sign" : -938487710,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 67361424,
            "rowCount" : 1403363,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [cs_bill_customer_sk#109, cs_item_sk#121, cs_quantity#124, cs_list_price#126, cs_sold_date_sk#140], ShuffleQueryStage 0 "
          },
          "66" : {
            "sign" : -1070534819,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 4248649360,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ss_item_sk#17, d_date#41], ShuffleQueryStage 30 "
          },
          "51" : {
            "sign" : 1454164637,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 32000000,
            "rowCount" : 2000000,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [c_customer_sk#481], ShuffleQueryStage 10 "
          },
          "84" : {
            "sign" : 1454165815,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 32000000,
            "rowCount" : 2000000,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [c_customer_sk#481], ShuffleQueryStage 27 "
          },
          "8" : {
            "sign" : 1441568544,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 1392136096,
            "rowCount" : 43504253,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cs_sold_date_sk#140 = d_date_sk#517) "
          },
          "73" : {
            "sign" : 457576007,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 6601125024,
            "rowCount" : 275046876,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ss_customer_sk#460, ss_quantity#467, ss_sales_price#470], ShuffleQueryStage 17 "
          },
          "78" : {
            "sign" : 290084495,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 6601125024000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_customer_sk#481] "
          },
          "19" : {
            "sign" : 1120906919,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 26102424,
            "rowCount" : 204000,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_item_sk#67, i_item_desc#71], ShuffleQueryStage 2 "
          },
          "23" : {
            "sign" : 1623804386,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 13202250048000000,
            "rowCount" : 550093752000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_quantity#467, ss_sales_price#470, c_customer_sk#481] "
          },
          "62" : {
            "sign" : 770061938,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 1083405586800000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (cnt#400L > 4) "
          },
          "4" : {
            "sign" : 1365193141,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 1648640717,
            "rowCount" : 27026897,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [c_last_name#508, c_first_name#507], [c_last_name#508, c_first_name#507, sum((cast(cs_quantity#124 as decimal(10,0)) * cs_list_price#126)) AS sales#391] "
          },
          "77" : {
            "sign" : 1358266277,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 98000000,
            "rowCount" : 2000000,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [c_customer_sk#545, c_first_name#553, c_last_name#554], ShuffleQueryStage 23 "
          },
          "40" : {
            "sign" : -337975679,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 500000000,
            "rowCount" : 2000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: isnotnull(c_customer_sk#89) "
          },
          "15" : {
            "sign" : -500295036,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 1083405586800000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [_groupingexpression#608, i_item_sk#67, d_date#41], [i_item_sk#67 AS item_sk#398, count(1) AS cnt#400L] "
          },
          "11" : {
            "sign" : 2111785784,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 44907616,
            "rowCount" : 1403363,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (cs_item_sk#121 = item_sk#398) "
          },
          "9" : {
            "sign" : -990926960,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 39294164,
            "rowCount" : 1403363,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (cs_bill_customer_sk#109 = c_customer_sk#481) "
          },
          "44" : {
            "sign" : 435063190,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 98000000,
            "rowCount" : 2000000,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [c_customer_sk#499, c_first_name#507, c_last_name#508], ShuffleQueryStage 6 "
          },
          "33" : {
            "sign" : -861776479,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 7354733484,
            "rowCount" : 262669053,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_customer_sk#409, ss_quantity#416, ss_sales_price#419, ss_sold_date_sk#429] "
          },
          "22" : {
            "sign" : 1934210699,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 15402625056000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [c_customer_sk#481], [c_customer_sk#481, sum((cast(ss_quantity#467 as decimal(10,0)) * ss_sales_price#470)) AS ssales#403] "
          },
          "56" : {
            "sign" : -2079294392,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 835624096,
            "rowCount" : 26113253,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ws_sold_date_sk#174 = d_date_sk#563) "
          },
          "55" : {
            "sign" : 2065671769,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 626718072,
            "rowCount" : 26113253,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_bill_customer_sk#144, ws_quantity#158, ws_list_price#160] "
          },
          "26" : {
            "sign" : 739645252,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 32000000,
            "rowCount" : 2000000,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [c_customer_sk#481], ShuffleQueryStage 4 "
          },
          "50" : {
            "sign" : -1093617969,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 6601125024,
            "rowCount" : 275046876,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ss_customer_sk#460, ss_quantity#467, ss_sales_price#470], ShuffleQueryStage 8 "
          },
          "37" : {
            "sign" : 2051540096,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 355962,
            "rowCount" : 1447,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (d_year#436 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#430)) "
          },
          "68" : {
            "sign" : 998370159,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 6601125024000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_customer_sk#481] "
          },
          "61" : {
            "sign" : 2022277624,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 650043352080000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [item_sk#398] "
          },
          "13" : {
            "sign" : 1981268591,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 650043352080000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [item_sk#398] "
          },
          "46" : {
            "sign" : 789941336,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 15402625056000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(ssales#403) AND (cast(ssales#403 as decimal(38,8)) > (0.950000 * scalar-subquery#404 []))) "
          },
          "24" : {
            "sign" : 1908847787,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 15402625056000000,
            "rowCount" : 550093752000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_customer_sk#460 = c_customer_sk#481) "
          },
          "83" : {
            "sign" : 457576906,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 6601125024,
            "rowCount" : 275046876,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ss_customer_sk#460, ss_quantity#467, ss_sales_price#470], ShuffleQueryStage 25 "
          },
          "35" : {
            "sign" : -977156952,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#407, ss_item_sk#408, ss_customer_sk#409, ss_cdemo_sk#410, ss_hdemo_sk#411, ss_addr_sk#412, ss_store_sk#413, ss_promo_sk#414, ss_ticket_number#415L, ss_quantity#416, ss_wholesale_cost#417, ss_list_price#418, ss_sales_price#419, ss_ext_discount_amt#420, ss_ext_sales_price#421, ss_ext_wholesale_cost#422, ss_ext_list_price#423, ss_ext_tax#424, ss_coupon_amt#425, ss_net_paid#426, ss_net_paid_inc_tax#427, ss_net_profit#428, ss_sold_date_sk#429], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "16" : {
            "sign" : -2009662925,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 1950130056240000,
            "rowCount" : 54170279340000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date#41, i_item_sk#67, substr(i_item_desc#71, 1, 30) AS _groupingexpression#608] "
          },
          "79" : {
            "sign" : -639744623,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 15402625056000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(ssales#403) AND (cast(ssales#403 as decimal(38,8)) > (0.950000 * scalar-subquery#404 []))) "
          },
          "5" : {
            "sign" : -1523964623,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 4959484842000000,
            "rowCount" : 87008506000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_quantity#124, cs_list_price#126, c_first_name#507, c_last_name#508] "
          },
          "72" : {
            "sign" : 914322748,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 15402625056000000,
            "rowCount" : 550093752000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_customer_sk#460 = c_customer_sk#481) "
          },
          "10" : {
            "sign" : -1537602824,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 39294164,
            "rowCount" : 1403363,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_bill_customer_sk#109, cs_quantity#124, cs_list_price#126, cs_sold_date_sk#140] "
          },
          "59" : {
            "sign" : 910944340,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 26955616,
            "rowCount" : 842363,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (ws_item_sk#143 = item_sk#398) "
          },
          "48" : {
            "sign" : 47435418,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 13202250048000000,
            "rowCount" : 550093752000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_quantity#467, ss_sales_price#470, c_customer_sk#481] "
          },
          "21" : {
            "sign" : -1901984732,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 15402625056000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(ssales#403) AND (cast(ssales#403 as decimal(38,8)) > (0.950000 * scalar-subquery#404 []))) "
          },
          "76" : {
            "sign" : 1645687881,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 98000000,
            "rowCount" : 2000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (c_customer_sk#545 = c_customer_sk#481) "
          },
          "54" : {
            "sign" : 2038011901,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 3394722890000000,
            "rowCount" : 52226506000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ws_bill_customer_sk#144 = c_customer_sk#545) "
          },
          "43" : {
            "sign" : -528156139,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 98000000,
            "rowCount" : 2000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (c_customer_sk#499 = c_customer_sk#481) "
          },
          "65" : {
            "sign" : -1904280941,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 2166811173600000,
            "rowCount" : 54170279340000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_item_sk#17 = i_item_sk#67) "
          },
          "71" : {
            "sign" : 82168585,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 13202250048000000,
            "rowCount" : 550093752000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_quantity#467, ss_sales_price#470, c_customer_sk#481] "
          },
          "57" : {
            "sign" : -433298353,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 23586164,
            "rowCount" : 842363,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (ws_bill_customer_sk#144 = c_customer_sk#481) "
          },
          "32" : {
            "sign" : 305748262,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 8497298720,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#429 = d_date_sk#430) "
          },
          "80" : {
            "sign" : 2102197308,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 15402625056000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [c_customer_sk#481], [c_customer_sk#481, sum((cast(ss_quantity#467 as decimal(10,0)) * ss_sales_price#470)) AS ssales#403] "
          },
          "82" : {
            "sign" : -1025989668,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 15402625056000000,
            "rowCount" : 550093752000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_customer_sk#460 = c_customer_sk#481) "
          },
          "49" : {
            "sign" : -1437901541,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 15402625056000000,
            "rowCount" : 550093752000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_customer_sk#460 = c_customer_sk#481) "
          },
          "6" : {
            "sign" : 1133093440,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 5655552890000000,
            "rowCount" : 87008506000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cs_bill_customer_sk#109 = c_customer_sk#499) "
          },
          "36" : {
            "sign" : 1217444409,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 17364,
            "rowCount" : 1447,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#430] "
          },
          "1" : {
            "sign" : -1256479583,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
            "sizeInBytes" : 3297281434,
            "rowCount" : 54053794,
            "isRuntime" : false,
            "predicate" : " (unknown) LocalLimit Arguments: 100 "
          },
          "39" : {
            "sign" : 1085635783,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 24000000,
            "rowCount" : 2000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_customer_sk#89] "
          },
          "17" : {
            "sign" : 566394868,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 2166811173600000,
            "rowCount" : 54170279340000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_item_sk#17 = i_item_sk#67) "
          },
          "25" : {
            "sign" : -1093618124,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 6601125024,
            "rowCount" : 275046876,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ss_customer_sk#460, ss_quantity#467, ss_sales_price#470], ShuffleQueryStage 3 "
          },
          "60" : {
            "sign" : 1832837103,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 40433424,
            "rowCount" : 842363,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ws_item_sk#143, ws_bill_customer_sk#144, ws_quantity#158, ws_list_price#160, ws_sold_date_sk#174], ShuffleQueryStage 11 "
          },
          "14" : {
            "sign" : 1045330691,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 1083405586800000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (cnt#400L > 4) "
          },
          "47" : {
            "sign" : 431587195,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 15402625056000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [c_customer_sk#481], [c_customer_sk#481, sum((cast(ss_quantity#467 as decimal(10,0)) * ss_sales_price#470)) AS ssales#403] "
          },
          "31" : {
            "sign" : 1802383537,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 6372974040,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_customer_sk#409, ss_quantity#416, ss_sales_price#419] "
          },
          "69" : {
            "sign" : -1882899317,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 15402625056000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(ssales#403) AND (cast(ssales#403 as decimal(38,8)) > (0.950000 * scalar-subquery#404 []))) "
          },
          "58" : {
            "sign" : -1718060309,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 23586164,
            "rowCount" : 842363,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_bill_customer_sk#144, ws_quantity#158, ws_list_price#160, ws_sold_date_sk#174] "
          },
          "64" : {
            "sign" : 1825233538,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 1950130056240000,
            "rowCount" : 54170279340000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date#41, i_item_sk#67, substr(i_item_desc#71, 1, 30) AS _groupingexpression#608] "
          },
          "53" : {
            "sign" : 1873577481,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 2976910842000000,
            "rowCount" : 52226506000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_quantity#158, ws_list_price#160, c_first_name#553, c_last_name#554] "
          },
          "42" : {
            "sign" : 1758754844,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1048824,
            "rowCount" : 31,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#517], BroadcastQueryStage 5 "
          },
          "75" : {
            "sign" : -2138347845,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1048824,
            "rowCount" : 31,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#563], BroadcastQueryStage 21 "
          },
          "0" : {
            "sign" : -616519630,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
            "sizeInBytes" : 6400,
            "rowCount" : 100,
            "isRuntime" : false,
            "predicate" : " (unknown) GlobalLimit Arguments: 100 "
          },
          "20" : {
            "sign" : 2123397918,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 6601125024000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_customer_sk#481] "
          },
          "27" : {
            "sign" : -582481967,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 24,
            "rowCount" : 1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [max(csales#401) AS tpcds_cmax#402] "
          },
          "70" : {
            "sign" : -1381279908,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 15402625056000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [c_customer_sk#481], [c_customer_sk#481, sum((cast(ss_quantity#467 as decimal(10,0)) * ss_sales_price#470)) AS ssales#403] "
          },
          "2" : {
            "sign" : -1336807780,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 3297281434,
            "rowCount" : 54053794,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [c_last_name#508 ASC NULLS FIRST, c_first_name#507 ASC NULLS FIRST, sales#391 ASC NULLS FIRST], true "
          },
          "38" : {
            "sign" : -358797686,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#430, d_date_id#431, d_date#432, d_month_seq#433, d_week_seq#434, d_quarter_seq#435, d_year#436, d_dow#437, d_moy#438, d_dom#439, d_qoy#440, d_fy_year#441, d_fy_quarter_seq#442, d_fy_week_seq#443, d_day_name#444, d_quarter_name#445, d_holiday#446, d_weekend#447, d_following_holiday#448, d_first_dom#449, d_last_dom#450, d_same_day_ly#451, d_same_day_lq#452, d_current_day#453, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "81" : {
            "sign" : -2121928113,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 13202250048000000,
            "rowCount" : 550093752000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_quantity#467, ss_sales_price#470, c_customer_sk#481] "
          },
          "18" : {
            "sign" : -1070535532,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 4248649360,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ss_item_sk#17, d_date#41], ShuffleQueryStage 28 "
          },
          "30" : {
            "sign" : -949612920,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 7701230628,
            "rowCount" : 275043951,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_customer_sk#409 = c_customer_sk#89) "
          },
          "7" : {
            "sign" : -758780695,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 1044102072,
            "rowCount" : 43504253,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_bill_customer_sk#109, cs_quantity#124, cs_list_price#126] "
          },
          "29" : {
            "sign" : -1338930356,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 6601054824,
            "rowCount" : 275043951,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_quantity#416, ss_sales_price#419, c_customer_sk#89] "
          },
          "41" : {
            "sign" : -576393737,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 500000000,
            "rowCount" : 2000000,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [c_customer_sk#89, c_customer_id#90, c_current_cdemo_sk#91, c_current_hdemo_sk#92, c_current_addr_sk#93, c_first_shipto_date_sk#94, c_first_sales_date_sk#95, c_salutation#96, c_first_name#97, c_last_name#98, c_preferred_cust_flag#99, c_birth_day#100, c_birth_month#101, c_birth_year#102, c_birth_country#103, c_login#104, c_email_address#105, c_last_review_date#106], `spark_catalog`.`tpcds_100`.`customer`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "63" : {
            "sign" : 1782114115,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 1083405586800000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [_groupingexpression#608, i_item_sk#67, d_date#41], [i_item_sk#67 AS item_sk#398, count(1) AS cnt#400L] "
          },
          "3" : {
            "sign" : 225600940,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Union",
            "sizeInBytes" : 3297281434,
            "rowCount" : 54053794,
            "isRuntime" : false,
            "predicate" : " (unknown) Union Arguments: false, false "
          },
          "74" : {
            "sign" : 1454164916,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 32000000,
            "rowCount" : 2000000,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [c_customer_sk#481], ShuffleQueryStage 19 "
          },
          "52" : {
            "sign" : 1307009313,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 1648640717,
            "rowCount" : 27026897,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [c_last_name#554, c_first_name#553], [c_last_name#554, c_first_name#553, sum((cast(ws_quantity#158 as decimal(10,0)) * ws_list_price#160)) AS sales#394] "
          },
          "28" : {
            "sign" : -660295919,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 47624376,
            "rowCount" : 1984349,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [c_customer_sk#89], [sum((cast(ss_quantity#416 as decimal(10,0)) * ss_sales_price#419)) AS csales#401] "
          }
        },
        "links" : [ {
          "fromId" : 12,
          "fromName" : "LogicalQueryStage",
          "toId" : 11,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 18,
          "fromName" : "LogicalQueryStage",
          "toId" : 17,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 19,
          "fromName" : "LogicalQueryStage",
          "toId" : 17,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 17,
          "fromName" : "Join",
          "toId" : 16,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 16,
          "fromName" : "Project",
          "toId" : 15,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 15,
          "fromName" : "Aggregate",
          "toId" : 14,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 14,
          "fromName" : "Filter",
          "toId" : 13,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 13,
          "fromName" : "Project",
          "toId" : 11,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "Join",
          "toId" : 10,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "Project",
          "toId" : 9,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 25,
          "fromName" : "LogicalQueryStage",
          "toId" : 24,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 26,
          "fromName" : "LogicalQueryStage",
          "toId" : 24,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 24,
          "fromName" : "Join",
          "toId" : 23,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 23,
          "fromName" : "Project",
          "toId" : 22,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 22,
          "fromName" : "Aggregate",
          "toId" : 21,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 35,
          "fromName" : "LogicalRelation",
          "toId" : 34,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 38,
          "fromName" : "LogicalRelation",
          "toId" : 37,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 37,
          "fromName" : "Filter",
          "toId" : 36,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 36,
          "fromName" : "Project",
          "toId" : 34,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 34,
          "fromName" : "Filter",
          "toId" : 33,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 33,
          "fromName" : "Project",
          "toId" : 32,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 36,
          "fromName" : "Project",
          "toId" : 32,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 32,
          "fromName" : "Join",
          "toId" : 31,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 31,
          "fromName" : "Project",
          "toId" : 30,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 41,
          "fromName" : "LogicalRelation",
          "toId" : 40,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 40,
          "fromName" : "Filter",
          "toId" : 39,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 39,
          "fromName" : "Project",
          "toId" : 30,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 30,
          "fromName" : "Join",
          "toId" : 29,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 29,
          "fromName" : "Project",
          "toId" : 28,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 28,
          "fromName" : "Aggregate",
          "toId" : 27,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 27,
          "fromName" : "Aggregate",
          "toId" : 21,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 21,
          "fromName" : "Filter",
          "toId" : 20,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 20,
          "fromName" : "Project",
          "toId" : 9,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "Join",
          "toId" : 8,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 42,
          "fromName" : "LogicalQueryStage",
          "toId" : 8,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "Join",
          "toId" : 7,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Project",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 44,
          "fromName" : "LogicalQueryStage",
          "toId" : 43,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 50,
          "fromName" : "LogicalQueryStage",
          "toId" : 49,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 51,
          "fromName" : "LogicalQueryStage",
          "toId" : 49,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 49,
          "fromName" : "Join",
          "toId" : 48,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 48,
          "fromName" : "Project",
          "toId" : 47,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 47,
          "fromName" : "Aggregate",
          "toId" : 46,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 27,
          "fromName" : "Aggregate",
          "toId" : 46,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 46,
          "fromName" : "Filter",
          "toId" : 45,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 45,
          "fromName" : "Project",
          "toId" : 43,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 43,
          "fromName" : "Join",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Join",
          "toId" : 5,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Project",
          "toId" : 4,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Aggregate",
          "toId" : 3,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 60,
          "fromName" : "LogicalQueryStage",
          "toId" : 59,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 66,
          "fromName" : "LogicalQueryStage",
          "toId" : 65,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 67,
          "fromName" : "LogicalQueryStage",
          "toId" : 65,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 65,
          "fromName" : "Join",
          "toId" : 64,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 64,
          "fromName" : "Project",
          "toId" : 63,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 63,
          "fromName" : "Aggregate",
          "toId" : 62,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 62,
          "fromName" : "Filter",
          "toId" : 61,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 61,
          "fromName" : "Project",
          "toId" : 59,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 59,
          "fromName" : "Join",
          "toId" : 58,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 58,
          "fromName" : "Project",
          "toId" : 57,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 73,
          "fromName" : "LogicalQueryStage",
          "toId" : 72,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 74,
          "fromName" : "LogicalQueryStage",
          "toId" : 72,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 72,
          "fromName" : "Join",
          "toId" : 71,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 71,
          "fromName" : "Project",
          "toId" : 70,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 70,
          "fromName" : "Aggregate",
          "toId" : 69,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 27,
          "fromName" : "Aggregate",
          "toId" : 69,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 69,
          "fromName" : "Filter",
          "toId" : 68,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 68,
          "fromName" : "Project",
          "toId" : 57,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 57,
          "fromName" : "Join",
          "toId" : 56,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 75,
          "fromName" : "LogicalQueryStage",
          "toId" : 56,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 56,
          "fromName" : "Join",
          "toId" : 55,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 55,
          "fromName" : "Project",
          "toId" : 54,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 77,
          "fromName" : "LogicalQueryStage",
          "toId" : 76,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 83,
          "fromName" : "LogicalQueryStage",
          "toId" : 82,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 84,
          "fromName" : "LogicalQueryStage",
          "toId" : 82,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 82,
          "fromName" : "Join",
          "toId" : 81,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 81,
          "fromName" : "Project",
          "toId" : 80,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 80,
          "fromName" : "Aggregate",
          "toId" : 79,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 27,
          "fromName" : "Aggregate",
          "toId" : 79,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 79,
          "fromName" : "Filter",
          "toId" : 78,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 78,
          "fromName" : "Project",
          "toId" : 76,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 76,
          "fromName" : "Join",
          "toId" : 54,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 54,
          "fromName" : "Join",
          "toId" : 53,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 53,
          "fromName" : "Project",
          "toId" : 52,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 52,
          "fromName" : "Aggregate",
          "toId" : 3,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Union",
          "toId" : 2,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "LocalLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "LocalLimit",
          "toId" : 0,
          "toName" : "GlobalLimit",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [c_last_name#508 ASC NULLS FIRST, c_first_name#507 ASC NULLS FIRST, sales#391 ASC NULLS FIRST], true\n      +- Union false, false\n         :- Aggregate [c_last_name#508, c_first_name#507], [c_last_name#508, c_first_name#507, sum((cast(cs_quantity#124 as decimal(10,0)) * cs_list_price#126)) AS sales#391]\n         :  +- Project [cs_quantity#124, cs_list_price#126, c_first_name#507, c_last_name#508]\n         :     +- Join Inner, (cs_bill_customer_sk#109 = c_customer_sk#499)\n         :        :- Project [cs_bill_customer_sk#109, cs_quantity#124, cs_list_price#126]\n         :        :  +- Join Inner, (cs_sold_date_sk#140 = d_date_sk#517)\n         :        :     :- Join LeftSemi, (cs_bill_customer_sk#109 = c_customer_sk#481)\n         :        :     :  :- Project [cs_bill_customer_sk#109, cs_quantity#124, cs_list_price#126, cs_sold_date_sk#140]\n         :        :     :  :  +- Join LeftSemi, (cs_item_sk#121 = item_sk#398)\n         :        :     :  :     :- LogicalQueryStage Project [cs_bill_customer_sk#109, cs_item_sk#121, cs_quantity#124, cs_list_price#126, cs_sold_date_sk#140], ShuffleQueryStage 0\n         :        :     :  :     +- Project [item_sk#398]\n         :        :     :  :        +- Filter (cnt#400L > 4)\n         :        :     :  :           +- Aggregate [_groupingexpression#608, i_item_sk#67, d_date#41], [i_item_sk#67 AS item_sk#398, count(1) AS cnt#400L]\n         :        :     :  :              +- Project [d_date#41, i_item_sk#67, substr(i_item_desc#71, 1, 30) AS _groupingexpression#608]\n         :        :     :  :                 +- Join Inner, (ss_item_sk#17 = i_item_sk#67)\n         :        :     :  :                    :- LogicalQueryStage Project [ss_item_sk#17, d_date#41], ShuffleQueryStage 28\n         :        :     :  :                    +- LogicalQueryStage Project [i_item_sk#67, i_item_desc#71], ShuffleQueryStage 2\n         :        :     :  +- Project [c_customer_sk#481]\n         :        :     :     +- Filter (isnotnull(ssales#403) AND (cast(ssales#403 as decimal(38,8)) > (0.950000 * scalar-subquery#404 [])))\n         :        :     :        :  +- Aggregate [max(csales#401) AS tpcds_cmax#402]\n         :        :     :        :     +- Aggregate [c_customer_sk#89], [sum((cast(ss_quantity#416 as decimal(10,0)) * ss_sales_price#419)) AS csales#401]\n         :        :     :        :        +- Project [ss_quantity#416, ss_sales_price#419, c_customer_sk#89]\n         :        :     :        :           +- Join Inner, (ss_customer_sk#409 = c_customer_sk#89)\n         :        :     :        :              :- Project [ss_customer_sk#409, ss_quantity#416, ss_sales_price#419]\n         :        :     :        :              :  +- Join Inner, (ss_sold_date_sk#429 = d_date_sk#430)\n         :        :     :        :              :     :- Project [ss_customer_sk#409, ss_quantity#416, ss_sales_price#419, ss_sold_date_sk#429]\n         :        :     :        :              :     :  +- Filter ((isnotnull(ss_customer_sk#409) AND isnotnull(ss_sold_date_sk#429)) AND dynamicpruning#610 [ss_sold_date_sk#429])\n         :        :     :        :              :     :     :  +- Project [d_date_sk#430]\n         :        :     :        :              :     :     :     +- Filter (d_year#436 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#430))\n         :        :     :        :              :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#430,d_date_id#431,d_date#432,d_month_seq#433,d_week_seq#434,d_quarter_seq#435,d_year#436,d_dow#437,d_moy#438,d_dom#439,d_qoy#440,d_fy_year#441,d_fy_quarter_seq#442,d_fy_week_seq#443,d_day_name#444,d_quarter_name#445,d_holiday#446,d_weekend#447,d_following_holiday#448,d_first_dom#449,d_last_dom#450,d_same_day_ly#451,d_same_day_lq#452,d_current_day#453,... 4 more fields] parquet\n         :        :     :        :              :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#407,ss_item_sk#408,ss_customer_sk#409,ss_cdemo_sk#410,ss_hdemo_sk#411,ss_addr_sk#412,ss_store_sk#413,ss_promo_sk#414,ss_ticket_number#415L,ss_quantity#416,ss_wholesale_cost#417,ss_list_price#418,ss_sales_price#419,ss_ext_discount_amt#420,ss_ext_sales_price#421,ss_ext_wholesale_cost#422,ss_ext_list_price#423,ss_ext_tax#424,ss_coupon_amt#425,ss_net_paid#426,ss_net_paid_inc_tax#427,ss_net_profit#428,ss_sold_date_sk#429] parquet\n         :        :     :        :              :     +- Project [d_date_sk#430]\n         :        :     :        :              :        +- Filter (d_year#436 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#430))\n         :        :     :        :              :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#430,d_date_id#431,d_date#432,d_month_seq#433,d_week_seq#434,d_quarter_seq#435,d_year#436,d_dow#437,d_moy#438,d_dom#439,d_qoy#440,d_fy_year#441,d_fy_quarter_seq#442,d_fy_week_seq#443,d_day_name#444,d_quarter_name#445,d_holiday#446,d_weekend#447,d_following_holiday#448,d_first_dom#449,d_last_dom#450,d_same_day_ly#451,d_same_day_lq#452,d_current_day#453,... 4 more fields] parquet\n         :        :     :        :              +- Project [c_customer_sk#89]\n         :        :     :        :                 +- Filter isnotnull(c_customer_sk#89)\n         :        :     :        :                    +- Relation spark_catalog.tpcds_100.customer[c_customer_sk#89,c_customer_id#90,c_current_cdemo_sk#91,c_current_hdemo_sk#92,c_current_addr_sk#93,c_first_shipto_date_sk#94,c_first_sales_date_sk#95,c_salutation#96,c_first_name#97,c_last_name#98,c_preferred_cust_flag#99,c_birth_day#100,c_birth_month#101,c_birth_year#102,c_birth_country#103,c_login#104,c_email_address#105,c_last_review_date#106] parquet\n         :        :     :        +- Aggregate [c_customer_sk#481], [c_customer_sk#481, sum((cast(ss_quantity#467 as decimal(10,0)) * ss_sales_price#470)) AS ssales#403]\n         :        :     :           +- Project [ss_quantity#467, ss_sales_price#470, c_customer_sk#481]\n         :        :     :              +- Join Inner, (ss_customer_sk#460 = c_customer_sk#481)\n         :        :     :                 :- LogicalQueryStage Project [ss_customer_sk#460, ss_quantity#467, ss_sales_price#470], ShuffleQueryStage 3\n         :        :     :                 +- LogicalQueryStage Project [c_customer_sk#481], ShuffleQueryStage 4\n         :        :     +- LogicalQueryStage Project [d_date_sk#517], BroadcastQueryStage 5\n         :        +- Join LeftSemi, (c_customer_sk#499 = c_customer_sk#481)\n         :           :- LogicalQueryStage Project [c_customer_sk#499, c_first_name#507, c_last_name#508], ShuffleQueryStage 6\n         :           +- Project [c_customer_sk#481]\n         :              +- Filter (isnotnull(ssales#403) AND (cast(ssales#403 as decimal(38,8)) > (0.950000 * scalar-subquery#404 [])))\n         :                 :  +- Aggregate [max(csales#401) AS tpcds_cmax#402]\n         :                 :     +- Aggregate [c_customer_sk#89], [sum((cast(ss_quantity#416 as decimal(10,0)) * ss_sales_price#419)) AS csales#401]\n         :                 :        +- Project [ss_quantity#416, ss_sales_price#419, c_customer_sk#89]\n         :                 :           +- Join Inner, (ss_customer_sk#409 = c_customer_sk#89)\n         :                 :              :- Project [ss_customer_sk#409, ss_quantity#416, ss_sales_price#419]\n         :                 :              :  +- Join Inner, (ss_sold_date_sk#429 = d_date_sk#430)\n         :                 :              :     :- Project [ss_customer_sk#409, ss_quantity#416, ss_sales_price#419, ss_sold_date_sk#429]\n         :                 :              :     :  +- Filter ((isnotnull(ss_customer_sk#409) AND isnotnull(ss_sold_date_sk#429)) AND dynamicpruning#610 [ss_sold_date_sk#429])\n         :                 :              :     :     :  +- Project [d_date_sk#430]\n         :                 :              :     :     :     +- Filter (d_year#436 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#430))\n         :                 :              :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#430,d_date_id#431,d_date#432,d_month_seq#433,d_week_seq#434,d_quarter_seq#435,d_year#436,d_dow#437,d_moy#438,d_dom#439,d_qoy#440,d_fy_year#441,d_fy_quarter_seq#442,d_fy_week_seq#443,d_day_name#444,d_quarter_name#445,d_holiday#446,d_weekend#447,d_following_holiday#448,d_first_dom#449,d_last_dom#450,d_same_day_ly#451,d_same_day_lq#452,d_current_day#453,... 4 more fields] parquet\n         :                 :              :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#407,ss_item_sk#408,ss_customer_sk#409,ss_cdemo_sk#410,ss_hdemo_sk#411,ss_addr_sk#412,ss_store_sk#413,ss_promo_sk#414,ss_ticket_number#415L,ss_quantity#416,ss_wholesale_cost#417,ss_list_price#418,ss_sales_price#419,ss_ext_discount_amt#420,ss_ext_sales_price#421,ss_ext_wholesale_cost#422,ss_ext_list_price#423,ss_ext_tax#424,ss_coupon_amt#425,ss_net_paid#426,ss_net_paid_inc_tax#427,ss_net_profit#428,ss_sold_date_sk#429] parquet\n         :                 :              :     +- Project [d_date_sk#430]\n         :                 :              :        +- Filter (d_year#436 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#430))\n         :                 :              :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#430,d_date_id#431,d_date#432,d_month_seq#433,d_week_seq#434,d_quarter_seq#435,d_year#436,d_dow#437,d_moy#438,d_dom#439,d_qoy#440,d_fy_year#441,d_fy_quarter_seq#442,d_fy_week_seq#443,d_day_name#444,d_quarter_name#445,d_holiday#446,d_weekend#447,d_following_holiday#448,d_first_dom#449,d_last_dom#450,d_same_day_ly#451,d_same_day_lq#452,d_current_day#453,... 4 more fields] parquet\n         :                 :              +- Project [c_customer_sk#89]\n         :                 :                 +- Filter isnotnull(c_customer_sk#89)\n         :                 :                    +- Relation spark_catalog.tpcds_100.customer[c_customer_sk#89,c_customer_id#90,c_current_cdemo_sk#91,c_current_hdemo_sk#92,c_current_addr_sk#93,c_first_shipto_date_sk#94,c_first_sales_date_sk#95,c_salutation#96,c_first_name#97,c_last_name#98,c_preferred_cust_flag#99,c_birth_day#100,c_birth_month#101,c_birth_year#102,c_birth_country#103,c_login#104,c_email_address#105,c_last_review_date#106] parquet\n         :                 +- Aggregate [c_customer_sk#481], [c_customer_sk#481, sum((cast(ss_quantity#467 as decimal(10,0)) * ss_sales_price#470)) AS ssales#403]\n         :                    +- Project [ss_quantity#467, ss_sales_price#470, c_customer_sk#481]\n         :                       +- Join Inner, (ss_customer_sk#460 = c_customer_sk#481)\n         :                          :- LogicalQueryStage Project [ss_customer_sk#460, ss_quantity#467, ss_sales_price#470], ShuffleQueryStage 8\n         :                          +- LogicalQueryStage Project [c_customer_sk#481], ShuffleQueryStage 10\n         +- Aggregate [c_last_name#554, c_first_name#553], [c_last_name#554, c_first_name#553, sum((cast(ws_quantity#158 as decimal(10,0)) * ws_list_price#160)) AS sales#394]\n            +- Project [ws_quantity#158, ws_list_price#160, c_first_name#553, c_last_name#554]\n               +- Join Inner, (ws_bill_customer_sk#144 = c_customer_sk#545)\n                  :- Project [ws_bill_customer_sk#144, ws_quantity#158, ws_list_price#160]\n                  :  +- Join Inner, (ws_sold_date_sk#174 = d_date_sk#563)\n                  :     :- Join LeftSemi, (ws_bill_customer_sk#144 = c_customer_sk#481)\n                  :     :  :- Project [ws_bill_customer_sk#144, ws_quantity#158, ws_list_price#160, ws_sold_date_sk#174]\n                  :     :  :  +- Join LeftSemi, (ws_item_sk#143 = item_sk#398)\n                  :     :  :     :- LogicalQueryStage Project [ws_item_sk#143, ws_bill_customer_sk#144, ws_quantity#158, ws_list_price#160, ws_sold_date_sk#174], ShuffleQueryStage 11\n                  :     :  :     +- Project [item_sk#398]\n                  :     :  :        +- Filter (cnt#400L > 4)\n                  :     :  :           +- Aggregate [_groupingexpression#608, i_item_sk#67, d_date#41], [i_item_sk#67 AS item_sk#398, count(1) AS cnt#400L]\n                  :     :  :              +- Project [d_date#41, i_item_sk#67, substr(i_item_desc#71, 1, 30) AS _groupingexpression#608]\n                  :     :  :                 +- Join Inner, (ss_item_sk#17 = i_item_sk#67)\n                  :     :  :                    :- LogicalQueryStage Project [ss_item_sk#17, d_date#41], ShuffleQueryStage 30\n                  :     :  :                    +- LogicalQueryStage Project [i_item_sk#67, i_item_desc#71], ShuffleQueryStage 15\n                  :     :  +- Project [c_customer_sk#481]\n                  :     :     +- Filter (isnotnull(ssales#403) AND (cast(ssales#403 as decimal(38,8)) > (0.950000 * scalar-subquery#404 [])))\n                  :     :        :  +- Aggregate [max(csales#401) AS tpcds_cmax#402]\n                  :     :        :     +- Aggregate [c_customer_sk#89], [sum((cast(ss_quantity#416 as decimal(10,0)) * ss_sales_price#419)) AS csales#401]\n                  :     :        :        +- Project [ss_quantity#416, ss_sales_price#419, c_customer_sk#89]\n                  :     :        :           +- Join Inner, (ss_customer_sk#409 = c_customer_sk#89)\n                  :     :        :              :- Project [ss_customer_sk#409, ss_quantity#416, ss_sales_price#419]\n                  :     :        :              :  +- Join Inner, (ss_sold_date_sk#429 = d_date_sk#430)\n                  :     :        :              :     :- Project [ss_customer_sk#409, ss_quantity#416, ss_sales_price#419, ss_sold_date_sk#429]\n                  :     :        :              :     :  +- Filter ((isnotnull(ss_customer_sk#409) AND isnotnull(ss_sold_date_sk#429)) AND dynamicpruning#610 [ss_sold_date_sk#429])\n                  :     :        :              :     :     :  +- Project [d_date_sk#430]\n                  :     :        :              :     :     :     +- Filter (d_year#436 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#430))\n                  :     :        :              :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#430,d_date_id#431,d_date#432,d_month_seq#433,d_week_seq#434,d_quarter_seq#435,d_year#436,d_dow#437,d_moy#438,d_dom#439,d_qoy#440,d_fy_year#441,d_fy_quarter_seq#442,d_fy_week_seq#443,d_day_name#444,d_quarter_name#445,d_holiday#446,d_weekend#447,d_following_holiday#448,d_first_dom#449,d_last_dom#450,d_same_day_ly#451,d_same_day_lq#452,d_current_day#453,... 4 more fields] parquet\n                  :     :        :              :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#407,ss_item_sk#408,ss_customer_sk#409,ss_cdemo_sk#410,ss_hdemo_sk#411,ss_addr_sk#412,ss_store_sk#413,ss_promo_sk#414,ss_ticket_number#415L,ss_quantity#416,ss_wholesale_cost#417,ss_list_price#418,ss_sales_price#419,ss_ext_discount_amt#420,ss_ext_sales_price#421,ss_ext_wholesale_cost#422,ss_ext_list_price#423,ss_ext_tax#424,ss_coupon_amt#425,ss_net_paid#426,ss_net_paid_inc_tax#427,ss_net_profit#428,ss_sold_date_sk#429] parquet\n                  :     :        :              :     +- Project [d_date_sk#430]\n                  :     :        :              :        +- Filter (d_year#436 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#430))\n                  :     :        :              :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#430,d_date_id#431,d_date#432,d_month_seq#433,d_week_seq#434,d_quarter_seq#435,d_year#436,d_dow#437,d_moy#438,d_dom#439,d_qoy#440,d_fy_year#441,d_fy_quarter_seq#442,d_fy_week_seq#443,d_day_name#444,d_quarter_name#445,d_holiday#446,d_weekend#447,d_following_holiday#448,d_first_dom#449,d_last_dom#450,d_same_day_ly#451,d_same_day_lq#452,d_current_day#453,... 4 more fields] parquet\n                  :     :        :              +- Project [c_customer_sk#89]\n                  :     :        :                 +- Filter isnotnull(c_customer_sk#89)\n                  :     :        :                    +- Relation spark_catalog.tpcds_100.customer[c_customer_sk#89,c_customer_id#90,c_current_cdemo_sk#91,c_current_hdemo_sk#92,c_current_addr_sk#93,c_first_shipto_date_sk#94,c_first_sales_date_sk#95,c_salutation#96,c_first_name#97,c_last_name#98,c_preferred_cust_flag#99,c_birth_day#100,c_birth_month#101,c_birth_year#102,c_birth_country#103,c_login#104,c_email_address#105,c_last_review_date#106] parquet\n                  :     :        +- Aggregate [c_customer_sk#481], [c_customer_sk#481, sum((cast(ss_quantity#467 as decimal(10,0)) * ss_sales_price#470)) AS ssales#403]\n                  :     :           +- Project [ss_quantity#467, ss_sales_price#470, c_customer_sk#481]\n                  :     :              +- Join Inner, (ss_customer_sk#460 = c_customer_sk#481)\n                  :     :                 :- LogicalQueryStage Project [ss_customer_sk#460, ss_quantity#467, ss_sales_price#470], ShuffleQueryStage 17\n                  :     :                 +- LogicalQueryStage Project [c_customer_sk#481], ShuffleQueryStage 19\n                  :     +- LogicalQueryStage Project [d_date_sk#563], BroadcastQueryStage 21\n                  +- Join LeftSemi, (c_customer_sk#545 = c_customer_sk#481)\n                     :- LogicalQueryStage Project [c_customer_sk#545, c_first_name#553, c_last_name#554], ShuffleQueryStage 23\n                     +- Project [c_customer_sk#481]\n                        +- Filter (isnotnull(ssales#403) AND (cast(ssales#403 as decimal(38,8)) > (0.950000 * scalar-subquery#404 [])))\n                           :  +- Aggregate [max(csales#401) AS tpcds_cmax#402]\n                           :     +- Aggregate [c_customer_sk#89], [sum((cast(ss_quantity#416 as decimal(10,0)) * ss_sales_price#419)) AS csales#401]\n                           :        +- Project [ss_quantity#416, ss_sales_price#419, c_customer_sk#89]\n                           :           +- Join Inner, (ss_customer_sk#409 = c_customer_sk#89)\n                           :              :- Project [ss_customer_sk#409, ss_quantity#416, ss_sales_price#419]\n                           :              :  +- Join Inner, (ss_sold_date_sk#429 = d_date_sk#430)\n                           :              :     :- Project [ss_customer_sk#409, ss_quantity#416, ss_sales_price#419, ss_sold_date_sk#429]\n                           :              :     :  +- Filter ((isnotnull(ss_customer_sk#409) AND isnotnull(ss_sold_date_sk#429)) AND dynamicpruning#610 [ss_sold_date_sk#429])\n                           :              :     :     :  +- Project [d_date_sk#430]\n                           :              :     :     :     +- Filter (d_year#436 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#430))\n                           :              :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#430,d_date_id#431,d_date#432,d_month_seq#433,d_week_seq#434,d_quarter_seq#435,d_year#436,d_dow#437,d_moy#438,d_dom#439,d_qoy#440,d_fy_year#441,d_fy_quarter_seq#442,d_fy_week_seq#443,d_day_name#444,d_quarter_name#445,d_holiday#446,d_weekend#447,d_following_holiday#448,d_first_dom#449,d_last_dom#450,d_same_day_ly#451,d_same_day_lq#452,d_current_day#453,... 4 more fields] parquet\n                           :              :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#407,ss_item_sk#408,ss_customer_sk#409,ss_cdemo_sk#410,ss_hdemo_sk#411,ss_addr_sk#412,ss_store_sk#413,ss_promo_sk#414,ss_ticket_number#415L,ss_quantity#416,ss_wholesale_cost#417,ss_list_price#418,ss_sales_price#419,ss_ext_discount_amt#420,ss_ext_sales_price#421,ss_ext_wholesale_cost#422,ss_ext_list_price#423,ss_ext_tax#424,ss_coupon_amt#425,ss_net_paid#426,ss_net_paid_inc_tax#427,ss_net_profit#428,ss_sold_date_sk#429] parquet\n                           :              :     +- Project [d_date_sk#430]\n                           :              :        +- Filter (d_year#436 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#430))\n                           :              :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#430,d_date_id#431,d_date#432,d_month_seq#433,d_week_seq#434,d_quarter_seq#435,d_year#436,d_dow#437,d_moy#438,d_dom#439,d_qoy#440,d_fy_year#441,d_fy_quarter_seq#442,d_fy_week_seq#443,d_day_name#444,d_quarter_name#445,d_holiday#446,d_weekend#447,d_following_holiday#448,d_first_dom#449,d_last_dom#450,d_same_day_ly#451,d_same_day_lq#452,d_current_day#453,... 4 more fields] parquet\n                           :              +- Project [c_customer_sk#89]\n                           :                 +- Filter isnotnull(c_customer_sk#89)\n                           :                    +- Relation spark_catalog.tpcds_100.customer[c_customer_sk#89,c_customer_id#90,c_current_cdemo_sk#91,c_current_hdemo_sk#92,c_current_addr_sk#93,c_first_shipto_date_sk#94,c_first_sales_date_sk#95,c_salutation#96,c_first_name#97,c_last_name#98,c_preferred_cust_flag#99,c_birth_day#100,c_birth_month#101,c_birth_year#102,c_birth_country#103,c_login#104,c_email_address#105,c_last_review_date#106] parquet\n                           +- Aggregate [c_customer_sk#481], [c_customer_sk#481, sum((cast(ss_quantity#467 as decimal(10,0)) * ss_sales_price#470)) AS ssales#403]\n                              +- Project [ss_quantity#467, ss_sales_price#470, c_customer_sk#481]\n                                 +- Join Inner, (ss_customer_sk#460 = c_customer_sk#481)\n                                    :- LogicalQueryStage Project [ss_customer_sk#460, ss_quantity#467, ss_sales_price#470], ShuffleQueryStage 25\n                                    +- LogicalQueryStage Project [c_customer_sk#481], ShuffleQueryStage 27\n"
      },
      "IM" : {
        "inputSizeInBytes" : 35387896160,
        "inputRowCount" : 1645922462
      },
      "PD" : {
        "5" : [ 92897, 90784, 103761, 90428, 98316, 97427, 101149, 90784, 84788, 92742, 102014, 97350, 92721, 91819, 94834, 93337, 90456, 91442, 93321, 90784, 92393, 96288, 88877, 91845, 104847, 93804, 94191, 93687, 87972, 94260, 96819, 89988, 101560, 98948, 95408, 96771, 95805, 97937, 94674, 92881, 91931, 90413, 93316, 92721, 91267, 93799, 97785, 93799, 88895, 84890, 104191, 94351, 97233, 94309, 93847, 98364, 96771, 94282, 95322, 95413, 96819, 94834, 93777, 97350, 80847, 96867, 92833, 91315, 101555, 98799, 94791, 91931, 99407, 98316, 91707, 98900, 90497, 108866, 96219, 94743, 94818, 94308, 91470, 93777, 100063, 93407, 96723, 92436, 101000, 91819, 97833, 99813, 94330, 89447, 99282, 102062, 90789, 90301, 99917, 88480, 92281, 98407, 93826, 91267, 97302, 98895, 97446, 99236, 85251, 91931, 91336, 89973, 89378, 99551, 95805, 95317, 90461, 92350, 91358, 98924, 90519, 94260, 99028, 93156, 100474, 96379, 93295, 95226, 96944, 92860, 93337, 97302, 89866, 91336, 90987, 89007, 89973, 99455, 97302, 98799, 102747, 89952, 96288, 99938, 93428, 95301, 92376, 95512, 95274, 95365, 92790, 85795, 95875, 96920, 94308, 92484, 95930, 89093, 97422, 86253, 96219, 102379, 98489, 102784, 96331, 96379, 92371, 93316, 92785, 93916, 94791, 102115, 94469, 96793, 95805, 96867, 89581, 88981, 94399, 98489, 98220, 89472, 93708, 89292, 96336, 95848, 95274, 90875, 94871, 92345, 94834, 92238, 91798, 83153, 95205, 93471, 96422, 89533, 96750, 101101 ],
        "1" : [ 84280, 84280, 84280, 92709, 92709, 84280, 92709, 84280, 76619, 92709, 92709, 84280, 92709, 84280, 84280, 84280, 84280, 84280, 92709, 92709, 92709, 92709, 84280, 84280, 92709, 84280, 84280, 92709, 84280, 92709, 92709, 92709, 92709, 84280, 84280, 92709, 84280, 84280, 84280, 92709, 84280, 84280, 84280, 92709, 92709, 84280, 84280, 84280, 84280, 84280, 92709, 92709, 84280, 84280, 84280, 92709, 92709, 92709, 84280, 84280, 84280, 92709, 84280, 92709, 84280, 92709, 92709, 84280, 92709, 92709, 92709, 84280, 92709, 92709, 84280, 92709, 84280, 92709, 84280, 84280, 92709, 84280, 92709, 84280, 92709, 84280, 84280, 92709, 92709, 84280, 84280, 84280, 92709, 84280, 92709, 92709, 84280, 92709, 92709, 84280, 84280, 92709, 84280, 92709, 92709, 84280, 84280, 92709, 84280, 92709, 84280, 92709, 84280, 92709, 92709, 92709, 76619, 92709, 84280, 84280, 84280, 92709, 92709, 92709, 92709, 92709, 84280, 84280, 92709, 84280, 84280, 84280, 84280, 92709, 84280, 84280, 92709, 92709, 92709, 84280, 84280, 84280, 92709, 92709, 92709, 84280, 84280, 84280, 92709, 84280, 92709, 84280, 92709, 84280, 84280, 92709, 84280, 92709, 84280, 84280, 84280, 92709, 92709, 92709, 84280, 92709, 84280, 84280, 92709, 84280, 84280, 92709, 84280, 84280, 92709, 84280, 84280, 84280, 84280, 84280, 84280, 84280, 92709, 84280, 92709, 92709, 84280, 84280, 84280, 84280, 92709, 84280, 84280, 84280, 84280, 84280, 84280, 84280, 92709, 92709 ],
        "3" : [ 52331, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 57565, 57565, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 57565, 52331, 52331, 52331, 57565, 57565, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 57565, 57565, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 57565, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 57565, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 57565, 57565, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 57565, 57565, 52331, 57565, 52331, 57565, 52331, 57565, 52331, 52331, 57565, 52331, 57565, 57565, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 57565, 57565, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 57565, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 57565, 57565, 52331, 52331, 52331, 52331 ],
        "0" : [ 146748, 148062, 162268, 147121, 156091, 155997, 162866, 145655, 137010, 149774, 166912, 149859, 147977, 148375, 146423, 147452, 146578, 149316, 154962, 146511, 149571, 154021, 147977, 141730, 163713, 148833, 153080, 150257, 141384, 155903, 150342, 142671, 164244, 155997, 151301, 154479, 154962, 155493, 149401, 149097, 146578, 146681, 151386, 149774, 147604, 149486, 162678, 148062, 143527, 135298, 167947, 150342, 155420, 154021, 145324, 154021, 158337, 152139, 156844, 150342, 154021, 152139, 155921, 159761, 133326, 153080, 151750, 147537, 165373, 160292, 151198, 144383, 155988, 152139, 147434, 159184, 141375, 164748, 155514, 149774, 147036, 146663, 150360, 148079, 159351, 149932, 150342, 148545, 160984, 153623, 158504, 163713, 148478, 136672, 156938, 162772, 145324, 146180, 155997, 145239, 151656, 154962, 147036, 150715, 152597, 149774, 158337, 156938, 137450, 150800, 144298, 148460, 142231, 158900, 149774, 159667, 146748, 148918, 146663, 157879, 145324, 150715, 157375, 152224, 154962, 150809, 153080, 158820, 153538, 151198, 152139, 158820, 146095, 148918, 147036, 142671, 141978, 162866, 155056, 155420, 160313, 146596, 150360, 155997, 150885, 157785, 153080, 153538, 153538, 155420, 144951, 134977, 152691, 153165, 151656, 154962, 156455, 141357, 158431, 137944, 155056, 164244, 158820, 162362, 150715, 151814, 151198, 149003, 148375, 153080, 155420, 157879, 149868, 155420, 153165, 153080, 137450, 137528, 152597, 157302, 153538, 141357, 152597, 141044, 152157, 155235, 151826, 146180, 151741, 147977, 152224, 146265, 143442, 136594, 156844, 148833, 149401, 143925, 147977, 160796 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 16,
        "FinishedTasksNum" : 173,
        "FinishedTasksTotalTimeInMs" : 206351.0,
        "FinishedTasksDistributionInMs" : [ 17.0, 826.0, 909.0, 1196.0, 6728.0 ]
      },
      "StartTimeInMs" : 1702226733104,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 137837,
        "IOBytes" : {
          "Total" : 22325380931,
          "Details" : {
            "IR" : 2889814032,
            "IW" : 0,
            "SR" : 12332414216,
            "SW" : 7103152683
          }
        }
      }
    },
    "19" : {
      "LQP" : {
        "operators" : {
          "4" : {
            "sign" : 231958684,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1056,
            "rowCount" : 15,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [c_last_name#508, c_first_name#507], [c_last_name#508, c_first_name#507, sum((cast(cs_quantity#124 as decimal(10,0)) * cs_list_price#126)) AS sales#391], HashAggregate(keys=[c_last_name#508, c_first_name#507], functions=[sum((cast(cs_quantity#124 as decimal(10,0)) * cs_list_price#126))]) "
          },
          "5" : {
            "sign" : 661663567,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1648640717,
            "rowCount" : 27026897,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [c_last_name#554, c_first_name#553], [c_last_name#554, c_first_name#553, sum((cast(ws_quantity#158 as decimal(10,0)) * ws_list_price#160)) AS sales#394], HashAggregate(keys=[c_last_name#554, c_first_name#553], functions=[sum((cast(ws_quantity#158 as decimal(10,0)) * ws_list_price#160))]) "
          },
          "1" : {
            "sign" : -750459048,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
            "sizeInBytes" : 1648641773,
            "rowCount" : 27026912,
            "isRuntime" : false,
            "predicate" : " (unknown) LocalLimit Arguments: 100 "
          },
          "0" : {
            "sign" : -390325571,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
            "sizeInBytes" : 6400,
            "rowCount" : 100,
            "isRuntime" : false,
            "predicate" : " (unknown) GlobalLimit Arguments: 100 "
          },
          "2" : {
            "sign" : 2055363283,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 1648641773,
            "rowCount" : 27026912,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [c_last_name#508 ASC NULLS FIRST, c_first_name#507 ASC NULLS FIRST, sales#391 ASC NULLS FIRST], true "
          },
          "3" : {
            "sign" : 2110138797,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Union",
            "sizeInBytes" : 1648641773,
            "rowCount" : 27026912,
            "isRuntime" : false,
            "predicate" : " (unknown) Union Arguments: false, false "
          }
        },
        "links" : [ {
          "fromId" : 4,
          "fromName" : "LogicalQueryStage",
          "toId" : 3,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "LogicalQueryStage",
          "toId" : 3,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Union",
          "toId" : 2,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "LocalLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "LocalLimit",
          "toId" : 0,
          "toName" : "GlobalLimit",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [c_last_name#508 ASC NULLS FIRST, c_first_name#507 ASC NULLS FIRST, sales#391 ASC NULLS FIRST], true\n      +- Union false, false\n         :- LogicalQueryStage Aggregate [c_last_name#508, c_first_name#507], [c_last_name#508, c_first_name#507, sum((cast(cs_quantity#124 as decimal(10,0)) * cs_list_price#126)) AS sales#391], HashAggregate(keys=[c_last_name#508, c_first_name#507], functions=[sum((cast(cs_quantity#124 as decimal(10,0)) * cs_list_price#126))])\n         +- LogicalQueryStage Aggregate [c_last_name#554, c_first_name#553], [c_last_name#554, c_first_name#553, sum((cast(ws_quantity#158 as decimal(10,0)) * ws_list_price#160)) AS sales#394], HashAggregate(keys=[c_last_name#554, c_first_name#553], functions=[sum((cast(ws_quantity#158 as decimal(10,0)) * ws_list_price#160))])\n"
      },
      "IM" : {
        "inputSizeInBytes" : 1648641773,
        "inputRowCount" : 27026912
      },
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 16,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "StartTimeInMs" : 1702226858792,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 12149,
        "IOBytes" : {
          "Total" : 3569233943,
          "Details" : {
            "IR" : 0,
            "IW" : 0,
            "SR" : 3569233523,
            "SW" : 420
          }
        }
      }
    },
    "4" : {
      "LQP" : {
        "operators" : {
          "45" : {
            "sign" : -350419576,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 23812188,
            "rowCount" : 1984349,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_customer_sk#481] "
          },
          "34" : {
            "sign" : 1565358831,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 39925696056,
            "rowCount" : 262669053,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(ss_customer_sk#409) AND isnotnull(ss_sold_date_sk#429)) AND dynamicpruning#610 [ss_sold_date_sk#429]) "
          },
          "67" : {
            "sign" : 388376503,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 26102424,
            "rowCount" : 204000,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_item_sk#67, i_item_desc#71], ShuffleQueryStage 15 "
          },
          "12" : {
            "sign" : -938487710,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 4561805056,
            "rowCount" : 142556408,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [cs_bill_customer_sk#109, cs_item_sk#121, cs_quantity#124, cs_list_price#126, cs_sold_date_sk#140], ShuffleQueryStage 0 "
          },
          "66" : {
            "sign" : -1070534819,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 4248649360,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ss_item_sk#17, d_date#41], ShuffleQueryStage 30 "
          },
          "51" : {
            "sign" : 1454164637,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 24000000,
            "rowCount" : 2000000,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [c_customer_sk#481], ShuffleQueryStage 10 "
          },
          "84" : {
            "sign" : 1454165815,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 24000000,
            "rowCount" : 2000000,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [c_customer_sk#481], ShuffleQueryStage 27 "
          },
          "8" : {
            "sign" : 1441568544,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 141415956736,
            "rowCount" : 4419248648,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cs_sold_date_sk#140 = d_date_sk#517) "
          },
          "73" : {
            "sign" : 457576007,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 6601125024,
            "rowCount" : 275046876,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ss_customer_sk#460, ss_quantity#467, ss_sales_price#470], ShuffleQueryStage 17 "
          },
          "78" : {
            "sign" : 290084495,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 23812188,
            "rowCount" : 1984349,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_customer_sk#481] "
          },
          "19" : {
            "sign" : 1120906919,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 26102424,
            "rowCount" : 204000,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_item_sk#67, i_item_desc#71], ShuffleQueryStage 2 "
          },
          "23" : {
            "sign" : 1623804386,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 6601054824,
            "rowCount" : 275043951,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_quantity#467, ss_sales_price#470, c_customer_sk#481] "
          },
          "62" : {
            "sign" : 770061938,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 1083405586800000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (cnt#400L > 4) "
          },
          "4" : {
            "sign" : 1365193141,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 1648640717,
            "rowCount" : 27026897,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [c_last_name#508, c_first_name#507], [c_last_name#508, c_first_name#507, sum((cast(cs_quantity#124 as decimal(10,0)) * cs_list_price#126)) AS sales#391] "
          },
          "77" : {
            "sign" : 1358266277,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 98000000,
            "rowCount" : 2000000,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [c_customer_sk#545, c_first_name#553, c_last_name#554], ShuffleQueryStage 23 "
          },
          "40" : {
            "sign" : -337975679,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 500000000,
            "rowCount" : 2000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: isnotnull(c_customer_sk#89) "
          },
          "15" : {
            "sign" : -500295036,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 1083405586800000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [_groupingexpression#608, i_item_sk#67, d_date#41], [i_item_sk#67 AS item_sk#398, count(1) AS cnt#400L] "
          },
          "11" : {
            "sign" : 2111785784,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 4561805056,
            "rowCount" : 142556408,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (cs_item_sk#121 = item_sk#398) "
          },
          "9" : {
            "sign" : -990926960,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 3991579424,
            "rowCount" : 142556408,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (cs_bill_customer_sk#109 = c_customer_sk#481) "
          },
          "44" : {
            "sign" : 435063190,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 98000000,
            "rowCount" : 2000000,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [c_customer_sk#499, c_first_name#507, c_last_name#508], ShuffleQueryStage 6 "
          },
          "33" : {
            "sign" : -861776479,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 7354733484,
            "rowCount" : 262669053,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_customer_sk#409, ss_quantity#416, ss_sales_price#419, ss_sold_date_sk#429] "
          },
          "22" : {
            "sign" : 1934210699,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 55561772,
            "rowCount" : 1984349,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [c_customer_sk#481], [c_customer_sk#481, sum((cast(ss_quantity#467 as decimal(10,0)) * ss_sales_price#470)) AS ssales#403] "
          },
          "56" : {
            "sign" : -2079294392,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 71389876192,
            "rowCount" : 2230933631,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ws_sold_date_sk#174 = d_date_sk#563) "
          },
          "55" : {
            "sign" : 2065671769,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 53542407144,
            "rowCount" : 2230933631,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_bill_customer_sk#144, ws_quantity#158, ws_list_price#160] "
          },
          "26" : {
            "sign" : 739645252,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 24000000,
            "rowCount" : 2000000,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [c_customer_sk#481], ShuffleQueryStage 4 "
          },
          "50" : {
            "sign" : -1093617969,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 6601125024,
            "rowCount" : 275046876,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ss_customer_sk#460, ss_quantity#467, ss_sales_price#470], ShuffleQueryStage 8 "
          },
          "37" : {
            "sign" : 2051540096,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 355962,
            "rowCount" : 1447,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (d_year#436 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#430)) "
          },
          "68" : {
            "sign" : 998370159,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 23812188,
            "rowCount" : 1984349,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_customer_sk#481] "
          },
          "61" : {
            "sign" : 2022277624,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 650043352080000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [item_sk#398] "
          },
          "13" : {
            "sign" : 1981268591,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 650043352080000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [item_sk#398] "
          },
          "46" : {
            "sign" : 789941336,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 55561772,
            "rowCount" : 1984349,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(ssales#403) AND (cast(ssales#403 as decimal(38,8)) > (0.950000 * scalar-subquery#404 []))) "
          },
          "24" : {
            "sign" : 1908847787,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 7701230628,
            "rowCount" : 275043951,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_customer_sk#460 = c_customer_sk#481) "
          },
          "83" : {
            "sign" : 457576906,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 6601125024,
            "rowCount" : 275046876,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ss_customer_sk#460, ss_quantity#467, ss_sales_price#470], ShuffleQueryStage 25 "
          },
          "35" : {
            "sign" : -977156952,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#407, ss_item_sk#408, ss_customer_sk#409, ss_cdemo_sk#410, ss_hdemo_sk#411, ss_addr_sk#412, ss_store_sk#413, ss_promo_sk#414, ss_ticket_number#415L, ss_quantity#416, ss_wholesale_cost#417, ss_list_price#418, ss_sales_price#419, ss_ext_discount_amt#420, ss_ext_sales_price#421, ss_ext_wholesale_cost#422, ss_ext_list_price#423, ss_ext_tax#424, ss_coupon_amt#425, ss_net_paid#426, ss_net_paid_inc_tax#427, ss_net_profit#428, ss_sold_date_sk#429], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "16" : {
            "sign" : -2009662925,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 1950130056240000,
            "rowCount" : 54170279340000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date#41, i_item_sk#67, substr(i_item_desc#71, 1, 30) AS _groupingexpression#608] "
          },
          "79" : {
            "sign" : -639744623,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 55561772,
            "rowCount" : 1984349,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(ssales#403) AND (cast(ssales#403 as decimal(38,8)) > (0.950000 * scalar-subquery#404 []))) "
          },
          "5" : {
            "sign" : -1523964623,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 8150025186,
            "rowCount" : 142982898,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_quantity#124, cs_list_price#126, c_first_name#507, c_last_name#508] "
          },
          "72" : {
            "sign" : 914322748,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 7701230628,
            "rowCount" : 275043951,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_customer_sk#460 = c_customer_sk#481) "
          },
          "10" : {
            "sign" : -1537602824,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 3991579424,
            "rowCount" : 142556408,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_bill_customer_sk#109, cs_quantity#124, cs_list_price#126, cs_sold_date_sk#140] "
          },
          "59" : {
            "sign" : 910944340,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 2302899232,
            "rowCount" : 71965601,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (ws_item_sk#143 = item_sk#398) "
          },
          "48" : {
            "sign" : 47435418,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 6601054824,
            "rowCount" : 275043951,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_quantity#467, ss_sales_price#470, c_customer_sk#481] "
          },
          "21" : {
            "sign" : -1901984732,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 55561772,
            "rowCount" : 1984349,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(ssales#403) AND (cast(ssales#403 as decimal(38,8)) > (0.950000 * scalar-subquery#404 []))) "
          },
          "76" : {
            "sign" : 1645687881,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 98000000,
            "rowCount" : 2000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (c_customer_sk#545 = c_customer_sk#481) "
          },
          "54" : {
            "sign" : 2038011901,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 4702228440,
            "rowCount" : 72341976,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ws_bill_customer_sk#144 = c_customer_sk#545) "
          },
          "43" : {
            "sign" : -528156139,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 98000000,
            "rowCount" : 2000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (c_customer_sk#499 = c_customer_sk#481) "
          },
          "65" : {
            "sign" : -1904280941,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 2166811173600000,
            "rowCount" : 54170279340000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_item_sk#17 = i_item_sk#67) "
          },
          "71" : {
            "sign" : 82168585,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 6601054824,
            "rowCount" : 275043951,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_quantity#467, ss_sales_price#470, c_customer_sk#481] "
          },
          "57" : {
            "sign" : -433298353,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 2015036828,
            "rowCount" : 71965601,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (ws_bill_customer_sk#144 = c_customer_sk#481) "
          },
          "32" : {
            "sign" : 305748262,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 8497298720,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#429 = d_date_sk#430) "
          },
          "80" : {
            "sign" : 2102197308,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 55561772,
            "rowCount" : 1984349,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [c_customer_sk#481], [c_customer_sk#481, sum((cast(ss_quantity#467 as decimal(10,0)) * ss_sales_price#470)) AS ssales#403] "
          },
          "82" : {
            "sign" : -1025989668,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 7701230628,
            "rowCount" : 275043951,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_customer_sk#460 = c_customer_sk#481) "
          },
          "49" : {
            "sign" : -1437901541,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 7701230628,
            "rowCount" : 275043951,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_customer_sk#460 = c_customer_sk#481) "
          },
          "6" : {
            "sign" : 1133093440,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 9293888370,
            "rowCount" : 142982898,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cs_bill_customer_sk#109 = c_customer_sk#499) "
          },
          "36" : {
            "sign" : 1217444409,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 17364,
            "rowCount" : 1447,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#430] "
          },
          "1" : {
            "sign" : -1256479583,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
            "sizeInBytes" : 3297281434,
            "rowCount" : 54053794,
            "isRuntime" : false,
            "predicate" : " (unknown) LocalLimit Arguments: 100 "
          },
          "39" : {
            "sign" : 1085635783,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 24000000,
            "rowCount" : 2000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_customer_sk#89] "
          },
          "17" : {
            "sign" : 566394868,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 2166811173600000,
            "rowCount" : 54170279340000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_item_sk#17 = i_item_sk#67) "
          },
          "25" : {
            "sign" : -1093618124,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 6601125024,
            "rowCount" : 275046876,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ss_customer_sk#460, ss_quantity#467, ss_sales_price#470], ShuffleQueryStage 3 "
          },
          "60" : {
            "sign" : 1832837103,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 2302899232,
            "rowCount" : 71965601,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ws_item_sk#143, ws_bill_customer_sk#144, ws_quantity#158, ws_list_price#160, ws_sold_date_sk#174], ShuffleQueryStage 11 "
          },
          "14" : {
            "sign" : 1045330691,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 1083405586800000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (cnt#400L > 4) "
          },
          "47" : {
            "sign" : 431587195,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 55561772,
            "rowCount" : 1984349,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [c_customer_sk#481], [c_customer_sk#481, sum((cast(ss_quantity#467 as decimal(10,0)) * ss_sales_price#470)) AS ssales#403] "
          },
          "31" : {
            "sign" : 1802383537,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 6372974040,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_customer_sk#409, ss_quantity#416, ss_sales_price#419] "
          },
          "69" : {
            "sign" : -1882899317,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 55561772,
            "rowCount" : 1984349,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(ssales#403) AND (cast(ssales#403 as decimal(38,8)) > (0.950000 * scalar-subquery#404 []))) "
          },
          "58" : {
            "sign" : -1718060309,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 2015036828,
            "rowCount" : 71965601,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_bill_customer_sk#144, ws_quantity#158, ws_list_price#160, ws_sold_date_sk#174] "
          },
          "64" : {
            "sign" : 1825233538,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 1950130056240000,
            "rowCount" : 54170279340000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date#41, i_item_sk#67, substr(i_item_desc#71, 1, 30) AS _groupingexpression#608] "
          },
          "53" : {
            "sign" : 1873577481,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 4123492632,
            "rowCount" : 72341976,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_quantity#158, ws_list_price#160, c_first_name#553, c_last_name#554] "
          },
          "42" : {
            "sign" : 1758754844,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1048824,
            "rowCount" : 31,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#517], BroadcastQueryStage 5 "
          },
          "75" : {
            "sign" : -2138347845,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1048824,
            "rowCount" : 31,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#563], BroadcastQueryStage 21 "
          },
          "0" : {
            "sign" : -616519630,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
            "sizeInBytes" : 6400,
            "rowCount" : 100,
            "isRuntime" : false,
            "predicate" : " (unknown) GlobalLimit Arguments: 100 "
          },
          "20" : {
            "sign" : 2123397918,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 23812188,
            "rowCount" : 1984349,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_customer_sk#481] "
          },
          "27" : {
            "sign" : -582481967,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 24,
            "rowCount" : 1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [max(csales#401) AS tpcds_cmax#402] "
          },
          "70" : {
            "sign" : -1381279908,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 55561772,
            "rowCount" : 1984349,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [c_customer_sk#481], [c_customer_sk#481, sum((cast(ss_quantity#467 as decimal(10,0)) * ss_sales_price#470)) AS ssales#403] "
          },
          "2" : {
            "sign" : -1336807780,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 3297281434,
            "rowCount" : 54053794,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [c_last_name#508 ASC NULLS FIRST, c_first_name#507 ASC NULLS FIRST, sales#391 ASC NULLS FIRST], true "
          },
          "38" : {
            "sign" : -358797686,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#430, d_date_id#431, d_date#432, d_month_seq#433, d_week_seq#434, d_quarter_seq#435, d_year#436, d_dow#437, d_moy#438, d_dom#439, d_qoy#440, d_fy_year#441, d_fy_quarter_seq#442, d_fy_week_seq#443, d_day_name#444, d_quarter_name#445, d_holiday#446, d_weekend#447, d_following_holiday#448, d_first_dom#449, d_last_dom#450, d_same_day_ly#451, d_same_day_lq#452, d_current_day#453, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "81" : {
            "sign" : -2121928113,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 6601054824,
            "rowCount" : 275043951,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_quantity#467, ss_sales_price#470, c_customer_sk#481] "
          },
          "18" : {
            "sign" : -1070535532,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 4248649360,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ss_item_sk#17, d_date#41], ShuffleQueryStage 28 "
          },
          "30" : {
            "sign" : -949612920,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 7701230628,
            "rowCount" : 275043951,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_customer_sk#409 = c_customer_sk#89) "
          },
          "7" : {
            "sign" : -758780695,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 106061967552,
            "rowCount" : 4419248648,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_bill_customer_sk#109, cs_quantity#124, cs_list_price#126] "
          },
          "29" : {
            "sign" : -1338930356,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 6601054824,
            "rowCount" : 275043951,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_quantity#416, ss_sales_price#419, c_customer_sk#89] "
          },
          "41" : {
            "sign" : -576393737,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 500000000,
            "rowCount" : 2000000,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [c_customer_sk#89, c_customer_id#90, c_current_cdemo_sk#91, c_current_hdemo_sk#92, c_current_addr_sk#93, c_first_shipto_date_sk#94, c_first_sales_date_sk#95, c_salutation#96, c_first_name#97, c_last_name#98, c_preferred_cust_flag#99, c_birth_day#100, c_birth_month#101, c_birth_year#102, c_birth_country#103, c_login#104, c_email_address#105, c_last_review_date#106], `spark_catalog`.`tpcds_100`.`customer`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "63" : {
            "sign" : 1782114115,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 1083405586800000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [_groupingexpression#608, i_item_sk#67, d_date#41], [i_item_sk#67 AS item_sk#398, count(1) AS cnt#400L] "
          },
          "3" : {
            "sign" : 225600940,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Union",
            "sizeInBytes" : 3297281434,
            "rowCount" : 54053794,
            "isRuntime" : false,
            "predicate" : " (unknown) Union Arguments: false, false "
          },
          "74" : {
            "sign" : 1454164916,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 24000000,
            "rowCount" : 2000000,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [c_customer_sk#481], ShuffleQueryStage 19 "
          },
          "52" : {
            "sign" : 1307009313,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 1648640717,
            "rowCount" : 27026897,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [c_last_name#554, c_first_name#553], [c_last_name#554, c_first_name#553, sum((cast(ws_quantity#158 as decimal(10,0)) * ws_list_price#160)) AS sales#394] "
          },
          "28" : {
            "sign" : -660295919,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 47624376,
            "rowCount" : 1984349,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [c_customer_sk#89], [sum((cast(ss_quantity#416 as decimal(10,0)) * ss_sales_price#419)) AS csales#401] "
          }
        },
        "links" : [ {
          "fromId" : 12,
          "fromName" : "LogicalQueryStage",
          "toId" : 11,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 18,
          "fromName" : "LogicalQueryStage",
          "toId" : 17,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 19,
          "fromName" : "LogicalQueryStage",
          "toId" : 17,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 17,
          "fromName" : "Join",
          "toId" : 16,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 16,
          "fromName" : "Project",
          "toId" : 15,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 15,
          "fromName" : "Aggregate",
          "toId" : 14,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 14,
          "fromName" : "Filter",
          "toId" : 13,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 13,
          "fromName" : "Project",
          "toId" : 11,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "Join",
          "toId" : 10,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "Project",
          "toId" : 9,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 25,
          "fromName" : "LogicalQueryStage",
          "toId" : 24,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 26,
          "fromName" : "LogicalQueryStage",
          "toId" : 24,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 24,
          "fromName" : "Join",
          "toId" : 23,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 23,
          "fromName" : "Project",
          "toId" : 22,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 22,
          "fromName" : "Aggregate",
          "toId" : 21,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 35,
          "fromName" : "LogicalRelation",
          "toId" : 34,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 38,
          "fromName" : "LogicalRelation",
          "toId" : 37,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 37,
          "fromName" : "Filter",
          "toId" : 36,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 36,
          "fromName" : "Project",
          "toId" : 34,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 34,
          "fromName" : "Filter",
          "toId" : 33,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 33,
          "fromName" : "Project",
          "toId" : 32,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 36,
          "fromName" : "Project",
          "toId" : 32,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 32,
          "fromName" : "Join",
          "toId" : 31,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 31,
          "fromName" : "Project",
          "toId" : 30,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 41,
          "fromName" : "LogicalRelation",
          "toId" : 40,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 40,
          "fromName" : "Filter",
          "toId" : 39,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 39,
          "fromName" : "Project",
          "toId" : 30,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 30,
          "fromName" : "Join",
          "toId" : 29,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 29,
          "fromName" : "Project",
          "toId" : 28,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 28,
          "fromName" : "Aggregate",
          "toId" : 27,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 27,
          "fromName" : "Aggregate",
          "toId" : 21,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 21,
          "fromName" : "Filter",
          "toId" : 20,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 20,
          "fromName" : "Project",
          "toId" : 9,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "Join",
          "toId" : 8,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 42,
          "fromName" : "LogicalQueryStage",
          "toId" : 8,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "Join",
          "toId" : 7,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Project",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 44,
          "fromName" : "LogicalQueryStage",
          "toId" : 43,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 50,
          "fromName" : "LogicalQueryStage",
          "toId" : 49,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 51,
          "fromName" : "LogicalQueryStage",
          "toId" : 49,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 49,
          "fromName" : "Join",
          "toId" : 48,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 48,
          "fromName" : "Project",
          "toId" : 47,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 47,
          "fromName" : "Aggregate",
          "toId" : 46,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 27,
          "fromName" : "Aggregate",
          "toId" : 46,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 46,
          "fromName" : "Filter",
          "toId" : 45,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 45,
          "fromName" : "Project",
          "toId" : 43,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 43,
          "fromName" : "Join",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Join",
          "toId" : 5,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Project",
          "toId" : 4,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Aggregate",
          "toId" : 3,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 60,
          "fromName" : "LogicalQueryStage",
          "toId" : 59,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 66,
          "fromName" : "LogicalQueryStage",
          "toId" : 65,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 67,
          "fromName" : "LogicalQueryStage",
          "toId" : 65,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 65,
          "fromName" : "Join",
          "toId" : 64,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 64,
          "fromName" : "Project",
          "toId" : 63,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 63,
          "fromName" : "Aggregate",
          "toId" : 62,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 62,
          "fromName" : "Filter",
          "toId" : 61,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 61,
          "fromName" : "Project",
          "toId" : 59,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 59,
          "fromName" : "Join",
          "toId" : 58,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 58,
          "fromName" : "Project",
          "toId" : 57,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 73,
          "fromName" : "LogicalQueryStage",
          "toId" : 72,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 74,
          "fromName" : "LogicalQueryStage",
          "toId" : 72,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 72,
          "fromName" : "Join",
          "toId" : 71,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 71,
          "fromName" : "Project",
          "toId" : 70,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 70,
          "fromName" : "Aggregate",
          "toId" : 69,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 27,
          "fromName" : "Aggregate",
          "toId" : 69,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 69,
          "fromName" : "Filter",
          "toId" : 68,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 68,
          "fromName" : "Project",
          "toId" : 57,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 57,
          "fromName" : "Join",
          "toId" : 56,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 75,
          "fromName" : "LogicalQueryStage",
          "toId" : 56,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 56,
          "fromName" : "Join",
          "toId" : 55,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 55,
          "fromName" : "Project",
          "toId" : 54,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 77,
          "fromName" : "LogicalQueryStage",
          "toId" : 76,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 83,
          "fromName" : "LogicalQueryStage",
          "toId" : 82,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 84,
          "fromName" : "LogicalQueryStage",
          "toId" : 82,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 82,
          "fromName" : "Join",
          "toId" : 81,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 81,
          "fromName" : "Project",
          "toId" : 80,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 80,
          "fromName" : "Aggregate",
          "toId" : 79,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 27,
          "fromName" : "Aggregate",
          "toId" : 79,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 79,
          "fromName" : "Filter",
          "toId" : 78,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 78,
          "fromName" : "Project",
          "toId" : 76,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 76,
          "fromName" : "Join",
          "toId" : 54,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 54,
          "fromName" : "Join",
          "toId" : 53,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 53,
          "fromName" : "Project",
          "toId" : 52,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 52,
          "fromName" : "Aggregate",
          "toId" : 3,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Union",
          "toId" : 2,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "LocalLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "LocalLimit",
          "toId" : 0,
          "toName" : "GlobalLimit",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [c_last_name#508 ASC NULLS FIRST, c_first_name#507 ASC NULLS FIRST, sales#391 ASC NULLS FIRST], true\n      +- Union false, false\n         :- Aggregate [c_last_name#508, c_first_name#507], [c_last_name#508, c_first_name#507, sum((cast(cs_quantity#124 as decimal(10,0)) * cs_list_price#126)) AS sales#391]\n         :  +- Project [cs_quantity#124, cs_list_price#126, c_first_name#507, c_last_name#508]\n         :     +- Join Inner, (cs_bill_customer_sk#109 = c_customer_sk#499)\n         :        :- Project [cs_bill_customer_sk#109, cs_quantity#124, cs_list_price#126]\n         :        :  +- Join Inner, (cs_sold_date_sk#140 = d_date_sk#517)\n         :        :     :- Join LeftSemi, (cs_bill_customer_sk#109 = c_customer_sk#481)\n         :        :     :  :- Project [cs_bill_customer_sk#109, cs_quantity#124, cs_list_price#126, cs_sold_date_sk#140]\n         :        :     :  :  +- Join LeftSemi, (cs_item_sk#121 = item_sk#398)\n         :        :     :  :     :- LogicalQueryStage Project [cs_bill_customer_sk#109, cs_item_sk#121, cs_quantity#124, cs_list_price#126, cs_sold_date_sk#140], ShuffleQueryStage 0\n         :        :     :  :     +- Project [item_sk#398]\n         :        :     :  :        +- Filter (cnt#400L > 4)\n         :        :     :  :           +- Aggregate [_groupingexpression#608, i_item_sk#67, d_date#41], [i_item_sk#67 AS item_sk#398, count(1) AS cnt#400L]\n         :        :     :  :              +- Project [d_date#41, i_item_sk#67, substr(i_item_desc#71, 1, 30) AS _groupingexpression#608]\n         :        :     :  :                 +- Join Inner, (ss_item_sk#17 = i_item_sk#67)\n         :        :     :  :                    :- LogicalQueryStage Project [ss_item_sk#17, d_date#41], ShuffleQueryStage 28\n         :        :     :  :                    +- LogicalQueryStage Project [i_item_sk#67, i_item_desc#71], ShuffleQueryStage 2\n         :        :     :  +- Project [c_customer_sk#481]\n         :        :     :     +- Filter (isnotnull(ssales#403) AND (cast(ssales#403 as decimal(38,8)) > (0.950000 * scalar-subquery#404 [])))\n         :        :     :        :  +- Aggregate [max(csales#401) AS tpcds_cmax#402]\n         :        :     :        :     +- Aggregate [c_customer_sk#89], [sum((cast(ss_quantity#416 as decimal(10,0)) * ss_sales_price#419)) AS csales#401]\n         :        :     :        :        +- Project [ss_quantity#416, ss_sales_price#419, c_customer_sk#89]\n         :        :     :        :           +- Join Inner, (ss_customer_sk#409 = c_customer_sk#89)\n         :        :     :        :              :- Project [ss_customer_sk#409, ss_quantity#416, ss_sales_price#419]\n         :        :     :        :              :  +- Join Inner, (ss_sold_date_sk#429 = d_date_sk#430)\n         :        :     :        :              :     :- Project [ss_customer_sk#409, ss_quantity#416, ss_sales_price#419, ss_sold_date_sk#429]\n         :        :     :        :              :     :  +- Filter ((isnotnull(ss_customer_sk#409) AND isnotnull(ss_sold_date_sk#429)) AND dynamicpruning#610 [ss_sold_date_sk#429])\n         :        :     :        :              :     :     :  +- Project [d_date_sk#430]\n         :        :     :        :              :     :     :     +- Filter (d_year#436 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#430))\n         :        :     :        :              :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#430,d_date_id#431,d_date#432,d_month_seq#433,d_week_seq#434,d_quarter_seq#435,d_year#436,d_dow#437,d_moy#438,d_dom#439,d_qoy#440,d_fy_year#441,d_fy_quarter_seq#442,d_fy_week_seq#443,d_day_name#444,d_quarter_name#445,d_holiday#446,d_weekend#447,d_following_holiday#448,d_first_dom#449,d_last_dom#450,d_same_day_ly#451,d_same_day_lq#452,d_current_day#453,... 4 more fields] parquet\n         :        :     :        :              :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#407,ss_item_sk#408,ss_customer_sk#409,ss_cdemo_sk#410,ss_hdemo_sk#411,ss_addr_sk#412,ss_store_sk#413,ss_promo_sk#414,ss_ticket_number#415L,ss_quantity#416,ss_wholesale_cost#417,ss_list_price#418,ss_sales_price#419,ss_ext_discount_amt#420,ss_ext_sales_price#421,ss_ext_wholesale_cost#422,ss_ext_list_price#423,ss_ext_tax#424,ss_coupon_amt#425,ss_net_paid#426,ss_net_paid_inc_tax#427,ss_net_profit#428,ss_sold_date_sk#429] parquet\n         :        :     :        :              :     +- Project [d_date_sk#430]\n         :        :     :        :              :        +- Filter (d_year#436 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#430))\n         :        :     :        :              :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#430,d_date_id#431,d_date#432,d_month_seq#433,d_week_seq#434,d_quarter_seq#435,d_year#436,d_dow#437,d_moy#438,d_dom#439,d_qoy#440,d_fy_year#441,d_fy_quarter_seq#442,d_fy_week_seq#443,d_day_name#444,d_quarter_name#445,d_holiday#446,d_weekend#447,d_following_holiday#448,d_first_dom#449,d_last_dom#450,d_same_day_ly#451,d_same_day_lq#452,d_current_day#453,... 4 more fields] parquet\n         :        :     :        :              +- Project [c_customer_sk#89]\n         :        :     :        :                 +- Filter isnotnull(c_customer_sk#89)\n         :        :     :        :                    +- Relation spark_catalog.tpcds_100.customer[c_customer_sk#89,c_customer_id#90,c_current_cdemo_sk#91,c_current_hdemo_sk#92,c_current_addr_sk#93,c_first_shipto_date_sk#94,c_first_sales_date_sk#95,c_salutation#96,c_first_name#97,c_last_name#98,c_preferred_cust_flag#99,c_birth_day#100,c_birth_month#101,c_birth_year#102,c_birth_country#103,c_login#104,c_email_address#105,c_last_review_date#106] parquet\n         :        :     :        +- Aggregate [c_customer_sk#481], [c_customer_sk#481, sum((cast(ss_quantity#467 as decimal(10,0)) * ss_sales_price#470)) AS ssales#403]\n         :        :     :           +- Project [ss_quantity#467, ss_sales_price#470, c_customer_sk#481]\n         :        :     :              +- Join Inner, (ss_customer_sk#460 = c_customer_sk#481)\n         :        :     :                 :- LogicalQueryStage Project [ss_customer_sk#460, ss_quantity#467, ss_sales_price#470], ShuffleQueryStage 3\n         :        :     :                 +- LogicalQueryStage Project [c_customer_sk#481], ShuffleQueryStage 4\n         :        :     +- LogicalQueryStage Project [d_date_sk#517], BroadcastQueryStage 5\n         :        +- Join LeftSemi, (c_customer_sk#499 = c_customer_sk#481)\n         :           :- LogicalQueryStage Project [c_customer_sk#499, c_first_name#507, c_last_name#508], ShuffleQueryStage 6\n         :           +- Project [c_customer_sk#481]\n         :              +- Filter (isnotnull(ssales#403) AND (cast(ssales#403 as decimal(38,8)) > (0.950000 * scalar-subquery#404 [])))\n         :                 :  +- Aggregate [max(csales#401) AS tpcds_cmax#402]\n         :                 :     +- Aggregate [c_customer_sk#89], [sum((cast(ss_quantity#416 as decimal(10,0)) * ss_sales_price#419)) AS csales#401]\n         :                 :        +- Project [ss_quantity#416, ss_sales_price#419, c_customer_sk#89]\n         :                 :           +- Join Inner, (ss_customer_sk#409 = c_customer_sk#89)\n         :                 :              :- Project [ss_customer_sk#409, ss_quantity#416, ss_sales_price#419]\n         :                 :              :  +- Join Inner, (ss_sold_date_sk#429 = d_date_sk#430)\n         :                 :              :     :- Project [ss_customer_sk#409, ss_quantity#416, ss_sales_price#419, ss_sold_date_sk#429]\n         :                 :              :     :  +- Filter ((isnotnull(ss_customer_sk#409) AND isnotnull(ss_sold_date_sk#429)) AND dynamicpruning#610 [ss_sold_date_sk#429])\n         :                 :              :     :     :  +- Project [d_date_sk#430]\n         :                 :              :     :     :     +- Filter (d_year#436 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#430))\n         :                 :              :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#430,d_date_id#431,d_date#432,d_month_seq#433,d_week_seq#434,d_quarter_seq#435,d_year#436,d_dow#437,d_moy#438,d_dom#439,d_qoy#440,d_fy_year#441,d_fy_quarter_seq#442,d_fy_week_seq#443,d_day_name#444,d_quarter_name#445,d_holiday#446,d_weekend#447,d_following_holiday#448,d_first_dom#449,d_last_dom#450,d_same_day_ly#451,d_same_day_lq#452,d_current_day#453,... 4 more fields] parquet\n         :                 :              :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#407,ss_item_sk#408,ss_customer_sk#409,ss_cdemo_sk#410,ss_hdemo_sk#411,ss_addr_sk#412,ss_store_sk#413,ss_promo_sk#414,ss_ticket_number#415L,ss_quantity#416,ss_wholesale_cost#417,ss_list_price#418,ss_sales_price#419,ss_ext_discount_amt#420,ss_ext_sales_price#421,ss_ext_wholesale_cost#422,ss_ext_list_price#423,ss_ext_tax#424,ss_coupon_amt#425,ss_net_paid#426,ss_net_paid_inc_tax#427,ss_net_profit#428,ss_sold_date_sk#429] parquet\n         :                 :              :     +- Project [d_date_sk#430]\n         :                 :              :        +- Filter (d_year#436 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#430))\n         :                 :              :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#430,d_date_id#431,d_date#432,d_month_seq#433,d_week_seq#434,d_quarter_seq#435,d_year#436,d_dow#437,d_moy#438,d_dom#439,d_qoy#440,d_fy_year#441,d_fy_quarter_seq#442,d_fy_week_seq#443,d_day_name#444,d_quarter_name#445,d_holiday#446,d_weekend#447,d_following_holiday#448,d_first_dom#449,d_last_dom#450,d_same_day_ly#451,d_same_day_lq#452,d_current_day#453,... 4 more fields] parquet\n         :                 :              +- Project [c_customer_sk#89]\n         :                 :                 +- Filter isnotnull(c_customer_sk#89)\n         :                 :                    +- Relation spark_catalog.tpcds_100.customer[c_customer_sk#89,c_customer_id#90,c_current_cdemo_sk#91,c_current_hdemo_sk#92,c_current_addr_sk#93,c_first_shipto_date_sk#94,c_first_sales_date_sk#95,c_salutation#96,c_first_name#97,c_last_name#98,c_preferred_cust_flag#99,c_birth_day#100,c_birth_month#101,c_birth_year#102,c_birth_country#103,c_login#104,c_email_address#105,c_last_review_date#106] parquet\n         :                 +- Aggregate [c_customer_sk#481], [c_customer_sk#481, sum((cast(ss_quantity#467 as decimal(10,0)) * ss_sales_price#470)) AS ssales#403]\n         :                    +- Project [ss_quantity#467, ss_sales_price#470, c_customer_sk#481]\n         :                       +- Join Inner, (ss_customer_sk#460 = c_customer_sk#481)\n         :                          :- LogicalQueryStage Project [ss_customer_sk#460, ss_quantity#467, ss_sales_price#470], ShuffleQueryStage 8\n         :                          +- LogicalQueryStage Project [c_customer_sk#481], ShuffleQueryStage 10\n         +- Aggregate [c_last_name#554, c_first_name#553], [c_last_name#554, c_first_name#553, sum((cast(ws_quantity#158 as decimal(10,0)) * ws_list_price#160)) AS sales#394]\n            +- Project [ws_quantity#158, ws_list_price#160, c_first_name#553, c_last_name#554]\n               +- Join Inner, (ws_bill_customer_sk#144 = c_customer_sk#545)\n                  :- Project [ws_bill_customer_sk#144, ws_quantity#158, ws_list_price#160]\n                  :  +- Join Inner, (ws_sold_date_sk#174 = d_date_sk#563)\n                  :     :- Join LeftSemi, (ws_bill_customer_sk#144 = c_customer_sk#481)\n                  :     :  :- Project [ws_bill_customer_sk#144, ws_quantity#158, ws_list_price#160, ws_sold_date_sk#174]\n                  :     :  :  +- Join LeftSemi, (ws_item_sk#143 = item_sk#398)\n                  :     :  :     :- LogicalQueryStage Project [ws_item_sk#143, ws_bill_customer_sk#144, ws_quantity#158, ws_list_price#160, ws_sold_date_sk#174], ShuffleQueryStage 11\n                  :     :  :     +- Project [item_sk#398]\n                  :     :  :        +- Filter (cnt#400L > 4)\n                  :     :  :           +- Aggregate [_groupingexpression#608, i_item_sk#67, d_date#41], [i_item_sk#67 AS item_sk#398, count(1) AS cnt#400L]\n                  :     :  :              +- Project [d_date#41, i_item_sk#67, substr(i_item_desc#71, 1, 30) AS _groupingexpression#608]\n                  :     :  :                 +- Join Inner, (ss_item_sk#17 = i_item_sk#67)\n                  :     :  :                    :- LogicalQueryStage Project [ss_item_sk#17, d_date#41], ShuffleQueryStage 30\n                  :     :  :                    +- LogicalQueryStage Project [i_item_sk#67, i_item_desc#71], ShuffleQueryStage 15\n                  :     :  +- Project [c_customer_sk#481]\n                  :     :     +- Filter (isnotnull(ssales#403) AND (cast(ssales#403 as decimal(38,8)) > (0.950000 * scalar-subquery#404 [])))\n                  :     :        :  +- Aggregate [max(csales#401) AS tpcds_cmax#402]\n                  :     :        :     +- Aggregate [c_customer_sk#89], [sum((cast(ss_quantity#416 as decimal(10,0)) * ss_sales_price#419)) AS csales#401]\n                  :     :        :        +- Project [ss_quantity#416, ss_sales_price#419, c_customer_sk#89]\n                  :     :        :           +- Join Inner, (ss_customer_sk#409 = c_customer_sk#89)\n                  :     :        :              :- Project [ss_customer_sk#409, ss_quantity#416, ss_sales_price#419]\n                  :     :        :              :  +- Join Inner, (ss_sold_date_sk#429 = d_date_sk#430)\n                  :     :        :              :     :- Project [ss_customer_sk#409, ss_quantity#416, ss_sales_price#419, ss_sold_date_sk#429]\n                  :     :        :              :     :  +- Filter ((isnotnull(ss_customer_sk#409) AND isnotnull(ss_sold_date_sk#429)) AND dynamicpruning#610 [ss_sold_date_sk#429])\n                  :     :        :              :     :     :  +- Project [d_date_sk#430]\n                  :     :        :              :     :     :     +- Filter (d_year#436 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#430))\n                  :     :        :              :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#430,d_date_id#431,d_date#432,d_month_seq#433,d_week_seq#434,d_quarter_seq#435,d_year#436,d_dow#437,d_moy#438,d_dom#439,d_qoy#440,d_fy_year#441,d_fy_quarter_seq#442,d_fy_week_seq#443,d_day_name#444,d_quarter_name#445,d_holiday#446,d_weekend#447,d_following_holiday#448,d_first_dom#449,d_last_dom#450,d_same_day_ly#451,d_same_day_lq#452,d_current_day#453,... 4 more fields] parquet\n                  :     :        :              :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#407,ss_item_sk#408,ss_customer_sk#409,ss_cdemo_sk#410,ss_hdemo_sk#411,ss_addr_sk#412,ss_store_sk#413,ss_promo_sk#414,ss_ticket_number#415L,ss_quantity#416,ss_wholesale_cost#417,ss_list_price#418,ss_sales_price#419,ss_ext_discount_amt#420,ss_ext_sales_price#421,ss_ext_wholesale_cost#422,ss_ext_list_price#423,ss_ext_tax#424,ss_coupon_amt#425,ss_net_paid#426,ss_net_paid_inc_tax#427,ss_net_profit#428,ss_sold_date_sk#429] parquet\n                  :     :        :              :     +- Project [d_date_sk#430]\n                  :     :        :              :        +- Filter (d_year#436 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#430))\n                  :     :        :              :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#430,d_date_id#431,d_date#432,d_month_seq#433,d_week_seq#434,d_quarter_seq#435,d_year#436,d_dow#437,d_moy#438,d_dom#439,d_qoy#440,d_fy_year#441,d_fy_quarter_seq#442,d_fy_week_seq#443,d_day_name#444,d_quarter_name#445,d_holiday#446,d_weekend#447,d_following_holiday#448,d_first_dom#449,d_last_dom#450,d_same_day_ly#451,d_same_day_lq#452,d_current_day#453,... 4 more fields] parquet\n                  :     :        :              +- Project [c_customer_sk#89]\n                  :     :        :                 +- Filter isnotnull(c_customer_sk#89)\n                  :     :        :                    +- Relation spark_catalog.tpcds_100.customer[c_customer_sk#89,c_customer_id#90,c_current_cdemo_sk#91,c_current_hdemo_sk#92,c_current_addr_sk#93,c_first_shipto_date_sk#94,c_first_sales_date_sk#95,c_salutation#96,c_first_name#97,c_last_name#98,c_preferred_cust_flag#99,c_birth_day#100,c_birth_month#101,c_birth_year#102,c_birth_country#103,c_login#104,c_email_address#105,c_last_review_date#106] parquet\n                  :     :        +- Aggregate [c_customer_sk#481], [c_customer_sk#481, sum((cast(ss_quantity#467 as decimal(10,0)) * ss_sales_price#470)) AS ssales#403]\n                  :     :           +- Project [ss_quantity#467, ss_sales_price#470, c_customer_sk#481]\n                  :     :              +- Join Inner, (ss_customer_sk#460 = c_customer_sk#481)\n                  :     :                 :- LogicalQueryStage Project [ss_customer_sk#460, ss_quantity#467, ss_sales_price#470], ShuffleQueryStage 17\n                  :     :                 +- LogicalQueryStage Project [c_customer_sk#481], ShuffleQueryStage 19\n                  :     +- LogicalQueryStage Project [d_date_sk#563], BroadcastQueryStage 21\n                  +- Join LeftSemi, (c_customer_sk#545 = c_customer_sk#481)\n                     :- LogicalQueryStage Project [c_customer_sk#545, c_first_name#553, c_last_name#554], ShuffleQueryStage 23\n                     +- Project [c_customer_sk#481]\n                        +- Filter (isnotnull(ssales#403) AND (cast(ssales#403 as decimal(38,8)) > (0.950000 * scalar-subquery#404 [])))\n                           :  +- Aggregate [max(csales#401) AS tpcds_cmax#402]\n                           :     +- Aggregate [c_customer_sk#89], [sum((cast(ss_quantity#416 as decimal(10,0)) * ss_sales_price#419)) AS csales#401]\n                           :        +- Project [ss_quantity#416, ss_sales_price#419, c_customer_sk#89]\n                           :           +- Join Inner, (ss_customer_sk#409 = c_customer_sk#89)\n                           :              :- Project [ss_customer_sk#409, ss_quantity#416, ss_sales_price#419]\n                           :              :  +- Join Inner, (ss_sold_date_sk#429 = d_date_sk#430)\n                           :              :     :- Project [ss_customer_sk#409, ss_quantity#416, ss_sales_price#419, ss_sold_date_sk#429]\n                           :              :     :  +- Filter ((isnotnull(ss_customer_sk#409) AND isnotnull(ss_sold_date_sk#429)) AND dynamicpruning#610 [ss_sold_date_sk#429])\n                           :              :     :     :  +- Project [d_date_sk#430]\n                           :              :     :     :     +- Filter (d_year#436 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#430))\n                           :              :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#430,d_date_id#431,d_date#432,d_month_seq#433,d_week_seq#434,d_quarter_seq#435,d_year#436,d_dow#437,d_moy#438,d_dom#439,d_qoy#440,d_fy_year#441,d_fy_quarter_seq#442,d_fy_week_seq#443,d_day_name#444,d_quarter_name#445,d_holiday#446,d_weekend#447,d_following_holiday#448,d_first_dom#449,d_last_dom#450,d_same_day_ly#451,d_same_day_lq#452,d_current_day#453,... 4 more fields] parquet\n                           :              :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#407,ss_item_sk#408,ss_customer_sk#409,ss_cdemo_sk#410,ss_hdemo_sk#411,ss_addr_sk#412,ss_store_sk#413,ss_promo_sk#414,ss_ticket_number#415L,ss_quantity#416,ss_wholesale_cost#417,ss_list_price#418,ss_sales_price#419,ss_ext_discount_amt#420,ss_ext_sales_price#421,ss_ext_wholesale_cost#422,ss_ext_list_price#423,ss_ext_tax#424,ss_coupon_amt#425,ss_net_paid#426,ss_net_paid_inc_tax#427,ss_net_profit#428,ss_sold_date_sk#429] parquet\n                           :              :     +- Project [d_date_sk#430]\n                           :              :        +- Filter (d_year#436 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#430))\n                           :              :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#430,d_date_id#431,d_date#432,d_month_seq#433,d_week_seq#434,d_quarter_seq#435,d_year#436,d_dow#437,d_moy#438,d_dom#439,d_qoy#440,d_fy_year#441,d_fy_quarter_seq#442,d_fy_week_seq#443,d_day_name#444,d_quarter_name#445,d_holiday#446,d_weekend#447,d_following_holiday#448,d_first_dom#449,d_last_dom#450,d_same_day_ly#451,d_same_day_lq#452,d_current_day#453,... 4 more fields] parquet\n                           :              +- Project [c_customer_sk#89]\n                           :                 +- Filter isnotnull(c_customer_sk#89)\n                           :                    +- Relation spark_catalog.tpcds_100.customer[c_customer_sk#89,c_customer_id#90,c_current_cdemo_sk#91,c_current_hdemo_sk#92,c_current_addr_sk#93,c_first_shipto_date_sk#94,c_first_sales_date_sk#95,c_salutation#96,c_first_name#97,c_last_name#98,c_preferred_cust_flag#99,c_birth_day#100,c_birth_month#101,c_birth_year#102,c_birth_country#103,c_login#104,c_email_address#105,c_last_review_date#106] parquet\n                           +- Aggregate [c_customer_sk#481], [c_customer_sk#481, sum((cast(ss_quantity#467 as decimal(10,0)) * ss_sales_price#470)) AS ssales#403]\n                              +- Project [ss_quantity#467, ss_sales_price#470, c_customer_sk#481]\n                                 +- Join Inner, (ss_customer_sk#460 = c_customer_sk#481)\n                                    :- LogicalQueryStage Project [ss_customer_sk#460, ss_quantity#467, ss_sales_price#470], ShuffleQueryStage 25\n                                    +- LogicalQueryStage Project [c_customer_sk#481], ShuffleQueryStage 27\n"
      },
      "IM" : {
        "inputSizeInBytes" : 42112805600,
        "inputRowCount" : 1858198745
      },
      "PD" : {
        "1" : [ 84280, 84280, 84280, 92709, 92709, 84280, 92709, 84280, 76619, 92709, 92709, 84280, 92709, 84280, 84280, 84280, 84280, 84280, 92709, 92709, 92709, 92709, 84280, 84280, 92709, 84280, 84280, 92709, 84280, 92709, 92709, 92709, 92709, 84280, 84280, 92709, 84280, 84280, 84280, 92709, 84280, 84280, 84280, 92709, 92709, 84280, 84280, 84280, 84280, 84280, 92709, 92709, 84280, 84280, 84280, 92709, 92709, 92709, 84280, 84280, 84280, 92709, 84280, 92709, 84280, 92709, 92709, 84280, 92709, 92709, 92709, 84280, 92709, 92709, 84280, 92709, 84280, 92709, 84280, 84280, 92709, 84280, 92709, 84280, 92709, 84280, 84280, 92709, 92709, 84280, 84280, 84280, 92709, 84280, 92709, 92709, 84280, 92709, 92709, 84280, 84280, 92709, 84280, 92709, 92709, 84280, 84280, 92709, 84280, 92709, 84280, 92709, 84280, 92709, 92709, 92709, 76619, 92709, 84280, 84280, 84280, 92709, 92709, 92709, 92709, 92709, 84280, 84280, 92709, 84280, 84280, 84280, 84280, 92709, 84280, 84280, 92709, 92709, 92709, 84280, 84280, 84280, 92709, 92709, 92709, 84280, 84280, 84280, 92709, 84280, 92709, 84280, 92709, 84280, 84280, 92709, 84280, 92709, 84280, 84280, 84280, 92709, 92709, 92709, 84280, 92709, 84280, 84280, 92709, 84280, 84280, 92709, 84280, 84280, 92709, 84280, 84280, 84280, 84280, 84280, 84280, 84280, 92709, 84280, 92709, 92709, 84280, 84280, 84280, 84280, 92709, 84280, 84280, 84280, 84280, 84280, 84280, 84280, 92709, 92709 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 16,
        "FinishedTasksNum" : 4,
        "FinishedTasksTotalTimeInMs" : 9813.0,
        "FinishedTasksDistributionInMs" : [ 1765.0, 1791.0, 1797.0, 4460.0, 4460.0 ]
      },
      "StartTimeInMs" : 1702226717440,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 153501,
        "IOBytes" : {
          "Total" : 22413875936,
          "Details" : {
            "IR" : 2921069097,
            "IW" : 0,
            "SR" : 12332414216,
            "SW" : 7160392623
          }
        }
      }
    },
    "15" : {
      "LQP" : {
        "operators" : {
          "12" : {
            "sign" : -575386677,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1060264,
            "rowCount" : 1461,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#430], BroadcastQueryStage 0 "
          },
          "8" : {
            "sign" : -977156952,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#407, ss_item_sk#408, ss_customer_sk#409, ss_cdemo_sk#410, ss_hdemo_sk#411, ss_addr_sk#412, ss_store_sk#413, ss_promo_sk#414, ss_ticket_number#415L, ss_quantity#416, ss_wholesale_cost#417, ss_list_price#418, ss_sales_price#419, ss_ext_discount_amt#420, ss_ext_sales_price#421, ss_ext_wholesale_cost#422, ss_ext_list_price#423, ss_ext_tax#424, ss_coupon_amt#425, ss_net_paid#426, ss_net_paid_inc_tax#427, ss_net_profit#428, ss_sold_date_sk#429], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "4" : {
            "sign" : 976687427,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 9210227674392,
            "rowCount" : 383759486433,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_customer_sk#409, ss_quantity#416, ss_sales_price#419] "
          },
          "15" : {
            "sign" : -576393737,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 500000000,
            "rowCount" : 2000000,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [c_customer_sk#89, c_customer_id#90, c_current_cdemo_sk#91, c_current_hdemo_sk#92, c_current_addr_sk#93, c_first_shipto_date_sk#94, c_first_sales_date_sk#95, c_salutation#96, c_first_name#97, c_last_name#98, c_preferred_cust_flag#99, c_birth_day#100, c_birth_month#101, c_birth_year#102, c_birth_country#103, c_login#104, c_email_address#105, c_last_review_date#106], `spark_catalog`.`tpcds_100`.`customer`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "11" : {
            "sign" : -358797686,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#430, d_date_id#431, d_date#432, d_month_seq#433, d_week_seq#434, d_quarter_seq#435, d_year#436, d_dow#437, d_moy#438, d_dom#439, d_qoy#440, d_fy_year#441, d_fy_quarter_seq#442, d_fy_week_seq#443, d_day_name#444, d_quarter_name#445, d_holiday#446, d_weekend#447, d_following_holiday#448, d_first_dom#449, d_last_dom#450, d_same_day_ly#451, d_same_day_lq#452, d_current_day#453, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "9" : {
            "sign" : 1217444409,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 17364,
            "rowCount" : 1447,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#430] "
          },
          "13" : {
            "sign" : 1085635783,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 24000000,
            "rowCount" : 2000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_customer_sk#89] "
          },
          "5" : {
            "sign" : -472159612,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 12280303565856,
            "rowCount" : 383759486433,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#429 = d_date_sk#430) "
          },
          "10" : {
            "sign" : 2051540096,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 355962,
            "rowCount" : 1447,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (d_year#436 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#430)) "
          },
          "6" : {
            "sign" : -861776479,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 7354733484,
            "rowCount" : 262669053,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_customer_sk#409, ss_quantity#416, ss_sales_price#419, ss_sold_date_sk#429] "
          },
          "1" : {
            "sign" : 1776708647,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 47624376,
            "rowCount" : 1984349,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [c_customer_sk#89], [sum((cast(ss_quantity#416 as decimal(10,0)) * ss_sales_price#419)) AS csales#401] "
          },
          "14" : {
            "sign" : -337975679,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 500000000,
            "rowCount" : 2000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: isnotnull(c_customer_sk#89) "
          },
          "0" : {
            "sign" : -126193565,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 24,
            "rowCount" : 1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [max(csales#401) AS tpcds_cmax#402] "
          },
          "2" : {
            "sign" : 681509662,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 6601054824,
            "rowCount" : 275043951,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_quantity#416, ss_sales_price#419, c_customer_sk#89] "
          },
          "7" : {
            "sign" : 1565358831,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 39925696056,
            "rowCount" : 262669053,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(ss_customer_sk#409) AND isnotnull(ss_sold_date_sk#429)) AND dynamicpruning#610 [ss_sold_date_sk#429]) "
          },
          "3" : {
            "sign" : -1729765986,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 7701230628,
            "rowCount" : 275043951,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_customer_sk#409 = c_customer_sk#89) "
          }
        },
        "links" : [ {
          "fromId" : 8,
          "fromName" : "LogicalRelation",
          "toId" : 7,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "LogicalRelation",
          "toId" : 10,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "Filter",
          "toId" : 9,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "Project",
          "toId" : 7,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 7,
          "fromName" : "Filter",
          "toId" : 6,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Project",
          "toId" : 5,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 12,
          "fromName" : "LogicalQueryStage",
          "toId" : 5,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Join",
          "toId" : 4,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Project",
          "toId" : 3,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 15,
          "fromName" : "LogicalRelation",
          "toId" : 14,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 14,
          "fromName" : "Filter",
          "toId" : 13,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 13,
          "fromName" : "Project",
          "toId" : 3,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Join",
          "toId" : 2,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Project",
          "toId" : 1,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Aggregate",
          "toId" : 0,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Aggregate [max(csales#401) AS tpcds_cmax#402]\n+- Aggregate [c_customer_sk#89], [sum((cast(ss_quantity#416 as decimal(10,0)) * ss_sales_price#419)) AS csales#401]\n   +- Project [ss_quantity#416, ss_sales_price#419, c_customer_sk#89]\n      +- Join Inner, (ss_customer_sk#409 = c_customer_sk#89)\n         :- Project [ss_customer_sk#409, ss_quantity#416, ss_sales_price#419]\n         :  +- Join Inner, (ss_sold_date_sk#429 = d_date_sk#430)\n         :     :- Project [ss_customer_sk#409, ss_quantity#416, ss_sales_price#419, ss_sold_date_sk#429]\n         :     :  +- Filter ((isnotnull(ss_customer_sk#409) AND isnotnull(ss_sold_date_sk#429)) AND dynamicpruning#610 [ss_sold_date_sk#429])\n         :     :     :  +- Project [d_date_sk#430]\n         :     :     :     +- Filter (d_year#436 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#430))\n         :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#430,d_date_id#431,d_date#432,d_month_seq#433,d_week_seq#434,d_quarter_seq#435,d_year#436,d_dow#437,d_moy#438,d_dom#439,d_qoy#440,d_fy_year#441,d_fy_quarter_seq#442,d_fy_week_seq#443,d_day_name#444,d_quarter_name#445,d_holiday#446,d_weekend#447,d_following_holiday#448,d_first_dom#449,d_last_dom#450,d_same_day_ly#451,d_same_day_lq#452,d_current_day#453,... 4 more fields] parquet\n         :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#407,ss_item_sk#408,ss_customer_sk#409,ss_cdemo_sk#410,ss_hdemo_sk#411,ss_addr_sk#412,ss_store_sk#413,ss_promo_sk#414,ss_ticket_number#415L,ss_quantity#416,ss_wholesale_cost#417,ss_list_price#418,ss_sales_price#419,ss_ext_discount_amt#420,ss_ext_sales_price#421,ss_ext_wholesale_cost#422,ss_ext_list_price#423,ss_ext_tax#424,ss_coupon_amt#425,ss_net_paid#426,ss_net_paid_inc_tax#427,ss_net_profit#428,ss_sold_date_sk#429] parquet\n         :     +- LogicalQueryStage Project [d_date_sk#430], BroadcastQueryStage 0\n         +- Project [c_customer_sk#89]\n            +- Filter isnotnull(c_customer_sk#89)\n               +- Relation spark_catalog.tpcds_100.customer[c_customer_sk#89,c_customer_id#90,c_current_cdemo_sk#91,c_current_hdemo_sk#92,c_current_addr_sk#93,c_first_shipto_date_sk#94,c_first_sales_date_sk#95,c_salutation#96,c_first_name#97,c_last_name#98,c_preferred_cust_flag#99,c_birth_day#100,c_birth_month#101,c_birth_year#102,c_birth_country#103,c_login#104,c_email_address#105,c_last_review_date#106] parquet\n"
      },
      "IM" : {
        "inputSizeInBytes" : 42307953920,
        "inputRowCount" : 277046814
      },
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 14,
        "FinishedTasksNum" : 6,
        "FinishedTasksTotalTimeInMs" : 158478.0,
        "FinishedTasksDistributionInMs" : [ 25727.0, 26185.0, 26335.0, 26878.0, 27024.0 ]
      },
      "StartTimeInMs" : 1702226804069,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 66872,
        "IOBytes" : {
          "Total" : 14521909931,
          "Details" : {
            "IR" : 853591299,
            "IW" : 0,
            "SR" : 11102321120,
            "SW" : 2565997512
          }
        }
      }
    },
    "11" : {
      "LQP" : {
        "operators" : {
          "45" : {
            "sign" : -350419576,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 6601125024000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_customer_sk#481] "
          },
          "34" : {
            "sign" : 1565358831,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 39925696056,
            "rowCount" : 262669053,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(ss_customer_sk#409) AND isnotnull(ss_sold_date_sk#429)) AND dynamicpruning#610 [ss_sold_date_sk#429]) "
          },
          "67" : {
            "sign" : 388376503,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 26102424,
            "rowCount" : 204000,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_item_sk#67, i_item_desc#71], ShuffleQueryStage 15 "
          },
          "12" : {
            "sign" : -938487710,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 67361424,
            "rowCount" : 1403363,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [cs_bill_customer_sk#109, cs_item_sk#121, cs_quantity#124, cs_list_price#126, cs_sold_date_sk#140], ShuffleQueryStage 0 "
          },
          "66" : {
            "sign" : -1070534819,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 4248649360,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ss_item_sk#17, d_date#41], ShuffleQueryStage 30 "
          },
          "51" : {
            "sign" : 1454164637,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 32000000,
            "rowCount" : 2000000,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [c_customer_sk#481], ShuffleQueryStage 10 "
          },
          "84" : {
            "sign" : 1454165815,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 32000000,
            "rowCount" : 2000000,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [c_customer_sk#481], ShuffleQueryStage 27 "
          },
          "8" : {
            "sign" : 1441568544,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 1392136096,
            "rowCount" : 43504253,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cs_sold_date_sk#140 = d_date_sk#517) "
          },
          "73" : {
            "sign" : 457576007,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 8801500032,
            "rowCount" : 275046876,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ss_customer_sk#460, ss_quantity#467, ss_sales_price#470], ShuffleQueryStage 17 "
          },
          "78" : {
            "sign" : 290084495,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 6601125024000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_customer_sk#481] "
          },
          "19" : {
            "sign" : 1120906919,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 26102424,
            "rowCount" : 204000,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_item_sk#67, i_item_desc#71], ShuffleQueryStage 2 "
          },
          "23" : {
            "sign" : 1623804386,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 13202250048000000,
            "rowCount" : 550093752000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_quantity#467, ss_sales_price#470, c_customer_sk#481] "
          },
          "62" : {
            "sign" : 770061938,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 1083405586800000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (cnt#400L > 4) "
          },
          "4" : {
            "sign" : 1365193141,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 5568544384000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [c_last_name#508, c_first_name#507], [c_last_name#508, c_first_name#507, sum((cast(cs_quantity#124 as decimal(10,0)) * cs_list_price#126)) AS sales#391] "
          },
          "77" : {
            "sign" : 1358266277,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 96527848,
            "rowCount" : 2000000,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [c_customer_sk#545, c_first_name#553, c_last_name#554], ShuffleQueryStage 23 "
          },
          "40" : {
            "sign" : -337975679,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 500000000,
            "rowCount" : 2000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: isnotnull(c_customer_sk#89) "
          },
          "15" : {
            "sign" : -500295036,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 1083405586800000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [_groupingexpression#608, i_item_sk#67, d_date#41], [i_item_sk#67 AS item_sk#398, count(1) AS cnt#400L] "
          },
          "11" : {
            "sign" : 2111785784,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 44907616,
            "rowCount" : 1403363,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (cs_item_sk#121 = item_sk#398) "
          },
          "9" : {
            "sign" : -990926960,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 39294164,
            "rowCount" : 1403363,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (cs_bill_customer_sk#109 = c_customer_sk#481) "
          },
          "44" : {
            "sign" : 435063190,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 96527848,
            "rowCount" : 2000000,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [c_customer_sk#499, c_first_name#507, c_last_name#508], ShuffleQueryStage 6 "
          },
          "33" : {
            "sign" : -861776479,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 7354733484,
            "rowCount" : 262669053,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_customer_sk#409, ss_quantity#416, ss_sales_price#419, ss_sold_date_sk#429] "
          },
          "22" : {
            "sign" : 1934210699,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 15402625056000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [c_customer_sk#481], [c_customer_sk#481, sum((cast(ss_quantity#467 as decimal(10,0)) * ss_sales_price#470)) AS ssales#403] "
          },
          "56" : {
            "sign" : -2079294392,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 835624096,
            "rowCount" : 26113253,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ws_sold_date_sk#174 = d_date_sk#563) "
          },
          "55" : {
            "sign" : 2065671769,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 626718072,
            "rowCount" : 26113253,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_bill_customer_sk#144, ws_quantity#158, ws_list_price#160] "
          },
          "26" : {
            "sign" : 739645252,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 32000000,
            "rowCount" : 2000000,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [c_customer_sk#481], ShuffleQueryStage 4 "
          },
          "50" : {
            "sign" : -1093617969,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 8801500032,
            "rowCount" : 275046876,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ss_customer_sk#460, ss_quantity#467, ss_sales_price#470], ShuffleQueryStage 8 "
          },
          "37" : {
            "sign" : 2051540096,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 355962,
            "rowCount" : 1447,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (d_year#436 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#430)) "
          },
          "68" : {
            "sign" : 998370159,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 6601125024000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_customer_sk#481] "
          },
          "61" : {
            "sign" : 2022277624,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 650043352080000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [item_sk#398] "
          },
          "13" : {
            "sign" : 1981268591,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 650043352080000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [item_sk#398] "
          },
          "46" : {
            "sign" : 789941336,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 15402625056000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(ssales#403) AND (cast(ssales#403 as decimal(38,8)) > (0.950000 * scalar-subquery#404 []))) "
          },
          "24" : {
            "sign" : 1908847787,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 15402625056000000,
            "rowCount" : 550093752000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_customer_sk#460 = c_customer_sk#481) "
          },
          "83" : {
            "sign" : 457576906,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 8801500032,
            "rowCount" : 275046876,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ss_customer_sk#460, ss_quantity#467, ss_sales_price#470], ShuffleQueryStage 25 "
          },
          "35" : {
            "sign" : -977156952,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#407, ss_item_sk#408, ss_customer_sk#409, ss_cdemo_sk#410, ss_hdemo_sk#411, ss_addr_sk#412, ss_store_sk#413, ss_promo_sk#414, ss_ticket_number#415L, ss_quantity#416, ss_wholesale_cost#417, ss_list_price#418, ss_sales_price#419, ss_ext_discount_amt#420, ss_ext_sales_price#421, ss_ext_wholesale_cost#422, ss_ext_list_price#423, ss_ext_tax#424, ss_coupon_amt#425, ss_net_paid#426, ss_net_paid_inc_tax#427, ss_net_profit#428, ss_sold_date_sk#429], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "16" : {
            "sign" : -2009662925,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 1950130056240000,
            "rowCount" : 54170279340000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date#41, i_item_sk#67, substr(i_item_desc#71, 1, 30) AS _groupingexpression#608] "
          },
          "79" : {
            "sign" : -639744623,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 15402625056000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(ssales#403) AND (cast(ssales#403 as decimal(38,8)) > (0.950000 * scalar-subquery#404 []))) "
          },
          "5" : {
            "sign" : -1523964623,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 5220510360000000,
            "rowCount" : 87008506000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_quantity#124, cs_list_price#126, c_first_name#507, c_last_name#508] "
          },
          "72" : {
            "sign" : 914322748,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 15402625056000000,
            "rowCount" : 550093752000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_customer_sk#460 = c_customer_sk#481) "
          },
          "10" : {
            "sign" : -1537602824,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 39294164,
            "rowCount" : 1403363,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_bill_customer_sk#109, cs_quantity#124, cs_list_price#126, cs_sold_date_sk#140] "
          },
          "59" : {
            "sign" : 910944340,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 26955616,
            "rowCount" : 842363,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (ws_item_sk#143 = item_sk#398) "
          },
          "48" : {
            "sign" : 47435418,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 13202250048000000,
            "rowCount" : 550093752000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_quantity#467, ss_sales_price#470, c_customer_sk#481] "
          },
          "21" : {
            "sign" : -1901984732,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 15402625056000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(ssales#403) AND (cast(ssales#403 as decimal(38,8)) > (0.950000 * scalar-subquery#404 []))) "
          },
          "76" : {
            "sign" : 1645687881,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 104000000,
            "rowCount" : 2000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (c_customer_sk#545 = c_customer_sk#481) "
          },
          "54" : {
            "sign" : 2038011901,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 3551402408000000,
            "rowCount" : 52226506000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ws_bill_customer_sk#144 = c_customer_sk#545) "
          },
          "43" : {
            "sign" : -528156139,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 104000000,
            "rowCount" : 2000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (c_customer_sk#499 = c_customer_sk#481) "
          },
          "65" : {
            "sign" : -1904280941,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 2166811173600000,
            "rowCount" : 54170279340000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_item_sk#17 = i_item_sk#67) "
          },
          "71" : {
            "sign" : 82168585,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 13202250048000000,
            "rowCount" : 550093752000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_quantity#467, ss_sales_price#470, c_customer_sk#481] "
          },
          "57" : {
            "sign" : -433298353,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 23586164,
            "rowCount" : 842363,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (ws_bill_customer_sk#144 = c_customer_sk#481) "
          },
          "32" : {
            "sign" : 305748262,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 8497298720,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#429 = d_date_sk#430) "
          },
          "80" : {
            "sign" : 2102197308,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 15402625056000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [c_customer_sk#481], [c_customer_sk#481, sum((cast(ss_quantity#467 as decimal(10,0)) * ss_sales_price#470)) AS ssales#403] "
          },
          "82" : {
            "sign" : -1025989668,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 15402625056000000,
            "rowCount" : 550093752000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_customer_sk#460 = c_customer_sk#481) "
          },
          "49" : {
            "sign" : -1437901541,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 15402625056000000,
            "rowCount" : 550093752000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_customer_sk#460 = c_customer_sk#481) "
          },
          "6" : {
            "sign" : 1133093440,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 5916578408000000,
            "rowCount" : 87008506000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cs_bill_customer_sk#109 = c_customer_sk#499) "
          },
          "36" : {
            "sign" : 1217444409,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 17364,
            "rowCount" : 1447,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#430] "
          },
          "1" : {
            "sign" : -1256479583,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
            "sizeInBytes" : 8911040768000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) LocalLimit Arguments: 100 "
          },
          "39" : {
            "sign" : 1085635783,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 24000000,
            "rowCount" : 2000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_customer_sk#89] "
          },
          "17" : {
            "sign" : 566394868,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 2166811173600000,
            "rowCount" : 54170279340000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_item_sk#17 = i_item_sk#67) "
          },
          "25" : {
            "sign" : -1093618124,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 8801500032,
            "rowCount" : 275046876,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ss_customer_sk#460, ss_quantity#467, ss_sales_price#470], ShuffleQueryStage 3 "
          },
          "60" : {
            "sign" : 1832837103,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 40433424,
            "rowCount" : 842363,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ws_item_sk#143, ws_bill_customer_sk#144, ws_quantity#158, ws_list_price#160, ws_sold_date_sk#174], ShuffleQueryStage 11 "
          },
          "14" : {
            "sign" : 1045330691,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 1083405586800000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (cnt#400L > 4) "
          },
          "47" : {
            "sign" : 431587195,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 15402625056000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [c_customer_sk#481], [c_customer_sk#481, sum((cast(ss_quantity#467 as decimal(10,0)) * ss_sales_price#470)) AS ssales#403] "
          },
          "31" : {
            "sign" : 1802383537,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 6372974040,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_customer_sk#409, ss_quantity#416, ss_sales_price#419] "
          },
          "69" : {
            "sign" : -1882899317,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 15402625056000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(ssales#403) AND (cast(ssales#403 as decimal(38,8)) > (0.950000 * scalar-subquery#404 []))) "
          },
          "58" : {
            "sign" : -1718060309,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 23586164,
            "rowCount" : 842363,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_bill_customer_sk#144, ws_quantity#158, ws_list_price#160, ws_sold_date_sk#174] "
          },
          "64" : {
            "sign" : 1825233538,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 1950130056240000,
            "rowCount" : 54170279340000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date#41, i_item_sk#67, substr(i_item_desc#71, 1, 30) AS _groupingexpression#608] "
          },
          "53" : {
            "sign" : 1873577481,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 3133590360000000,
            "rowCount" : 52226506000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_quantity#158, ws_list_price#160, c_first_name#553, c_last_name#554] "
          },
          "42" : {
            "sign" : 1758754844,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1048824,
            "rowCount" : 31,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#517], BroadcastQueryStage 5 "
          },
          "75" : {
            "sign" : -2138347845,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1048824,
            "rowCount" : 31,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#563], BroadcastQueryStage 21 "
          },
          "0" : {
            "sign" : -616519630,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
            "sizeInBytes" : 6400,
            "rowCount" : 100,
            "isRuntime" : false,
            "predicate" : " (unknown) GlobalLimit Arguments: 100 "
          },
          "20" : {
            "sign" : 2123397918,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 6601125024000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_customer_sk#481] "
          },
          "27" : {
            "sign" : -582481967,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 24,
            "rowCount" : 1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [max(csales#401) AS tpcds_cmax#402] "
          },
          "70" : {
            "sign" : -1381279908,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 15402625056000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [c_customer_sk#481], [c_customer_sk#481, sum((cast(ss_quantity#467 as decimal(10,0)) * ss_sales_price#470)) AS ssales#403] "
          },
          "2" : {
            "sign" : -1336807780,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 8911040768000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [c_last_name#508 ASC NULLS FIRST, c_first_name#507 ASC NULLS FIRST, sales#391 ASC NULLS FIRST], true "
          },
          "38" : {
            "sign" : -358797686,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#430, d_date_id#431, d_date#432, d_month_seq#433, d_week_seq#434, d_quarter_seq#435, d_year#436, d_dow#437, d_moy#438, d_dom#439, d_qoy#440, d_fy_year#441, d_fy_quarter_seq#442, d_fy_week_seq#443, d_day_name#444, d_quarter_name#445, d_holiday#446, d_weekend#447, d_following_holiday#448, d_first_dom#449, d_last_dom#450, d_same_day_ly#451, d_same_day_lq#452, d_current_day#453, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "81" : {
            "sign" : -2121928113,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 13202250048000000,
            "rowCount" : 550093752000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_quantity#467, ss_sales_price#470, c_customer_sk#481] "
          },
          "18" : {
            "sign" : -1070535532,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 4248649360,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ss_item_sk#17, d_date#41], ShuffleQueryStage 28 "
          },
          "30" : {
            "sign" : -949612920,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 7701230628,
            "rowCount" : 275043951,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_customer_sk#409 = c_customer_sk#89) "
          },
          "7" : {
            "sign" : -758780695,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 1044102072,
            "rowCount" : 43504253,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_bill_customer_sk#109, cs_quantity#124, cs_list_price#126] "
          },
          "29" : {
            "sign" : -1338930356,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 6601054824,
            "rowCount" : 275043951,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_quantity#416, ss_sales_price#419, c_customer_sk#89] "
          },
          "41" : {
            "sign" : -576393737,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 500000000,
            "rowCount" : 2000000,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [c_customer_sk#89, c_customer_id#90, c_current_cdemo_sk#91, c_current_hdemo_sk#92, c_current_addr_sk#93, c_first_shipto_date_sk#94, c_first_sales_date_sk#95, c_salutation#96, c_first_name#97, c_last_name#98, c_preferred_cust_flag#99, c_birth_day#100, c_birth_month#101, c_birth_year#102, c_birth_country#103, c_login#104, c_email_address#105, c_last_review_date#106], `spark_catalog`.`tpcds_100`.`customer`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "63" : {
            "sign" : 1782114115,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 1083405586800000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [_groupingexpression#608, i_item_sk#67, d_date#41], [i_item_sk#67 AS item_sk#398, count(1) AS cnt#400L] "
          },
          "3" : {
            "sign" : 225600940,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Union",
            "sizeInBytes" : 8911040768000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Union Arguments: false, false "
          },
          "74" : {
            "sign" : 1454164916,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 32000000,
            "rowCount" : 2000000,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [c_customer_sk#481], ShuffleQueryStage 19 "
          },
          "52" : {
            "sign" : 1307009313,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 3342496384000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [c_last_name#554, c_first_name#553], [c_last_name#554, c_first_name#553, sum((cast(ws_quantity#158 as decimal(10,0)) * ws_list_price#160)) AS sales#394] "
          },
          "28" : {
            "sign" : -660295919,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 47624376,
            "rowCount" : 1984349,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [c_customer_sk#89], [sum((cast(ss_quantity#416 as decimal(10,0)) * ss_sales_price#419)) AS csales#401] "
          }
        },
        "links" : [ {
          "fromId" : 12,
          "fromName" : "LogicalQueryStage",
          "toId" : 11,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 18,
          "fromName" : "LogicalQueryStage",
          "toId" : 17,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 19,
          "fromName" : "LogicalQueryStage",
          "toId" : 17,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 17,
          "fromName" : "Join",
          "toId" : 16,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 16,
          "fromName" : "Project",
          "toId" : 15,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 15,
          "fromName" : "Aggregate",
          "toId" : 14,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 14,
          "fromName" : "Filter",
          "toId" : 13,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 13,
          "fromName" : "Project",
          "toId" : 11,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "Join",
          "toId" : 10,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "Project",
          "toId" : 9,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 25,
          "fromName" : "LogicalQueryStage",
          "toId" : 24,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 26,
          "fromName" : "LogicalQueryStage",
          "toId" : 24,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 24,
          "fromName" : "Join",
          "toId" : 23,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 23,
          "fromName" : "Project",
          "toId" : 22,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 22,
          "fromName" : "Aggregate",
          "toId" : 21,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 35,
          "fromName" : "LogicalRelation",
          "toId" : 34,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 38,
          "fromName" : "LogicalRelation",
          "toId" : 37,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 37,
          "fromName" : "Filter",
          "toId" : 36,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 36,
          "fromName" : "Project",
          "toId" : 34,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 34,
          "fromName" : "Filter",
          "toId" : 33,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 33,
          "fromName" : "Project",
          "toId" : 32,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 36,
          "fromName" : "Project",
          "toId" : 32,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 32,
          "fromName" : "Join",
          "toId" : 31,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 31,
          "fromName" : "Project",
          "toId" : 30,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 41,
          "fromName" : "LogicalRelation",
          "toId" : 40,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 40,
          "fromName" : "Filter",
          "toId" : 39,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 39,
          "fromName" : "Project",
          "toId" : 30,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 30,
          "fromName" : "Join",
          "toId" : 29,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 29,
          "fromName" : "Project",
          "toId" : 28,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 28,
          "fromName" : "Aggregate",
          "toId" : 27,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 27,
          "fromName" : "Aggregate",
          "toId" : 21,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 21,
          "fromName" : "Filter",
          "toId" : 20,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 20,
          "fromName" : "Project",
          "toId" : 9,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "Join",
          "toId" : 8,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 42,
          "fromName" : "LogicalQueryStage",
          "toId" : 8,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "Join",
          "toId" : 7,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Project",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 44,
          "fromName" : "LogicalQueryStage",
          "toId" : 43,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 50,
          "fromName" : "LogicalQueryStage",
          "toId" : 49,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 51,
          "fromName" : "LogicalQueryStage",
          "toId" : 49,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 49,
          "fromName" : "Join",
          "toId" : 48,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 48,
          "fromName" : "Project",
          "toId" : 47,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 47,
          "fromName" : "Aggregate",
          "toId" : 46,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 27,
          "fromName" : "Aggregate",
          "toId" : 46,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 46,
          "fromName" : "Filter",
          "toId" : 45,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 45,
          "fromName" : "Project",
          "toId" : 43,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 43,
          "fromName" : "Join",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Join",
          "toId" : 5,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Project",
          "toId" : 4,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Aggregate",
          "toId" : 3,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 60,
          "fromName" : "LogicalQueryStage",
          "toId" : 59,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 66,
          "fromName" : "LogicalQueryStage",
          "toId" : 65,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 67,
          "fromName" : "LogicalQueryStage",
          "toId" : 65,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 65,
          "fromName" : "Join",
          "toId" : 64,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 64,
          "fromName" : "Project",
          "toId" : 63,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 63,
          "fromName" : "Aggregate",
          "toId" : 62,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 62,
          "fromName" : "Filter",
          "toId" : 61,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 61,
          "fromName" : "Project",
          "toId" : 59,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 59,
          "fromName" : "Join",
          "toId" : 58,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 58,
          "fromName" : "Project",
          "toId" : 57,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 73,
          "fromName" : "LogicalQueryStage",
          "toId" : 72,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 74,
          "fromName" : "LogicalQueryStage",
          "toId" : 72,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 72,
          "fromName" : "Join",
          "toId" : 71,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 71,
          "fromName" : "Project",
          "toId" : 70,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 70,
          "fromName" : "Aggregate",
          "toId" : 69,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 27,
          "fromName" : "Aggregate",
          "toId" : 69,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 69,
          "fromName" : "Filter",
          "toId" : 68,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 68,
          "fromName" : "Project",
          "toId" : 57,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 57,
          "fromName" : "Join",
          "toId" : 56,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 75,
          "fromName" : "LogicalQueryStage",
          "toId" : 56,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 56,
          "fromName" : "Join",
          "toId" : 55,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 55,
          "fromName" : "Project",
          "toId" : 54,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 77,
          "fromName" : "LogicalQueryStage",
          "toId" : 76,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 83,
          "fromName" : "LogicalQueryStage",
          "toId" : 82,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 84,
          "fromName" : "LogicalQueryStage",
          "toId" : 82,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 82,
          "fromName" : "Join",
          "toId" : 81,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 81,
          "fromName" : "Project",
          "toId" : 80,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 80,
          "fromName" : "Aggregate",
          "toId" : 79,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 27,
          "fromName" : "Aggregate",
          "toId" : 79,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 79,
          "fromName" : "Filter",
          "toId" : 78,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 78,
          "fromName" : "Project",
          "toId" : 76,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 76,
          "fromName" : "Join",
          "toId" : 54,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 54,
          "fromName" : "Join",
          "toId" : 53,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 53,
          "fromName" : "Project",
          "toId" : 52,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 52,
          "fromName" : "Aggregate",
          "toId" : 3,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Union",
          "toId" : 2,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "LocalLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "LocalLimit",
          "toId" : 0,
          "toName" : "GlobalLimit",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [c_last_name#508 ASC NULLS FIRST, c_first_name#507 ASC NULLS FIRST, sales#391 ASC NULLS FIRST], true\n      +- Union false, false\n         :- Aggregate [c_last_name#508, c_first_name#507], [c_last_name#508, c_first_name#507, sum((cast(cs_quantity#124 as decimal(10,0)) * cs_list_price#126)) AS sales#391]\n         :  +- Project [cs_quantity#124, cs_list_price#126, c_first_name#507, c_last_name#508]\n         :     +- Join Inner, (cs_bill_customer_sk#109 = c_customer_sk#499)\n         :        :- Project [cs_bill_customer_sk#109, cs_quantity#124, cs_list_price#126]\n         :        :  +- Join Inner, (cs_sold_date_sk#140 = d_date_sk#517)\n         :        :     :- Join LeftSemi, (cs_bill_customer_sk#109 = c_customer_sk#481)\n         :        :     :  :- Project [cs_bill_customer_sk#109, cs_quantity#124, cs_list_price#126, cs_sold_date_sk#140]\n         :        :     :  :  +- Join LeftSemi, (cs_item_sk#121 = item_sk#398)\n         :        :     :  :     :- LogicalQueryStage Project [cs_bill_customer_sk#109, cs_item_sk#121, cs_quantity#124, cs_list_price#126, cs_sold_date_sk#140], ShuffleQueryStage 0\n         :        :     :  :     +- Project [item_sk#398]\n         :        :     :  :        +- Filter (cnt#400L > 4)\n         :        :     :  :           +- Aggregate [_groupingexpression#608, i_item_sk#67, d_date#41], [i_item_sk#67 AS item_sk#398, count(1) AS cnt#400L]\n         :        :     :  :              +- Project [d_date#41, i_item_sk#67, substr(i_item_desc#71, 1, 30) AS _groupingexpression#608]\n         :        :     :  :                 +- Join Inner, (ss_item_sk#17 = i_item_sk#67)\n         :        :     :  :                    :- LogicalQueryStage Project [ss_item_sk#17, d_date#41], ShuffleQueryStage 28\n         :        :     :  :                    +- LogicalQueryStage Project [i_item_sk#67, i_item_desc#71], ShuffleQueryStage 2\n         :        :     :  +- Project [c_customer_sk#481]\n         :        :     :     +- Filter (isnotnull(ssales#403) AND (cast(ssales#403 as decimal(38,8)) > (0.950000 * scalar-subquery#404 [])))\n         :        :     :        :  +- Aggregate [max(csales#401) AS tpcds_cmax#402]\n         :        :     :        :     +- Aggregate [c_customer_sk#89], [sum((cast(ss_quantity#416 as decimal(10,0)) * ss_sales_price#419)) AS csales#401]\n         :        :     :        :        +- Project [ss_quantity#416, ss_sales_price#419, c_customer_sk#89]\n         :        :     :        :           +- Join Inner, (ss_customer_sk#409 = c_customer_sk#89)\n         :        :     :        :              :- Project [ss_customer_sk#409, ss_quantity#416, ss_sales_price#419]\n         :        :     :        :              :  +- Join Inner, (ss_sold_date_sk#429 = d_date_sk#430)\n         :        :     :        :              :     :- Project [ss_customer_sk#409, ss_quantity#416, ss_sales_price#419, ss_sold_date_sk#429]\n         :        :     :        :              :     :  +- Filter ((isnotnull(ss_customer_sk#409) AND isnotnull(ss_sold_date_sk#429)) AND dynamicpruning#610 [ss_sold_date_sk#429])\n         :        :     :        :              :     :     :  +- Project [d_date_sk#430]\n         :        :     :        :              :     :     :     +- Filter (d_year#436 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#430))\n         :        :     :        :              :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#430,d_date_id#431,d_date#432,d_month_seq#433,d_week_seq#434,d_quarter_seq#435,d_year#436,d_dow#437,d_moy#438,d_dom#439,d_qoy#440,d_fy_year#441,d_fy_quarter_seq#442,d_fy_week_seq#443,d_day_name#444,d_quarter_name#445,d_holiday#446,d_weekend#447,d_following_holiday#448,d_first_dom#449,d_last_dom#450,d_same_day_ly#451,d_same_day_lq#452,d_current_day#453,... 4 more fields] parquet\n         :        :     :        :              :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#407,ss_item_sk#408,ss_customer_sk#409,ss_cdemo_sk#410,ss_hdemo_sk#411,ss_addr_sk#412,ss_store_sk#413,ss_promo_sk#414,ss_ticket_number#415L,ss_quantity#416,ss_wholesale_cost#417,ss_list_price#418,ss_sales_price#419,ss_ext_discount_amt#420,ss_ext_sales_price#421,ss_ext_wholesale_cost#422,ss_ext_list_price#423,ss_ext_tax#424,ss_coupon_amt#425,ss_net_paid#426,ss_net_paid_inc_tax#427,ss_net_profit#428,ss_sold_date_sk#429] parquet\n         :        :     :        :              :     +- Project [d_date_sk#430]\n         :        :     :        :              :        +- Filter (d_year#436 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#430))\n         :        :     :        :              :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#430,d_date_id#431,d_date#432,d_month_seq#433,d_week_seq#434,d_quarter_seq#435,d_year#436,d_dow#437,d_moy#438,d_dom#439,d_qoy#440,d_fy_year#441,d_fy_quarter_seq#442,d_fy_week_seq#443,d_day_name#444,d_quarter_name#445,d_holiday#446,d_weekend#447,d_following_holiday#448,d_first_dom#449,d_last_dom#450,d_same_day_ly#451,d_same_day_lq#452,d_current_day#453,... 4 more fields] parquet\n         :        :     :        :              +- Project [c_customer_sk#89]\n         :        :     :        :                 +- Filter isnotnull(c_customer_sk#89)\n         :        :     :        :                    +- Relation spark_catalog.tpcds_100.customer[c_customer_sk#89,c_customer_id#90,c_current_cdemo_sk#91,c_current_hdemo_sk#92,c_current_addr_sk#93,c_first_shipto_date_sk#94,c_first_sales_date_sk#95,c_salutation#96,c_first_name#97,c_last_name#98,c_preferred_cust_flag#99,c_birth_day#100,c_birth_month#101,c_birth_year#102,c_birth_country#103,c_login#104,c_email_address#105,c_last_review_date#106] parquet\n         :        :     :        +- Aggregate [c_customer_sk#481], [c_customer_sk#481, sum((cast(ss_quantity#467 as decimal(10,0)) * ss_sales_price#470)) AS ssales#403]\n         :        :     :           +- Project [ss_quantity#467, ss_sales_price#470, c_customer_sk#481]\n         :        :     :              +- Join Inner, (ss_customer_sk#460 = c_customer_sk#481)\n         :        :     :                 :- LogicalQueryStage Project [ss_customer_sk#460, ss_quantity#467, ss_sales_price#470], ShuffleQueryStage 3\n         :        :     :                 +- LogicalQueryStage Project [c_customer_sk#481], ShuffleQueryStage 4\n         :        :     +- LogicalQueryStage Project [d_date_sk#517], BroadcastQueryStage 5\n         :        +- Join LeftSemi, (c_customer_sk#499 = c_customer_sk#481)\n         :           :- LogicalQueryStage Project [c_customer_sk#499, c_first_name#507, c_last_name#508], ShuffleQueryStage 6\n         :           +- Project [c_customer_sk#481]\n         :              +- Filter (isnotnull(ssales#403) AND (cast(ssales#403 as decimal(38,8)) > (0.950000 * scalar-subquery#404 [])))\n         :                 :  +- Aggregate [max(csales#401) AS tpcds_cmax#402]\n         :                 :     +- Aggregate [c_customer_sk#89], [sum((cast(ss_quantity#416 as decimal(10,0)) * ss_sales_price#419)) AS csales#401]\n         :                 :        +- Project [ss_quantity#416, ss_sales_price#419, c_customer_sk#89]\n         :                 :           +- Join Inner, (ss_customer_sk#409 = c_customer_sk#89)\n         :                 :              :- Project [ss_customer_sk#409, ss_quantity#416, ss_sales_price#419]\n         :                 :              :  +- Join Inner, (ss_sold_date_sk#429 = d_date_sk#430)\n         :                 :              :     :- Project [ss_customer_sk#409, ss_quantity#416, ss_sales_price#419, ss_sold_date_sk#429]\n         :                 :              :     :  +- Filter ((isnotnull(ss_customer_sk#409) AND isnotnull(ss_sold_date_sk#429)) AND dynamicpruning#610 [ss_sold_date_sk#429])\n         :                 :              :     :     :  +- Project [d_date_sk#430]\n         :                 :              :     :     :     +- Filter (d_year#436 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#430))\n         :                 :              :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#430,d_date_id#431,d_date#432,d_month_seq#433,d_week_seq#434,d_quarter_seq#435,d_year#436,d_dow#437,d_moy#438,d_dom#439,d_qoy#440,d_fy_year#441,d_fy_quarter_seq#442,d_fy_week_seq#443,d_day_name#444,d_quarter_name#445,d_holiday#446,d_weekend#447,d_following_holiday#448,d_first_dom#449,d_last_dom#450,d_same_day_ly#451,d_same_day_lq#452,d_current_day#453,... 4 more fields] parquet\n         :                 :              :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#407,ss_item_sk#408,ss_customer_sk#409,ss_cdemo_sk#410,ss_hdemo_sk#411,ss_addr_sk#412,ss_store_sk#413,ss_promo_sk#414,ss_ticket_number#415L,ss_quantity#416,ss_wholesale_cost#417,ss_list_price#418,ss_sales_price#419,ss_ext_discount_amt#420,ss_ext_sales_price#421,ss_ext_wholesale_cost#422,ss_ext_list_price#423,ss_ext_tax#424,ss_coupon_amt#425,ss_net_paid#426,ss_net_paid_inc_tax#427,ss_net_profit#428,ss_sold_date_sk#429] parquet\n         :                 :              :     +- Project [d_date_sk#430]\n         :                 :              :        +- Filter (d_year#436 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#430))\n         :                 :              :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#430,d_date_id#431,d_date#432,d_month_seq#433,d_week_seq#434,d_quarter_seq#435,d_year#436,d_dow#437,d_moy#438,d_dom#439,d_qoy#440,d_fy_year#441,d_fy_quarter_seq#442,d_fy_week_seq#443,d_day_name#444,d_quarter_name#445,d_holiday#446,d_weekend#447,d_following_holiday#448,d_first_dom#449,d_last_dom#450,d_same_day_ly#451,d_same_day_lq#452,d_current_day#453,... 4 more fields] parquet\n         :                 :              +- Project [c_customer_sk#89]\n         :                 :                 +- Filter isnotnull(c_customer_sk#89)\n         :                 :                    +- Relation spark_catalog.tpcds_100.customer[c_customer_sk#89,c_customer_id#90,c_current_cdemo_sk#91,c_current_hdemo_sk#92,c_current_addr_sk#93,c_first_shipto_date_sk#94,c_first_sales_date_sk#95,c_salutation#96,c_first_name#97,c_last_name#98,c_preferred_cust_flag#99,c_birth_day#100,c_birth_month#101,c_birth_year#102,c_birth_country#103,c_login#104,c_email_address#105,c_last_review_date#106] parquet\n         :                 +- Aggregate [c_customer_sk#481], [c_customer_sk#481, sum((cast(ss_quantity#467 as decimal(10,0)) * ss_sales_price#470)) AS ssales#403]\n         :                    +- Project [ss_quantity#467, ss_sales_price#470, c_customer_sk#481]\n         :                       +- Join Inner, (ss_customer_sk#460 = c_customer_sk#481)\n         :                          :- LogicalQueryStage Project [ss_customer_sk#460, ss_quantity#467, ss_sales_price#470], ShuffleQueryStage 8\n         :                          +- LogicalQueryStage Project [c_customer_sk#481], ShuffleQueryStage 10\n         +- Aggregate [c_last_name#554, c_first_name#553], [c_last_name#554, c_first_name#553, sum((cast(ws_quantity#158 as decimal(10,0)) * ws_list_price#160)) AS sales#394]\n            +- Project [ws_quantity#158, ws_list_price#160, c_first_name#553, c_last_name#554]\n               +- Join Inner, (ws_bill_customer_sk#144 = c_customer_sk#545)\n                  :- Project [ws_bill_customer_sk#144, ws_quantity#158, ws_list_price#160]\n                  :  +- Join Inner, (ws_sold_date_sk#174 = d_date_sk#563)\n                  :     :- Join LeftSemi, (ws_bill_customer_sk#144 = c_customer_sk#481)\n                  :     :  :- Project [ws_bill_customer_sk#144, ws_quantity#158, ws_list_price#160, ws_sold_date_sk#174]\n                  :     :  :  +- Join LeftSemi, (ws_item_sk#143 = item_sk#398)\n                  :     :  :     :- LogicalQueryStage Project [ws_item_sk#143, ws_bill_customer_sk#144, ws_quantity#158, ws_list_price#160, ws_sold_date_sk#174], ShuffleQueryStage 11\n                  :     :  :     +- Project [item_sk#398]\n                  :     :  :        +- Filter (cnt#400L > 4)\n                  :     :  :           +- Aggregate [_groupingexpression#608, i_item_sk#67, d_date#41], [i_item_sk#67 AS item_sk#398, count(1) AS cnt#400L]\n                  :     :  :              +- Project [d_date#41, i_item_sk#67, substr(i_item_desc#71, 1, 30) AS _groupingexpression#608]\n                  :     :  :                 +- Join Inner, (ss_item_sk#17 = i_item_sk#67)\n                  :     :  :                    :- LogicalQueryStage Project [ss_item_sk#17, d_date#41], ShuffleQueryStage 30\n                  :     :  :                    +- LogicalQueryStage Project [i_item_sk#67, i_item_desc#71], ShuffleQueryStage 15\n                  :     :  +- Project [c_customer_sk#481]\n                  :     :     +- Filter (isnotnull(ssales#403) AND (cast(ssales#403 as decimal(38,8)) > (0.950000 * scalar-subquery#404 [])))\n                  :     :        :  +- Aggregate [max(csales#401) AS tpcds_cmax#402]\n                  :     :        :     +- Aggregate [c_customer_sk#89], [sum((cast(ss_quantity#416 as decimal(10,0)) * ss_sales_price#419)) AS csales#401]\n                  :     :        :        +- Project [ss_quantity#416, ss_sales_price#419, c_customer_sk#89]\n                  :     :        :           +- Join Inner, (ss_customer_sk#409 = c_customer_sk#89)\n                  :     :        :              :- Project [ss_customer_sk#409, ss_quantity#416, ss_sales_price#419]\n                  :     :        :              :  +- Join Inner, (ss_sold_date_sk#429 = d_date_sk#430)\n                  :     :        :              :     :- Project [ss_customer_sk#409, ss_quantity#416, ss_sales_price#419, ss_sold_date_sk#429]\n                  :     :        :              :     :  +- Filter ((isnotnull(ss_customer_sk#409) AND isnotnull(ss_sold_date_sk#429)) AND dynamicpruning#610 [ss_sold_date_sk#429])\n                  :     :        :              :     :     :  +- Project [d_date_sk#430]\n                  :     :        :              :     :     :     +- Filter (d_year#436 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#430))\n                  :     :        :              :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#430,d_date_id#431,d_date#432,d_month_seq#433,d_week_seq#434,d_quarter_seq#435,d_year#436,d_dow#437,d_moy#438,d_dom#439,d_qoy#440,d_fy_year#441,d_fy_quarter_seq#442,d_fy_week_seq#443,d_day_name#444,d_quarter_name#445,d_holiday#446,d_weekend#447,d_following_holiday#448,d_first_dom#449,d_last_dom#450,d_same_day_ly#451,d_same_day_lq#452,d_current_day#453,... 4 more fields] parquet\n                  :     :        :              :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#407,ss_item_sk#408,ss_customer_sk#409,ss_cdemo_sk#410,ss_hdemo_sk#411,ss_addr_sk#412,ss_store_sk#413,ss_promo_sk#414,ss_ticket_number#415L,ss_quantity#416,ss_wholesale_cost#417,ss_list_price#418,ss_sales_price#419,ss_ext_discount_amt#420,ss_ext_sales_price#421,ss_ext_wholesale_cost#422,ss_ext_list_price#423,ss_ext_tax#424,ss_coupon_amt#425,ss_net_paid#426,ss_net_paid_inc_tax#427,ss_net_profit#428,ss_sold_date_sk#429] parquet\n                  :     :        :              :     +- Project [d_date_sk#430]\n                  :     :        :              :        +- Filter (d_year#436 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#430))\n                  :     :        :              :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#430,d_date_id#431,d_date#432,d_month_seq#433,d_week_seq#434,d_quarter_seq#435,d_year#436,d_dow#437,d_moy#438,d_dom#439,d_qoy#440,d_fy_year#441,d_fy_quarter_seq#442,d_fy_week_seq#443,d_day_name#444,d_quarter_name#445,d_holiday#446,d_weekend#447,d_following_holiday#448,d_first_dom#449,d_last_dom#450,d_same_day_ly#451,d_same_day_lq#452,d_current_day#453,... 4 more fields] parquet\n                  :     :        :              +- Project [c_customer_sk#89]\n                  :     :        :                 +- Filter isnotnull(c_customer_sk#89)\n                  :     :        :                    +- Relation spark_catalog.tpcds_100.customer[c_customer_sk#89,c_customer_id#90,c_current_cdemo_sk#91,c_current_hdemo_sk#92,c_current_addr_sk#93,c_first_shipto_date_sk#94,c_first_sales_date_sk#95,c_salutation#96,c_first_name#97,c_last_name#98,c_preferred_cust_flag#99,c_birth_day#100,c_birth_month#101,c_birth_year#102,c_birth_country#103,c_login#104,c_email_address#105,c_last_review_date#106] parquet\n                  :     :        +- Aggregate [c_customer_sk#481], [c_customer_sk#481, sum((cast(ss_quantity#467 as decimal(10,0)) * ss_sales_price#470)) AS ssales#403]\n                  :     :           +- Project [ss_quantity#467, ss_sales_price#470, c_customer_sk#481]\n                  :     :              +- Join Inner, (ss_customer_sk#460 = c_customer_sk#481)\n                  :     :                 :- LogicalQueryStage Project [ss_customer_sk#460, ss_quantity#467, ss_sales_price#470], ShuffleQueryStage 17\n                  :     :                 +- LogicalQueryStage Project [c_customer_sk#481], ShuffleQueryStage 19\n                  :     +- LogicalQueryStage Project [d_date_sk#563], BroadcastQueryStage 21\n                  +- Join LeftSemi, (c_customer_sk#545 = c_customer_sk#481)\n                     :- LogicalQueryStage Project [c_customer_sk#545, c_first_name#553, c_last_name#554], ShuffleQueryStage 23\n                     +- Project [c_customer_sk#481]\n                        +- Filter (isnotnull(ssales#403) AND (cast(ssales#403 as decimal(38,8)) > (0.950000 * scalar-subquery#404 [])))\n                           :  +- Aggregate [max(csales#401) AS tpcds_cmax#402]\n                           :     +- Aggregate [c_customer_sk#89], [sum((cast(ss_quantity#416 as decimal(10,0)) * ss_sales_price#419)) AS csales#401]\n                           :        +- Project [ss_quantity#416, ss_sales_price#419, c_customer_sk#89]\n                           :           +- Join Inner, (ss_customer_sk#409 = c_customer_sk#89)\n                           :              :- Project [ss_customer_sk#409, ss_quantity#416, ss_sales_price#419]\n                           :              :  +- Join Inner, (ss_sold_date_sk#429 = d_date_sk#430)\n                           :              :     :- Project [ss_customer_sk#409, ss_quantity#416, ss_sales_price#419, ss_sold_date_sk#429]\n                           :              :     :  +- Filter ((isnotnull(ss_customer_sk#409) AND isnotnull(ss_sold_date_sk#429)) AND dynamicpruning#610 [ss_sold_date_sk#429])\n                           :              :     :     :  +- Project [d_date_sk#430]\n                           :              :     :     :     +- Filter (d_year#436 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#430))\n                           :              :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#430,d_date_id#431,d_date#432,d_month_seq#433,d_week_seq#434,d_quarter_seq#435,d_year#436,d_dow#437,d_moy#438,d_dom#439,d_qoy#440,d_fy_year#441,d_fy_quarter_seq#442,d_fy_week_seq#443,d_day_name#444,d_quarter_name#445,d_holiday#446,d_weekend#447,d_following_holiday#448,d_first_dom#449,d_last_dom#450,d_same_day_ly#451,d_same_day_lq#452,d_current_day#453,... 4 more fields] parquet\n                           :              :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#407,ss_item_sk#408,ss_customer_sk#409,ss_cdemo_sk#410,ss_hdemo_sk#411,ss_addr_sk#412,ss_store_sk#413,ss_promo_sk#414,ss_ticket_number#415L,ss_quantity#416,ss_wholesale_cost#417,ss_list_price#418,ss_sales_price#419,ss_ext_discount_amt#420,ss_ext_sales_price#421,ss_ext_wholesale_cost#422,ss_ext_list_price#423,ss_ext_tax#424,ss_coupon_amt#425,ss_net_paid#426,ss_net_paid_inc_tax#427,ss_net_profit#428,ss_sold_date_sk#429] parquet\n                           :              :     +- Project [d_date_sk#430]\n                           :              :        +- Filter (d_year#436 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#430))\n                           :              :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#430,d_date_id#431,d_date#432,d_month_seq#433,d_week_seq#434,d_quarter_seq#435,d_year#436,d_dow#437,d_moy#438,d_dom#439,d_qoy#440,d_fy_year#441,d_fy_quarter_seq#442,d_fy_week_seq#443,d_day_name#444,d_quarter_name#445,d_holiday#446,d_weekend#447,d_following_holiday#448,d_first_dom#449,d_last_dom#450,d_same_day_ly#451,d_same_day_lq#452,d_current_day#453,... 4 more fields] parquet\n                           :              +- Project [c_customer_sk#89]\n                           :                 +- Filter isnotnull(c_customer_sk#89)\n                           :                    +- Relation spark_catalog.tpcds_100.customer[c_customer_sk#89,c_customer_id#90,c_current_cdemo_sk#91,c_current_hdemo_sk#92,c_current_addr_sk#93,c_first_shipto_date_sk#94,c_first_sales_date_sk#95,c_salutation#96,c_first_name#97,c_last_name#98,c_preferred_cust_flag#99,c_birth_day#100,c_birth_month#101,c_birth_year#102,c_birth_country#103,c_login#104,c_email_address#105,c_last_review_date#106] parquet\n                           +- Aggregate [c_customer_sk#481], [c_customer_sk#481, sum((cast(ss_quantity#467 as decimal(10,0)) * ss_sales_price#470)) AS ssales#403]\n                              +- Project [ss_quantity#467, ss_sales_price#470, c_customer_sk#481]\n                                 +- Join Inner, (ss_customer_sk#460 = c_customer_sk#481)\n                                    :- LogicalQueryStage Project [ss_customer_sk#460, ss_quantity#467, ss_sales_price#470], ShuffleQueryStage 25\n                                    +- LogicalQueryStage Project [c_customer_sk#481], ShuffleQueryStage 27\n"
      },
      "IM" : {
        "inputSizeInBytes" : 44186451888,
        "inputRowCount" : 1645922462
      },
      "PD" : {
        "4" : [ 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 290960, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 290960, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 290960, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 290960, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 290960, 264509, 264509, 290960, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 290960, 264509, 264509, 264509, 290960, 264509, 290960, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 290960, 264509, 290960, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509 ],
        "5" : [ 92897, 90784, 103761, 90428, 98316, 97427, 101149, 90784, 84788, 92742, 102014, 97350, 92721, 91819, 94834, 93337, 90456, 91442, 93321, 90784, 92393, 96288, 88877, 91845, 104847, 93804, 94191, 93687, 87972, 94260, 96819, 89988, 101560, 98948, 95408, 96771, 95805, 97937, 94674, 92881, 91931, 90413, 93316, 92721, 91267, 93799, 97785, 93799, 88895, 84890, 104191, 94351, 97233, 94309, 93847, 98364, 96771, 94282, 95322, 95413, 96819, 94834, 93777, 97350, 80847, 96867, 92833, 91315, 101555, 98799, 94791, 91931, 99407, 98316, 91707, 98900, 90497, 108866, 96219, 94743, 94818, 94308, 91470, 93777, 100063, 93407, 96723, 92436, 101000, 91819, 97833, 99813, 94330, 89447, 99282, 102062, 90789, 90301, 99917, 88480, 92281, 98407, 93826, 91267, 97302, 98895, 97446, 99236, 85251, 91931, 91336, 89973, 89378, 99551, 95805, 95317, 90461, 92350, 91358, 98924, 90519, 94260, 99028, 93156, 100474, 96379, 93295, 95226, 96944, 92860, 93337, 97302, 89866, 91336, 90987, 89007, 89973, 99455, 97302, 98799, 102747, 89952, 96288, 99938, 93428, 95301, 92376, 95512, 95274, 95365, 92790, 85795, 95875, 96920, 94308, 92484, 95930, 89093, 97422, 86253, 96219, 102379, 98489, 102784, 96331, 96379, 92371, 93316, 92785, 93916, 94791, 102115, 94469, 96793, 95805, 96867, 89581, 88981, 94399, 98489, 98220, 89472, 93708, 89292, 96336, 95848, 95274, 90875, 94871, 92345, 94834, 92238, 91798, 83153, 95205, 93471, 96422, 89533, 96750, 101101 ],
        "1" : [ 84280, 84280, 84280, 92709, 92709, 84280, 92709, 84280, 76619, 92709, 92709, 84280, 92709, 84280, 84280, 84280, 84280, 84280, 92709, 92709, 92709, 92709, 84280, 84280, 92709, 84280, 84280, 92709, 84280, 92709, 92709, 92709, 92709, 84280, 84280, 92709, 84280, 84280, 84280, 92709, 84280, 84280, 84280, 92709, 92709, 84280, 84280, 84280, 84280, 84280, 92709, 92709, 84280, 84280, 84280, 92709, 92709, 92709, 84280, 84280, 84280, 92709, 84280, 92709, 84280, 92709, 92709, 84280, 92709, 92709, 92709, 84280, 92709, 92709, 84280, 92709, 84280, 92709, 84280, 84280, 92709, 84280, 92709, 84280, 92709, 84280, 84280, 92709, 92709, 84280, 84280, 84280, 92709, 84280, 92709, 92709, 84280, 92709, 92709, 84280, 84280, 92709, 84280, 92709, 92709, 84280, 84280, 92709, 84280, 92709, 84280, 92709, 84280, 92709, 92709, 92709, 76619, 92709, 84280, 84280, 84280, 92709, 92709, 92709, 92709, 92709, 84280, 84280, 92709, 84280, 84280, 84280, 84280, 92709, 84280, 84280, 92709, 92709, 92709, 84280, 84280, 84280, 92709, 92709, 92709, 84280, 84280, 84280, 92709, 84280, 92709, 84280, 92709, 84280, 84280, 92709, 84280, 92709, 84280, 84280, 84280, 92709, 92709, 92709, 84280, 92709, 84280, 84280, 92709, 84280, 84280, 92709, 84280, 84280, 92709, 84280, 84280, 84280, 84280, 84280, 84280, 84280, 92709, 84280, 92709, 92709, 84280, 84280, 84280, 84280, 92709, 84280, 84280, 84280, 84280, 84280, 84280, 84280, 92709, 92709 ],
        "0" : [ 146748, 148062, 162268, 147121, 156091, 155997, 162866, 145655, 137010, 149774, 166912, 149859, 147977, 148375, 146423, 147452, 146578, 149316, 154962, 146511, 149571, 154021, 147977, 141730, 163713, 148833, 153080, 150257, 141384, 155903, 150342, 142671, 164244, 155997, 151301, 154479, 154962, 155493, 149401, 149097, 146578, 146681, 151386, 149774, 147604, 149486, 162678, 148062, 143527, 135298, 167947, 150342, 155420, 154021, 145324, 154021, 158337, 152139, 156844, 150342, 154021, 152139, 155921, 159761, 133326, 153080, 151750, 147537, 165373, 160292, 151198, 144383, 155988, 152139, 147434, 159184, 141375, 164748, 155514, 149774, 147036, 146663, 150360, 148079, 159351, 149932, 150342, 148545, 160984, 153623, 158504, 163713, 148478, 136672, 156938, 162772, 145324, 146180, 155997, 145239, 151656, 154962, 147036, 150715, 152597, 149774, 158337, 156938, 137450, 150800, 144298, 148460, 142231, 158900, 149774, 159667, 146748, 148918, 146663, 157879, 145324, 150715, 157375, 152224, 154962, 150809, 153080, 158820, 153538, 151198, 152139, 158820, 146095, 148918, 147036, 142671, 141978, 162866, 155056, 155420, 160313, 146596, 150360, 155997, 150885, 157785, 153080, 153538, 153538, 155420, 144951, 134977, 152691, 153165, 151656, 154962, 156455, 141357, 158431, 137944, 155056, 164244, 158820, 162362, 150715, 151814, 151198, 149003, 148375, 153080, 155420, 157879, 149868, 155420, 153165, 153080, 137450, 137528, 152597, 157302, 153538, 141357, 152597, 141044, 152157, 155235, 151826, 146180, 151741, 147977, 152224, 146265, 143442, 136594, 156844, 148833, 149401, 143925, 147977, 160796 ],
        "2" : [ 17371601, 17313063, 16996707, 17100959, 17033226, 17236981, 17071883, 16947894, 17078453, 17320527, 17392136, 17189957, 17396414, 17311465, 17218617, 17091886, 17296486, 17602538, 17086450, 17206721, 17104075, 17257645, 17447592, 17284068, 17180017, 17251810, 17078510, 17428751, 17190703, 17091180, 16888245, 17130838, 17230626, 16956499, 17240499, 17279493, 17046255, 16925646, 16907666, 17034480, 16940011, 17199974, 16869146, 17295966, 17353222, 16846943, 17325947, 17131813, 17231729, 17311901, 17440035, 17297061, 17072505, 17276021, 17146516, 17169923, 17129259, 16823901, 16978621, 17169124, 17091808, 17480756, 16982840, 17160489, 16978313, 17460598, 17233558, 17090869, 17156297, 17354514, 17312619, 17034009, 16927254, 17287614, 17365219, 17389547, 17480370, 17316975, 17251186, 17264228, 17243624, 17381439, 17433913, 16760532, 17064606, 16931418, 17063808, 17170220, 17151390, 17444256, 17095914, 17182115, 17324912, 17111549, 17203150, 17522946, 16932260, 16948450, 17145841, 16867015, 16765024, 17338612, 17173734, 16986979, 17131384, 17352202, 17241238, 17627527, 16822357, 16867839, 17008290, 17184359, 17395163, 17082612, 17338942, 17121168, 16815534, 16899165, 17149200, 17075267, 17087177, 17178853, 17547989, 17158451, 17252438, 17439694, 17073151, 16986975, 17140740, 16958860, 17422277, 17317255, 17311966, 17191736, 16950873, 17009149, 17326021, 17377512, 17100048, 17282433, 17170675, 16883065, 17109865, 17346265, 17166782, 17218832, 17598899, 17156005, 17190632, 17175152, 17467989, 17158171, 17400931, 17351617, 17331236, 17383323, 17108352, 17275713, 17473037, 16820939, 16928731, 16941370, 17356646, 16899933, 17228069, 17252334, 17147748, 17345681, 17313972, 16910213, 17387811, 17599878, 17309032, 17226960, 17276187, 16945588, 17360401, 16960900, 17134588, 17028930, 17029163, 17234190, 17064091, 17105964, 17637409, 17303023, 17722750, 17370523, 17066032, 17283328, 17271878, 17131573, 17011172, 16816679, 17307952, 17504379, 17083957, 17159149, 17341949, 16921044 ],
        "3" : [ 52331, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 57565, 57565, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 57565, 52331, 52331, 52331, 57565, 57565, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 57565, 57565, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 57565, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 57565, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 57565, 57565, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 57565, 57565, 52331, 57565, 52331, 57565, 52331, 57565, 52331, 52331, 57565, 52331, 57565, 57565, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 57565, 57565, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 57565, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 57565, 57565, 52331, 52331, 52331, 52331 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 16,
        "FinishedTasksNum" : 8,
        "FinishedTasksTotalTimeInMs" : 7673.0,
        "FinishedTasksDistributionInMs" : [ 737.0, 826.0, 874.0, 1281.0, 1331.0 ]
      },
      "StartTimeInMs" : 1702226734370,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 136571,
        "IOBytes" : {
          "Total" : 17855840457,
          "Details" : {
            "IR" : 1748895534,
            "IW" : 0,
            "SR" : 12332414216,
            "SW" : 3774530707
          }
        }
      }
    },
    "9" : {
      "LQP" : {
        "operators" : {
          "45" : {
            "sign" : -350419576,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 6601125024000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_customer_sk#481] "
          },
          "34" : {
            "sign" : 1565358831,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 39925696056,
            "rowCount" : 262669053,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(ss_customer_sk#409) AND isnotnull(ss_sold_date_sk#429)) AND dynamicpruning#610 [ss_sold_date_sk#429]) "
          },
          "67" : {
            "sign" : 388376503,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 26102424,
            "rowCount" : 204000,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_item_sk#67, i_item_desc#71], ShuffleQueryStage 15 "
          },
          "12" : {
            "sign" : -938487710,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 67361424,
            "rowCount" : 1403363,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [cs_bill_customer_sk#109, cs_item_sk#121, cs_quantity#124, cs_list_price#126, cs_sold_date_sk#140], ShuffleQueryStage 0 "
          },
          "66" : {
            "sign" : -1070534819,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 4248649360,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ss_item_sk#17, d_date#41], ShuffleQueryStage 30 "
          },
          "51" : {
            "sign" : 1454164637,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 32000000,
            "rowCount" : 2000000,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [c_customer_sk#481], ShuffleQueryStage 10 "
          },
          "84" : {
            "sign" : 1454165815,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 32000000,
            "rowCount" : 2000000,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [c_customer_sk#481], ShuffleQueryStage 27 "
          },
          "8" : {
            "sign" : 1441568544,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 1392136096,
            "rowCount" : 43504253,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cs_sold_date_sk#140 = d_date_sk#517) "
          },
          "73" : {
            "sign" : 457576007,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 6601125024,
            "rowCount" : 275046876,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ss_customer_sk#460, ss_quantity#467, ss_sales_price#470], ShuffleQueryStage 17 "
          },
          "78" : {
            "sign" : 290084495,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 6601125024000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_customer_sk#481] "
          },
          "19" : {
            "sign" : 1120906919,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 26102424,
            "rowCount" : 204000,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_item_sk#67, i_item_desc#71], ShuffleQueryStage 2 "
          },
          "23" : {
            "sign" : 1623804386,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 13202250048000000,
            "rowCount" : 550093752000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_quantity#467, ss_sales_price#470, c_customer_sk#481] "
          },
          "62" : {
            "sign" : 770061938,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 1083405586800000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (cnt#400L > 4) "
          },
          "4" : {
            "sign" : 1365193141,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 5568544384000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [c_last_name#508, c_first_name#507], [c_last_name#508, c_first_name#507, sum((cast(cs_quantity#124 as decimal(10,0)) * cs_list_price#126)) AS sales#391] "
          },
          "77" : {
            "sign" : 1358266277,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 96527848,
            "rowCount" : 2000000,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [c_customer_sk#545, c_first_name#553, c_last_name#554], ShuffleQueryStage 23 "
          },
          "40" : {
            "sign" : -337975679,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 500000000,
            "rowCount" : 2000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: isnotnull(c_customer_sk#89) "
          },
          "15" : {
            "sign" : -500295036,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 1083405586800000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [_groupingexpression#608, i_item_sk#67, d_date#41], [i_item_sk#67 AS item_sk#398, count(1) AS cnt#400L] "
          },
          "11" : {
            "sign" : 2111785784,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 44907616,
            "rowCount" : 1403363,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (cs_item_sk#121 = item_sk#398) "
          },
          "9" : {
            "sign" : -990926960,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 39294164,
            "rowCount" : 1403363,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (cs_bill_customer_sk#109 = c_customer_sk#481) "
          },
          "44" : {
            "sign" : 435063190,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 96527848,
            "rowCount" : 2000000,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [c_customer_sk#499, c_first_name#507, c_last_name#508], ShuffleQueryStage 6 "
          },
          "33" : {
            "sign" : -861776479,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 7354733484,
            "rowCount" : 262669053,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_customer_sk#409, ss_quantity#416, ss_sales_price#419, ss_sold_date_sk#429] "
          },
          "22" : {
            "sign" : 1934210699,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 15402625056000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [c_customer_sk#481], [c_customer_sk#481, sum((cast(ss_quantity#467 as decimal(10,0)) * ss_sales_price#470)) AS ssales#403] "
          },
          "56" : {
            "sign" : -2079294392,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 835624096,
            "rowCount" : 26113253,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ws_sold_date_sk#174 = d_date_sk#563) "
          },
          "55" : {
            "sign" : 2065671769,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 626718072,
            "rowCount" : 26113253,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_bill_customer_sk#144, ws_quantity#158, ws_list_price#160] "
          },
          "26" : {
            "sign" : 739645252,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 32000000,
            "rowCount" : 2000000,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [c_customer_sk#481], ShuffleQueryStage 4 "
          },
          "50" : {
            "sign" : -1093617969,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 6601125024,
            "rowCount" : 275046876,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ss_customer_sk#460, ss_quantity#467, ss_sales_price#470], ShuffleQueryStage 8 "
          },
          "37" : {
            "sign" : 2051540096,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 355962,
            "rowCount" : 1447,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (d_year#436 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#430)) "
          },
          "68" : {
            "sign" : 998370159,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 6601125024000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_customer_sk#481] "
          },
          "61" : {
            "sign" : 2022277624,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 650043352080000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [item_sk#398] "
          },
          "13" : {
            "sign" : 1981268591,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 650043352080000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [item_sk#398] "
          },
          "46" : {
            "sign" : 789941336,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 15402625056000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(ssales#403) AND (cast(ssales#403 as decimal(38,8)) > (0.950000 * scalar-subquery#404 []))) "
          },
          "24" : {
            "sign" : 1908847787,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 15402625056000000,
            "rowCount" : 550093752000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_customer_sk#460 = c_customer_sk#481) "
          },
          "83" : {
            "sign" : 457576906,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 6601125024,
            "rowCount" : 275046876,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ss_customer_sk#460, ss_quantity#467, ss_sales_price#470], ShuffleQueryStage 25 "
          },
          "35" : {
            "sign" : -977156952,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#407, ss_item_sk#408, ss_customer_sk#409, ss_cdemo_sk#410, ss_hdemo_sk#411, ss_addr_sk#412, ss_store_sk#413, ss_promo_sk#414, ss_ticket_number#415L, ss_quantity#416, ss_wholesale_cost#417, ss_list_price#418, ss_sales_price#419, ss_ext_discount_amt#420, ss_ext_sales_price#421, ss_ext_wholesale_cost#422, ss_ext_list_price#423, ss_ext_tax#424, ss_coupon_amt#425, ss_net_paid#426, ss_net_paid_inc_tax#427, ss_net_profit#428, ss_sold_date_sk#429], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "16" : {
            "sign" : -2009662925,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 1950130056240000,
            "rowCount" : 54170279340000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date#41, i_item_sk#67, substr(i_item_desc#71, 1, 30) AS _groupingexpression#608] "
          },
          "79" : {
            "sign" : -639744623,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 15402625056000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(ssales#403) AND (cast(ssales#403 as decimal(38,8)) > (0.950000 * scalar-subquery#404 []))) "
          },
          "5" : {
            "sign" : -1523964623,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 5220510360000000,
            "rowCount" : 87008506000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_quantity#124, cs_list_price#126, c_first_name#507, c_last_name#508] "
          },
          "72" : {
            "sign" : 914322748,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 15402625056000000,
            "rowCount" : 550093752000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_customer_sk#460 = c_customer_sk#481) "
          },
          "10" : {
            "sign" : -1537602824,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 39294164,
            "rowCount" : 1403363,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_bill_customer_sk#109, cs_quantity#124, cs_list_price#126, cs_sold_date_sk#140] "
          },
          "59" : {
            "sign" : 910944340,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 26955616,
            "rowCount" : 842363,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (ws_item_sk#143 = item_sk#398) "
          },
          "48" : {
            "sign" : 47435418,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 13202250048000000,
            "rowCount" : 550093752000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_quantity#467, ss_sales_price#470, c_customer_sk#481] "
          },
          "21" : {
            "sign" : -1901984732,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 15402625056000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(ssales#403) AND (cast(ssales#403 as decimal(38,8)) > (0.950000 * scalar-subquery#404 []))) "
          },
          "76" : {
            "sign" : 1645687881,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 104000000,
            "rowCount" : 2000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (c_customer_sk#545 = c_customer_sk#481) "
          },
          "54" : {
            "sign" : 2038011901,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 3551402408000000,
            "rowCount" : 52226506000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ws_bill_customer_sk#144 = c_customer_sk#545) "
          },
          "43" : {
            "sign" : -528156139,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 104000000,
            "rowCount" : 2000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (c_customer_sk#499 = c_customer_sk#481) "
          },
          "65" : {
            "sign" : -1904280941,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 2166811173600000,
            "rowCount" : 54170279340000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_item_sk#17 = i_item_sk#67) "
          },
          "71" : {
            "sign" : 82168585,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 13202250048000000,
            "rowCount" : 550093752000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_quantity#467, ss_sales_price#470, c_customer_sk#481] "
          },
          "57" : {
            "sign" : -433298353,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 23586164,
            "rowCount" : 842363,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (ws_bill_customer_sk#144 = c_customer_sk#481) "
          },
          "32" : {
            "sign" : 305748262,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 8497298720,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#429 = d_date_sk#430) "
          },
          "80" : {
            "sign" : 2102197308,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 15402625056000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [c_customer_sk#481], [c_customer_sk#481, sum((cast(ss_quantity#467 as decimal(10,0)) * ss_sales_price#470)) AS ssales#403] "
          },
          "82" : {
            "sign" : -1025989668,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 15402625056000000,
            "rowCount" : 550093752000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_customer_sk#460 = c_customer_sk#481) "
          },
          "49" : {
            "sign" : -1437901541,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 15402625056000000,
            "rowCount" : 550093752000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_customer_sk#460 = c_customer_sk#481) "
          },
          "6" : {
            "sign" : 1133093440,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 5916578408000000,
            "rowCount" : 87008506000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cs_bill_customer_sk#109 = c_customer_sk#499) "
          },
          "36" : {
            "sign" : 1217444409,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 17364,
            "rowCount" : 1447,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#430] "
          },
          "1" : {
            "sign" : -1256479583,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
            "sizeInBytes" : 8911040768000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) LocalLimit Arguments: 100 "
          },
          "39" : {
            "sign" : 1085635783,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 24000000,
            "rowCount" : 2000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_customer_sk#89] "
          },
          "17" : {
            "sign" : 566394868,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 2166811173600000,
            "rowCount" : 54170279340000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_item_sk#17 = i_item_sk#67) "
          },
          "25" : {
            "sign" : -1093618124,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 6601125024,
            "rowCount" : 275046876,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ss_customer_sk#460, ss_quantity#467, ss_sales_price#470], ShuffleQueryStage 3 "
          },
          "60" : {
            "sign" : 1832837103,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 40433424,
            "rowCount" : 842363,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ws_item_sk#143, ws_bill_customer_sk#144, ws_quantity#158, ws_list_price#160, ws_sold_date_sk#174], ShuffleQueryStage 11 "
          },
          "14" : {
            "sign" : 1045330691,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 1083405586800000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (cnt#400L > 4) "
          },
          "47" : {
            "sign" : 431587195,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 15402625056000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [c_customer_sk#481], [c_customer_sk#481, sum((cast(ss_quantity#467 as decimal(10,0)) * ss_sales_price#470)) AS ssales#403] "
          },
          "31" : {
            "sign" : 1802383537,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 6372974040,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_customer_sk#409, ss_quantity#416, ss_sales_price#419] "
          },
          "69" : {
            "sign" : -1882899317,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 15402625056000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(ssales#403) AND (cast(ssales#403 as decimal(38,8)) > (0.950000 * scalar-subquery#404 []))) "
          },
          "58" : {
            "sign" : -1718060309,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 23586164,
            "rowCount" : 842363,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_bill_customer_sk#144, ws_quantity#158, ws_list_price#160, ws_sold_date_sk#174] "
          },
          "64" : {
            "sign" : 1825233538,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 1950130056240000,
            "rowCount" : 54170279340000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date#41, i_item_sk#67, substr(i_item_desc#71, 1, 30) AS _groupingexpression#608] "
          },
          "53" : {
            "sign" : 1873577481,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 3133590360000000,
            "rowCount" : 52226506000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_quantity#158, ws_list_price#160, c_first_name#553, c_last_name#554] "
          },
          "42" : {
            "sign" : 1758754844,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1048824,
            "rowCount" : 31,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#517], BroadcastQueryStage 5 "
          },
          "75" : {
            "sign" : -2138347845,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1048824,
            "rowCount" : 31,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#563], BroadcastQueryStage 21 "
          },
          "0" : {
            "sign" : -616519630,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
            "sizeInBytes" : 6400,
            "rowCount" : 100,
            "isRuntime" : false,
            "predicate" : " (unknown) GlobalLimit Arguments: 100 "
          },
          "20" : {
            "sign" : 2123397918,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 6601125024000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_customer_sk#481] "
          },
          "27" : {
            "sign" : -582481967,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 24,
            "rowCount" : 1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [max(csales#401) AS tpcds_cmax#402] "
          },
          "70" : {
            "sign" : -1381279908,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 15402625056000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [c_customer_sk#481], [c_customer_sk#481, sum((cast(ss_quantity#467 as decimal(10,0)) * ss_sales_price#470)) AS ssales#403] "
          },
          "2" : {
            "sign" : -1336807780,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 8911040768000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [c_last_name#508 ASC NULLS FIRST, c_first_name#507 ASC NULLS FIRST, sales#391 ASC NULLS FIRST], true "
          },
          "38" : {
            "sign" : -358797686,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#430, d_date_id#431, d_date#432, d_month_seq#433, d_week_seq#434, d_quarter_seq#435, d_year#436, d_dow#437, d_moy#438, d_dom#439, d_qoy#440, d_fy_year#441, d_fy_quarter_seq#442, d_fy_week_seq#443, d_day_name#444, d_quarter_name#445, d_holiday#446, d_weekend#447, d_following_holiday#448, d_first_dom#449, d_last_dom#450, d_same_day_ly#451, d_same_day_lq#452, d_current_day#453, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "81" : {
            "sign" : -2121928113,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 13202250048000000,
            "rowCount" : 550093752000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_quantity#467, ss_sales_price#470, c_customer_sk#481] "
          },
          "18" : {
            "sign" : -1070535532,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 4248649360,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ss_item_sk#17, d_date#41], ShuffleQueryStage 28 "
          },
          "30" : {
            "sign" : -949612920,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 7701230628,
            "rowCount" : 275043951,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_customer_sk#409 = c_customer_sk#89) "
          },
          "7" : {
            "sign" : -758780695,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 1044102072,
            "rowCount" : 43504253,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_bill_customer_sk#109, cs_quantity#124, cs_list_price#126] "
          },
          "29" : {
            "sign" : -1338930356,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 6601054824,
            "rowCount" : 275043951,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_quantity#416, ss_sales_price#419, c_customer_sk#89] "
          },
          "41" : {
            "sign" : -576393737,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 500000000,
            "rowCount" : 2000000,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [c_customer_sk#89, c_customer_id#90, c_current_cdemo_sk#91, c_current_hdemo_sk#92, c_current_addr_sk#93, c_first_shipto_date_sk#94, c_first_sales_date_sk#95, c_salutation#96, c_first_name#97, c_last_name#98, c_preferred_cust_flag#99, c_birth_day#100, c_birth_month#101, c_birth_year#102, c_birth_country#103, c_login#104, c_email_address#105, c_last_review_date#106], `spark_catalog`.`tpcds_100`.`customer`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "63" : {
            "sign" : 1782114115,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 1083405586800000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [_groupingexpression#608, i_item_sk#67, d_date#41], [i_item_sk#67 AS item_sk#398, count(1) AS cnt#400L] "
          },
          "3" : {
            "sign" : 225600940,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Union",
            "sizeInBytes" : 8911040768000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Union Arguments: false, false "
          },
          "74" : {
            "sign" : 1454164916,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 32000000,
            "rowCount" : 2000000,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [c_customer_sk#481], ShuffleQueryStage 19 "
          },
          "52" : {
            "sign" : 1307009313,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 3342496384000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [c_last_name#554, c_first_name#553], [c_last_name#554, c_first_name#553, sum((cast(ws_quantity#158 as decimal(10,0)) * ws_list_price#160)) AS sales#394] "
          },
          "28" : {
            "sign" : -660295919,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 47624376,
            "rowCount" : 1984349,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [c_customer_sk#89], [sum((cast(ss_quantity#416 as decimal(10,0)) * ss_sales_price#419)) AS csales#401] "
          }
        },
        "links" : [ {
          "fromId" : 12,
          "fromName" : "LogicalQueryStage",
          "toId" : 11,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 18,
          "fromName" : "LogicalQueryStage",
          "toId" : 17,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 19,
          "fromName" : "LogicalQueryStage",
          "toId" : 17,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 17,
          "fromName" : "Join",
          "toId" : 16,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 16,
          "fromName" : "Project",
          "toId" : 15,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 15,
          "fromName" : "Aggregate",
          "toId" : 14,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 14,
          "fromName" : "Filter",
          "toId" : 13,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 13,
          "fromName" : "Project",
          "toId" : 11,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "Join",
          "toId" : 10,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "Project",
          "toId" : 9,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 25,
          "fromName" : "LogicalQueryStage",
          "toId" : 24,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 26,
          "fromName" : "LogicalQueryStage",
          "toId" : 24,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 24,
          "fromName" : "Join",
          "toId" : 23,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 23,
          "fromName" : "Project",
          "toId" : 22,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 22,
          "fromName" : "Aggregate",
          "toId" : 21,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 35,
          "fromName" : "LogicalRelation",
          "toId" : 34,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 38,
          "fromName" : "LogicalRelation",
          "toId" : 37,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 37,
          "fromName" : "Filter",
          "toId" : 36,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 36,
          "fromName" : "Project",
          "toId" : 34,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 34,
          "fromName" : "Filter",
          "toId" : 33,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 33,
          "fromName" : "Project",
          "toId" : 32,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 36,
          "fromName" : "Project",
          "toId" : 32,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 32,
          "fromName" : "Join",
          "toId" : 31,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 31,
          "fromName" : "Project",
          "toId" : 30,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 41,
          "fromName" : "LogicalRelation",
          "toId" : 40,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 40,
          "fromName" : "Filter",
          "toId" : 39,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 39,
          "fromName" : "Project",
          "toId" : 30,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 30,
          "fromName" : "Join",
          "toId" : 29,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 29,
          "fromName" : "Project",
          "toId" : 28,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 28,
          "fromName" : "Aggregate",
          "toId" : 27,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 27,
          "fromName" : "Aggregate",
          "toId" : 21,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 21,
          "fromName" : "Filter",
          "toId" : 20,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 20,
          "fromName" : "Project",
          "toId" : 9,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "Join",
          "toId" : 8,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 42,
          "fromName" : "LogicalQueryStage",
          "toId" : 8,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "Join",
          "toId" : 7,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Project",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 44,
          "fromName" : "LogicalQueryStage",
          "toId" : 43,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 50,
          "fromName" : "LogicalQueryStage",
          "toId" : 49,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 51,
          "fromName" : "LogicalQueryStage",
          "toId" : 49,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 49,
          "fromName" : "Join",
          "toId" : 48,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 48,
          "fromName" : "Project",
          "toId" : 47,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 47,
          "fromName" : "Aggregate",
          "toId" : 46,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 27,
          "fromName" : "Aggregate",
          "toId" : 46,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 46,
          "fromName" : "Filter",
          "toId" : 45,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 45,
          "fromName" : "Project",
          "toId" : 43,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 43,
          "fromName" : "Join",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Join",
          "toId" : 5,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Project",
          "toId" : 4,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Aggregate",
          "toId" : 3,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 60,
          "fromName" : "LogicalQueryStage",
          "toId" : 59,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 66,
          "fromName" : "LogicalQueryStage",
          "toId" : 65,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 67,
          "fromName" : "LogicalQueryStage",
          "toId" : 65,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 65,
          "fromName" : "Join",
          "toId" : 64,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 64,
          "fromName" : "Project",
          "toId" : 63,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 63,
          "fromName" : "Aggregate",
          "toId" : 62,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 62,
          "fromName" : "Filter",
          "toId" : 61,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 61,
          "fromName" : "Project",
          "toId" : 59,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 59,
          "fromName" : "Join",
          "toId" : 58,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 58,
          "fromName" : "Project",
          "toId" : 57,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 73,
          "fromName" : "LogicalQueryStage",
          "toId" : 72,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 74,
          "fromName" : "LogicalQueryStage",
          "toId" : 72,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 72,
          "fromName" : "Join",
          "toId" : 71,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 71,
          "fromName" : "Project",
          "toId" : 70,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 70,
          "fromName" : "Aggregate",
          "toId" : 69,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 27,
          "fromName" : "Aggregate",
          "toId" : 69,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 69,
          "fromName" : "Filter",
          "toId" : 68,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 68,
          "fromName" : "Project",
          "toId" : 57,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 57,
          "fromName" : "Join",
          "toId" : 56,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 75,
          "fromName" : "LogicalQueryStage",
          "toId" : 56,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 56,
          "fromName" : "Join",
          "toId" : 55,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 55,
          "fromName" : "Project",
          "toId" : 54,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 77,
          "fromName" : "LogicalQueryStage",
          "toId" : 76,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 83,
          "fromName" : "LogicalQueryStage",
          "toId" : 82,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 84,
          "fromName" : "LogicalQueryStage",
          "toId" : 82,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 82,
          "fromName" : "Join",
          "toId" : 81,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 81,
          "fromName" : "Project",
          "toId" : 80,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 80,
          "fromName" : "Aggregate",
          "toId" : 79,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 27,
          "fromName" : "Aggregate",
          "toId" : 79,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 79,
          "fromName" : "Filter",
          "toId" : 78,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 78,
          "fromName" : "Project",
          "toId" : 76,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 76,
          "fromName" : "Join",
          "toId" : 54,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 54,
          "fromName" : "Join",
          "toId" : 53,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 53,
          "fromName" : "Project",
          "toId" : 52,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 52,
          "fromName" : "Aggregate",
          "toId" : 3,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Union",
          "toId" : 2,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "LocalLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "LocalLimit",
          "toId" : 0,
          "toName" : "GlobalLimit",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [c_last_name#508 ASC NULLS FIRST, c_first_name#507 ASC NULLS FIRST, sales#391 ASC NULLS FIRST], true\n      +- Union false, false\n         :- Aggregate [c_last_name#508, c_first_name#507], [c_last_name#508, c_first_name#507, sum((cast(cs_quantity#124 as decimal(10,0)) * cs_list_price#126)) AS sales#391]\n         :  +- Project [cs_quantity#124, cs_list_price#126, c_first_name#507, c_last_name#508]\n         :     +- Join Inner, (cs_bill_customer_sk#109 = c_customer_sk#499)\n         :        :- Project [cs_bill_customer_sk#109, cs_quantity#124, cs_list_price#126]\n         :        :  +- Join Inner, (cs_sold_date_sk#140 = d_date_sk#517)\n         :        :     :- Join LeftSemi, (cs_bill_customer_sk#109 = c_customer_sk#481)\n         :        :     :  :- Project [cs_bill_customer_sk#109, cs_quantity#124, cs_list_price#126, cs_sold_date_sk#140]\n         :        :     :  :  +- Join LeftSemi, (cs_item_sk#121 = item_sk#398)\n         :        :     :  :     :- LogicalQueryStage Project [cs_bill_customer_sk#109, cs_item_sk#121, cs_quantity#124, cs_list_price#126, cs_sold_date_sk#140], ShuffleQueryStage 0\n         :        :     :  :     +- Project [item_sk#398]\n         :        :     :  :        +- Filter (cnt#400L > 4)\n         :        :     :  :           +- Aggregate [_groupingexpression#608, i_item_sk#67, d_date#41], [i_item_sk#67 AS item_sk#398, count(1) AS cnt#400L]\n         :        :     :  :              +- Project [d_date#41, i_item_sk#67, substr(i_item_desc#71, 1, 30) AS _groupingexpression#608]\n         :        :     :  :                 +- Join Inner, (ss_item_sk#17 = i_item_sk#67)\n         :        :     :  :                    :- LogicalQueryStage Project [ss_item_sk#17, d_date#41], ShuffleQueryStage 28\n         :        :     :  :                    +- LogicalQueryStage Project [i_item_sk#67, i_item_desc#71], ShuffleQueryStage 2\n         :        :     :  +- Project [c_customer_sk#481]\n         :        :     :     +- Filter (isnotnull(ssales#403) AND (cast(ssales#403 as decimal(38,8)) > (0.950000 * scalar-subquery#404 [])))\n         :        :     :        :  +- Aggregate [max(csales#401) AS tpcds_cmax#402]\n         :        :     :        :     +- Aggregate [c_customer_sk#89], [sum((cast(ss_quantity#416 as decimal(10,0)) * ss_sales_price#419)) AS csales#401]\n         :        :     :        :        +- Project [ss_quantity#416, ss_sales_price#419, c_customer_sk#89]\n         :        :     :        :           +- Join Inner, (ss_customer_sk#409 = c_customer_sk#89)\n         :        :     :        :              :- Project [ss_customer_sk#409, ss_quantity#416, ss_sales_price#419]\n         :        :     :        :              :  +- Join Inner, (ss_sold_date_sk#429 = d_date_sk#430)\n         :        :     :        :              :     :- Project [ss_customer_sk#409, ss_quantity#416, ss_sales_price#419, ss_sold_date_sk#429]\n         :        :     :        :              :     :  +- Filter ((isnotnull(ss_customer_sk#409) AND isnotnull(ss_sold_date_sk#429)) AND dynamicpruning#610 [ss_sold_date_sk#429])\n         :        :     :        :              :     :     :  +- Project [d_date_sk#430]\n         :        :     :        :              :     :     :     +- Filter (d_year#436 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#430))\n         :        :     :        :              :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#430,d_date_id#431,d_date#432,d_month_seq#433,d_week_seq#434,d_quarter_seq#435,d_year#436,d_dow#437,d_moy#438,d_dom#439,d_qoy#440,d_fy_year#441,d_fy_quarter_seq#442,d_fy_week_seq#443,d_day_name#444,d_quarter_name#445,d_holiday#446,d_weekend#447,d_following_holiday#448,d_first_dom#449,d_last_dom#450,d_same_day_ly#451,d_same_day_lq#452,d_current_day#453,... 4 more fields] parquet\n         :        :     :        :              :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#407,ss_item_sk#408,ss_customer_sk#409,ss_cdemo_sk#410,ss_hdemo_sk#411,ss_addr_sk#412,ss_store_sk#413,ss_promo_sk#414,ss_ticket_number#415L,ss_quantity#416,ss_wholesale_cost#417,ss_list_price#418,ss_sales_price#419,ss_ext_discount_amt#420,ss_ext_sales_price#421,ss_ext_wholesale_cost#422,ss_ext_list_price#423,ss_ext_tax#424,ss_coupon_amt#425,ss_net_paid#426,ss_net_paid_inc_tax#427,ss_net_profit#428,ss_sold_date_sk#429] parquet\n         :        :     :        :              :     +- Project [d_date_sk#430]\n         :        :     :        :              :        +- Filter (d_year#436 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#430))\n         :        :     :        :              :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#430,d_date_id#431,d_date#432,d_month_seq#433,d_week_seq#434,d_quarter_seq#435,d_year#436,d_dow#437,d_moy#438,d_dom#439,d_qoy#440,d_fy_year#441,d_fy_quarter_seq#442,d_fy_week_seq#443,d_day_name#444,d_quarter_name#445,d_holiday#446,d_weekend#447,d_following_holiday#448,d_first_dom#449,d_last_dom#450,d_same_day_ly#451,d_same_day_lq#452,d_current_day#453,... 4 more fields] parquet\n         :        :     :        :              +- Project [c_customer_sk#89]\n         :        :     :        :                 +- Filter isnotnull(c_customer_sk#89)\n         :        :     :        :                    +- Relation spark_catalog.tpcds_100.customer[c_customer_sk#89,c_customer_id#90,c_current_cdemo_sk#91,c_current_hdemo_sk#92,c_current_addr_sk#93,c_first_shipto_date_sk#94,c_first_sales_date_sk#95,c_salutation#96,c_first_name#97,c_last_name#98,c_preferred_cust_flag#99,c_birth_day#100,c_birth_month#101,c_birth_year#102,c_birth_country#103,c_login#104,c_email_address#105,c_last_review_date#106] parquet\n         :        :     :        +- Aggregate [c_customer_sk#481], [c_customer_sk#481, sum((cast(ss_quantity#467 as decimal(10,0)) * ss_sales_price#470)) AS ssales#403]\n         :        :     :           +- Project [ss_quantity#467, ss_sales_price#470, c_customer_sk#481]\n         :        :     :              +- Join Inner, (ss_customer_sk#460 = c_customer_sk#481)\n         :        :     :                 :- LogicalQueryStage Project [ss_customer_sk#460, ss_quantity#467, ss_sales_price#470], ShuffleQueryStage 3\n         :        :     :                 +- LogicalQueryStage Project [c_customer_sk#481], ShuffleQueryStage 4\n         :        :     +- LogicalQueryStage Project [d_date_sk#517], BroadcastQueryStage 5\n         :        +- Join LeftSemi, (c_customer_sk#499 = c_customer_sk#481)\n         :           :- LogicalQueryStage Project [c_customer_sk#499, c_first_name#507, c_last_name#508], ShuffleQueryStage 6\n         :           +- Project [c_customer_sk#481]\n         :              +- Filter (isnotnull(ssales#403) AND (cast(ssales#403 as decimal(38,8)) > (0.950000 * scalar-subquery#404 [])))\n         :                 :  +- Aggregate [max(csales#401) AS tpcds_cmax#402]\n         :                 :     +- Aggregate [c_customer_sk#89], [sum((cast(ss_quantity#416 as decimal(10,0)) * ss_sales_price#419)) AS csales#401]\n         :                 :        +- Project [ss_quantity#416, ss_sales_price#419, c_customer_sk#89]\n         :                 :           +- Join Inner, (ss_customer_sk#409 = c_customer_sk#89)\n         :                 :              :- Project [ss_customer_sk#409, ss_quantity#416, ss_sales_price#419]\n         :                 :              :  +- Join Inner, (ss_sold_date_sk#429 = d_date_sk#430)\n         :                 :              :     :- Project [ss_customer_sk#409, ss_quantity#416, ss_sales_price#419, ss_sold_date_sk#429]\n         :                 :              :     :  +- Filter ((isnotnull(ss_customer_sk#409) AND isnotnull(ss_sold_date_sk#429)) AND dynamicpruning#610 [ss_sold_date_sk#429])\n         :                 :              :     :     :  +- Project [d_date_sk#430]\n         :                 :              :     :     :     +- Filter (d_year#436 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#430))\n         :                 :              :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#430,d_date_id#431,d_date#432,d_month_seq#433,d_week_seq#434,d_quarter_seq#435,d_year#436,d_dow#437,d_moy#438,d_dom#439,d_qoy#440,d_fy_year#441,d_fy_quarter_seq#442,d_fy_week_seq#443,d_day_name#444,d_quarter_name#445,d_holiday#446,d_weekend#447,d_following_holiday#448,d_first_dom#449,d_last_dom#450,d_same_day_ly#451,d_same_day_lq#452,d_current_day#453,... 4 more fields] parquet\n         :                 :              :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#407,ss_item_sk#408,ss_customer_sk#409,ss_cdemo_sk#410,ss_hdemo_sk#411,ss_addr_sk#412,ss_store_sk#413,ss_promo_sk#414,ss_ticket_number#415L,ss_quantity#416,ss_wholesale_cost#417,ss_list_price#418,ss_sales_price#419,ss_ext_discount_amt#420,ss_ext_sales_price#421,ss_ext_wholesale_cost#422,ss_ext_list_price#423,ss_ext_tax#424,ss_coupon_amt#425,ss_net_paid#426,ss_net_paid_inc_tax#427,ss_net_profit#428,ss_sold_date_sk#429] parquet\n         :                 :              :     +- Project [d_date_sk#430]\n         :                 :              :        +- Filter (d_year#436 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#430))\n         :                 :              :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#430,d_date_id#431,d_date#432,d_month_seq#433,d_week_seq#434,d_quarter_seq#435,d_year#436,d_dow#437,d_moy#438,d_dom#439,d_qoy#440,d_fy_year#441,d_fy_quarter_seq#442,d_fy_week_seq#443,d_day_name#444,d_quarter_name#445,d_holiday#446,d_weekend#447,d_following_holiday#448,d_first_dom#449,d_last_dom#450,d_same_day_ly#451,d_same_day_lq#452,d_current_day#453,... 4 more fields] parquet\n         :                 :              +- Project [c_customer_sk#89]\n         :                 :                 +- Filter isnotnull(c_customer_sk#89)\n         :                 :                    +- Relation spark_catalog.tpcds_100.customer[c_customer_sk#89,c_customer_id#90,c_current_cdemo_sk#91,c_current_hdemo_sk#92,c_current_addr_sk#93,c_first_shipto_date_sk#94,c_first_sales_date_sk#95,c_salutation#96,c_first_name#97,c_last_name#98,c_preferred_cust_flag#99,c_birth_day#100,c_birth_month#101,c_birth_year#102,c_birth_country#103,c_login#104,c_email_address#105,c_last_review_date#106] parquet\n         :                 +- Aggregate [c_customer_sk#481], [c_customer_sk#481, sum((cast(ss_quantity#467 as decimal(10,0)) * ss_sales_price#470)) AS ssales#403]\n         :                    +- Project [ss_quantity#467, ss_sales_price#470, c_customer_sk#481]\n         :                       +- Join Inner, (ss_customer_sk#460 = c_customer_sk#481)\n         :                          :- LogicalQueryStage Project [ss_customer_sk#460, ss_quantity#467, ss_sales_price#470], ShuffleQueryStage 8\n         :                          +- LogicalQueryStage Project [c_customer_sk#481], ShuffleQueryStage 10\n         +- Aggregate [c_last_name#554, c_first_name#553], [c_last_name#554, c_first_name#553, sum((cast(ws_quantity#158 as decimal(10,0)) * ws_list_price#160)) AS sales#394]\n            +- Project [ws_quantity#158, ws_list_price#160, c_first_name#553, c_last_name#554]\n               +- Join Inner, (ws_bill_customer_sk#144 = c_customer_sk#545)\n                  :- Project [ws_bill_customer_sk#144, ws_quantity#158, ws_list_price#160]\n                  :  +- Join Inner, (ws_sold_date_sk#174 = d_date_sk#563)\n                  :     :- Join LeftSemi, (ws_bill_customer_sk#144 = c_customer_sk#481)\n                  :     :  :- Project [ws_bill_customer_sk#144, ws_quantity#158, ws_list_price#160, ws_sold_date_sk#174]\n                  :     :  :  +- Join LeftSemi, (ws_item_sk#143 = item_sk#398)\n                  :     :  :     :- LogicalQueryStage Project [ws_item_sk#143, ws_bill_customer_sk#144, ws_quantity#158, ws_list_price#160, ws_sold_date_sk#174], ShuffleQueryStage 11\n                  :     :  :     +- Project [item_sk#398]\n                  :     :  :        +- Filter (cnt#400L > 4)\n                  :     :  :           +- Aggregate [_groupingexpression#608, i_item_sk#67, d_date#41], [i_item_sk#67 AS item_sk#398, count(1) AS cnt#400L]\n                  :     :  :              +- Project [d_date#41, i_item_sk#67, substr(i_item_desc#71, 1, 30) AS _groupingexpression#608]\n                  :     :  :                 +- Join Inner, (ss_item_sk#17 = i_item_sk#67)\n                  :     :  :                    :- LogicalQueryStage Project [ss_item_sk#17, d_date#41], ShuffleQueryStage 30\n                  :     :  :                    +- LogicalQueryStage Project [i_item_sk#67, i_item_desc#71], ShuffleQueryStage 15\n                  :     :  +- Project [c_customer_sk#481]\n                  :     :     +- Filter (isnotnull(ssales#403) AND (cast(ssales#403 as decimal(38,8)) > (0.950000 * scalar-subquery#404 [])))\n                  :     :        :  +- Aggregate [max(csales#401) AS tpcds_cmax#402]\n                  :     :        :     +- Aggregate [c_customer_sk#89], [sum((cast(ss_quantity#416 as decimal(10,0)) * ss_sales_price#419)) AS csales#401]\n                  :     :        :        +- Project [ss_quantity#416, ss_sales_price#419, c_customer_sk#89]\n                  :     :        :           +- Join Inner, (ss_customer_sk#409 = c_customer_sk#89)\n                  :     :        :              :- Project [ss_customer_sk#409, ss_quantity#416, ss_sales_price#419]\n                  :     :        :              :  +- Join Inner, (ss_sold_date_sk#429 = d_date_sk#430)\n                  :     :        :              :     :- Project [ss_customer_sk#409, ss_quantity#416, ss_sales_price#419, ss_sold_date_sk#429]\n                  :     :        :              :     :  +- Filter ((isnotnull(ss_customer_sk#409) AND isnotnull(ss_sold_date_sk#429)) AND dynamicpruning#610 [ss_sold_date_sk#429])\n                  :     :        :              :     :     :  +- Project [d_date_sk#430]\n                  :     :        :              :     :     :     +- Filter (d_year#436 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#430))\n                  :     :        :              :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#430,d_date_id#431,d_date#432,d_month_seq#433,d_week_seq#434,d_quarter_seq#435,d_year#436,d_dow#437,d_moy#438,d_dom#439,d_qoy#440,d_fy_year#441,d_fy_quarter_seq#442,d_fy_week_seq#443,d_day_name#444,d_quarter_name#445,d_holiday#446,d_weekend#447,d_following_holiday#448,d_first_dom#449,d_last_dom#450,d_same_day_ly#451,d_same_day_lq#452,d_current_day#453,... 4 more fields] parquet\n                  :     :        :              :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#407,ss_item_sk#408,ss_customer_sk#409,ss_cdemo_sk#410,ss_hdemo_sk#411,ss_addr_sk#412,ss_store_sk#413,ss_promo_sk#414,ss_ticket_number#415L,ss_quantity#416,ss_wholesale_cost#417,ss_list_price#418,ss_sales_price#419,ss_ext_discount_amt#420,ss_ext_sales_price#421,ss_ext_wholesale_cost#422,ss_ext_list_price#423,ss_ext_tax#424,ss_coupon_amt#425,ss_net_paid#426,ss_net_paid_inc_tax#427,ss_net_profit#428,ss_sold_date_sk#429] parquet\n                  :     :        :              :     +- Project [d_date_sk#430]\n                  :     :        :              :        +- Filter (d_year#436 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#430))\n                  :     :        :              :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#430,d_date_id#431,d_date#432,d_month_seq#433,d_week_seq#434,d_quarter_seq#435,d_year#436,d_dow#437,d_moy#438,d_dom#439,d_qoy#440,d_fy_year#441,d_fy_quarter_seq#442,d_fy_week_seq#443,d_day_name#444,d_quarter_name#445,d_holiday#446,d_weekend#447,d_following_holiday#448,d_first_dom#449,d_last_dom#450,d_same_day_ly#451,d_same_day_lq#452,d_current_day#453,... 4 more fields] parquet\n                  :     :        :              +- Project [c_customer_sk#89]\n                  :     :        :                 +- Filter isnotnull(c_customer_sk#89)\n                  :     :        :                    +- Relation spark_catalog.tpcds_100.customer[c_customer_sk#89,c_customer_id#90,c_current_cdemo_sk#91,c_current_hdemo_sk#92,c_current_addr_sk#93,c_first_shipto_date_sk#94,c_first_sales_date_sk#95,c_salutation#96,c_first_name#97,c_last_name#98,c_preferred_cust_flag#99,c_birth_day#100,c_birth_month#101,c_birth_year#102,c_birth_country#103,c_login#104,c_email_address#105,c_last_review_date#106] parquet\n                  :     :        +- Aggregate [c_customer_sk#481], [c_customer_sk#481, sum((cast(ss_quantity#467 as decimal(10,0)) * ss_sales_price#470)) AS ssales#403]\n                  :     :           +- Project [ss_quantity#467, ss_sales_price#470, c_customer_sk#481]\n                  :     :              +- Join Inner, (ss_customer_sk#460 = c_customer_sk#481)\n                  :     :                 :- LogicalQueryStage Project [ss_customer_sk#460, ss_quantity#467, ss_sales_price#470], ShuffleQueryStage 17\n                  :     :                 +- LogicalQueryStage Project [c_customer_sk#481], ShuffleQueryStage 19\n                  :     +- LogicalQueryStage Project [d_date_sk#563], BroadcastQueryStage 21\n                  +- Join LeftSemi, (c_customer_sk#545 = c_customer_sk#481)\n                     :- LogicalQueryStage Project [c_customer_sk#545, c_first_name#553, c_last_name#554], ShuffleQueryStage 23\n                     +- Project [c_customer_sk#481]\n                        +- Filter (isnotnull(ssales#403) AND (cast(ssales#403 as decimal(38,8)) > (0.950000 * scalar-subquery#404 [])))\n                           :  +- Aggregate [max(csales#401) AS tpcds_cmax#402]\n                           :     +- Aggregate [c_customer_sk#89], [sum((cast(ss_quantity#416 as decimal(10,0)) * ss_sales_price#419)) AS csales#401]\n                           :        +- Project [ss_quantity#416, ss_sales_price#419, c_customer_sk#89]\n                           :           +- Join Inner, (ss_customer_sk#409 = c_customer_sk#89)\n                           :              :- Project [ss_customer_sk#409, ss_quantity#416, ss_sales_price#419]\n                           :              :  +- Join Inner, (ss_sold_date_sk#429 = d_date_sk#430)\n                           :              :     :- Project [ss_customer_sk#409, ss_quantity#416, ss_sales_price#419, ss_sold_date_sk#429]\n                           :              :     :  +- Filter ((isnotnull(ss_customer_sk#409) AND isnotnull(ss_sold_date_sk#429)) AND dynamicpruning#610 [ss_sold_date_sk#429])\n                           :              :     :     :  +- Project [d_date_sk#430]\n                           :              :     :     :     +- Filter (d_year#436 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#430))\n                           :              :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#430,d_date_id#431,d_date#432,d_month_seq#433,d_week_seq#434,d_quarter_seq#435,d_year#436,d_dow#437,d_moy#438,d_dom#439,d_qoy#440,d_fy_year#441,d_fy_quarter_seq#442,d_fy_week_seq#443,d_day_name#444,d_quarter_name#445,d_holiday#446,d_weekend#447,d_following_holiday#448,d_first_dom#449,d_last_dom#450,d_same_day_ly#451,d_same_day_lq#452,d_current_day#453,... 4 more fields] parquet\n                           :              :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#407,ss_item_sk#408,ss_customer_sk#409,ss_cdemo_sk#410,ss_hdemo_sk#411,ss_addr_sk#412,ss_store_sk#413,ss_promo_sk#414,ss_ticket_number#415L,ss_quantity#416,ss_wholesale_cost#417,ss_list_price#418,ss_sales_price#419,ss_ext_discount_amt#420,ss_ext_sales_price#421,ss_ext_wholesale_cost#422,ss_ext_list_price#423,ss_ext_tax#424,ss_coupon_amt#425,ss_net_paid#426,ss_net_paid_inc_tax#427,ss_net_profit#428,ss_sold_date_sk#429] parquet\n                           :              :     +- Project [d_date_sk#430]\n                           :              :        +- Filter (d_year#436 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#430))\n                           :              :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#430,d_date_id#431,d_date#432,d_month_seq#433,d_week_seq#434,d_quarter_seq#435,d_year#436,d_dow#437,d_moy#438,d_dom#439,d_qoy#440,d_fy_year#441,d_fy_quarter_seq#442,d_fy_week_seq#443,d_day_name#444,d_quarter_name#445,d_holiday#446,d_weekend#447,d_following_holiday#448,d_first_dom#449,d_last_dom#450,d_same_day_ly#451,d_same_day_lq#452,d_current_day#453,... 4 more fields] parquet\n                           :              +- Project [c_customer_sk#89]\n                           :                 +- Filter isnotnull(c_customer_sk#89)\n                           :                    +- Relation spark_catalog.tpcds_100.customer[c_customer_sk#89,c_customer_id#90,c_current_cdemo_sk#91,c_current_hdemo_sk#92,c_current_addr_sk#93,c_first_shipto_date_sk#94,c_first_sales_date_sk#95,c_salutation#96,c_first_name#97,c_last_name#98,c_preferred_cust_flag#99,c_birth_day#100,c_birth_month#101,c_birth_year#102,c_birth_country#103,c_login#104,c_email_address#105,c_last_review_date#106] parquet\n                           +- Aggregate [c_customer_sk#481], [c_customer_sk#481, sum((cast(ss_quantity#467 as decimal(10,0)) * ss_sales_price#470)) AS ssales#403]\n                              +- Project [ss_quantity#467, ss_sales_price#470, c_customer_sk#481]\n                                 +- Join Inner, (ss_customer_sk#460 = c_customer_sk#481)\n                                    :- LogicalQueryStage Project [ss_customer_sk#460, ss_quantity#467, ss_sales_price#470], ShuffleQueryStage 25\n                                    +- LogicalQueryStage Project [c_customer_sk#481], ShuffleQueryStage 27\n"
      },
      "IM" : {
        "inputSizeInBytes" : 35384951856,
        "inputRowCount" : 1645922462
      },
      "PD" : {
        "4" : [ 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 290960, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 290960, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 290960, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 290960, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 290960, 264509, 264509, 290960, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 290960, 264509, 264509, 264509, 290960, 264509, 290960, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 290960, 264509, 290960, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509 ],
        "5" : [ 92897, 90784, 103761, 90428, 98316, 97427, 101149, 90784, 84788, 92742, 102014, 97350, 92721, 91819, 94834, 93337, 90456, 91442, 93321, 90784, 92393, 96288, 88877, 91845, 104847, 93804, 94191, 93687, 87972, 94260, 96819, 89988, 101560, 98948, 95408, 96771, 95805, 97937, 94674, 92881, 91931, 90413, 93316, 92721, 91267, 93799, 97785, 93799, 88895, 84890, 104191, 94351, 97233, 94309, 93847, 98364, 96771, 94282, 95322, 95413, 96819, 94834, 93777, 97350, 80847, 96867, 92833, 91315, 101555, 98799, 94791, 91931, 99407, 98316, 91707, 98900, 90497, 108866, 96219, 94743, 94818, 94308, 91470, 93777, 100063, 93407, 96723, 92436, 101000, 91819, 97833, 99813, 94330, 89447, 99282, 102062, 90789, 90301, 99917, 88480, 92281, 98407, 93826, 91267, 97302, 98895, 97446, 99236, 85251, 91931, 91336, 89973, 89378, 99551, 95805, 95317, 90461, 92350, 91358, 98924, 90519, 94260, 99028, 93156, 100474, 96379, 93295, 95226, 96944, 92860, 93337, 97302, 89866, 91336, 90987, 89007, 89973, 99455, 97302, 98799, 102747, 89952, 96288, 99938, 93428, 95301, 92376, 95512, 95274, 95365, 92790, 85795, 95875, 96920, 94308, 92484, 95930, 89093, 97422, 86253, 96219, 102379, 98489, 102784, 96331, 96379, 92371, 93316, 92785, 93916, 94791, 102115, 94469, 96793, 95805, 96867, 89581, 88981, 94399, 98489, 98220, 89472, 93708, 89292, 96336, 95848, 95274, 90875, 94871, 92345, 94834, 92238, 91798, 83153, 95205, 93471, 96422, 89533, 96750, 101101 ],
        "1" : [ 84280, 84280, 84280, 92709, 92709, 84280, 92709, 84280, 76619, 92709, 92709, 84280, 92709, 84280, 84280, 84280, 84280, 84280, 92709, 92709, 92709, 92709, 84280, 84280, 92709, 84280, 84280, 92709, 84280, 92709, 92709, 92709, 92709, 84280, 84280, 92709, 84280, 84280, 84280, 92709, 84280, 84280, 84280, 92709, 92709, 84280, 84280, 84280, 84280, 84280, 92709, 92709, 84280, 84280, 84280, 92709, 92709, 92709, 84280, 84280, 84280, 92709, 84280, 92709, 84280, 92709, 92709, 84280, 92709, 92709, 92709, 84280, 92709, 92709, 84280, 92709, 84280, 92709, 84280, 84280, 92709, 84280, 92709, 84280, 92709, 84280, 84280, 92709, 92709, 84280, 84280, 84280, 92709, 84280, 92709, 92709, 84280, 92709, 92709, 84280, 84280, 92709, 84280, 92709, 92709, 84280, 84280, 92709, 84280, 92709, 84280, 92709, 84280, 92709, 92709, 92709, 76619, 92709, 84280, 84280, 84280, 92709, 92709, 92709, 92709, 92709, 84280, 84280, 92709, 84280, 84280, 84280, 84280, 92709, 84280, 84280, 92709, 92709, 92709, 84280, 84280, 84280, 92709, 92709, 92709, 84280, 84280, 84280, 92709, 84280, 92709, 84280, 92709, 84280, 84280, 92709, 84280, 92709, 84280, 84280, 84280, 92709, 92709, 92709, 84280, 92709, 84280, 84280, 92709, 84280, 84280, 92709, 84280, 84280, 92709, 84280, 84280, 84280, 84280, 84280, 84280, 84280, 92709, 84280, 92709, 92709, 84280, 84280, 84280, 84280, 92709, 84280, 84280, 84280, 84280, 84280, 84280, 84280, 92709, 92709 ],
        "0" : [ 146748, 148062, 162268, 147121, 156091, 155997, 162866, 145655, 137010, 149774, 166912, 149859, 147977, 148375, 146423, 147452, 146578, 149316, 154962, 146511, 149571, 154021, 147977, 141730, 163713, 148833, 153080, 150257, 141384, 155903, 150342, 142671, 164244, 155997, 151301, 154479, 154962, 155493, 149401, 149097, 146578, 146681, 151386, 149774, 147604, 149486, 162678, 148062, 143527, 135298, 167947, 150342, 155420, 154021, 145324, 154021, 158337, 152139, 156844, 150342, 154021, 152139, 155921, 159761, 133326, 153080, 151750, 147537, 165373, 160292, 151198, 144383, 155988, 152139, 147434, 159184, 141375, 164748, 155514, 149774, 147036, 146663, 150360, 148079, 159351, 149932, 150342, 148545, 160984, 153623, 158504, 163713, 148478, 136672, 156938, 162772, 145324, 146180, 155997, 145239, 151656, 154962, 147036, 150715, 152597, 149774, 158337, 156938, 137450, 150800, 144298, 148460, 142231, 158900, 149774, 159667, 146748, 148918, 146663, 157879, 145324, 150715, 157375, 152224, 154962, 150809, 153080, 158820, 153538, 151198, 152139, 158820, 146095, 148918, 147036, 142671, 141978, 162866, 155056, 155420, 160313, 146596, 150360, 155997, 150885, 157785, 153080, 153538, 153538, 155420, 144951, 134977, 152691, 153165, 151656, 154962, 156455, 141357, 158431, 137944, 155056, 164244, 158820, 162362, 150715, 151814, 151198, 149003, 148375, 153080, 155420, 157879, 149868, 155420, 153165, 153080, 137450, 137528, 152597, 157302, 153538, 141357, 152597, 141044, 152157, 155235, 151826, 146180, 151741, 147977, 152224, 146265, 143442, 136594, 156844, 148833, 149401, 143925, 147977, 160796 ],
        "3" : [ 52331, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 57565, 57565, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 57565, 52331, 52331, 52331, 57565, 57565, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 57565, 57565, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 57565, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 57565, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 57565, 57565, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 57565, 57565, 52331, 57565, 52331, 57565, 52331, 57565, 52331, 52331, 57565, 52331, 57565, 57565, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 57565, 57565, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 57565, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 57565, 57565, 52331, 52331, 52331, 52331 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 16,
        "FinishedTasksNum" : 164,
        "FinishedTasksTotalTimeInMs" : 210572.0,
        "FinishedTasksDistributionInMs" : [ 367.0, 850.0, 918.0, 1247.0, 6728.0 ]
      },
      "StartTimeInMs" : 1702226734154,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 136787,
        "IOBytes" : {
          "Total" : 22258593393,
          "Details" : {
            "IR" : 2875034303,
            "IW" : 0,
            "SR" : 12332414216,
            "SW" : 7051144874
          }
        }
      }
    },
    "13" : {
      "LQP" : {
        "operators" : {
          "45" : {
            "sign" : -1443446036,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 303406973816000000,
            "rowCount" : 4461867262000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ws_bill_customer_sk#144 = c_customer_sk#545) "
          },
          "34" : {
            "sign" : -528156139,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 104000000,
            "rowCount" : 2000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (c_customer_sk#499 = c_customer_sk#481) "
          },
          "12" : {
            "sign" : -1901984732,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 15402625056000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(ssales#403) AND (cast(ssales#403 as decimal(38,8)) > (0.950000 * scalar-subquery#404 []))) "
          },
          "66" : {
            "sign" : 1454165815,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 32000000,
            "rowCount" : 2000000,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [c_customer_sk#481], ShuffleQueryStage 27 "
          },
          "51" : {
            "sign" : -1882899317,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 15402625056000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(ssales#403) AND (cast(ssales#403 as decimal(38,8)) > (0.950000 * scalar-subquery#404 []))) "
          },
          "8" : {
            "sign" : 2040454210,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 141415956736,
            "rowCount" : 4419248648,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cs_sold_date_sk#140 = d_date_sk#517) "
          },
          "19" : {
            "sign" : -660295919,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 47624376,
            "rowCount" : 1984349,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [c_customer_sk#89], [sum((cast(ss_quantity#416 as decimal(10,0)) * ss_sales_price#419)) AS csales#401] "
          },
          "23" : {
            "sign" : 305748262,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 8497298720,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#429 = d_date_sk#430) "
          },
          "62" : {
            "sign" : 2102197308,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 15402625056000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [c_customer_sk#481], [c_customer_sk#481, sum((cast(ss_quantity#467 as decimal(10,0)) * ss_sales_price#470)) AS ssales#403] "
          },
          "4" : {
            "sign" : -135027843,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 565663826944000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [c_last_name#508, c_first_name#507], [c_last_name#508, c_first_name#507, sum((cast(cs_quantity#124 as decimal(10,0)) * cs_list_price#126)) AS sales#391] "
          },
          "40" : {
            "sign" : -1437901541,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 15402625056000000,
            "rowCount" : 550093752000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_customer_sk#460 = c_customer_sk#481) "
          },
          "15" : {
            "sign" : 1908847787,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 15402625056000000,
            "rowCount" : 550093752000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_customer_sk#460 = c_customer_sk#481) "
          },
          "11" : {
            "sign" : 2123397918,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 6601125024000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_customer_sk#481] "
          },
          "9" : {
            "sign" : -525197904,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 3991579424,
            "rowCount" : 142556408,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (cs_bill_customer_sk#109 = c_customer_sk#481) "
          },
          "44" : {
            "sign" : 376706478,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 267712035720000000,
            "rowCount" : 4461867262000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_quantity#158, ws_list_price#160, c_first_name#553, c_last_name#554] "
          },
          "33" : {
            "sign" : 1758754844,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1048824,
            "rowCount" : 31,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#517], BroadcastQueryStage 5 "
          },
          "22" : {
            "sign" : 1802383537,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 6372974040,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_customer_sk#409, ss_quantity#416, ss_sales_price#419] "
          },
          "56" : {
            "sign" : 1454164916,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 32000000,
            "rowCount" : 2000000,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [c_customer_sk#481], ShuffleQueryStage 19 "
          },
          "55" : {
            "sign" : 457576007,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 8801500032,
            "rowCount" : 275046876,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ss_customer_sk#460, ss_quantity#467, ss_sales_price#470], ShuffleQueryStage 17 "
          },
          "26" : {
            "sign" : -977156952,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#407, ss_item_sk#408, ss_customer_sk#409, ss_cdemo_sk#410, ss_hdemo_sk#411, ss_addr_sk#412, ss_store_sk#413, ss_promo_sk#414, ss_ticket_number#415L, ss_quantity#416, ss_wholesale_cost#417, ss_list_price#418, ss_sales_price#419, ss_ext_discount_amt#420, ss_ext_sales_price#421, ss_ext_wholesale_cost#422, ss_ext_list_price#423, ss_ext_tax#424, ss_coupon_amt#425, ss_net_paid#426, ss_net_paid_inc_tax#427, ss_net_profit#428, ss_sold_date_sk#429], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "50" : {
            "sign" : 998370159,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 6601125024000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_customer_sk#481] "
          },
          "37" : {
            "sign" : 789941336,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 15402625056000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(ssales#403) AND (cast(ssales#403 as decimal(38,8)) > (0.950000 * scalar-subquery#404 []))) "
          },
          "61" : {
            "sign" : -639744623,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 15402625056000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(ssales#403) AND (cast(ssales#403 as decimal(38,8)) > (0.950000 * scalar-subquery#404 []))) "
          },
          "13" : {
            "sign" : 1934210699,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 15402625056000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [c_customer_sk#481], [c_customer_sk#481, sum((cast(ss_quantity#467 as decimal(10,0)) * ss_sales_price#470)) AS ssales#403] "
          },
          "46" : {
            "sign" : -1263024912,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 53542407144,
            "rowCount" : 2230933631,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_bill_customer_sk#144, ws_quantity#158, ws_list_price#160] "
          },
          "24" : {
            "sign" : -861776479,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 7354733484,
            "rowCount" : 262669053,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_customer_sk#409, ss_quantity#416, ss_sales_price#419, ss_sold_date_sk#429] "
          },
          "35" : {
            "sign" : 435063190,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 96527848,
            "rowCount" : 2000000,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [c_customer_sk#499, c_first_name#507, c_last_name#508], ShuffleQueryStage 6 "
          },
          "16" : {
            "sign" : -1093618124,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 8801500032,
            "rowCount" : 275046876,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ss_customer_sk#460, ss_quantity#467, ss_sales_price#470], ShuffleQueryStage 3 "
          },
          "5" : {
            "sign" : 1896579677,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 530309837760000000,
            "rowCount" : 8838497296000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_quantity#124, cs_list_price#126, c_first_name#507, c_last_name#508] "
          },
          "10" : {
            "sign" : -1540420998,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 3991579424,
            "rowCount" : 142556408,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [cs_bill_customer_sk#109, cs_quantity#124, cs_list_price#126, cs_sold_date_sk#140], ShuffleQueryStage 31 "
          },
          "59" : {
            "sign" : 1358266277,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 96527848,
            "rowCount" : 2000000,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [c_customer_sk#545, c_first_name#553, c_last_name#554], ShuffleQueryStage 23 "
          },
          "48" : {
            "sign" : -1108717480,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 2015036828,
            "rowCount" : 71965601,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (ws_bill_customer_sk#144 = c_customer_sk#481) "
          },
          "21" : {
            "sign" : -949612920,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 7701230628,
            "rowCount" : 275043951,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_customer_sk#409 = c_customer_sk#89) "
          },
          "54" : {
            "sign" : 914322748,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 15402625056000000,
            "rowCount" : 550093752000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_customer_sk#460 = c_customer_sk#481) "
          },
          "43" : {
            "sign" : -1559961592,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 285559504768000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [c_last_name#554, c_first_name#553], [c_last_name#554, c_first_name#553, sum((cast(ws_quantity#158 as decimal(10,0)) * ws_list_price#160)) AS sales#394] "
          },
          "65" : {
            "sign" : 457576906,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 8801500032,
            "rowCount" : 275046876,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ss_customer_sk#460, ss_quantity#467, ss_sales_price#470], ShuffleQueryStage 25 "
          },
          "57" : {
            "sign" : -2138347845,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1048824,
            "rowCount" : 31,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#563], BroadcastQueryStage 21 "
          },
          "32" : {
            "sign" : -576393737,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 500000000,
            "rowCount" : 2000000,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [c_customer_sk#89, c_customer_id#90, c_current_cdemo_sk#91, c_current_hdemo_sk#92, c_current_addr_sk#93, c_first_shipto_date_sk#94, c_first_sales_date_sk#95, c_salutation#96, c_first_name#97, c_last_name#98, c_preferred_cust_flag#99, c_birth_day#100, c_birth_month#101, c_birth_year#102, c_birth_country#103, c_login#104, c_email_address#105, c_last_review_date#106], `spark_catalog`.`tpcds_100`.`customer`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "49" : {
            "sign" : -1428108786,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 2015036828,
            "rowCount" : 71965601,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ws_bill_customer_sk#144, ws_quantity#158, ws_list_price#160, ws_sold_date_sk#174], ShuffleQueryStage 32 "
          },
          "6" : {
            "sign" : -44028142,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 601017816128000000,
            "rowCount" : 8838497296000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cs_bill_customer_sk#109 = c_customer_sk#499) "
          },
          "36" : {
            "sign" : -350419576,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 6601125024000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_customer_sk#481] "
          },
          "1" : {
            "sign" : -2008418228,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
            "sizeInBytes" : 851223331712000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) LocalLimit Arguments: 100 "
          },
          "39" : {
            "sign" : 47435418,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 13202250048000000,
            "rowCount" : 550093752000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_quantity#467, ss_sales_price#470, c_customer_sk#481] "
          },
          "17" : {
            "sign" : 739645252,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 32000000,
            "rowCount" : 2000000,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [c_customer_sk#481], ShuffleQueryStage 4 "
          },
          "25" : {
            "sign" : 1565358831,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 39925696056,
            "rowCount" : 262669053,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(ss_customer_sk#409) AND isnotnull(ss_sold_date_sk#429)) AND dynamicpruning#610 [ss_sold_date_sk#429]) "
          },
          "60" : {
            "sign" : 290084495,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 6601125024000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_customer_sk#481] "
          },
          "14" : {
            "sign" : 1623804386,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 13202250048000000,
            "rowCount" : 550093752000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_quantity#467, ss_sales_price#470, c_customer_sk#481] "
          },
          "47" : {
            "sign" : 1307457971,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 71389876192,
            "rowCount" : 2230933631,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ws_sold_date_sk#174 = d_date_sk#563) "
          },
          "31" : {
            "sign" : -337975679,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 500000000,
            "rowCount" : 2000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: isnotnull(c_customer_sk#89) "
          },
          "58" : {
            "sign" : 1645687881,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 104000000,
            "rowCount" : 2000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (c_customer_sk#545 = c_customer_sk#481) "
          },
          "64" : {
            "sign" : -1025989668,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 15402625056000000,
            "rowCount" : 550093752000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_customer_sk#460 = c_customer_sk#481) "
          },
          "53" : {
            "sign" : 82168585,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 13202250048000000,
            "rowCount" : 550093752000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_quantity#467, ss_sales_price#470, c_customer_sk#481] "
          },
          "42" : {
            "sign" : 1454164637,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 32000000,
            "rowCount" : 2000000,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [c_customer_sk#481], ShuffleQueryStage 10 "
          },
          "0" : {
            "sign" : 977866397,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
            "sizeInBytes" : 6400,
            "rowCount" : 100,
            "isRuntime" : false,
            "predicate" : " (unknown) GlobalLimit Arguments: 100 "
          },
          "20" : {
            "sign" : -1338930356,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 6601054824,
            "rowCount" : 275043951,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_quantity#416, ss_sales_price#419, c_customer_sk#89] "
          },
          "27" : {
            "sign" : 1217444409,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 17364,
            "rowCount" : 1447,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#430] "
          },
          "2" : {
            "sign" : -1199640825,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 851223331712000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [c_last_name#508 ASC NULLS FIRST, c_first_name#507 ASC NULLS FIRST, sales#391 ASC NULLS FIRST], true "
          },
          "38" : {
            "sign" : 431587195,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 15402625056000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [c_customer_sk#481], [c_customer_sk#481, sum((cast(ss_quantity#467 as decimal(10,0)) * ss_sales_price#470)) AS ssales#403] "
          },
          "18" : {
            "sign" : -582481967,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 24,
            "rowCount" : 1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [max(csales#401) AS tpcds_cmax#402] "
          },
          "30" : {
            "sign" : 1085635783,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 24000000,
            "rowCount" : 2000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_customer_sk#89] "
          },
          "7" : {
            "sign" : 1161395567,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 106061967552,
            "rowCount" : 4419248648,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_bill_customer_sk#109, cs_quantity#124, cs_list_price#126] "
          },
          "29" : {
            "sign" : -358797686,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#430, d_date_id#431, d_date#432, d_month_seq#433, d_week_seq#434, d_quarter_seq#435, d_year#436, d_dow#437, d_moy#438, d_dom#439, d_qoy#440, d_fy_year#441, d_fy_quarter_seq#442, d_fy_week_seq#443, d_day_name#444, d_quarter_name#445, d_holiday#446, d_weekend#447, d_following_holiday#448, d_first_dom#449, d_last_dom#450, d_same_day_ly#451, d_same_day_lq#452, d_current_day#453, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "41" : {
            "sign" : -1093617969,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 8801500032,
            "rowCount" : 275046876,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ss_customer_sk#460, ss_quantity#467, ss_sales_price#470], ShuffleQueryStage 8 "
          },
          "63" : {
            "sign" : -2121928113,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 13202250048000000,
            "rowCount" : 550093752000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_quantity#467, ss_sales_price#470, c_customer_sk#481] "
          },
          "3" : {
            "sign" : 1658360343,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Union",
            "sizeInBytes" : 851223331712000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Union Arguments: false, false "
          },
          "52" : {
            "sign" : -1381279908,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 15402625056000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [c_customer_sk#481], [c_customer_sk#481, sum((cast(ss_quantity#467 as decimal(10,0)) * ss_sales_price#470)) AS ssales#403] "
          },
          "28" : {
            "sign" : 2051540096,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 355962,
            "rowCount" : 1447,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (d_year#436 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#430)) "
          }
        },
        "links" : [ {
          "fromId" : 10,
          "fromName" : "LogicalQueryStage",
          "toId" : 9,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 16,
          "fromName" : "LogicalQueryStage",
          "toId" : 15,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 17,
          "fromName" : "LogicalQueryStage",
          "toId" : 15,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 15,
          "fromName" : "Join",
          "toId" : 14,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 14,
          "fromName" : "Project",
          "toId" : 13,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 13,
          "fromName" : "Aggregate",
          "toId" : 12,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 26,
          "fromName" : "LogicalRelation",
          "toId" : 25,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 29,
          "fromName" : "LogicalRelation",
          "toId" : 28,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 28,
          "fromName" : "Filter",
          "toId" : 27,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 27,
          "fromName" : "Project",
          "toId" : 25,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 25,
          "fromName" : "Filter",
          "toId" : 24,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 24,
          "fromName" : "Project",
          "toId" : 23,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 27,
          "fromName" : "Project",
          "toId" : 23,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 23,
          "fromName" : "Join",
          "toId" : 22,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 22,
          "fromName" : "Project",
          "toId" : 21,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 32,
          "fromName" : "LogicalRelation",
          "toId" : 31,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 31,
          "fromName" : "Filter",
          "toId" : 30,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 30,
          "fromName" : "Project",
          "toId" : 21,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 21,
          "fromName" : "Join",
          "toId" : 20,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 20,
          "fromName" : "Project",
          "toId" : 19,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 19,
          "fromName" : "Aggregate",
          "toId" : 18,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 18,
          "fromName" : "Aggregate",
          "toId" : 12,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 12,
          "fromName" : "Filter",
          "toId" : 11,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "Project",
          "toId" : 9,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "Join",
          "toId" : 8,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 33,
          "fromName" : "LogicalQueryStage",
          "toId" : 8,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "Join",
          "toId" : 7,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Project",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 35,
          "fromName" : "LogicalQueryStage",
          "toId" : 34,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 41,
          "fromName" : "LogicalQueryStage",
          "toId" : 40,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 42,
          "fromName" : "LogicalQueryStage",
          "toId" : 40,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 40,
          "fromName" : "Join",
          "toId" : 39,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 39,
          "fromName" : "Project",
          "toId" : 38,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 38,
          "fromName" : "Aggregate",
          "toId" : 37,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 18,
          "fromName" : "Aggregate",
          "toId" : 37,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 37,
          "fromName" : "Filter",
          "toId" : 36,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 36,
          "fromName" : "Project",
          "toId" : 34,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 34,
          "fromName" : "Join",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Join",
          "toId" : 5,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Project",
          "toId" : 4,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Aggregate",
          "toId" : 3,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 49,
          "fromName" : "LogicalQueryStage",
          "toId" : 48,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 55,
          "fromName" : "LogicalQueryStage",
          "toId" : 54,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 56,
          "fromName" : "LogicalQueryStage",
          "toId" : 54,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 54,
          "fromName" : "Join",
          "toId" : 53,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 53,
          "fromName" : "Project",
          "toId" : 52,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 52,
          "fromName" : "Aggregate",
          "toId" : 51,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 18,
          "fromName" : "Aggregate",
          "toId" : 51,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 51,
          "fromName" : "Filter",
          "toId" : 50,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 50,
          "fromName" : "Project",
          "toId" : 48,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 48,
          "fromName" : "Join",
          "toId" : 47,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 57,
          "fromName" : "LogicalQueryStage",
          "toId" : 47,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 47,
          "fromName" : "Join",
          "toId" : 46,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 46,
          "fromName" : "Project",
          "toId" : 45,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 59,
          "fromName" : "LogicalQueryStage",
          "toId" : 58,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 65,
          "fromName" : "LogicalQueryStage",
          "toId" : 64,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 66,
          "fromName" : "LogicalQueryStage",
          "toId" : 64,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 64,
          "fromName" : "Join",
          "toId" : 63,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 63,
          "fromName" : "Project",
          "toId" : 62,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 62,
          "fromName" : "Aggregate",
          "toId" : 61,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 18,
          "fromName" : "Aggregate",
          "toId" : 61,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 61,
          "fromName" : "Filter",
          "toId" : 60,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 60,
          "fromName" : "Project",
          "toId" : 58,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 58,
          "fromName" : "Join",
          "toId" : 45,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 45,
          "fromName" : "Join",
          "toId" : 44,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 44,
          "fromName" : "Project",
          "toId" : 43,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 43,
          "fromName" : "Aggregate",
          "toId" : 3,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Union",
          "toId" : 2,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "LocalLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "LocalLimit",
          "toId" : 0,
          "toName" : "GlobalLimit",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [c_last_name#508 ASC NULLS FIRST, c_first_name#507 ASC NULLS FIRST, sales#391 ASC NULLS FIRST], true\n      +- Union false, false\n         :- Aggregate [c_last_name#508, c_first_name#507], [c_last_name#508, c_first_name#507, sum((cast(cs_quantity#124 as decimal(10,0)) * cs_list_price#126)) AS sales#391]\n         :  +- Project [cs_quantity#124, cs_list_price#126, c_first_name#507, c_last_name#508]\n         :     +- Join Inner, (cs_bill_customer_sk#109 = c_customer_sk#499)\n         :        :- Project [cs_bill_customer_sk#109, cs_quantity#124, cs_list_price#126]\n         :        :  +- Join Inner, (cs_sold_date_sk#140 = d_date_sk#517)\n         :        :     :- Join LeftSemi, (cs_bill_customer_sk#109 = c_customer_sk#481)\n         :        :     :  :- LogicalQueryStage Project [cs_bill_customer_sk#109, cs_quantity#124, cs_list_price#126, cs_sold_date_sk#140], ShuffleQueryStage 31\n         :        :     :  +- Project [c_customer_sk#481]\n         :        :     :     +- Filter (isnotnull(ssales#403) AND (cast(ssales#403 as decimal(38,8)) > (0.950000 * scalar-subquery#404 [])))\n         :        :     :        :  +- Aggregate [max(csales#401) AS tpcds_cmax#402]\n         :        :     :        :     +- Aggregate [c_customer_sk#89], [sum((cast(ss_quantity#416 as decimal(10,0)) * ss_sales_price#419)) AS csales#401]\n         :        :     :        :        +- Project [ss_quantity#416, ss_sales_price#419, c_customer_sk#89]\n         :        :     :        :           +- Join Inner, (ss_customer_sk#409 = c_customer_sk#89)\n         :        :     :        :              :- Project [ss_customer_sk#409, ss_quantity#416, ss_sales_price#419]\n         :        :     :        :              :  +- Join Inner, (ss_sold_date_sk#429 = d_date_sk#430)\n         :        :     :        :              :     :- Project [ss_customer_sk#409, ss_quantity#416, ss_sales_price#419, ss_sold_date_sk#429]\n         :        :     :        :              :     :  +- Filter ((isnotnull(ss_customer_sk#409) AND isnotnull(ss_sold_date_sk#429)) AND dynamicpruning#610 [ss_sold_date_sk#429])\n         :        :     :        :              :     :     :  +- Project [d_date_sk#430]\n         :        :     :        :              :     :     :     +- Filter (d_year#436 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#430))\n         :        :     :        :              :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#430,d_date_id#431,d_date#432,d_month_seq#433,d_week_seq#434,d_quarter_seq#435,d_year#436,d_dow#437,d_moy#438,d_dom#439,d_qoy#440,d_fy_year#441,d_fy_quarter_seq#442,d_fy_week_seq#443,d_day_name#444,d_quarter_name#445,d_holiday#446,d_weekend#447,d_following_holiday#448,d_first_dom#449,d_last_dom#450,d_same_day_ly#451,d_same_day_lq#452,d_current_day#453,... 4 more fields] parquet\n         :        :     :        :              :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#407,ss_item_sk#408,ss_customer_sk#409,ss_cdemo_sk#410,ss_hdemo_sk#411,ss_addr_sk#412,ss_store_sk#413,ss_promo_sk#414,ss_ticket_number#415L,ss_quantity#416,ss_wholesale_cost#417,ss_list_price#418,ss_sales_price#419,ss_ext_discount_amt#420,ss_ext_sales_price#421,ss_ext_wholesale_cost#422,ss_ext_list_price#423,ss_ext_tax#424,ss_coupon_amt#425,ss_net_paid#426,ss_net_paid_inc_tax#427,ss_net_profit#428,ss_sold_date_sk#429] parquet\n         :        :     :        :              :     +- Project [d_date_sk#430]\n         :        :     :        :              :        +- Filter (d_year#436 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#430))\n         :        :     :        :              :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#430,d_date_id#431,d_date#432,d_month_seq#433,d_week_seq#434,d_quarter_seq#435,d_year#436,d_dow#437,d_moy#438,d_dom#439,d_qoy#440,d_fy_year#441,d_fy_quarter_seq#442,d_fy_week_seq#443,d_day_name#444,d_quarter_name#445,d_holiday#446,d_weekend#447,d_following_holiday#448,d_first_dom#449,d_last_dom#450,d_same_day_ly#451,d_same_day_lq#452,d_current_day#453,... 4 more fields] parquet\n         :        :     :        :              +- Project [c_customer_sk#89]\n         :        :     :        :                 +- Filter isnotnull(c_customer_sk#89)\n         :        :     :        :                    +- Relation spark_catalog.tpcds_100.customer[c_customer_sk#89,c_customer_id#90,c_current_cdemo_sk#91,c_current_hdemo_sk#92,c_current_addr_sk#93,c_first_shipto_date_sk#94,c_first_sales_date_sk#95,c_salutation#96,c_first_name#97,c_last_name#98,c_preferred_cust_flag#99,c_birth_day#100,c_birth_month#101,c_birth_year#102,c_birth_country#103,c_login#104,c_email_address#105,c_last_review_date#106] parquet\n         :        :     :        +- Aggregate [c_customer_sk#481], [c_customer_sk#481, sum((cast(ss_quantity#467 as decimal(10,0)) * ss_sales_price#470)) AS ssales#403]\n         :        :     :           +- Project [ss_quantity#467, ss_sales_price#470, c_customer_sk#481]\n         :        :     :              +- Join Inner, (ss_customer_sk#460 = c_customer_sk#481)\n         :        :     :                 :- LogicalQueryStage Project [ss_customer_sk#460, ss_quantity#467, ss_sales_price#470], ShuffleQueryStage 3\n         :        :     :                 +- LogicalQueryStage Project [c_customer_sk#481], ShuffleQueryStage 4\n         :        :     +- LogicalQueryStage Project [d_date_sk#517], BroadcastQueryStage 5\n         :        +- Join LeftSemi, (c_customer_sk#499 = c_customer_sk#481)\n         :           :- LogicalQueryStage Project [c_customer_sk#499, c_first_name#507, c_last_name#508], ShuffleQueryStage 6\n         :           +- Project [c_customer_sk#481]\n         :              +- Filter (isnotnull(ssales#403) AND (cast(ssales#403 as decimal(38,8)) > (0.950000 * scalar-subquery#404 [])))\n         :                 :  +- Aggregate [max(csales#401) AS tpcds_cmax#402]\n         :                 :     +- Aggregate [c_customer_sk#89], [sum((cast(ss_quantity#416 as decimal(10,0)) * ss_sales_price#419)) AS csales#401]\n         :                 :        +- Project [ss_quantity#416, ss_sales_price#419, c_customer_sk#89]\n         :                 :           +- Join Inner, (ss_customer_sk#409 = c_customer_sk#89)\n         :                 :              :- Project [ss_customer_sk#409, ss_quantity#416, ss_sales_price#419]\n         :                 :              :  +- Join Inner, (ss_sold_date_sk#429 = d_date_sk#430)\n         :                 :              :     :- Project [ss_customer_sk#409, ss_quantity#416, ss_sales_price#419, ss_sold_date_sk#429]\n         :                 :              :     :  +- Filter ((isnotnull(ss_customer_sk#409) AND isnotnull(ss_sold_date_sk#429)) AND dynamicpruning#610 [ss_sold_date_sk#429])\n         :                 :              :     :     :  +- Project [d_date_sk#430]\n         :                 :              :     :     :     +- Filter (d_year#436 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#430))\n         :                 :              :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#430,d_date_id#431,d_date#432,d_month_seq#433,d_week_seq#434,d_quarter_seq#435,d_year#436,d_dow#437,d_moy#438,d_dom#439,d_qoy#440,d_fy_year#441,d_fy_quarter_seq#442,d_fy_week_seq#443,d_day_name#444,d_quarter_name#445,d_holiday#446,d_weekend#447,d_following_holiday#448,d_first_dom#449,d_last_dom#450,d_same_day_ly#451,d_same_day_lq#452,d_current_day#453,... 4 more fields] parquet\n         :                 :              :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#407,ss_item_sk#408,ss_customer_sk#409,ss_cdemo_sk#410,ss_hdemo_sk#411,ss_addr_sk#412,ss_store_sk#413,ss_promo_sk#414,ss_ticket_number#415L,ss_quantity#416,ss_wholesale_cost#417,ss_list_price#418,ss_sales_price#419,ss_ext_discount_amt#420,ss_ext_sales_price#421,ss_ext_wholesale_cost#422,ss_ext_list_price#423,ss_ext_tax#424,ss_coupon_amt#425,ss_net_paid#426,ss_net_paid_inc_tax#427,ss_net_profit#428,ss_sold_date_sk#429] parquet\n         :                 :              :     +- Project [d_date_sk#430]\n         :                 :              :        +- Filter (d_year#436 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#430))\n         :                 :              :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#430,d_date_id#431,d_date#432,d_month_seq#433,d_week_seq#434,d_quarter_seq#435,d_year#436,d_dow#437,d_moy#438,d_dom#439,d_qoy#440,d_fy_year#441,d_fy_quarter_seq#442,d_fy_week_seq#443,d_day_name#444,d_quarter_name#445,d_holiday#446,d_weekend#447,d_following_holiday#448,d_first_dom#449,d_last_dom#450,d_same_day_ly#451,d_same_day_lq#452,d_current_day#453,... 4 more fields] parquet\n         :                 :              +- Project [c_customer_sk#89]\n         :                 :                 +- Filter isnotnull(c_customer_sk#89)\n         :                 :                    +- Relation spark_catalog.tpcds_100.customer[c_customer_sk#89,c_customer_id#90,c_current_cdemo_sk#91,c_current_hdemo_sk#92,c_current_addr_sk#93,c_first_shipto_date_sk#94,c_first_sales_date_sk#95,c_salutation#96,c_first_name#97,c_last_name#98,c_preferred_cust_flag#99,c_birth_day#100,c_birth_month#101,c_birth_year#102,c_birth_country#103,c_login#104,c_email_address#105,c_last_review_date#106] parquet\n         :                 +- Aggregate [c_customer_sk#481], [c_customer_sk#481, sum((cast(ss_quantity#467 as decimal(10,0)) * ss_sales_price#470)) AS ssales#403]\n         :                    +- Project [ss_quantity#467, ss_sales_price#470, c_customer_sk#481]\n         :                       +- Join Inner, (ss_customer_sk#460 = c_customer_sk#481)\n         :                          :- LogicalQueryStage Project [ss_customer_sk#460, ss_quantity#467, ss_sales_price#470], ShuffleQueryStage 8\n         :                          +- LogicalQueryStage Project [c_customer_sk#481], ShuffleQueryStage 10\n         +- Aggregate [c_last_name#554, c_first_name#553], [c_last_name#554, c_first_name#553, sum((cast(ws_quantity#158 as decimal(10,0)) * ws_list_price#160)) AS sales#394]\n            +- Project [ws_quantity#158, ws_list_price#160, c_first_name#553, c_last_name#554]\n               +- Join Inner, (ws_bill_customer_sk#144 = c_customer_sk#545)\n                  :- Project [ws_bill_customer_sk#144, ws_quantity#158, ws_list_price#160]\n                  :  +- Join Inner, (ws_sold_date_sk#174 = d_date_sk#563)\n                  :     :- Join LeftSemi, (ws_bill_customer_sk#144 = c_customer_sk#481)\n                  :     :  :- LogicalQueryStage Project [ws_bill_customer_sk#144, ws_quantity#158, ws_list_price#160, ws_sold_date_sk#174], ShuffleQueryStage 32\n                  :     :  +- Project [c_customer_sk#481]\n                  :     :     +- Filter (isnotnull(ssales#403) AND (cast(ssales#403 as decimal(38,8)) > (0.950000 * scalar-subquery#404 [])))\n                  :     :        :  +- Aggregate [max(csales#401) AS tpcds_cmax#402]\n                  :     :        :     +- Aggregate [c_customer_sk#89], [sum((cast(ss_quantity#416 as decimal(10,0)) * ss_sales_price#419)) AS csales#401]\n                  :     :        :        +- Project [ss_quantity#416, ss_sales_price#419, c_customer_sk#89]\n                  :     :        :           +- Join Inner, (ss_customer_sk#409 = c_customer_sk#89)\n                  :     :        :              :- Project [ss_customer_sk#409, ss_quantity#416, ss_sales_price#419]\n                  :     :        :              :  +- Join Inner, (ss_sold_date_sk#429 = d_date_sk#430)\n                  :     :        :              :     :- Project [ss_customer_sk#409, ss_quantity#416, ss_sales_price#419, ss_sold_date_sk#429]\n                  :     :        :              :     :  +- Filter ((isnotnull(ss_customer_sk#409) AND isnotnull(ss_sold_date_sk#429)) AND dynamicpruning#610 [ss_sold_date_sk#429])\n                  :     :        :              :     :     :  +- Project [d_date_sk#430]\n                  :     :        :              :     :     :     +- Filter (d_year#436 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#430))\n                  :     :        :              :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#430,d_date_id#431,d_date#432,d_month_seq#433,d_week_seq#434,d_quarter_seq#435,d_year#436,d_dow#437,d_moy#438,d_dom#439,d_qoy#440,d_fy_year#441,d_fy_quarter_seq#442,d_fy_week_seq#443,d_day_name#444,d_quarter_name#445,d_holiday#446,d_weekend#447,d_following_holiday#448,d_first_dom#449,d_last_dom#450,d_same_day_ly#451,d_same_day_lq#452,d_current_day#453,... 4 more fields] parquet\n                  :     :        :              :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#407,ss_item_sk#408,ss_customer_sk#409,ss_cdemo_sk#410,ss_hdemo_sk#411,ss_addr_sk#412,ss_store_sk#413,ss_promo_sk#414,ss_ticket_number#415L,ss_quantity#416,ss_wholesale_cost#417,ss_list_price#418,ss_sales_price#419,ss_ext_discount_amt#420,ss_ext_sales_price#421,ss_ext_wholesale_cost#422,ss_ext_list_price#423,ss_ext_tax#424,ss_coupon_amt#425,ss_net_paid#426,ss_net_paid_inc_tax#427,ss_net_profit#428,ss_sold_date_sk#429] parquet\n                  :     :        :              :     +- Project [d_date_sk#430]\n                  :     :        :              :        +- Filter (d_year#436 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#430))\n                  :     :        :              :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#430,d_date_id#431,d_date#432,d_month_seq#433,d_week_seq#434,d_quarter_seq#435,d_year#436,d_dow#437,d_moy#438,d_dom#439,d_qoy#440,d_fy_year#441,d_fy_quarter_seq#442,d_fy_week_seq#443,d_day_name#444,d_quarter_name#445,d_holiday#446,d_weekend#447,d_following_holiday#448,d_first_dom#449,d_last_dom#450,d_same_day_ly#451,d_same_day_lq#452,d_current_day#453,... 4 more fields] parquet\n                  :     :        :              +- Project [c_customer_sk#89]\n                  :     :        :                 +- Filter isnotnull(c_customer_sk#89)\n                  :     :        :                    +- Relation spark_catalog.tpcds_100.customer[c_customer_sk#89,c_customer_id#90,c_current_cdemo_sk#91,c_current_hdemo_sk#92,c_current_addr_sk#93,c_first_shipto_date_sk#94,c_first_sales_date_sk#95,c_salutation#96,c_first_name#97,c_last_name#98,c_preferred_cust_flag#99,c_birth_day#100,c_birth_month#101,c_birth_year#102,c_birth_country#103,c_login#104,c_email_address#105,c_last_review_date#106] parquet\n                  :     :        +- Aggregate [c_customer_sk#481], [c_customer_sk#481, sum((cast(ss_quantity#467 as decimal(10,0)) * ss_sales_price#470)) AS ssales#403]\n                  :     :           +- Project [ss_quantity#467, ss_sales_price#470, c_customer_sk#481]\n                  :     :              +- Join Inner, (ss_customer_sk#460 = c_customer_sk#481)\n                  :     :                 :- LogicalQueryStage Project [ss_customer_sk#460, ss_quantity#467, ss_sales_price#470], ShuffleQueryStage 17\n                  :     :                 +- LogicalQueryStage Project [c_customer_sk#481], ShuffleQueryStage 19\n                  :     +- LogicalQueryStage Project [d_date_sk#563], BroadcastQueryStage 21\n                  +- Join LeftSemi, (c_customer_sk#545 = c_customer_sk#481)\n                     :- LogicalQueryStage Project [c_customer_sk#545, c_first_name#553, c_last_name#554], ShuffleQueryStage 23\n                     +- Project [c_customer_sk#481]\n                        +- Filter (isnotnull(ssales#403) AND (cast(ssales#403 as decimal(38,8)) > (0.950000 * scalar-subquery#404 [])))\n                           :  +- Aggregate [max(csales#401) AS tpcds_cmax#402]\n                           :     +- Aggregate [c_customer_sk#89], [sum((cast(ss_quantity#416 as decimal(10,0)) * ss_sales_price#419)) AS csales#401]\n                           :        +- Project [ss_quantity#416, ss_sales_price#419, c_customer_sk#89]\n                           :           +- Join Inner, (ss_customer_sk#409 = c_customer_sk#89)\n                           :              :- Project [ss_customer_sk#409, ss_quantity#416, ss_sales_price#419]\n                           :              :  +- Join Inner, (ss_sold_date_sk#429 = d_date_sk#430)\n                           :              :     :- Project [ss_customer_sk#409, ss_quantity#416, ss_sales_price#419, ss_sold_date_sk#429]\n                           :              :     :  +- Filter ((isnotnull(ss_customer_sk#409) AND isnotnull(ss_sold_date_sk#429)) AND dynamicpruning#610 [ss_sold_date_sk#429])\n                           :              :     :     :  +- Project [d_date_sk#430]\n                           :              :     :     :     +- Filter (d_year#436 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#430))\n                           :              :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#430,d_date_id#431,d_date#432,d_month_seq#433,d_week_seq#434,d_quarter_seq#435,d_year#436,d_dow#437,d_moy#438,d_dom#439,d_qoy#440,d_fy_year#441,d_fy_quarter_seq#442,d_fy_week_seq#443,d_day_name#444,d_quarter_name#445,d_holiday#446,d_weekend#447,d_following_holiday#448,d_first_dom#449,d_last_dom#450,d_same_day_ly#451,d_same_day_lq#452,d_current_day#453,... 4 more fields] parquet\n                           :              :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#407,ss_item_sk#408,ss_customer_sk#409,ss_cdemo_sk#410,ss_hdemo_sk#411,ss_addr_sk#412,ss_store_sk#413,ss_promo_sk#414,ss_ticket_number#415L,ss_quantity#416,ss_wholesale_cost#417,ss_list_price#418,ss_sales_price#419,ss_ext_discount_amt#420,ss_ext_sales_price#421,ss_ext_wholesale_cost#422,ss_ext_list_price#423,ss_ext_tax#424,ss_coupon_amt#425,ss_net_paid#426,ss_net_paid_inc_tax#427,ss_net_profit#428,ss_sold_date_sk#429] parquet\n                           :              :     +- Project [d_date_sk#430]\n                           :              :        +- Filter (d_year#436 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#430))\n                           :              :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#430,d_date_id#431,d_date#432,d_month_seq#433,d_week_seq#434,d_quarter_seq#435,d_year#436,d_dow#437,d_moy#438,d_dom#439,d_qoy#440,d_fy_year#441,d_fy_quarter_seq#442,d_fy_week_seq#443,d_day_name#444,d_quarter_name#445,d_holiday#446,d_weekend#447,d_following_holiday#448,d_first_dom#449,d_last_dom#450,d_same_day_ly#451,d_same_day_lq#452,d_current_day#453,... 4 more fields] parquet\n                           :              +- Project [c_customer_sk#89]\n                           :                 +- Filter isnotnull(c_customer_sk#89)\n                           :                    +- Relation spark_catalog.tpcds_100.customer[c_customer_sk#89,c_customer_id#90,c_current_cdemo_sk#91,c_current_hdemo_sk#92,c_current_addr_sk#93,c_first_shipto_date_sk#94,c_first_sales_date_sk#95,c_salutation#96,c_first_name#97,c_last_name#98,c_preferred_cust_flag#99,c_birth_day#100,c_birth_month#101,c_birth_year#102,c_birth_country#103,c_login#104,c_email_address#105,c_last_review_date#106] parquet\n                           +- Aggregate [c_customer_sk#481], [c_customer_sk#481, sum((cast(ss_quantity#467 as decimal(10,0)) * ss_sales_price#470)) AS ssales#403]\n                              +- Project [ss_quantity#467, ss_sales_price#470, c_customer_sk#481]\n                                 +- Join Inner, (ss_customer_sk#460 = c_customer_sk#481)\n                                    :- LogicalQueryStage Project [ss_customer_sk#460, ss_quantity#467, ss_sales_price#470], ShuffleQueryStage 25\n                                    +- LogicalQueryStage Project [c_customer_sk#481], ShuffleQueryStage 27\n"
      },
      "IM" : {
        "inputSizeInBytes" : 41535769724,
        "inputRowCount" : 1326709575
      },
      "PD" : {
        "2" : [ 17371601, 17313063, 16996707, 17100959, 17033226, 17236981, 17071883, 16947894, 17078453, 17320527, 17392136, 17189957, 17396414, 17311465, 17218617, 17091886, 17296486, 17602538, 17086450, 17206721, 17104075, 17257645, 17447592, 17284068, 17180017, 17251810, 17078510, 17428751, 17190703, 17091180, 16888245, 17130838, 17230626, 16956499, 17240499, 17279493, 17046255, 16925646, 16907666, 17034480, 16940011, 17199974, 16869146, 17295966, 17353222, 16846943, 17325947, 17131813, 17231729, 17311901, 17440035, 17297061, 17072505, 17276021, 17146516, 17169923, 17129259, 16823901, 16978621, 17169124, 17091808, 17480756, 16982840, 17160489, 16978313, 17460598, 17233558, 17090869, 17156297, 17354514, 17312619, 17034009, 16927254, 17287614, 17365219, 17389547, 17480370, 17316975, 17251186, 17264228, 17243624, 17381439, 17433913, 16760532, 17064606, 16931418, 17063808, 17170220, 17151390, 17444256, 17095914, 17182115, 17324912, 17111549, 17203150, 17522946, 16932260, 16948450, 17145841, 16867015, 16765024, 17338612, 17173734, 16986979, 17131384, 17352202, 17241238, 17627527, 16822357, 16867839, 17008290, 17184359, 17395163, 17082612, 17338942, 17121168, 16815534, 16899165, 17149200, 17075267, 17087177, 17178853, 17547989, 17158451, 17252438, 17439694, 17073151, 16986975, 17140740, 16958860, 17422277, 17317255, 17311966, 17191736, 16950873, 17009149, 17326021, 17377512, 17100048, 17282433, 17170675, 16883065, 17109865, 17346265, 17166782, 17218832, 17598899, 17156005, 17190632, 17175152, 17467989, 17158171, 17400931, 17351617, 17331236, 17383323, 17108352, 17275713, 17473037, 16820939, 16928731, 16941370, 17356646, 16899933, 17228069, 17252334, 17147748, 17345681, 17313972, 16910213, 17387811, 17599878, 17309032, 17226960, 17276187, 16945588, 17360401, 16960900, 17134588, 17028930, 17029163, 17234190, 17064091, 17105964, 17637409, 17303023, 17722750, 17370523, 17066032, 17283328, 17271878, 17131573, 17011172, 16816679, 17307952, 17504379, 17083957, 17159149, 17341949, 16921044 ],
        "4" : [ 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 290960, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 290960, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 290960, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 290960, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 290960, 264509, 264509, 290960, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 290960, 264509, 264509, 264509, 290960, 264509, 290960, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 290960, 264509, 290960, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509 ],
        "3" : [ 52331, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 57565, 57565, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 57565, 52331, 52331, 52331, 57565, 57565, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 57565, 57565, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 57565, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 57565, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 57565, 57565, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 57565, 57565, 52331, 57565, 52331, 57565, 52331, 57565, 52331, 52331, 57565, 52331, 57565, 57565, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 57565, 57565, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 57565, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 57565, 57565, 52331, 52331, 52331, 52331 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 16,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "StartTimeInMs" : 1702226741579,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 129362,
        "IOBytes" : {
          "Total" : 15776153735,
          "Details" : {
            "IR" : 853684861,
            "IW" : 0,
            "SR" : 12332414216,
            "SW" : 2590054658
          }
        }
      }
    },
    "16" : {
      "LQP" : {
        "operators" : {
          "4" : {
            "sign" : -833044752,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 6874337696,
            "rowCount" : 214823053,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ss_customer_sk#409, ss_quantity#416, ss_sales_price#419], ShuffleQueryStage 3 "
          },
          "5" : {
            "sign" : 1085635783,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 24000000,
            "rowCount" : 2000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_customer_sk#89] "
          },
          "6" : {
            "sign" : -337975679,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 500000000,
            "rowCount" : 2000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: isnotnull(c_customer_sk#89) "
          },
          "1" : {
            "sign" : -852253956,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 45673296,
            "rowCount" : 1903054,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [c_customer_sk#89], [sum((cast(ss_quantity#416 as decimal(10,0)) * ss_sales_price#419)) AS csales#401] "
          },
          "0" : {
            "sign" : 781632260,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 24,
            "rowCount" : 1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [max(csales#401) AS tpcds_cmax#402] "
          },
          "2" : {
            "sign" : 128656639,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 10311506544000000,
            "rowCount" : 429646106000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_quantity#416, ss_sales_price#419, c_customer_sk#89] "
          },
          "7" : {
            "sign" : -576393737,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 500000000,
            "rowCount" : 2000000,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [c_customer_sk#89, c_customer_id#90, c_current_cdemo_sk#91, c_current_hdemo_sk#92, c_current_addr_sk#93, c_first_shipto_date_sk#94, c_first_sales_date_sk#95, c_salutation#96, c_first_name#97, c_last_name#98, c_preferred_cust_flag#99, c_birth_day#100, c_birth_month#101, c_birth_year#102, c_birth_country#103, c_login#104, c_email_address#105, c_last_review_date#106], `spark_catalog`.`tpcds_100`.`customer`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "3" : {
            "sign" : -170625101,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 12030090968000000,
            "rowCount" : 429646106000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_customer_sk#409 = c_customer_sk#89) "
          }
        },
        "links" : [ {
          "fromId" : 4,
          "fromName" : "LogicalQueryStage",
          "toId" : 3,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "LogicalRelation",
          "toId" : 6,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Filter",
          "toId" : 5,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Project",
          "toId" : 3,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Join",
          "toId" : 2,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Project",
          "toId" : 1,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Aggregate",
          "toId" : 0,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Aggregate [max(csales#401) AS tpcds_cmax#402]\n+- Aggregate [c_customer_sk#89], [sum((cast(ss_quantity#416 as decimal(10,0)) * ss_sales_price#419)) AS csales#401]\n   +- Project [ss_quantity#416, ss_sales_price#419, c_customer_sk#89]\n      +- Join Inner, (ss_customer_sk#409 = c_customer_sk#89)\n         :- LogicalQueryStage Project [ss_customer_sk#409, ss_quantity#416, ss_sales_price#419], ShuffleQueryStage 3\n         +- Project [c_customer_sk#89]\n            +- Filter isnotnull(c_customer_sk#89)\n               +- Relation spark_catalog.tpcds_100.customer[c_customer_sk#89,c_customer_id#90,c_current_cdemo_sk#91,c_current_hdemo_sk#92,c_current_addr_sk#93,c_first_shipto_date_sk#94,c_first_sales_date_sk#95,c_salutation#96,c_first_name#97,c_last_name#98,c_preferred_cust_flag#99,c_birth_day#100,c_birth_month#101,c_birth_year#102,c_birth_country#103,c_login#104,c_email_address#105,c_last_review_date#106] parquet\n"
      },
      "IM" : {
        "inputSizeInBytes" : 7374337696,
        "inputRowCount" : 216823053
      },
      "PD" : {
        "9" : [ 13518805, 13453589, 13244444, 13359211, 13334313, 13454772, 13250578, 13170495, 13357335, 13447677, 13503666, 13324214, 13562427, 13501341, 13377100, 13328374, 13524888, 13698935, 13411939, 13437088, 13333302, 13396301, 13492036, 13443102, 13360848, 13401763, 13341042, 13607509, 13350502, 13325306, 13134478, 13298492, 13468524, 13201764, 13481859, 13477878, 13276805, 13201006, 13207319, 13289840, 13192378, 13384318, 13140961, 13476653, 13490551, 13198963, 13483420, 13433757, 13407896, 13420802, 13580576, 13476504, 13311076, 13431586, 13330027, 13378376, 13325364, 13123863, 13288418, 13349342, 13254973, 13643407, 13280137, 13354979, 13226253, 13605744, 13511258, 13295966, 13365220, 13544486, 13459959, 13271520, 13203431, 13477268, 13449617, 13508588, 13668380, 13476857, 13423671, 13435861, 13390337, 13600153, 13666693, 13080514, 13254074, 13254064, 13270074, 13373516, 13351864, 13592141, 13333393, 13441875, 13477448, 13317687, 13457044, 13737739, 13138463, 13196181, 13329856, 13156576, 13019198, 13432780, 13379316, 13180598, 13338896, 13588770, 13394637, 13761908, 13083411, 13224117, 13269821, 13397912, 13588705, 13325171, 13412799, 13337353, 13110802, 13147287, 13371949, 13335067, 13318828, 13475125, 13555274, 13387686, 13442857, 13641088, 13268376, 13177576, 13320860, 13140679, 13521565, 13536271, 13428423, 13400206, 13183593, 13238409, 13439175, 13536432, 13467465, 13478623, 13335492, 13123909, 13223986, 13525933, 13462980, 13565528, 13726933, 13352624, 13387610, 13375496, 13577508, 13387078, 13616253, 13532324, 13528405, 13531530, 13320755, 13434294, 13668517, 13144492, 13167361, 13156043, 13525608, 13257451, 13475026, 13355739, 13356302, 13511942, 13448909, 13194984, 13509002, 13704877, 13487601, 13439271, 13482180, 13219680, 13497123, 13204110, 13388364, 13320424, 13234720, 13423920, 13262170, 13300638, 13721653, 13571015, 13739066, 13518734, 13287964, 13409637, 13505738, 13357001, 13300338, 13156416, 13514328, 13618399, 13345482, 13403682, 13516533, 13195070 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 8,
        "FinishedTasksNum" : 12,
        "FinishedTasksTotalTimeInMs" : 318286.0,
        "FinishedTasksDistributionInMs" : [ 25356.0, 26286.0, 26360.0, 27024.0, 27736.0 ]
      },
      "StartTimeInMs" : 1702226818904,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 52037,
        "IOBytes" : {
          "Total" : 11117122287,
          "Details" : {
            "IR" : 0,
            "IW" : 0,
            "SR" : 11102321120,
            "SW" : 14801167
          }
        }
      }
    },
    "5" : {
      "LQP" : {
        "operators" : {
          "45" : {
            "sign" : -350419576,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 23812188,
            "rowCount" : 1984349,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_customer_sk#481] "
          },
          "34" : {
            "sign" : 1565358831,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 39925696056,
            "rowCount" : 262669053,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(ss_customer_sk#409) AND isnotnull(ss_sold_date_sk#429)) AND dynamicpruning#610 [ss_sold_date_sk#429]) "
          },
          "67" : {
            "sign" : 388376503,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 26102424,
            "rowCount" : 204000,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_item_sk#67, i_item_desc#71], ShuffleQueryStage 15 "
          },
          "12" : {
            "sign" : -938487710,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 67361424,
            "rowCount" : 1403363,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [cs_bill_customer_sk#109, cs_item_sk#121, cs_quantity#124, cs_list_price#126, cs_sold_date_sk#140], ShuffleQueryStage 0 "
          },
          "66" : {
            "sign" : -1070534819,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 4248649360,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ss_item_sk#17, d_date#41], ShuffleQueryStage 30 "
          },
          "51" : {
            "sign" : 1454164637,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 24000000,
            "rowCount" : 2000000,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [c_customer_sk#481], ShuffleQueryStage 10 "
          },
          "84" : {
            "sign" : 1454165815,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 24000000,
            "rowCount" : 2000000,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [c_customer_sk#481], ShuffleQueryStage 27 "
          },
          "8" : {
            "sign" : 1441568544,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 1392136096,
            "rowCount" : 43504253,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cs_sold_date_sk#140 = d_date_sk#517) "
          },
          "73" : {
            "sign" : 457576007,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 6601125024,
            "rowCount" : 275046876,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ss_customer_sk#460, ss_quantity#467, ss_sales_price#470], ShuffleQueryStage 17 "
          },
          "78" : {
            "sign" : 290084495,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 23812188,
            "rowCount" : 1984349,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_customer_sk#481] "
          },
          "19" : {
            "sign" : 1120906919,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 26102424,
            "rowCount" : 204000,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_item_sk#67, i_item_desc#71], ShuffleQueryStage 2 "
          },
          "23" : {
            "sign" : 1623804386,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 6601054824,
            "rowCount" : 275043951,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_quantity#467, ss_sales_price#470, c_customer_sk#481] "
          },
          "62" : {
            "sign" : 770061938,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 1083405586800000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (cnt#400L > 4) "
          },
          "4" : {
            "sign" : 1365193141,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 1648640717,
            "rowCount" : 27026897,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [c_last_name#508, c_first_name#507], [c_last_name#508, c_first_name#507, sum((cast(cs_quantity#124 as decimal(10,0)) * cs_list_price#126)) AS sales#391] "
          },
          "77" : {
            "sign" : 1358266277,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 98000000,
            "rowCount" : 2000000,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [c_customer_sk#545, c_first_name#553, c_last_name#554], ShuffleQueryStage 23 "
          },
          "40" : {
            "sign" : -337975679,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 500000000,
            "rowCount" : 2000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: isnotnull(c_customer_sk#89) "
          },
          "15" : {
            "sign" : -500295036,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 1083405586800000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [_groupingexpression#608, i_item_sk#67, d_date#41], [i_item_sk#67 AS item_sk#398, count(1) AS cnt#400L] "
          },
          "11" : {
            "sign" : 2111785784,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 44907616,
            "rowCount" : 1403363,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (cs_item_sk#121 = item_sk#398) "
          },
          "9" : {
            "sign" : -990926960,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 39294164,
            "rowCount" : 1403363,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (cs_bill_customer_sk#109 = c_customer_sk#481) "
          },
          "44" : {
            "sign" : 435063190,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 98000000,
            "rowCount" : 2000000,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [c_customer_sk#499, c_first_name#507, c_last_name#508], ShuffleQueryStage 6 "
          },
          "33" : {
            "sign" : -861776479,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 7354733484,
            "rowCount" : 262669053,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_customer_sk#409, ss_quantity#416, ss_sales_price#419, ss_sold_date_sk#429] "
          },
          "22" : {
            "sign" : 1934210699,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 55561772,
            "rowCount" : 1984349,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [c_customer_sk#481], [c_customer_sk#481, sum((cast(ss_quantity#467 as decimal(10,0)) * ss_sales_price#470)) AS ssales#403] "
          },
          "56" : {
            "sign" : -2079294392,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 71389876192,
            "rowCount" : 2230933631,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ws_sold_date_sk#174 = d_date_sk#563) "
          },
          "55" : {
            "sign" : 2065671769,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 53542407144,
            "rowCount" : 2230933631,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_bill_customer_sk#144, ws_quantity#158, ws_list_price#160] "
          },
          "26" : {
            "sign" : 739645252,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 24000000,
            "rowCount" : 2000000,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [c_customer_sk#481], ShuffleQueryStage 4 "
          },
          "50" : {
            "sign" : -1093617969,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 6601125024,
            "rowCount" : 275046876,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ss_customer_sk#460, ss_quantity#467, ss_sales_price#470], ShuffleQueryStage 8 "
          },
          "37" : {
            "sign" : 2051540096,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 355962,
            "rowCount" : 1447,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (d_year#436 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#430)) "
          },
          "68" : {
            "sign" : 998370159,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 23812188,
            "rowCount" : 1984349,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_customer_sk#481] "
          },
          "61" : {
            "sign" : 2022277624,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 650043352080000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [item_sk#398] "
          },
          "13" : {
            "sign" : 1981268591,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 650043352080000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [item_sk#398] "
          },
          "46" : {
            "sign" : 789941336,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 55561772,
            "rowCount" : 1984349,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(ssales#403) AND (cast(ssales#403 as decimal(38,8)) > (0.950000 * scalar-subquery#404 []))) "
          },
          "24" : {
            "sign" : 1908847787,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 7701230628,
            "rowCount" : 275043951,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_customer_sk#460 = c_customer_sk#481) "
          },
          "83" : {
            "sign" : 457576906,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 6601125024,
            "rowCount" : 275046876,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ss_customer_sk#460, ss_quantity#467, ss_sales_price#470], ShuffleQueryStage 25 "
          },
          "35" : {
            "sign" : -977156952,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#407, ss_item_sk#408, ss_customer_sk#409, ss_cdemo_sk#410, ss_hdemo_sk#411, ss_addr_sk#412, ss_store_sk#413, ss_promo_sk#414, ss_ticket_number#415L, ss_quantity#416, ss_wholesale_cost#417, ss_list_price#418, ss_sales_price#419, ss_ext_discount_amt#420, ss_ext_sales_price#421, ss_ext_wholesale_cost#422, ss_ext_list_price#423, ss_ext_tax#424, ss_coupon_amt#425, ss_net_paid#426, ss_net_paid_inc_tax#427, ss_net_profit#428, ss_sold_date_sk#429], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "16" : {
            "sign" : -2009662925,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 1950130056240000,
            "rowCount" : 54170279340000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date#41, i_item_sk#67, substr(i_item_desc#71, 1, 30) AS _groupingexpression#608] "
          },
          "79" : {
            "sign" : -639744623,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 55561772,
            "rowCount" : 1984349,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(ssales#403) AND (cast(ssales#403 as decimal(38,8)) > (0.950000 * scalar-subquery#404 []))) "
          },
          "5" : {
            "sign" : -1523964623,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 4959484842000000,
            "rowCount" : 87008506000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_quantity#124, cs_list_price#126, c_first_name#507, c_last_name#508] "
          },
          "72" : {
            "sign" : 914322748,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 7701230628,
            "rowCount" : 275043951,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_customer_sk#460 = c_customer_sk#481) "
          },
          "10" : {
            "sign" : -1537602824,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 39294164,
            "rowCount" : 1403363,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_bill_customer_sk#109, cs_quantity#124, cs_list_price#126, cs_sold_date_sk#140] "
          },
          "59" : {
            "sign" : 910944340,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 2302899232,
            "rowCount" : 71965601,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (ws_item_sk#143 = item_sk#398) "
          },
          "48" : {
            "sign" : 47435418,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 6601054824,
            "rowCount" : 275043951,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_quantity#467, ss_sales_price#470, c_customer_sk#481] "
          },
          "21" : {
            "sign" : -1901984732,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 55561772,
            "rowCount" : 1984349,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(ssales#403) AND (cast(ssales#403 as decimal(38,8)) > (0.950000 * scalar-subquery#404 []))) "
          },
          "76" : {
            "sign" : 1645687881,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 98000000,
            "rowCount" : 2000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (c_customer_sk#545 = c_customer_sk#481) "
          },
          "54" : {
            "sign" : 2038011901,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 4702228440,
            "rowCount" : 72341976,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ws_bill_customer_sk#144 = c_customer_sk#545) "
          },
          "43" : {
            "sign" : -528156139,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 98000000,
            "rowCount" : 2000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (c_customer_sk#499 = c_customer_sk#481) "
          },
          "65" : {
            "sign" : -1904280941,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 2166811173600000,
            "rowCount" : 54170279340000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_item_sk#17 = i_item_sk#67) "
          },
          "71" : {
            "sign" : 82168585,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 6601054824,
            "rowCount" : 275043951,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_quantity#467, ss_sales_price#470, c_customer_sk#481] "
          },
          "57" : {
            "sign" : -433298353,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 2015036828,
            "rowCount" : 71965601,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (ws_bill_customer_sk#144 = c_customer_sk#481) "
          },
          "32" : {
            "sign" : 305748262,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 8497298720,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#429 = d_date_sk#430) "
          },
          "80" : {
            "sign" : 2102197308,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 55561772,
            "rowCount" : 1984349,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [c_customer_sk#481], [c_customer_sk#481, sum((cast(ss_quantity#467 as decimal(10,0)) * ss_sales_price#470)) AS ssales#403] "
          },
          "82" : {
            "sign" : -1025989668,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 7701230628,
            "rowCount" : 275043951,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_customer_sk#460 = c_customer_sk#481) "
          },
          "49" : {
            "sign" : -1437901541,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 7701230628,
            "rowCount" : 275043951,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_customer_sk#460 = c_customer_sk#481) "
          },
          "6" : {
            "sign" : 1133093440,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 5655552890000000,
            "rowCount" : 87008506000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cs_bill_customer_sk#109 = c_customer_sk#499) "
          },
          "36" : {
            "sign" : 1217444409,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 17364,
            "rowCount" : 1447,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#430] "
          },
          "1" : {
            "sign" : -1256479583,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
            "sizeInBytes" : 3297281434,
            "rowCount" : 54053794,
            "isRuntime" : false,
            "predicate" : " (unknown) LocalLimit Arguments: 100 "
          },
          "39" : {
            "sign" : 1085635783,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 24000000,
            "rowCount" : 2000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_customer_sk#89] "
          },
          "17" : {
            "sign" : 566394868,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 2166811173600000,
            "rowCount" : 54170279340000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_item_sk#17 = i_item_sk#67) "
          },
          "25" : {
            "sign" : -1093618124,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 6601125024,
            "rowCount" : 275046876,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ss_customer_sk#460, ss_quantity#467, ss_sales_price#470], ShuffleQueryStage 3 "
          },
          "60" : {
            "sign" : 1832837103,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 2302899232,
            "rowCount" : 71965601,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ws_item_sk#143, ws_bill_customer_sk#144, ws_quantity#158, ws_list_price#160, ws_sold_date_sk#174], ShuffleQueryStage 11 "
          },
          "14" : {
            "sign" : 1045330691,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 1083405586800000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (cnt#400L > 4) "
          },
          "47" : {
            "sign" : 431587195,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 55561772,
            "rowCount" : 1984349,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [c_customer_sk#481], [c_customer_sk#481, sum((cast(ss_quantity#467 as decimal(10,0)) * ss_sales_price#470)) AS ssales#403] "
          },
          "31" : {
            "sign" : 1802383537,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 6372974040,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_customer_sk#409, ss_quantity#416, ss_sales_price#419] "
          },
          "69" : {
            "sign" : -1882899317,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 55561772,
            "rowCount" : 1984349,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(ssales#403) AND (cast(ssales#403 as decimal(38,8)) > (0.950000 * scalar-subquery#404 []))) "
          },
          "58" : {
            "sign" : -1718060309,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 2015036828,
            "rowCount" : 71965601,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_bill_customer_sk#144, ws_quantity#158, ws_list_price#160, ws_sold_date_sk#174] "
          },
          "64" : {
            "sign" : 1825233538,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 1950130056240000,
            "rowCount" : 54170279340000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date#41, i_item_sk#67, substr(i_item_desc#71, 1, 30) AS _groupingexpression#608] "
          },
          "53" : {
            "sign" : 1873577481,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 4123492632,
            "rowCount" : 72341976,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_quantity#158, ws_list_price#160, c_first_name#553, c_last_name#554] "
          },
          "42" : {
            "sign" : 1758754844,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1048824,
            "rowCount" : 31,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#517], BroadcastQueryStage 5 "
          },
          "75" : {
            "sign" : -2138347845,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1048824,
            "rowCount" : 31,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#563], BroadcastQueryStage 21 "
          },
          "0" : {
            "sign" : -616519630,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
            "sizeInBytes" : 6400,
            "rowCount" : 100,
            "isRuntime" : false,
            "predicate" : " (unknown) GlobalLimit Arguments: 100 "
          },
          "20" : {
            "sign" : 2123397918,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 23812188,
            "rowCount" : 1984349,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_customer_sk#481] "
          },
          "27" : {
            "sign" : -582481967,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 24,
            "rowCount" : 1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [max(csales#401) AS tpcds_cmax#402] "
          },
          "70" : {
            "sign" : -1381279908,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 55561772,
            "rowCount" : 1984349,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [c_customer_sk#481], [c_customer_sk#481, sum((cast(ss_quantity#467 as decimal(10,0)) * ss_sales_price#470)) AS ssales#403] "
          },
          "2" : {
            "sign" : -1336807780,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 3297281434,
            "rowCount" : 54053794,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [c_last_name#508 ASC NULLS FIRST, c_first_name#507 ASC NULLS FIRST, sales#391 ASC NULLS FIRST], true "
          },
          "38" : {
            "sign" : -358797686,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#430, d_date_id#431, d_date#432, d_month_seq#433, d_week_seq#434, d_quarter_seq#435, d_year#436, d_dow#437, d_moy#438, d_dom#439, d_qoy#440, d_fy_year#441, d_fy_quarter_seq#442, d_fy_week_seq#443, d_day_name#444, d_quarter_name#445, d_holiday#446, d_weekend#447, d_following_holiday#448, d_first_dom#449, d_last_dom#450, d_same_day_ly#451, d_same_day_lq#452, d_current_day#453, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "81" : {
            "sign" : -2121928113,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 6601054824,
            "rowCount" : 275043951,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_quantity#467, ss_sales_price#470, c_customer_sk#481] "
          },
          "18" : {
            "sign" : -1070535532,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 4248649360,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ss_item_sk#17, d_date#41], ShuffleQueryStage 28 "
          },
          "30" : {
            "sign" : -949612920,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 7701230628,
            "rowCount" : 275043951,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_customer_sk#409 = c_customer_sk#89) "
          },
          "7" : {
            "sign" : -758780695,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 1044102072,
            "rowCount" : 43504253,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_bill_customer_sk#109, cs_quantity#124, cs_list_price#126] "
          },
          "29" : {
            "sign" : -1338930356,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 6601054824,
            "rowCount" : 275043951,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_quantity#416, ss_sales_price#419, c_customer_sk#89] "
          },
          "41" : {
            "sign" : -576393737,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 500000000,
            "rowCount" : 2000000,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [c_customer_sk#89, c_customer_id#90, c_current_cdemo_sk#91, c_current_hdemo_sk#92, c_current_addr_sk#93, c_first_shipto_date_sk#94, c_first_sales_date_sk#95, c_salutation#96, c_first_name#97, c_last_name#98, c_preferred_cust_flag#99, c_birth_day#100, c_birth_month#101, c_birth_year#102, c_birth_country#103, c_login#104, c_email_address#105, c_last_review_date#106], `spark_catalog`.`tpcds_100`.`customer`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "63" : {
            "sign" : 1782114115,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 1083405586800000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [_groupingexpression#608, i_item_sk#67, d_date#41], [i_item_sk#67 AS item_sk#398, count(1) AS cnt#400L] "
          },
          "3" : {
            "sign" : 225600940,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Union",
            "sizeInBytes" : 3297281434,
            "rowCount" : 54053794,
            "isRuntime" : false,
            "predicate" : " (unknown) Union Arguments: false, false "
          },
          "74" : {
            "sign" : 1454164916,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 24000000,
            "rowCount" : 2000000,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [c_customer_sk#481], ShuffleQueryStage 19 "
          },
          "52" : {
            "sign" : 1307009313,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 1648640717,
            "rowCount" : 27026897,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [c_last_name#554, c_first_name#553], [c_last_name#554, c_first_name#553, sum((cast(ws_quantity#158 as decimal(10,0)) * ws_list_price#160)) AS sales#394] "
          },
          "28" : {
            "sign" : -660295919,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 47624376,
            "rowCount" : 1984349,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [c_customer_sk#89], [sum((cast(ss_quantity#416 as decimal(10,0)) * ss_sales_price#419)) AS csales#401] "
          }
        },
        "links" : [ {
          "fromId" : 12,
          "fromName" : "LogicalQueryStage",
          "toId" : 11,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 18,
          "fromName" : "LogicalQueryStage",
          "toId" : 17,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 19,
          "fromName" : "LogicalQueryStage",
          "toId" : 17,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 17,
          "fromName" : "Join",
          "toId" : 16,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 16,
          "fromName" : "Project",
          "toId" : 15,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 15,
          "fromName" : "Aggregate",
          "toId" : 14,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 14,
          "fromName" : "Filter",
          "toId" : 13,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 13,
          "fromName" : "Project",
          "toId" : 11,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "Join",
          "toId" : 10,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "Project",
          "toId" : 9,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 25,
          "fromName" : "LogicalQueryStage",
          "toId" : 24,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 26,
          "fromName" : "LogicalQueryStage",
          "toId" : 24,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 24,
          "fromName" : "Join",
          "toId" : 23,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 23,
          "fromName" : "Project",
          "toId" : 22,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 22,
          "fromName" : "Aggregate",
          "toId" : 21,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 35,
          "fromName" : "LogicalRelation",
          "toId" : 34,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 38,
          "fromName" : "LogicalRelation",
          "toId" : 37,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 37,
          "fromName" : "Filter",
          "toId" : 36,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 36,
          "fromName" : "Project",
          "toId" : 34,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 34,
          "fromName" : "Filter",
          "toId" : 33,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 33,
          "fromName" : "Project",
          "toId" : 32,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 36,
          "fromName" : "Project",
          "toId" : 32,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 32,
          "fromName" : "Join",
          "toId" : 31,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 31,
          "fromName" : "Project",
          "toId" : 30,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 41,
          "fromName" : "LogicalRelation",
          "toId" : 40,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 40,
          "fromName" : "Filter",
          "toId" : 39,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 39,
          "fromName" : "Project",
          "toId" : 30,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 30,
          "fromName" : "Join",
          "toId" : 29,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 29,
          "fromName" : "Project",
          "toId" : 28,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 28,
          "fromName" : "Aggregate",
          "toId" : 27,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 27,
          "fromName" : "Aggregate",
          "toId" : 21,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 21,
          "fromName" : "Filter",
          "toId" : 20,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 20,
          "fromName" : "Project",
          "toId" : 9,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "Join",
          "toId" : 8,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 42,
          "fromName" : "LogicalQueryStage",
          "toId" : 8,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "Join",
          "toId" : 7,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Project",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 44,
          "fromName" : "LogicalQueryStage",
          "toId" : 43,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 50,
          "fromName" : "LogicalQueryStage",
          "toId" : 49,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 51,
          "fromName" : "LogicalQueryStage",
          "toId" : 49,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 49,
          "fromName" : "Join",
          "toId" : 48,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 48,
          "fromName" : "Project",
          "toId" : 47,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 47,
          "fromName" : "Aggregate",
          "toId" : 46,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 27,
          "fromName" : "Aggregate",
          "toId" : 46,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 46,
          "fromName" : "Filter",
          "toId" : 45,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 45,
          "fromName" : "Project",
          "toId" : 43,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 43,
          "fromName" : "Join",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Join",
          "toId" : 5,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Project",
          "toId" : 4,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Aggregate",
          "toId" : 3,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 60,
          "fromName" : "LogicalQueryStage",
          "toId" : 59,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 66,
          "fromName" : "LogicalQueryStage",
          "toId" : 65,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 67,
          "fromName" : "LogicalQueryStage",
          "toId" : 65,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 65,
          "fromName" : "Join",
          "toId" : 64,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 64,
          "fromName" : "Project",
          "toId" : 63,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 63,
          "fromName" : "Aggregate",
          "toId" : 62,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 62,
          "fromName" : "Filter",
          "toId" : 61,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 61,
          "fromName" : "Project",
          "toId" : 59,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 59,
          "fromName" : "Join",
          "toId" : 58,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 58,
          "fromName" : "Project",
          "toId" : 57,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 73,
          "fromName" : "LogicalQueryStage",
          "toId" : 72,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 74,
          "fromName" : "LogicalQueryStage",
          "toId" : 72,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 72,
          "fromName" : "Join",
          "toId" : 71,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 71,
          "fromName" : "Project",
          "toId" : 70,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 70,
          "fromName" : "Aggregate",
          "toId" : 69,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 27,
          "fromName" : "Aggregate",
          "toId" : 69,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 69,
          "fromName" : "Filter",
          "toId" : 68,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 68,
          "fromName" : "Project",
          "toId" : 57,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 57,
          "fromName" : "Join",
          "toId" : 56,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 75,
          "fromName" : "LogicalQueryStage",
          "toId" : 56,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 56,
          "fromName" : "Join",
          "toId" : 55,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 55,
          "fromName" : "Project",
          "toId" : 54,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 77,
          "fromName" : "LogicalQueryStage",
          "toId" : 76,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 83,
          "fromName" : "LogicalQueryStage",
          "toId" : 82,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 84,
          "fromName" : "LogicalQueryStage",
          "toId" : 82,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 82,
          "fromName" : "Join",
          "toId" : 81,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 81,
          "fromName" : "Project",
          "toId" : 80,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 80,
          "fromName" : "Aggregate",
          "toId" : 79,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 27,
          "fromName" : "Aggregate",
          "toId" : 79,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 79,
          "fromName" : "Filter",
          "toId" : 78,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 78,
          "fromName" : "Project",
          "toId" : 76,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 76,
          "fromName" : "Join",
          "toId" : 54,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 54,
          "fromName" : "Join",
          "toId" : 53,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 53,
          "fromName" : "Project",
          "toId" : 52,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 52,
          "fromName" : "Aggregate",
          "toId" : 3,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Union",
          "toId" : 2,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "LocalLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "LocalLimit",
          "toId" : 0,
          "toName" : "GlobalLimit",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [c_last_name#508 ASC NULLS FIRST, c_first_name#507 ASC NULLS FIRST, sales#391 ASC NULLS FIRST], true\n      +- Union false, false\n         :- Aggregate [c_last_name#508, c_first_name#507], [c_last_name#508, c_first_name#507, sum((cast(cs_quantity#124 as decimal(10,0)) * cs_list_price#126)) AS sales#391]\n         :  +- Project [cs_quantity#124, cs_list_price#126, c_first_name#507, c_last_name#508]\n         :     +- Join Inner, (cs_bill_customer_sk#109 = c_customer_sk#499)\n         :        :- Project [cs_bill_customer_sk#109, cs_quantity#124, cs_list_price#126]\n         :        :  +- Join Inner, (cs_sold_date_sk#140 = d_date_sk#517)\n         :        :     :- Join LeftSemi, (cs_bill_customer_sk#109 = c_customer_sk#481)\n         :        :     :  :- Project [cs_bill_customer_sk#109, cs_quantity#124, cs_list_price#126, cs_sold_date_sk#140]\n         :        :     :  :  +- Join LeftSemi, (cs_item_sk#121 = item_sk#398)\n         :        :     :  :     :- LogicalQueryStage Project [cs_bill_customer_sk#109, cs_item_sk#121, cs_quantity#124, cs_list_price#126, cs_sold_date_sk#140], ShuffleQueryStage 0\n         :        :     :  :     +- Project [item_sk#398]\n         :        :     :  :        +- Filter (cnt#400L > 4)\n         :        :     :  :           +- Aggregate [_groupingexpression#608, i_item_sk#67, d_date#41], [i_item_sk#67 AS item_sk#398, count(1) AS cnt#400L]\n         :        :     :  :              +- Project [d_date#41, i_item_sk#67, substr(i_item_desc#71, 1, 30) AS _groupingexpression#608]\n         :        :     :  :                 +- Join Inner, (ss_item_sk#17 = i_item_sk#67)\n         :        :     :  :                    :- LogicalQueryStage Project [ss_item_sk#17, d_date#41], ShuffleQueryStage 28\n         :        :     :  :                    +- LogicalQueryStage Project [i_item_sk#67, i_item_desc#71], ShuffleQueryStage 2\n         :        :     :  +- Project [c_customer_sk#481]\n         :        :     :     +- Filter (isnotnull(ssales#403) AND (cast(ssales#403 as decimal(38,8)) > (0.950000 * scalar-subquery#404 [])))\n         :        :     :        :  +- Aggregate [max(csales#401) AS tpcds_cmax#402]\n         :        :     :        :     +- Aggregate [c_customer_sk#89], [sum((cast(ss_quantity#416 as decimal(10,0)) * ss_sales_price#419)) AS csales#401]\n         :        :     :        :        +- Project [ss_quantity#416, ss_sales_price#419, c_customer_sk#89]\n         :        :     :        :           +- Join Inner, (ss_customer_sk#409 = c_customer_sk#89)\n         :        :     :        :              :- Project [ss_customer_sk#409, ss_quantity#416, ss_sales_price#419]\n         :        :     :        :              :  +- Join Inner, (ss_sold_date_sk#429 = d_date_sk#430)\n         :        :     :        :              :     :- Project [ss_customer_sk#409, ss_quantity#416, ss_sales_price#419, ss_sold_date_sk#429]\n         :        :     :        :              :     :  +- Filter ((isnotnull(ss_customer_sk#409) AND isnotnull(ss_sold_date_sk#429)) AND dynamicpruning#610 [ss_sold_date_sk#429])\n         :        :     :        :              :     :     :  +- Project [d_date_sk#430]\n         :        :     :        :              :     :     :     +- Filter (d_year#436 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#430))\n         :        :     :        :              :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#430,d_date_id#431,d_date#432,d_month_seq#433,d_week_seq#434,d_quarter_seq#435,d_year#436,d_dow#437,d_moy#438,d_dom#439,d_qoy#440,d_fy_year#441,d_fy_quarter_seq#442,d_fy_week_seq#443,d_day_name#444,d_quarter_name#445,d_holiday#446,d_weekend#447,d_following_holiday#448,d_first_dom#449,d_last_dom#450,d_same_day_ly#451,d_same_day_lq#452,d_current_day#453,... 4 more fields] parquet\n         :        :     :        :              :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#407,ss_item_sk#408,ss_customer_sk#409,ss_cdemo_sk#410,ss_hdemo_sk#411,ss_addr_sk#412,ss_store_sk#413,ss_promo_sk#414,ss_ticket_number#415L,ss_quantity#416,ss_wholesale_cost#417,ss_list_price#418,ss_sales_price#419,ss_ext_discount_amt#420,ss_ext_sales_price#421,ss_ext_wholesale_cost#422,ss_ext_list_price#423,ss_ext_tax#424,ss_coupon_amt#425,ss_net_paid#426,ss_net_paid_inc_tax#427,ss_net_profit#428,ss_sold_date_sk#429] parquet\n         :        :     :        :              :     +- Project [d_date_sk#430]\n         :        :     :        :              :        +- Filter (d_year#436 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#430))\n         :        :     :        :              :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#430,d_date_id#431,d_date#432,d_month_seq#433,d_week_seq#434,d_quarter_seq#435,d_year#436,d_dow#437,d_moy#438,d_dom#439,d_qoy#440,d_fy_year#441,d_fy_quarter_seq#442,d_fy_week_seq#443,d_day_name#444,d_quarter_name#445,d_holiday#446,d_weekend#447,d_following_holiday#448,d_first_dom#449,d_last_dom#450,d_same_day_ly#451,d_same_day_lq#452,d_current_day#453,... 4 more fields] parquet\n         :        :     :        :              +- Project [c_customer_sk#89]\n         :        :     :        :                 +- Filter isnotnull(c_customer_sk#89)\n         :        :     :        :                    +- Relation spark_catalog.tpcds_100.customer[c_customer_sk#89,c_customer_id#90,c_current_cdemo_sk#91,c_current_hdemo_sk#92,c_current_addr_sk#93,c_first_shipto_date_sk#94,c_first_sales_date_sk#95,c_salutation#96,c_first_name#97,c_last_name#98,c_preferred_cust_flag#99,c_birth_day#100,c_birth_month#101,c_birth_year#102,c_birth_country#103,c_login#104,c_email_address#105,c_last_review_date#106] parquet\n         :        :     :        +- Aggregate [c_customer_sk#481], [c_customer_sk#481, sum((cast(ss_quantity#467 as decimal(10,0)) * ss_sales_price#470)) AS ssales#403]\n         :        :     :           +- Project [ss_quantity#467, ss_sales_price#470, c_customer_sk#481]\n         :        :     :              +- Join Inner, (ss_customer_sk#460 = c_customer_sk#481)\n         :        :     :                 :- LogicalQueryStage Project [ss_customer_sk#460, ss_quantity#467, ss_sales_price#470], ShuffleQueryStage 3\n         :        :     :                 +- LogicalQueryStage Project [c_customer_sk#481], ShuffleQueryStage 4\n         :        :     +- LogicalQueryStage Project [d_date_sk#517], BroadcastQueryStage 5\n         :        +- Join LeftSemi, (c_customer_sk#499 = c_customer_sk#481)\n         :           :- LogicalQueryStage Project [c_customer_sk#499, c_first_name#507, c_last_name#508], ShuffleQueryStage 6\n         :           +- Project [c_customer_sk#481]\n         :              +- Filter (isnotnull(ssales#403) AND (cast(ssales#403 as decimal(38,8)) > (0.950000 * scalar-subquery#404 [])))\n         :                 :  +- Aggregate [max(csales#401) AS tpcds_cmax#402]\n         :                 :     +- Aggregate [c_customer_sk#89], [sum((cast(ss_quantity#416 as decimal(10,0)) * ss_sales_price#419)) AS csales#401]\n         :                 :        +- Project [ss_quantity#416, ss_sales_price#419, c_customer_sk#89]\n         :                 :           +- Join Inner, (ss_customer_sk#409 = c_customer_sk#89)\n         :                 :              :- Project [ss_customer_sk#409, ss_quantity#416, ss_sales_price#419]\n         :                 :              :  +- Join Inner, (ss_sold_date_sk#429 = d_date_sk#430)\n         :                 :              :     :- Project [ss_customer_sk#409, ss_quantity#416, ss_sales_price#419, ss_sold_date_sk#429]\n         :                 :              :     :  +- Filter ((isnotnull(ss_customer_sk#409) AND isnotnull(ss_sold_date_sk#429)) AND dynamicpruning#610 [ss_sold_date_sk#429])\n         :                 :              :     :     :  +- Project [d_date_sk#430]\n         :                 :              :     :     :     +- Filter (d_year#436 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#430))\n         :                 :              :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#430,d_date_id#431,d_date#432,d_month_seq#433,d_week_seq#434,d_quarter_seq#435,d_year#436,d_dow#437,d_moy#438,d_dom#439,d_qoy#440,d_fy_year#441,d_fy_quarter_seq#442,d_fy_week_seq#443,d_day_name#444,d_quarter_name#445,d_holiday#446,d_weekend#447,d_following_holiday#448,d_first_dom#449,d_last_dom#450,d_same_day_ly#451,d_same_day_lq#452,d_current_day#453,... 4 more fields] parquet\n         :                 :              :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#407,ss_item_sk#408,ss_customer_sk#409,ss_cdemo_sk#410,ss_hdemo_sk#411,ss_addr_sk#412,ss_store_sk#413,ss_promo_sk#414,ss_ticket_number#415L,ss_quantity#416,ss_wholesale_cost#417,ss_list_price#418,ss_sales_price#419,ss_ext_discount_amt#420,ss_ext_sales_price#421,ss_ext_wholesale_cost#422,ss_ext_list_price#423,ss_ext_tax#424,ss_coupon_amt#425,ss_net_paid#426,ss_net_paid_inc_tax#427,ss_net_profit#428,ss_sold_date_sk#429] parquet\n         :                 :              :     +- Project [d_date_sk#430]\n         :                 :              :        +- Filter (d_year#436 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#430))\n         :                 :              :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#430,d_date_id#431,d_date#432,d_month_seq#433,d_week_seq#434,d_quarter_seq#435,d_year#436,d_dow#437,d_moy#438,d_dom#439,d_qoy#440,d_fy_year#441,d_fy_quarter_seq#442,d_fy_week_seq#443,d_day_name#444,d_quarter_name#445,d_holiday#446,d_weekend#447,d_following_holiday#448,d_first_dom#449,d_last_dom#450,d_same_day_ly#451,d_same_day_lq#452,d_current_day#453,... 4 more fields] parquet\n         :                 :              +- Project [c_customer_sk#89]\n         :                 :                 +- Filter isnotnull(c_customer_sk#89)\n         :                 :                    +- Relation spark_catalog.tpcds_100.customer[c_customer_sk#89,c_customer_id#90,c_current_cdemo_sk#91,c_current_hdemo_sk#92,c_current_addr_sk#93,c_first_shipto_date_sk#94,c_first_sales_date_sk#95,c_salutation#96,c_first_name#97,c_last_name#98,c_preferred_cust_flag#99,c_birth_day#100,c_birth_month#101,c_birth_year#102,c_birth_country#103,c_login#104,c_email_address#105,c_last_review_date#106] parquet\n         :                 +- Aggregate [c_customer_sk#481], [c_customer_sk#481, sum((cast(ss_quantity#467 as decimal(10,0)) * ss_sales_price#470)) AS ssales#403]\n         :                    +- Project [ss_quantity#467, ss_sales_price#470, c_customer_sk#481]\n         :                       +- Join Inner, (ss_customer_sk#460 = c_customer_sk#481)\n         :                          :- LogicalQueryStage Project [ss_customer_sk#460, ss_quantity#467, ss_sales_price#470], ShuffleQueryStage 8\n         :                          +- LogicalQueryStage Project [c_customer_sk#481], ShuffleQueryStage 10\n         +- Aggregate [c_last_name#554, c_first_name#553], [c_last_name#554, c_first_name#553, sum((cast(ws_quantity#158 as decimal(10,0)) * ws_list_price#160)) AS sales#394]\n            +- Project [ws_quantity#158, ws_list_price#160, c_first_name#553, c_last_name#554]\n               +- Join Inner, (ws_bill_customer_sk#144 = c_customer_sk#545)\n                  :- Project [ws_bill_customer_sk#144, ws_quantity#158, ws_list_price#160]\n                  :  +- Join Inner, (ws_sold_date_sk#174 = d_date_sk#563)\n                  :     :- Join LeftSemi, (ws_bill_customer_sk#144 = c_customer_sk#481)\n                  :     :  :- Project [ws_bill_customer_sk#144, ws_quantity#158, ws_list_price#160, ws_sold_date_sk#174]\n                  :     :  :  +- Join LeftSemi, (ws_item_sk#143 = item_sk#398)\n                  :     :  :     :- LogicalQueryStage Project [ws_item_sk#143, ws_bill_customer_sk#144, ws_quantity#158, ws_list_price#160, ws_sold_date_sk#174], ShuffleQueryStage 11\n                  :     :  :     +- Project [item_sk#398]\n                  :     :  :        +- Filter (cnt#400L > 4)\n                  :     :  :           +- Aggregate [_groupingexpression#608, i_item_sk#67, d_date#41], [i_item_sk#67 AS item_sk#398, count(1) AS cnt#400L]\n                  :     :  :              +- Project [d_date#41, i_item_sk#67, substr(i_item_desc#71, 1, 30) AS _groupingexpression#608]\n                  :     :  :                 +- Join Inner, (ss_item_sk#17 = i_item_sk#67)\n                  :     :  :                    :- LogicalQueryStage Project [ss_item_sk#17, d_date#41], ShuffleQueryStage 30\n                  :     :  :                    +- LogicalQueryStage Project [i_item_sk#67, i_item_desc#71], ShuffleQueryStage 15\n                  :     :  +- Project [c_customer_sk#481]\n                  :     :     +- Filter (isnotnull(ssales#403) AND (cast(ssales#403 as decimal(38,8)) > (0.950000 * scalar-subquery#404 [])))\n                  :     :        :  +- Aggregate [max(csales#401) AS tpcds_cmax#402]\n                  :     :        :     +- Aggregate [c_customer_sk#89], [sum((cast(ss_quantity#416 as decimal(10,0)) * ss_sales_price#419)) AS csales#401]\n                  :     :        :        +- Project [ss_quantity#416, ss_sales_price#419, c_customer_sk#89]\n                  :     :        :           +- Join Inner, (ss_customer_sk#409 = c_customer_sk#89)\n                  :     :        :              :- Project [ss_customer_sk#409, ss_quantity#416, ss_sales_price#419]\n                  :     :        :              :  +- Join Inner, (ss_sold_date_sk#429 = d_date_sk#430)\n                  :     :        :              :     :- Project [ss_customer_sk#409, ss_quantity#416, ss_sales_price#419, ss_sold_date_sk#429]\n                  :     :        :              :     :  +- Filter ((isnotnull(ss_customer_sk#409) AND isnotnull(ss_sold_date_sk#429)) AND dynamicpruning#610 [ss_sold_date_sk#429])\n                  :     :        :              :     :     :  +- Project [d_date_sk#430]\n                  :     :        :              :     :     :     +- Filter (d_year#436 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#430))\n                  :     :        :              :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#430,d_date_id#431,d_date#432,d_month_seq#433,d_week_seq#434,d_quarter_seq#435,d_year#436,d_dow#437,d_moy#438,d_dom#439,d_qoy#440,d_fy_year#441,d_fy_quarter_seq#442,d_fy_week_seq#443,d_day_name#444,d_quarter_name#445,d_holiday#446,d_weekend#447,d_following_holiday#448,d_first_dom#449,d_last_dom#450,d_same_day_ly#451,d_same_day_lq#452,d_current_day#453,... 4 more fields] parquet\n                  :     :        :              :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#407,ss_item_sk#408,ss_customer_sk#409,ss_cdemo_sk#410,ss_hdemo_sk#411,ss_addr_sk#412,ss_store_sk#413,ss_promo_sk#414,ss_ticket_number#415L,ss_quantity#416,ss_wholesale_cost#417,ss_list_price#418,ss_sales_price#419,ss_ext_discount_amt#420,ss_ext_sales_price#421,ss_ext_wholesale_cost#422,ss_ext_list_price#423,ss_ext_tax#424,ss_coupon_amt#425,ss_net_paid#426,ss_net_paid_inc_tax#427,ss_net_profit#428,ss_sold_date_sk#429] parquet\n                  :     :        :              :     +- Project [d_date_sk#430]\n                  :     :        :              :        +- Filter (d_year#436 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#430))\n                  :     :        :              :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#430,d_date_id#431,d_date#432,d_month_seq#433,d_week_seq#434,d_quarter_seq#435,d_year#436,d_dow#437,d_moy#438,d_dom#439,d_qoy#440,d_fy_year#441,d_fy_quarter_seq#442,d_fy_week_seq#443,d_day_name#444,d_quarter_name#445,d_holiday#446,d_weekend#447,d_following_holiday#448,d_first_dom#449,d_last_dom#450,d_same_day_ly#451,d_same_day_lq#452,d_current_day#453,... 4 more fields] parquet\n                  :     :        :              +- Project [c_customer_sk#89]\n                  :     :        :                 +- Filter isnotnull(c_customer_sk#89)\n                  :     :        :                    +- Relation spark_catalog.tpcds_100.customer[c_customer_sk#89,c_customer_id#90,c_current_cdemo_sk#91,c_current_hdemo_sk#92,c_current_addr_sk#93,c_first_shipto_date_sk#94,c_first_sales_date_sk#95,c_salutation#96,c_first_name#97,c_last_name#98,c_preferred_cust_flag#99,c_birth_day#100,c_birth_month#101,c_birth_year#102,c_birth_country#103,c_login#104,c_email_address#105,c_last_review_date#106] parquet\n                  :     :        +- Aggregate [c_customer_sk#481], [c_customer_sk#481, sum((cast(ss_quantity#467 as decimal(10,0)) * ss_sales_price#470)) AS ssales#403]\n                  :     :           +- Project [ss_quantity#467, ss_sales_price#470, c_customer_sk#481]\n                  :     :              +- Join Inner, (ss_customer_sk#460 = c_customer_sk#481)\n                  :     :                 :- LogicalQueryStage Project [ss_customer_sk#460, ss_quantity#467, ss_sales_price#470], ShuffleQueryStage 17\n                  :     :                 +- LogicalQueryStage Project [c_customer_sk#481], ShuffleQueryStage 19\n                  :     +- LogicalQueryStage Project [d_date_sk#563], BroadcastQueryStage 21\n                  +- Join LeftSemi, (c_customer_sk#545 = c_customer_sk#481)\n                     :- LogicalQueryStage Project [c_customer_sk#545, c_first_name#553, c_last_name#554], ShuffleQueryStage 23\n                     +- Project [c_customer_sk#481]\n                        +- Filter (isnotnull(ssales#403) AND (cast(ssales#403 as decimal(38,8)) > (0.950000 * scalar-subquery#404 [])))\n                           :  +- Aggregate [max(csales#401) AS tpcds_cmax#402]\n                           :     +- Aggregate [c_customer_sk#89], [sum((cast(ss_quantity#416 as decimal(10,0)) * ss_sales_price#419)) AS csales#401]\n                           :        +- Project [ss_quantity#416, ss_sales_price#419, c_customer_sk#89]\n                           :           +- Join Inner, (ss_customer_sk#409 = c_customer_sk#89)\n                           :              :- Project [ss_customer_sk#409, ss_quantity#416, ss_sales_price#419]\n                           :              :  +- Join Inner, (ss_sold_date_sk#429 = d_date_sk#430)\n                           :              :     :- Project [ss_customer_sk#409, ss_quantity#416, ss_sales_price#419, ss_sold_date_sk#429]\n                           :              :     :  +- Filter ((isnotnull(ss_customer_sk#409) AND isnotnull(ss_sold_date_sk#429)) AND dynamicpruning#610 [ss_sold_date_sk#429])\n                           :              :     :     :  +- Project [d_date_sk#430]\n                           :              :     :     :     +- Filter (d_year#436 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#430))\n                           :              :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#430,d_date_id#431,d_date#432,d_month_seq#433,d_week_seq#434,d_quarter_seq#435,d_year#436,d_dow#437,d_moy#438,d_dom#439,d_qoy#440,d_fy_year#441,d_fy_quarter_seq#442,d_fy_week_seq#443,d_day_name#444,d_quarter_name#445,d_holiday#446,d_weekend#447,d_following_holiday#448,d_first_dom#449,d_last_dom#450,d_same_day_ly#451,d_same_day_lq#452,d_current_day#453,... 4 more fields] parquet\n                           :              :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#407,ss_item_sk#408,ss_customer_sk#409,ss_cdemo_sk#410,ss_hdemo_sk#411,ss_addr_sk#412,ss_store_sk#413,ss_promo_sk#414,ss_ticket_number#415L,ss_quantity#416,ss_wholesale_cost#417,ss_list_price#418,ss_sales_price#419,ss_ext_discount_amt#420,ss_ext_sales_price#421,ss_ext_wholesale_cost#422,ss_ext_list_price#423,ss_ext_tax#424,ss_coupon_amt#425,ss_net_paid#426,ss_net_paid_inc_tax#427,ss_net_profit#428,ss_sold_date_sk#429] parquet\n                           :              :     +- Project [d_date_sk#430]\n                           :              :        +- Filter (d_year#436 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#430))\n                           :              :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#430,d_date_id#431,d_date#432,d_month_seq#433,d_week_seq#434,d_quarter_seq#435,d_year#436,d_dow#437,d_moy#438,d_dom#439,d_qoy#440,d_fy_year#441,d_fy_quarter_seq#442,d_fy_week_seq#443,d_day_name#444,d_quarter_name#445,d_holiday#446,d_weekend#447,d_following_holiday#448,d_first_dom#449,d_last_dom#450,d_same_day_ly#451,d_same_day_lq#452,d_current_day#453,... 4 more fields] parquet\n                           :              +- Project [c_customer_sk#89]\n                           :                 +- Filter isnotnull(c_customer_sk#89)\n                           :                    +- Relation spark_catalog.tpcds_100.customer[c_customer_sk#89,c_customer_id#90,c_current_cdemo_sk#91,c_current_hdemo_sk#92,c_current_addr_sk#93,c_first_shipto_date_sk#94,c_first_sales_date_sk#95,c_salutation#96,c_first_name#97,c_last_name#98,c_preferred_cust_flag#99,c_birth_day#100,c_birth_month#101,c_birth_year#102,c_birth_country#103,c_login#104,c_email_address#105,c_last_review_date#106] parquet\n                           +- Aggregate [c_customer_sk#481], [c_customer_sk#481, sum((cast(ss_quantity#467 as decimal(10,0)) * ss_sales_price#470)) AS ssales#403]\n                              +- Project [ss_quantity#467, ss_sales_price#470, c_customer_sk#481]\n                                 +- Join Inner, (ss_customer_sk#460 = c_customer_sk#481)\n                                    :- LogicalQueryStage Project [ss_customer_sk#460, ss_quantity#467, ss_sales_price#470], ShuffleQueryStage 25\n                                    +- LogicalQueryStage Project [c_customer_sk#481], ShuffleQueryStage 27\n"
      },
      "IM" : {
        "inputSizeInBytes" : 37618361968,
        "inputRowCount" : 1717045700
      },
      "PD" : {
        "1" : [ 84280, 84280, 84280, 92709, 92709, 84280, 92709, 84280, 76619, 92709, 92709, 84280, 92709, 84280, 84280, 84280, 84280, 84280, 92709, 92709, 92709, 92709, 84280, 84280, 92709, 84280, 84280, 92709, 84280, 92709, 92709, 92709, 92709, 84280, 84280, 92709, 84280, 84280, 84280, 92709, 84280, 84280, 84280, 92709, 92709, 84280, 84280, 84280, 84280, 84280, 92709, 92709, 84280, 84280, 84280, 92709, 92709, 92709, 84280, 84280, 84280, 92709, 84280, 92709, 84280, 92709, 92709, 84280, 92709, 92709, 92709, 84280, 92709, 92709, 84280, 92709, 84280, 92709, 84280, 84280, 92709, 84280, 92709, 84280, 92709, 84280, 84280, 92709, 92709, 84280, 84280, 84280, 92709, 84280, 92709, 92709, 84280, 92709, 92709, 84280, 84280, 92709, 84280, 92709, 92709, 84280, 84280, 92709, 84280, 92709, 84280, 92709, 84280, 92709, 92709, 92709, 76619, 92709, 84280, 84280, 84280, 92709, 92709, 92709, 92709, 92709, 84280, 84280, 92709, 84280, 84280, 84280, 84280, 92709, 84280, 84280, 92709, 92709, 92709, 84280, 84280, 84280, 92709, 92709, 92709, 84280, 84280, 84280, 92709, 84280, 92709, 84280, 92709, 84280, 84280, 92709, 84280, 92709, 84280, 84280, 84280, 92709, 92709, 92709, 84280, 92709, 84280, 84280, 92709, 84280, 84280, 92709, 84280, 84280, 92709, 84280, 84280, 84280, 84280, 84280, 84280, 84280, 92709, 84280, 92709, 92709, 84280, 84280, 84280, 84280, 92709, 84280, 84280, 84280, 84280, 84280, 84280, 84280, 92709, 92709 ],
        "0" : [ 146748, 148062, 162268, 147121, 156091, 155997, 162866, 145655, 137010, 149774, 166912, 149859, 147977, 148375, 146423, 147452, 146578, 149316, 154962, 146511, 149571, 154021, 147977, 141730, 163713, 148833, 153080, 150257, 141384, 155903, 150342, 142671, 164244, 155997, 151301, 154479, 154962, 155493, 149401, 149097, 146578, 146681, 151386, 149774, 147604, 149486, 162678, 148062, 143527, 135298, 167947, 150342, 155420, 154021, 145324, 154021, 158337, 152139, 156844, 150342, 154021, 152139, 155921, 159761, 133326, 153080, 151750, 147537, 165373, 160292, 151198, 144383, 155988, 152139, 147434, 159184, 141375, 164748, 155514, 149774, 147036, 146663, 150360, 148079, 159351, 149932, 150342, 148545, 160984, 153623, 158504, 163713, 148478, 136672, 156938, 162772, 145324, 146180, 155997, 145239, 151656, 154962, 147036, 150715, 152597, 149774, 158337, 156938, 137450, 150800, 144298, 148460, 142231, 158900, 149774, 159667, 146748, 148918, 146663, 157879, 145324, 150715, 157375, 152224, 154962, 150809, 153080, 158820, 153538, 151198, 152139, 158820, 146095, 148918, 147036, 142671, 141978, 162866, 155056, 155420, 160313, 146596, 150360, 155997, 150885, 157785, 153080, 153538, 153538, 155420, 144951, 134977, 152691, 153165, 151656, 154962, 156455, 141357, 158431, 137944, 155056, 164244, 158820, 162362, 150715, 151814, 151198, 149003, 148375, 153080, 155420, 157879, 149868, 155420, 153165, 153080, 137450, 137528, 152597, 157302, 153538, 141357, 152597, 141044, 152157, 155235, 151826, 146180, 151741, 147977, 152224, 146265, 143442, 136594, 156844, 148833, 149401, 143925, 147977, 160796 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 16,
        "FinishedTasksNum" : 19,
        "FinishedTasksTotalTimeInMs" : 17893.0,
        "FinishedTasksDistributionInMs" : [ 786.0, 838.0, 905.0, 1015.0, 1247.0 ]
      },
      "StartTimeInMs" : 1702226722217,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 148724,
        "IOBytes" : {
          "Total" : 22370354700,
          "Details" : {
            "IR" : 2906406251,
            "IW" : 0,
            "SR" : 12332414216,
            "SW" : 7131534233
          }
        }
      }
    },
    "10" : {
      "LQP" : {
        "operators" : {
          "45" : {
            "sign" : -350419576,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 6601125024000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_customer_sk#481] "
          },
          "34" : {
            "sign" : 1565358831,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 39925696056,
            "rowCount" : 262669053,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(ss_customer_sk#409) AND isnotnull(ss_sold_date_sk#429)) AND dynamicpruning#610 [ss_sold_date_sk#429]) "
          },
          "67" : {
            "sign" : 388376503,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 26102424,
            "rowCount" : 204000,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_item_sk#67, i_item_desc#71], ShuffleQueryStage 15 "
          },
          "12" : {
            "sign" : -938487710,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 67361424,
            "rowCount" : 1403363,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [cs_bill_customer_sk#109, cs_item_sk#121, cs_quantity#124, cs_list_price#126, cs_sold_date_sk#140], ShuffleQueryStage 0 "
          },
          "66" : {
            "sign" : -1070534819,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 4248649360,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ss_item_sk#17, d_date#41], ShuffleQueryStage 30 "
          },
          "51" : {
            "sign" : 1454164637,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 32000000,
            "rowCount" : 2000000,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [c_customer_sk#481], ShuffleQueryStage 10 "
          },
          "84" : {
            "sign" : 1454165815,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 32000000,
            "rowCount" : 2000000,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [c_customer_sk#481], ShuffleQueryStage 27 "
          },
          "8" : {
            "sign" : 1441568544,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 1392136096,
            "rowCount" : 43504253,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cs_sold_date_sk#140 = d_date_sk#517) "
          },
          "73" : {
            "sign" : 457576007,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 6601125024,
            "rowCount" : 275046876,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ss_customer_sk#460, ss_quantity#467, ss_sales_price#470], ShuffleQueryStage 17 "
          },
          "78" : {
            "sign" : 290084495,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 6601125024000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_customer_sk#481] "
          },
          "19" : {
            "sign" : 1120906919,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 26102424,
            "rowCount" : 204000,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_item_sk#67, i_item_desc#71], ShuffleQueryStage 2 "
          },
          "23" : {
            "sign" : 1623804386,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 13202250048000000,
            "rowCount" : 550093752000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_quantity#467, ss_sales_price#470, c_customer_sk#481] "
          },
          "62" : {
            "sign" : 770061938,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 1083405586800000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (cnt#400L > 4) "
          },
          "4" : {
            "sign" : 1365193141,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 5568544384000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [c_last_name#508, c_first_name#507], [c_last_name#508, c_first_name#507, sum((cast(cs_quantity#124 as decimal(10,0)) * cs_list_price#126)) AS sales#391] "
          },
          "77" : {
            "sign" : 1358266277,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 96527848,
            "rowCount" : 2000000,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [c_customer_sk#545, c_first_name#553, c_last_name#554], ShuffleQueryStage 23 "
          },
          "40" : {
            "sign" : -337975679,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 500000000,
            "rowCount" : 2000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: isnotnull(c_customer_sk#89) "
          },
          "15" : {
            "sign" : -500295036,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 1083405586800000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [_groupingexpression#608, i_item_sk#67, d_date#41], [i_item_sk#67 AS item_sk#398, count(1) AS cnt#400L] "
          },
          "11" : {
            "sign" : 2111785784,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 44907616,
            "rowCount" : 1403363,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (cs_item_sk#121 = item_sk#398) "
          },
          "9" : {
            "sign" : -990926960,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 39294164,
            "rowCount" : 1403363,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (cs_bill_customer_sk#109 = c_customer_sk#481) "
          },
          "44" : {
            "sign" : 435063190,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 96527848,
            "rowCount" : 2000000,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [c_customer_sk#499, c_first_name#507, c_last_name#508], ShuffleQueryStage 6 "
          },
          "33" : {
            "sign" : -861776479,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 7354733484,
            "rowCount" : 262669053,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_customer_sk#409, ss_quantity#416, ss_sales_price#419, ss_sold_date_sk#429] "
          },
          "22" : {
            "sign" : 1934210699,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 15402625056000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [c_customer_sk#481], [c_customer_sk#481, sum((cast(ss_quantity#467 as decimal(10,0)) * ss_sales_price#470)) AS ssales#403] "
          },
          "56" : {
            "sign" : -2079294392,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 835624096,
            "rowCount" : 26113253,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ws_sold_date_sk#174 = d_date_sk#563) "
          },
          "55" : {
            "sign" : 2065671769,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 626718072,
            "rowCount" : 26113253,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_bill_customer_sk#144, ws_quantity#158, ws_list_price#160] "
          },
          "26" : {
            "sign" : 739645252,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 32000000,
            "rowCount" : 2000000,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [c_customer_sk#481], ShuffleQueryStage 4 "
          },
          "50" : {
            "sign" : -1093617969,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 6601125024,
            "rowCount" : 275046876,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ss_customer_sk#460, ss_quantity#467, ss_sales_price#470], ShuffleQueryStage 8 "
          },
          "37" : {
            "sign" : 2051540096,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 355962,
            "rowCount" : 1447,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (d_year#436 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#430)) "
          },
          "68" : {
            "sign" : 998370159,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 6601125024000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_customer_sk#481] "
          },
          "61" : {
            "sign" : 2022277624,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 650043352080000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [item_sk#398] "
          },
          "13" : {
            "sign" : 1981268591,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 650043352080000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [item_sk#398] "
          },
          "46" : {
            "sign" : 789941336,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 15402625056000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(ssales#403) AND (cast(ssales#403 as decimal(38,8)) > (0.950000 * scalar-subquery#404 []))) "
          },
          "24" : {
            "sign" : 1908847787,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 15402625056000000,
            "rowCount" : 550093752000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_customer_sk#460 = c_customer_sk#481) "
          },
          "83" : {
            "sign" : 457576906,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 6601125024,
            "rowCount" : 275046876,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ss_customer_sk#460, ss_quantity#467, ss_sales_price#470], ShuffleQueryStage 25 "
          },
          "35" : {
            "sign" : -977156952,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#407, ss_item_sk#408, ss_customer_sk#409, ss_cdemo_sk#410, ss_hdemo_sk#411, ss_addr_sk#412, ss_store_sk#413, ss_promo_sk#414, ss_ticket_number#415L, ss_quantity#416, ss_wholesale_cost#417, ss_list_price#418, ss_sales_price#419, ss_ext_discount_amt#420, ss_ext_sales_price#421, ss_ext_wholesale_cost#422, ss_ext_list_price#423, ss_ext_tax#424, ss_coupon_amt#425, ss_net_paid#426, ss_net_paid_inc_tax#427, ss_net_profit#428, ss_sold_date_sk#429], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "16" : {
            "sign" : -2009662925,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 1950130056240000,
            "rowCount" : 54170279340000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date#41, i_item_sk#67, substr(i_item_desc#71, 1, 30) AS _groupingexpression#608] "
          },
          "79" : {
            "sign" : -639744623,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 15402625056000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(ssales#403) AND (cast(ssales#403 as decimal(38,8)) > (0.950000 * scalar-subquery#404 []))) "
          },
          "5" : {
            "sign" : -1523964623,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 5220510360000000,
            "rowCount" : 87008506000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_quantity#124, cs_list_price#126, c_first_name#507, c_last_name#508] "
          },
          "72" : {
            "sign" : 914322748,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 15402625056000000,
            "rowCount" : 550093752000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_customer_sk#460 = c_customer_sk#481) "
          },
          "10" : {
            "sign" : -1537602824,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 39294164,
            "rowCount" : 1403363,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_bill_customer_sk#109, cs_quantity#124, cs_list_price#126, cs_sold_date_sk#140] "
          },
          "59" : {
            "sign" : 910944340,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 26955616,
            "rowCount" : 842363,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (ws_item_sk#143 = item_sk#398) "
          },
          "48" : {
            "sign" : 47435418,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 13202250048000000,
            "rowCount" : 550093752000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_quantity#467, ss_sales_price#470, c_customer_sk#481] "
          },
          "21" : {
            "sign" : -1901984732,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 15402625056000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(ssales#403) AND (cast(ssales#403 as decimal(38,8)) > (0.950000 * scalar-subquery#404 []))) "
          },
          "76" : {
            "sign" : 1645687881,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 104000000,
            "rowCount" : 2000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (c_customer_sk#545 = c_customer_sk#481) "
          },
          "54" : {
            "sign" : 2038011901,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 3551402408000000,
            "rowCount" : 52226506000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ws_bill_customer_sk#144 = c_customer_sk#545) "
          },
          "43" : {
            "sign" : -528156139,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 104000000,
            "rowCount" : 2000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (c_customer_sk#499 = c_customer_sk#481) "
          },
          "65" : {
            "sign" : -1904280941,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 2166811173600000,
            "rowCount" : 54170279340000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_item_sk#17 = i_item_sk#67) "
          },
          "71" : {
            "sign" : 82168585,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 13202250048000000,
            "rowCount" : 550093752000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_quantity#467, ss_sales_price#470, c_customer_sk#481] "
          },
          "57" : {
            "sign" : -433298353,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 23586164,
            "rowCount" : 842363,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (ws_bill_customer_sk#144 = c_customer_sk#481) "
          },
          "32" : {
            "sign" : 305748262,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 8497298720,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#429 = d_date_sk#430) "
          },
          "80" : {
            "sign" : 2102197308,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 15402625056000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [c_customer_sk#481], [c_customer_sk#481, sum((cast(ss_quantity#467 as decimal(10,0)) * ss_sales_price#470)) AS ssales#403] "
          },
          "82" : {
            "sign" : -1025989668,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 15402625056000000,
            "rowCount" : 550093752000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_customer_sk#460 = c_customer_sk#481) "
          },
          "49" : {
            "sign" : -1437901541,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 15402625056000000,
            "rowCount" : 550093752000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_customer_sk#460 = c_customer_sk#481) "
          },
          "6" : {
            "sign" : 1133093440,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 5916578408000000,
            "rowCount" : 87008506000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cs_bill_customer_sk#109 = c_customer_sk#499) "
          },
          "36" : {
            "sign" : 1217444409,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 17364,
            "rowCount" : 1447,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#430] "
          },
          "1" : {
            "sign" : -1256479583,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
            "sizeInBytes" : 8911040768000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) LocalLimit Arguments: 100 "
          },
          "39" : {
            "sign" : 1085635783,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 24000000,
            "rowCount" : 2000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_customer_sk#89] "
          },
          "17" : {
            "sign" : 566394868,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 2166811173600000,
            "rowCount" : 54170279340000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_item_sk#17 = i_item_sk#67) "
          },
          "25" : {
            "sign" : -1093618124,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 6601125024,
            "rowCount" : 275046876,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ss_customer_sk#460, ss_quantity#467, ss_sales_price#470], ShuffleQueryStage 3 "
          },
          "60" : {
            "sign" : 1832837103,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 40433424,
            "rowCount" : 842363,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ws_item_sk#143, ws_bill_customer_sk#144, ws_quantity#158, ws_list_price#160, ws_sold_date_sk#174], ShuffleQueryStage 11 "
          },
          "14" : {
            "sign" : 1045330691,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 1083405586800000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (cnt#400L > 4) "
          },
          "47" : {
            "sign" : 431587195,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 15402625056000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [c_customer_sk#481], [c_customer_sk#481, sum((cast(ss_quantity#467 as decimal(10,0)) * ss_sales_price#470)) AS ssales#403] "
          },
          "31" : {
            "sign" : 1802383537,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 6372974040,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_customer_sk#409, ss_quantity#416, ss_sales_price#419] "
          },
          "69" : {
            "sign" : -1882899317,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 15402625056000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(ssales#403) AND (cast(ssales#403 as decimal(38,8)) > (0.950000 * scalar-subquery#404 []))) "
          },
          "58" : {
            "sign" : -1718060309,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 23586164,
            "rowCount" : 842363,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_bill_customer_sk#144, ws_quantity#158, ws_list_price#160, ws_sold_date_sk#174] "
          },
          "64" : {
            "sign" : 1825233538,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 1950130056240000,
            "rowCount" : 54170279340000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date#41, i_item_sk#67, substr(i_item_desc#71, 1, 30) AS _groupingexpression#608] "
          },
          "53" : {
            "sign" : 1873577481,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 3133590360000000,
            "rowCount" : 52226506000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_quantity#158, ws_list_price#160, c_first_name#553, c_last_name#554] "
          },
          "42" : {
            "sign" : 1758754844,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1048824,
            "rowCount" : 31,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#517], BroadcastQueryStage 5 "
          },
          "75" : {
            "sign" : -2138347845,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1048824,
            "rowCount" : 31,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#563], BroadcastQueryStage 21 "
          },
          "0" : {
            "sign" : -616519630,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
            "sizeInBytes" : 6400,
            "rowCount" : 100,
            "isRuntime" : false,
            "predicate" : " (unknown) GlobalLimit Arguments: 100 "
          },
          "20" : {
            "sign" : 2123397918,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 6601125024000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_customer_sk#481] "
          },
          "27" : {
            "sign" : -582481967,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 24,
            "rowCount" : 1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [max(csales#401) AS tpcds_cmax#402] "
          },
          "70" : {
            "sign" : -1381279908,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 15402625056000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [c_customer_sk#481], [c_customer_sk#481, sum((cast(ss_quantity#467 as decimal(10,0)) * ss_sales_price#470)) AS ssales#403] "
          },
          "2" : {
            "sign" : -1336807780,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 8911040768000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [c_last_name#508 ASC NULLS FIRST, c_first_name#507 ASC NULLS FIRST, sales#391 ASC NULLS FIRST], true "
          },
          "38" : {
            "sign" : -358797686,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#430, d_date_id#431, d_date#432, d_month_seq#433, d_week_seq#434, d_quarter_seq#435, d_year#436, d_dow#437, d_moy#438, d_dom#439, d_qoy#440, d_fy_year#441, d_fy_quarter_seq#442, d_fy_week_seq#443, d_day_name#444, d_quarter_name#445, d_holiday#446, d_weekend#447, d_following_holiday#448, d_first_dom#449, d_last_dom#450, d_same_day_ly#451, d_same_day_lq#452, d_current_day#453, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "81" : {
            "sign" : -2121928113,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 13202250048000000,
            "rowCount" : 550093752000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_quantity#467, ss_sales_price#470, c_customer_sk#481] "
          },
          "18" : {
            "sign" : -1070535532,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 4248649360,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ss_item_sk#17, d_date#41], ShuffleQueryStage 28 "
          },
          "30" : {
            "sign" : -949612920,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 7701230628,
            "rowCount" : 275043951,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_customer_sk#409 = c_customer_sk#89) "
          },
          "7" : {
            "sign" : -758780695,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 1044102072,
            "rowCount" : 43504253,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_bill_customer_sk#109, cs_quantity#124, cs_list_price#126] "
          },
          "29" : {
            "sign" : -1338930356,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 6601054824,
            "rowCount" : 275043951,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_quantity#416, ss_sales_price#419, c_customer_sk#89] "
          },
          "41" : {
            "sign" : -576393737,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 500000000,
            "rowCount" : 2000000,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [c_customer_sk#89, c_customer_id#90, c_current_cdemo_sk#91, c_current_hdemo_sk#92, c_current_addr_sk#93, c_first_shipto_date_sk#94, c_first_sales_date_sk#95, c_salutation#96, c_first_name#97, c_last_name#98, c_preferred_cust_flag#99, c_birth_day#100, c_birth_month#101, c_birth_year#102, c_birth_country#103, c_login#104, c_email_address#105, c_last_review_date#106], `spark_catalog`.`tpcds_100`.`customer`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "63" : {
            "sign" : 1782114115,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 1083405586800000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [_groupingexpression#608, i_item_sk#67, d_date#41], [i_item_sk#67 AS item_sk#398, count(1) AS cnt#400L] "
          },
          "3" : {
            "sign" : 225600940,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Union",
            "sizeInBytes" : 8911040768000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Union Arguments: false, false "
          },
          "74" : {
            "sign" : 1454164916,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 32000000,
            "rowCount" : 2000000,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [c_customer_sk#481], ShuffleQueryStage 19 "
          },
          "52" : {
            "sign" : 1307009313,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 3342496384000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [c_last_name#554, c_first_name#553], [c_last_name#554, c_first_name#553, sum((cast(ws_quantity#158 as decimal(10,0)) * ws_list_price#160)) AS sales#394] "
          },
          "28" : {
            "sign" : -660295919,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 47624376,
            "rowCount" : 1984349,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [c_customer_sk#89], [sum((cast(ss_quantity#416 as decimal(10,0)) * ss_sales_price#419)) AS csales#401] "
          }
        },
        "links" : [ {
          "fromId" : 12,
          "fromName" : "LogicalQueryStage",
          "toId" : 11,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 18,
          "fromName" : "LogicalQueryStage",
          "toId" : 17,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 19,
          "fromName" : "LogicalQueryStage",
          "toId" : 17,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 17,
          "fromName" : "Join",
          "toId" : 16,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 16,
          "fromName" : "Project",
          "toId" : 15,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 15,
          "fromName" : "Aggregate",
          "toId" : 14,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 14,
          "fromName" : "Filter",
          "toId" : 13,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 13,
          "fromName" : "Project",
          "toId" : 11,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "Join",
          "toId" : 10,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "Project",
          "toId" : 9,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 25,
          "fromName" : "LogicalQueryStage",
          "toId" : 24,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 26,
          "fromName" : "LogicalQueryStage",
          "toId" : 24,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 24,
          "fromName" : "Join",
          "toId" : 23,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 23,
          "fromName" : "Project",
          "toId" : 22,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 22,
          "fromName" : "Aggregate",
          "toId" : 21,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 35,
          "fromName" : "LogicalRelation",
          "toId" : 34,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 38,
          "fromName" : "LogicalRelation",
          "toId" : 37,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 37,
          "fromName" : "Filter",
          "toId" : 36,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 36,
          "fromName" : "Project",
          "toId" : 34,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 34,
          "fromName" : "Filter",
          "toId" : 33,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 33,
          "fromName" : "Project",
          "toId" : 32,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 36,
          "fromName" : "Project",
          "toId" : 32,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 32,
          "fromName" : "Join",
          "toId" : 31,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 31,
          "fromName" : "Project",
          "toId" : 30,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 41,
          "fromName" : "LogicalRelation",
          "toId" : 40,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 40,
          "fromName" : "Filter",
          "toId" : 39,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 39,
          "fromName" : "Project",
          "toId" : 30,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 30,
          "fromName" : "Join",
          "toId" : 29,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 29,
          "fromName" : "Project",
          "toId" : 28,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 28,
          "fromName" : "Aggregate",
          "toId" : 27,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 27,
          "fromName" : "Aggregate",
          "toId" : 21,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 21,
          "fromName" : "Filter",
          "toId" : 20,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 20,
          "fromName" : "Project",
          "toId" : 9,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "Join",
          "toId" : 8,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 42,
          "fromName" : "LogicalQueryStage",
          "toId" : 8,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "Join",
          "toId" : 7,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Project",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 44,
          "fromName" : "LogicalQueryStage",
          "toId" : 43,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 50,
          "fromName" : "LogicalQueryStage",
          "toId" : 49,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 51,
          "fromName" : "LogicalQueryStage",
          "toId" : 49,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 49,
          "fromName" : "Join",
          "toId" : 48,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 48,
          "fromName" : "Project",
          "toId" : 47,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 47,
          "fromName" : "Aggregate",
          "toId" : 46,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 27,
          "fromName" : "Aggregate",
          "toId" : 46,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 46,
          "fromName" : "Filter",
          "toId" : 45,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 45,
          "fromName" : "Project",
          "toId" : 43,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 43,
          "fromName" : "Join",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Join",
          "toId" : 5,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Project",
          "toId" : 4,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Aggregate",
          "toId" : 3,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 60,
          "fromName" : "LogicalQueryStage",
          "toId" : 59,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 66,
          "fromName" : "LogicalQueryStage",
          "toId" : 65,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 67,
          "fromName" : "LogicalQueryStage",
          "toId" : 65,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 65,
          "fromName" : "Join",
          "toId" : 64,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 64,
          "fromName" : "Project",
          "toId" : 63,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 63,
          "fromName" : "Aggregate",
          "toId" : 62,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 62,
          "fromName" : "Filter",
          "toId" : 61,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 61,
          "fromName" : "Project",
          "toId" : 59,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 59,
          "fromName" : "Join",
          "toId" : 58,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 58,
          "fromName" : "Project",
          "toId" : 57,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 73,
          "fromName" : "LogicalQueryStage",
          "toId" : 72,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 74,
          "fromName" : "LogicalQueryStage",
          "toId" : 72,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 72,
          "fromName" : "Join",
          "toId" : 71,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 71,
          "fromName" : "Project",
          "toId" : 70,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 70,
          "fromName" : "Aggregate",
          "toId" : 69,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 27,
          "fromName" : "Aggregate",
          "toId" : 69,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 69,
          "fromName" : "Filter",
          "toId" : 68,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 68,
          "fromName" : "Project",
          "toId" : 57,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 57,
          "fromName" : "Join",
          "toId" : 56,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 75,
          "fromName" : "LogicalQueryStage",
          "toId" : 56,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 56,
          "fromName" : "Join",
          "toId" : 55,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 55,
          "fromName" : "Project",
          "toId" : 54,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 77,
          "fromName" : "LogicalQueryStage",
          "toId" : 76,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 83,
          "fromName" : "LogicalQueryStage",
          "toId" : 82,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 84,
          "fromName" : "LogicalQueryStage",
          "toId" : 82,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 82,
          "fromName" : "Join",
          "toId" : 81,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 81,
          "fromName" : "Project",
          "toId" : 80,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 80,
          "fromName" : "Aggregate",
          "toId" : 79,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 27,
          "fromName" : "Aggregate",
          "toId" : 79,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 79,
          "fromName" : "Filter",
          "toId" : 78,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 78,
          "fromName" : "Project",
          "toId" : 76,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 76,
          "fromName" : "Join",
          "toId" : 54,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 54,
          "fromName" : "Join",
          "toId" : 53,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 53,
          "fromName" : "Project",
          "toId" : 52,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 52,
          "fromName" : "Aggregate",
          "toId" : 3,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Union",
          "toId" : 2,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "LocalLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "LocalLimit",
          "toId" : 0,
          "toName" : "GlobalLimit",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [c_last_name#508 ASC NULLS FIRST, c_first_name#507 ASC NULLS FIRST, sales#391 ASC NULLS FIRST], true\n      +- Union false, false\n         :- Aggregate [c_last_name#508, c_first_name#507], [c_last_name#508, c_first_name#507, sum((cast(cs_quantity#124 as decimal(10,0)) * cs_list_price#126)) AS sales#391]\n         :  +- Project [cs_quantity#124, cs_list_price#126, c_first_name#507, c_last_name#508]\n         :     +- Join Inner, (cs_bill_customer_sk#109 = c_customer_sk#499)\n         :        :- Project [cs_bill_customer_sk#109, cs_quantity#124, cs_list_price#126]\n         :        :  +- Join Inner, (cs_sold_date_sk#140 = d_date_sk#517)\n         :        :     :- Join LeftSemi, (cs_bill_customer_sk#109 = c_customer_sk#481)\n         :        :     :  :- Project [cs_bill_customer_sk#109, cs_quantity#124, cs_list_price#126, cs_sold_date_sk#140]\n         :        :     :  :  +- Join LeftSemi, (cs_item_sk#121 = item_sk#398)\n         :        :     :  :     :- LogicalQueryStage Project [cs_bill_customer_sk#109, cs_item_sk#121, cs_quantity#124, cs_list_price#126, cs_sold_date_sk#140], ShuffleQueryStage 0\n         :        :     :  :     +- Project [item_sk#398]\n         :        :     :  :        +- Filter (cnt#400L > 4)\n         :        :     :  :           +- Aggregate [_groupingexpression#608, i_item_sk#67, d_date#41], [i_item_sk#67 AS item_sk#398, count(1) AS cnt#400L]\n         :        :     :  :              +- Project [d_date#41, i_item_sk#67, substr(i_item_desc#71, 1, 30) AS _groupingexpression#608]\n         :        :     :  :                 +- Join Inner, (ss_item_sk#17 = i_item_sk#67)\n         :        :     :  :                    :- LogicalQueryStage Project [ss_item_sk#17, d_date#41], ShuffleQueryStage 28\n         :        :     :  :                    +- LogicalQueryStage Project [i_item_sk#67, i_item_desc#71], ShuffleQueryStage 2\n         :        :     :  +- Project [c_customer_sk#481]\n         :        :     :     +- Filter (isnotnull(ssales#403) AND (cast(ssales#403 as decimal(38,8)) > (0.950000 * scalar-subquery#404 [])))\n         :        :     :        :  +- Aggregate [max(csales#401) AS tpcds_cmax#402]\n         :        :     :        :     +- Aggregate [c_customer_sk#89], [sum((cast(ss_quantity#416 as decimal(10,0)) * ss_sales_price#419)) AS csales#401]\n         :        :     :        :        +- Project [ss_quantity#416, ss_sales_price#419, c_customer_sk#89]\n         :        :     :        :           +- Join Inner, (ss_customer_sk#409 = c_customer_sk#89)\n         :        :     :        :              :- Project [ss_customer_sk#409, ss_quantity#416, ss_sales_price#419]\n         :        :     :        :              :  +- Join Inner, (ss_sold_date_sk#429 = d_date_sk#430)\n         :        :     :        :              :     :- Project [ss_customer_sk#409, ss_quantity#416, ss_sales_price#419, ss_sold_date_sk#429]\n         :        :     :        :              :     :  +- Filter ((isnotnull(ss_customer_sk#409) AND isnotnull(ss_sold_date_sk#429)) AND dynamicpruning#610 [ss_sold_date_sk#429])\n         :        :     :        :              :     :     :  +- Project [d_date_sk#430]\n         :        :     :        :              :     :     :     +- Filter (d_year#436 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#430))\n         :        :     :        :              :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#430,d_date_id#431,d_date#432,d_month_seq#433,d_week_seq#434,d_quarter_seq#435,d_year#436,d_dow#437,d_moy#438,d_dom#439,d_qoy#440,d_fy_year#441,d_fy_quarter_seq#442,d_fy_week_seq#443,d_day_name#444,d_quarter_name#445,d_holiday#446,d_weekend#447,d_following_holiday#448,d_first_dom#449,d_last_dom#450,d_same_day_ly#451,d_same_day_lq#452,d_current_day#453,... 4 more fields] parquet\n         :        :     :        :              :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#407,ss_item_sk#408,ss_customer_sk#409,ss_cdemo_sk#410,ss_hdemo_sk#411,ss_addr_sk#412,ss_store_sk#413,ss_promo_sk#414,ss_ticket_number#415L,ss_quantity#416,ss_wholesale_cost#417,ss_list_price#418,ss_sales_price#419,ss_ext_discount_amt#420,ss_ext_sales_price#421,ss_ext_wholesale_cost#422,ss_ext_list_price#423,ss_ext_tax#424,ss_coupon_amt#425,ss_net_paid#426,ss_net_paid_inc_tax#427,ss_net_profit#428,ss_sold_date_sk#429] parquet\n         :        :     :        :              :     +- Project [d_date_sk#430]\n         :        :     :        :              :        +- Filter (d_year#436 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#430))\n         :        :     :        :              :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#430,d_date_id#431,d_date#432,d_month_seq#433,d_week_seq#434,d_quarter_seq#435,d_year#436,d_dow#437,d_moy#438,d_dom#439,d_qoy#440,d_fy_year#441,d_fy_quarter_seq#442,d_fy_week_seq#443,d_day_name#444,d_quarter_name#445,d_holiday#446,d_weekend#447,d_following_holiday#448,d_first_dom#449,d_last_dom#450,d_same_day_ly#451,d_same_day_lq#452,d_current_day#453,... 4 more fields] parquet\n         :        :     :        :              +- Project [c_customer_sk#89]\n         :        :     :        :                 +- Filter isnotnull(c_customer_sk#89)\n         :        :     :        :                    +- Relation spark_catalog.tpcds_100.customer[c_customer_sk#89,c_customer_id#90,c_current_cdemo_sk#91,c_current_hdemo_sk#92,c_current_addr_sk#93,c_first_shipto_date_sk#94,c_first_sales_date_sk#95,c_salutation#96,c_first_name#97,c_last_name#98,c_preferred_cust_flag#99,c_birth_day#100,c_birth_month#101,c_birth_year#102,c_birth_country#103,c_login#104,c_email_address#105,c_last_review_date#106] parquet\n         :        :     :        +- Aggregate [c_customer_sk#481], [c_customer_sk#481, sum((cast(ss_quantity#467 as decimal(10,0)) * ss_sales_price#470)) AS ssales#403]\n         :        :     :           +- Project [ss_quantity#467, ss_sales_price#470, c_customer_sk#481]\n         :        :     :              +- Join Inner, (ss_customer_sk#460 = c_customer_sk#481)\n         :        :     :                 :- LogicalQueryStage Project [ss_customer_sk#460, ss_quantity#467, ss_sales_price#470], ShuffleQueryStage 3\n         :        :     :                 +- LogicalQueryStage Project [c_customer_sk#481], ShuffleQueryStage 4\n         :        :     +- LogicalQueryStage Project [d_date_sk#517], BroadcastQueryStage 5\n         :        +- Join LeftSemi, (c_customer_sk#499 = c_customer_sk#481)\n         :           :- LogicalQueryStage Project [c_customer_sk#499, c_first_name#507, c_last_name#508], ShuffleQueryStage 6\n         :           +- Project [c_customer_sk#481]\n         :              +- Filter (isnotnull(ssales#403) AND (cast(ssales#403 as decimal(38,8)) > (0.950000 * scalar-subquery#404 [])))\n         :                 :  +- Aggregate [max(csales#401) AS tpcds_cmax#402]\n         :                 :     +- Aggregate [c_customer_sk#89], [sum((cast(ss_quantity#416 as decimal(10,0)) * ss_sales_price#419)) AS csales#401]\n         :                 :        +- Project [ss_quantity#416, ss_sales_price#419, c_customer_sk#89]\n         :                 :           +- Join Inner, (ss_customer_sk#409 = c_customer_sk#89)\n         :                 :              :- Project [ss_customer_sk#409, ss_quantity#416, ss_sales_price#419]\n         :                 :              :  +- Join Inner, (ss_sold_date_sk#429 = d_date_sk#430)\n         :                 :              :     :- Project [ss_customer_sk#409, ss_quantity#416, ss_sales_price#419, ss_sold_date_sk#429]\n         :                 :              :     :  +- Filter ((isnotnull(ss_customer_sk#409) AND isnotnull(ss_sold_date_sk#429)) AND dynamicpruning#610 [ss_sold_date_sk#429])\n         :                 :              :     :     :  +- Project [d_date_sk#430]\n         :                 :              :     :     :     +- Filter (d_year#436 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#430))\n         :                 :              :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#430,d_date_id#431,d_date#432,d_month_seq#433,d_week_seq#434,d_quarter_seq#435,d_year#436,d_dow#437,d_moy#438,d_dom#439,d_qoy#440,d_fy_year#441,d_fy_quarter_seq#442,d_fy_week_seq#443,d_day_name#444,d_quarter_name#445,d_holiday#446,d_weekend#447,d_following_holiday#448,d_first_dom#449,d_last_dom#450,d_same_day_ly#451,d_same_day_lq#452,d_current_day#453,... 4 more fields] parquet\n         :                 :              :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#407,ss_item_sk#408,ss_customer_sk#409,ss_cdemo_sk#410,ss_hdemo_sk#411,ss_addr_sk#412,ss_store_sk#413,ss_promo_sk#414,ss_ticket_number#415L,ss_quantity#416,ss_wholesale_cost#417,ss_list_price#418,ss_sales_price#419,ss_ext_discount_amt#420,ss_ext_sales_price#421,ss_ext_wholesale_cost#422,ss_ext_list_price#423,ss_ext_tax#424,ss_coupon_amt#425,ss_net_paid#426,ss_net_paid_inc_tax#427,ss_net_profit#428,ss_sold_date_sk#429] parquet\n         :                 :              :     +- Project [d_date_sk#430]\n         :                 :              :        +- Filter (d_year#436 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#430))\n         :                 :              :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#430,d_date_id#431,d_date#432,d_month_seq#433,d_week_seq#434,d_quarter_seq#435,d_year#436,d_dow#437,d_moy#438,d_dom#439,d_qoy#440,d_fy_year#441,d_fy_quarter_seq#442,d_fy_week_seq#443,d_day_name#444,d_quarter_name#445,d_holiday#446,d_weekend#447,d_following_holiday#448,d_first_dom#449,d_last_dom#450,d_same_day_ly#451,d_same_day_lq#452,d_current_day#453,... 4 more fields] parquet\n         :                 :              +- Project [c_customer_sk#89]\n         :                 :                 +- Filter isnotnull(c_customer_sk#89)\n         :                 :                    +- Relation spark_catalog.tpcds_100.customer[c_customer_sk#89,c_customer_id#90,c_current_cdemo_sk#91,c_current_hdemo_sk#92,c_current_addr_sk#93,c_first_shipto_date_sk#94,c_first_sales_date_sk#95,c_salutation#96,c_first_name#97,c_last_name#98,c_preferred_cust_flag#99,c_birth_day#100,c_birth_month#101,c_birth_year#102,c_birth_country#103,c_login#104,c_email_address#105,c_last_review_date#106] parquet\n         :                 +- Aggregate [c_customer_sk#481], [c_customer_sk#481, sum((cast(ss_quantity#467 as decimal(10,0)) * ss_sales_price#470)) AS ssales#403]\n         :                    +- Project [ss_quantity#467, ss_sales_price#470, c_customer_sk#481]\n         :                       +- Join Inner, (ss_customer_sk#460 = c_customer_sk#481)\n         :                          :- LogicalQueryStage Project [ss_customer_sk#460, ss_quantity#467, ss_sales_price#470], ShuffleQueryStage 8\n         :                          +- LogicalQueryStage Project [c_customer_sk#481], ShuffleQueryStage 10\n         +- Aggregate [c_last_name#554, c_first_name#553], [c_last_name#554, c_first_name#553, sum((cast(ws_quantity#158 as decimal(10,0)) * ws_list_price#160)) AS sales#394]\n            +- Project [ws_quantity#158, ws_list_price#160, c_first_name#553, c_last_name#554]\n               +- Join Inner, (ws_bill_customer_sk#144 = c_customer_sk#545)\n                  :- Project [ws_bill_customer_sk#144, ws_quantity#158, ws_list_price#160]\n                  :  +- Join Inner, (ws_sold_date_sk#174 = d_date_sk#563)\n                  :     :- Join LeftSemi, (ws_bill_customer_sk#144 = c_customer_sk#481)\n                  :     :  :- Project [ws_bill_customer_sk#144, ws_quantity#158, ws_list_price#160, ws_sold_date_sk#174]\n                  :     :  :  +- Join LeftSemi, (ws_item_sk#143 = item_sk#398)\n                  :     :  :     :- LogicalQueryStage Project [ws_item_sk#143, ws_bill_customer_sk#144, ws_quantity#158, ws_list_price#160, ws_sold_date_sk#174], ShuffleQueryStage 11\n                  :     :  :     +- Project [item_sk#398]\n                  :     :  :        +- Filter (cnt#400L > 4)\n                  :     :  :           +- Aggregate [_groupingexpression#608, i_item_sk#67, d_date#41], [i_item_sk#67 AS item_sk#398, count(1) AS cnt#400L]\n                  :     :  :              +- Project [d_date#41, i_item_sk#67, substr(i_item_desc#71, 1, 30) AS _groupingexpression#608]\n                  :     :  :                 +- Join Inner, (ss_item_sk#17 = i_item_sk#67)\n                  :     :  :                    :- LogicalQueryStage Project [ss_item_sk#17, d_date#41], ShuffleQueryStage 30\n                  :     :  :                    +- LogicalQueryStage Project [i_item_sk#67, i_item_desc#71], ShuffleQueryStage 15\n                  :     :  +- Project [c_customer_sk#481]\n                  :     :     +- Filter (isnotnull(ssales#403) AND (cast(ssales#403 as decimal(38,8)) > (0.950000 * scalar-subquery#404 [])))\n                  :     :        :  +- Aggregate [max(csales#401) AS tpcds_cmax#402]\n                  :     :        :     +- Aggregate [c_customer_sk#89], [sum((cast(ss_quantity#416 as decimal(10,0)) * ss_sales_price#419)) AS csales#401]\n                  :     :        :        +- Project [ss_quantity#416, ss_sales_price#419, c_customer_sk#89]\n                  :     :        :           +- Join Inner, (ss_customer_sk#409 = c_customer_sk#89)\n                  :     :        :              :- Project [ss_customer_sk#409, ss_quantity#416, ss_sales_price#419]\n                  :     :        :              :  +- Join Inner, (ss_sold_date_sk#429 = d_date_sk#430)\n                  :     :        :              :     :- Project [ss_customer_sk#409, ss_quantity#416, ss_sales_price#419, ss_sold_date_sk#429]\n                  :     :        :              :     :  +- Filter ((isnotnull(ss_customer_sk#409) AND isnotnull(ss_sold_date_sk#429)) AND dynamicpruning#610 [ss_sold_date_sk#429])\n                  :     :        :              :     :     :  +- Project [d_date_sk#430]\n                  :     :        :              :     :     :     +- Filter (d_year#436 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#430))\n                  :     :        :              :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#430,d_date_id#431,d_date#432,d_month_seq#433,d_week_seq#434,d_quarter_seq#435,d_year#436,d_dow#437,d_moy#438,d_dom#439,d_qoy#440,d_fy_year#441,d_fy_quarter_seq#442,d_fy_week_seq#443,d_day_name#444,d_quarter_name#445,d_holiday#446,d_weekend#447,d_following_holiday#448,d_first_dom#449,d_last_dom#450,d_same_day_ly#451,d_same_day_lq#452,d_current_day#453,... 4 more fields] parquet\n                  :     :        :              :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#407,ss_item_sk#408,ss_customer_sk#409,ss_cdemo_sk#410,ss_hdemo_sk#411,ss_addr_sk#412,ss_store_sk#413,ss_promo_sk#414,ss_ticket_number#415L,ss_quantity#416,ss_wholesale_cost#417,ss_list_price#418,ss_sales_price#419,ss_ext_discount_amt#420,ss_ext_sales_price#421,ss_ext_wholesale_cost#422,ss_ext_list_price#423,ss_ext_tax#424,ss_coupon_amt#425,ss_net_paid#426,ss_net_paid_inc_tax#427,ss_net_profit#428,ss_sold_date_sk#429] parquet\n                  :     :        :              :     +- Project [d_date_sk#430]\n                  :     :        :              :        +- Filter (d_year#436 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#430))\n                  :     :        :              :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#430,d_date_id#431,d_date#432,d_month_seq#433,d_week_seq#434,d_quarter_seq#435,d_year#436,d_dow#437,d_moy#438,d_dom#439,d_qoy#440,d_fy_year#441,d_fy_quarter_seq#442,d_fy_week_seq#443,d_day_name#444,d_quarter_name#445,d_holiday#446,d_weekend#447,d_following_holiday#448,d_first_dom#449,d_last_dom#450,d_same_day_ly#451,d_same_day_lq#452,d_current_day#453,... 4 more fields] parquet\n                  :     :        :              +- Project [c_customer_sk#89]\n                  :     :        :                 +- Filter isnotnull(c_customer_sk#89)\n                  :     :        :                    +- Relation spark_catalog.tpcds_100.customer[c_customer_sk#89,c_customer_id#90,c_current_cdemo_sk#91,c_current_hdemo_sk#92,c_current_addr_sk#93,c_first_shipto_date_sk#94,c_first_sales_date_sk#95,c_salutation#96,c_first_name#97,c_last_name#98,c_preferred_cust_flag#99,c_birth_day#100,c_birth_month#101,c_birth_year#102,c_birth_country#103,c_login#104,c_email_address#105,c_last_review_date#106] parquet\n                  :     :        +- Aggregate [c_customer_sk#481], [c_customer_sk#481, sum((cast(ss_quantity#467 as decimal(10,0)) * ss_sales_price#470)) AS ssales#403]\n                  :     :           +- Project [ss_quantity#467, ss_sales_price#470, c_customer_sk#481]\n                  :     :              +- Join Inner, (ss_customer_sk#460 = c_customer_sk#481)\n                  :     :                 :- LogicalQueryStage Project [ss_customer_sk#460, ss_quantity#467, ss_sales_price#470], ShuffleQueryStage 17\n                  :     :                 +- LogicalQueryStage Project [c_customer_sk#481], ShuffleQueryStage 19\n                  :     +- LogicalQueryStage Project [d_date_sk#563], BroadcastQueryStage 21\n                  +- Join LeftSemi, (c_customer_sk#545 = c_customer_sk#481)\n                     :- LogicalQueryStage Project [c_customer_sk#545, c_first_name#553, c_last_name#554], ShuffleQueryStage 23\n                     +- Project [c_customer_sk#481]\n                        +- Filter (isnotnull(ssales#403) AND (cast(ssales#403 as decimal(38,8)) > (0.950000 * scalar-subquery#404 [])))\n                           :  +- Aggregate [max(csales#401) AS tpcds_cmax#402]\n                           :     +- Aggregate [c_customer_sk#89], [sum((cast(ss_quantity#416 as decimal(10,0)) * ss_sales_price#419)) AS csales#401]\n                           :        +- Project [ss_quantity#416, ss_sales_price#419, c_customer_sk#89]\n                           :           +- Join Inner, (ss_customer_sk#409 = c_customer_sk#89)\n                           :              :- Project [ss_customer_sk#409, ss_quantity#416, ss_sales_price#419]\n                           :              :  +- Join Inner, (ss_sold_date_sk#429 = d_date_sk#430)\n                           :              :     :- Project [ss_customer_sk#409, ss_quantity#416, ss_sales_price#419, ss_sold_date_sk#429]\n                           :              :     :  +- Filter ((isnotnull(ss_customer_sk#409) AND isnotnull(ss_sold_date_sk#429)) AND dynamicpruning#610 [ss_sold_date_sk#429])\n                           :              :     :     :  +- Project [d_date_sk#430]\n                           :              :     :     :     +- Filter (d_year#436 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#430))\n                           :              :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#430,d_date_id#431,d_date#432,d_month_seq#433,d_week_seq#434,d_quarter_seq#435,d_year#436,d_dow#437,d_moy#438,d_dom#439,d_qoy#440,d_fy_year#441,d_fy_quarter_seq#442,d_fy_week_seq#443,d_day_name#444,d_quarter_name#445,d_holiday#446,d_weekend#447,d_following_holiday#448,d_first_dom#449,d_last_dom#450,d_same_day_ly#451,d_same_day_lq#452,d_current_day#453,... 4 more fields] parquet\n                           :              :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#407,ss_item_sk#408,ss_customer_sk#409,ss_cdemo_sk#410,ss_hdemo_sk#411,ss_addr_sk#412,ss_store_sk#413,ss_promo_sk#414,ss_ticket_number#415L,ss_quantity#416,ss_wholesale_cost#417,ss_list_price#418,ss_sales_price#419,ss_ext_discount_amt#420,ss_ext_sales_price#421,ss_ext_wholesale_cost#422,ss_ext_list_price#423,ss_ext_tax#424,ss_coupon_amt#425,ss_net_paid#426,ss_net_paid_inc_tax#427,ss_net_profit#428,ss_sold_date_sk#429] parquet\n                           :              :     +- Project [d_date_sk#430]\n                           :              :        +- Filter (d_year#436 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#430))\n                           :              :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#430,d_date_id#431,d_date#432,d_month_seq#433,d_week_seq#434,d_quarter_seq#435,d_year#436,d_dow#437,d_moy#438,d_dom#439,d_qoy#440,d_fy_year#441,d_fy_quarter_seq#442,d_fy_week_seq#443,d_day_name#444,d_quarter_name#445,d_holiday#446,d_weekend#447,d_following_holiday#448,d_first_dom#449,d_last_dom#450,d_same_day_ly#451,d_same_day_lq#452,d_current_day#453,... 4 more fields] parquet\n                           :              +- Project [c_customer_sk#89]\n                           :                 +- Filter isnotnull(c_customer_sk#89)\n                           :                    +- Relation spark_catalog.tpcds_100.customer[c_customer_sk#89,c_customer_id#90,c_current_cdemo_sk#91,c_current_hdemo_sk#92,c_current_addr_sk#93,c_first_shipto_date_sk#94,c_first_sales_date_sk#95,c_salutation#96,c_first_name#97,c_last_name#98,c_preferred_cust_flag#99,c_birth_day#100,c_birth_month#101,c_birth_year#102,c_birth_country#103,c_login#104,c_email_address#105,c_last_review_date#106] parquet\n                           +- Aggregate [c_customer_sk#481], [c_customer_sk#481, sum((cast(ss_quantity#467 as decimal(10,0)) * ss_sales_price#470)) AS ssales#403]\n                              +- Project [ss_quantity#467, ss_sales_price#470, c_customer_sk#481]\n                                 +- Join Inner, (ss_customer_sk#460 = c_customer_sk#481)\n                                    :- LogicalQueryStage Project [ss_customer_sk#460, ss_quantity#467, ss_sales_price#470], ShuffleQueryStage 25\n                                    +- LogicalQueryStage Project [c_customer_sk#481], ShuffleQueryStage 27\n"
      },
      "IM" : {
        "inputSizeInBytes" : 35384951856,
        "inputRowCount" : 1645922462
      },
      "PD" : {
        "4" : [ 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 290960, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 290960, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 290960, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 290960, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 290960, 264509, 264509, 290960, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 290960, 264509, 264509, 264509, 290960, 264509, 290960, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 290960, 264509, 290960, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509 ],
        "5" : [ 92897, 90784, 103761, 90428, 98316, 97427, 101149, 90784, 84788, 92742, 102014, 97350, 92721, 91819, 94834, 93337, 90456, 91442, 93321, 90784, 92393, 96288, 88877, 91845, 104847, 93804, 94191, 93687, 87972, 94260, 96819, 89988, 101560, 98948, 95408, 96771, 95805, 97937, 94674, 92881, 91931, 90413, 93316, 92721, 91267, 93799, 97785, 93799, 88895, 84890, 104191, 94351, 97233, 94309, 93847, 98364, 96771, 94282, 95322, 95413, 96819, 94834, 93777, 97350, 80847, 96867, 92833, 91315, 101555, 98799, 94791, 91931, 99407, 98316, 91707, 98900, 90497, 108866, 96219, 94743, 94818, 94308, 91470, 93777, 100063, 93407, 96723, 92436, 101000, 91819, 97833, 99813, 94330, 89447, 99282, 102062, 90789, 90301, 99917, 88480, 92281, 98407, 93826, 91267, 97302, 98895, 97446, 99236, 85251, 91931, 91336, 89973, 89378, 99551, 95805, 95317, 90461, 92350, 91358, 98924, 90519, 94260, 99028, 93156, 100474, 96379, 93295, 95226, 96944, 92860, 93337, 97302, 89866, 91336, 90987, 89007, 89973, 99455, 97302, 98799, 102747, 89952, 96288, 99938, 93428, 95301, 92376, 95512, 95274, 95365, 92790, 85795, 95875, 96920, 94308, 92484, 95930, 89093, 97422, 86253, 96219, 102379, 98489, 102784, 96331, 96379, 92371, 93316, 92785, 93916, 94791, 102115, 94469, 96793, 95805, 96867, 89581, 88981, 94399, 98489, 98220, 89472, 93708, 89292, 96336, 95848, 95274, 90875, 94871, 92345, 94834, 92238, 91798, 83153, 95205, 93471, 96422, 89533, 96750, 101101 ],
        "1" : [ 84280, 84280, 84280, 92709, 92709, 84280, 92709, 84280, 76619, 92709, 92709, 84280, 92709, 84280, 84280, 84280, 84280, 84280, 92709, 92709, 92709, 92709, 84280, 84280, 92709, 84280, 84280, 92709, 84280, 92709, 92709, 92709, 92709, 84280, 84280, 92709, 84280, 84280, 84280, 92709, 84280, 84280, 84280, 92709, 92709, 84280, 84280, 84280, 84280, 84280, 92709, 92709, 84280, 84280, 84280, 92709, 92709, 92709, 84280, 84280, 84280, 92709, 84280, 92709, 84280, 92709, 92709, 84280, 92709, 92709, 92709, 84280, 92709, 92709, 84280, 92709, 84280, 92709, 84280, 84280, 92709, 84280, 92709, 84280, 92709, 84280, 84280, 92709, 92709, 84280, 84280, 84280, 92709, 84280, 92709, 92709, 84280, 92709, 92709, 84280, 84280, 92709, 84280, 92709, 92709, 84280, 84280, 92709, 84280, 92709, 84280, 92709, 84280, 92709, 92709, 92709, 76619, 92709, 84280, 84280, 84280, 92709, 92709, 92709, 92709, 92709, 84280, 84280, 92709, 84280, 84280, 84280, 84280, 92709, 84280, 84280, 92709, 92709, 92709, 84280, 84280, 84280, 92709, 92709, 92709, 84280, 84280, 84280, 92709, 84280, 92709, 84280, 92709, 84280, 84280, 92709, 84280, 92709, 84280, 84280, 84280, 92709, 92709, 92709, 84280, 92709, 84280, 84280, 92709, 84280, 84280, 92709, 84280, 84280, 92709, 84280, 84280, 84280, 84280, 84280, 84280, 84280, 92709, 84280, 92709, 92709, 84280, 84280, 84280, 84280, 92709, 84280, 84280, 84280, 84280, 84280, 84280, 84280, 92709, 92709 ],
        "0" : [ 146748, 148062, 162268, 147121, 156091, 155997, 162866, 145655, 137010, 149774, 166912, 149859, 147977, 148375, 146423, 147452, 146578, 149316, 154962, 146511, 149571, 154021, 147977, 141730, 163713, 148833, 153080, 150257, 141384, 155903, 150342, 142671, 164244, 155997, 151301, 154479, 154962, 155493, 149401, 149097, 146578, 146681, 151386, 149774, 147604, 149486, 162678, 148062, 143527, 135298, 167947, 150342, 155420, 154021, 145324, 154021, 158337, 152139, 156844, 150342, 154021, 152139, 155921, 159761, 133326, 153080, 151750, 147537, 165373, 160292, 151198, 144383, 155988, 152139, 147434, 159184, 141375, 164748, 155514, 149774, 147036, 146663, 150360, 148079, 159351, 149932, 150342, 148545, 160984, 153623, 158504, 163713, 148478, 136672, 156938, 162772, 145324, 146180, 155997, 145239, 151656, 154962, 147036, 150715, 152597, 149774, 158337, 156938, 137450, 150800, 144298, 148460, 142231, 158900, 149774, 159667, 146748, 148918, 146663, 157879, 145324, 150715, 157375, 152224, 154962, 150809, 153080, 158820, 153538, 151198, 152139, 158820, 146095, 148918, 147036, 142671, 141978, 162866, 155056, 155420, 160313, 146596, 150360, 155997, 150885, 157785, 153080, 153538, 153538, 155420, 144951, 134977, 152691, 153165, 151656, 154962, 156455, 141357, 158431, 137944, 155056, 164244, 158820, 162362, 150715, 151814, 151198, 149003, 148375, 153080, 155420, 157879, 149868, 155420, 153165, 153080, 137450, 137528, 152597, 157302, 153538, 141357, 152597, 141044, 152157, 155235, 151826, 146180, 151741, 147977, 152224, 146265, 143442, 136594, 156844, 148833, 149401, 143925, 147977, 160796 ],
        "3" : [ 52331, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 57565, 57565, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 57565, 52331, 52331, 52331, 57565, 57565, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 57565, 57565, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 57565, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 57565, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 57565, 57565, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 57565, 57565, 52331, 57565, 52331, 57565, 52331, 57565, 52331, 52331, 57565, 52331, 57565, 57565, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 57565, 57565, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 57565, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 57565, 57565, 52331, 52331, 52331, 52331 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 16,
        "FinishedTasksNum" : 164,
        "FinishedTasksTotalTimeInMs" : 210572.0,
        "FinishedTasksDistributionInMs" : [ 367.0, 850.0, 918.0, 1247.0, 6728.0 ]
      },
      "StartTimeInMs" : 1702226734232,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 136709,
        "IOBytes" : {
          "Total" : 22258593393,
          "Details" : {
            "IR" : 2875034303,
            "IW" : 0,
            "SR" : 12332414216,
            "SW" : 7051144874
          }
        }
      }
    },
    "6" : {
      "LQP" : {
        "operators" : {
          "45" : {
            "sign" : -350419576,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 6601125024000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_customer_sk#481] "
          },
          "34" : {
            "sign" : 1565358831,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 39925696056,
            "rowCount" : 262669053,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(ss_customer_sk#409) AND isnotnull(ss_sold_date_sk#429)) AND dynamicpruning#610 [ss_sold_date_sk#429]) "
          },
          "67" : {
            "sign" : 388376503,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 26102424,
            "rowCount" : 204000,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_item_sk#67, i_item_desc#71], ShuffleQueryStage 15 "
          },
          "12" : {
            "sign" : -938487710,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 67361424,
            "rowCount" : 1403363,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [cs_bill_customer_sk#109, cs_item_sk#121, cs_quantity#124, cs_list_price#126, cs_sold_date_sk#140], ShuffleQueryStage 0 "
          },
          "66" : {
            "sign" : -1070534819,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 4248649360,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ss_item_sk#17, d_date#41], ShuffleQueryStage 30 "
          },
          "51" : {
            "sign" : 1454164637,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 32000000,
            "rowCount" : 2000000,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [c_customer_sk#481], ShuffleQueryStage 10 "
          },
          "84" : {
            "sign" : 1454165815,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 32000000,
            "rowCount" : 2000000,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [c_customer_sk#481], ShuffleQueryStage 27 "
          },
          "8" : {
            "sign" : 1441568544,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 1392136096,
            "rowCount" : 43504253,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cs_sold_date_sk#140 = d_date_sk#517) "
          },
          "73" : {
            "sign" : 457576007,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 6601125024,
            "rowCount" : 275046876,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ss_customer_sk#460, ss_quantity#467, ss_sales_price#470], ShuffleQueryStage 17 "
          },
          "78" : {
            "sign" : 290084495,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 6601125024000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_customer_sk#481] "
          },
          "19" : {
            "sign" : 1120906919,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 26102424,
            "rowCount" : 204000,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_item_sk#67, i_item_desc#71], ShuffleQueryStage 2 "
          },
          "23" : {
            "sign" : 1623804386,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 13202250048000000,
            "rowCount" : 550093752000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_quantity#467, ss_sales_price#470, c_customer_sk#481] "
          },
          "62" : {
            "sign" : 770061938,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 1083405586800000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (cnt#400L > 4) "
          },
          "4" : {
            "sign" : 1365193141,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 1648640717,
            "rowCount" : 27026897,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [c_last_name#508, c_first_name#507], [c_last_name#508, c_first_name#507, sum((cast(cs_quantity#124 as decimal(10,0)) * cs_list_price#126)) AS sales#391] "
          },
          "77" : {
            "sign" : 1358266277,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 98000000,
            "rowCount" : 2000000,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [c_customer_sk#545, c_first_name#553, c_last_name#554], ShuffleQueryStage 23 "
          },
          "40" : {
            "sign" : -337975679,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 500000000,
            "rowCount" : 2000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: isnotnull(c_customer_sk#89) "
          },
          "15" : {
            "sign" : -500295036,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 1083405586800000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [_groupingexpression#608, i_item_sk#67, d_date#41], [i_item_sk#67 AS item_sk#398, count(1) AS cnt#400L] "
          },
          "11" : {
            "sign" : 2111785784,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 44907616,
            "rowCount" : 1403363,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (cs_item_sk#121 = item_sk#398) "
          },
          "9" : {
            "sign" : -990926960,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 39294164,
            "rowCount" : 1403363,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (cs_bill_customer_sk#109 = c_customer_sk#481) "
          },
          "44" : {
            "sign" : 435063190,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 98000000,
            "rowCount" : 2000000,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [c_customer_sk#499, c_first_name#507, c_last_name#508], ShuffleQueryStage 6 "
          },
          "33" : {
            "sign" : -861776479,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 7354733484,
            "rowCount" : 262669053,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_customer_sk#409, ss_quantity#416, ss_sales_price#419, ss_sold_date_sk#429] "
          },
          "22" : {
            "sign" : 1934210699,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 15402625056000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [c_customer_sk#481], [c_customer_sk#481, sum((cast(ss_quantity#467 as decimal(10,0)) * ss_sales_price#470)) AS ssales#403] "
          },
          "56" : {
            "sign" : -2079294392,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 71389876192,
            "rowCount" : 2230933631,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ws_sold_date_sk#174 = d_date_sk#563) "
          },
          "55" : {
            "sign" : 2065671769,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 53542407144,
            "rowCount" : 2230933631,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_bill_customer_sk#144, ws_quantity#158, ws_list_price#160] "
          },
          "26" : {
            "sign" : 739645252,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 32000000,
            "rowCount" : 2000000,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [c_customer_sk#481], ShuffleQueryStage 4 "
          },
          "50" : {
            "sign" : -1093617969,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 6601125024,
            "rowCount" : 275046876,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ss_customer_sk#460, ss_quantity#467, ss_sales_price#470], ShuffleQueryStage 8 "
          },
          "37" : {
            "sign" : 2051540096,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 355962,
            "rowCount" : 1447,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (d_year#436 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#430)) "
          },
          "68" : {
            "sign" : 998370159,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 6601125024000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_customer_sk#481] "
          },
          "61" : {
            "sign" : 2022277624,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 650043352080000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [item_sk#398] "
          },
          "13" : {
            "sign" : 1981268591,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 650043352080000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [item_sk#398] "
          },
          "46" : {
            "sign" : 789941336,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 15402625056000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(ssales#403) AND (cast(ssales#403 as decimal(38,8)) > (0.950000 * scalar-subquery#404 []))) "
          },
          "24" : {
            "sign" : 1908847787,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 15402625056000000,
            "rowCount" : 550093752000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_customer_sk#460 = c_customer_sk#481) "
          },
          "83" : {
            "sign" : 457576906,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 6601125024,
            "rowCount" : 275046876,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ss_customer_sk#460, ss_quantity#467, ss_sales_price#470], ShuffleQueryStage 25 "
          },
          "35" : {
            "sign" : -977156952,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#407, ss_item_sk#408, ss_customer_sk#409, ss_cdemo_sk#410, ss_hdemo_sk#411, ss_addr_sk#412, ss_store_sk#413, ss_promo_sk#414, ss_ticket_number#415L, ss_quantity#416, ss_wholesale_cost#417, ss_list_price#418, ss_sales_price#419, ss_ext_discount_amt#420, ss_ext_sales_price#421, ss_ext_wholesale_cost#422, ss_ext_list_price#423, ss_ext_tax#424, ss_coupon_amt#425, ss_net_paid#426, ss_net_paid_inc_tax#427, ss_net_profit#428, ss_sold_date_sk#429], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "16" : {
            "sign" : -2009662925,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 1950130056240000,
            "rowCount" : 54170279340000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date#41, i_item_sk#67, substr(i_item_desc#71, 1, 30) AS _groupingexpression#608] "
          },
          "79" : {
            "sign" : -639744623,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 15402625056000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(ssales#403) AND (cast(ssales#403 as decimal(38,8)) > (0.950000 * scalar-subquery#404 []))) "
          },
          "5" : {
            "sign" : -1523964623,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 4959484842000000,
            "rowCount" : 87008506000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_quantity#124, cs_list_price#126, c_first_name#507, c_last_name#508] "
          },
          "72" : {
            "sign" : 914322748,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 15402625056000000,
            "rowCount" : 550093752000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_customer_sk#460 = c_customer_sk#481) "
          },
          "10" : {
            "sign" : -1537602824,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 39294164,
            "rowCount" : 1403363,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_bill_customer_sk#109, cs_quantity#124, cs_list_price#126, cs_sold_date_sk#140] "
          },
          "59" : {
            "sign" : 910944340,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 2302899232,
            "rowCount" : 71965601,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (ws_item_sk#143 = item_sk#398) "
          },
          "48" : {
            "sign" : 47435418,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 13202250048000000,
            "rowCount" : 550093752000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_quantity#467, ss_sales_price#470, c_customer_sk#481] "
          },
          "21" : {
            "sign" : -1901984732,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 15402625056000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(ssales#403) AND (cast(ssales#403 as decimal(38,8)) > (0.950000 * scalar-subquery#404 []))) "
          },
          "76" : {
            "sign" : 1645687881,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 98000000,
            "rowCount" : 2000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (c_customer_sk#545 = c_customer_sk#481) "
          },
          "54" : {
            "sign" : 2038011901,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 4702228440,
            "rowCount" : 72341976,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ws_bill_customer_sk#144 = c_customer_sk#545) "
          },
          "43" : {
            "sign" : -528156139,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 98000000,
            "rowCount" : 2000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (c_customer_sk#499 = c_customer_sk#481) "
          },
          "65" : {
            "sign" : -1904280941,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 2166811173600000,
            "rowCount" : 54170279340000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_item_sk#17 = i_item_sk#67) "
          },
          "71" : {
            "sign" : 82168585,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 13202250048000000,
            "rowCount" : 550093752000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_quantity#467, ss_sales_price#470, c_customer_sk#481] "
          },
          "57" : {
            "sign" : -433298353,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 2015036828,
            "rowCount" : 71965601,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (ws_bill_customer_sk#144 = c_customer_sk#481) "
          },
          "32" : {
            "sign" : 305748262,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 8497298720,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#429 = d_date_sk#430) "
          },
          "80" : {
            "sign" : 2102197308,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 15402625056000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [c_customer_sk#481], [c_customer_sk#481, sum((cast(ss_quantity#467 as decimal(10,0)) * ss_sales_price#470)) AS ssales#403] "
          },
          "82" : {
            "sign" : -1025989668,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 15402625056000000,
            "rowCount" : 550093752000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_customer_sk#460 = c_customer_sk#481) "
          },
          "49" : {
            "sign" : -1437901541,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 15402625056000000,
            "rowCount" : 550093752000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_customer_sk#460 = c_customer_sk#481) "
          },
          "6" : {
            "sign" : 1133093440,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 5655552890000000,
            "rowCount" : 87008506000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cs_bill_customer_sk#109 = c_customer_sk#499) "
          },
          "36" : {
            "sign" : 1217444409,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 17364,
            "rowCount" : 1447,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#430] "
          },
          "1" : {
            "sign" : -1256479583,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
            "sizeInBytes" : 3297281434,
            "rowCount" : 54053794,
            "isRuntime" : false,
            "predicate" : " (unknown) LocalLimit Arguments: 100 "
          },
          "39" : {
            "sign" : 1085635783,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 24000000,
            "rowCount" : 2000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_customer_sk#89] "
          },
          "17" : {
            "sign" : 566394868,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 2166811173600000,
            "rowCount" : 54170279340000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_item_sk#17 = i_item_sk#67) "
          },
          "25" : {
            "sign" : -1093618124,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 6601125024,
            "rowCount" : 275046876,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ss_customer_sk#460, ss_quantity#467, ss_sales_price#470], ShuffleQueryStage 3 "
          },
          "60" : {
            "sign" : 1832837103,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 2302899232,
            "rowCount" : 71965601,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ws_item_sk#143, ws_bill_customer_sk#144, ws_quantity#158, ws_list_price#160, ws_sold_date_sk#174], ShuffleQueryStage 11 "
          },
          "14" : {
            "sign" : 1045330691,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 1083405586800000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (cnt#400L > 4) "
          },
          "47" : {
            "sign" : 431587195,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 15402625056000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [c_customer_sk#481], [c_customer_sk#481, sum((cast(ss_quantity#467 as decimal(10,0)) * ss_sales_price#470)) AS ssales#403] "
          },
          "31" : {
            "sign" : 1802383537,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 6372974040,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_customer_sk#409, ss_quantity#416, ss_sales_price#419] "
          },
          "69" : {
            "sign" : -1882899317,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 15402625056000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(ssales#403) AND (cast(ssales#403 as decimal(38,8)) > (0.950000 * scalar-subquery#404 []))) "
          },
          "58" : {
            "sign" : -1718060309,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 2015036828,
            "rowCount" : 71965601,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_bill_customer_sk#144, ws_quantity#158, ws_list_price#160, ws_sold_date_sk#174] "
          },
          "64" : {
            "sign" : 1825233538,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 1950130056240000,
            "rowCount" : 54170279340000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date#41, i_item_sk#67, substr(i_item_desc#71, 1, 30) AS _groupingexpression#608] "
          },
          "53" : {
            "sign" : 1873577481,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 4123492632,
            "rowCount" : 72341976,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_quantity#158, ws_list_price#160, c_first_name#553, c_last_name#554] "
          },
          "42" : {
            "sign" : 1758754844,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1048824,
            "rowCount" : 31,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#517], BroadcastQueryStage 5 "
          },
          "75" : {
            "sign" : -2138347845,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1048824,
            "rowCount" : 31,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#563], BroadcastQueryStage 21 "
          },
          "0" : {
            "sign" : -616519630,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
            "sizeInBytes" : 6400,
            "rowCount" : 100,
            "isRuntime" : false,
            "predicate" : " (unknown) GlobalLimit Arguments: 100 "
          },
          "20" : {
            "sign" : 2123397918,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 6601125024000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_customer_sk#481] "
          },
          "27" : {
            "sign" : -582481967,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 24,
            "rowCount" : 1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [max(csales#401) AS tpcds_cmax#402] "
          },
          "70" : {
            "sign" : -1381279908,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 15402625056000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [c_customer_sk#481], [c_customer_sk#481, sum((cast(ss_quantity#467 as decimal(10,0)) * ss_sales_price#470)) AS ssales#403] "
          },
          "2" : {
            "sign" : -1336807780,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 3297281434,
            "rowCount" : 54053794,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [c_last_name#508 ASC NULLS FIRST, c_first_name#507 ASC NULLS FIRST, sales#391 ASC NULLS FIRST], true "
          },
          "38" : {
            "sign" : -358797686,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#430, d_date_id#431, d_date#432, d_month_seq#433, d_week_seq#434, d_quarter_seq#435, d_year#436, d_dow#437, d_moy#438, d_dom#439, d_qoy#440, d_fy_year#441, d_fy_quarter_seq#442, d_fy_week_seq#443, d_day_name#444, d_quarter_name#445, d_holiday#446, d_weekend#447, d_following_holiday#448, d_first_dom#449, d_last_dom#450, d_same_day_ly#451, d_same_day_lq#452, d_current_day#453, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "81" : {
            "sign" : -2121928113,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 13202250048000000,
            "rowCount" : 550093752000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_quantity#467, ss_sales_price#470, c_customer_sk#481] "
          },
          "18" : {
            "sign" : -1070535532,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 4248649360,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ss_item_sk#17, d_date#41], ShuffleQueryStage 28 "
          },
          "30" : {
            "sign" : -949612920,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 7701230628,
            "rowCount" : 275043951,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_customer_sk#409 = c_customer_sk#89) "
          },
          "7" : {
            "sign" : -758780695,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 1044102072,
            "rowCount" : 43504253,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_bill_customer_sk#109, cs_quantity#124, cs_list_price#126] "
          },
          "29" : {
            "sign" : -1338930356,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 6601054824,
            "rowCount" : 275043951,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_quantity#416, ss_sales_price#419, c_customer_sk#89] "
          },
          "41" : {
            "sign" : -576393737,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 500000000,
            "rowCount" : 2000000,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [c_customer_sk#89, c_customer_id#90, c_current_cdemo_sk#91, c_current_hdemo_sk#92, c_current_addr_sk#93, c_first_shipto_date_sk#94, c_first_sales_date_sk#95, c_salutation#96, c_first_name#97, c_last_name#98, c_preferred_cust_flag#99, c_birth_day#100, c_birth_month#101, c_birth_year#102, c_birth_country#103, c_login#104, c_email_address#105, c_last_review_date#106], `spark_catalog`.`tpcds_100`.`customer`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "63" : {
            "sign" : 1782114115,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 1083405586800000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [_groupingexpression#608, i_item_sk#67, d_date#41], [i_item_sk#67 AS item_sk#398, count(1) AS cnt#400L] "
          },
          "3" : {
            "sign" : 225600940,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Union",
            "sizeInBytes" : 3297281434,
            "rowCount" : 54053794,
            "isRuntime" : false,
            "predicate" : " (unknown) Union Arguments: false, false "
          },
          "74" : {
            "sign" : 1454164916,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 32000000,
            "rowCount" : 2000000,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [c_customer_sk#481], ShuffleQueryStage 19 "
          },
          "52" : {
            "sign" : 1307009313,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 1648640717,
            "rowCount" : 27026897,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [c_last_name#554, c_first_name#553], [c_last_name#554, c_first_name#553, sum((cast(ws_quantity#158 as decimal(10,0)) * ws_list_price#160)) AS sales#394] "
          },
          "28" : {
            "sign" : -660295919,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 47624376,
            "rowCount" : 1984349,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [c_customer_sk#89], [sum((cast(ss_quantity#416 as decimal(10,0)) * ss_sales_price#419)) AS csales#401] "
          }
        },
        "links" : [ {
          "fromId" : 12,
          "fromName" : "LogicalQueryStage",
          "toId" : 11,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 18,
          "fromName" : "LogicalQueryStage",
          "toId" : 17,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 19,
          "fromName" : "LogicalQueryStage",
          "toId" : 17,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 17,
          "fromName" : "Join",
          "toId" : 16,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 16,
          "fromName" : "Project",
          "toId" : 15,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 15,
          "fromName" : "Aggregate",
          "toId" : 14,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 14,
          "fromName" : "Filter",
          "toId" : 13,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 13,
          "fromName" : "Project",
          "toId" : 11,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "Join",
          "toId" : 10,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "Project",
          "toId" : 9,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 25,
          "fromName" : "LogicalQueryStage",
          "toId" : 24,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 26,
          "fromName" : "LogicalQueryStage",
          "toId" : 24,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 24,
          "fromName" : "Join",
          "toId" : 23,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 23,
          "fromName" : "Project",
          "toId" : 22,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 22,
          "fromName" : "Aggregate",
          "toId" : 21,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 35,
          "fromName" : "LogicalRelation",
          "toId" : 34,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 38,
          "fromName" : "LogicalRelation",
          "toId" : 37,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 37,
          "fromName" : "Filter",
          "toId" : 36,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 36,
          "fromName" : "Project",
          "toId" : 34,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 34,
          "fromName" : "Filter",
          "toId" : 33,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 33,
          "fromName" : "Project",
          "toId" : 32,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 36,
          "fromName" : "Project",
          "toId" : 32,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 32,
          "fromName" : "Join",
          "toId" : 31,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 31,
          "fromName" : "Project",
          "toId" : 30,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 41,
          "fromName" : "LogicalRelation",
          "toId" : 40,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 40,
          "fromName" : "Filter",
          "toId" : 39,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 39,
          "fromName" : "Project",
          "toId" : 30,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 30,
          "fromName" : "Join",
          "toId" : 29,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 29,
          "fromName" : "Project",
          "toId" : 28,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 28,
          "fromName" : "Aggregate",
          "toId" : 27,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 27,
          "fromName" : "Aggregate",
          "toId" : 21,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 21,
          "fromName" : "Filter",
          "toId" : 20,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 20,
          "fromName" : "Project",
          "toId" : 9,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "Join",
          "toId" : 8,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 42,
          "fromName" : "LogicalQueryStage",
          "toId" : 8,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "Join",
          "toId" : 7,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Project",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 44,
          "fromName" : "LogicalQueryStage",
          "toId" : 43,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 50,
          "fromName" : "LogicalQueryStage",
          "toId" : 49,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 51,
          "fromName" : "LogicalQueryStage",
          "toId" : 49,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 49,
          "fromName" : "Join",
          "toId" : 48,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 48,
          "fromName" : "Project",
          "toId" : 47,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 47,
          "fromName" : "Aggregate",
          "toId" : 46,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 27,
          "fromName" : "Aggregate",
          "toId" : 46,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 46,
          "fromName" : "Filter",
          "toId" : 45,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 45,
          "fromName" : "Project",
          "toId" : 43,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 43,
          "fromName" : "Join",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Join",
          "toId" : 5,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Project",
          "toId" : 4,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Aggregate",
          "toId" : 3,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 60,
          "fromName" : "LogicalQueryStage",
          "toId" : 59,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 66,
          "fromName" : "LogicalQueryStage",
          "toId" : 65,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 67,
          "fromName" : "LogicalQueryStage",
          "toId" : 65,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 65,
          "fromName" : "Join",
          "toId" : 64,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 64,
          "fromName" : "Project",
          "toId" : 63,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 63,
          "fromName" : "Aggregate",
          "toId" : 62,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 62,
          "fromName" : "Filter",
          "toId" : 61,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 61,
          "fromName" : "Project",
          "toId" : 59,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 59,
          "fromName" : "Join",
          "toId" : 58,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 58,
          "fromName" : "Project",
          "toId" : 57,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 73,
          "fromName" : "LogicalQueryStage",
          "toId" : 72,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 74,
          "fromName" : "LogicalQueryStage",
          "toId" : 72,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 72,
          "fromName" : "Join",
          "toId" : 71,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 71,
          "fromName" : "Project",
          "toId" : 70,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 70,
          "fromName" : "Aggregate",
          "toId" : 69,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 27,
          "fromName" : "Aggregate",
          "toId" : 69,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 69,
          "fromName" : "Filter",
          "toId" : 68,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 68,
          "fromName" : "Project",
          "toId" : 57,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 57,
          "fromName" : "Join",
          "toId" : 56,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 75,
          "fromName" : "LogicalQueryStage",
          "toId" : 56,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 56,
          "fromName" : "Join",
          "toId" : 55,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 55,
          "fromName" : "Project",
          "toId" : 54,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 77,
          "fromName" : "LogicalQueryStage",
          "toId" : 76,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 83,
          "fromName" : "LogicalQueryStage",
          "toId" : 82,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 84,
          "fromName" : "LogicalQueryStage",
          "toId" : 82,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 82,
          "fromName" : "Join",
          "toId" : 81,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 81,
          "fromName" : "Project",
          "toId" : 80,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 80,
          "fromName" : "Aggregate",
          "toId" : 79,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 27,
          "fromName" : "Aggregate",
          "toId" : 79,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 79,
          "fromName" : "Filter",
          "toId" : 78,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 78,
          "fromName" : "Project",
          "toId" : 76,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 76,
          "fromName" : "Join",
          "toId" : 54,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 54,
          "fromName" : "Join",
          "toId" : 53,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 53,
          "fromName" : "Project",
          "toId" : 52,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 52,
          "fromName" : "Aggregate",
          "toId" : 3,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Union",
          "toId" : 2,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "LocalLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "LocalLimit",
          "toId" : 0,
          "toName" : "GlobalLimit",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [c_last_name#508 ASC NULLS FIRST, c_first_name#507 ASC NULLS FIRST, sales#391 ASC NULLS FIRST], true\n      +- Union false, false\n         :- Aggregate [c_last_name#508, c_first_name#507], [c_last_name#508, c_first_name#507, sum((cast(cs_quantity#124 as decimal(10,0)) * cs_list_price#126)) AS sales#391]\n         :  +- Project [cs_quantity#124, cs_list_price#126, c_first_name#507, c_last_name#508]\n         :     +- Join Inner, (cs_bill_customer_sk#109 = c_customer_sk#499)\n         :        :- Project [cs_bill_customer_sk#109, cs_quantity#124, cs_list_price#126]\n         :        :  +- Join Inner, (cs_sold_date_sk#140 = d_date_sk#517)\n         :        :     :- Join LeftSemi, (cs_bill_customer_sk#109 = c_customer_sk#481)\n         :        :     :  :- Project [cs_bill_customer_sk#109, cs_quantity#124, cs_list_price#126, cs_sold_date_sk#140]\n         :        :     :  :  +- Join LeftSemi, (cs_item_sk#121 = item_sk#398)\n         :        :     :  :     :- LogicalQueryStage Project [cs_bill_customer_sk#109, cs_item_sk#121, cs_quantity#124, cs_list_price#126, cs_sold_date_sk#140], ShuffleQueryStage 0\n         :        :     :  :     +- Project [item_sk#398]\n         :        :     :  :        +- Filter (cnt#400L > 4)\n         :        :     :  :           +- Aggregate [_groupingexpression#608, i_item_sk#67, d_date#41], [i_item_sk#67 AS item_sk#398, count(1) AS cnt#400L]\n         :        :     :  :              +- Project [d_date#41, i_item_sk#67, substr(i_item_desc#71, 1, 30) AS _groupingexpression#608]\n         :        :     :  :                 +- Join Inner, (ss_item_sk#17 = i_item_sk#67)\n         :        :     :  :                    :- LogicalQueryStage Project [ss_item_sk#17, d_date#41], ShuffleQueryStage 28\n         :        :     :  :                    +- LogicalQueryStage Project [i_item_sk#67, i_item_desc#71], ShuffleQueryStage 2\n         :        :     :  +- Project [c_customer_sk#481]\n         :        :     :     +- Filter (isnotnull(ssales#403) AND (cast(ssales#403 as decimal(38,8)) > (0.950000 * scalar-subquery#404 [])))\n         :        :     :        :  +- Aggregate [max(csales#401) AS tpcds_cmax#402]\n         :        :     :        :     +- Aggregate [c_customer_sk#89], [sum((cast(ss_quantity#416 as decimal(10,0)) * ss_sales_price#419)) AS csales#401]\n         :        :     :        :        +- Project [ss_quantity#416, ss_sales_price#419, c_customer_sk#89]\n         :        :     :        :           +- Join Inner, (ss_customer_sk#409 = c_customer_sk#89)\n         :        :     :        :              :- Project [ss_customer_sk#409, ss_quantity#416, ss_sales_price#419]\n         :        :     :        :              :  +- Join Inner, (ss_sold_date_sk#429 = d_date_sk#430)\n         :        :     :        :              :     :- Project [ss_customer_sk#409, ss_quantity#416, ss_sales_price#419, ss_sold_date_sk#429]\n         :        :     :        :              :     :  +- Filter ((isnotnull(ss_customer_sk#409) AND isnotnull(ss_sold_date_sk#429)) AND dynamicpruning#610 [ss_sold_date_sk#429])\n         :        :     :        :              :     :     :  +- Project [d_date_sk#430]\n         :        :     :        :              :     :     :     +- Filter (d_year#436 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#430))\n         :        :     :        :              :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#430,d_date_id#431,d_date#432,d_month_seq#433,d_week_seq#434,d_quarter_seq#435,d_year#436,d_dow#437,d_moy#438,d_dom#439,d_qoy#440,d_fy_year#441,d_fy_quarter_seq#442,d_fy_week_seq#443,d_day_name#444,d_quarter_name#445,d_holiday#446,d_weekend#447,d_following_holiday#448,d_first_dom#449,d_last_dom#450,d_same_day_ly#451,d_same_day_lq#452,d_current_day#453,... 4 more fields] parquet\n         :        :     :        :              :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#407,ss_item_sk#408,ss_customer_sk#409,ss_cdemo_sk#410,ss_hdemo_sk#411,ss_addr_sk#412,ss_store_sk#413,ss_promo_sk#414,ss_ticket_number#415L,ss_quantity#416,ss_wholesale_cost#417,ss_list_price#418,ss_sales_price#419,ss_ext_discount_amt#420,ss_ext_sales_price#421,ss_ext_wholesale_cost#422,ss_ext_list_price#423,ss_ext_tax#424,ss_coupon_amt#425,ss_net_paid#426,ss_net_paid_inc_tax#427,ss_net_profit#428,ss_sold_date_sk#429] parquet\n         :        :     :        :              :     +- Project [d_date_sk#430]\n         :        :     :        :              :        +- Filter (d_year#436 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#430))\n         :        :     :        :              :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#430,d_date_id#431,d_date#432,d_month_seq#433,d_week_seq#434,d_quarter_seq#435,d_year#436,d_dow#437,d_moy#438,d_dom#439,d_qoy#440,d_fy_year#441,d_fy_quarter_seq#442,d_fy_week_seq#443,d_day_name#444,d_quarter_name#445,d_holiday#446,d_weekend#447,d_following_holiday#448,d_first_dom#449,d_last_dom#450,d_same_day_ly#451,d_same_day_lq#452,d_current_day#453,... 4 more fields] parquet\n         :        :     :        :              +- Project [c_customer_sk#89]\n         :        :     :        :                 +- Filter isnotnull(c_customer_sk#89)\n         :        :     :        :                    +- Relation spark_catalog.tpcds_100.customer[c_customer_sk#89,c_customer_id#90,c_current_cdemo_sk#91,c_current_hdemo_sk#92,c_current_addr_sk#93,c_first_shipto_date_sk#94,c_first_sales_date_sk#95,c_salutation#96,c_first_name#97,c_last_name#98,c_preferred_cust_flag#99,c_birth_day#100,c_birth_month#101,c_birth_year#102,c_birth_country#103,c_login#104,c_email_address#105,c_last_review_date#106] parquet\n         :        :     :        +- Aggregate [c_customer_sk#481], [c_customer_sk#481, sum((cast(ss_quantity#467 as decimal(10,0)) * ss_sales_price#470)) AS ssales#403]\n         :        :     :           +- Project [ss_quantity#467, ss_sales_price#470, c_customer_sk#481]\n         :        :     :              +- Join Inner, (ss_customer_sk#460 = c_customer_sk#481)\n         :        :     :                 :- LogicalQueryStage Project [ss_customer_sk#460, ss_quantity#467, ss_sales_price#470], ShuffleQueryStage 3\n         :        :     :                 +- LogicalQueryStage Project [c_customer_sk#481], ShuffleQueryStage 4\n         :        :     +- LogicalQueryStage Project [d_date_sk#517], BroadcastQueryStage 5\n         :        +- Join LeftSemi, (c_customer_sk#499 = c_customer_sk#481)\n         :           :- LogicalQueryStage Project [c_customer_sk#499, c_first_name#507, c_last_name#508], ShuffleQueryStage 6\n         :           +- Project [c_customer_sk#481]\n         :              +- Filter (isnotnull(ssales#403) AND (cast(ssales#403 as decimal(38,8)) > (0.950000 * scalar-subquery#404 [])))\n         :                 :  +- Aggregate [max(csales#401) AS tpcds_cmax#402]\n         :                 :     +- Aggregate [c_customer_sk#89], [sum((cast(ss_quantity#416 as decimal(10,0)) * ss_sales_price#419)) AS csales#401]\n         :                 :        +- Project [ss_quantity#416, ss_sales_price#419, c_customer_sk#89]\n         :                 :           +- Join Inner, (ss_customer_sk#409 = c_customer_sk#89)\n         :                 :              :- Project [ss_customer_sk#409, ss_quantity#416, ss_sales_price#419]\n         :                 :              :  +- Join Inner, (ss_sold_date_sk#429 = d_date_sk#430)\n         :                 :              :     :- Project [ss_customer_sk#409, ss_quantity#416, ss_sales_price#419, ss_sold_date_sk#429]\n         :                 :              :     :  +- Filter ((isnotnull(ss_customer_sk#409) AND isnotnull(ss_sold_date_sk#429)) AND dynamicpruning#610 [ss_sold_date_sk#429])\n         :                 :              :     :     :  +- Project [d_date_sk#430]\n         :                 :              :     :     :     +- Filter (d_year#436 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#430))\n         :                 :              :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#430,d_date_id#431,d_date#432,d_month_seq#433,d_week_seq#434,d_quarter_seq#435,d_year#436,d_dow#437,d_moy#438,d_dom#439,d_qoy#440,d_fy_year#441,d_fy_quarter_seq#442,d_fy_week_seq#443,d_day_name#444,d_quarter_name#445,d_holiday#446,d_weekend#447,d_following_holiday#448,d_first_dom#449,d_last_dom#450,d_same_day_ly#451,d_same_day_lq#452,d_current_day#453,... 4 more fields] parquet\n         :                 :              :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#407,ss_item_sk#408,ss_customer_sk#409,ss_cdemo_sk#410,ss_hdemo_sk#411,ss_addr_sk#412,ss_store_sk#413,ss_promo_sk#414,ss_ticket_number#415L,ss_quantity#416,ss_wholesale_cost#417,ss_list_price#418,ss_sales_price#419,ss_ext_discount_amt#420,ss_ext_sales_price#421,ss_ext_wholesale_cost#422,ss_ext_list_price#423,ss_ext_tax#424,ss_coupon_amt#425,ss_net_paid#426,ss_net_paid_inc_tax#427,ss_net_profit#428,ss_sold_date_sk#429] parquet\n         :                 :              :     +- Project [d_date_sk#430]\n         :                 :              :        +- Filter (d_year#436 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#430))\n         :                 :              :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#430,d_date_id#431,d_date#432,d_month_seq#433,d_week_seq#434,d_quarter_seq#435,d_year#436,d_dow#437,d_moy#438,d_dom#439,d_qoy#440,d_fy_year#441,d_fy_quarter_seq#442,d_fy_week_seq#443,d_day_name#444,d_quarter_name#445,d_holiday#446,d_weekend#447,d_following_holiday#448,d_first_dom#449,d_last_dom#450,d_same_day_ly#451,d_same_day_lq#452,d_current_day#453,... 4 more fields] parquet\n         :                 :              +- Project [c_customer_sk#89]\n         :                 :                 +- Filter isnotnull(c_customer_sk#89)\n         :                 :                    +- Relation spark_catalog.tpcds_100.customer[c_customer_sk#89,c_customer_id#90,c_current_cdemo_sk#91,c_current_hdemo_sk#92,c_current_addr_sk#93,c_first_shipto_date_sk#94,c_first_sales_date_sk#95,c_salutation#96,c_first_name#97,c_last_name#98,c_preferred_cust_flag#99,c_birth_day#100,c_birth_month#101,c_birth_year#102,c_birth_country#103,c_login#104,c_email_address#105,c_last_review_date#106] parquet\n         :                 +- Aggregate [c_customer_sk#481], [c_customer_sk#481, sum((cast(ss_quantity#467 as decimal(10,0)) * ss_sales_price#470)) AS ssales#403]\n         :                    +- Project [ss_quantity#467, ss_sales_price#470, c_customer_sk#481]\n         :                       +- Join Inner, (ss_customer_sk#460 = c_customer_sk#481)\n         :                          :- LogicalQueryStage Project [ss_customer_sk#460, ss_quantity#467, ss_sales_price#470], ShuffleQueryStage 8\n         :                          +- LogicalQueryStage Project [c_customer_sk#481], ShuffleQueryStage 10\n         +- Aggregate [c_last_name#554, c_first_name#553], [c_last_name#554, c_first_name#553, sum((cast(ws_quantity#158 as decimal(10,0)) * ws_list_price#160)) AS sales#394]\n            +- Project [ws_quantity#158, ws_list_price#160, c_first_name#553, c_last_name#554]\n               +- Join Inner, (ws_bill_customer_sk#144 = c_customer_sk#545)\n                  :- Project [ws_bill_customer_sk#144, ws_quantity#158, ws_list_price#160]\n                  :  +- Join Inner, (ws_sold_date_sk#174 = d_date_sk#563)\n                  :     :- Join LeftSemi, (ws_bill_customer_sk#144 = c_customer_sk#481)\n                  :     :  :- Project [ws_bill_customer_sk#144, ws_quantity#158, ws_list_price#160, ws_sold_date_sk#174]\n                  :     :  :  +- Join LeftSemi, (ws_item_sk#143 = item_sk#398)\n                  :     :  :     :- LogicalQueryStage Project [ws_item_sk#143, ws_bill_customer_sk#144, ws_quantity#158, ws_list_price#160, ws_sold_date_sk#174], ShuffleQueryStage 11\n                  :     :  :     +- Project [item_sk#398]\n                  :     :  :        +- Filter (cnt#400L > 4)\n                  :     :  :           +- Aggregate [_groupingexpression#608, i_item_sk#67, d_date#41], [i_item_sk#67 AS item_sk#398, count(1) AS cnt#400L]\n                  :     :  :              +- Project [d_date#41, i_item_sk#67, substr(i_item_desc#71, 1, 30) AS _groupingexpression#608]\n                  :     :  :                 +- Join Inner, (ss_item_sk#17 = i_item_sk#67)\n                  :     :  :                    :- LogicalQueryStage Project [ss_item_sk#17, d_date#41], ShuffleQueryStage 30\n                  :     :  :                    +- LogicalQueryStage Project [i_item_sk#67, i_item_desc#71], ShuffleQueryStage 15\n                  :     :  +- Project [c_customer_sk#481]\n                  :     :     +- Filter (isnotnull(ssales#403) AND (cast(ssales#403 as decimal(38,8)) > (0.950000 * scalar-subquery#404 [])))\n                  :     :        :  +- Aggregate [max(csales#401) AS tpcds_cmax#402]\n                  :     :        :     +- Aggregate [c_customer_sk#89], [sum((cast(ss_quantity#416 as decimal(10,0)) * ss_sales_price#419)) AS csales#401]\n                  :     :        :        +- Project [ss_quantity#416, ss_sales_price#419, c_customer_sk#89]\n                  :     :        :           +- Join Inner, (ss_customer_sk#409 = c_customer_sk#89)\n                  :     :        :              :- Project [ss_customer_sk#409, ss_quantity#416, ss_sales_price#419]\n                  :     :        :              :  +- Join Inner, (ss_sold_date_sk#429 = d_date_sk#430)\n                  :     :        :              :     :- Project [ss_customer_sk#409, ss_quantity#416, ss_sales_price#419, ss_sold_date_sk#429]\n                  :     :        :              :     :  +- Filter ((isnotnull(ss_customer_sk#409) AND isnotnull(ss_sold_date_sk#429)) AND dynamicpruning#610 [ss_sold_date_sk#429])\n                  :     :        :              :     :     :  +- Project [d_date_sk#430]\n                  :     :        :              :     :     :     +- Filter (d_year#436 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#430))\n                  :     :        :              :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#430,d_date_id#431,d_date#432,d_month_seq#433,d_week_seq#434,d_quarter_seq#435,d_year#436,d_dow#437,d_moy#438,d_dom#439,d_qoy#440,d_fy_year#441,d_fy_quarter_seq#442,d_fy_week_seq#443,d_day_name#444,d_quarter_name#445,d_holiday#446,d_weekend#447,d_following_holiday#448,d_first_dom#449,d_last_dom#450,d_same_day_ly#451,d_same_day_lq#452,d_current_day#453,... 4 more fields] parquet\n                  :     :        :              :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#407,ss_item_sk#408,ss_customer_sk#409,ss_cdemo_sk#410,ss_hdemo_sk#411,ss_addr_sk#412,ss_store_sk#413,ss_promo_sk#414,ss_ticket_number#415L,ss_quantity#416,ss_wholesale_cost#417,ss_list_price#418,ss_sales_price#419,ss_ext_discount_amt#420,ss_ext_sales_price#421,ss_ext_wholesale_cost#422,ss_ext_list_price#423,ss_ext_tax#424,ss_coupon_amt#425,ss_net_paid#426,ss_net_paid_inc_tax#427,ss_net_profit#428,ss_sold_date_sk#429] parquet\n                  :     :        :              :     +- Project [d_date_sk#430]\n                  :     :        :              :        +- Filter (d_year#436 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#430))\n                  :     :        :              :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#430,d_date_id#431,d_date#432,d_month_seq#433,d_week_seq#434,d_quarter_seq#435,d_year#436,d_dow#437,d_moy#438,d_dom#439,d_qoy#440,d_fy_year#441,d_fy_quarter_seq#442,d_fy_week_seq#443,d_day_name#444,d_quarter_name#445,d_holiday#446,d_weekend#447,d_following_holiday#448,d_first_dom#449,d_last_dom#450,d_same_day_ly#451,d_same_day_lq#452,d_current_day#453,... 4 more fields] parquet\n                  :     :        :              +- Project [c_customer_sk#89]\n                  :     :        :                 +- Filter isnotnull(c_customer_sk#89)\n                  :     :        :                    +- Relation spark_catalog.tpcds_100.customer[c_customer_sk#89,c_customer_id#90,c_current_cdemo_sk#91,c_current_hdemo_sk#92,c_current_addr_sk#93,c_first_shipto_date_sk#94,c_first_sales_date_sk#95,c_salutation#96,c_first_name#97,c_last_name#98,c_preferred_cust_flag#99,c_birth_day#100,c_birth_month#101,c_birth_year#102,c_birth_country#103,c_login#104,c_email_address#105,c_last_review_date#106] parquet\n                  :     :        +- Aggregate [c_customer_sk#481], [c_customer_sk#481, sum((cast(ss_quantity#467 as decimal(10,0)) * ss_sales_price#470)) AS ssales#403]\n                  :     :           +- Project [ss_quantity#467, ss_sales_price#470, c_customer_sk#481]\n                  :     :              +- Join Inner, (ss_customer_sk#460 = c_customer_sk#481)\n                  :     :                 :- LogicalQueryStage Project [ss_customer_sk#460, ss_quantity#467, ss_sales_price#470], ShuffleQueryStage 17\n                  :     :                 +- LogicalQueryStage Project [c_customer_sk#481], ShuffleQueryStage 19\n                  :     +- LogicalQueryStage Project [d_date_sk#563], BroadcastQueryStage 21\n                  +- Join LeftSemi, (c_customer_sk#545 = c_customer_sk#481)\n                     :- LogicalQueryStage Project [c_customer_sk#545, c_first_name#553, c_last_name#554], ShuffleQueryStage 23\n                     +- Project [c_customer_sk#481]\n                        +- Filter (isnotnull(ssales#403) AND (cast(ssales#403 as decimal(38,8)) > (0.950000 * scalar-subquery#404 [])))\n                           :  +- Aggregate [max(csales#401) AS tpcds_cmax#402]\n                           :     +- Aggregate [c_customer_sk#89], [sum((cast(ss_quantity#416 as decimal(10,0)) * ss_sales_price#419)) AS csales#401]\n                           :        +- Project [ss_quantity#416, ss_sales_price#419, c_customer_sk#89]\n                           :           +- Join Inner, (ss_customer_sk#409 = c_customer_sk#89)\n                           :              :- Project [ss_customer_sk#409, ss_quantity#416, ss_sales_price#419]\n                           :              :  +- Join Inner, (ss_sold_date_sk#429 = d_date_sk#430)\n                           :              :     :- Project [ss_customer_sk#409, ss_quantity#416, ss_sales_price#419, ss_sold_date_sk#429]\n                           :              :     :  +- Filter ((isnotnull(ss_customer_sk#409) AND isnotnull(ss_sold_date_sk#429)) AND dynamicpruning#610 [ss_sold_date_sk#429])\n                           :              :     :     :  +- Project [d_date_sk#430]\n                           :              :     :     :     +- Filter (d_year#436 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#430))\n                           :              :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#430,d_date_id#431,d_date#432,d_month_seq#433,d_week_seq#434,d_quarter_seq#435,d_year#436,d_dow#437,d_moy#438,d_dom#439,d_qoy#440,d_fy_year#441,d_fy_quarter_seq#442,d_fy_week_seq#443,d_day_name#444,d_quarter_name#445,d_holiday#446,d_weekend#447,d_following_holiday#448,d_first_dom#449,d_last_dom#450,d_same_day_ly#451,d_same_day_lq#452,d_current_day#453,... 4 more fields] parquet\n                           :              :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#407,ss_item_sk#408,ss_customer_sk#409,ss_cdemo_sk#410,ss_hdemo_sk#411,ss_addr_sk#412,ss_store_sk#413,ss_promo_sk#414,ss_ticket_number#415L,ss_quantity#416,ss_wholesale_cost#417,ss_list_price#418,ss_sales_price#419,ss_ext_discount_amt#420,ss_ext_sales_price#421,ss_ext_wholesale_cost#422,ss_ext_list_price#423,ss_ext_tax#424,ss_coupon_amt#425,ss_net_paid#426,ss_net_paid_inc_tax#427,ss_net_profit#428,ss_sold_date_sk#429] parquet\n                           :              :     +- Project [d_date_sk#430]\n                           :              :        +- Filter (d_year#436 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#430))\n                           :              :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#430,d_date_id#431,d_date#432,d_month_seq#433,d_week_seq#434,d_quarter_seq#435,d_year#436,d_dow#437,d_moy#438,d_dom#439,d_qoy#440,d_fy_year#441,d_fy_quarter_seq#442,d_fy_week_seq#443,d_day_name#444,d_quarter_name#445,d_holiday#446,d_weekend#447,d_following_holiday#448,d_first_dom#449,d_last_dom#450,d_same_day_ly#451,d_same_day_lq#452,d_current_day#453,... 4 more fields] parquet\n                           :              +- Project [c_customer_sk#89]\n                           :                 +- Filter isnotnull(c_customer_sk#89)\n                           :                    +- Relation spark_catalog.tpcds_100.customer[c_customer_sk#89,c_customer_id#90,c_current_cdemo_sk#91,c_current_hdemo_sk#92,c_current_addr_sk#93,c_first_shipto_date_sk#94,c_first_sales_date_sk#95,c_salutation#96,c_first_name#97,c_last_name#98,c_preferred_cust_flag#99,c_birth_day#100,c_birth_month#101,c_birth_year#102,c_birth_country#103,c_login#104,c_email_address#105,c_last_review_date#106] parquet\n                           +- Aggregate [c_customer_sk#481], [c_customer_sk#481, sum((cast(ss_quantity#467 as decimal(10,0)) * ss_sales_price#470)) AS ssales#403]\n                              +- Project [ss_quantity#467, ss_sales_price#470, c_customer_sk#481]\n                                 +- Join Inner, (ss_customer_sk#460 = c_customer_sk#481)\n                                    :- LogicalQueryStage Project [ss_customer_sk#460, ss_quantity#467, ss_sales_price#470], ShuffleQueryStage 25\n                                    +- LogicalQueryStage Project [c_customer_sk#481], ShuffleQueryStage 27\n"
      },
      "IM" : {
        "inputSizeInBytes" : 37650361968,
        "inputRowCount" : 1717045700
      },
      "PD" : {
        "1" : [ 84280, 84280, 84280, 92709, 92709, 84280, 92709, 84280, 76619, 92709, 92709, 84280, 92709, 84280, 84280, 84280, 84280, 84280, 92709, 92709, 92709, 92709, 84280, 84280, 92709, 84280, 84280, 92709, 84280, 92709, 92709, 92709, 92709, 84280, 84280, 92709, 84280, 84280, 84280, 92709, 84280, 84280, 84280, 92709, 92709, 84280, 84280, 84280, 84280, 84280, 92709, 92709, 84280, 84280, 84280, 92709, 92709, 92709, 84280, 84280, 84280, 92709, 84280, 92709, 84280, 92709, 92709, 84280, 92709, 92709, 92709, 84280, 92709, 92709, 84280, 92709, 84280, 92709, 84280, 84280, 92709, 84280, 92709, 84280, 92709, 84280, 84280, 92709, 92709, 84280, 84280, 84280, 92709, 84280, 92709, 92709, 84280, 92709, 92709, 84280, 84280, 92709, 84280, 92709, 92709, 84280, 84280, 92709, 84280, 92709, 84280, 92709, 84280, 92709, 92709, 92709, 76619, 92709, 84280, 84280, 84280, 92709, 92709, 92709, 92709, 92709, 84280, 84280, 92709, 84280, 84280, 84280, 84280, 92709, 84280, 84280, 92709, 92709, 92709, 84280, 84280, 84280, 92709, 92709, 92709, 84280, 84280, 84280, 92709, 84280, 92709, 84280, 92709, 84280, 84280, 92709, 84280, 92709, 84280, 84280, 84280, 92709, 92709, 92709, 84280, 92709, 84280, 84280, 92709, 84280, 84280, 92709, 84280, 84280, 92709, 84280, 84280, 84280, 84280, 84280, 84280, 84280, 92709, 84280, 92709, 92709, 84280, 84280, 84280, 84280, 92709, 84280, 84280, 84280, 84280, 84280, 84280, 84280, 92709, 92709 ],
        "3" : [ 52331, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 57565, 57565, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 57565, 52331, 52331, 52331, 57565, 57565, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 57565, 57565, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 57565, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 57565, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 57565, 57565, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 57565, 57565, 52331, 57565, 52331, 57565, 52331, 57565, 52331, 52331, 57565, 52331, 57565, 57565, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 57565, 57565, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 57565, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 57565, 57565, 52331, 52331, 52331, 52331 ],
        "0" : [ 146748, 148062, 162268, 147121, 156091, 155997, 162866, 145655, 137010, 149774, 166912, 149859, 147977, 148375, 146423, 147452, 146578, 149316, 154962, 146511, 149571, 154021, 147977, 141730, 163713, 148833, 153080, 150257, 141384, 155903, 150342, 142671, 164244, 155997, 151301, 154479, 154962, 155493, 149401, 149097, 146578, 146681, 151386, 149774, 147604, 149486, 162678, 148062, 143527, 135298, 167947, 150342, 155420, 154021, 145324, 154021, 158337, 152139, 156844, 150342, 154021, 152139, 155921, 159761, 133326, 153080, 151750, 147537, 165373, 160292, 151198, 144383, 155988, 152139, 147434, 159184, 141375, 164748, 155514, 149774, 147036, 146663, 150360, 148079, 159351, 149932, 150342, 148545, 160984, 153623, 158504, 163713, 148478, 136672, 156938, 162772, 145324, 146180, 155997, 145239, 151656, 154962, 147036, 150715, 152597, 149774, 158337, 156938, 137450, 150800, 144298, 148460, 142231, 158900, 149774, 159667, 146748, 148918, 146663, 157879, 145324, 150715, 157375, 152224, 154962, 150809, 153080, 158820, 153538, 151198, 152139, 158820, 146095, 148918, 147036, 142671, 141978, 162866, 155056, 155420, 160313, 146596, 150360, 155997, 150885, 157785, 153080, 153538, 153538, 155420, 144951, 134977, 152691, 153165, 151656, 154962, 156455, 141357, 158431, 137944, 155056, 164244, 158820, 162362, 150715, 151814, 151198, 149003, 148375, 153080, 155420, 157879, 149868, 155420, 153165, 153080, 137450, 137528, 152597, 157302, 153538, 141357, 152597, 141044, 152157, 155235, 151826, 146180, 151741, 147977, 152224, 146265, 143442, 136594, 156844, 148833, 149401, 143925, 147977, 160796 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 16,
        "FinishedTasksNum" : 173,
        "FinishedTasksTotalTimeInMs" : 206351.0,
        "FinishedTasksDistributionInMs" : [ 17.0, 826.0, 909.0, 1196.0, 6728.0 ]
      },
      "StartTimeInMs" : 1702226732808,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 138133,
        "IOBytes" : {
          "Total" : 22351843149,
          "Details" : {
            "IR" : 2898265891,
            "IW" : 0,
            "SR" : 12332414216,
            "SW" : 7121163042
          }
        }
      }
    },
    "1" : {
      "LQP" : {
        "operators" : {
          "0" : {
            "sign" : 1758754720,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1048824,
            "rowCount" : 31,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#517], BroadcastQueryStage 1 "
          }
        },
        "links" : [ ],
        "rawPlan" : "LogicalQueryStage Project [d_date_sk#517], BroadcastQueryStage 1\n"
      },
      "IM" : {
        "inputSizeInBytes" : 1048824,
        "inputRowCount" : 31
      },
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "StartTimeInMs" : 1702226712607,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 158334,
        "IOBytes" : {
          "Total" : 22442249308,
          "Details" : {
            "IR" : 2932683812,
            "IW" : 0,
            "SR" : 12332414216,
            "SW" : 7177151280
          }
        }
      }
    },
    "17" : {
      "LQP" : {
        "operators" : {
          "0" : {
            "sign" : 745588666,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1472,
            "rowCount" : 46,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [max(csales#401) AS tpcds_cmax#402], HashAggregate(keys=[], functions=[max(csales#401)]) "
          }
        },
        "links" : [ ],
        "rawPlan" : "LogicalQueryStage Aggregate [max(csales#401) AS tpcds_cmax#402], HashAggregate(keys=[], functions=[max(csales#401)])\n"
      },
      "IM" : {
        "inputSizeInBytes" : 1472,
        "inputRowCount" : 46
      },
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 2,
        "FinishedTasksNum" : 18,
        "FinishedTasksTotalTimeInMs" : 502139.0,
        "FinishedTasksDistributionInMs" : [ 25356.0, 26329.0, 27024.0, 30173.0, 31788.0 ]
      },
      "StartTimeInMs" : 1702226844329,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 26612,
        "IOBytes" : {
          "Total" : 8555551485,
          "Details" : {
            "IR" : 0,
            "IW" : 0,
            "SR" : 8540753584,
            "SW" : 14797901
          }
        }
      }
    },
    "14" : {
      "LQP" : {
        "operators" : {
          "45" : {
            "sign" : -1443446036,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 303406973816000000,
            "rowCount" : 4461867262000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ws_bill_customer_sk#144 = c_customer_sk#545) "
          },
          "34" : {
            "sign" : -528156139,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 104000000,
            "rowCount" : 2000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (c_customer_sk#499 = c_customer_sk#481) "
          },
          "12" : {
            "sign" : -1901984732,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 15402625056000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(ssales#403) AND (cast(ssales#403 as decimal(38,8)) > (0.950000 * scalar-subquery#404 []))) "
          },
          "66" : {
            "sign" : 1454165815,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 32000000,
            "rowCount" : 2000000,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [c_customer_sk#481], ShuffleQueryStage 27 "
          },
          "51" : {
            "sign" : -1882899317,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 15402625056000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(ssales#403) AND (cast(ssales#403 as decimal(38,8)) > (0.950000 * scalar-subquery#404 []))) "
          },
          "8" : {
            "sign" : 2040454210,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 1392136096,
            "rowCount" : 43504253,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cs_sold_date_sk#140 = d_date_sk#517) "
          },
          "19" : {
            "sign" : -660295919,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 47624376,
            "rowCount" : 1984349,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [c_customer_sk#89], [sum((cast(ss_quantity#416 as decimal(10,0)) * ss_sales_price#419)) AS csales#401] "
          },
          "23" : {
            "sign" : 305748262,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 8497298720,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#429 = d_date_sk#430) "
          },
          "62" : {
            "sign" : 2102197308,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 15402625056000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [c_customer_sk#481], [c_customer_sk#481, sum((cast(ss_quantity#467 as decimal(10,0)) * ss_sales_price#470)) AS ssales#403] "
          },
          "4" : {
            "sign" : -135027843,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 5568544384000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [c_last_name#508, c_first_name#507], [c_last_name#508, c_first_name#507, sum((cast(cs_quantity#124 as decimal(10,0)) * cs_list_price#126)) AS sales#391] "
          },
          "40" : {
            "sign" : -1437901541,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 15402625056000000,
            "rowCount" : 550093752000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_customer_sk#460 = c_customer_sk#481) "
          },
          "15" : {
            "sign" : 1908847787,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 15402625056000000,
            "rowCount" : 550093752000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_customer_sk#460 = c_customer_sk#481) "
          },
          "11" : {
            "sign" : 2123397918,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 6601125024000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_customer_sk#481] "
          },
          "9" : {
            "sign" : -525197904,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 39294164,
            "rowCount" : 1403363,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (cs_bill_customer_sk#109 = c_customer_sk#481) "
          },
          "44" : {
            "sign" : 376706478,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 267712035720000000,
            "rowCount" : 4461867262000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_quantity#158, ws_list_price#160, c_first_name#553, c_last_name#554] "
          },
          "33" : {
            "sign" : 1758754844,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1048824,
            "rowCount" : 31,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#517], BroadcastQueryStage 5 "
          },
          "22" : {
            "sign" : 1802383537,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 6372974040,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_customer_sk#409, ss_quantity#416, ss_sales_price#419] "
          },
          "56" : {
            "sign" : 1454164916,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 32000000,
            "rowCount" : 2000000,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [c_customer_sk#481], ShuffleQueryStage 19 "
          },
          "55" : {
            "sign" : 457576007,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 8801500032,
            "rowCount" : 275046876,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ss_customer_sk#460, ss_quantity#467, ss_sales_price#470], ShuffleQueryStage 17 "
          },
          "26" : {
            "sign" : -977156952,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#407, ss_item_sk#408, ss_customer_sk#409, ss_cdemo_sk#410, ss_hdemo_sk#411, ss_addr_sk#412, ss_store_sk#413, ss_promo_sk#414, ss_ticket_number#415L, ss_quantity#416, ss_wholesale_cost#417, ss_list_price#418, ss_sales_price#419, ss_ext_discount_amt#420, ss_ext_sales_price#421, ss_ext_wholesale_cost#422, ss_ext_list_price#423, ss_ext_tax#424, ss_coupon_amt#425, ss_net_paid#426, ss_net_paid_inc_tax#427, ss_net_profit#428, ss_sold_date_sk#429], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "50" : {
            "sign" : 998370159,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 6601125024000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_customer_sk#481] "
          },
          "37" : {
            "sign" : 789941336,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 15402625056000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(ssales#403) AND (cast(ssales#403 as decimal(38,8)) > (0.950000 * scalar-subquery#404 []))) "
          },
          "61" : {
            "sign" : -639744623,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 15402625056000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(ssales#403) AND (cast(ssales#403 as decimal(38,8)) > (0.950000 * scalar-subquery#404 []))) "
          },
          "13" : {
            "sign" : 1934210699,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 15402625056000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [c_customer_sk#481], [c_customer_sk#481, sum((cast(ss_quantity#467 as decimal(10,0)) * ss_sales_price#470)) AS ssales#403] "
          },
          "46" : {
            "sign" : -1263024912,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 53542407144,
            "rowCount" : 2230933631,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_bill_customer_sk#144, ws_quantity#158, ws_list_price#160] "
          },
          "24" : {
            "sign" : -861776479,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 7354733484,
            "rowCount" : 262669053,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_customer_sk#409, ss_quantity#416, ss_sales_price#419, ss_sold_date_sk#429] "
          },
          "35" : {
            "sign" : 435063190,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 96527848,
            "rowCount" : 2000000,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [c_customer_sk#499, c_first_name#507, c_last_name#508], ShuffleQueryStage 6 "
          },
          "16" : {
            "sign" : -1093618124,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 8801500032,
            "rowCount" : 275046876,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ss_customer_sk#460, ss_quantity#467, ss_sales_price#470], ShuffleQueryStage 3 "
          },
          "5" : {
            "sign" : 1896579677,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 5220510360000000,
            "rowCount" : 87008506000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_quantity#124, cs_list_price#126, c_first_name#507, c_last_name#508] "
          },
          "10" : {
            "sign" : -1540420998,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 56134520,
            "rowCount" : 1403363,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [cs_bill_customer_sk#109, cs_quantity#124, cs_list_price#126, cs_sold_date_sk#140], ShuffleQueryStage 31 "
          },
          "59" : {
            "sign" : 1358266277,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 96527848,
            "rowCount" : 2000000,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [c_customer_sk#545, c_first_name#553, c_last_name#554], ShuffleQueryStage 23 "
          },
          "48" : {
            "sign" : -1108717480,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 2015036828,
            "rowCount" : 71965601,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (ws_bill_customer_sk#144 = c_customer_sk#481) "
          },
          "21" : {
            "sign" : -949612920,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 7701230628,
            "rowCount" : 275043951,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_customer_sk#409 = c_customer_sk#89) "
          },
          "54" : {
            "sign" : 914322748,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 15402625056000000,
            "rowCount" : 550093752000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_customer_sk#460 = c_customer_sk#481) "
          },
          "43" : {
            "sign" : -1559961592,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 285559504768000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [c_last_name#554, c_first_name#553], [c_last_name#554, c_first_name#553, sum((cast(ws_quantity#158 as decimal(10,0)) * ws_list_price#160)) AS sales#394] "
          },
          "65" : {
            "sign" : 457576906,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 8801500032,
            "rowCount" : 275046876,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ss_customer_sk#460, ss_quantity#467, ss_sales_price#470], ShuffleQueryStage 25 "
          },
          "57" : {
            "sign" : -2138347845,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1048824,
            "rowCount" : 31,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#563], BroadcastQueryStage 21 "
          },
          "32" : {
            "sign" : -576393737,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 500000000,
            "rowCount" : 2000000,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [c_customer_sk#89, c_customer_id#90, c_current_cdemo_sk#91, c_current_hdemo_sk#92, c_current_addr_sk#93, c_first_shipto_date_sk#94, c_first_sales_date_sk#95, c_salutation#96, c_first_name#97, c_last_name#98, c_preferred_cust_flag#99, c_birth_day#100, c_birth_month#101, c_birth_year#102, c_birth_country#103, c_login#104, c_email_address#105, c_last_review_date#106], `spark_catalog`.`tpcds_100`.`customer`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "49" : {
            "sign" : -1428108786,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 2015036828,
            "rowCount" : 71965601,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ws_bill_customer_sk#144, ws_quantity#158, ws_list_price#160, ws_sold_date_sk#174], ShuffleQueryStage 32 "
          },
          "6" : {
            "sign" : -44028142,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 5916578408000000,
            "rowCount" : 87008506000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cs_bill_customer_sk#109 = c_customer_sk#499) "
          },
          "36" : {
            "sign" : -350419576,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 6601125024000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_customer_sk#481] "
          },
          "1" : {
            "sign" : -2008418228,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
            "sizeInBytes" : 291128049152000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) LocalLimit Arguments: 100 "
          },
          "39" : {
            "sign" : 47435418,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 13202250048000000,
            "rowCount" : 550093752000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_quantity#467, ss_sales_price#470, c_customer_sk#481] "
          },
          "17" : {
            "sign" : 739645252,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 32000000,
            "rowCount" : 2000000,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [c_customer_sk#481], ShuffleQueryStage 4 "
          },
          "25" : {
            "sign" : 1565358831,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 39925696056,
            "rowCount" : 262669053,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(ss_customer_sk#409) AND isnotnull(ss_sold_date_sk#429)) AND dynamicpruning#610 [ss_sold_date_sk#429]) "
          },
          "60" : {
            "sign" : 290084495,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 6601125024000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_customer_sk#481] "
          },
          "14" : {
            "sign" : 1623804386,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 13202250048000000,
            "rowCount" : 550093752000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_quantity#467, ss_sales_price#470, c_customer_sk#481] "
          },
          "47" : {
            "sign" : 1307457971,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 71389876192,
            "rowCount" : 2230933631,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ws_sold_date_sk#174 = d_date_sk#563) "
          },
          "31" : {
            "sign" : -337975679,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 500000000,
            "rowCount" : 2000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: isnotnull(c_customer_sk#89) "
          },
          "58" : {
            "sign" : 1645687881,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 104000000,
            "rowCount" : 2000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (c_customer_sk#545 = c_customer_sk#481) "
          },
          "64" : {
            "sign" : -1025989668,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 15402625056000000,
            "rowCount" : 550093752000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_customer_sk#460 = c_customer_sk#481) "
          },
          "53" : {
            "sign" : 82168585,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 13202250048000000,
            "rowCount" : 550093752000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_quantity#467, ss_sales_price#470, c_customer_sk#481] "
          },
          "42" : {
            "sign" : 1454164637,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 32000000,
            "rowCount" : 2000000,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [c_customer_sk#481], ShuffleQueryStage 10 "
          },
          "0" : {
            "sign" : 977866397,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
            "sizeInBytes" : 6400,
            "rowCount" : 100,
            "isRuntime" : false,
            "predicate" : " (unknown) GlobalLimit Arguments: 100 "
          },
          "20" : {
            "sign" : -1338930356,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 6601054824,
            "rowCount" : 275043951,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_quantity#416, ss_sales_price#419, c_customer_sk#89] "
          },
          "27" : {
            "sign" : 1217444409,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 17364,
            "rowCount" : 1447,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#430] "
          },
          "2" : {
            "sign" : -1199640825,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 291128049152000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [c_last_name#508 ASC NULLS FIRST, c_first_name#507 ASC NULLS FIRST, sales#391 ASC NULLS FIRST], true "
          },
          "38" : {
            "sign" : 431587195,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 15402625056000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [c_customer_sk#481], [c_customer_sk#481, sum((cast(ss_quantity#467 as decimal(10,0)) * ss_sales_price#470)) AS ssales#403] "
          },
          "18" : {
            "sign" : -582481967,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 24,
            "rowCount" : 1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [max(csales#401) AS tpcds_cmax#402] "
          },
          "30" : {
            "sign" : 1085635783,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 24000000,
            "rowCount" : 2000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_customer_sk#89] "
          },
          "7" : {
            "sign" : 1161395567,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 1044102072,
            "rowCount" : 43504253,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_bill_customer_sk#109, cs_quantity#124, cs_list_price#126] "
          },
          "29" : {
            "sign" : -358797686,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#430, d_date_id#431, d_date#432, d_month_seq#433, d_week_seq#434, d_quarter_seq#435, d_year#436, d_dow#437, d_moy#438, d_dom#439, d_qoy#440, d_fy_year#441, d_fy_quarter_seq#442, d_fy_week_seq#443, d_day_name#444, d_quarter_name#445, d_holiday#446, d_weekend#447, d_following_holiday#448, d_first_dom#449, d_last_dom#450, d_same_day_ly#451, d_same_day_lq#452, d_current_day#453, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "41" : {
            "sign" : -1093617969,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 8801500032,
            "rowCount" : 275046876,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ss_customer_sk#460, ss_quantity#467, ss_sales_price#470], ShuffleQueryStage 8 "
          },
          "63" : {
            "sign" : -2121928113,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 13202250048000000,
            "rowCount" : 550093752000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_quantity#467, ss_sales_price#470, c_customer_sk#481] "
          },
          "3" : {
            "sign" : 1658360343,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Union",
            "sizeInBytes" : 291128049152000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Union Arguments: false, false "
          },
          "52" : {
            "sign" : -1381279908,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 15402625056000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [c_customer_sk#481], [c_customer_sk#481, sum((cast(ss_quantity#467 as decimal(10,0)) * ss_sales_price#470)) AS ssales#403] "
          },
          "28" : {
            "sign" : 2051540096,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 355962,
            "rowCount" : 1447,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (d_year#436 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#430)) "
          }
        },
        "links" : [ {
          "fromId" : 10,
          "fromName" : "LogicalQueryStage",
          "toId" : 9,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 16,
          "fromName" : "LogicalQueryStage",
          "toId" : 15,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 17,
          "fromName" : "LogicalQueryStage",
          "toId" : 15,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 15,
          "fromName" : "Join",
          "toId" : 14,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 14,
          "fromName" : "Project",
          "toId" : 13,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 13,
          "fromName" : "Aggregate",
          "toId" : 12,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 26,
          "fromName" : "LogicalRelation",
          "toId" : 25,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 29,
          "fromName" : "LogicalRelation",
          "toId" : 28,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 28,
          "fromName" : "Filter",
          "toId" : 27,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 27,
          "fromName" : "Project",
          "toId" : 25,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 25,
          "fromName" : "Filter",
          "toId" : 24,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 24,
          "fromName" : "Project",
          "toId" : 23,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 27,
          "fromName" : "Project",
          "toId" : 23,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 23,
          "fromName" : "Join",
          "toId" : 22,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 22,
          "fromName" : "Project",
          "toId" : 21,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 32,
          "fromName" : "LogicalRelation",
          "toId" : 31,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 31,
          "fromName" : "Filter",
          "toId" : 30,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 30,
          "fromName" : "Project",
          "toId" : 21,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 21,
          "fromName" : "Join",
          "toId" : 20,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 20,
          "fromName" : "Project",
          "toId" : 19,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 19,
          "fromName" : "Aggregate",
          "toId" : 18,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 18,
          "fromName" : "Aggregate",
          "toId" : 12,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 12,
          "fromName" : "Filter",
          "toId" : 11,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "Project",
          "toId" : 9,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "Join",
          "toId" : 8,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 33,
          "fromName" : "LogicalQueryStage",
          "toId" : 8,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "Join",
          "toId" : 7,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Project",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 35,
          "fromName" : "LogicalQueryStage",
          "toId" : 34,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 41,
          "fromName" : "LogicalQueryStage",
          "toId" : 40,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 42,
          "fromName" : "LogicalQueryStage",
          "toId" : 40,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 40,
          "fromName" : "Join",
          "toId" : 39,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 39,
          "fromName" : "Project",
          "toId" : 38,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 38,
          "fromName" : "Aggregate",
          "toId" : 37,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 18,
          "fromName" : "Aggregate",
          "toId" : 37,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 37,
          "fromName" : "Filter",
          "toId" : 36,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 36,
          "fromName" : "Project",
          "toId" : 34,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 34,
          "fromName" : "Join",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Join",
          "toId" : 5,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Project",
          "toId" : 4,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Aggregate",
          "toId" : 3,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 49,
          "fromName" : "LogicalQueryStage",
          "toId" : 48,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 55,
          "fromName" : "LogicalQueryStage",
          "toId" : 54,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 56,
          "fromName" : "LogicalQueryStage",
          "toId" : 54,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 54,
          "fromName" : "Join",
          "toId" : 53,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 53,
          "fromName" : "Project",
          "toId" : 52,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 52,
          "fromName" : "Aggregate",
          "toId" : 51,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 18,
          "fromName" : "Aggregate",
          "toId" : 51,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 51,
          "fromName" : "Filter",
          "toId" : 50,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 50,
          "fromName" : "Project",
          "toId" : 48,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 48,
          "fromName" : "Join",
          "toId" : 47,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 57,
          "fromName" : "LogicalQueryStage",
          "toId" : 47,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 47,
          "fromName" : "Join",
          "toId" : 46,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 46,
          "fromName" : "Project",
          "toId" : 45,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 59,
          "fromName" : "LogicalQueryStage",
          "toId" : 58,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 65,
          "fromName" : "LogicalQueryStage",
          "toId" : 64,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 66,
          "fromName" : "LogicalQueryStage",
          "toId" : 64,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 64,
          "fromName" : "Join",
          "toId" : 63,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 63,
          "fromName" : "Project",
          "toId" : 62,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 62,
          "fromName" : "Aggregate",
          "toId" : 61,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 18,
          "fromName" : "Aggregate",
          "toId" : 61,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 61,
          "fromName" : "Filter",
          "toId" : 60,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 60,
          "fromName" : "Project",
          "toId" : 58,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 58,
          "fromName" : "Join",
          "toId" : 45,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 45,
          "fromName" : "Join",
          "toId" : 44,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 44,
          "fromName" : "Project",
          "toId" : 43,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 43,
          "fromName" : "Aggregate",
          "toId" : 3,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Union",
          "toId" : 2,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "LocalLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "LocalLimit",
          "toId" : 0,
          "toName" : "GlobalLimit",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [c_last_name#508 ASC NULLS FIRST, c_first_name#507 ASC NULLS FIRST, sales#391 ASC NULLS FIRST], true\n      +- Union false, false\n         :- Aggregate [c_last_name#508, c_first_name#507], [c_last_name#508, c_first_name#507, sum((cast(cs_quantity#124 as decimal(10,0)) * cs_list_price#126)) AS sales#391]\n         :  +- Project [cs_quantity#124, cs_list_price#126, c_first_name#507, c_last_name#508]\n         :     +- Join Inner, (cs_bill_customer_sk#109 = c_customer_sk#499)\n         :        :- Project [cs_bill_customer_sk#109, cs_quantity#124, cs_list_price#126]\n         :        :  +- Join Inner, (cs_sold_date_sk#140 = d_date_sk#517)\n         :        :     :- Join LeftSemi, (cs_bill_customer_sk#109 = c_customer_sk#481)\n         :        :     :  :- LogicalQueryStage Project [cs_bill_customer_sk#109, cs_quantity#124, cs_list_price#126, cs_sold_date_sk#140], ShuffleQueryStage 31\n         :        :     :  +- Project [c_customer_sk#481]\n         :        :     :     +- Filter (isnotnull(ssales#403) AND (cast(ssales#403 as decimal(38,8)) > (0.950000 * scalar-subquery#404 [])))\n         :        :     :        :  +- Aggregate [max(csales#401) AS tpcds_cmax#402]\n         :        :     :        :     +- Aggregate [c_customer_sk#89], [sum((cast(ss_quantity#416 as decimal(10,0)) * ss_sales_price#419)) AS csales#401]\n         :        :     :        :        +- Project [ss_quantity#416, ss_sales_price#419, c_customer_sk#89]\n         :        :     :        :           +- Join Inner, (ss_customer_sk#409 = c_customer_sk#89)\n         :        :     :        :              :- Project [ss_customer_sk#409, ss_quantity#416, ss_sales_price#419]\n         :        :     :        :              :  +- Join Inner, (ss_sold_date_sk#429 = d_date_sk#430)\n         :        :     :        :              :     :- Project [ss_customer_sk#409, ss_quantity#416, ss_sales_price#419, ss_sold_date_sk#429]\n         :        :     :        :              :     :  +- Filter ((isnotnull(ss_customer_sk#409) AND isnotnull(ss_sold_date_sk#429)) AND dynamicpruning#610 [ss_sold_date_sk#429])\n         :        :     :        :              :     :     :  +- Project [d_date_sk#430]\n         :        :     :        :              :     :     :     +- Filter (d_year#436 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#430))\n         :        :     :        :              :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#430,d_date_id#431,d_date#432,d_month_seq#433,d_week_seq#434,d_quarter_seq#435,d_year#436,d_dow#437,d_moy#438,d_dom#439,d_qoy#440,d_fy_year#441,d_fy_quarter_seq#442,d_fy_week_seq#443,d_day_name#444,d_quarter_name#445,d_holiday#446,d_weekend#447,d_following_holiday#448,d_first_dom#449,d_last_dom#450,d_same_day_ly#451,d_same_day_lq#452,d_current_day#453,... 4 more fields] parquet\n         :        :     :        :              :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#407,ss_item_sk#408,ss_customer_sk#409,ss_cdemo_sk#410,ss_hdemo_sk#411,ss_addr_sk#412,ss_store_sk#413,ss_promo_sk#414,ss_ticket_number#415L,ss_quantity#416,ss_wholesale_cost#417,ss_list_price#418,ss_sales_price#419,ss_ext_discount_amt#420,ss_ext_sales_price#421,ss_ext_wholesale_cost#422,ss_ext_list_price#423,ss_ext_tax#424,ss_coupon_amt#425,ss_net_paid#426,ss_net_paid_inc_tax#427,ss_net_profit#428,ss_sold_date_sk#429] parquet\n         :        :     :        :              :     +- Project [d_date_sk#430]\n         :        :     :        :              :        +- Filter (d_year#436 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#430))\n         :        :     :        :              :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#430,d_date_id#431,d_date#432,d_month_seq#433,d_week_seq#434,d_quarter_seq#435,d_year#436,d_dow#437,d_moy#438,d_dom#439,d_qoy#440,d_fy_year#441,d_fy_quarter_seq#442,d_fy_week_seq#443,d_day_name#444,d_quarter_name#445,d_holiday#446,d_weekend#447,d_following_holiday#448,d_first_dom#449,d_last_dom#450,d_same_day_ly#451,d_same_day_lq#452,d_current_day#453,... 4 more fields] parquet\n         :        :     :        :              +- Project [c_customer_sk#89]\n         :        :     :        :                 +- Filter isnotnull(c_customer_sk#89)\n         :        :     :        :                    +- Relation spark_catalog.tpcds_100.customer[c_customer_sk#89,c_customer_id#90,c_current_cdemo_sk#91,c_current_hdemo_sk#92,c_current_addr_sk#93,c_first_shipto_date_sk#94,c_first_sales_date_sk#95,c_salutation#96,c_first_name#97,c_last_name#98,c_preferred_cust_flag#99,c_birth_day#100,c_birth_month#101,c_birth_year#102,c_birth_country#103,c_login#104,c_email_address#105,c_last_review_date#106] parquet\n         :        :     :        +- Aggregate [c_customer_sk#481], [c_customer_sk#481, sum((cast(ss_quantity#467 as decimal(10,0)) * ss_sales_price#470)) AS ssales#403]\n         :        :     :           +- Project [ss_quantity#467, ss_sales_price#470, c_customer_sk#481]\n         :        :     :              +- Join Inner, (ss_customer_sk#460 = c_customer_sk#481)\n         :        :     :                 :- LogicalQueryStage Project [ss_customer_sk#460, ss_quantity#467, ss_sales_price#470], ShuffleQueryStage 3\n         :        :     :                 +- LogicalQueryStage Project [c_customer_sk#481], ShuffleQueryStage 4\n         :        :     +- LogicalQueryStage Project [d_date_sk#517], BroadcastQueryStage 5\n         :        +- Join LeftSemi, (c_customer_sk#499 = c_customer_sk#481)\n         :           :- LogicalQueryStage Project [c_customer_sk#499, c_first_name#507, c_last_name#508], ShuffleQueryStage 6\n         :           +- Project [c_customer_sk#481]\n         :              +- Filter (isnotnull(ssales#403) AND (cast(ssales#403 as decimal(38,8)) > (0.950000 * scalar-subquery#404 [])))\n         :                 :  +- Aggregate [max(csales#401) AS tpcds_cmax#402]\n         :                 :     +- Aggregate [c_customer_sk#89], [sum((cast(ss_quantity#416 as decimal(10,0)) * ss_sales_price#419)) AS csales#401]\n         :                 :        +- Project [ss_quantity#416, ss_sales_price#419, c_customer_sk#89]\n         :                 :           +- Join Inner, (ss_customer_sk#409 = c_customer_sk#89)\n         :                 :              :- Project [ss_customer_sk#409, ss_quantity#416, ss_sales_price#419]\n         :                 :              :  +- Join Inner, (ss_sold_date_sk#429 = d_date_sk#430)\n         :                 :              :     :- Project [ss_customer_sk#409, ss_quantity#416, ss_sales_price#419, ss_sold_date_sk#429]\n         :                 :              :     :  +- Filter ((isnotnull(ss_customer_sk#409) AND isnotnull(ss_sold_date_sk#429)) AND dynamicpruning#610 [ss_sold_date_sk#429])\n         :                 :              :     :     :  +- Project [d_date_sk#430]\n         :                 :              :     :     :     +- Filter (d_year#436 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#430))\n         :                 :              :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#430,d_date_id#431,d_date#432,d_month_seq#433,d_week_seq#434,d_quarter_seq#435,d_year#436,d_dow#437,d_moy#438,d_dom#439,d_qoy#440,d_fy_year#441,d_fy_quarter_seq#442,d_fy_week_seq#443,d_day_name#444,d_quarter_name#445,d_holiday#446,d_weekend#447,d_following_holiday#448,d_first_dom#449,d_last_dom#450,d_same_day_ly#451,d_same_day_lq#452,d_current_day#453,... 4 more fields] parquet\n         :                 :              :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#407,ss_item_sk#408,ss_customer_sk#409,ss_cdemo_sk#410,ss_hdemo_sk#411,ss_addr_sk#412,ss_store_sk#413,ss_promo_sk#414,ss_ticket_number#415L,ss_quantity#416,ss_wholesale_cost#417,ss_list_price#418,ss_sales_price#419,ss_ext_discount_amt#420,ss_ext_sales_price#421,ss_ext_wholesale_cost#422,ss_ext_list_price#423,ss_ext_tax#424,ss_coupon_amt#425,ss_net_paid#426,ss_net_paid_inc_tax#427,ss_net_profit#428,ss_sold_date_sk#429] parquet\n         :                 :              :     +- Project [d_date_sk#430]\n         :                 :              :        +- Filter (d_year#436 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#430))\n         :                 :              :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#430,d_date_id#431,d_date#432,d_month_seq#433,d_week_seq#434,d_quarter_seq#435,d_year#436,d_dow#437,d_moy#438,d_dom#439,d_qoy#440,d_fy_year#441,d_fy_quarter_seq#442,d_fy_week_seq#443,d_day_name#444,d_quarter_name#445,d_holiday#446,d_weekend#447,d_following_holiday#448,d_first_dom#449,d_last_dom#450,d_same_day_ly#451,d_same_day_lq#452,d_current_day#453,... 4 more fields] parquet\n         :                 :              +- Project [c_customer_sk#89]\n         :                 :                 +- Filter isnotnull(c_customer_sk#89)\n         :                 :                    +- Relation spark_catalog.tpcds_100.customer[c_customer_sk#89,c_customer_id#90,c_current_cdemo_sk#91,c_current_hdemo_sk#92,c_current_addr_sk#93,c_first_shipto_date_sk#94,c_first_sales_date_sk#95,c_salutation#96,c_first_name#97,c_last_name#98,c_preferred_cust_flag#99,c_birth_day#100,c_birth_month#101,c_birth_year#102,c_birth_country#103,c_login#104,c_email_address#105,c_last_review_date#106] parquet\n         :                 +- Aggregate [c_customer_sk#481], [c_customer_sk#481, sum((cast(ss_quantity#467 as decimal(10,0)) * ss_sales_price#470)) AS ssales#403]\n         :                    +- Project [ss_quantity#467, ss_sales_price#470, c_customer_sk#481]\n         :                       +- Join Inner, (ss_customer_sk#460 = c_customer_sk#481)\n         :                          :- LogicalQueryStage Project [ss_customer_sk#460, ss_quantity#467, ss_sales_price#470], ShuffleQueryStage 8\n         :                          +- LogicalQueryStage Project [c_customer_sk#481], ShuffleQueryStage 10\n         +- Aggregate [c_last_name#554, c_first_name#553], [c_last_name#554, c_first_name#553, sum((cast(ws_quantity#158 as decimal(10,0)) * ws_list_price#160)) AS sales#394]\n            +- Project [ws_quantity#158, ws_list_price#160, c_first_name#553, c_last_name#554]\n               +- Join Inner, (ws_bill_customer_sk#144 = c_customer_sk#545)\n                  :- Project [ws_bill_customer_sk#144, ws_quantity#158, ws_list_price#160]\n                  :  +- Join Inner, (ws_sold_date_sk#174 = d_date_sk#563)\n                  :     :- Join LeftSemi, (ws_bill_customer_sk#144 = c_customer_sk#481)\n                  :     :  :- LogicalQueryStage Project [ws_bill_customer_sk#144, ws_quantity#158, ws_list_price#160, ws_sold_date_sk#174], ShuffleQueryStage 32\n                  :     :  +- Project [c_customer_sk#481]\n                  :     :     +- Filter (isnotnull(ssales#403) AND (cast(ssales#403 as decimal(38,8)) > (0.950000 * scalar-subquery#404 [])))\n                  :     :        :  +- Aggregate [max(csales#401) AS tpcds_cmax#402]\n                  :     :        :     +- Aggregate [c_customer_sk#89], [sum((cast(ss_quantity#416 as decimal(10,0)) * ss_sales_price#419)) AS csales#401]\n                  :     :        :        +- Project [ss_quantity#416, ss_sales_price#419, c_customer_sk#89]\n                  :     :        :           +- Join Inner, (ss_customer_sk#409 = c_customer_sk#89)\n                  :     :        :              :- Project [ss_customer_sk#409, ss_quantity#416, ss_sales_price#419]\n                  :     :        :              :  +- Join Inner, (ss_sold_date_sk#429 = d_date_sk#430)\n                  :     :        :              :     :- Project [ss_customer_sk#409, ss_quantity#416, ss_sales_price#419, ss_sold_date_sk#429]\n                  :     :        :              :     :  +- Filter ((isnotnull(ss_customer_sk#409) AND isnotnull(ss_sold_date_sk#429)) AND dynamicpruning#610 [ss_sold_date_sk#429])\n                  :     :        :              :     :     :  +- Project [d_date_sk#430]\n                  :     :        :              :     :     :     +- Filter (d_year#436 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#430))\n                  :     :        :              :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#430,d_date_id#431,d_date#432,d_month_seq#433,d_week_seq#434,d_quarter_seq#435,d_year#436,d_dow#437,d_moy#438,d_dom#439,d_qoy#440,d_fy_year#441,d_fy_quarter_seq#442,d_fy_week_seq#443,d_day_name#444,d_quarter_name#445,d_holiday#446,d_weekend#447,d_following_holiday#448,d_first_dom#449,d_last_dom#450,d_same_day_ly#451,d_same_day_lq#452,d_current_day#453,... 4 more fields] parquet\n                  :     :        :              :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#407,ss_item_sk#408,ss_customer_sk#409,ss_cdemo_sk#410,ss_hdemo_sk#411,ss_addr_sk#412,ss_store_sk#413,ss_promo_sk#414,ss_ticket_number#415L,ss_quantity#416,ss_wholesale_cost#417,ss_list_price#418,ss_sales_price#419,ss_ext_discount_amt#420,ss_ext_sales_price#421,ss_ext_wholesale_cost#422,ss_ext_list_price#423,ss_ext_tax#424,ss_coupon_amt#425,ss_net_paid#426,ss_net_paid_inc_tax#427,ss_net_profit#428,ss_sold_date_sk#429] parquet\n                  :     :        :              :     +- Project [d_date_sk#430]\n                  :     :        :              :        +- Filter (d_year#436 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#430))\n                  :     :        :              :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#430,d_date_id#431,d_date#432,d_month_seq#433,d_week_seq#434,d_quarter_seq#435,d_year#436,d_dow#437,d_moy#438,d_dom#439,d_qoy#440,d_fy_year#441,d_fy_quarter_seq#442,d_fy_week_seq#443,d_day_name#444,d_quarter_name#445,d_holiday#446,d_weekend#447,d_following_holiday#448,d_first_dom#449,d_last_dom#450,d_same_day_ly#451,d_same_day_lq#452,d_current_day#453,... 4 more fields] parquet\n                  :     :        :              +- Project [c_customer_sk#89]\n                  :     :        :                 +- Filter isnotnull(c_customer_sk#89)\n                  :     :        :                    +- Relation spark_catalog.tpcds_100.customer[c_customer_sk#89,c_customer_id#90,c_current_cdemo_sk#91,c_current_hdemo_sk#92,c_current_addr_sk#93,c_first_shipto_date_sk#94,c_first_sales_date_sk#95,c_salutation#96,c_first_name#97,c_last_name#98,c_preferred_cust_flag#99,c_birth_day#100,c_birth_month#101,c_birth_year#102,c_birth_country#103,c_login#104,c_email_address#105,c_last_review_date#106] parquet\n                  :     :        +- Aggregate [c_customer_sk#481], [c_customer_sk#481, sum((cast(ss_quantity#467 as decimal(10,0)) * ss_sales_price#470)) AS ssales#403]\n                  :     :           +- Project [ss_quantity#467, ss_sales_price#470, c_customer_sk#481]\n                  :     :              +- Join Inner, (ss_customer_sk#460 = c_customer_sk#481)\n                  :     :                 :- LogicalQueryStage Project [ss_customer_sk#460, ss_quantity#467, ss_sales_price#470], ShuffleQueryStage 17\n                  :     :                 +- LogicalQueryStage Project [c_customer_sk#481], ShuffleQueryStage 19\n                  :     +- LogicalQueryStage Project [d_date_sk#563], BroadcastQueryStage 21\n                  +- Join LeftSemi, (c_customer_sk#545 = c_customer_sk#481)\n                     :- LogicalQueryStage Project [c_customer_sk#545, c_first_name#553, c_last_name#554], ShuffleQueryStage 23\n                     +- Project [c_customer_sk#481]\n                        +- Filter (isnotnull(ssales#403) AND (cast(ssales#403 as decimal(38,8)) > (0.950000 * scalar-subquery#404 [])))\n                           :  +- Aggregate [max(csales#401) AS tpcds_cmax#402]\n                           :     +- Aggregate [c_customer_sk#89], [sum((cast(ss_quantity#416 as decimal(10,0)) * ss_sales_price#419)) AS csales#401]\n                           :        +- Project [ss_quantity#416, ss_sales_price#419, c_customer_sk#89]\n                           :           +- Join Inner, (ss_customer_sk#409 = c_customer_sk#89)\n                           :              :- Project [ss_customer_sk#409, ss_quantity#416, ss_sales_price#419]\n                           :              :  +- Join Inner, (ss_sold_date_sk#429 = d_date_sk#430)\n                           :              :     :- Project [ss_customer_sk#409, ss_quantity#416, ss_sales_price#419, ss_sold_date_sk#429]\n                           :              :     :  +- Filter ((isnotnull(ss_customer_sk#409) AND isnotnull(ss_sold_date_sk#429)) AND dynamicpruning#610 [ss_sold_date_sk#429])\n                           :              :     :     :  +- Project [d_date_sk#430]\n                           :              :     :     :     +- Filter (d_year#436 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#430))\n                           :              :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#430,d_date_id#431,d_date#432,d_month_seq#433,d_week_seq#434,d_quarter_seq#435,d_year#436,d_dow#437,d_moy#438,d_dom#439,d_qoy#440,d_fy_year#441,d_fy_quarter_seq#442,d_fy_week_seq#443,d_day_name#444,d_quarter_name#445,d_holiday#446,d_weekend#447,d_following_holiday#448,d_first_dom#449,d_last_dom#450,d_same_day_ly#451,d_same_day_lq#452,d_current_day#453,... 4 more fields] parquet\n                           :              :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#407,ss_item_sk#408,ss_customer_sk#409,ss_cdemo_sk#410,ss_hdemo_sk#411,ss_addr_sk#412,ss_store_sk#413,ss_promo_sk#414,ss_ticket_number#415L,ss_quantity#416,ss_wholesale_cost#417,ss_list_price#418,ss_sales_price#419,ss_ext_discount_amt#420,ss_ext_sales_price#421,ss_ext_wholesale_cost#422,ss_ext_list_price#423,ss_ext_tax#424,ss_coupon_amt#425,ss_net_paid#426,ss_net_paid_inc_tax#427,ss_net_profit#428,ss_sold_date_sk#429] parquet\n                           :              :     +- Project [d_date_sk#430]\n                           :              :        +- Filter (d_year#436 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#430))\n                           :              :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#430,d_date_id#431,d_date#432,d_month_seq#433,d_week_seq#434,d_quarter_seq#435,d_year#436,d_dow#437,d_moy#438,d_dom#439,d_qoy#440,d_fy_year#441,d_fy_quarter_seq#442,d_fy_week_seq#443,d_day_name#444,d_quarter_name#445,d_holiday#446,d_weekend#447,d_following_holiday#448,d_first_dom#449,d_last_dom#450,d_same_day_ly#451,d_same_day_lq#452,d_current_day#453,... 4 more fields] parquet\n                           :              +- Project [c_customer_sk#89]\n                           :                 +- Filter isnotnull(c_customer_sk#89)\n                           :                    +- Relation spark_catalog.tpcds_100.customer[c_customer_sk#89,c_customer_id#90,c_current_cdemo_sk#91,c_current_hdemo_sk#92,c_current_addr_sk#93,c_first_shipto_date_sk#94,c_first_sales_date_sk#95,c_salutation#96,c_first_name#97,c_last_name#98,c_preferred_cust_flag#99,c_birth_day#100,c_birth_month#101,c_birth_year#102,c_birth_country#103,c_login#104,c_email_address#105,c_last_review_date#106] parquet\n                           +- Aggregate [c_customer_sk#481], [c_customer_sk#481, sum((cast(ss_quantity#467 as decimal(10,0)) * ss_sales_price#470)) AS ssales#403]\n                              +- Project [ss_quantity#467, ss_sales_price#470, c_customer_sk#481]\n                                 +- Join Inner, (ss_customer_sk#460 = c_customer_sk#481)\n                                    :- LogicalQueryStage Project [ss_customer_sk#460, ss_quantity#467, ss_sales_price#470], ShuffleQueryStage 25\n                                    +- LogicalQueryStage Project [c_customer_sk#481], ShuffleQueryStage 27\n"
      },
      "IM" : {
        "inputSizeInBytes" : 37600324820,
        "inputRowCount" : 1185556530
      },
      "PD" : {
        "2" : [ 17371601, 17313063, 16996707, 17100959, 17033226, 17236981, 17071883, 16947894, 17078453, 17320527, 17392136, 17189957, 17396414, 17311465, 17218617, 17091886, 17296486, 17602538, 17086450, 17206721, 17104075, 17257645, 17447592, 17284068, 17180017, 17251810, 17078510, 17428751, 17190703, 17091180, 16888245, 17130838, 17230626, 16956499, 17240499, 17279493, 17046255, 16925646, 16907666, 17034480, 16940011, 17199974, 16869146, 17295966, 17353222, 16846943, 17325947, 17131813, 17231729, 17311901, 17440035, 17297061, 17072505, 17276021, 17146516, 17169923, 17129259, 16823901, 16978621, 17169124, 17091808, 17480756, 16982840, 17160489, 16978313, 17460598, 17233558, 17090869, 17156297, 17354514, 17312619, 17034009, 16927254, 17287614, 17365219, 17389547, 17480370, 17316975, 17251186, 17264228, 17243624, 17381439, 17433913, 16760532, 17064606, 16931418, 17063808, 17170220, 17151390, 17444256, 17095914, 17182115, 17324912, 17111549, 17203150, 17522946, 16932260, 16948450, 17145841, 16867015, 16765024, 17338612, 17173734, 16986979, 17131384, 17352202, 17241238, 17627527, 16822357, 16867839, 17008290, 17184359, 17395163, 17082612, 17338942, 17121168, 16815534, 16899165, 17149200, 17075267, 17087177, 17178853, 17547989, 17158451, 17252438, 17439694, 17073151, 16986975, 17140740, 16958860, 17422277, 17317255, 17311966, 17191736, 16950873, 17009149, 17326021, 17377512, 17100048, 17282433, 17170675, 16883065, 17109865, 17346265, 17166782, 17218832, 17598899, 17156005, 17190632, 17175152, 17467989, 17158171, 17400931, 17351617, 17331236, 17383323, 17108352, 17275713, 17473037, 16820939, 16928731, 16941370, 17356646, 16899933, 17228069, 17252334, 17147748, 17345681, 17313972, 16910213, 17387811, 17599878, 17309032, 17226960, 17276187, 16945588, 17360401, 16960900, 17134588, 17028930, 17029163, 17234190, 17064091, 17105964, 17637409, 17303023, 17722750, 17370523, 17066032, 17283328, 17271878, 17131573, 17011172, 16816679, 17307952, 17504379, 17083957, 17159149, 17341949, 16921044 ],
        "4" : [ 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 290960, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 290960, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 290960, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 290960, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 290960, 264509, 264509, 290960, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 290960, 264509, 264509, 264509, 290960, 264509, 290960, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 290960, 264509, 290960, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509 ],
        "7" : [ 124106, 128619, 123941, 122838, 118791, 119954, 137626, 122773, 127392, 126979, 124531, 125115, 123304, 128212, 119800, 129439, 131250, 122189, 124531, 131132, 120490, 129964, 124531, 128737, 122720, 122720, 121080, 122136, 127569, 125752, 127569, 128153, 127510, 133184, 122248, 130023, 128094, 129964, 130666, 128678, 119269, 124472, 123941, 121605, 123475, 133243, 125056, 130548, 127569, 124472, 120490, 120437, 127622, 128153, 124531, 124584, 127510, 123304, 118791, 129321, 122189, 126454, 124584, 125699, 131893, 123947, 125699, 124578, 124531, 123947, 129439, 125699, 128094, 120384, 129321, 121021, 127156, 124649, 119853, 124000, 133120, 128153, 123888, 127569, 126401, 124472, 122720, 131250, 131775, 128855, 129380, 122773, 122189, 115340, 131309, 133120, 113317, 122189, 122720, 131191, 129964, 132477, 120437, 123475, 125699, 126342, 125115, 112685, 133120, 125056, 121664, 132418, 130489, 116402, 127569, 126342, 126224, 123357, 122189, 133704, 119375, 134347, 135633, 125115, 129321, 133886, 130023, 123422, 121658, 128737, 128678, 129964, 125699, 125115, 133243, 126985, 127510, 124584, 130607, 122195, 133061, 118260, 127569, 129444, 128737, 125115, 128737, 122779, 122189, 127451, 135049, 115977, 126342, 123363, 125174, 121711, 125817, 136340, 124525, 128801, 122832, 128153, 126808, 125233, 129321, 128153, 133881, 131250, 124472, 126867, 124531, 134347, 117682, 130607, 118839, 123357, 127510, 126401, 133763, 131893, 131309, 129321, 124584, 124059, 124472, 131314, 137562, 119322, 132595, 121021, 122136, 128153, 114809, 133179, 130082, 122720, 131250, 125699, 123947, 120490 ],
        "3" : [ 52331, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 57565, 57565, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 57565, 52331, 52331, 52331, 57565, 57565, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 57565, 57565, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 57565, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 57565, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 57565, 57565, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 57565, 57565, 52331, 57565, 52331, 57565, 52331, 57565, 52331, 52331, 57565, 52331, 57565, 57565, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 57565, 57565, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 57565, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 57565, 57565, 52331, 52331, 52331, 52331 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 15,
        "FinishedTasksNum" : 5,
        "FinishedTasksTotalTimeInMs" : 132149.0,
        "FinishedTasksDistributionInMs" : [ 25727.0, 26185.0, 26335.0, 26878.0, 27024.0 ]
      },
      "StartTimeInMs" : 1702226803709,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 67232,
        "IOBytes" : {
          "Total" : 14522003493,
          "Details" : {
            "IR" : 853684861,
            "IW" : 0,
            "SR" : 11102321120,
            "SW" : 2565997512
          }
        }
      }
    },
    "20" : {
      "LQP" : {
        "operators" : {
          "4" : {
            "sign" : 231958684,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1056,
            "rowCount" : 15,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [c_last_name#508, c_first_name#507], [c_last_name#508, c_first_name#507, sum((cast(cs_quantity#124 as decimal(10,0)) * cs_list_price#126)) AS sales#391], HashAggregate(keys=[c_last_name#508, c_first_name#507], functions=[sum((cast(cs_quantity#124 as decimal(10,0)) * cs_list_price#126))]) "
          },
          "5" : {
            "sign" : 661663567,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 288,
            "rowCount" : 4,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [c_last_name#554, c_first_name#553], [c_last_name#554, c_first_name#553, sum((cast(ws_quantity#158 as decimal(10,0)) * ws_list_price#160)) AS sales#394], HashAggregate(keys=[c_last_name#554, c_first_name#553], functions=[sum((cast(ws_quantity#158 as decimal(10,0)) * ws_list_price#160))]) "
          },
          "1" : {
            "sign" : -750459048,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
            "sizeInBytes" : 1344,
            "rowCount" : 19,
            "isRuntime" : false,
            "predicate" : " (unknown) LocalLimit Arguments: 100 "
          },
          "0" : {
            "sign" : -390325571,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
            "sizeInBytes" : 1216,
            "rowCount" : 19,
            "isRuntime" : false,
            "predicate" : " (unknown) GlobalLimit Arguments: 100 "
          },
          "2" : {
            "sign" : 2055363283,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 1344,
            "rowCount" : 19,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [c_last_name#508 ASC NULLS FIRST, c_first_name#507 ASC NULLS FIRST, sales#391 ASC NULLS FIRST], true "
          },
          "3" : {
            "sign" : 2110138797,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Union",
            "sizeInBytes" : 1344,
            "rowCount" : 19,
            "isRuntime" : false,
            "predicate" : " (unknown) Union Arguments: false, false "
          }
        },
        "links" : [ {
          "fromId" : 4,
          "fromName" : "LogicalQueryStage",
          "toId" : 3,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "LogicalQueryStage",
          "toId" : 3,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Union",
          "toId" : 2,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "LocalLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "LocalLimit",
          "toId" : 0,
          "toName" : "GlobalLimit",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [c_last_name#508 ASC NULLS FIRST, c_first_name#507 ASC NULLS FIRST, sales#391 ASC NULLS FIRST], true\n      +- Union false, false\n         :- LogicalQueryStage Aggregate [c_last_name#508, c_first_name#507], [c_last_name#508, c_first_name#507, sum((cast(cs_quantity#124 as decimal(10,0)) * cs_list_price#126)) AS sales#391], HashAggregate(keys=[c_last_name#508, c_first_name#507], functions=[sum((cast(cs_quantity#124 as decimal(10,0)) * cs_list_price#126))])\n         +- LogicalQueryStage Aggregate [c_last_name#554, c_first_name#553], [c_last_name#554, c_first_name#553, sum((cast(ws_quantity#158 as decimal(10,0)) * ws_list_price#160)) AS sales#394], HashAggregate(keys=[c_last_name#554, c_first_name#553], functions=[sum((cast(ws_quantity#158 as decimal(10,0)) * ws_list_price#160))])\n"
      },
      "IM" : {
        "inputSizeInBytes" : 1344,
        "inputRowCount" : 19
      },
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "StartTimeInMs" : 1702226870631,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 310,
        "IOBytes" : {
          "Total" : 1988,
          "Details" : {
            "IR" : 0,
            "IW" : 0,
            "SR" : 1988,
            "SW" : 0
          }
        }
      }
    },
    "2" : {
      "LQP" : {
        "operators" : {
          "45" : {
            "sign" : 2051540096,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 355962,
            "rowCount" : 1447,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (d_year#436 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#430)) "
          },
          "34" : {
            "sign" : 739645252,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 24000000,
            "rowCount" : 2000000,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [c_customer_sk#481], ShuffleQueryStage 4 "
          },
          "67" : {
            "sign" : -138885899,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 2302899232,
            "rowCount" : 71965601,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (ws_item_sk#143 = item_sk#398) "
          },
          "93" : {
            "sign" : -2121928113,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 6601054824,
            "rowCount" : 275043951,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_quantity#467, ss_sales_price#470, c_customer_sk#481] "
          },
          "12" : {
            "sign" : -938487710,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 4561805056,
            "rowCount" : 142556408,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [cs_bill_customer_sk#109, cs_item_sk#121, cs_quantity#124, cs_list_price#126, cs_sold_date_sk#140], ShuffleQueryStage 0 "
          },
          "66" : {
            "sign" : 507643876,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 2015036828,
            "rowCount" : 71965601,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_bill_customer_sk#144, ws_quantity#158, ws_list_price#160, ws_sold_date_sk#174] "
          },
          "89" : {
            "sign" : 1358266277,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 98000000,
            "rowCount" : 2000000,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [c_customer_sk#545, c_first_name#553, c_last_name#554], ShuffleQueryStage 23 "
          },
          "51" : {
            "sign" : -528156139,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 98000000,
            "rowCount" : 2000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (c_customer_sk#499 = c_customer_sk#481) "
          },
          "84" : {
            "sign" : 914322748,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 7701230628,
            "rowCount" : 275043951,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_customer_sk#460 = c_customer_sk#481) "
          },
          "8" : {
            "sign" : -1297018102,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 141415956736,
            "rowCount" : 4419248648,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cs_sold_date_sk#140 = d_date_sk#517) "
          },
          "73" : {
            "sign" : -2039463812,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 38205303493,
            "rowCount" : 287257921,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_item_sk#17 = i_item_sk#67) "
          },
          "78" : {
            "sign" : 326078787,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1060264,
            "rowCount" : 1461,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#39, d_date#41], BroadcastQueryStage 13 "
          },
          "19" : {
            "sign" : -159970464,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 9644190257592,
            "rowCount" : 401841260733,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#38 = d_date_sk#39) "
          },
          "23" : {
            "sign" : 886815593,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 23152,
            "rowCount" : 1447,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#39, d_date#41] "
          },
          "62" : {
            "sign" : 1958081820,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 4702228440,
            "rowCount" : 72341976,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ws_bill_customer_sk#144 = c_customer_sk#545) "
          },
          "4" : {
            "sign" : 2017485207,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 1648640717,
            "rowCount" : 27026897,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [c_last_name#508, c_first_name#507], [c_last_name#508, c_first_name#507, sum((cast(cs_quantity#124 as decimal(10,0)) * cs_list_price#126)) AS sales#391] "
          },
          "88" : {
            "sign" : 1645687881,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 98000000,
            "rowCount" : 2000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (c_customer_sk#545 = c_customer_sk#481) "
          },
          "77" : {
            "sign" : 604324548,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(ss_sold_date_sk#38) AND isnotnull(ss_item_sk#17)) AND dynamicpruning#611 [ss_sold_date_sk#38]) "
          },
          "40" : {
            "sign" : 305748262,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 8497298720,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#429 = d_date_sk#430) "
          },
          "15" : {
            "sign" : -68659154,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 5745158420,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [_groupingexpression#608, i_item_sk#67, d_date#41], [i_item_sk#67 AS item_sk#398, count(1) AS cnt#400L] "
          },
          "11" : {
            "sign" : 780138192,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 4561805056,
            "rowCount" : 142556408,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (cs_item_sk#121 = item_sk#398) "
          },
          "90" : {
            "sign" : 290084495,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 23812188,
            "rowCount" : 1984349,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_customer_sk#481] "
          },
          "9" : {
            "sign" : 482781764,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 3991579424,
            "rowCount" : 142556408,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (cs_bill_customer_sk#109 = c_customer_sk#481) "
          },
          "44" : {
            "sign" : 1217444409,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 17364,
            "rowCount" : 1447,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#430] "
          },
          "33" : {
            "sign" : -1093618124,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 6601125024,
            "rowCount" : 275046876,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ss_customer_sk#460, ss_quantity#467, ss_sales_price#470], ShuffleQueryStage 3 "
          },
          "22" : {
            "sign" : 437822322,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#16, ss_item_sk#17, ss_customer_sk#18, ss_cdemo_sk#19, ss_hdemo_sk#20, ss_addr_sk#21, ss_store_sk#22, ss_promo_sk#23, ss_ticket_number#24L, ss_quantity#25, ss_wholesale_cost#26, ss_list_price#27, ss_sales_price#28, ss_ext_discount_amt#29, ss_ext_sales_price#30, ss_ext_wholesale_cost#31, ss_ext_list_price#32, ss_ext_tax#33, ss_coupon_amt#34, ss_net_paid#35, ss_net_paid_inc_tax#36, ss_net_profit#37, ss_sold_date_sk#38], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "56" : {
            "sign" : 47435418,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 6601054824,
            "rowCount" : 275043951,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_quantity#467, ss_sales_price#470, c_customer_sk#481] "
          },
          "55" : {
            "sign" : 431587195,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 55561772,
            "rowCount" : 1984349,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [c_customer_sk#481], [c_customer_sk#481, sum((cast(ss_quantity#467 as decimal(10,0)) * ss_sales_price#470)) AS ssales#403] "
          },
          "26" : {
            "sign" : 841802622,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1060264,
            "rowCount" : 1461,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#39, d_date#41], BroadcastQueryStage 1 "
          },
          "50" : {
            "sign" : 1758754844,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1048824,
            "rowCount" : 31,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#517], BroadcastQueryStage 5 "
          },
          "37" : {
            "sign" : -1338930356,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 6601054824,
            "rowCount" : 275043951,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_quantity#416, ss_sales_price#419, c_customer_sk#89] "
          },
          "68" : {
            "sign" : 1832837103,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 2302899232,
            "rowCount" : 71965601,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ws_item_sk#143, ws_bill_customer_sk#144, ws_quantity#158, ws_list_price#160, ws_sold_date_sk#174], ShuffleQueryStage 11 "
          },
          "61" : {
            "sign" : -1312444512,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 4123492632,
            "rowCount" : 72341976,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_quantity#158, ws_list_price#160, c_first_name#553, c_last_name#554] "
          },
          "13" : {
            "sign" : 817617753,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 3447095052,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [item_sk#398] "
          },
          "46" : {
            "sign" : -358797686,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#430, d_date_id#431, d_date#432, d_month_seq#433, d_week_seq#434, d_quarter_seq#435, d_year#436, d_dow#437, d_moy#438, d_dom#439, d_qoy#440, d_fy_year#441, d_fy_quarter_seq#442, d_fy_week_seq#443, d_day_name#444, d_quarter_name#445, d_holiday#446, d_weekend#447, d_following_holiday#448, d_first_dom#449, d_last_dom#450, d_same_day_ly#451, d_same_day_lq#452, d_current_day#453, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "24" : {
            "sign" : 1327533026,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 355962,
            "rowCount" : 1447,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (d_year#45 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#39)) "
          },
          "94" : {
            "sign" : -1025989668,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 7701230628,
            "rowCount" : 275043951,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_customer_sk#460 = c_customer_sk#481) "
          },
          "83" : {
            "sign" : 82168585,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 6601054824,
            "rowCount" : 275043951,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_quantity#467, ss_sales_price#470, c_customer_sk#481] "
          },
          "35" : {
            "sign" : -582481967,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 24,
            "rowCount" : 1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [max(csales#401) AS tpcds_cmax#402] "
          },
          "16" : {
            "sign" : 879560779,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 10341285156,
            "rowCount" : 287257921,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date#41, i_item_sk#67, substr(i_item_desc#71, 1, 30) AS _groupingexpression#608] "
          },
          "79" : {
            "sign" : 388376503,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 25500000,
            "rowCount" : 204000,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_item_sk#67, i_item_desc#71], ShuffleQueryStage 15 "
          },
          "5" : {
            "sign" : 1827829653,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 8150025186,
            "rowCount" : 142982898,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_quantity#124, cs_list_price#126, c_first_name#507, c_last_name#508] "
          },
          "72" : {
            "sign" : 196715271,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 10341285156,
            "rowCount" : 287257921,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date#41, i_item_sk#67, substr(i_item_desc#71, 1, 30) AS _groupingexpression#608] "
          },
          "10" : {
            "sign" : 1096105250,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 3991579424,
            "rowCount" : 142556408,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_bill_customer_sk#109, cs_quantity#124, cs_list_price#126, cs_sold_date_sk#140] "
          },
          "59" : {
            "sign" : 1454164637,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 24000000,
            "rowCount" : 2000000,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [c_customer_sk#481], ShuffleQueryStage 10 "
          },
          "87" : {
            "sign" : -2138347845,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1048824,
            "rowCount" : 31,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#563], BroadcastQueryStage 21 "
          },
          "48" : {
            "sign" : -337975679,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 500000000,
            "rowCount" : 2000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: isnotnull(c_customer_sk#89) "
          },
          "21" : {
            "sign" : 266122093,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(ss_sold_date_sk#38) AND isnotnull(ss_item_sk#17)) AND dynamicpruning#609 [ss_sold_date_sk#38]) "
          },
          "76" : {
            "sign" : -1259936334,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 4400725648,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#17, ss_sold_date_sk#38] "
          },
          "54" : {
            "sign" : 789941336,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 55561772,
            "rowCount" : 1984349,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(ssales#403) AND (cast(ssales#403 as decimal(38,8)) > (0.950000 * scalar-subquery#404 []))) "
          },
          "43" : {
            "sign" : -977156952,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#407, ss_item_sk#408, ss_customer_sk#409, ss_cdemo_sk#410, ss_hdemo_sk#411, ss_addr_sk#412, ss_store_sk#413, ss_promo_sk#414, ss_ticket_number#415L, ss_quantity#416, ss_wholesale_cost#417, ss_list_price#418, ss_sales_price#419, ss_ext_discount_amt#420, ss_ext_sales_price#421, ss_ext_wholesale_cost#422, ss_ext_list_price#423, ss_ext_tax#424, ss_coupon_amt#425, ss_net_paid#426, ss_net_paid_inc_tax#427, ss_net_profit#428, ss_sold_date_sk#429], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "65" : {
            "sign" : 866280558,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 2015036828,
            "rowCount" : 71965601,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (ws_bill_customer_sk#144 = c_customer_sk#481) "
          },
          "71" : {
            "sign" : 897283596,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 5745158420,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [_groupingexpression#608, i_item_sk#67, d_date#41], [i_item_sk#67 AS item_sk#398, count(1) AS cnt#400L] "
          },
          "57" : {
            "sign" : -1437901541,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 7701230628,
            "rowCount" : 275043951,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_customer_sk#460 = c_customer_sk#481) "
          },
          "32" : {
            "sign" : 1908847787,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 7701230628,
            "rowCount" : 275043951,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_customer_sk#460 = c_customer_sk#481) "
          },
          "80" : {
            "sign" : 998370159,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 23812188,
            "rowCount" : 1984349,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_customer_sk#481] "
          },
          "82" : {
            "sign" : -1381279908,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 55561772,
            "rowCount" : 1984349,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [c_customer_sk#481], [c_customer_sk#481, sum((cast(ss_quantity#467 as decimal(10,0)) * ss_sales_price#470)) AS ssales#403] "
          },
          "49" : {
            "sign" : -576393737,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 500000000,
            "rowCount" : 2000000,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [c_customer_sk#89, c_customer_id#90, c_current_cdemo_sk#91, c_current_hdemo_sk#92, c_current_addr_sk#93, c_first_shipto_date_sk#94, c_first_sales_date_sk#95, c_salutation#96, c_first_name#97, c_last_name#98, c_preferred_cust_flag#99, c_birth_day#100, c_birth_month#101, c_birth_year#102, c_birth_country#103, c_login#104, c_email_address#105, c_last_review_date#106], `spark_catalog`.`tpcds_100`.`customer`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "6" : {
            "sign" : -1518833182,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 9293888370,
            "rowCount" : 142982898,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cs_bill_customer_sk#109 = c_customer_sk#499) "
          },
          "36" : {
            "sign" : -660295919,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 47624376,
            "rowCount" : 1984349,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [c_customer_sk#89], [sum((cast(ss_quantity#416 as decimal(10,0)) * ss_sales_price#419)) AS csales#401] "
          },
          "1" : {
            "sign" : -901250128,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
            "sizeInBytes" : 3297281434,
            "rowCount" : 54053794,
            "isRuntime" : false,
            "predicate" : " (unknown) LocalLimit Arguments: 100 "
          },
          "39" : {
            "sign" : 1802383537,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 6372974040,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_customer_sk#409, ss_quantity#416, ss_sales_price#419] "
          },
          "17" : {
            "sign" : -2071756450,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 38205303493,
            "rowCount" : 287257921,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_item_sk#17 = i_item_sk#67) "
          },
          "25" : {
            "sign" : 1227723257,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#39, d_date_id#40, d_date#41, d_month_seq#42, d_week_seq#43, d_quarter_seq#44, d_year#45, d_dow#46, d_moy#47, d_dom#48, d_qoy#49, d_fy_year#50, d_fy_quarter_seq#51, d_fy_week_seq#52, d_day_name#53, d_quarter_name#54, d_holiday#55, d_weekend#56, d_following_holiday#57, d_first_dom#58, d_last_dom#59, d_same_day_ly#60, d_same_day_lq#61, d_current_day#62, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "60" : {
            "sign" : -911110536,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 1648640717,
            "rowCount" : 27026897,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [c_last_name#554, c_first_name#553], [c_last_name#554, c_first_name#553, sum((cast(ws_quantity#158 as decimal(10,0)) * ws_list_price#160)) AS sales#394] "
          },
          "14" : {
            "sign" : 1683281627,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 5745158420,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (cnt#400L > 4) "
          },
          "47" : {
            "sign" : 1085635783,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 24000000,
            "rowCount" : 2000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_customer_sk#89] "
          },
          "31" : {
            "sign" : 1623804386,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 6601054824,
            "rowCount" : 275043951,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_quantity#467, ss_sales_price#470, c_customer_sk#481] "
          },
          "96" : {
            "sign" : 1454165815,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 24000000,
            "rowCount" : 2000000,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [c_customer_sk#481], ShuffleQueryStage 27 "
          },
          "69" : {
            "sign" : 159022391,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 3447095052,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [item_sk#398] "
          },
          "95" : {
            "sign" : 457576906,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 6601125024,
            "rowCount" : 275046876,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ss_customer_sk#460, ss_quantity#467, ss_sales_price#470], ShuffleQueryStage 25 "
          },
          "58" : {
            "sign" : -1093617969,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 6601125024,
            "rowCount" : 275046876,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ss_customer_sk#460, ss_quantity#467, ss_sales_price#470], ShuffleQueryStage 8 "
          },
          "64" : {
            "sign" : -1083265635,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 71389876192,
            "rowCount" : 2230933631,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ws_sold_date_sk#174 = d_date_sk#563) "
          },
          "53" : {
            "sign" : -350419576,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 23812188,
            "rowCount" : 1984349,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_customer_sk#481] "
          },
          "42" : {
            "sign" : 1565358831,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 39925696056,
            "rowCount" : 262669053,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(ss_customer_sk#409) AND isnotnull(ss_sold_date_sk#429)) AND dynamicpruning#610 [ss_sold_date_sk#429]) "
          },
          "75" : {
            "sign" : 99682922,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 9644190257592,
            "rowCount" : 401841260733,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#38 = d_date_sk#39) "
          },
          "0" : {
            "sign" : -937331107,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
            "sizeInBytes" : 6400,
            "rowCount" : 100,
            "isRuntime" : false,
            "predicate" : " (unknown) GlobalLimit Arguments: 100 "
          },
          "20" : {
            "sign" : 1570087131,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 4400725648,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#17, ss_sold_date_sk#38] "
          },
          "27" : {
            "sign" : 1120906919,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 25500000,
            "rowCount" : 204000,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_item_sk#67, i_item_desc#71], ShuffleQueryStage 2 "
          },
          "70" : {
            "sign" : -2071416361,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 5745158420,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (cnt#400L > 4) "
          },
          "2" : {
            "sign" : 746313331,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 3297281434,
            "rowCount" : 54053794,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [c_last_name#508 ASC NULLS FIRST, c_first_name#507 ASC NULLS FIRST, sales#391 ASC NULLS FIRST], true "
          },
          "86" : {
            "sign" : 1454164916,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 24000000,
            "rowCount" : 2000000,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [c_customer_sk#481], ShuffleQueryStage 19 "
          },
          "38" : {
            "sign" : -949612920,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 7701230628,
            "rowCount" : 275043951,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_customer_sk#409 = c_customer_sk#89) "
          },
          "81" : {
            "sign" : -1882899317,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 55561772,
            "rowCount" : 1984349,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(ssales#403) AND (cast(ssales#403 as decimal(38,8)) > (0.950000 * scalar-subquery#404 []))) "
          },
          "92" : {
            "sign" : 2102197308,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 55561772,
            "rowCount" : 1984349,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [c_customer_sk#481], [c_customer_sk#481, sum((cast(ss_quantity#467 as decimal(10,0)) * ss_sales_price#470)) AS ssales#403] "
          },
          "18" : {
            "sign" : 1847081952,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 6429460171728,
            "rowCount" : 401841260733,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#17, d_date#41] "
          },
          "30" : {
            "sign" : 1934210699,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 55561772,
            "rowCount" : 1984349,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [c_customer_sk#481], [c_customer_sk#481, sum((cast(ss_quantity#467 as decimal(10,0)) * ss_sales_price#470)) AS ssales#403] "
          },
          "7" : {
            "sign" : 380502913,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 106061967552,
            "rowCount" : 4419248648,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_bill_customer_sk#109, cs_quantity#124, cs_list_price#126] "
          },
          "29" : {
            "sign" : -1901984732,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 55561772,
            "rowCount" : 1984349,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(ssales#403) AND (cast(ssales#403 as decimal(38,8)) > (0.950000 * scalar-subquery#404 []))) "
          },
          "41" : {
            "sign" : -861776479,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 7354733484,
            "rowCount" : 262669053,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_customer_sk#409, ss_quantity#416, ss_sales_price#419, ss_sold_date_sk#429] "
          },
          "63" : {
            "sign" : 1308513426,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 53542407144,
            "rowCount" : 2230933631,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_bill_customer_sk#144, ws_quantity#158, ws_list_price#160] "
          },
          "3" : {
            "sign" : 2013334725,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Union",
            "sizeInBytes" : 3297281434,
            "rowCount" : 54053794,
            "isRuntime" : false,
            "predicate" : " (unknown) Union Arguments: false, false "
          },
          "74" : {
            "sign" : 944985400,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 6429460171728,
            "rowCount" : 401841260733,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#17, d_date#41] "
          },
          "91" : {
            "sign" : -639744623,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 55561772,
            "rowCount" : 1984349,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(ssales#403) AND (cast(ssales#403 as decimal(38,8)) > (0.950000 * scalar-subquery#404 []))) "
          },
          "52" : {
            "sign" : 435063190,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 98000000,
            "rowCount" : 2000000,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [c_customer_sk#499, c_first_name#507, c_last_name#508], ShuffleQueryStage 6 "
          },
          "85" : {
            "sign" : 457576007,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 6601125024,
            "rowCount" : 275046876,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ss_customer_sk#460, ss_quantity#467, ss_sales_price#470], ShuffleQueryStage 17 "
          },
          "28" : {
            "sign" : 2123397918,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 23812188,
            "rowCount" : 1984349,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_customer_sk#481] "
          }
        },
        "links" : [ {
          "fromId" : 12,
          "fromName" : "LogicalQueryStage",
          "toId" : 11,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 22,
          "fromName" : "LogicalRelation",
          "toId" : 21,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 25,
          "fromName" : "LogicalRelation",
          "toId" : 24,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 24,
          "fromName" : "Filter",
          "toId" : 23,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 23,
          "fromName" : "Project",
          "toId" : 21,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 21,
          "fromName" : "Filter",
          "toId" : 20,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 20,
          "fromName" : "Project",
          "toId" : 19,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 26,
          "fromName" : "LogicalQueryStage",
          "toId" : 19,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 19,
          "fromName" : "Join",
          "toId" : 18,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 18,
          "fromName" : "Project",
          "toId" : 17,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 27,
          "fromName" : "LogicalQueryStage",
          "toId" : 17,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 17,
          "fromName" : "Join",
          "toId" : 16,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 16,
          "fromName" : "Project",
          "toId" : 15,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 15,
          "fromName" : "Aggregate",
          "toId" : 14,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 14,
          "fromName" : "Filter",
          "toId" : 13,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 13,
          "fromName" : "Project",
          "toId" : 11,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "Join",
          "toId" : 10,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "Project",
          "toId" : 9,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 33,
          "fromName" : "LogicalQueryStage",
          "toId" : 32,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 34,
          "fromName" : "LogicalQueryStage",
          "toId" : 32,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 32,
          "fromName" : "Join",
          "toId" : 31,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 31,
          "fromName" : "Project",
          "toId" : 30,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 30,
          "fromName" : "Aggregate",
          "toId" : 29,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 43,
          "fromName" : "LogicalRelation",
          "toId" : 42,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 46,
          "fromName" : "LogicalRelation",
          "toId" : 45,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 45,
          "fromName" : "Filter",
          "toId" : 44,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 44,
          "fromName" : "Project",
          "toId" : 42,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 42,
          "fromName" : "Filter",
          "toId" : 41,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 41,
          "fromName" : "Project",
          "toId" : 40,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 44,
          "fromName" : "Project",
          "toId" : 40,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 40,
          "fromName" : "Join",
          "toId" : 39,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 39,
          "fromName" : "Project",
          "toId" : 38,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 49,
          "fromName" : "LogicalRelation",
          "toId" : 48,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 48,
          "fromName" : "Filter",
          "toId" : 47,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 47,
          "fromName" : "Project",
          "toId" : 38,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 38,
          "fromName" : "Join",
          "toId" : 37,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 37,
          "fromName" : "Project",
          "toId" : 36,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 36,
          "fromName" : "Aggregate",
          "toId" : 35,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 35,
          "fromName" : "Aggregate",
          "toId" : 29,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 29,
          "fromName" : "Filter",
          "toId" : 28,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 28,
          "fromName" : "Project",
          "toId" : 9,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "Join",
          "toId" : 8,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 50,
          "fromName" : "LogicalQueryStage",
          "toId" : 8,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "Join",
          "toId" : 7,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Project",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 52,
          "fromName" : "LogicalQueryStage",
          "toId" : 51,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 58,
          "fromName" : "LogicalQueryStage",
          "toId" : 57,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 59,
          "fromName" : "LogicalQueryStage",
          "toId" : 57,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 57,
          "fromName" : "Join",
          "toId" : 56,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 56,
          "fromName" : "Project",
          "toId" : 55,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 55,
          "fromName" : "Aggregate",
          "toId" : 54,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 35,
          "fromName" : "Aggregate",
          "toId" : 54,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 54,
          "fromName" : "Filter",
          "toId" : 53,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 53,
          "fromName" : "Project",
          "toId" : 51,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 51,
          "fromName" : "Join",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Join",
          "toId" : 5,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Project",
          "toId" : 4,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Aggregate",
          "toId" : 3,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 68,
          "fromName" : "LogicalQueryStage",
          "toId" : 67,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 22,
          "fromName" : "LogicalRelation",
          "toId" : 77,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 23,
          "fromName" : "Project",
          "toId" : 77,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 77,
          "fromName" : "Filter",
          "toId" : 76,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 76,
          "fromName" : "Project",
          "toId" : 75,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 78,
          "fromName" : "LogicalQueryStage",
          "toId" : 75,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 75,
          "fromName" : "Join",
          "toId" : 74,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 74,
          "fromName" : "Project",
          "toId" : 73,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 79,
          "fromName" : "LogicalQueryStage",
          "toId" : 73,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 73,
          "fromName" : "Join",
          "toId" : 72,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 72,
          "fromName" : "Project",
          "toId" : 71,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 71,
          "fromName" : "Aggregate",
          "toId" : 70,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 70,
          "fromName" : "Filter",
          "toId" : 69,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 69,
          "fromName" : "Project",
          "toId" : 67,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 67,
          "fromName" : "Join",
          "toId" : 66,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 66,
          "fromName" : "Project",
          "toId" : 65,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 85,
          "fromName" : "LogicalQueryStage",
          "toId" : 84,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 86,
          "fromName" : "LogicalQueryStage",
          "toId" : 84,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 84,
          "fromName" : "Join",
          "toId" : 83,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 83,
          "fromName" : "Project",
          "toId" : 82,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 82,
          "fromName" : "Aggregate",
          "toId" : 81,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 35,
          "fromName" : "Aggregate",
          "toId" : 81,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 81,
          "fromName" : "Filter",
          "toId" : 80,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 80,
          "fromName" : "Project",
          "toId" : 65,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 65,
          "fromName" : "Join",
          "toId" : 64,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 87,
          "fromName" : "LogicalQueryStage",
          "toId" : 64,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 64,
          "fromName" : "Join",
          "toId" : 63,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 63,
          "fromName" : "Project",
          "toId" : 62,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 89,
          "fromName" : "LogicalQueryStage",
          "toId" : 88,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 95,
          "fromName" : "LogicalQueryStage",
          "toId" : 94,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 96,
          "fromName" : "LogicalQueryStage",
          "toId" : 94,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 94,
          "fromName" : "Join",
          "toId" : 93,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 93,
          "fromName" : "Project",
          "toId" : 92,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 92,
          "fromName" : "Aggregate",
          "toId" : 91,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 35,
          "fromName" : "Aggregate",
          "toId" : 91,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 91,
          "fromName" : "Filter",
          "toId" : 90,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 90,
          "fromName" : "Project",
          "toId" : 88,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 88,
          "fromName" : "Join",
          "toId" : 62,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 62,
          "fromName" : "Join",
          "toId" : 61,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 61,
          "fromName" : "Project",
          "toId" : 60,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 60,
          "fromName" : "Aggregate",
          "toId" : 3,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Union",
          "toId" : 2,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "LocalLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "LocalLimit",
          "toId" : 0,
          "toName" : "GlobalLimit",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [c_last_name#508 ASC NULLS FIRST, c_first_name#507 ASC NULLS FIRST, sales#391 ASC NULLS FIRST], true\n      +- Union false, false\n         :- Aggregate [c_last_name#508, c_first_name#507], [c_last_name#508, c_first_name#507, sum((cast(cs_quantity#124 as decimal(10,0)) * cs_list_price#126)) AS sales#391]\n         :  +- Project [cs_quantity#124, cs_list_price#126, c_first_name#507, c_last_name#508]\n         :     +- Join Inner, (cs_bill_customer_sk#109 = c_customer_sk#499)\n         :        :- Project [cs_bill_customer_sk#109, cs_quantity#124, cs_list_price#126]\n         :        :  +- Join Inner, (cs_sold_date_sk#140 = d_date_sk#517)\n         :        :     :- Join LeftSemi, (cs_bill_customer_sk#109 = c_customer_sk#481)\n         :        :     :  :- Project [cs_bill_customer_sk#109, cs_quantity#124, cs_list_price#126, cs_sold_date_sk#140]\n         :        :     :  :  +- Join LeftSemi, (cs_item_sk#121 = item_sk#398)\n         :        :     :  :     :- LogicalQueryStage Project [cs_bill_customer_sk#109, cs_item_sk#121, cs_quantity#124, cs_list_price#126, cs_sold_date_sk#140], ShuffleQueryStage 0\n         :        :     :  :     +- Project [item_sk#398]\n         :        :     :  :        +- Filter (cnt#400L > 4)\n         :        :     :  :           +- Aggregate [_groupingexpression#608, i_item_sk#67, d_date#41], [i_item_sk#67 AS item_sk#398, count(1) AS cnt#400L]\n         :        :     :  :              +- Project [d_date#41, i_item_sk#67, substr(i_item_desc#71, 1, 30) AS _groupingexpression#608]\n         :        :     :  :                 +- Join Inner, (ss_item_sk#17 = i_item_sk#67)\n         :        :     :  :                    :- Project [ss_item_sk#17, d_date#41]\n         :        :     :  :                    :  +- Join Inner, (ss_sold_date_sk#38 = d_date_sk#39)\n         :        :     :  :                    :     :- Project [ss_item_sk#17, ss_sold_date_sk#38]\n         :        :     :  :                    :     :  +- Filter ((isnotnull(ss_sold_date_sk#38) AND isnotnull(ss_item_sk#17)) AND dynamicpruning#609 [ss_sold_date_sk#38])\n         :        :     :  :                    :     :     :  +- Project [d_date_sk#39, d_date#41]\n         :        :     :  :                    :     :     :     +- Filter (d_year#45 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#39))\n         :        :     :  :                    :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#39,d_date_id#40,d_date#41,d_month_seq#42,d_week_seq#43,d_quarter_seq#44,d_year#45,d_dow#46,d_moy#47,d_dom#48,d_qoy#49,d_fy_year#50,d_fy_quarter_seq#51,d_fy_week_seq#52,d_day_name#53,d_quarter_name#54,d_holiday#55,d_weekend#56,d_following_holiday#57,d_first_dom#58,d_last_dom#59,d_same_day_ly#60,d_same_day_lq#61,d_current_day#62,... 4 more fields] parquet\n         :        :     :  :                    :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#16,ss_item_sk#17,ss_customer_sk#18,ss_cdemo_sk#19,ss_hdemo_sk#20,ss_addr_sk#21,ss_store_sk#22,ss_promo_sk#23,ss_ticket_number#24L,ss_quantity#25,ss_wholesale_cost#26,ss_list_price#27,ss_sales_price#28,ss_ext_discount_amt#29,ss_ext_sales_price#30,ss_ext_wholesale_cost#31,ss_ext_list_price#32,ss_ext_tax#33,ss_coupon_amt#34,ss_net_paid#35,ss_net_paid_inc_tax#36,ss_net_profit#37,ss_sold_date_sk#38] parquet\n         :        :     :  :                    :     +- LogicalQueryStage Project [d_date_sk#39, d_date#41], BroadcastQueryStage 1\n         :        :     :  :                    +- LogicalQueryStage Project [i_item_sk#67, i_item_desc#71], ShuffleQueryStage 2\n         :        :     :  +- Project [c_customer_sk#481]\n         :        :     :     +- Filter (isnotnull(ssales#403) AND (cast(ssales#403 as decimal(38,8)) > (0.950000 * scalar-subquery#404 [])))\n         :        :     :        :  +- Aggregate [max(csales#401) AS tpcds_cmax#402]\n         :        :     :        :     +- Aggregate [c_customer_sk#89], [sum((cast(ss_quantity#416 as decimal(10,0)) * ss_sales_price#419)) AS csales#401]\n         :        :     :        :        +- Project [ss_quantity#416, ss_sales_price#419, c_customer_sk#89]\n         :        :     :        :           +- Join Inner, (ss_customer_sk#409 = c_customer_sk#89)\n         :        :     :        :              :- Project [ss_customer_sk#409, ss_quantity#416, ss_sales_price#419]\n         :        :     :        :              :  +- Join Inner, (ss_sold_date_sk#429 = d_date_sk#430)\n         :        :     :        :              :     :- Project [ss_customer_sk#409, ss_quantity#416, ss_sales_price#419, ss_sold_date_sk#429]\n         :        :     :        :              :     :  +- Filter ((isnotnull(ss_customer_sk#409) AND isnotnull(ss_sold_date_sk#429)) AND dynamicpruning#610 [ss_sold_date_sk#429])\n         :        :     :        :              :     :     :  +- Project [d_date_sk#430]\n         :        :     :        :              :     :     :     +- Filter (d_year#436 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#430))\n         :        :     :        :              :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#430,d_date_id#431,d_date#432,d_month_seq#433,d_week_seq#434,d_quarter_seq#435,d_year#436,d_dow#437,d_moy#438,d_dom#439,d_qoy#440,d_fy_year#441,d_fy_quarter_seq#442,d_fy_week_seq#443,d_day_name#444,d_quarter_name#445,d_holiday#446,d_weekend#447,d_following_holiday#448,d_first_dom#449,d_last_dom#450,d_same_day_ly#451,d_same_day_lq#452,d_current_day#453,... 4 more fields] parquet\n         :        :     :        :              :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#407,ss_item_sk#408,ss_customer_sk#409,ss_cdemo_sk#410,ss_hdemo_sk#411,ss_addr_sk#412,ss_store_sk#413,ss_promo_sk#414,ss_ticket_number#415L,ss_quantity#416,ss_wholesale_cost#417,ss_list_price#418,ss_sales_price#419,ss_ext_discount_amt#420,ss_ext_sales_price#421,ss_ext_wholesale_cost#422,ss_ext_list_price#423,ss_ext_tax#424,ss_coupon_amt#425,ss_net_paid#426,ss_net_paid_inc_tax#427,ss_net_profit#428,ss_sold_date_sk#429] parquet\n         :        :     :        :              :     +- Project [d_date_sk#430]\n         :        :     :        :              :        +- Filter (d_year#436 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#430))\n         :        :     :        :              :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#430,d_date_id#431,d_date#432,d_month_seq#433,d_week_seq#434,d_quarter_seq#435,d_year#436,d_dow#437,d_moy#438,d_dom#439,d_qoy#440,d_fy_year#441,d_fy_quarter_seq#442,d_fy_week_seq#443,d_day_name#444,d_quarter_name#445,d_holiday#446,d_weekend#447,d_following_holiday#448,d_first_dom#449,d_last_dom#450,d_same_day_ly#451,d_same_day_lq#452,d_current_day#453,... 4 more fields] parquet\n         :        :     :        :              +- Project [c_customer_sk#89]\n         :        :     :        :                 +- Filter isnotnull(c_customer_sk#89)\n         :        :     :        :                    +- Relation spark_catalog.tpcds_100.customer[c_customer_sk#89,c_customer_id#90,c_current_cdemo_sk#91,c_current_hdemo_sk#92,c_current_addr_sk#93,c_first_shipto_date_sk#94,c_first_sales_date_sk#95,c_salutation#96,c_first_name#97,c_last_name#98,c_preferred_cust_flag#99,c_birth_day#100,c_birth_month#101,c_birth_year#102,c_birth_country#103,c_login#104,c_email_address#105,c_last_review_date#106] parquet\n         :        :     :        +- Aggregate [c_customer_sk#481], [c_customer_sk#481, sum((cast(ss_quantity#467 as decimal(10,0)) * ss_sales_price#470)) AS ssales#403]\n         :        :     :           +- Project [ss_quantity#467, ss_sales_price#470, c_customer_sk#481]\n         :        :     :              +- Join Inner, (ss_customer_sk#460 = c_customer_sk#481)\n         :        :     :                 :- LogicalQueryStage Project [ss_customer_sk#460, ss_quantity#467, ss_sales_price#470], ShuffleQueryStage 3\n         :        :     :                 +- LogicalQueryStage Project [c_customer_sk#481], ShuffleQueryStage 4\n         :        :     +- LogicalQueryStage Project [d_date_sk#517], BroadcastQueryStage 5\n         :        +- Join LeftSemi, (c_customer_sk#499 = c_customer_sk#481)\n         :           :- LogicalQueryStage Project [c_customer_sk#499, c_first_name#507, c_last_name#508], ShuffleQueryStage 6\n         :           +- Project [c_customer_sk#481]\n         :              +- Filter (isnotnull(ssales#403) AND (cast(ssales#403 as decimal(38,8)) > (0.950000 * scalar-subquery#404 [])))\n         :                 :  +- Aggregate [max(csales#401) AS tpcds_cmax#402]\n         :                 :     +- Aggregate [c_customer_sk#89], [sum((cast(ss_quantity#416 as decimal(10,0)) * ss_sales_price#419)) AS csales#401]\n         :                 :        +- Project [ss_quantity#416, ss_sales_price#419, c_customer_sk#89]\n         :                 :           +- Join Inner, (ss_customer_sk#409 = c_customer_sk#89)\n         :                 :              :- Project [ss_customer_sk#409, ss_quantity#416, ss_sales_price#419]\n         :                 :              :  +- Join Inner, (ss_sold_date_sk#429 = d_date_sk#430)\n         :                 :              :     :- Project [ss_customer_sk#409, ss_quantity#416, ss_sales_price#419, ss_sold_date_sk#429]\n         :                 :              :     :  +- Filter ((isnotnull(ss_customer_sk#409) AND isnotnull(ss_sold_date_sk#429)) AND dynamicpruning#610 [ss_sold_date_sk#429])\n         :                 :              :     :     :  +- Project [d_date_sk#430]\n         :                 :              :     :     :     +- Filter (d_year#436 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#430))\n         :                 :              :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#430,d_date_id#431,d_date#432,d_month_seq#433,d_week_seq#434,d_quarter_seq#435,d_year#436,d_dow#437,d_moy#438,d_dom#439,d_qoy#440,d_fy_year#441,d_fy_quarter_seq#442,d_fy_week_seq#443,d_day_name#444,d_quarter_name#445,d_holiday#446,d_weekend#447,d_following_holiday#448,d_first_dom#449,d_last_dom#450,d_same_day_ly#451,d_same_day_lq#452,d_current_day#453,... 4 more fields] parquet\n         :                 :              :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#407,ss_item_sk#408,ss_customer_sk#409,ss_cdemo_sk#410,ss_hdemo_sk#411,ss_addr_sk#412,ss_store_sk#413,ss_promo_sk#414,ss_ticket_number#415L,ss_quantity#416,ss_wholesale_cost#417,ss_list_price#418,ss_sales_price#419,ss_ext_discount_amt#420,ss_ext_sales_price#421,ss_ext_wholesale_cost#422,ss_ext_list_price#423,ss_ext_tax#424,ss_coupon_amt#425,ss_net_paid#426,ss_net_paid_inc_tax#427,ss_net_profit#428,ss_sold_date_sk#429] parquet\n         :                 :              :     +- Project [d_date_sk#430]\n         :                 :              :        +- Filter (d_year#436 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#430))\n         :                 :              :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#430,d_date_id#431,d_date#432,d_month_seq#433,d_week_seq#434,d_quarter_seq#435,d_year#436,d_dow#437,d_moy#438,d_dom#439,d_qoy#440,d_fy_year#441,d_fy_quarter_seq#442,d_fy_week_seq#443,d_day_name#444,d_quarter_name#445,d_holiday#446,d_weekend#447,d_following_holiday#448,d_first_dom#449,d_last_dom#450,d_same_day_ly#451,d_same_day_lq#452,d_current_day#453,... 4 more fields] parquet\n         :                 :              +- Project [c_customer_sk#89]\n         :                 :                 +- Filter isnotnull(c_customer_sk#89)\n         :                 :                    +- Relation spark_catalog.tpcds_100.customer[c_customer_sk#89,c_customer_id#90,c_current_cdemo_sk#91,c_current_hdemo_sk#92,c_current_addr_sk#93,c_first_shipto_date_sk#94,c_first_sales_date_sk#95,c_salutation#96,c_first_name#97,c_last_name#98,c_preferred_cust_flag#99,c_birth_day#100,c_birth_month#101,c_birth_year#102,c_birth_country#103,c_login#104,c_email_address#105,c_last_review_date#106] parquet\n         :                 +- Aggregate [c_customer_sk#481], [c_customer_sk#481, sum((cast(ss_quantity#467 as decimal(10,0)) * ss_sales_price#470)) AS ssales#403]\n         :                    +- Project [ss_quantity#467, ss_sales_price#470, c_customer_sk#481]\n         :                       +- Join Inner, (ss_customer_sk#460 = c_customer_sk#481)\n         :                          :- LogicalQueryStage Project [ss_customer_sk#460, ss_quantity#467, ss_sales_price#470], ShuffleQueryStage 8\n         :                          +- LogicalQueryStage Project [c_customer_sk#481], ShuffleQueryStage 10\n         +- Aggregate [c_last_name#554, c_first_name#553], [c_last_name#554, c_first_name#553, sum((cast(ws_quantity#158 as decimal(10,0)) * ws_list_price#160)) AS sales#394]\n            +- Project [ws_quantity#158, ws_list_price#160, c_first_name#553, c_last_name#554]\n               +- Join Inner, (ws_bill_customer_sk#144 = c_customer_sk#545)\n                  :- Project [ws_bill_customer_sk#144, ws_quantity#158, ws_list_price#160]\n                  :  +- Join Inner, (ws_sold_date_sk#174 = d_date_sk#563)\n                  :     :- Join LeftSemi, (ws_bill_customer_sk#144 = c_customer_sk#481)\n                  :     :  :- Project [ws_bill_customer_sk#144, ws_quantity#158, ws_list_price#160, ws_sold_date_sk#174]\n                  :     :  :  +- Join LeftSemi, (ws_item_sk#143 = item_sk#398)\n                  :     :  :     :- LogicalQueryStage Project [ws_item_sk#143, ws_bill_customer_sk#144, ws_quantity#158, ws_list_price#160, ws_sold_date_sk#174], ShuffleQueryStage 11\n                  :     :  :     +- Project [item_sk#398]\n                  :     :  :        +- Filter (cnt#400L > 4)\n                  :     :  :           +- Aggregate [_groupingexpression#608, i_item_sk#67, d_date#41], [i_item_sk#67 AS item_sk#398, count(1) AS cnt#400L]\n                  :     :  :              +- Project [d_date#41, i_item_sk#67, substr(i_item_desc#71, 1, 30) AS _groupingexpression#608]\n                  :     :  :                 +- Join Inner, (ss_item_sk#17 = i_item_sk#67)\n                  :     :  :                    :- Project [ss_item_sk#17, d_date#41]\n                  :     :  :                    :  +- Join Inner, (ss_sold_date_sk#38 = d_date_sk#39)\n                  :     :  :                    :     :- Project [ss_item_sk#17, ss_sold_date_sk#38]\n                  :     :  :                    :     :  +- Filter ((isnotnull(ss_sold_date_sk#38) AND isnotnull(ss_item_sk#17)) AND dynamicpruning#611 [ss_sold_date_sk#38])\n                  :     :  :                    :     :     :  +- Project [d_date_sk#39, d_date#41]\n                  :     :  :                    :     :     :     +- Filter (d_year#45 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#39))\n                  :     :  :                    :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#39,d_date_id#40,d_date#41,d_month_seq#42,d_week_seq#43,d_quarter_seq#44,d_year#45,d_dow#46,d_moy#47,d_dom#48,d_qoy#49,d_fy_year#50,d_fy_quarter_seq#51,d_fy_week_seq#52,d_day_name#53,d_quarter_name#54,d_holiday#55,d_weekend#56,d_following_holiday#57,d_first_dom#58,d_last_dom#59,d_same_day_ly#60,d_same_day_lq#61,d_current_day#62,... 4 more fields] parquet\n                  :     :  :                    :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#16,ss_item_sk#17,ss_customer_sk#18,ss_cdemo_sk#19,ss_hdemo_sk#20,ss_addr_sk#21,ss_store_sk#22,ss_promo_sk#23,ss_ticket_number#24L,ss_quantity#25,ss_wholesale_cost#26,ss_list_price#27,ss_sales_price#28,ss_ext_discount_amt#29,ss_ext_sales_price#30,ss_ext_wholesale_cost#31,ss_ext_list_price#32,ss_ext_tax#33,ss_coupon_amt#34,ss_net_paid#35,ss_net_paid_inc_tax#36,ss_net_profit#37,ss_sold_date_sk#38] parquet\n                  :     :  :                    :     +- LogicalQueryStage Project [d_date_sk#39, d_date#41], BroadcastQueryStage 13\n                  :     :  :                    +- LogicalQueryStage Project [i_item_sk#67, i_item_desc#71], ShuffleQueryStage 15\n                  :     :  +- Project [c_customer_sk#481]\n                  :     :     +- Filter (isnotnull(ssales#403) AND (cast(ssales#403 as decimal(38,8)) > (0.950000 * scalar-subquery#404 [])))\n                  :     :        :  +- Aggregate [max(csales#401) AS tpcds_cmax#402]\n                  :     :        :     +- Aggregate [c_customer_sk#89], [sum((cast(ss_quantity#416 as decimal(10,0)) * ss_sales_price#419)) AS csales#401]\n                  :     :        :        +- Project [ss_quantity#416, ss_sales_price#419, c_customer_sk#89]\n                  :     :        :           +- Join Inner, (ss_customer_sk#409 = c_customer_sk#89)\n                  :     :        :              :- Project [ss_customer_sk#409, ss_quantity#416, ss_sales_price#419]\n                  :     :        :              :  +- Join Inner, (ss_sold_date_sk#429 = d_date_sk#430)\n                  :     :        :              :     :- Project [ss_customer_sk#409, ss_quantity#416, ss_sales_price#419, ss_sold_date_sk#429]\n                  :     :        :              :     :  +- Filter ((isnotnull(ss_customer_sk#409) AND isnotnull(ss_sold_date_sk#429)) AND dynamicpruning#610 [ss_sold_date_sk#429])\n                  :     :        :              :     :     :  +- Project [d_date_sk#430]\n                  :     :        :              :     :     :     +- Filter (d_year#436 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#430))\n                  :     :        :              :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#430,d_date_id#431,d_date#432,d_month_seq#433,d_week_seq#434,d_quarter_seq#435,d_year#436,d_dow#437,d_moy#438,d_dom#439,d_qoy#440,d_fy_year#441,d_fy_quarter_seq#442,d_fy_week_seq#443,d_day_name#444,d_quarter_name#445,d_holiday#446,d_weekend#447,d_following_holiday#448,d_first_dom#449,d_last_dom#450,d_same_day_ly#451,d_same_day_lq#452,d_current_day#453,... 4 more fields] parquet\n                  :     :        :              :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#407,ss_item_sk#408,ss_customer_sk#409,ss_cdemo_sk#410,ss_hdemo_sk#411,ss_addr_sk#412,ss_store_sk#413,ss_promo_sk#414,ss_ticket_number#415L,ss_quantity#416,ss_wholesale_cost#417,ss_list_price#418,ss_sales_price#419,ss_ext_discount_amt#420,ss_ext_sales_price#421,ss_ext_wholesale_cost#422,ss_ext_list_price#423,ss_ext_tax#424,ss_coupon_amt#425,ss_net_paid#426,ss_net_paid_inc_tax#427,ss_net_profit#428,ss_sold_date_sk#429] parquet\n                  :     :        :              :     +- Project [d_date_sk#430]\n                  :     :        :              :        +- Filter (d_year#436 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#430))\n                  :     :        :              :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#430,d_date_id#431,d_date#432,d_month_seq#433,d_week_seq#434,d_quarter_seq#435,d_year#436,d_dow#437,d_moy#438,d_dom#439,d_qoy#440,d_fy_year#441,d_fy_quarter_seq#442,d_fy_week_seq#443,d_day_name#444,d_quarter_name#445,d_holiday#446,d_weekend#447,d_following_holiday#448,d_first_dom#449,d_last_dom#450,d_same_day_ly#451,d_same_day_lq#452,d_current_day#453,... 4 more fields] parquet\n                  :     :        :              +- Project [c_customer_sk#89]\n                  :     :        :                 +- Filter isnotnull(c_customer_sk#89)\n                  :     :        :                    +- Relation spark_catalog.tpcds_100.customer[c_customer_sk#89,c_customer_id#90,c_current_cdemo_sk#91,c_current_hdemo_sk#92,c_current_addr_sk#93,c_first_shipto_date_sk#94,c_first_sales_date_sk#95,c_salutation#96,c_first_name#97,c_last_name#98,c_preferred_cust_flag#99,c_birth_day#100,c_birth_month#101,c_birth_year#102,c_birth_country#103,c_login#104,c_email_address#105,c_last_review_date#106] parquet\n                  :     :        +- Aggregate [c_customer_sk#481], [c_customer_sk#481, sum((cast(ss_quantity#467 as decimal(10,0)) * ss_sales_price#470)) AS ssales#403]\n                  :     :           +- Project [ss_quantity#467, ss_sales_price#470, c_customer_sk#481]\n                  :     :              +- Join Inner, (ss_customer_sk#460 = c_customer_sk#481)\n                  :     :                 :- LogicalQueryStage Project [ss_customer_sk#460, ss_quantity#467, ss_sales_price#470], ShuffleQueryStage 17\n                  :     :                 +- LogicalQueryStage Project [c_customer_sk#481], ShuffleQueryStage 19\n                  :     +- LogicalQueryStage Project [d_date_sk#563], BroadcastQueryStage 21\n                  +- Join LeftSemi, (c_customer_sk#545 = c_customer_sk#481)\n                     :- LogicalQueryStage Project [c_customer_sk#545, c_first_name#553, c_last_name#554], ShuffleQueryStage 23\n                     +- Project [c_customer_sk#481]\n                        +- Filter (isnotnull(ssales#403) AND (cast(ssales#403 as decimal(38,8)) > (0.950000 * scalar-subquery#404 [])))\n                           :  +- Aggregate [max(csales#401) AS tpcds_cmax#402]\n                           :     +- Aggregate [c_customer_sk#89], [sum((cast(ss_quantity#416 as decimal(10,0)) * ss_sales_price#419)) AS csales#401]\n                           :        +- Project [ss_quantity#416, ss_sales_price#419, c_customer_sk#89]\n                           :           +- Join Inner, (ss_customer_sk#409 = c_customer_sk#89)\n                           :              :- Project [ss_customer_sk#409, ss_quantity#416, ss_sales_price#419]\n                           :              :  +- Join Inner, (ss_sold_date_sk#429 = d_date_sk#430)\n                           :              :     :- Project [ss_customer_sk#409, ss_quantity#416, ss_sales_price#419, ss_sold_date_sk#429]\n                           :              :     :  +- Filter ((isnotnull(ss_customer_sk#409) AND isnotnull(ss_sold_date_sk#429)) AND dynamicpruning#610 [ss_sold_date_sk#429])\n                           :              :     :     :  +- Project [d_date_sk#430]\n                           :              :     :     :     +- Filter (d_year#436 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#430))\n                           :              :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#430,d_date_id#431,d_date#432,d_month_seq#433,d_week_seq#434,d_quarter_seq#435,d_year#436,d_dow#437,d_moy#438,d_dom#439,d_qoy#440,d_fy_year#441,d_fy_quarter_seq#442,d_fy_week_seq#443,d_day_name#444,d_quarter_name#445,d_holiday#446,d_weekend#447,d_following_holiday#448,d_first_dom#449,d_last_dom#450,d_same_day_ly#451,d_same_day_lq#452,d_current_day#453,... 4 more fields] parquet\n                           :              :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#407,ss_item_sk#408,ss_customer_sk#409,ss_cdemo_sk#410,ss_hdemo_sk#411,ss_addr_sk#412,ss_store_sk#413,ss_promo_sk#414,ss_ticket_number#415L,ss_quantity#416,ss_wholesale_cost#417,ss_list_price#418,ss_sales_price#419,ss_ext_discount_amt#420,ss_ext_sales_price#421,ss_ext_wholesale_cost#422,ss_ext_list_price#423,ss_ext_tax#424,ss_coupon_amt#425,ss_net_paid#426,ss_net_paid_inc_tax#427,ss_net_profit#428,ss_sold_date_sk#429] parquet\n                           :              :     +- Project [d_date_sk#430]\n                           :              :        +- Filter (d_year#436 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#430))\n                           :              :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#430,d_date_id#431,d_date#432,d_month_seq#433,d_week_seq#434,d_quarter_seq#435,d_year#436,d_dow#437,d_moy#438,d_dom#439,d_qoy#440,d_fy_year#441,d_fy_quarter_seq#442,d_fy_week_seq#443,d_day_name#444,d_quarter_name#445,d_holiday#446,d_weekend#447,d_following_holiday#448,d_first_dom#449,d_last_dom#450,d_same_day_ly#451,d_same_day_lq#452,d_current_day#453,... 4 more fields] parquet\n                           :              +- Project [c_customer_sk#89]\n                           :                 +- Filter isnotnull(c_customer_sk#89)\n                           :                    +- Relation spark_catalog.tpcds_100.customer[c_customer_sk#89,c_customer_id#90,c_current_cdemo_sk#91,c_current_hdemo_sk#92,c_current_addr_sk#93,c_first_shipto_date_sk#94,c_first_sales_date_sk#95,c_salutation#96,c_first_name#97,c_last_name#98,c_preferred_cust_flag#99,c_birth_day#100,c_birth_month#101,c_birth_year#102,c_birth_country#103,c_login#104,c_email_address#105,c_last_review_date#106] parquet\n                           +- Aggregate [c_customer_sk#481], [c_customer_sk#481, sum((cast(ss_quantity#467 as decimal(10,0)) * ss_sales_price#470)) AS ssales#403]\n                              +- Project [ss_quantity#467, ss_sales_price#470, c_customer_sk#481]\n                                 +- Join Inner, (ss_customer_sk#460 = c_customer_sk#481)\n                                    :- LogicalQueryStage Project [ss_customer_sk#460, ss_quantity#467, ss_sales_price#470], ShuffleQueryStage 25\n                                    +- LogicalQueryStage Project [c_customer_sk#481], ShuffleQueryStage 27\n"
      },
      "IM" : {
        "inputSizeInBytes" : 117230209872,
        "inputRowCount" : 1877211203
      },
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 16,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "StartTimeInMs" : 1702226713448,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 157493,
        "IOBytes" : {
          "Total" : 22442249308,
          "Details" : {
            "IR" : 2932683812,
            "IW" : 0,
            "SR" : 12332414216,
            "SW" : 7177151280
          }
        }
      }
    },
    "18" : {
      "LQP" : {
        "operators" : {
          "34" : {
            "sign" : -2138347845,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1048824,
            "rowCount" : 31,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#563], BroadcastQueryStage 21 "
          },
          "12" : {
            "sign" : 998370159,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 6601125024000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_customer_sk#481] "
          },
          "8" : {
            "sign" : -1263024912,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 626718072,
            "rowCount" : 26113253,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_bill_customer_sk#144, ws_quantity#158, ws_list_price#160] "
          },
          "19" : {
            "sign" : -582481967,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 24,
            "rowCount" : 1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [max(csales#401) AS tpcds_cmax#402] "
          },
          "23" : {
            "sign" : 1802383537,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 6372974040,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_customer_sk#409, ss_quantity#416, ss_sales_price#419] "
          },
          "4" : {
            "sign" : 231958684,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1648640717,
            "rowCount" : 27026897,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [c_last_name#508, c_first_name#507], [c_last_name#508, c_first_name#507, sum((cast(cs_quantity#124 as decimal(10,0)) * cs_list_price#126)) AS sales#391], HashAggregate(keys=[c_last_name#508, c_first_name#507], functions=[sum((cast(cs_quantity#124 as decimal(10,0)) * cs_list_price#126))]) "
          },
          "40" : {
            "sign" : -2121928113,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 13202250048000000,
            "rowCount" : 550093752000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_quantity#467, ss_sales_price#470, c_customer_sk#481] "
          },
          "15" : {
            "sign" : 82168585,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 13202250048000000,
            "rowCount" : 550093752000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_quantity#467, ss_sales_price#470, c_customer_sk#481] "
          },
          "11" : {
            "sign" : -1428108786,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 33694520,
            "rowCount" : 842363,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ws_bill_customer_sk#144, ws_quantity#158, ws_list_price#160, ws_sold_date_sk#174], ShuffleQueryStage 32 "
          },
          "9" : {
            "sign" : 1307457971,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 835624096,
            "rowCount" : 26113253,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ws_sold_date_sk#174 = d_date_sk#563) "
          },
          "33" : {
            "sign" : -576393737,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 500000000,
            "rowCount" : 2000000,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [c_customer_sk#89, c_customer_id#90, c_current_cdemo_sk#91, c_current_hdemo_sk#92, c_current_addr_sk#93, c_first_shipto_date_sk#94, c_first_sales_date_sk#95, c_salutation#96, c_first_name#97, c_last_name#98, c_preferred_cust_flag#99, c_birth_day#100, c_birth_month#101, c_birth_year#102, c_birth_country#103, c_login#104, c_email_address#105, c_last_review_date#106], `spark_catalog`.`tpcds_100`.`customer`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "22" : {
            "sign" : -949612920,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 7701230628,
            "rowCount" : 275043951,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_customer_sk#409 = c_customer_sk#89) "
          },
          "26" : {
            "sign" : 1565358831,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 39925696056,
            "rowCount" : 262669053,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(ss_customer_sk#409) AND isnotnull(ss_sold_date_sk#429)) AND dynamicpruning#610 [ss_sold_date_sk#429]) "
          },
          "37" : {
            "sign" : 290084495,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 6601125024000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_customer_sk#481] "
          },
          "13" : {
            "sign" : -1882899317,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 15402625056000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(ssales#403) AND (cast(ssales#403 as decimal(38,8)) > (0.950000 * scalar-subquery#404 []))) "
          },
          "24" : {
            "sign" : 305748262,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 8497298720,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#429 = d_date_sk#430) "
          },
          "35" : {
            "sign" : 1645687881,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 104000000,
            "rowCount" : 2000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (c_customer_sk#545 = c_customer_sk#481) "
          },
          "16" : {
            "sign" : 914322748,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 15402625056000000,
            "rowCount" : 550093752000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_customer_sk#460 = c_customer_sk#481) "
          },
          "5" : {
            "sign" : -1559961592,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 3342496384000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [c_last_name#554, c_first_name#553], [c_last_name#554, c_first_name#553, sum((cast(ws_quantity#158 as decimal(10,0)) * ws_list_price#160)) AS sales#394] "
          },
          "10" : {
            "sign" : -1108717480,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 23586164,
            "rowCount" : 842363,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (ws_bill_customer_sk#144 = c_customer_sk#481) "
          },
          "21" : {
            "sign" : -1338930356,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 6601054824,
            "rowCount" : 275043951,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_quantity#416, ss_sales_price#419, c_customer_sk#89] "
          },
          "43" : {
            "sign" : 1454165815,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 32000000,
            "rowCount" : 2000000,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [c_customer_sk#481], ShuffleQueryStage 27 "
          },
          "32" : {
            "sign" : -337975679,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 500000000,
            "rowCount" : 2000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: isnotnull(c_customer_sk#89) "
          },
          "6" : {
            "sign" : 376706478,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 3133590360000000,
            "rowCount" : 52226506000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_quantity#158, ws_list_price#160, c_first_name#553, c_last_name#554] "
          },
          "36" : {
            "sign" : 1358266277,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 96527848,
            "rowCount" : 2000000,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [c_customer_sk#545, c_first_name#553, c_last_name#554], ShuffleQueryStage 23 "
          },
          "1" : {
            "sign" : 1415266953,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
            "sizeInBytes" : 3342498032640717,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) LocalLimit Arguments: 100 "
          },
          "39" : {
            "sign" : 2102197308,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 15402625056000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [c_customer_sk#481], [c_customer_sk#481, sum((cast(ss_quantity#467 as decimal(10,0)) * ss_sales_price#470)) AS ssales#403] "
          },
          "17" : {
            "sign" : 457576007,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 8801500032,
            "rowCount" : 275046876,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ss_customer_sk#460, ss_quantity#467, ss_sales_price#470], ShuffleQueryStage 17 "
          },
          "25" : {
            "sign" : -861776479,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 7354733484,
            "rowCount" : 262669053,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_customer_sk#409, ss_quantity#416, ss_sales_price#419, ss_sold_date_sk#429] "
          },
          "14" : {
            "sign" : -1381279908,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 15402625056000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [c_customer_sk#481], [c_customer_sk#481, sum((cast(ss_quantity#467 as decimal(10,0)) * ss_sales_price#470)) AS ssales#403] "
          },
          "31" : {
            "sign" : 1085635783,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 24000000,
            "rowCount" : 2000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_customer_sk#89] "
          },
          "42" : {
            "sign" : 457576906,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 8801500032,
            "rowCount" : 275046876,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ss_customer_sk#460, ss_quantity#467, ss_sales_price#470], ShuffleQueryStage 25 "
          },
          "0" : {
            "sign" : -765771174,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
            "sizeInBytes" : 6400,
            "rowCount" : 100,
            "isRuntime" : false,
            "predicate" : " (unknown) GlobalLimit Arguments: 100 "
          },
          "20" : {
            "sign" : -660295919,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 47624376,
            "rowCount" : 1984349,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [c_customer_sk#89], [sum((cast(ss_quantity#416 as decimal(10,0)) * ss_sales_price#419)) AS csales#401] "
          },
          "27" : {
            "sign" : -977156952,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#407, ss_item_sk#408, ss_customer_sk#409, ss_cdemo_sk#410, ss_hdemo_sk#411, ss_addr_sk#412, ss_store_sk#413, ss_promo_sk#414, ss_ticket_number#415L, ss_quantity#416, ss_wholesale_cost#417, ss_list_price#418, ss_sales_price#419, ss_ext_discount_amt#420, ss_ext_sales_price#421, ss_ext_wholesale_cost#422, ss_ext_list_price#423, ss_ext_tax#424, ss_coupon_amt#425, ss_net_paid#426, ss_net_paid_inc_tax#427, ss_net_profit#428, ss_sold_date_sk#429], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "2" : {
            "sign" : -491064700,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 3342498032640717,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [c_last_name#508 ASC NULLS FIRST, c_first_name#507 ASC NULLS FIRST, sales#391 ASC NULLS FIRST], true "
          },
          "38" : {
            "sign" : -639744623,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 15402625056000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(ssales#403) AND (cast(ssales#403 as decimal(38,8)) > (0.950000 * scalar-subquery#404 []))) "
          },
          "18" : {
            "sign" : 1454164916,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 32000000,
            "rowCount" : 2000000,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [c_customer_sk#481], ShuffleQueryStage 19 "
          },
          "30" : {
            "sign" : -358797686,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#430, d_date_id#431, d_date#432, d_month_seq#433, d_week_seq#434, d_quarter_seq#435, d_year#436, d_dow#437, d_moy#438, d_dom#439, d_qoy#440, d_fy_year#441, d_fy_quarter_seq#442, d_fy_week_seq#443, d_day_name#444, d_quarter_name#445, d_holiday#446, d_weekend#447, d_following_holiday#448, d_first_dom#449, d_last_dom#450, d_same_day_ly#451, d_same_day_lq#452, d_current_day#453, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "7" : {
            "sign" : -1443446036,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 3551402408000000,
            "rowCount" : 52226506000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ws_bill_customer_sk#144 = c_customer_sk#545) "
          },
          "29" : {
            "sign" : 2051540096,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 355962,
            "rowCount" : 1447,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (d_year#436 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#430)) "
          },
          "41" : {
            "sign" : -1025989668,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 15402625056000000,
            "rowCount" : 550093752000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_customer_sk#460 = c_customer_sk#481) "
          },
          "3" : {
            "sign" : -1531105954,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Union",
            "sizeInBytes" : 3342498032640717,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Union Arguments: false, false "
          },
          "28" : {
            "sign" : 1217444409,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 17364,
            "rowCount" : 1447,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#430] "
          }
        },
        "links" : [ {
          "fromId" : 4,
          "fromName" : "LogicalQueryStage",
          "toId" : 3,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "LogicalQueryStage",
          "toId" : 10,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 17,
          "fromName" : "LogicalQueryStage",
          "toId" : 16,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 18,
          "fromName" : "LogicalQueryStage",
          "toId" : 16,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 16,
          "fromName" : "Join",
          "toId" : 15,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 15,
          "fromName" : "Project",
          "toId" : 14,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 14,
          "fromName" : "Aggregate",
          "toId" : 13,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 27,
          "fromName" : "LogicalRelation",
          "toId" : 26,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 30,
          "fromName" : "LogicalRelation",
          "toId" : 29,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 29,
          "fromName" : "Filter",
          "toId" : 28,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 28,
          "fromName" : "Project",
          "toId" : 26,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 26,
          "fromName" : "Filter",
          "toId" : 25,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 25,
          "fromName" : "Project",
          "toId" : 24,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 28,
          "fromName" : "Project",
          "toId" : 24,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 24,
          "fromName" : "Join",
          "toId" : 23,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 23,
          "fromName" : "Project",
          "toId" : 22,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 33,
          "fromName" : "LogicalRelation",
          "toId" : 32,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 32,
          "fromName" : "Filter",
          "toId" : 31,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 31,
          "fromName" : "Project",
          "toId" : 22,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 22,
          "fromName" : "Join",
          "toId" : 21,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 21,
          "fromName" : "Project",
          "toId" : 20,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 20,
          "fromName" : "Aggregate",
          "toId" : 19,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 19,
          "fromName" : "Aggregate",
          "toId" : 13,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 13,
          "fromName" : "Filter",
          "toId" : 12,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 12,
          "fromName" : "Project",
          "toId" : 10,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "Join",
          "toId" : 9,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 34,
          "fromName" : "LogicalQueryStage",
          "toId" : 9,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "Join",
          "toId" : 8,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "Project",
          "toId" : 7,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 36,
          "fromName" : "LogicalQueryStage",
          "toId" : 35,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 42,
          "fromName" : "LogicalQueryStage",
          "toId" : 41,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 43,
          "fromName" : "LogicalQueryStage",
          "toId" : 41,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 41,
          "fromName" : "Join",
          "toId" : 40,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 40,
          "fromName" : "Project",
          "toId" : 39,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 39,
          "fromName" : "Aggregate",
          "toId" : 38,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 19,
          "fromName" : "Aggregate",
          "toId" : 38,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 38,
          "fromName" : "Filter",
          "toId" : 37,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 37,
          "fromName" : "Project",
          "toId" : 35,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 35,
          "fromName" : "Join",
          "toId" : 7,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Join",
          "toId" : 6,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Project",
          "toId" : 5,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Aggregate",
          "toId" : 3,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Union",
          "toId" : 2,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "LocalLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "LocalLimit",
          "toId" : 0,
          "toName" : "GlobalLimit",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [c_last_name#508 ASC NULLS FIRST, c_first_name#507 ASC NULLS FIRST, sales#391 ASC NULLS FIRST], true\n      +- Union false, false\n         :- LogicalQueryStage Aggregate [c_last_name#508, c_first_name#507], [c_last_name#508, c_first_name#507, sum((cast(cs_quantity#124 as decimal(10,0)) * cs_list_price#126)) AS sales#391], HashAggregate(keys=[c_last_name#508, c_first_name#507], functions=[sum((cast(cs_quantity#124 as decimal(10,0)) * cs_list_price#126))])\n         +- Aggregate [c_last_name#554, c_first_name#553], [c_last_name#554, c_first_name#553, sum((cast(ws_quantity#158 as decimal(10,0)) * ws_list_price#160)) AS sales#394]\n            +- Project [ws_quantity#158, ws_list_price#160, c_first_name#553, c_last_name#554]\n               +- Join Inner, (ws_bill_customer_sk#144 = c_customer_sk#545)\n                  :- Project [ws_bill_customer_sk#144, ws_quantity#158, ws_list_price#160]\n                  :  +- Join Inner, (ws_sold_date_sk#174 = d_date_sk#563)\n                  :     :- Join LeftSemi, (ws_bill_customer_sk#144 = c_customer_sk#481)\n                  :     :  :- LogicalQueryStage Project [ws_bill_customer_sk#144, ws_quantity#158, ws_list_price#160, ws_sold_date_sk#174], ShuffleQueryStage 32\n                  :     :  +- Project [c_customer_sk#481]\n                  :     :     +- Filter (isnotnull(ssales#403) AND (cast(ssales#403 as decimal(38,8)) > (0.950000 * scalar-subquery#404 [])))\n                  :     :        :  +- Aggregate [max(csales#401) AS tpcds_cmax#402]\n                  :     :        :     +- Aggregate [c_customer_sk#89], [sum((cast(ss_quantity#416 as decimal(10,0)) * ss_sales_price#419)) AS csales#401]\n                  :     :        :        +- Project [ss_quantity#416, ss_sales_price#419, c_customer_sk#89]\n                  :     :        :           +- Join Inner, (ss_customer_sk#409 = c_customer_sk#89)\n                  :     :        :              :- Project [ss_customer_sk#409, ss_quantity#416, ss_sales_price#419]\n                  :     :        :              :  +- Join Inner, (ss_sold_date_sk#429 = d_date_sk#430)\n                  :     :        :              :     :- Project [ss_customer_sk#409, ss_quantity#416, ss_sales_price#419, ss_sold_date_sk#429]\n                  :     :        :              :     :  +- Filter ((isnotnull(ss_customer_sk#409) AND isnotnull(ss_sold_date_sk#429)) AND dynamicpruning#610 [ss_sold_date_sk#429])\n                  :     :        :              :     :     :  +- Project [d_date_sk#430]\n                  :     :        :              :     :     :     +- Filter (d_year#436 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#430))\n                  :     :        :              :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#430,d_date_id#431,d_date#432,d_month_seq#433,d_week_seq#434,d_quarter_seq#435,d_year#436,d_dow#437,d_moy#438,d_dom#439,d_qoy#440,d_fy_year#441,d_fy_quarter_seq#442,d_fy_week_seq#443,d_day_name#444,d_quarter_name#445,d_holiday#446,d_weekend#447,d_following_holiday#448,d_first_dom#449,d_last_dom#450,d_same_day_ly#451,d_same_day_lq#452,d_current_day#453,... 4 more fields] parquet\n                  :     :        :              :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#407,ss_item_sk#408,ss_customer_sk#409,ss_cdemo_sk#410,ss_hdemo_sk#411,ss_addr_sk#412,ss_store_sk#413,ss_promo_sk#414,ss_ticket_number#415L,ss_quantity#416,ss_wholesale_cost#417,ss_list_price#418,ss_sales_price#419,ss_ext_discount_amt#420,ss_ext_sales_price#421,ss_ext_wholesale_cost#422,ss_ext_list_price#423,ss_ext_tax#424,ss_coupon_amt#425,ss_net_paid#426,ss_net_paid_inc_tax#427,ss_net_profit#428,ss_sold_date_sk#429] parquet\n                  :     :        :              :     +- Project [d_date_sk#430]\n                  :     :        :              :        +- Filter (d_year#436 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#430))\n                  :     :        :              :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#430,d_date_id#431,d_date#432,d_month_seq#433,d_week_seq#434,d_quarter_seq#435,d_year#436,d_dow#437,d_moy#438,d_dom#439,d_qoy#440,d_fy_year#441,d_fy_quarter_seq#442,d_fy_week_seq#443,d_day_name#444,d_quarter_name#445,d_holiday#446,d_weekend#447,d_following_holiday#448,d_first_dom#449,d_last_dom#450,d_same_day_ly#451,d_same_day_lq#452,d_current_day#453,... 4 more fields] parquet\n                  :     :        :              +- Project [c_customer_sk#89]\n                  :     :        :                 +- Filter isnotnull(c_customer_sk#89)\n                  :     :        :                    +- Relation spark_catalog.tpcds_100.customer[c_customer_sk#89,c_customer_id#90,c_current_cdemo_sk#91,c_current_hdemo_sk#92,c_current_addr_sk#93,c_first_shipto_date_sk#94,c_first_sales_date_sk#95,c_salutation#96,c_first_name#97,c_last_name#98,c_preferred_cust_flag#99,c_birth_day#100,c_birth_month#101,c_birth_year#102,c_birth_country#103,c_login#104,c_email_address#105,c_last_review_date#106] parquet\n                  :     :        +- Aggregate [c_customer_sk#481], [c_customer_sk#481, sum((cast(ss_quantity#467 as decimal(10,0)) * ss_sales_price#470)) AS ssales#403]\n                  :     :           +- Project [ss_quantity#467, ss_sales_price#470, c_customer_sk#481]\n                  :     :              +- Join Inner, (ss_customer_sk#460 = c_customer_sk#481)\n                  :     :                 :- LogicalQueryStage Project [ss_customer_sk#460, ss_quantity#467, ss_sales_price#470], ShuffleQueryStage 17\n                  :     :                 +- LogicalQueryStage Project [c_customer_sk#481], ShuffleQueryStage 19\n                  :     +- LogicalQueryStage Project [d_date_sk#563], BroadcastQueryStage 21\n                  +- Join LeftSemi, (c_customer_sk#545 = c_customer_sk#481)\n                     :- LogicalQueryStage Project [c_customer_sk#545, c_first_name#553, c_last_name#554], ShuffleQueryStage 23\n                     +- Project [c_customer_sk#481]\n                        +- Filter (isnotnull(ssales#403) AND (cast(ssales#403 as decimal(38,8)) > (0.950000 * scalar-subquery#404 [])))\n                           :  +- Aggregate [max(csales#401) AS tpcds_cmax#402]\n                           :     +- Aggregate [c_customer_sk#89], [sum((cast(ss_quantity#416 as decimal(10,0)) * ss_sales_price#419)) AS csales#401]\n                           :        +- Project [ss_quantity#416, ss_sales_price#419, c_customer_sk#89]\n                           :           +- Join Inner, (ss_customer_sk#409 = c_customer_sk#89)\n                           :              :- Project [ss_customer_sk#409, ss_quantity#416, ss_sales_price#419]\n                           :              :  +- Join Inner, (ss_sold_date_sk#429 = d_date_sk#430)\n                           :              :     :- Project [ss_customer_sk#409, ss_quantity#416, ss_sales_price#419, ss_sold_date_sk#429]\n                           :              :     :  +- Filter ((isnotnull(ss_customer_sk#409) AND isnotnull(ss_sold_date_sk#429)) AND dynamicpruning#610 [ss_sold_date_sk#429])\n                           :              :     :     :  +- Project [d_date_sk#430]\n                           :              :     :     :     +- Filter (d_year#436 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#430))\n                           :              :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#430,d_date_id#431,d_date#432,d_month_seq#433,d_week_seq#434,d_quarter_seq#435,d_year#436,d_dow#437,d_moy#438,d_dom#439,d_qoy#440,d_fy_year#441,d_fy_quarter_seq#442,d_fy_week_seq#443,d_day_name#444,d_quarter_name#445,d_holiday#446,d_weekend#447,d_following_holiday#448,d_first_dom#449,d_last_dom#450,d_same_day_ly#451,d_same_day_lq#452,d_current_day#453,... 4 more fields] parquet\n                           :              :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#407,ss_item_sk#408,ss_customer_sk#409,ss_cdemo_sk#410,ss_hdemo_sk#411,ss_addr_sk#412,ss_store_sk#413,ss_promo_sk#414,ss_ticket_number#415L,ss_quantity#416,ss_wholesale_cost#417,ss_list_price#418,ss_sales_price#419,ss_ext_discount_amt#420,ss_ext_sales_price#421,ss_ext_wholesale_cost#422,ss_ext_list_price#423,ss_ext_tax#424,ss_coupon_amt#425,ss_net_paid#426,ss_net_paid_inc_tax#427,ss_net_profit#428,ss_sold_date_sk#429] parquet\n                           :              :     +- Project [d_date_sk#430]\n                           :              :        +- Filter (d_year#436 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#430))\n                           :              :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#430,d_date_id#431,d_date#432,d_month_seq#433,d_week_seq#434,d_quarter_seq#435,d_year#436,d_dow#437,d_moy#438,d_dom#439,d_qoy#440,d_fy_year#441,d_fy_quarter_seq#442,d_fy_week_seq#443,d_day_name#444,d_quarter_name#445,d_holiday#446,d_weekend#447,d_following_holiday#448,d_first_dom#449,d_last_dom#450,d_same_day_ly#451,d_same_day_lq#452,d_current_day#453,... 4 more fields] parquet\n                           :              +- Project [c_customer_sk#89]\n                           :                 +- Filter isnotnull(c_customer_sk#89)\n                           :                    +- Relation spark_catalog.tpcds_100.customer[c_customer_sk#89,c_customer_id#90,c_current_cdemo_sk#91,c_current_hdemo_sk#92,c_current_addr_sk#93,c_first_shipto_date_sk#94,c_first_sales_date_sk#95,c_salutation#96,c_first_name#97,c_last_name#98,c_preferred_cust_flag#99,c_birth_day#100,c_birth_month#101,c_birth_year#102,c_birth_country#103,c_login#104,c_email_address#105,c_last_review_date#106] parquet\n                           +- Aggregate [c_customer_sk#481], [c_customer_sk#481, sum((cast(ss_quantity#467 as decimal(10,0)) * ss_sales_price#470)) AS ssales#403]\n                              +- Project [ss_quantity#467, ss_sales_price#470, c_customer_sk#481]\n                                 +- Join Inner, (ss_customer_sk#460 = c_customer_sk#481)\n                                    :- LogicalQueryStage Project [ss_customer_sk#460, ss_quantity#467, ss_sales_price#470], ShuffleQueryStage 25\n                                    +- LogicalQueryStage Project [c_customer_sk#481], ShuffleQueryStage 27\n"
      },
      "IM" : {
        "inputSizeInBytes" : 19446911973,
        "inputRowCount" : 583963043
      },
      "PD" : {
        "8" : [ 75566, 77024, 80363, 70048, 71766, 84690, 75203, 81923, 80327, 78113, 71073, 73119, 80363, 87565, 80396, 74144, 81557, 81565, 71040, 77021, 73748, 76259, 77381, 69656, 79964, 78872, 78836, 88721, 78251, 73715, 79892, 68092, 79703, 82291, 76658, 78476, 75200, 75566, 77747, 74840, 77384, 83560, 71966, 76001, 77678, 83810, 70347, 78440, 78151, 78731, 71636, 70943, 78179, 78916, 78110, 72692, 78509, 74804, 71339, 77714, 76361, 79166, 74477, 71339, 78187, 84041, 72662, 76985, 83411, 78908, 76553, 73781, 75203, 78803, 81008, 81199, 80690, 76622, 89642, 78839, 76408, 80690, 83452, 73418, 77054, 78875, 77711, 75599, 77453, 81524, 79601, 73879, 76691, 79964, 74078, 79453, 82368, 74837, 78839, 76952, 75860, 78905, 83565, 67734, 77420, 76589, 76292, 80000, 76292, 78944, 81161, 78803, 78875, 78440, 73157, 72989, 78911, 72362, 73817, 75170, 78509, 81158, 79964, 81959, 86327, 80867, 76622, 81238, 80036, 77783, 77642, 72032, 75203, 75530, 74771, 81851, 73551, 83887, 80726, 75566, 70281, 81887, 73653, 81125, 76223, 76655, 76226, 76292, 74543, 83084, 78473, 78005, 78110, 77420, 77816, 74510, 90123, 77714, 72725, 80041, 71733, 71999, 76331, 72063, 80102, 84839, 75267, 78074, 79670, 89046, 76295, 73022, 76259, 74078, 83810, 83488, 78803, 77714, 71106, 75896, 72431, 84721, 82649, 77057, 75569, 76622, 78113, 73418, 69082, 82327, 79565, 84649, 78440, 78113, 72756, 82363, 73484, 74474, 77351, 77384 ],
        "2" : [ 17371601, 17313063, 16996707, 17100959, 17033226, 17236981, 17071883, 16947894, 17078453, 17320527, 17392136, 17189957, 17396414, 17311465, 17218617, 17091886, 17296486, 17602538, 17086450, 17206721, 17104075, 17257645, 17447592, 17284068, 17180017, 17251810, 17078510, 17428751, 17190703, 17091180, 16888245, 17130838, 17230626, 16956499, 17240499, 17279493, 17046255, 16925646, 16907666, 17034480, 16940011, 17199974, 16869146, 17295966, 17353222, 16846943, 17325947, 17131813, 17231729, 17311901, 17440035, 17297061, 17072505, 17276021, 17146516, 17169923, 17129259, 16823901, 16978621, 17169124, 17091808, 17480756, 16982840, 17160489, 16978313, 17460598, 17233558, 17090869, 17156297, 17354514, 17312619, 17034009, 16927254, 17287614, 17365219, 17389547, 17480370, 17316975, 17251186, 17264228, 17243624, 17381439, 17433913, 16760532, 17064606, 16931418, 17063808, 17170220, 17151390, 17444256, 17095914, 17182115, 17324912, 17111549, 17203150, 17522946, 16932260, 16948450, 17145841, 16867015, 16765024, 17338612, 17173734, 16986979, 17131384, 17352202, 17241238, 17627527, 16822357, 16867839, 17008290, 17184359, 17395163, 17082612, 17338942, 17121168, 16815534, 16899165, 17149200, 17075267, 17087177, 17178853, 17547989, 17158451, 17252438, 17439694, 17073151, 16986975, 17140740, 16958860, 17422277, 17317255, 17311966, 17191736, 16950873, 17009149, 17326021, 17377512, 17100048, 17282433, 17170675, 16883065, 17109865, 17346265, 17166782, 17218832, 17598899, 17156005, 17190632, 17175152, 17467989, 17158171, 17400931, 17351617, 17331236, 17383323, 17108352, 17275713, 17473037, 16820939, 16928731, 16941370, 17356646, 16899933, 17228069, 17252334, 17147748, 17345681, 17313972, 16910213, 17387811, 17599878, 17309032, 17226960, 17276187, 16945588, 17360401, 16960900, 17134588, 17028930, 17029163, 17234190, 17064091, 17105964, 17637409, 17303023, 17722750, 17370523, 17066032, 17283328, 17271878, 17131573, 17011172, 16816679, 17307952, 17504379, 17083957, 17159149, 17341949, 16921044 ],
        "4" : [ 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 290960, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 290960, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 290960, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 290960, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 290960, 264509, 264509, 290960, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 290960, 264509, 264509, 264509, 290960, 264509, 290960, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 290960, 264509, 290960, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509 ],
        "3" : [ 52331, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 57565, 57565, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 57565, 52331, 52331, 52331, 57565, 57565, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 57565, 57565, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 57565, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 57565, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 57565, 57565, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 57565, 57565, 52331, 57565, 52331, 57565, 52331, 57565, 52331, 52331, 57565, 52331, 57565, 57565, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 57565, 57565, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 57565, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 57565, 57565, 52331, 52331, 52331, 52331 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 16,
        "FinishedTasksNum" : 1,
        "FinishedTasksTotalTimeInMs" : 1064.0,
        "FinishedTasksDistributionInMs" : [ 1064.0, 1064.0, 1064.0, 1064.0, 1064.0 ]
      },
      "StartTimeInMs" : 1702226845656,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 25285,
        "IOBytes" : {
          "Total" : 7321507241,
          "Details" : {
            "IR" : 0,
            "IW" : 0,
            "SR" : 7321505253,
            "SW" : 1988
          }
        }
      }
    },
    "7" : {
      "LQP" : {
        "operators" : {
          "45" : {
            "sign" : -350419576,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 6601125024000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_customer_sk#481] "
          },
          "34" : {
            "sign" : 1565358831,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 39925696056,
            "rowCount" : 262669053,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(ss_customer_sk#409) AND isnotnull(ss_sold_date_sk#429)) AND dynamicpruning#610 [ss_sold_date_sk#429]) "
          },
          "67" : {
            "sign" : 388376503,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 26102424,
            "rowCount" : 204000,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_item_sk#67, i_item_desc#71], ShuffleQueryStage 15 "
          },
          "12" : {
            "sign" : -938487710,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 67361424,
            "rowCount" : 1403363,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [cs_bill_customer_sk#109, cs_item_sk#121, cs_quantity#124, cs_list_price#126, cs_sold_date_sk#140], ShuffleQueryStage 0 "
          },
          "66" : {
            "sign" : -1070534819,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 4248649360,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ss_item_sk#17, d_date#41], ShuffleQueryStage 30 "
          },
          "51" : {
            "sign" : 1454164637,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 32000000,
            "rowCount" : 2000000,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [c_customer_sk#481], ShuffleQueryStage 10 "
          },
          "84" : {
            "sign" : 1454165815,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 32000000,
            "rowCount" : 2000000,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [c_customer_sk#481], ShuffleQueryStage 27 "
          },
          "8" : {
            "sign" : 1441568544,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 1392136096,
            "rowCount" : 43504253,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cs_sold_date_sk#140 = d_date_sk#517) "
          },
          "73" : {
            "sign" : 457576007,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 6601125024,
            "rowCount" : 275046876,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ss_customer_sk#460, ss_quantity#467, ss_sales_price#470], ShuffleQueryStage 17 "
          },
          "78" : {
            "sign" : 290084495,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 6601125024000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_customer_sk#481] "
          },
          "19" : {
            "sign" : 1120906919,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 26102424,
            "rowCount" : 204000,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_item_sk#67, i_item_desc#71], ShuffleQueryStage 2 "
          },
          "23" : {
            "sign" : 1623804386,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 13202250048000000,
            "rowCount" : 550093752000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_quantity#467, ss_sales_price#470, c_customer_sk#481] "
          },
          "62" : {
            "sign" : 770061938,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 1083405586800000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (cnt#400L > 4) "
          },
          "4" : {
            "sign" : 1365193141,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 1648640717,
            "rowCount" : 27026897,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [c_last_name#508, c_first_name#507], [c_last_name#508, c_first_name#507, sum((cast(cs_quantity#124 as decimal(10,0)) * cs_list_price#126)) AS sales#391] "
          },
          "77" : {
            "sign" : 1358266277,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 98000000,
            "rowCount" : 2000000,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [c_customer_sk#545, c_first_name#553, c_last_name#554], ShuffleQueryStage 23 "
          },
          "40" : {
            "sign" : -337975679,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 500000000,
            "rowCount" : 2000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: isnotnull(c_customer_sk#89) "
          },
          "15" : {
            "sign" : -500295036,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 1083405586800000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [_groupingexpression#608, i_item_sk#67, d_date#41], [i_item_sk#67 AS item_sk#398, count(1) AS cnt#400L] "
          },
          "11" : {
            "sign" : 2111785784,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 44907616,
            "rowCount" : 1403363,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (cs_item_sk#121 = item_sk#398) "
          },
          "9" : {
            "sign" : -990926960,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 39294164,
            "rowCount" : 1403363,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (cs_bill_customer_sk#109 = c_customer_sk#481) "
          },
          "44" : {
            "sign" : 435063190,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 98000000,
            "rowCount" : 2000000,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [c_customer_sk#499, c_first_name#507, c_last_name#508], ShuffleQueryStage 6 "
          },
          "33" : {
            "sign" : -861776479,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 7354733484,
            "rowCount" : 262669053,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_customer_sk#409, ss_quantity#416, ss_sales_price#419, ss_sold_date_sk#429] "
          },
          "22" : {
            "sign" : 1934210699,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 15402625056000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [c_customer_sk#481], [c_customer_sk#481, sum((cast(ss_quantity#467 as decimal(10,0)) * ss_sales_price#470)) AS ssales#403] "
          },
          "56" : {
            "sign" : -2079294392,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 71389876192,
            "rowCount" : 2230933631,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ws_sold_date_sk#174 = d_date_sk#563) "
          },
          "55" : {
            "sign" : 2065671769,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 53542407144,
            "rowCount" : 2230933631,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_bill_customer_sk#144, ws_quantity#158, ws_list_price#160] "
          },
          "26" : {
            "sign" : 739645252,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 32000000,
            "rowCount" : 2000000,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [c_customer_sk#481], ShuffleQueryStage 4 "
          },
          "50" : {
            "sign" : -1093617969,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 6601125024,
            "rowCount" : 275046876,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ss_customer_sk#460, ss_quantity#467, ss_sales_price#470], ShuffleQueryStage 8 "
          },
          "37" : {
            "sign" : 2051540096,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 355962,
            "rowCount" : 1447,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (d_year#436 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#430)) "
          },
          "68" : {
            "sign" : 998370159,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 6601125024000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_customer_sk#481] "
          },
          "61" : {
            "sign" : 2022277624,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 650043352080000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [item_sk#398] "
          },
          "13" : {
            "sign" : 1981268591,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 650043352080000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [item_sk#398] "
          },
          "46" : {
            "sign" : 789941336,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 15402625056000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(ssales#403) AND (cast(ssales#403 as decimal(38,8)) > (0.950000 * scalar-subquery#404 []))) "
          },
          "24" : {
            "sign" : 1908847787,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 15402625056000000,
            "rowCount" : 550093752000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_customer_sk#460 = c_customer_sk#481) "
          },
          "83" : {
            "sign" : 457576906,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 6601125024,
            "rowCount" : 275046876,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ss_customer_sk#460, ss_quantity#467, ss_sales_price#470], ShuffleQueryStage 25 "
          },
          "35" : {
            "sign" : -977156952,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#407, ss_item_sk#408, ss_customer_sk#409, ss_cdemo_sk#410, ss_hdemo_sk#411, ss_addr_sk#412, ss_store_sk#413, ss_promo_sk#414, ss_ticket_number#415L, ss_quantity#416, ss_wholesale_cost#417, ss_list_price#418, ss_sales_price#419, ss_ext_discount_amt#420, ss_ext_sales_price#421, ss_ext_wholesale_cost#422, ss_ext_list_price#423, ss_ext_tax#424, ss_coupon_amt#425, ss_net_paid#426, ss_net_paid_inc_tax#427, ss_net_profit#428, ss_sold_date_sk#429], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "16" : {
            "sign" : -2009662925,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 1950130056240000,
            "rowCount" : 54170279340000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date#41, i_item_sk#67, substr(i_item_desc#71, 1, 30) AS _groupingexpression#608] "
          },
          "79" : {
            "sign" : -639744623,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 15402625056000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(ssales#403) AND (cast(ssales#403 as decimal(38,8)) > (0.950000 * scalar-subquery#404 []))) "
          },
          "5" : {
            "sign" : -1523964623,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 4959484842000000,
            "rowCount" : 87008506000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_quantity#124, cs_list_price#126, c_first_name#507, c_last_name#508] "
          },
          "72" : {
            "sign" : 914322748,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 15402625056000000,
            "rowCount" : 550093752000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_customer_sk#460 = c_customer_sk#481) "
          },
          "10" : {
            "sign" : -1537602824,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 39294164,
            "rowCount" : 1403363,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_bill_customer_sk#109, cs_quantity#124, cs_list_price#126, cs_sold_date_sk#140] "
          },
          "59" : {
            "sign" : 910944340,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 2302899232,
            "rowCount" : 71965601,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (ws_item_sk#143 = item_sk#398) "
          },
          "48" : {
            "sign" : 47435418,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 13202250048000000,
            "rowCount" : 550093752000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_quantity#467, ss_sales_price#470, c_customer_sk#481] "
          },
          "21" : {
            "sign" : -1901984732,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 15402625056000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(ssales#403) AND (cast(ssales#403 as decimal(38,8)) > (0.950000 * scalar-subquery#404 []))) "
          },
          "76" : {
            "sign" : 1645687881,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 98000000,
            "rowCount" : 2000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (c_customer_sk#545 = c_customer_sk#481) "
          },
          "54" : {
            "sign" : 2038011901,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 4702228440,
            "rowCount" : 72341976,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ws_bill_customer_sk#144 = c_customer_sk#545) "
          },
          "43" : {
            "sign" : -528156139,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 98000000,
            "rowCount" : 2000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (c_customer_sk#499 = c_customer_sk#481) "
          },
          "65" : {
            "sign" : -1904280941,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 2166811173600000,
            "rowCount" : 54170279340000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_item_sk#17 = i_item_sk#67) "
          },
          "71" : {
            "sign" : 82168585,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 13202250048000000,
            "rowCount" : 550093752000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_quantity#467, ss_sales_price#470, c_customer_sk#481] "
          },
          "57" : {
            "sign" : -433298353,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 2015036828,
            "rowCount" : 71965601,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (ws_bill_customer_sk#144 = c_customer_sk#481) "
          },
          "32" : {
            "sign" : 305748262,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 8497298720,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#429 = d_date_sk#430) "
          },
          "80" : {
            "sign" : 2102197308,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 15402625056000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [c_customer_sk#481], [c_customer_sk#481, sum((cast(ss_quantity#467 as decimal(10,0)) * ss_sales_price#470)) AS ssales#403] "
          },
          "82" : {
            "sign" : -1025989668,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 15402625056000000,
            "rowCount" : 550093752000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_customer_sk#460 = c_customer_sk#481) "
          },
          "49" : {
            "sign" : -1437901541,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 15402625056000000,
            "rowCount" : 550093752000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_customer_sk#460 = c_customer_sk#481) "
          },
          "6" : {
            "sign" : 1133093440,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 5655552890000000,
            "rowCount" : 87008506000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cs_bill_customer_sk#109 = c_customer_sk#499) "
          },
          "36" : {
            "sign" : 1217444409,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 17364,
            "rowCount" : 1447,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#430] "
          },
          "1" : {
            "sign" : -1256479583,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
            "sizeInBytes" : 3297281434,
            "rowCount" : 54053794,
            "isRuntime" : false,
            "predicate" : " (unknown) LocalLimit Arguments: 100 "
          },
          "39" : {
            "sign" : 1085635783,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 24000000,
            "rowCount" : 2000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_customer_sk#89] "
          },
          "17" : {
            "sign" : 566394868,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 2166811173600000,
            "rowCount" : 54170279340000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_item_sk#17 = i_item_sk#67) "
          },
          "25" : {
            "sign" : -1093618124,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 6601125024,
            "rowCount" : 275046876,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ss_customer_sk#460, ss_quantity#467, ss_sales_price#470], ShuffleQueryStage 3 "
          },
          "60" : {
            "sign" : 1832837103,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 2302899232,
            "rowCount" : 71965601,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ws_item_sk#143, ws_bill_customer_sk#144, ws_quantity#158, ws_list_price#160, ws_sold_date_sk#174], ShuffleQueryStage 11 "
          },
          "14" : {
            "sign" : 1045330691,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 1083405586800000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (cnt#400L > 4) "
          },
          "47" : {
            "sign" : 431587195,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 15402625056000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [c_customer_sk#481], [c_customer_sk#481, sum((cast(ss_quantity#467 as decimal(10,0)) * ss_sales_price#470)) AS ssales#403] "
          },
          "31" : {
            "sign" : 1802383537,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 6372974040,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_customer_sk#409, ss_quantity#416, ss_sales_price#419] "
          },
          "69" : {
            "sign" : -1882899317,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 15402625056000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(ssales#403) AND (cast(ssales#403 as decimal(38,8)) > (0.950000 * scalar-subquery#404 []))) "
          },
          "58" : {
            "sign" : -1718060309,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 2015036828,
            "rowCount" : 71965601,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_bill_customer_sk#144, ws_quantity#158, ws_list_price#160, ws_sold_date_sk#174] "
          },
          "64" : {
            "sign" : 1825233538,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 1950130056240000,
            "rowCount" : 54170279340000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date#41, i_item_sk#67, substr(i_item_desc#71, 1, 30) AS _groupingexpression#608] "
          },
          "53" : {
            "sign" : 1873577481,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 4123492632,
            "rowCount" : 72341976,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_quantity#158, ws_list_price#160, c_first_name#553, c_last_name#554] "
          },
          "42" : {
            "sign" : 1758754844,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1048824,
            "rowCount" : 31,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#517], BroadcastQueryStage 5 "
          },
          "75" : {
            "sign" : -2138347845,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1048824,
            "rowCount" : 31,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#563], BroadcastQueryStage 21 "
          },
          "0" : {
            "sign" : -616519630,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
            "sizeInBytes" : 6400,
            "rowCount" : 100,
            "isRuntime" : false,
            "predicate" : " (unknown) GlobalLimit Arguments: 100 "
          },
          "20" : {
            "sign" : 2123397918,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 6601125024000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_customer_sk#481] "
          },
          "27" : {
            "sign" : -582481967,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 24,
            "rowCount" : 1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [max(csales#401) AS tpcds_cmax#402] "
          },
          "70" : {
            "sign" : -1381279908,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 15402625056000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [c_customer_sk#481], [c_customer_sk#481, sum((cast(ss_quantity#467 as decimal(10,0)) * ss_sales_price#470)) AS ssales#403] "
          },
          "2" : {
            "sign" : -1336807780,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 3297281434,
            "rowCount" : 54053794,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [c_last_name#508 ASC NULLS FIRST, c_first_name#507 ASC NULLS FIRST, sales#391 ASC NULLS FIRST], true "
          },
          "38" : {
            "sign" : -358797686,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#430, d_date_id#431, d_date#432, d_month_seq#433, d_week_seq#434, d_quarter_seq#435, d_year#436, d_dow#437, d_moy#438, d_dom#439, d_qoy#440, d_fy_year#441, d_fy_quarter_seq#442, d_fy_week_seq#443, d_day_name#444, d_quarter_name#445, d_holiday#446, d_weekend#447, d_following_holiday#448, d_first_dom#449, d_last_dom#450, d_same_day_ly#451, d_same_day_lq#452, d_current_day#453, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "81" : {
            "sign" : -2121928113,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 13202250048000000,
            "rowCount" : 550093752000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_quantity#467, ss_sales_price#470, c_customer_sk#481] "
          },
          "18" : {
            "sign" : -1070535532,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 4248649360,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ss_item_sk#17, d_date#41], ShuffleQueryStage 28 "
          },
          "30" : {
            "sign" : -949612920,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 7701230628,
            "rowCount" : 275043951,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_customer_sk#409 = c_customer_sk#89) "
          },
          "7" : {
            "sign" : -758780695,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 1044102072,
            "rowCount" : 43504253,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_bill_customer_sk#109, cs_quantity#124, cs_list_price#126] "
          },
          "29" : {
            "sign" : -1338930356,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 6601054824,
            "rowCount" : 275043951,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_quantity#416, ss_sales_price#419, c_customer_sk#89] "
          },
          "41" : {
            "sign" : -576393737,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 500000000,
            "rowCount" : 2000000,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [c_customer_sk#89, c_customer_id#90, c_current_cdemo_sk#91, c_current_hdemo_sk#92, c_current_addr_sk#93, c_first_shipto_date_sk#94, c_first_sales_date_sk#95, c_salutation#96, c_first_name#97, c_last_name#98, c_preferred_cust_flag#99, c_birth_day#100, c_birth_month#101, c_birth_year#102, c_birth_country#103, c_login#104, c_email_address#105, c_last_review_date#106], `spark_catalog`.`tpcds_100`.`customer`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "63" : {
            "sign" : 1782114115,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 1083405586800000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [_groupingexpression#608, i_item_sk#67, d_date#41], [i_item_sk#67 AS item_sk#398, count(1) AS cnt#400L] "
          },
          "3" : {
            "sign" : 225600940,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Union",
            "sizeInBytes" : 3297281434,
            "rowCount" : 54053794,
            "isRuntime" : false,
            "predicate" : " (unknown) Union Arguments: false, false "
          },
          "74" : {
            "sign" : 1454164916,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 32000000,
            "rowCount" : 2000000,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [c_customer_sk#481], ShuffleQueryStage 19 "
          },
          "52" : {
            "sign" : 1307009313,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 1648640717,
            "rowCount" : 27026897,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [c_last_name#554, c_first_name#553], [c_last_name#554, c_first_name#553, sum((cast(ws_quantity#158 as decimal(10,0)) * ws_list_price#160)) AS sales#394] "
          },
          "28" : {
            "sign" : -660295919,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 47624376,
            "rowCount" : 1984349,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [c_customer_sk#89], [sum((cast(ss_quantity#416 as decimal(10,0)) * ss_sales_price#419)) AS csales#401] "
          }
        },
        "links" : [ {
          "fromId" : 12,
          "fromName" : "LogicalQueryStage",
          "toId" : 11,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 18,
          "fromName" : "LogicalQueryStage",
          "toId" : 17,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 19,
          "fromName" : "LogicalQueryStage",
          "toId" : 17,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 17,
          "fromName" : "Join",
          "toId" : 16,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 16,
          "fromName" : "Project",
          "toId" : 15,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 15,
          "fromName" : "Aggregate",
          "toId" : 14,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 14,
          "fromName" : "Filter",
          "toId" : 13,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 13,
          "fromName" : "Project",
          "toId" : 11,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "Join",
          "toId" : 10,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "Project",
          "toId" : 9,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 25,
          "fromName" : "LogicalQueryStage",
          "toId" : 24,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 26,
          "fromName" : "LogicalQueryStage",
          "toId" : 24,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 24,
          "fromName" : "Join",
          "toId" : 23,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 23,
          "fromName" : "Project",
          "toId" : 22,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 22,
          "fromName" : "Aggregate",
          "toId" : 21,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 35,
          "fromName" : "LogicalRelation",
          "toId" : 34,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 38,
          "fromName" : "LogicalRelation",
          "toId" : 37,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 37,
          "fromName" : "Filter",
          "toId" : 36,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 36,
          "fromName" : "Project",
          "toId" : 34,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 34,
          "fromName" : "Filter",
          "toId" : 33,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 33,
          "fromName" : "Project",
          "toId" : 32,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 36,
          "fromName" : "Project",
          "toId" : 32,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 32,
          "fromName" : "Join",
          "toId" : 31,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 31,
          "fromName" : "Project",
          "toId" : 30,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 41,
          "fromName" : "LogicalRelation",
          "toId" : 40,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 40,
          "fromName" : "Filter",
          "toId" : 39,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 39,
          "fromName" : "Project",
          "toId" : 30,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 30,
          "fromName" : "Join",
          "toId" : 29,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 29,
          "fromName" : "Project",
          "toId" : 28,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 28,
          "fromName" : "Aggregate",
          "toId" : 27,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 27,
          "fromName" : "Aggregate",
          "toId" : 21,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 21,
          "fromName" : "Filter",
          "toId" : 20,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 20,
          "fromName" : "Project",
          "toId" : 9,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "Join",
          "toId" : 8,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 42,
          "fromName" : "LogicalQueryStage",
          "toId" : 8,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "Join",
          "toId" : 7,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Project",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 44,
          "fromName" : "LogicalQueryStage",
          "toId" : 43,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 50,
          "fromName" : "LogicalQueryStage",
          "toId" : 49,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 51,
          "fromName" : "LogicalQueryStage",
          "toId" : 49,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 49,
          "fromName" : "Join",
          "toId" : 48,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 48,
          "fromName" : "Project",
          "toId" : 47,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 47,
          "fromName" : "Aggregate",
          "toId" : 46,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 27,
          "fromName" : "Aggregate",
          "toId" : 46,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 46,
          "fromName" : "Filter",
          "toId" : 45,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 45,
          "fromName" : "Project",
          "toId" : 43,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 43,
          "fromName" : "Join",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Join",
          "toId" : 5,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Project",
          "toId" : 4,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Aggregate",
          "toId" : 3,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 60,
          "fromName" : "LogicalQueryStage",
          "toId" : 59,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 66,
          "fromName" : "LogicalQueryStage",
          "toId" : 65,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 67,
          "fromName" : "LogicalQueryStage",
          "toId" : 65,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 65,
          "fromName" : "Join",
          "toId" : 64,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 64,
          "fromName" : "Project",
          "toId" : 63,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 63,
          "fromName" : "Aggregate",
          "toId" : 62,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 62,
          "fromName" : "Filter",
          "toId" : 61,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 61,
          "fromName" : "Project",
          "toId" : 59,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 59,
          "fromName" : "Join",
          "toId" : 58,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 58,
          "fromName" : "Project",
          "toId" : 57,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 73,
          "fromName" : "LogicalQueryStage",
          "toId" : 72,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 74,
          "fromName" : "LogicalQueryStage",
          "toId" : 72,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 72,
          "fromName" : "Join",
          "toId" : 71,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 71,
          "fromName" : "Project",
          "toId" : 70,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 70,
          "fromName" : "Aggregate",
          "toId" : 69,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 27,
          "fromName" : "Aggregate",
          "toId" : 69,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 69,
          "fromName" : "Filter",
          "toId" : 68,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 68,
          "fromName" : "Project",
          "toId" : 57,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 57,
          "fromName" : "Join",
          "toId" : 56,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 75,
          "fromName" : "LogicalQueryStage",
          "toId" : 56,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 56,
          "fromName" : "Join",
          "toId" : 55,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 55,
          "fromName" : "Project",
          "toId" : 54,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 77,
          "fromName" : "LogicalQueryStage",
          "toId" : 76,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 83,
          "fromName" : "LogicalQueryStage",
          "toId" : 82,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 84,
          "fromName" : "LogicalQueryStage",
          "toId" : 82,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 82,
          "fromName" : "Join",
          "toId" : 81,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 81,
          "fromName" : "Project",
          "toId" : 80,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 80,
          "fromName" : "Aggregate",
          "toId" : 79,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 27,
          "fromName" : "Aggregate",
          "toId" : 79,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 79,
          "fromName" : "Filter",
          "toId" : 78,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 78,
          "fromName" : "Project",
          "toId" : 76,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 76,
          "fromName" : "Join",
          "toId" : 54,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 54,
          "fromName" : "Join",
          "toId" : 53,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 53,
          "fromName" : "Project",
          "toId" : 52,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 52,
          "fromName" : "Aggregate",
          "toId" : 3,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Union",
          "toId" : 2,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "LocalLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "LocalLimit",
          "toId" : 0,
          "toName" : "GlobalLimit",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [c_last_name#508 ASC NULLS FIRST, c_first_name#507 ASC NULLS FIRST, sales#391 ASC NULLS FIRST], true\n      +- Union false, false\n         :- Aggregate [c_last_name#508, c_first_name#507], [c_last_name#508, c_first_name#507, sum((cast(cs_quantity#124 as decimal(10,0)) * cs_list_price#126)) AS sales#391]\n         :  +- Project [cs_quantity#124, cs_list_price#126, c_first_name#507, c_last_name#508]\n         :     +- Join Inner, (cs_bill_customer_sk#109 = c_customer_sk#499)\n         :        :- Project [cs_bill_customer_sk#109, cs_quantity#124, cs_list_price#126]\n         :        :  +- Join Inner, (cs_sold_date_sk#140 = d_date_sk#517)\n         :        :     :- Join LeftSemi, (cs_bill_customer_sk#109 = c_customer_sk#481)\n         :        :     :  :- Project [cs_bill_customer_sk#109, cs_quantity#124, cs_list_price#126, cs_sold_date_sk#140]\n         :        :     :  :  +- Join LeftSemi, (cs_item_sk#121 = item_sk#398)\n         :        :     :  :     :- LogicalQueryStage Project [cs_bill_customer_sk#109, cs_item_sk#121, cs_quantity#124, cs_list_price#126, cs_sold_date_sk#140], ShuffleQueryStage 0\n         :        :     :  :     +- Project [item_sk#398]\n         :        :     :  :        +- Filter (cnt#400L > 4)\n         :        :     :  :           +- Aggregate [_groupingexpression#608, i_item_sk#67, d_date#41], [i_item_sk#67 AS item_sk#398, count(1) AS cnt#400L]\n         :        :     :  :              +- Project [d_date#41, i_item_sk#67, substr(i_item_desc#71, 1, 30) AS _groupingexpression#608]\n         :        :     :  :                 +- Join Inner, (ss_item_sk#17 = i_item_sk#67)\n         :        :     :  :                    :- LogicalQueryStage Project [ss_item_sk#17, d_date#41], ShuffleQueryStage 28\n         :        :     :  :                    +- LogicalQueryStage Project [i_item_sk#67, i_item_desc#71], ShuffleQueryStage 2\n         :        :     :  +- Project [c_customer_sk#481]\n         :        :     :     +- Filter (isnotnull(ssales#403) AND (cast(ssales#403 as decimal(38,8)) > (0.950000 * scalar-subquery#404 [])))\n         :        :     :        :  +- Aggregate [max(csales#401) AS tpcds_cmax#402]\n         :        :     :        :     +- Aggregate [c_customer_sk#89], [sum((cast(ss_quantity#416 as decimal(10,0)) * ss_sales_price#419)) AS csales#401]\n         :        :     :        :        +- Project [ss_quantity#416, ss_sales_price#419, c_customer_sk#89]\n         :        :     :        :           +- Join Inner, (ss_customer_sk#409 = c_customer_sk#89)\n         :        :     :        :              :- Project [ss_customer_sk#409, ss_quantity#416, ss_sales_price#419]\n         :        :     :        :              :  +- Join Inner, (ss_sold_date_sk#429 = d_date_sk#430)\n         :        :     :        :              :     :- Project [ss_customer_sk#409, ss_quantity#416, ss_sales_price#419, ss_sold_date_sk#429]\n         :        :     :        :              :     :  +- Filter ((isnotnull(ss_customer_sk#409) AND isnotnull(ss_sold_date_sk#429)) AND dynamicpruning#610 [ss_sold_date_sk#429])\n         :        :     :        :              :     :     :  +- Project [d_date_sk#430]\n         :        :     :        :              :     :     :     +- Filter (d_year#436 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#430))\n         :        :     :        :              :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#430,d_date_id#431,d_date#432,d_month_seq#433,d_week_seq#434,d_quarter_seq#435,d_year#436,d_dow#437,d_moy#438,d_dom#439,d_qoy#440,d_fy_year#441,d_fy_quarter_seq#442,d_fy_week_seq#443,d_day_name#444,d_quarter_name#445,d_holiday#446,d_weekend#447,d_following_holiday#448,d_first_dom#449,d_last_dom#450,d_same_day_ly#451,d_same_day_lq#452,d_current_day#453,... 4 more fields] parquet\n         :        :     :        :              :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#407,ss_item_sk#408,ss_customer_sk#409,ss_cdemo_sk#410,ss_hdemo_sk#411,ss_addr_sk#412,ss_store_sk#413,ss_promo_sk#414,ss_ticket_number#415L,ss_quantity#416,ss_wholesale_cost#417,ss_list_price#418,ss_sales_price#419,ss_ext_discount_amt#420,ss_ext_sales_price#421,ss_ext_wholesale_cost#422,ss_ext_list_price#423,ss_ext_tax#424,ss_coupon_amt#425,ss_net_paid#426,ss_net_paid_inc_tax#427,ss_net_profit#428,ss_sold_date_sk#429] parquet\n         :        :     :        :              :     +- Project [d_date_sk#430]\n         :        :     :        :              :        +- Filter (d_year#436 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#430))\n         :        :     :        :              :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#430,d_date_id#431,d_date#432,d_month_seq#433,d_week_seq#434,d_quarter_seq#435,d_year#436,d_dow#437,d_moy#438,d_dom#439,d_qoy#440,d_fy_year#441,d_fy_quarter_seq#442,d_fy_week_seq#443,d_day_name#444,d_quarter_name#445,d_holiday#446,d_weekend#447,d_following_holiday#448,d_first_dom#449,d_last_dom#450,d_same_day_ly#451,d_same_day_lq#452,d_current_day#453,... 4 more fields] parquet\n         :        :     :        :              +- Project [c_customer_sk#89]\n         :        :     :        :                 +- Filter isnotnull(c_customer_sk#89)\n         :        :     :        :                    +- Relation spark_catalog.tpcds_100.customer[c_customer_sk#89,c_customer_id#90,c_current_cdemo_sk#91,c_current_hdemo_sk#92,c_current_addr_sk#93,c_first_shipto_date_sk#94,c_first_sales_date_sk#95,c_salutation#96,c_first_name#97,c_last_name#98,c_preferred_cust_flag#99,c_birth_day#100,c_birth_month#101,c_birth_year#102,c_birth_country#103,c_login#104,c_email_address#105,c_last_review_date#106] parquet\n         :        :     :        +- Aggregate [c_customer_sk#481], [c_customer_sk#481, sum((cast(ss_quantity#467 as decimal(10,0)) * ss_sales_price#470)) AS ssales#403]\n         :        :     :           +- Project [ss_quantity#467, ss_sales_price#470, c_customer_sk#481]\n         :        :     :              +- Join Inner, (ss_customer_sk#460 = c_customer_sk#481)\n         :        :     :                 :- LogicalQueryStage Project [ss_customer_sk#460, ss_quantity#467, ss_sales_price#470], ShuffleQueryStage 3\n         :        :     :                 +- LogicalQueryStage Project [c_customer_sk#481], ShuffleQueryStage 4\n         :        :     +- LogicalQueryStage Project [d_date_sk#517], BroadcastQueryStage 5\n         :        +- Join LeftSemi, (c_customer_sk#499 = c_customer_sk#481)\n         :           :- LogicalQueryStage Project [c_customer_sk#499, c_first_name#507, c_last_name#508], ShuffleQueryStage 6\n         :           +- Project [c_customer_sk#481]\n         :              +- Filter (isnotnull(ssales#403) AND (cast(ssales#403 as decimal(38,8)) > (0.950000 * scalar-subquery#404 [])))\n         :                 :  +- Aggregate [max(csales#401) AS tpcds_cmax#402]\n         :                 :     +- Aggregate [c_customer_sk#89], [sum((cast(ss_quantity#416 as decimal(10,0)) * ss_sales_price#419)) AS csales#401]\n         :                 :        +- Project [ss_quantity#416, ss_sales_price#419, c_customer_sk#89]\n         :                 :           +- Join Inner, (ss_customer_sk#409 = c_customer_sk#89)\n         :                 :              :- Project [ss_customer_sk#409, ss_quantity#416, ss_sales_price#419]\n         :                 :              :  +- Join Inner, (ss_sold_date_sk#429 = d_date_sk#430)\n         :                 :              :     :- Project [ss_customer_sk#409, ss_quantity#416, ss_sales_price#419, ss_sold_date_sk#429]\n         :                 :              :     :  +- Filter ((isnotnull(ss_customer_sk#409) AND isnotnull(ss_sold_date_sk#429)) AND dynamicpruning#610 [ss_sold_date_sk#429])\n         :                 :              :     :     :  +- Project [d_date_sk#430]\n         :                 :              :     :     :     +- Filter (d_year#436 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#430))\n         :                 :              :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#430,d_date_id#431,d_date#432,d_month_seq#433,d_week_seq#434,d_quarter_seq#435,d_year#436,d_dow#437,d_moy#438,d_dom#439,d_qoy#440,d_fy_year#441,d_fy_quarter_seq#442,d_fy_week_seq#443,d_day_name#444,d_quarter_name#445,d_holiday#446,d_weekend#447,d_following_holiday#448,d_first_dom#449,d_last_dom#450,d_same_day_ly#451,d_same_day_lq#452,d_current_day#453,... 4 more fields] parquet\n         :                 :              :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#407,ss_item_sk#408,ss_customer_sk#409,ss_cdemo_sk#410,ss_hdemo_sk#411,ss_addr_sk#412,ss_store_sk#413,ss_promo_sk#414,ss_ticket_number#415L,ss_quantity#416,ss_wholesale_cost#417,ss_list_price#418,ss_sales_price#419,ss_ext_discount_amt#420,ss_ext_sales_price#421,ss_ext_wholesale_cost#422,ss_ext_list_price#423,ss_ext_tax#424,ss_coupon_amt#425,ss_net_paid#426,ss_net_paid_inc_tax#427,ss_net_profit#428,ss_sold_date_sk#429] parquet\n         :                 :              :     +- Project [d_date_sk#430]\n         :                 :              :        +- Filter (d_year#436 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#430))\n         :                 :              :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#430,d_date_id#431,d_date#432,d_month_seq#433,d_week_seq#434,d_quarter_seq#435,d_year#436,d_dow#437,d_moy#438,d_dom#439,d_qoy#440,d_fy_year#441,d_fy_quarter_seq#442,d_fy_week_seq#443,d_day_name#444,d_quarter_name#445,d_holiday#446,d_weekend#447,d_following_holiday#448,d_first_dom#449,d_last_dom#450,d_same_day_ly#451,d_same_day_lq#452,d_current_day#453,... 4 more fields] parquet\n         :                 :              +- Project [c_customer_sk#89]\n         :                 :                 +- Filter isnotnull(c_customer_sk#89)\n         :                 :                    +- Relation spark_catalog.tpcds_100.customer[c_customer_sk#89,c_customer_id#90,c_current_cdemo_sk#91,c_current_hdemo_sk#92,c_current_addr_sk#93,c_first_shipto_date_sk#94,c_first_sales_date_sk#95,c_salutation#96,c_first_name#97,c_last_name#98,c_preferred_cust_flag#99,c_birth_day#100,c_birth_month#101,c_birth_year#102,c_birth_country#103,c_login#104,c_email_address#105,c_last_review_date#106] parquet\n         :                 +- Aggregate [c_customer_sk#481], [c_customer_sk#481, sum((cast(ss_quantity#467 as decimal(10,0)) * ss_sales_price#470)) AS ssales#403]\n         :                    +- Project [ss_quantity#467, ss_sales_price#470, c_customer_sk#481]\n         :                       +- Join Inner, (ss_customer_sk#460 = c_customer_sk#481)\n         :                          :- LogicalQueryStage Project [ss_customer_sk#460, ss_quantity#467, ss_sales_price#470], ShuffleQueryStage 8\n         :                          +- LogicalQueryStage Project [c_customer_sk#481], ShuffleQueryStage 10\n         +- Aggregate [c_last_name#554, c_first_name#553], [c_last_name#554, c_first_name#553, sum((cast(ws_quantity#158 as decimal(10,0)) * ws_list_price#160)) AS sales#394]\n            +- Project [ws_quantity#158, ws_list_price#160, c_first_name#553, c_last_name#554]\n               +- Join Inner, (ws_bill_customer_sk#144 = c_customer_sk#545)\n                  :- Project [ws_bill_customer_sk#144, ws_quantity#158, ws_list_price#160]\n                  :  +- Join Inner, (ws_sold_date_sk#174 = d_date_sk#563)\n                  :     :- Join LeftSemi, (ws_bill_customer_sk#144 = c_customer_sk#481)\n                  :     :  :- Project [ws_bill_customer_sk#144, ws_quantity#158, ws_list_price#160, ws_sold_date_sk#174]\n                  :     :  :  +- Join LeftSemi, (ws_item_sk#143 = item_sk#398)\n                  :     :  :     :- LogicalQueryStage Project [ws_item_sk#143, ws_bill_customer_sk#144, ws_quantity#158, ws_list_price#160, ws_sold_date_sk#174], ShuffleQueryStage 11\n                  :     :  :     +- Project [item_sk#398]\n                  :     :  :        +- Filter (cnt#400L > 4)\n                  :     :  :           +- Aggregate [_groupingexpression#608, i_item_sk#67, d_date#41], [i_item_sk#67 AS item_sk#398, count(1) AS cnt#400L]\n                  :     :  :              +- Project [d_date#41, i_item_sk#67, substr(i_item_desc#71, 1, 30) AS _groupingexpression#608]\n                  :     :  :                 +- Join Inner, (ss_item_sk#17 = i_item_sk#67)\n                  :     :  :                    :- LogicalQueryStage Project [ss_item_sk#17, d_date#41], ShuffleQueryStage 30\n                  :     :  :                    +- LogicalQueryStage Project [i_item_sk#67, i_item_desc#71], ShuffleQueryStage 15\n                  :     :  +- Project [c_customer_sk#481]\n                  :     :     +- Filter (isnotnull(ssales#403) AND (cast(ssales#403 as decimal(38,8)) > (0.950000 * scalar-subquery#404 [])))\n                  :     :        :  +- Aggregate [max(csales#401) AS tpcds_cmax#402]\n                  :     :        :     +- Aggregate [c_customer_sk#89], [sum((cast(ss_quantity#416 as decimal(10,0)) * ss_sales_price#419)) AS csales#401]\n                  :     :        :        +- Project [ss_quantity#416, ss_sales_price#419, c_customer_sk#89]\n                  :     :        :           +- Join Inner, (ss_customer_sk#409 = c_customer_sk#89)\n                  :     :        :              :- Project [ss_customer_sk#409, ss_quantity#416, ss_sales_price#419]\n                  :     :        :              :  +- Join Inner, (ss_sold_date_sk#429 = d_date_sk#430)\n                  :     :        :              :     :- Project [ss_customer_sk#409, ss_quantity#416, ss_sales_price#419, ss_sold_date_sk#429]\n                  :     :        :              :     :  +- Filter ((isnotnull(ss_customer_sk#409) AND isnotnull(ss_sold_date_sk#429)) AND dynamicpruning#610 [ss_sold_date_sk#429])\n                  :     :        :              :     :     :  +- Project [d_date_sk#430]\n                  :     :        :              :     :     :     +- Filter (d_year#436 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#430))\n                  :     :        :              :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#430,d_date_id#431,d_date#432,d_month_seq#433,d_week_seq#434,d_quarter_seq#435,d_year#436,d_dow#437,d_moy#438,d_dom#439,d_qoy#440,d_fy_year#441,d_fy_quarter_seq#442,d_fy_week_seq#443,d_day_name#444,d_quarter_name#445,d_holiday#446,d_weekend#447,d_following_holiday#448,d_first_dom#449,d_last_dom#450,d_same_day_ly#451,d_same_day_lq#452,d_current_day#453,... 4 more fields] parquet\n                  :     :        :              :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#407,ss_item_sk#408,ss_customer_sk#409,ss_cdemo_sk#410,ss_hdemo_sk#411,ss_addr_sk#412,ss_store_sk#413,ss_promo_sk#414,ss_ticket_number#415L,ss_quantity#416,ss_wholesale_cost#417,ss_list_price#418,ss_sales_price#419,ss_ext_discount_amt#420,ss_ext_sales_price#421,ss_ext_wholesale_cost#422,ss_ext_list_price#423,ss_ext_tax#424,ss_coupon_amt#425,ss_net_paid#426,ss_net_paid_inc_tax#427,ss_net_profit#428,ss_sold_date_sk#429] parquet\n                  :     :        :              :     +- Project [d_date_sk#430]\n                  :     :        :              :        +- Filter (d_year#436 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#430))\n                  :     :        :              :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#430,d_date_id#431,d_date#432,d_month_seq#433,d_week_seq#434,d_quarter_seq#435,d_year#436,d_dow#437,d_moy#438,d_dom#439,d_qoy#440,d_fy_year#441,d_fy_quarter_seq#442,d_fy_week_seq#443,d_day_name#444,d_quarter_name#445,d_holiday#446,d_weekend#447,d_following_holiday#448,d_first_dom#449,d_last_dom#450,d_same_day_ly#451,d_same_day_lq#452,d_current_day#453,... 4 more fields] parquet\n                  :     :        :              +- Project [c_customer_sk#89]\n                  :     :        :                 +- Filter isnotnull(c_customer_sk#89)\n                  :     :        :                    +- Relation spark_catalog.tpcds_100.customer[c_customer_sk#89,c_customer_id#90,c_current_cdemo_sk#91,c_current_hdemo_sk#92,c_current_addr_sk#93,c_first_shipto_date_sk#94,c_first_sales_date_sk#95,c_salutation#96,c_first_name#97,c_last_name#98,c_preferred_cust_flag#99,c_birth_day#100,c_birth_month#101,c_birth_year#102,c_birth_country#103,c_login#104,c_email_address#105,c_last_review_date#106] parquet\n                  :     :        +- Aggregate [c_customer_sk#481], [c_customer_sk#481, sum((cast(ss_quantity#467 as decimal(10,0)) * ss_sales_price#470)) AS ssales#403]\n                  :     :           +- Project [ss_quantity#467, ss_sales_price#470, c_customer_sk#481]\n                  :     :              +- Join Inner, (ss_customer_sk#460 = c_customer_sk#481)\n                  :     :                 :- LogicalQueryStage Project [ss_customer_sk#460, ss_quantity#467, ss_sales_price#470], ShuffleQueryStage 17\n                  :     :                 +- LogicalQueryStage Project [c_customer_sk#481], ShuffleQueryStage 19\n                  :     +- LogicalQueryStage Project [d_date_sk#563], BroadcastQueryStage 21\n                  +- Join LeftSemi, (c_customer_sk#545 = c_customer_sk#481)\n                     :- LogicalQueryStage Project [c_customer_sk#545, c_first_name#553, c_last_name#554], ShuffleQueryStage 23\n                     +- Project [c_customer_sk#481]\n                        +- Filter (isnotnull(ssales#403) AND (cast(ssales#403 as decimal(38,8)) > (0.950000 * scalar-subquery#404 [])))\n                           :  +- Aggregate [max(csales#401) AS tpcds_cmax#402]\n                           :     +- Aggregate [c_customer_sk#89], [sum((cast(ss_quantity#416 as decimal(10,0)) * ss_sales_price#419)) AS csales#401]\n                           :        +- Project [ss_quantity#416, ss_sales_price#419, c_customer_sk#89]\n                           :           +- Join Inner, (ss_customer_sk#409 = c_customer_sk#89)\n                           :              :- Project [ss_customer_sk#409, ss_quantity#416, ss_sales_price#419]\n                           :              :  +- Join Inner, (ss_sold_date_sk#429 = d_date_sk#430)\n                           :              :     :- Project [ss_customer_sk#409, ss_quantity#416, ss_sales_price#419, ss_sold_date_sk#429]\n                           :              :     :  +- Filter ((isnotnull(ss_customer_sk#409) AND isnotnull(ss_sold_date_sk#429)) AND dynamicpruning#610 [ss_sold_date_sk#429])\n                           :              :     :     :  +- Project [d_date_sk#430]\n                           :              :     :     :     +- Filter (d_year#436 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#430))\n                           :              :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#430,d_date_id#431,d_date#432,d_month_seq#433,d_week_seq#434,d_quarter_seq#435,d_year#436,d_dow#437,d_moy#438,d_dom#439,d_qoy#440,d_fy_year#441,d_fy_quarter_seq#442,d_fy_week_seq#443,d_day_name#444,d_quarter_name#445,d_holiday#446,d_weekend#447,d_following_holiday#448,d_first_dom#449,d_last_dom#450,d_same_day_ly#451,d_same_day_lq#452,d_current_day#453,... 4 more fields] parquet\n                           :              :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#407,ss_item_sk#408,ss_customer_sk#409,ss_cdemo_sk#410,ss_hdemo_sk#411,ss_addr_sk#412,ss_store_sk#413,ss_promo_sk#414,ss_ticket_number#415L,ss_quantity#416,ss_wholesale_cost#417,ss_list_price#418,ss_sales_price#419,ss_ext_discount_amt#420,ss_ext_sales_price#421,ss_ext_wholesale_cost#422,ss_ext_list_price#423,ss_ext_tax#424,ss_coupon_amt#425,ss_net_paid#426,ss_net_paid_inc_tax#427,ss_net_profit#428,ss_sold_date_sk#429] parquet\n                           :              :     +- Project [d_date_sk#430]\n                           :              :        +- Filter (d_year#436 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#430))\n                           :              :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#430,d_date_id#431,d_date#432,d_month_seq#433,d_week_seq#434,d_quarter_seq#435,d_year#436,d_dow#437,d_moy#438,d_dom#439,d_qoy#440,d_fy_year#441,d_fy_quarter_seq#442,d_fy_week_seq#443,d_day_name#444,d_quarter_name#445,d_holiday#446,d_weekend#447,d_following_holiday#448,d_first_dom#449,d_last_dom#450,d_same_day_ly#451,d_same_day_lq#452,d_current_day#453,... 4 more fields] parquet\n                           :              +- Project [c_customer_sk#89]\n                           :                 +- Filter isnotnull(c_customer_sk#89)\n                           :                    +- Relation spark_catalog.tpcds_100.customer[c_customer_sk#89,c_customer_id#90,c_current_cdemo_sk#91,c_current_hdemo_sk#92,c_current_addr_sk#93,c_first_shipto_date_sk#94,c_first_sales_date_sk#95,c_salutation#96,c_first_name#97,c_last_name#98,c_preferred_cust_flag#99,c_birth_day#100,c_birth_month#101,c_birth_year#102,c_birth_country#103,c_login#104,c_email_address#105,c_last_review_date#106] parquet\n                           +- Aggregate [c_customer_sk#481], [c_customer_sk#481, sum((cast(ss_quantity#467 as decimal(10,0)) * ss_sales_price#470)) AS ssales#403]\n                              +- Project [ss_quantity#467, ss_sales_price#470, c_customer_sk#481]\n                                 +- Join Inner, (ss_customer_sk#460 = c_customer_sk#481)\n                                    :- LogicalQueryStage Project [ss_customer_sk#460, ss_quantity#467, ss_sales_price#470], ShuffleQueryStage 25\n                                    +- LogicalQueryStage Project [c_customer_sk#481], ShuffleQueryStage 27\n"
      },
      "IM" : {
        "inputSizeInBytes" : 37650361968,
        "inputRowCount" : 1717045700
      },
      "PD" : {
        "1" : [ 84280, 84280, 84280, 92709, 92709, 84280, 92709, 84280, 76619, 92709, 92709, 84280, 92709, 84280, 84280, 84280, 84280, 84280, 92709, 92709, 92709, 92709, 84280, 84280, 92709, 84280, 84280, 92709, 84280, 92709, 92709, 92709, 92709, 84280, 84280, 92709, 84280, 84280, 84280, 92709, 84280, 84280, 84280, 92709, 92709, 84280, 84280, 84280, 84280, 84280, 92709, 92709, 84280, 84280, 84280, 92709, 92709, 92709, 84280, 84280, 84280, 92709, 84280, 92709, 84280, 92709, 92709, 84280, 92709, 92709, 92709, 84280, 92709, 92709, 84280, 92709, 84280, 92709, 84280, 84280, 92709, 84280, 92709, 84280, 92709, 84280, 84280, 92709, 92709, 84280, 84280, 84280, 92709, 84280, 92709, 92709, 84280, 92709, 92709, 84280, 84280, 92709, 84280, 92709, 92709, 84280, 84280, 92709, 84280, 92709, 84280, 92709, 84280, 92709, 92709, 92709, 76619, 92709, 84280, 84280, 84280, 92709, 92709, 92709, 92709, 92709, 84280, 84280, 92709, 84280, 84280, 84280, 84280, 92709, 84280, 84280, 92709, 92709, 92709, 84280, 84280, 84280, 92709, 92709, 92709, 84280, 84280, 84280, 92709, 84280, 92709, 84280, 92709, 84280, 84280, 92709, 84280, 92709, 84280, 84280, 84280, 92709, 92709, 92709, 84280, 92709, 84280, 84280, 92709, 84280, 84280, 92709, 84280, 84280, 92709, 84280, 84280, 84280, 84280, 84280, 84280, 84280, 92709, 84280, 92709, 92709, 84280, 84280, 84280, 84280, 92709, 84280, 84280, 84280, 84280, 84280, 84280, 84280, 92709, 92709 ],
        "3" : [ 52331, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 57565, 57565, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 57565, 52331, 52331, 52331, 57565, 57565, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 57565, 57565, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 57565, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 57565, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 57565, 57565, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 57565, 57565, 52331, 57565, 52331, 57565, 52331, 57565, 52331, 52331, 57565, 52331, 57565, 57565, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 57565, 57565, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 57565, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 57565, 57565, 52331, 52331, 52331, 52331 ],
        "0" : [ 146748, 148062, 162268, 147121, 156091, 155997, 162866, 145655, 137010, 149774, 166912, 149859, 147977, 148375, 146423, 147452, 146578, 149316, 154962, 146511, 149571, 154021, 147977, 141730, 163713, 148833, 153080, 150257, 141384, 155903, 150342, 142671, 164244, 155997, 151301, 154479, 154962, 155493, 149401, 149097, 146578, 146681, 151386, 149774, 147604, 149486, 162678, 148062, 143527, 135298, 167947, 150342, 155420, 154021, 145324, 154021, 158337, 152139, 156844, 150342, 154021, 152139, 155921, 159761, 133326, 153080, 151750, 147537, 165373, 160292, 151198, 144383, 155988, 152139, 147434, 159184, 141375, 164748, 155514, 149774, 147036, 146663, 150360, 148079, 159351, 149932, 150342, 148545, 160984, 153623, 158504, 163713, 148478, 136672, 156938, 162772, 145324, 146180, 155997, 145239, 151656, 154962, 147036, 150715, 152597, 149774, 158337, 156938, 137450, 150800, 144298, 148460, 142231, 158900, 149774, 159667, 146748, 148918, 146663, 157879, 145324, 150715, 157375, 152224, 154962, 150809, 153080, 158820, 153538, 151198, 152139, 158820, 146095, 148918, 147036, 142671, 141978, 162866, 155056, 155420, 160313, 146596, 150360, 155997, 150885, 157785, 153080, 153538, 153538, 155420, 144951, 134977, 152691, 153165, 151656, 154962, 156455, 141357, 158431, 137944, 155056, 164244, 158820, 162362, 150715, 151814, 151198, 149003, 148375, 153080, 155420, 157879, 149868, 155420, 153165, 153080, 137450, 137528, 152597, 157302, 153538, 141357, 152597, 141044, 152157, 155235, 151826, 146180, 151741, 147977, 152224, 146265, 143442, 136594, 156844, 148833, 149401, 143925, 147977, 160796 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 17,
        "FinishedTasksNum" : 178,
        "FinishedTasksTotalTimeInMs" : 207242.0,
        "FinishedTasksDistributionInMs" : [ 17.0, 801.0, 906.0, 1120.0, 6728.0 ]
      },
      "StartTimeInMs" : 1702226732909,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 138032,
        "IOBytes" : {
          "Total" : 22351843149,
          "Details" : {
            "IR" : 2898265891,
            "IW" : 0,
            "SR" : 12332414216,
            "SW" : 7121163042
          }
        }
      }
    },
    "3" : {
      "LQP" : {
        "operators" : {
          "45" : {
            "sign" : -350419576,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 23812188,
            "rowCount" : 1984349,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_customer_sk#481] "
          },
          "34" : {
            "sign" : 1565358831,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 39925696056,
            "rowCount" : 262669053,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(ss_customer_sk#409) AND isnotnull(ss_sold_date_sk#429)) AND dynamicpruning#610 [ss_sold_date_sk#429]) "
          },
          "67" : {
            "sign" : 388376503,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 26102424,
            "rowCount" : 204000,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_item_sk#67, i_item_desc#71], ShuffleQueryStage 15 "
          },
          "12" : {
            "sign" : -938487710,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 4561805056,
            "rowCount" : 142556408,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [cs_bill_customer_sk#109, cs_item_sk#121, cs_quantity#124, cs_list_price#126, cs_sold_date_sk#140], ShuffleQueryStage 0 "
          },
          "66" : {
            "sign" : -1070534819,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 4248649360,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ss_item_sk#17, d_date#41], ShuffleQueryStage 30 "
          },
          "51" : {
            "sign" : 1454164637,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 24000000,
            "rowCount" : 2000000,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [c_customer_sk#481], ShuffleQueryStage 10 "
          },
          "84" : {
            "sign" : 1454165815,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 24000000,
            "rowCount" : 2000000,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [c_customer_sk#481], ShuffleQueryStage 27 "
          },
          "8" : {
            "sign" : 1441568544,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 141415956736,
            "rowCount" : 4419248648,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cs_sold_date_sk#140 = d_date_sk#517) "
          },
          "73" : {
            "sign" : 457576007,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 6601125024,
            "rowCount" : 275046876,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ss_customer_sk#460, ss_quantity#467, ss_sales_price#470], ShuffleQueryStage 17 "
          },
          "78" : {
            "sign" : 290084495,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 23812188,
            "rowCount" : 1984349,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_customer_sk#481] "
          },
          "19" : {
            "sign" : 1120906919,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 26102424,
            "rowCount" : 204000,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_item_sk#67, i_item_desc#71], ShuffleQueryStage 2 "
          },
          "23" : {
            "sign" : 1623804386,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 6601054824,
            "rowCount" : 275043951,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_quantity#467, ss_sales_price#470, c_customer_sk#481] "
          },
          "62" : {
            "sign" : 770061938,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 1083405586800000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (cnt#400L > 4) "
          },
          "4" : {
            "sign" : 1365193141,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 1648640717,
            "rowCount" : 27026897,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [c_last_name#508, c_first_name#507], [c_last_name#508, c_first_name#507, sum((cast(cs_quantity#124 as decimal(10,0)) * cs_list_price#126)) AS sales#391] "
          },
          "77" : {
            "sign" : 1358266277,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 98000000,
            "rowCount" : 2000000,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [c_customer_sk#545, c_first_name#553, c_last_name#554], ShuffleQueryStage 23 "
          },
          "40" : {
            "sign" : -337975679,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 500000000,
            "rowCount" : 2000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: isnotnull(c_customer_sk#89) "
          },
          "15" : {
            "sign" : -500295036,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 1083405586800000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [_groupingexpression#608, i_item_sk#67, d_date#41], [i_item_sk#67 AS item_sk#398, count(1) AS cnt#400L] "
          },
          "11" : {
            "sign" : 2111785784,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 4561805056,
            "rowCount" : 142556408,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (cs_item_sk#121 = item_sk#398) "
          },
          "9" : {
            "sign" : -990926960,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 3991579424,
            "rowCount" : 142556408,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (cs_bill_customer_sk#109 = c_customer_sk#481) "
          },
          "44" : {
            "sign" : 435063190,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 98000000,
            "rowCount" : 2000000,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [c_customer_sk#499, c_first_name#507, c_last_name#508], ShuffleQueryStage 6 "
          },
          "33" : {
            "sign" : -861776479,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 7354733484,
            "rowCount" : 262669053,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_customer_sk#409, ss_quantity#416, ss_sales_price#419, ss_sold_date_sk#429] "
          },
          "22" : {
            "sign" : 1934210699,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 55561772,
            "rowCount" : 1984349,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [c_customer_sk#481], [c_customer_sk#481, sum((cast(ss_quantity#467 as decimal(10,0)) * ss_sales_price#470)) AS ssales#403] "
          },
          "56" : {
            "sign" : -2079294392,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 71389876192,
            "rowCount" : 2230933631,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ws_sold_date_sk#174 = d_date_sk#563) "
          },
          "55" : {
            "sign" : 2065671769,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 53542407144,
            "rowCount" : 2230933631,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_bill_customer_sk#144, ws_quantity#158, ws_list_price#160] "
          },
          "26" : {
            "sign" : 739645252,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 24000000,
            "rowCount" : 2000000,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [c_customer_sk#481], ShuffleQueryStage 4 "
          },
          "50" : {
            "sign" : -1093617969,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 6601125024,
            "rowCount" : 275046876,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ss_customer_sk#460, ss_quantity#467, ss_sales_price#470], ShuffleQueryStage 8 "
          },
          "37" : {
            "sign" : 2051540096,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 355962,
            "rowCount" : 1447,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (d_year#436 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#430)) "
          },
          "68" : {
            "sign" : 998370159,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 23812188,
            "rowCount" : 1984349,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_customer_sk#481] "
          },
          "61" : {
            "sign" : 2022277624,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 650043352080000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [item_sk#398] "
          },
          "13" : {
            "sign" : 1981268591,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 650043352080000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [item_sk#398] "
          },
          "46" : {
            "sign" : 789941336,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 55561772,
            "rowCount" : 1984349,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(ssales#403) AND (cast(ssales#403 as decimal(38,8)) > (0.950000 * scalar-subquery#404 []))) "
          },
          "24" : {
            "sign" : 1908847787,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 7701230628,
            "rowCount" : 275043951,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_customer_sk#460 = c_customer_sk#481) "
          },
          "83" : {
            "sign" : 457576906,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 6601125024,
            "rowCount" : 275046876,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ss_customer_sk#460, ss_quantity#467, ss_sales_price#470], ShuffleQueryStage 25 "
          },
          "35" : {
            "sign" : -977156952,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#407, ss_item_sk#408, ss_customer_sk#409, ss_cdemo_sk#410, ss_hdemo_sk#411, ss_addr_sk#412, ss_store_sk#413, ss_promo_sk#414, ss_ticket_number#415L, ss_quantity#416, ss_wholesale_cost#417, ss_list_price#418, ss_sales_price#419, ss_ext_discount_amt#420, ss_ext_sales_price#421, ss_ext_wholesale_cost#422, ss_ext_list_price#423, ss_ext_tax#424, ss_coupon_amt#425, ss_net_paid#426, ss_net_paid_inc_tax#427, ss_net_profit#428, ss_sold_date_sk#429], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "16" : {
            "sign" : -2009662925,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 1950130056240000,
            "rowCount" : 54170279340000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date#41, i_item_sk#67, substr(i_item_desc#71, 1, 30) AS _groupingexpression#608] "
          },
          "79" : {
            "sign" : -639744623,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 55561772,
            "rowCount" : 1984349,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(ssales#403) AND (cast(ssales#403 as decimal(38,8)) > (0.950000 * scalar-subquery#404 []))) "
          },
          "5" : {
            "sign" : -1523964623,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 8150025186,
            "rowCount" : 142982898,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_quantity#124, cs_list_price#126, c_first_name#507, c_last_name#508] "
          },
          "72" : {
            "sign" : 914322748,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 7701230628,
            "rowCount" : 275043951,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_customer_sk#460 = c_customer_sk#481) "
          },
          "10" : {
            "sign" : -1537602824,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 3991579424,
            "rowCount" : 142556408,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_bill_customer_sk#109, cs_quantity#124, cs_list_price#126, cs_sold_date_sk#140] "
          },
          "59" : {
            "sign" : 910944340,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 2302899232,
            "rowCount" : 71965601,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (ws_item_sk#143 = item_sk#398) "
          },
          "48" : {
            "sign" : 47435418,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 6601054824,
            "rowCount" : 275043951,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_quantity#467, ss_sales_price#470, c_customer_sk#481] "
          },
          "21" : {
            "sign" : -1901984732,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 55561772,
            "rowCount" : 1984349,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(ssales#403) AND (cast(ssales#403 as decimal(38,8)) > (0.950000 * scalar-subquery#404 []))) "
          },
          "76" : {
            "sign" : 1645687881,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 98000000,
            "rowCount" : 2000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (c_customer_sk#545 = c_customer_sk#481) "
          },
          "54" : {
            "sign" : 2038011901,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 4702228440,
            "rowCount" : 72341976,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ws_bill_customer_sk#144 = c_customer_sk#545) "
          },
          "43" : {
            "sign" : -528156139,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 98000000,
            "rowCount" : 2000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (c_customer_sk#499 = c_customer_sk#481) "
          },
          "65" : {
            "sign" : -1904280941,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 2166811173600000,
            "rowCount" : 54170279340000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_item_sk#17 = i_item_sk#67) "
          },
          "71" : {
            "sign" : 82168585,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 6601054824,
            "rowCount" : 275043951,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_quantity#467, ss_sales_price#470, c_customer_sk#481] "
          },
          "57" : {
            "sign" : -433298353,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 2015036828,
            "rowCount" : 71965601,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (ws_bill_customer_sk#144 = c_customer_sk#481) "
          },
          "32" : {
            "sign" : 305748262,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 8497298720,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#429 = d_date_sk#430) "
          },
          "80" : {
            "sign" : 2102197308,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 55561772,
            "rowCount" : 1984349,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [c_customer_sk#481], [c_customer_sk#481, sum((cast(ss_quantity#467 as decimal(10,0)) * ss_sales_price#470)) AS ssales#403] "
          },
          "82" : {
            "sign" : -1025989668,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 7701230628,
            "rowCount" : 275043951,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_customer_sk#460 = c_customer_sk#481) "
          },
          "49" : {
            "sign" : -1437901541,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 7701230628,
            "rowCount" : 275043951,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_customer_sk#460 = c_customer_sk#481) "
          },
          "6" : {
            "sign" : 1133093440,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 9293888370,
            "rowCount" : 142982898,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cs_bill_customer_sk#109 = c_customer_sk#499) "
          },
          "36" : {
            "sign" : 1217444409,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 17364,
            "rowCount" : 1447,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#430] "
          },
          "1" : {
            "sign" : -1256479583,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
            "sizeInBytes" : 3297281434,
            "rowCount" : 54053794,
            "isRuntime" : false,
            "predicate" : " (unknown) LocalLimit Arguments: 100 "
          },
          "39" : {
            "sign" : 1085635783,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 24000000,
            "rowCount" : 2000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_customer_sk#89] "
          },
          "17" : {
            "sign" : 566394868,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 2166811173600000,
            "rowCount" : 54170279340000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_item_sk#17 = i_item_sk#67) "
          },
          "25" : {
            "sign" : -1093618124,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 6601125024,
            "rowCount" : 275046876,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ss_customer_sk#460, ss_quantity#467, ss_sales_price#470], ShuffleQueryStage 3 "
          },
          "60" : {
            "sign" : 1832837103,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 2302899232,
            "rowCount" : 71965601,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ws_item_sk#143, ws_bill_customer_sk#144, ws_quantity#158, ws_list_price#160, ws_sold_date_sk#174], ShuffleQueryStage 11 "
          },
          "14" : {
            "sign" : 1045330691,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 1083405586800000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (cnt#400L > 4) "
          },
          "47" : {
            "sign" : 431587195,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 55561772,
            "rowCount" : 1984349,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [c_customer_sk#481], [c_customer_sk#481, sum((cast(ss_quantity#467 as decimal(10,0)) * ss_sales_price#470)) AS ssales#403] "
          },
          "31" : {
            "sign" : 1802383537,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 6372974040,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_customer_sk#409, ss_quantity#416, ss_sales_price#419] "
          },
          "69" : {
            "sign" : -1882899317,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 55561772,
            "rowCount" : 1984349,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(ssales#403) AND (cast(ssales#403 as decimal(38,8)) > (0.950000 * scalar-subquery#404 []))) "
          },
          "58" : {
            "sign" : -1718060309,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 2015036828,
            "rowCount" : 71965601,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_bill_customer_sk#144, ws_quantity#158, ws_list_price#160, ws_sold_date_sk#174] "
          },
          "64" : {
            "sign" : 1825233538,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 1950130056240000,
            "rowCount" : 54170279340000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date#41, i_item_sk#67, substr(i_item_desc#71, 1, 30) AS _groupingexpression#608] "
          },
          "53" : {
            "sign" : 1873577481,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 4123492632,
            "rowCount" : 72341976,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_quantity#158, ws_list_price#160, c_first_name#553, c_last_name#554] "
          },
          "42" : {
            "sign" : 1758754844,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1048824,
            "rowCount" : 31,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#517], BroadcastQueryStage 5 "
          },
          "75" : {
            "sign" : -2138347845,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1048824,
            "rowCount" : 31,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#563], BroadcastQueryStage 21 "
          },
          "0" : {
            "sign" : -616519630,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
            "sizeInBytes" : 6400,
            "rowCount" : 100,
            "isRuntime" : false,
            "predicate" : " (unknown) GlobalLimit Arguments: 100 "
          },
          "20" : {
            "sign" : 2123397918,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 23812188,
            "rowCount" : 1984349,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_customer_sk#481] "
          },
          "27" : {
            "sign" : -582481967,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 24,
            "rowCount" : 1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [max(csales#401) AS tpcds_cmax#402] "
          },
          "70" : {
            "sign" : -1381279908,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 55561772,
            "rowCount" : 1984349,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [c_customer_sk#481], [c_customer_sk#481, sum((cast(ss_quantity#467 as decimal(10,0)) * ss_sales_price#470)) AS ssales#403] "
          },
          "2" : {
            "sign" : -1336807780,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 3297281434,
            "rowCount" : 54053794,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [c_last_name#508 ASC NULLS FIRST, c_first_name#507 ASC NULLS FIRST, sales#391 ASC NULLS FIRST], true "
          },
          "38" : {
            "sign" : -358797686,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#430, d_date_id#431, d_date#432, d_month_seq#433, d_week_seq#434, d_quarter_seq#435, d_year#436, d_dow#437, d_moy#438, d_dom#439, d_qoy#440, d_fy_year#441, d_fy_quarter_seq#442, d_fy_week_seq#443, d_day_name#444, d_quarter_name#445, d_holiday#446, d_weekend#447, d_following_holiday#448, d_first_dom#449, d_last_dom#450, d_same_day_ly#451, d_same_day_lq#452, d_current_day#453, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "81" : {
            "sign" : -2121928113,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 6601054824,
            "rowCount" : 275043951,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_quantity#467, ss_sales_price#470, c_customer_sk#481] "
          },
          "18" : {
            "sign" : -1070535532,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 4248649360,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ss_item_sk#17, d_date#41], ShuffleQueryStage 28 "
          },
          "30" : {
            "sign" : -949612920,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 7701230628,
            "rowCount" : 275043951,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_customer_sk#409 = c_customer_sk#89) "
          },
          "7" : {
            "sign" : -758780695,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 106061967552,
            "rowCount" : 4419248648,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_bill_customer_sk#109, cs_quantity#124, cs_list_price#126] "
          },
          "29" : {
            "sign" : -1338930356,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 6601054824,
            "rowCount" : 275043951,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_quantity#416, ss_sales_price#419, c_customer_sk#89] "
          },
          "41" : {
            "sign" : -576393737,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 500000000,
            "rowCount" : 2000000,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [c_customer_sk#89, c_customer_id#90, c_current_cdemo_sk#91, c_current_hdemo_sk#92, c_current_addr_sk#93, c_first_shipto_date_sk#94, c_first_sales_date_sk#95, c_salutation#96, c_first_name#97, c_last_name#98, c_preferred_cust_flag#99, c_birth_day#100, c_birth_month#101, c_birth_year#102, c_birth_country#103, c_login#104, c_email_address#105, c_last_review_date#106], `spark_catalog`.`tpcds_100`.`customer`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "63" : {
            "sign" : 1782114115,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 1083405586800000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [_groupingexpression#608, i_item_sk#67, d_date#41], [i_item_sk#67 AS item_sk#398, count(1) AS cnt#400L] "
          },
          "3" : {
            "sign" : 225600940,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Union",
            "sizeInBytes" : 3297281434,
            "rowCount" : 54053794,
            "isRuntime" : false,
            "predicate" : " (unknown) Union Arguments: false, false "
          },
          "74" : {
            "sign" : 1454164916,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 24000000,
            "rowCount" : 2000000,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [c_customer_sk#481], ShuffleQueryStage 19 "
          },
          "52" : {
            "sign" : 1307009313,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 1648640717,
            "rowCount" : 27026897,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [c_last_name#554, c_first_name#553], [c_last_name#554, c_first_name#553, sum((cast(ws_quantity#158 as decimal(10,0)) * ws_list_price#160)) AS sales#394] "
          },
          "28" : {
            "sign" : -660295919,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 47624376,
            "rowCount" : 1984349,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [c_customer_sk#89], [sum((cast(ss_quantity#416 as decimal(10,0)) * ss_sales_price#419)) AS csales#401] "
          }
        },
        "links" : [ {
          "fromId" : 12,
          "fromName" : "LogicalQueryStage",
          "toId" : 11,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 18,
          "fromName" : "LogicalQueryStage",
          "toId" : 17,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 19,
          "fromName" : "LogicalQueryStage",
          "toId" : 17,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 17,
          "fromName" : "Join",
          "toId" : 16,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 16,
          "fromName" : "Project",
          "toId" : 15,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 15,
          "fromName" : "Aggregate",
          "toId" : 14,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 14,
          "fromName" : "Filter",
          "toId" : 13,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 13,
          "fromName" : "Project",
          "toId" : 11,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "Join",
          "toId" : 10,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "Project",
          "toId" : 9,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 25,
          "fromName" : "LogicalQueryStage",
          "toId" : 24,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 26,
          "fromName" : "LogicalQueryStage",
          "toId" : 24,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 24,
          "fromName" : "Join",
          "toId" : 23,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 23,
          "fromName" : "Project",
          "toId" : 22,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 22,
          "fromName" : "Aggregate",
          "toId" : 21,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 35,
          "fromName" : "LogicalRelation",
          "toId" : 34,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 38,
          "fromName" : "LogicalRelation",
          "toId" : 37,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 37,
          "fromName" : "Filter",
          "toId" : 36,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 36,
          "fromName" : "Project",
          "toId" : 34,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 34,
          "fromName" : "Filter",
          "toId" : 33,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 33,
          "fromName" : "Project",
          "toId" : 32,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 36,
          "fromName" : "Project",
          "toId" : 32,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 32,
          "fromName" : "Join",
          "toId" : 31,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 31,
          "fromName" : "Project",
          "toId" : 30,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 41,
          "fromName" : "LogicalRelation",
          "toId" : 40,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 40,
          "fromName" : "Filter",
          "toId" : 39,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 39,
          "fromName" : "Project",
          "toId" : 30,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 30,
          "fromName" : "Join",
          "toId" : 29,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 29,
          "fromName" : "Project",
          "toId" : 28,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 28,
          "fromName" : "Aggregate",
          "toId" : 27,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 27,
          "fromName" : "Aggregate",
          "toId" : 21,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 21,
          "fromName" : "Filter",
          "toId" : 20,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 20,
          "fromName" : "Project",
          "toId" : 9,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "Join",
          "toId" : 8,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 42,
          "fromName" : "LogicalQueryStage",
          "toId" : 8,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "Join",
          "toId" : 7,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Project",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 44,
          "fromName" : "LogicalQueryStage",
          "toId" : 43,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 50,
          "fromName" : "LogicalQueryStage",
          "toId" : 49,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 51,
          "fromName" : "LogicalQueryStage",
          "toId" : 49,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 49,
          "fromName" : "Join",
          "toId" : 48,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 48,
          "fromName" : "Project",
          "toId" : 47,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 47,
          "fromName" : "Aggregate",
          "toId" : 46,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 27,
          "fromName" : "Aggregate",
          "toId" : 46,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 46,
          "fromName" : "Filter",
          "toId" : 45,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 45,
          "fromName" : "Project",
          "toId" : 43,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 43,
          "fromName" : "Join",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Join",
          "toId" : 5,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Project",
          "toId" : 4,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Aggregate",
          "toId" : 3,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 60,
          "fromName" : "LogicalQueryStage",
          "toId" : 59,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 66,
          "fromName" : "LogicalQueryStage",
          "toId" : 65,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 67,
          "fromName" : "LogicalQueryStage",
          "toId" : 65,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 65,
          "fromName" : "Join",
          "toId" : 64,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 64,
          "fromName" : "Project",
          "toId" : 63,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 63,
          "fromName" : "Aggregate",
          "toId" : 62,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 62,
          "fromName" : "Filter",
          "toId" : 61,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 61,
          "fromName" : "Project",
          "toId" : 59,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 59,
          "fromName" : "Join",
          "toId" : 58,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 58,
          "fromName" : "Project",
          "toId" : 57,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 73,
          "fromName" : "LogicalQueryStage",
          "toId" : 72,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 74,
          "fromName" : "LogicalQueryStage",
          "toId" : 72,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 72,
          "fromName" : "Join",
          "toId" : 71,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 71,
          "fromName" : "Project",
          "toId" : 70,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 70,
          "fromName" : "Aggregate",
          "toId" : 69,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 27,
          "fromName" : "Aggregate",
          "toId" : 69,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 69,
          "fromName" : "Filter",
          "toId" : 68,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 68,
          "fromName" : "Project",
          "toId" : 57,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 57,
          "fromName" : "Join",
          "toId" : 56,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 75,
          "fromName" : "LogicalQueryStage",
          "toId" : 56,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 56,
          "fromName" : "Join",
          "toId" : 55,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 55,
          "fromName" : "Project",
          "toId" : 54,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 77,
          "fromName" : "LogicalQueryStage",
          "toId" : 76,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 83,
          "fromName" : "LogicalQueryStage",
          "toId" : 82,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 84,
          "fromName" : "LogicalQueryStage",
          "toId" : 82,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 82,
          "fromName" : "Join",
          "toId" : 81,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 81,
          "fromName" : "Project",
          "toId" : 80,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 80,
          "fromName" : "Aggregate",
          "toId" : 79,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 27,
          "fromName" : "Aggregate",
          "toId" : 79,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 79,
          "fromName" : "Filter",
          "toId" : 78,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 78,
          "fromName" : "Project",
          "toId" : 76,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 76,
          "fromName" : "Join",
          "toId" : 54,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 54,
          "fromName" : "Join",
          "toId" : 53,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 53,
          "fromName" : "Project",
          "toId" : 52,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 52,
          "fromName" : "Aggregate",
          "toId" : 3,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Union",
          "toId" : 2,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "LocalLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "LocalLimit",
          "toId" : 0,
          "toName" : "GlobalLimit",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [c_last_name#508 ASC NULLS FIRST, c_first_name#507 ASC NULLS FIRST, sales#391 ASC NULLS FIRST], true\n      +- Union false, false\n         :- Aggregate [c_last_name#508, c_first_name#507], [c_last_name#508, c_first_name#507, sum((cast(cs_quantity#124 as decimal(10,0)) * cs_list_price#126)) AS sales#391]\n         :  +- Project [cs_quantity#124, cs_list_price#126, c_first_name#507, c_last_name#508]\n         :     +- Join Inner, (cs_bill_customer_sk#109 = c_customer_sk#499)\n         :        :- Project [cs_bill_customer_sk#109, cs_quantity#124, cs_list_price#126]\n         :        :  +- Join Inner, (cs_sold_date_sk#140 = d_date_sk#517)\n         :        :     :- Join LeftSemi, (cs_bill_customer_sk#109 = c_customer_sk#481)\n         :        :     :  :- Project [cs_bill_customer_sk#109, cs_quantity#124, cs_list_price#126, cs_sold_date_sk#140]\n         :        :     :  :  +- Join LeftSemi, (cs_item_sk#121 = item_sk#398)\n         :        :     :  :     :- LogicalQueryStage Project [cs_bill_customer_sk#109, cs_item_sk#121, cs_quantity#124, cs_list_price#126, cs_sold_date_sk#140], ShuffleQueryStage 0\n         :        :     :  :     +- Project [item_sk#398]\n         :        :     :  :        +- Filter (cnt#400L > 4)\n         :        :     :  :           +- Aggregate [_groupingexpression#608, i_item_sk#67, d_date#41], [i_item_sk#67 AS item_sk#398, count(1) AS cnt#400L]\n         :        :     :  :              +- Project [d_date#41, i_item_sk#67, substr(i_item_desc#71, 1, 30) AS _groupingexpression#608]\n         :        :     :  :                 +- Join Inner, (ss_item_sk#17 = i_item_sk#67)\n         :        :     :  :                    :- LogicalQueryStage Project [ss_item_sk#17, d_date#41], ShuffleQueryStage 28\n         :        :     :  :                    +- LogicalQueryStage Project [i_item_sk#67, i_item_desc#71], ShuffleQueryStage 2\n         :        :     :  +- Project [c_customer_sk#481]\n         :        :     :     +- Filter (isnotnull(ssales#403) AND (cast(ssales#403 as decimal(38,8)) > (0.950000 * scalar-subquery#404 [])))\n         :        :     :        :  +- Aggregate [max(csales#401) AS tpcds_cmax#402]\n         :        :     :        :     +- Aggregate [c_customer_sk#89], [sum((cast(ss_quantity#416 as decimal(10,0)) * ss_sales_price#419)) AS csales#401]\n         :        :     :        :        +- Project [ss_quantity#416, ss_sales_price#419, c_customer_sk#89]\n         :        :     :        :           +- Join Inner, (ss_customer_sk#409 = c_customer_sk#89)\n         :        :     :        :              :- Project [ss_customer_sk#409, ss_quantity#416, ss_sales_price#419]\n         :        :     :        :              :  +- Join Inner, (ss_sold_date_sk#429 = d_date_sk#430)\n         :        :     :        :              :     :- Project [ss_customer_sk#409, ss_quantity#416, ss_sales_price#419, ss_sold_date_sk#429]\n         :        :     :        :              :     :  +- Filter ((isnotnull(ss_customer_sk#409) AND isnotnull(ss_sold_date_sk#429)) AND dynamicpruning#610 [ss_sold_date_sk#429])\n         :        :     :        :              :     :     :  +- Project [d_date_sk#430]\n         :        :     :        :              :     :     :     +- Filter (d_year#436 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#430))\n         :        :     :        :              :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#430,d_date_id#431,d_date#432,d_month_seq#433,d_week_seq#434,d_quarter_seq#435,d_year#436,d_dow#437,d_moy#438,d_dom#439,d_qoy#440,d_fy_year#441,d_fy_quarter_seq#442,d_fy_week_seq#443,d_day_name#444,d_quarter_name#445,d_holiday#446,d_weekend#447,d_following_holiday#448,d_first_dom#449,d_last_dom#450,d_same_day_ly#451,d_same_day_lq#452,d_current_day#453,... 4 more fields] parquet\n         :        :     :        :              :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#407,ss_item_sk#408,ss_customer_sk#409,ss_cdemo_sk#410,ss_hdemo_sk#411,ss_addr_sk#412,ss_store_sk#413,ss_promo_sk#414,ss_ticket_number#415L,ss_quantity#416,ss_wholesale_cost#417,ss_list_price#418,ss_sales_price#419,ss_ext_discount_amt#420,ss_ext_sales_price#421,ss_ext_wholesale_cost#422,ss_ext_list_price#423,ss_ext_tax#424,ss_coupon_amt#425,ss_net_paid#426,ss_net_paid_inc_tax#427,ss_net_profit#428,ss_sold_date_sk#429] parquet\n         :        :     :        :              :     +- Project [d_date_sk#430]\n         :        :     :        :              :        +- Filter (d_year#436 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#430))\n         :        :     :        :              :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#430,d_date_id#431,d_date#432,d_month_seq#433,d_week_seq#434,d_quarter_seq#435,d_year#436,d_dow#437,d_moy#438,d_dom#439,d_qoy#440,d_fy_year#441,d_fy_quarter_seq#442,d_fy_week_seq#443,d_day_name#444,d_quarter_name#445,d_holiday#446,d_weekend#447,d_following_holiday#448,d_first_dom#449,d_last_dom#450,d_same_day_ly#451,d_same_day_lq#452,d_current_day#453,... 4 more fields] parquet\n         :        :     :        :              +- Project [c_customer_sk#89]\n         :        :     :        :                 +- Filter isnotnull(c_customer_sk#89)\n         :        :     :        :                    +- Relation spark_catalog.tpcds_100.customer[c_customer_sk#89,c_customer_id#90,c_current_cdemo_sk#91,c_current_hdemo_sk#92,c_current_addr_sk#93,c_first_shipto_date_sk#94,c_first_sales_date_sk#95,c_salutation#96,c_first_name#97,c_last_name#98,c_preferred_cust_flag#99,c_birth_day#100,c_birth_month#101,c_birth_year#102,c_birth_country#103,c_login#104,c_email_address#105,c_last_review_date#106] parquet\n         :        :     :        +- Aggregate [c_customer_sk#481], [c_customer_sk#481, sum((cast(ss_quantity#467 as decimal(10,0)) * ss_sales_price#470)) AS ssales#403]\n         :        :     :           +- Project [ss_quantity#467, ss_sales_price#470, c_customer_sk#481]\n         :        :     :              +- Join Inner, (ss_customer_sk#460 = c_customer_sk#481)\n         :        :     :                 :- LogicalQueryStage Project [ss_customer_sk#460, ss_quantity#467, ss_sales_price#470], ShuffleQueryStage 3\n         :        :     :                 +- LogicalQueryStage Project [c_customer_sk#481], ShuffleQueryStage 4\n         :        :     +- LogicalQueryStage Project [d_date_sk#517], BroadcastQueryStage 5\n         :        +- Join LeftSemi, (c_customer_sk#499 = c_customer_sk#481)\n         :           :- LogicalQueryStage Project [c_customer_sk#499, c_first_name#507, c_last_name#508], ShuffleQueryStage 6\n         :           +- Project [c_customer_sk#481]\n         :              +- Filter (isnotnull(ssales#403) AND (cast(ssales#403 as decimal(38,8)) > (0.950000 * scalar-subquery#404 [])))\n         :                 :  +- Aggregate [max(csales#401) AS tpcds_cmax#402]\n         :                 :     +- Aggregate [c_customer_sk#89], [sum((cast(ss_quantity#416 as decimal(10,0)) * ss_sales_price#419)) AS csales#401]\n         :                 :        +- Project [ss_quantity#416, ss_sales_price#419, c_customer_sk#89]\n         :                 :           +- Join Inner, (ss_customer_sk#409 = c_customer_sk#89)\n         :                 :              :- Project [ss_customer_sk#409, ss_quantity#416, ss_sales_price#419]\n         :                 :              :  +- Join Inner, (ss_sold_date_sk#429 = d_date_sk#430)\n         :                 :              :     :- Project [ss_customer_sk#409, ss_quantity#416, ss_sales_price#419, ss_sold_date_sk#429]\n         :                 :              :     :  +- Filter ((isnotnull(ss_customer_sk#409) AND isnotnull(ss_sold_date_sk#429)) AND dynamicpruning#610 [ss_sold_date_sk#429])\n         :                 :              :     :     :  +- Project [d_date_sk#430]\n         :                 :              :     :     :     +- Filter (d_year#436 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#430))\n         :                 :              :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#430,d_date_id#431,d_date#432,d_month_seq#433,d_week_seq#434,d_quarter_seq#435,d_year#436,d_dow#437,d_moy#438,d_dom#439,d_qoy#440,d_fy_year#441,d_fy_quarter_seq#442,d_fy_week_seq#443,d_day_name#444,d_quarter_name#445,d_holiday#446,d_weekend#447,d_following_holiday#448,d_first_dom#449,d_last_dom#450,d_same_day_ly#451,d_same_day_lq#452,d_current_day#453,... 4 more fields] parquet\n         :                 :              :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#407,ss_item_sk#408,ss_customer_sk#409,ss_cdemo_sk#410,ss_hdemo_sk#411,ss_addr_sk#412,ss_store_sk#413,ss_promo_sk#414,ss_ticket_number#415L,ss_quantity#416,ss_wholesale_cost#417,ss_list_price#418,ss_sales_price#419,ss_ext_discount_amt#420,ss_ext_sales_price#421,ss_ext_wholesale_cost#422,ss_ext_list_price#423,ss_ext_tax#424,ss_coupon_amt#425,ss_net_paid#426,ss_net_paid_inc_tax#427,ss_net_profit#428,ss_sold_date_sk#429] parquet\n         :                 :              :     +- Project [d_date_sk#430]\n         :                 :              :        +- Filter (d_year#436 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#430))\n         :                 :              :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#430,d_date_id#431,d_date#432,d_month_seq#433,d_week_seq#434,d_quarter_seq#435,d_year#436,d_dow#437,d_moy#438,d_dom#439,d_qoy#440,d_fy_year#441,d_fy_quarter_seq#442,d_fy_week_seq#443,d_day_name#444,d_quarter_name#445,d_holiday#446,d_weekend#447,d_following_holiday#448,d_first_dom#449,d_last_dom#450,d_same_day_ly#451,d_same_day_lq#452,d_current_day#453,... 4 more fields] parquet\n         :                 :              +- Project [c_customer_sk#89]\n         :                 :                 +- Filter isnotnull(c_customer_sk#89)\n         :                 :                    +- Relation spark_catalog.tpcds_100.customer[c_customer_sk#89,c_customer_id#90,c_current_cdemo_sk#91,c_current_hdemo_sk#92,c_current_addr_sk#93,c_first_shipto_date_sk#94,c_first_sales_date_sk#95,c_salutation#96,c_first_name#97,c_last_name#98,c_preferred_cust_flag#99,c_birth_day#100,c_birth_month#101,c_birth_year#102,c_birth_country#103,c_login#104,c_email_address#105,c_last_review_date#106] parquet\n         :                 +- Aggregate [c_customer_sk#481], [c_customer_sk#481, sum((cast(ss_quantity#467 as decimal(10,0)) * ss_sales_price#470)) AS ssales#403]\n         :                    +- Project [ss_quantity#467, ss_sales_price#470, c_customer_sk#481]\n         :                       +- Join Inner, (ss_customer_sk#460 = c_customer_sk#481)\n         :                          :- LogicalQueryStage Project [ss_customer_sk#460, ss_quantity#467, ss_sales_price#470], ShuffleQueryStage 8\n         :                          +- LogicalQueryStage Project [c_customer_sk#481], ShuffleQueryStage 10\n         +- Aggregate [c_last_name#554, c_first_name#553], [c_last_name#554, c_first_name#553, sum((cast(ws_quantity#158 as decimal(10,0)) * ws_list_price#160)) AS sales#394]\n            +- Project [ws_quantity#158, ws_list_price#160, c_first_name#553, c_last_name#554]\n               +- Join Inner, (ws_bill_customer_sk#144 = c_customer_sk#545)\n                  :- Project [ws_bill_customer_sk#144, ws_quantity#158, ws_list_price#160]\n                  :  +- Join Inner, (ws_sold_date_sk#174 = d_date_sk#563)\n                  :     :- Join LeftSemi, (ws_bill_customer_sk#144 = c_customer_sk#481)\n                  :     :  :- Project [ws_bill_customer_sk#144, ws_quantity#158, ws_list_price#160, ws_sold_date_sk#174]\n                  :     :  :  +- Join LeftSemi, (ws_item_sk#143 = item_sk#398)\n                  :     :  :     :- LogicalQueryStage Project [ws_item_sk#143, ws_bill_customer_sk#144, ws_quantity#158, ws_list_price#160, ws_sold_date_sk#174], ShuffleQueryStage 11\n                  :     :  :     +- Project [item_sk#398]\n                  :     :  :        +- Filter (cnt#400L > 4)\n                  :     :  :           +- Aggregate [_groupingexpression#608, i_item_sk#67, d_date#41], [i_item_sk#67 AS item_sk#398, count(1) AS cnt#400L]\n                  :     :  :              +- Project [d_date#41, i_item_sk#67, substr(i_item_desc#71, 1, 30) AS _groupingexpression#608]\n                  :     :  :                 +- Join Inner, (ss_item_sk#17 = i_item_sk#67)\n                  :     :  :                    :- LogicalQueryStage Project [ss_item_sk#17, d_date#41], ShuffleQueryStage 30\n                  :     :  :                    +- LogicalQueryStage Project [i_item_sk#67, i_item_desc#71], ShuffleQueryStage 15\n                  :     :  +- Project [c_customer_sk#481]\n                  :     :     +- Filter (isnotnull(ssales#403) AND (cast(ssales#403 as decimal(38,8)) > (0.950000 * scalar-subquery#404 [])))\n                  :     :        :  +- Aggregate [max(csales#401) AS tpcds_cmax#402]\n                  :     :        :     +- Aggregate [c_customer_sk#89], [sum((cast(ss_quantity#416 as decimal(10,0)) * ss_sales_price#419)) AS csales#401]\n                  :     :        :        +- Project [ss_quantity#416, ss_sales_price#419, c_customer_sk#89]\n                  :     :        :           +- Join Inner, (ss_customer_sk#409 = c_customer_sk#89)\n                  :     :        :              :- Project [ss_customer_sk#409, ss_quantity#416, ss_sales_price#419]\n                  :     :        :              :  +- Join Inner, (ss_sold_date_sk#429 = d_date_sk#430)\n                  :     :        :              :     :- Project [ss_customer_sk#409, ss_quantity#416, ss_sales_price#419, ss_sold_date_sk#429]\n                  :     :        :              :     :  +- Filter ((isnotnull(ss_customer_sk#409) AND isnotnull(ss_sold_date_sk#429)) AND dynamicpruning#610 [ss_sold_date_sk#429])\n                  :     :        :              :     :     :  +- Project [d_date_sk#430]\n                  :     :        :              :     :     :     +- Filter (d_year#436 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#430))\n                  :     :        :              :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#430,d_date_id#431,d_date#432,d_month_seq#433,d_week_seq#434,d_quarter_seq#435,d_year#436,d_dow#437,d_moy#438,d_dom#439,d_qoy#440,d_fy_year#441,d_fy_quarter_seq#442,d_fy_week_seq#443,d_day_name#444,d_quarter_name#445,d_holiday#446,d_weekend#447,d_following_holiday#448,d_first_dom#449,d_last_dom#450,d_same_day_ly#451,d_same_day_lq#452,d_current_day#453,... 4 more fields] parquet\n                  :     :        :              :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#407,ss_item_sk#408,ss_customer_sk#409,ss_cdemo_sk#410,ss_hdemo_sk#411,ss_addr_sk#412,ss_store_sk#413,ss_promo_sk#414,ss_ticket_number#415L,ss_quantity#416,ss_wholesale_cost#417,ss_list_price#418,ss_sales_price#419,ss_ext_discount_amt#420,ss_ext_sales_price#421,ss_ext_wholesale_cost#422,ss_ext_list_price#423,ss_ext_tax#424,ss_coupon_amt#425,ss_net_paid#426,ss_net_paid_inc_tax#427,ss_net_profit#428,ss_sold_date_sk#429] parquet\n                  :     :        :              :     +- Project [d_date_sk#430]\n                  :     :        :              :        +- Filter (d_year#436 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#430))\n                  :     :        :              :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#430,d_date_id#431,d_date#432,d_month_seq#433,d_week_seq#434,d_quarter_seq#435,d_year#436,d_dow#437,d_moy#438,d_dom#439,d_qoy#440,d_fy_year#441,d_fy_quarter_seq#442,d_fy_week_seq#443,d_day_name#444,d_quarter_name#445,d_holiday#446,d_weekend#447,d_following_holiday#448,d_first_dom#449,d_last_dom#450,d_same_day_ly#451,d_same_day_lq#452,d_current_day#453,... 4 more fields] parquet\n                  :     :        :              +- Project [c_customer_sk#89]\n                  :     :        :                 +- Filter isnotnull(c_customer_sk#89)\n                  :     :        :                    +- Relation spark_catalog.tpcds_100.customer[c_customer_sk#89,c_customer_id#90,c_current_cdemo_sk#91,c_current_hdemo_sk#92,c_current_addr_sk#93,c_first_shipto_date_sk#94,c_first_sales_date_sk#95,c_salutation#96,c_first_name#97,c_last_name#98,c_preferred_cust_flag#99,c_birth_day#100,c_birth_month#101,c_birth_year#102,c_birth_country#103,c_login#104,c_email_address#105,c_last_review_date#106] parquet\n                  :     :        +- Aggregate [c_customer_sk#481], [c_customer_sk#481, sum((cast(ss_quantity#467 as decimal(10,0)) * ss_sales_price#470)) AS ssales#403]\n                  :     :           +- Project [ss_quantity#467, ss_sales_price#470, c_customer_sk#481]\n                  :     :              +- Join Inner, (ss_customer_sk#460 = c_customer_sk#481)\n                  :     :                 :- LogicalQueryStage Project [ss_customer_sk#460, ss_quantity#467, ss_sales_price#470], ShuffleQueryStage 17\n                  :     :                 +- LogicalQueryStage Project [c_customer_sk#481], ShuffleQueryStage 19\n                  :     +- LogicalQueryStage Project [d_date_sk#563], BroadcastQueryStage 21\n                  +- Join LeftSemi, (c_customer_sk#545 = c_customer_sk#481)\n                     :- LogicalQueryStage Project [c_customer_sk#545, c_first_name#553, c_last_name#554], ShuffleQueryStage 23\n                     +- Project [c_customer_sk#481]\n                        +- Filter (isnotnull(ssales#403) AND (cast(ssales#403 as decimal(38,8)) > (0.950000 * scalar-subquery#404 [])))\n                           :  +- Aggregate [max(csales#401) AS tpcds_cmax#402]\n                           :     +- Aggregate [c_customer_sk#89], [sum((cast(ss_quantity#416 as decimal(10,0)) * ss_sales_price#419)) AS csales#401]\n                           :        +- Project [ss_quantity#416, ss_sales_price#419, c_customer_sk#89]\n                           :           +- Join Inner, (ss_customer_sk#409 = c_customer_sk#89)\n                           :              :- Project [ss_customer_sk#409, ss_quantity#416, ss_sales_price#419]\n                           :              :  +- Join Inner, (ss_sold_date_sk#429 = d_date_sk#430)\n                           :              :     :- Project [ss_customer_sk#409, ss_quantity#416, ss_sales_price#419, ss_sold_date_sk#429]\n                           :              :     :  +- Filter ((isnotnull(ss_customer_sk#409) AND isnotnull(ss_sold_date_sk#429)) AND dynamicpruning#610 [ss_sold_date_sk#429])\n                           :              :     :     :  +- Project [d_date_sk#430]\n                           :              :     :     :     +- Filter (d_year#436 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#430))\n                           :              :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#430,d_date_id#431,d_date#432,d_month_seq#433,d_week_seq#434,d_quarter_seq#435,d_year#436,d_dow#437,d_moy#438,d_dom#439,d_qoy#440,d_fy_year#441,d_fy_quarter_seq#442,d_fy_week_seq#443,d_day_name#444,d_quarter_name#445,d_holiday#446,d_weekend#447,d_following_holiday#448,d_first_dom#449,d_last_dom#450,d_same_day_ly#451,d_same_day_lq#452,d_current_day#453,... 4 more fields] parquet\n                           :              :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#407,ss_item_sk#408,ss_customer_sk#409,ss_cdemo_sk#410,ss_hdemo_sk#411,ss_addr_sk#412,ss_store_sk#413,ss_promo_sk#414,ss_ticket_number#415L,ss_quantity#416,ss_wholesale_cost#417,ss_list_price#418,ss_sales_price#419,ss_ext_discount_amt#420,ss_ext_sales_price#421,ss_ext_wholesale_cost#422,ss_ext_list_price#423,ss_ext_tax#424,ss_coupon_amt#425,ss_net_paid#426,ss_net_paid_inc_tax#427,ss_net_profit#428,ss_sold_date_sk#429] parquet\n                           :              :     +- Project [d_date_sk#430]\n                           :              :        +- Filter (d_year#436 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#430))\n                           :              :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#430,d_date_id#431,d_date#432,d_month_seq#433,d_week_seq#434,d_quarter_seq#435,d_year#436,d_dow#437,d_moy#438,d_dom#439,d_qoy#440,d_fy_year#441,d_fy_quarter_seq#442,d_fy_week_seq#443,d_day_name#444,d_quarter_name#445,d_holiday#446,d_weekend#447,d_following_holiday#448,d_first_dom#449,d_last_dom#450,d_same_day_ly#451,d_same_day_lq#452,d_current_day#453,... 4 more fields] parquet\n                           :              +- Project [c_customer_sk#89]\n                           :                 +- Filter isnotnull(c_customer_sk#89)\n                           :                    +- Relation spark_catalog.tpcds_100.customer[c_customer_sk#89,c_customer_id#90,c_current_cdemo_sk#91,c_current_hdemo_sk#92,c_current_addr_sk#93,c_first_shipto_date_sk#94,c_first_sales_date_sk#95,c_salutation#96,c_first_name#97,c_last_name#98,c_preferred_cust_flag#99,c_birth_day#100,c_birth_month#101,c_birth_year#102,c_birth_country#103,c_login#104,c_email_address#105,c_last_review_date#106] parquet\n                           +- Aggregate [c_customer_sk#481], [c_customer_sk#481, sum((cast(ss_quantity#467 as decimal(10,0)) * ss_sales_price#470)) AS ssales#403]\n                              +- Project [ss_quantity#467, ss_sales_price#470, c_customer_sk#481]\n                                 +- Join Inner, (ss_customer_sk#460 = c_customer_sk#481)\n                                    :- LogicalQueryStage Project [ss_customer_sk#460, ss_quantity#467, ss_sales_price#470], ShuffleQueryStage 25\n                                    +- LogicalQueryStage Project [c_customer_sk#481], ShuffleQueryStage 27\n"
      },
      "IM" : {
        "inputSizeInBytes" : 42112805600,
        "inputRowCount" : 1858198745
      },
      "PD" : {
        "1" : [ 84280, 84280, 84280, 92709, 92709, 84280, 92709, 84280, 76619, 92709, 92709, 84280, 92709, 84280, 84280, 84280, 84280, 84280, 92709, 92709, 92709, 92709, 84280, 84280, 92709, 84280, 84280, 92709, 84280, 92709, 92709, 92709, 92709, 84280, 84280, 92709, 84280, 84280, 84280, 92709, 84280, 84280, 84280, 92709, 92709, 84280, 84280, 84280, 84280, 84280, 92709, 92709, 84280, 84280, 84280, 92709, 92709, 92709, 84280, 84280, 84280, 92709, 84280, 92709, 84280, 92709, 92709, 84280, 92709, 92709, 92709, 84280, 92709, 92709, 84280, 92709, 84280, 92709, 84280, 84280, 92709, 84280, 92709, 84280, 92709, 84280, 84280, 92709, 92709, 84280, 84280, 84280, 92709, 84280, 92709, 92709, 84280, 92709, 92709, 84280, 84280, 92709, 84280, 92709, 92709, 84280, 84280, 92709, 84280, 92709, 84280, 92709, 84280, 92709, 92709, 92709, 76619, 92709, 84280, 84280, 84280, 92709, 92709, 92709, 92709, 92709, 84280, 84280, 92709, 84280, 84280, 84280, 84280, 92709, 84280, 84280, 92709, 92709, 92709, 84280, 84280, 84280, 92709, 92709, 92709, 84280, 84280, 84280, 92709, 84280, 92709, 84280, 92709, 84280, 84280, 92709, 84280, 92709, 84280, 84280, 84280, 92709, 92709, 92709, 84280, 92709, 84280, 84280, 92709, 84280, 84280, 92709, 84280, 84280, 92709, 84280, 84280, 84280, 84280, 84280, 84280, 84280, 92709, 84280, 92709, 92709, 84280, 84280, 84280, 84280, 92709, 84280, 84280, 84280, 84280, 84280, 84280, 84280, 92709, 92709 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 16,
        "FinishedTasksNum" : 4,
        "FinishedTasksTotalTimeInMs" : 9813.0,
        "FinishedTasksDistributionInMs" : [ 1765.0, 1791.0, 1797.0, 4460.0, 4460.0 ]
      },
      "StartTimeInMs" : 1702226717272,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 153669,
        "IOBytes" : {
          "Total" : 22413875936,
          "Details" : {
            "IR" : 2921069097,
            "IW" : 0,
            "SR" : 12332414216,
            "SW" : 7160392623
          }
        }
      }
    }
  },
  "RuntimeQSs" : {
    "12" : {
      "QSLogical" : {
        "operators" : {
          "4" : {
            "sign" : -977156952,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 41806893656,
                "rowCount" : 275045353
              },
              "compileTime" : {
                "sizeInBytes" : 41806893656,
                "rowCount" : 275045353
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#407, ss_item_sk#408, ss_customer_sk#409, ss_cdemo_sk#410, ss_hdemo_sk#411, ss_addr_sk#412, ss_store_sk#413, ss_promo_sk#414, ss_ticket_number#415L, ss_quantity#416, ss_wholesale_cost#417, ss_list_price#418, ss_sales_price#419, ss_ext_discount_amt#420, ss_ext_sales_price#421, ss_ext_wholesale_cost#422, ss_ext_list_price#423, ss_ext_tax#424, ss_coupon_amt#425, ss_net_paid#426, ss_net_paid_inc_tax#427, ss_net_profit#428, ss_sold_date_sk#429], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "1" : {
            "sign" : 305748262,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 8497298720,
                "rowCount" : 265540585
              },
              "compileTime" : {
                "sizeInBytes" : 8497298720,
                "rowCount" : 265540585
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#429 = d_date_sk#430) "
          },
          "0" : {
            "sign" : 1802383537,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 6372974040,
                "rowCount" : 265540585
              },
              "compileTime" : {
                "sizeInBytes" : 6372974040,
                "rowCount" : 265540585
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_customer_sk#409, ss_quantity#416, ss_sales_price#419] "
          },
          "2" : {
            "sign" : -861776479,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 7354733484,
                "rowCount" : 262669053
              },
              "compileTime" : {
                "sizeInBytes" : 7354733484,
                "rowCount" : 262669053
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_customer_sk#409, ss_quantity#416, ss_sales_price#419, ss_sold_date_sk#429] "
          },
          "3" : {
            "sign" : 1565358831,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 39925696056,
                "rowCount" : 262669053
              },
              "compileTime" : {
                "sizeInBytes" : 39925696056,
                "rowCount" : 262669053
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(ss_customer_sk#409) AND isnotnull(ss_sold_date_sk#429)) AND dynamicpruning#610 [ss_sold_date_sk#429]) "
          }
        },
        "links" : [ {
          "fromId" : 4,
          "fromName" : "LogicalRelation",
          "toId" : 3,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Filter",
          "toId" : 2,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Project",
          "toId" : 1,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Join",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [ss_customer_sk#409, ss_quantity#416, ss_sales_price#419]\n+- Join Inner, (ss_sold_date_sk#429 = d_date_sk#430)\n   :- Project [ss_customer_sk#409, ss_quantity#416, ss_sales_price#419, ss_sold_date_sk#429]\n   :  +- Filter ((isnotnull(ss_customer_sk#409) AND isnotnull(ss_sold_date_sk#429)) AND dynamicpruning#610 [ss_sold_date_sk#429])\n   :     :  +- Project [d_date_sk#430]\n   :     :     +- Filter (d_year#436 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#430))\n   :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#430,d_date_id#431,d_date#432,d_month_seq#433,d_week_seq#434,d_quarter_seq#435,d_year#436,d_dow#437,d_moy#438,d_dom#439,d_qoy#440,d_fy_year#441,d_fy_quarter_seq#442,d_fy_week_seq#443,d_day_name#444,d_quarter_name#445,d_holiday#446,d_weekend#447,d_following_holiday#448,d_first_dom#449,d_last_dom#450,d_same_day_ly#451,d_same_day_lq#452,d_current_day#453,... 4 more fields] parquet\n   :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#407,ss_item_sk#408,ss_customer_sk#409,ss_cdemo_sk#410,ss_hdemo_sk#411,ss_addr_sk#412,ss_store_sk#413,ss_promo_sk#414,ss_ticket_number#415L,ss_quantity#416,ss_wholesale_cost#417,ss_list_price#418,ss_sales_price#419,ss_ext_discount_amt#420,ss_ext_sales_price#421,ss_ext_wholesale_cost#422,ss_ext_list_price#423,ss_ext_tax#424,ss_coupon_amt#425,ss_net_paid#426,ss_net_paid_inc_tax#427,ss_net_profit#428,ss_sold_date_sk#429] parquet\n   +- Project [d_date_sk#430]\n      +- Filter (d_year#436 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#430))\n         +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#430,d_date_id#431,d_date#432,d_month_seq#433,d_week_seq#434,d_quarter_seq#435,d_year#436,d_dow#437,d_moy#438,d_dom#439,d_qoy#440,d_fy_year#441,d_fy_quarter_seq#442,d_fy_week_seq#443,d_day_name#444,d_quarter_name#445,d_holiday#446,d_weekend#447,d_following_holiday#448,d_first_dom#449,d_last_dom#450,d_same_day_ly#451,d_same_day_lq#452,d_current_day#453,... 4 more fields] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "4" : {
            "sign" : 577108037,
            "className" : "org.apache.spark.sql.execution.adaptive.BroadcastQueryStageExec",
            "sizeInBytes" : 1060264,
            "rowCount" : 1461,
            "isRuntime" : true,
            "predicate" : " (unknown) BroadcastQueryStage Output [1]: [d_date_sk#430] Arguments: 0 "
          },
          "1" : {
            "sign" : 1364252733,
            "className" : "org.apache.spark.sql.execution.joins.BroadcastHashJoinExec",
            "sizeInBytes" : 8497298720,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) BroadcastHashJoin Left keys [1]: [ss_sold_date_sk#429] Right keys [1]: [d_date_sk#430] Join type: Inner Join condition: None "
          },
          "0" : {
            "sign" : -1419202942,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 6372974040,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [3]: [ss_customer_sk#409, ss_quantity#416, ss_sales_price#419] Input [5]: [ss_customer_sk#409, ss_quantity#416, ss_sales_price#419, ss_sold_date_sk#429, d_date_sk#430] "
          },
          "2" : {
            "sign" : 1955375088,
            "className" : "org.apache.spark.sql.execution.FilterExec",
            "sizeInBytes" : 7354733484,
            "rowCount" : 262669053,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Input [4]: [ss_customer_sk#409, ss_quantity#416, ss_sales_price#419, ss_sold_date_sk#429] Condition : isnotnull(ss_customer_sk#409) "
          },
          "3" : {
            "sign" : -608029997,
            "className" : "org.apache.spark.sql.execution.FileSourceScanExec",
            "sizeInBytes" : 7354733484,
            "rowCount" : 262669053,
            "isRuntime" : false,
            "predicate" : " (unknown) Scan parquet spark_catalog.tpcds_100.store_sales Output [4]: [ss_customer_sk#409, ss_quantity#416, ss_sales_price#419, ss_sold_date_sk#429] Batched: true Location: InMemoryFileIndex [hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/store_sales/ss_sold_date_sk=2450816, ... 1822 entries] PartitionFilters: [isnotnull(ss_sold_date_sk#429), dynamicpruningexpression(ss_sold_date_sk#429 IN dynamicpruning#610)] PushedFilters: [IsNotNull(ss_customer_sk)] ReadSchema: struct<ss_customer_sk:int,ss_quantity:int,ss_sales_price:decimal(7,2)> "
          }
        },
        "links" : [ {
          "fromId" : 3,
          "fromName" : "Scan parquet spark_catalog.tpcds_100.store_sales",
          "toId" : 2,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Filter",
          "toId" : 1,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "BroadcastQueryStage",
          "toId" : 1,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "BroadcastHashJoin",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [ss_customer_sk#409, ss_quantity#416, ss_sales_price#419]\n+- BroadcastHashJoin [ss_sold_date_sk#429], [d_date_sk#430], Inner, BuildRight, false\n   :- Filter isnotnull(ss_customer_sk#409)\n   :  +- FileScan parquet spark_catalog.tpcds_100.store_sales[ss_customer_sk#409,ss_quantity#416,ss_sales_price#419,ss_sold_date_sk#429] Batched: true, DataFilters: [isnotnull(ss_customer_sk#409)], Format: Parquet, Location: InMemoryFileIndex(1823 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/store_..., PartitionFilters: [isnotnull(ss_sold_date_sk#429), dynamicpruningexpression(ss_sold_date_sk#429 IN dynamicpruning#6..., PushedFilters: [IsNotNull(ss_customer_sk)], ReadSchema: struct<ss_customer_sk:int,ss_quantity:int,ss_sales_price:decimal(7,2)>\n   :        +- SubqueryBroadcast dynamicpruning#610, 0, [d_date_sk#430], [id=#6771]\n   :           +- AdaptiveSparkPlan isFinalPlan=false\n   :              +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=6768]\n   :                 +- Project [d_date_sk#430]\n   :                    +- Filter (d_year#436 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#430))\n   :                       +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#430,d_year#436] Batched: true, DataFilters: [d_year#436 IN (1999,2000,2001,2002), isnotnull(d_date_sk#430)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [In(d_year, [1999,2000,2001,2002]), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>\n   +- BroadcastQueryStage 0\n      +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=6642]\n         +- *(1) Project [d_date_sk#430]\n            +- *(1) Filter (d_year#436 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#430))\n               +- *(1) ColumnarToRow\n                  +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#430,d_year#436] Batched: true, DataFilters: [d_year#436 IN (1999,2000,2001,2002), isnotnull(d_date_sk#430)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [In(d_year, [1999,2000,2001,2002]), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>\n"
      },
      "IM" : {
        "inputSizeInBytes" : 7355793748,
        "inputRowCount" : 262670514
      },
      "InitialPartitionNum" : 0,
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 14,
        "FinishedTasksNum" : 6,
        "FinishedTasksTotalTimeInMs" : 158478.0,
        "FinishedTasksDistributionInMs" : [ 25727.0, 26185.0, 26335.0, 26878.0, 27024.0 ]
      },
      "QueryStageOptimizationId" : 13,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 19 ],
      "Objectives" : {
        "DurationInMs" : 14757,
        "TotalTasksDurationInMs" : 105769,
        "IOBytes" : {
          "Total" : 3404787644,
          "Details" : {
            "IR" : 853591299,
            "IW" : 0,
            "SR" : 0,
            "SW" : 2551196345
          }
        }
      }
    },
    "8" : {
      "QSLogical" : {
        "operators" : {
          "4" : {
            "sign" : 437822322,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 41806893656,
                "rowCount" : 275045353
              },
              "compileTime" : {
                "sizeInBytes" : 41806893656,
                "rowCount" : 275045353
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#16, ss_item_sk#17, ss_customer_sk#18, ss_cdemo_sk#19, ss_hdemo_sk#20, ss_addr_sk#21, ss_store_sk#22, ss_promo_sk#23, ss_ticket_number#24L, ss_quantity#25, ss_wholesale_cost#26, ss_list_price#27, ss_sales_price#28, ss_ext_discount_amt#29, ss_ext_sales_price#30, ss_ext_wholesale_cost#31, ss_ext_list_price#32, ss_ext_tax#33, ss_coupon_amt#34, ss_net_paid#35, ss_net_paid_inc_tax#36, ss_net_profit#37, ss_sold_date_sk#38], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "1" : {
            "sign" : -92467579,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 6372974040,
                "rowCount" : 265540585
              },
              "compileTime" : {
                "sizeInBytes" : 6372974040,
                "rowCount" : 265540585
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#38 = d_date_sk#39) "
          },
          "0" : {
            "sign" : -764053493,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 4248649360,
                "rowCount" : 265540585
              },
              "compileTime" : {
                "sizeInBytes" : 4248649360,
                "rowCount" : 265540585
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#17, d_date#41] "
          },
          "2" : {
            "sign" : 1570087131,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 4400725648,
                "rowCount" : 275045353
              },
              "compileTime" : {
                "sizeInBytes" : 4400725648,
                "rowCount" : 275045353
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#17, ss_sold_date_sk#38] "
          },
          "3" : {
            "sign" : 266122093,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 41806893656,
                "rowCount" : 275045353
              },
              "compileTime" : {
                "sizeInBytes" : 41806893656,
                "rowCount" : 275045353
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(ss_sold_date_sk#38) AND isnotnull(ss_item_sk#17)) AND dynamicpruning#609 [ss_sold_date_sk#38]) "
          }
        },
        "links" : [ {
          "fromId" : 4,
          "fromName" : "LogicalRelation",
          "toId" : 3,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Filter",
          "toId" : 2,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Project",
          "toId" : 1,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Join",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [ss_item_sk#17, d_date#41]\n+- Join Inner, (ss_sold_date_sk#38 = d_date_sk#39)\n   :- Project [ss_item_sk#17, ss_sold_date_sk#38]\n   :  +- Filter ((isnotnull(ss_sold_date_sk#38) AND isnotnull(ss_item_sk#17)) AND dynamicpruning#609 [ss_sold_date_sk#38])\n   :     :  +- Project [d_date_sk#39, d_date#41]\n   :     :     +- Filter (d_year#45 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#39))\n   :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#39,d_date_id#40,d_date#41,d_month_seq#42,d_week_seq#43,d_quarter_seq#44,d_year#45,d_dow#46,d_moy#47,d_dom#48,d_qoy#49,d_fy_year#50,d_fy_quarter_seq#51,d_fy_week_seq#52,d_day_name#53,d_quarter_name#54,d_holiday#55,d_weekend#56,d_following_holiday#57,d_first_dom#58,d_last_dom#59,d_same_day_ly#60,d_same_day_lq#61,d_current_day#62,... 4 more fields] parquet\n   :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#16,ss_item_sk#17,ss_customer_sk#18,ss_cdemo_sk#19,ss_hdemo_sk#20,ss_addr_sk#21,ss_store_sk#22,ss_promo_sk#23,ss_ticket_number#24L,ss_quantity#25,ss_wholesale_cost#26,ss_list_price#27,ss_sales_price#28,ss_ext_discount_amt#29,ss_ext_sales_price#30,ss_ext_wholesale_cost#31,ss_ext_list_price#32,ss_ext_tax#33,ss_coupon_amt#34,ss_net_paid#35,ss_net_paid_inc_tax#36,ss_net_profit#37,ss_sold_date_sk#38] parquet\n   +- Project [d_date_sk#39, d_date#41]\n      +- Filter (d_year#45 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#39))\n         +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#39,d_date_id#40,d_date#41,d_month_seq#42,d_week_seq#43,d_quarter_seq#44,d_year#45,d_dow#46,d_moy#47,d_dom#48,d_qoy#49,d_fy_year#50,d_fy_quarter_seq#51,d_fy_week_seq#52,d_day_name#53,d_quarter_name#54,d_holiday#55,d_weekend#56,d_following_holiday#57,d_first_dom#58,d_last_dom#59,d_same_day_ly#60,d_same_day_lq#61,d_current_day#62,... 4 more fields] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "4" : {
            "sign" : -1211722511,
            "className" : "org.apache.spark.sql.execution.adaptive.BroadcastQueryStageExec",
            "sizeInBytes" : 1060264,
            "rowCount" : 1461,
            "isRuntime" : true,
            "predicate" : " (unknown) BroadcastQueryStage Output [2]: [d_date_sk#39, d_date#41] Arguments: 1 "
          },
          "1" : {
            "sign" : 1541020685,
            "className" : "org.apache.spark.sql.execution.joins.BroadcastHashJoinExec",
            "sizeInBytes" : 6372974040,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) BroadcastHashJoin Left keys [1]: [ss_sold_date_sk#38] Right keys [1]: [d_date_sk#39] Join type: Inner Join condition: None "
          },
          "0" : {
            "sign" : 370197603,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 4248649360,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [2]: [ss_item_sk#17, d_date#41] Input [4]: [ss_item_sk#17, ss_sold_date_sk#38, d_date_sk#39, d_date#41] "
          },
          "2" : {
            "sign" : -357871785,
            "className" : "org.apache.spark.sql.execution.FilterExec",
            "sizeInBytes" : 4400725648,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Input [2]: [ss_item_sk#17, ss_sold_date_sk#38] Condition : isnotnull(ss_item_sk#17) "
          },
          "3" : {
            "sign" : 567536492,
            "className" : "org.apache.spark.sql.execution.FileSourceScanExec",
            "sizeInBytes" : 4400725648,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) Scan parquet spark_catalog.tpcds_100.store_sales Output [2]: [ss_item_sk#17, ss_sold_date_sk#38] Batched: true Location: InMemoryFileIndex [hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/store_sales/ss_sold_date_sk=2450816, ... 1822 entries] PartitionFilters: [isnotnull(ss_sold_date_sk#38), dynamicpruningexpression(ss_sold_date_sk#38 IN dynamicpruning#609)] PushedFilters: [IsNotNull(ss_item_sk)] ReadSchema: struct<ss_item_sk:int> "
          }
        },
        "links" : [ {
          "fromId" : 3,
          "fromName" : "Scan parquet spark_catalog.tpcds_100.store_sales",
          "toId" : 2,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Filter",
          "toId" : 1,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "BroadcastQueryStage",
          "toId" : 1,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "BroadcastHashJoin",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [ss_item_sk#17, d_date#41]\n+- BroadcastHashJoin [ss_sold_date_sk#38], [d_date_sk#39], Inner, BuildRight, false\n   :- Filter isnotnull(ss_item_sk#17)\n   :  +- FileScan parquet spark_catalog.tpcds_100.store_sales[ss_item_sk#17,ss_sold_date_sk#38] Batched: true, DataFilters: [isnotnull(ss_item_sk#17)], Format: Parquet, Location: InMemoryFileIndex(1823 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/store_..., PartitionFilters: [isnotnull(ss_sold_date_sk#38), dynamicpruningexpression(ss_sold_date_sk#38 IN dynamicpruning#609)], PushedFilters: [IsNotNull(ss_item_sk)], ReadSchema: struct<ss_item_sk:int>\n   :        +- SubqueryBroadcast dynamicpruning#609, 0, [d_date_sk#39], [id=#2094]\n   :           +- AdaptiveSparkPlan isFinalPlan=false\n   :              +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=2091]\n   :                 +- Project [d_date_sk#39, d_date#41]\n   :                    +- Filter (d_year#45 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#39))\n   :                       +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#39,d_date#41,d_year#45] Batched: true, DataFilters: [d_year#45 IN (1999,2000,2001,2002), isnotnull(d_date_sk#39)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [In(d_year, [1999,2000,2001,2002]), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_date:date,d_year:int>\n   +- BroadcastQueryStage 1\n      +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=991]\n         +- *(2) Project [d_date_sk#39, d_date#41]\n            +- *(2) Filter (d_year#45 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#39))\n               +- *(2) ColumnarToRow\n                  +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#39,d_date#41,d_year#45] Batched: true, DataFilters: [d_year#45 IN (1999,2000,2001,2002), isnotnull(d_date_sk#39)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [In(d_year, [1999,2000,2001,2002]), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_date:date,d_year:int>\n"
      },
      "IM" : {
        "inputSizeInBytes" : 4401785912,
        "inputRowCount" : 275046814
      },
      "InitialPartitionNum" : 0,
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 16,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 8,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 11 ],
      "Objectives" : {
        "DurationInMs" : 27341,
        "TotalTasksDurationInMs" : 102849,
        "IOBytes" : {
          "Total" : 2079686722,
          "Details" : {
            "IR" : 895210673,
            "IW" : 0,
            "SR" : 0,
            "SW" : 1184476049
          }
        }
      }
    },
    "4" : {
      "QSLogical" : {
        "operators" : {
          "0" : {
            "sign" : 811756306,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 6601125024,
                "rowCount" : 275046876
              },
              "compileTime" : {
                "sizeInBytes" : 6601125024,
                "rowCount" : 275046876
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_customer_sk#460, ss_quantity#467, ss_sales_price#470] "
          },
          "1" : {
            "sign" : 230246611,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 41807125152,
                "rowCount" : 275046876
              },
              "compileTime" : {
                "sizeInBytes" : 41807125152,
                "rowCount" : 275046876
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: isnotnull(ss_customer_sk#460) "
          },
          "2" : {
            "sign" : 165651323,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 43776970976,
                "rowCount" : 288006388
              },
              "compileTime" : {
                "sizeInBytes" : 43776970976,
                "rowCount" : 288006388
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#458, ss_item_sk#459, ss_customer_sk#460, ss_cdemo_sk#461, ss_hdemo_sk#462, ss_addr_sk#463, ss_store_sk#464, ss_promo_sk#465, ss_ticket_number#466L, ss_quantity#467, ss_wholesale_cost#468, ss_list_price#469, ss_sales_price#470, ss_ext_discount_amt#471, ss_ext_sales_price#472, ss_ext_wholesale_cost#473, ss_ext_list_price#474, ss_ext_tax#475, ss_coupon_amt#476, ss_net_paid#477, ss_net_paid_inc_tax#478, ss_net_profit#479, ss_sold_date_sk#480], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "LogicalRelation",
          "toId" : 1,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Filter",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [ss_customer_sk#460, ss_quantity#467, ss_sales_price#470]\n+- Filter isnotnull(ss_customer_sk#460)\n   +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#458,ss_item_sk#459,ss_customer_sk#460,ss_cdemo_sk#461,ss_hdemo_sk#462,ss_addr_sk#463,ss_store_sk#464,ss_promo_sk#465,ss_ticket_number#466L,ss_quantity#467,ss_wholesale_cost#468,ss_list_price#469,ss_sales_price#470,ss_ext_discount_amt#471,ss_ext_sales_price#472,ss_ext_wholesale_cost#473,ss_ext_list_price#474,ss_ext_tax#475,ss_coupon_amt#476,ss_net_paid#477,ss_net_paid_inc_tax#478,ss_net_profit#479,ss_sold_date_sk#480] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "0" : {
            "sign" : 235386598,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 6601125024,
            "rowCount" : 275046876,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [3]: [ss_customer_sk#460, ss_quantity#467, ss_sales_price#470] Input [4]: [ss_customer_sk#460, ss_quantity#467, ss_sales_price#470, ss_sold_date_sk#480] "
          },
          "1" : {
            "sign" : 1482983335,
            "className" : "org.apache.spark.sql.execution.FilterExec",
            "sizeInBytes" : 6601125024,
            "rowCount" : 275046876,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Input [4]: [ss_customer_sk#460, ss_quantity#467, ss_sales_price#470, ss_sold_date_sk#480] Condition : isnotnull(ss_customer_sk#460) "
          },
          "2" : {
            "sign" : 11426383,
            "className" : "org.apache.spark.sql.execution.FileSourceScanExec",
            "sizeInBytes" : 6601125024,
            "rowCount" : 275046876,
            "isRuntime" : false,
            "predicate" : " (unknown) Scan parquet spark_catalog.tpcds_100.store_sales Output [4]: [ss_customer_sk#460, ss_quantity#467, ss_sales_price#470, ss_sold_date_sk#480] Batched: true Location: CatalogFileIndex [hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/store_sales] PushedFilters: [IsNotNull(ss_customer_sk)] ReadSchema: struct<ss_customer_sk:int,ss_quantity:int,ss_sales_price:decimal(7,2)> "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "Scan parquet spark_catalog.tpcds_100.store_sales",
          "toId" : 1,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Filter",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [ss_customer_sk#460, ss_quantity#467, ss_sales_price#470]\n+- Filter isnotnull(ss_customer_sk#460)\n   +- FileScan parquet spark_catalog.tpcds_100.store_sales[ss_customer_sk#460,ss_quantity#467,ss_sales_price#470,ss_sold_date_sk#480] Batched: true, DataFilters: [isnotnull(ss_customer_sk#460)], Format: Parquet, Location: CatalogFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/store_sales], PartitionFilters: [], PushedFilters: [IsNotNull(ss_customer_sk)], ReadSchema: struct<ss_customer_sk:int,ss_quantity:int,ss_sales_price:decimal(7,2)>\n"
      },
      "IM" : {
        "inputSizeInBytes" : 6601125024,
        "inputRowCount" : 275046876
      },
      "InitialPartitionNum" : 0,
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 3,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 7 ],
      "Objectives" : {
        "DurationInMs" : 21132,
        "TotalTasksDurationInMs" : 213796,
        "IOBytes" : {
          "Total" : 4402752936,
          "Details" : {
            "IR" : 1126138769,
            "IW" : 0,
            "SR" : 0,
            "SW" : 3276614167
          }
        }
      }
    },
    "15" : {
      "QSLogical" : {
        "operators" : {
          "8" : {
            "sign" : -1675761902,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 55561772,
                "rowCount" : 1984349
              },
              "compileTime" : {
                "sizeInBytes" : 55561772,
                "rowCount" : 1984349
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [c_customer_sk#481], [c_customer_sk#481, sum((cast(ss_quantity#467 as decimal(10,0)) * ss_sales_price#470)) AS ssales#403] "
          },
          "4" : {
            "sign" : -1304824260,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 4432520384,
                "rowCount" : 138516262
              },
              "compileTime" : {
                "sizeInBytes" : 4432520384,
                "rowCount" : 138516262
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cs_sold_date_sk#140 = d_date_sk#517) "
          },
          "11" : {
            "sign" : 1475136400,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 98000000,
                "rowCount" : 2000000
              },
              "compileTime" : {
                "sizeInBytes" : 98000000,
                "rowCount" : 2000000
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (c_customer_sk#499 = c_customer_sk#481) "
          },
          "9" : {
            "sign" : 1882058231,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 6601054824,
                "rowCount" : 275043951
              },
              "compileTime" : {
                "sizeInBytes" : 6601054824,
                "rowCount" : 275043951
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_quantity#467, ss_sales_price#470, c_customer_sk#481] "
          },
          "5" : {
            "sign" : 722500534,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 3991579424,
                "rowCount" : 142556408
              },
              "compileTime" : {
                "sizeInBytes" : 3991579424,
                "rowCount" : 142556408
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (cs_bill_customer_sk#109 = c_customer_sk#481) "
          },
          "10" : {
            "sign" : 1857475570,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 7701230628,
                "rowCount" : 275043951
              },
              "compileTime" : {
                "sizeInBytes" : 7701230628,
                "rowCount" : 275043951
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_customer_sk#460 = c_customer_sk#481) "
          },
          "6" : {
            "sign" : 1934998111,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 23812188,
                "rowCount" : 1984349
              },
              "compileTime" : {
                "sizeInBytes" : 23812188,
                "rowCount" : 1984349
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_customer_sk#481] "
          },
          "1" : {
            "sign" : 534061702,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 8150025186,
                "rowCount" : 142982898
              },
              "compileTime" : {
                "sizeInBytes" : 8150025186,
                "rowCount" : 142982898
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_quantity#124, cs_list_price#126, c_first_name#507, c_last_name#508] "
          },
          "0" : {
            "sign" : -71178686,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 1648640717,
                "rowCount" : 27026897
              },
              "compileTime" : {
                "sizeInBytes" : 1648640717,
                "rowCount" : 27026897
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [c_last_name#508, c_first_name#507], [c_last_name#508, c_first_name#507, sum((cast(cs_quantity#124 as decimal(10,0)) * cs_list_price#126)) AS sales#391] "
          },
          "2" : {
            "sign" : -391171241,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 9293888370,
                "rowCount" : 142982898
              },
              "compileTime" : {
                "sizeInBytes" : 9293888370,
                "rowCount" : 142982898
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cs_bill_customer_sk#109 = c_customer_sk#499) "
          },
          "7" : {
            "sign" : -321557515,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 55561772,
                "rowCount" : 1984349
              },
              "compileTime" : {
                "sizeInBytes" : 55561772,
                "rowCount" : 1984349
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(ssales#403) AND (cast(ssales#403 as decimal(38,8)) > (0.950000 * scalar-subquery#404 []))) "
          },
          "3" : {
            "sign" : -2019165015,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 3324390288,
                "rowCount" : 138516262
              },
              "compileTime" : {
                "sizeInBytes" : 3324390288,
                "rowCount" : 138516262
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_bill_customer_sk#109, cs_quantity#124, cs_list_price#126] "
          }
        },
        "links" : [ {
          "fromId" : 10,
          "fromName" : "Join",
          "toId" : 9,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "Project",
          "toId" : 8,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "Aggregate",
          "toId" : 7,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Filter",
          "toId" : 6,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Project",
          "toId" : 5,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Join",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Join",
          "toId" : 3,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Project",
          "toId" : 2,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Project",
          "toId" : 11,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "Join",
          "toId" : 2,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Join",
          "toId" : 1,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Project",
          "toId" : 0,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Aggregate [c_last_name#508, c_first_name#507], [c_last_name#508, c_first_name#507, sum((cast(cs_quantity#124 as decimal(10,0)) * cs_list_price#126)) AS sales#391]\n+- Project [cs_quantity#124, cs_list_price#126, c_first_name#507, c_last_name#508]\n   +- Join Inner, (cs_bill_customer_sk#109 = c_customer_sk#499)\n      :- Project [cs_bill_customer_sk#109, cs_quantity#124, cs_list_price#126]\n      :  +- Join Inner, (cs_sold_date_sk#140 = d_date_sk#517)\n      :     :- Join LeftSemi, (cs_bill_customer_sk#109 = c_customer_sk#481)\n      :     :  :- Project [cs_bill_customer_sk#109, cs_quantity#124, cs_list_price#126, cs_sold_date_sk#140]\n      :     :  :  +- Join LeftSemi, (cs_item_sk#121 = item_sk#398)\n      :     :  :     :- Project [cs_bill_customer_sk#109, cs_item_sk#121, cs_quantity#124, cs_list_price#126, cs_sold_date_sk#140]\n      :     :  :     :  +- Filter ((isnotnull(cs_bill_customer_sk#109) AND isnotnull(cs_sold_date_sk#140)) AND dynamicpruning#614 [cs_sold_date_sk#140])\n      :     :  :     :     :  +- Project [d_date_sk#517]\n      :     :  :     :     :     +- Filter (((isnotnull(d_year#523) AND isnotnull(d_moy#525)) AND ((d_year#523 = 1999) AND (d_moy#525 = 1))) AND isnotnull(d_date_sk#517))\n      :     :  :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#517,d_date_id#518,d_date#519,d_month_seq#520,d_week_seq#521,d_quarter_seq#522,d_year#523,d_dow#524,d_moy#525,d_dom#526,d_qoy#527,d_fy_year#528,d_fy_quarter_seq#529,d_fy_week_seq#530,d_day_name#531,d_quarter_name#532,d_holiday#533,d_weekend#534,d_following_holiday#535,d_first_dom#536,d_last_dom#537,d_same_day_ly#538,d_same_day_lq#539,d_current_day#540,... 4 more fields] parquet\n      :     :  :     :     +- Relation spark_catalog.tpcds_100.catalog_sales[cs_sold_time_sk#107,cs_ship_date_sk#108,cs_bill_customer_sk#109,cs_bill_cdemo_sk#110,cs_bill_hdemo_sk#111,cs_bill_addr_sk#112,cs_ship_customer_sk#113,cs_ship_cdemo_sk#114,cs_ship_hdemo_sk#115,cs_ship_addr_sk#116,cs_call_center_sk#117,cs_catalog_page_sk#118,cs_ship_mode_sk#119,cs_warehouse_sk#120,cs_item_sk#121,cs_promo_sk#122,cs_order_number#123L,cs_quantity#124,cs_wholesale_cost#125,cs_list_price#126,cs_sales_price#127,cs_ext_discount_amt#128,cs_ext_sales_price#129,cs_ext_wholesale_cost#130,... 10 more fields] parquet\n      :     :  :     +- Project [item_sk#398]\n      :     :  :        +- Filter (cnt#400L > 4)\n      :     :  :           +- Aggregate [_groupingexpression#608, i_item_sk#67, d_date#41], [i_item_sk#67 AS item_sk#398, count(1) AS cnt#400L]\n      :     :  :              +- Project [d_date#41, i_item_sk#67, substr(i_item_desc#71, 1, 30) AS _groupingexpression#608]\n      :     :  :                 +- Join Inner, (ss_item_sk#17 = i_item_sk#67)\n      :     :  :                    :- Project [ss_item_sk#17, d_date#41]\n      :     :  :                    :  +- Join Inner, (ss_sold_date_sk#38 = d_date_sk#39)\n      :     :  :                    :     :- Project [ss_item_sk#17, ss_sold_date_sk#38]\n      :     :  :                    :     :  +- Filter ((isnotnull(ss_sold_date_sk#38) AND isnotnull(ss_item_sk#17)) AND dynamicpruning#609 [ss_sold_date_sk#38])\n      :     :  :                    :     :     :  +- Project [d_date_sk#39, d_date#41]\n      :     :  :                    :     :     :     +- Filter (d_year#45 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#39))\n      :     :  :                    :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#39,d_date_id#40,d_date#41,d_month_seq#42,d_week_seq#43,d_quarter_seq#44,d_year#45,d_dow#46,d_moy#47,d_dom#48,d_qoy#49,d_fy_year#50,d_fy_quarter_seq#51,d_fy_week_seq#52,d_day_name#53,d_quarter_name#54,d_holiday#55,d_weekend#56,d_following_holiday#57,d_first_dom#58,d_last_dom#59,d_same_day_ly#60,d_same_day_lq#61,d_current_day#62,... 4 more fields] parquet\n      :     :  :                    :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#16,ss_item_sk#17,ss_customer_sk#18,ss_cdemo_sk#19,ss_hdemo_sk#20,ss_addr_sk#21,ss_store_sk#22,ss_promo_sk#23,ss_ticket_number#24L,ss_quantity#25,ss_wholesale_cost#26,ss_list_price#27,ss_sales_price#28,ss_ext_discount_amt#29,ss_ext_sales_price#30,ss_ext_wholesale_cost#31,ss_ext_list_price#32,ss_ext_tax#33,ss_coupon_amt#34,ss_net_paid#35,ss_net_paid_inc_tax#36,ss_net_profit#37,ss_sold_date_sk#38] parquet\n      :     :  :                    :     +- Project [d_date_sk#39, d_date#41]\n      :     :  :                    :        +- Filter (d_year#45 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#39))\n      :     :  :                    :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#39,d_date_id#40,d_date#41,d_month_seq#42,d_week_seq#43,d_quarter_seq#44,d_year#45,d_dow#46,d_moy#47,d_dom#48,d_qoy#49,d_fy_year#50,d_fy_quarter_seq#51,d_fy_week_seq#52,d_day_name#53,d_quarter_name#54,d_holiday#55,d_weekend#56,d_following_holiday#57,d_first_dom#58,d_last_dom#59,d_same_day_ly#60,d_same_day_lq#61,d_current_day#62,... 4 more fields] parquet\n      :     :  :                    +- Project [i_item_sk#67, i_item_desc#71]\n      :     :  :                       +- Filter isnotnull(i_item_sk#67)\n      :     :  :                          +- Relation spark_catalog.tpcds_100.item[i_item_sk#67,i_item_id#68,i_rec_start_date#69,i_rec_end_date#70,i_item_desc#71,i_current_price#72,i_wholesale_cost#73,i_brand_id#74,i_brand#75,i_class_id#76,i_class#77,i_category_id#78,i_category#79,i_manufact_id#80,i_manufact#81,i_size#82,i_formulation#83,i_color#84,i_units#85,i_container#86,i_manager_id#87,i_product_name#88] parquet\n      :     :  +- Project [c_customer_sk#481]\n      :     :     +- Filter (isnotnull(ssales#403) AND (cast(ssales#403 as decimal(38,8)) > (0.950000 * scalar-subquery#404 [])))\n      :     :        :  +- Aggregate [max(csales#401) AS tpcds_cmax#402]\n      :     :        :     +- Aggregate [c_customer_sk#89], [sum((cast(ss_quantity#416 as decimal(10,0)) * ss_sales_price#419)) AS csales#401]\n      :     :        :        +- Project [ss_quantity#416, ss_sales_price#419, c_customer_sk#89]\n      :     :        :           +- Join Inner, (ss_customer_sk#409 = c_customer_sk#89)\n      :     :        :              :- Project [ss_customer_sk#409, ss_quantity#416, ss_sales_price#419]\n      :     :        :              :  +- Join Inner, (ss_sold_date_sk#429 = d_date_sk#430)\n      :     :        :              :     :- Project [ss_customer_sk#409, ss_quantity#416, ss_sales_price#419, ss_sold_date_sk#429]\n      :     :        :              :     :  +- Filter ((isnotnull(ss_customer_sk#409) AND isnotnull(ss_sold_date_sk#429)) AND dynamicpruning#610 [ss_sold_date_sk#429])\n      :     :        :              :     :     :  +- Project [d_date_sk#430]\n      :     :        :              :     :     :     +- Filter (d_year#436 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#430))\n      :     :        :              :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#430,d_date_id#431,d_date#432,d_month_seq#433,d_week_seq#434,d_quarter_seq#435,d_year#436,d_dow#437,d_moy#438,d_dom#439,d_qoy#440,d_fy_year#441,d_fy_quarter_seq#442,d_fy_week_seq#443,d_day_name#444,d_quarter_name#445,d_holiday#446,d_weekend#447,d_following_holiday#448,d_first_dom#449,d_last_dom#450,d_same_day_ly#451,d_same_day_lq#452,d_current_day#453,... 4 more fields] parquet\n      :     :        :              :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#407,ss_item_sk#408,ss_customer_sk#409,ss_cdemo_sk#410,ss_hdemo_sk#411,ss_addr_sk#412,ss_store_sk#413,ss_promo_sk#414,ss_ticket_number#415L,ss_quantity#416,ss_wholesale_cost#417,ss_list_price#418,ss_sales_price#419,ss_ext_discount_amt#420,ss_ext_sales_price#421,ss_ext_wholesale_cost#422,ss_ext_list_price#423,ss_ext_tax#424,ss_coupon_amt#425,ss_net_paid#426,ss_net_paid_inc_tax#427,ss_net_profit#428,ss_sold_date_sk#429] parquet\n      :     :        :              :     +- Project [d_date_sk#430]\n      :     :        :              :        +- Filter (d_year#436 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#430))\n      :     :        :              :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#430,d_date_id#431,d_date#432,d_month_seq#433,d_week_seq#434,d_quarter_seq#435,d_year#436,d_dow#437,d_moy#438,d_dom#439,d_qoy#440,d_fy_year#441,d_fy_quarter_seq#442,d_fy_week_seq#443,d_day_name#444,d_quarter_name#445,d_holiday#446,d_weekend#447,d_following_holiday#448,d_first_dom#449,d_last_dom#450,d_same_day_ly#451,d_same_day_lq#452,d_current_day#453,... 4 more fields] parquet\n      :     :        :              +- Project [c_customer_sk#89]\n      :     :        :                 +- Filter isnotnull(c_customer_sk#89)\n      :     :        :                    +- Relation spark_catalog.tpcds_100.customer[c_customer_sk#89,c_customer_id#90,c_current_cdemo_sk#91,c_current_hdemo_sk#92,c_current_addr_sk#93,c_first_shipto_date_sk#94,c_first_sales_date_sk#95,c_salutation#96,c_first_name#97,c_last_name#98,c_preferred_cust_flag#99,c_birth_day#100,c_birth_month#101,c_birth_year#102,c_birth_country#103,c_login#104,c_email_address#105,c_last_review_date#106] parquet\n      :     :        +- Aggregate [c_customer_sk#481], [c_customer_sk#481, sum((cast(ss_quantity#467 as decimal(10,0)) * ss_sales_price#470)) AS ssales#403]\n      :     :           +- Project [ss_quantity#467, ss_sales_price#470, c_customer_sk#481]\n      :     :              +- Join Inner, (ss_customer_sk#460 = c_customer_sk#481)\n      :     :                 :- Project [ss_customer_sk#460, ss_quantity#467, ss_sales_price#470]\n      :     :                 :  +- Filter isnotnull(ss_customer_sk#460)\n      :     :                 :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#458,ss_item_sk#459,ss_customer_sk#460,ss_cdemo_sk#461,ss_hdemo_sk#462,ss_addr_sk#463,ss_store_sk#464,ss_promo_sk#465,ss_ticket_number#466L,ss_quantity#467,ss_wholesale_cost#468,ss_list_price#469,ss_sales_price#470,ss_ext_discount_amt#471,ss_ext_sales_price#472,ss_ext_wholesale_cost#473,ss_ext_list_price#474,ss_ext_tax#475,ss_coupon_amt#476,ss_net_paid#477,ss_net_paid_inc_tax#478,ss_net_profit#479,ss_sold_date_sk#480] parquet\n      :     :                 +- Project [c_customer_sk#481]\n      :     :                    +- Filter isnotnull(c_customer_sk#481)\n      :     :                       +- Relation spark_catalog.tpcds_100.customer[c_customer_sk#481,c_customer_id#482,c_current_cdemo_sk#483,c_current_hdemo_sk#484,c_current_addr_sk#485,c_first_shipto_date_sk#486,c_first_sales_date_sk#487,c_salutation#488,c_first_name#489,c_last_name#490,c_preferred_cust_flag#491,c_birth_day#492,c_birth_month#493,c_birth_year#494,c_birth_country#495,c_login#496,c_email_address#497,c_last_review_date#498] parquet\n      :     +- Project [d_date_sk#517]\n      :        +- Filter (((isnotnull(d_year#523) AND isnotnull(d_moy#525)) AND ((d_year#523 = 1999) AND (d_moy#525 = 1))) AND isnotnull(d_date_sk#517))\n      :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#517,d_date_id#518,d_date#519,d_month_seq#520,d_week_seq#521,d_quarter_seq#522,d_year#523,d_dow#524,d_moy#525,d_dom#526,d_qoy#527,d_fy_year#528,d_fy_quarter_seq#529,d_fy_week_seq#530,d_day_name#531,d_quarter_name#532,d_holiday#533,d_weekend#534,d_following_holiday#535,d_first_dom#536,d_last_dom#537,d_same_day_ly#538,d_same_day_lq#539,d_current_day#540,... 4 more fields] parquet\n      +- Join LeftSemi, (c_customer_sk#499 = c_customer_sk#481)\n         :- Project [c_customer_sk#499, c_first_name#507, c_last_name#508]\n         :  +- Filter isnotnull(c_customer_sk#499)\n         :     +- Relation spark_catalog.tpcds_100.customer[c_customer_sk#499,c_customer_id#500,c_current_cdemo_sk#501,c_current_hdemo_sk#502,c_current_addr_sk#503,c_first_shipto_date_sk#504,c_first_sales_date_sk#505,c_salutation#506,c_first_name#507,c_last_name#508,c_preferred_cust_flag#509,c_birth_day#510,c_birth_month#511,c_birth_year#512,c_birth_country#513,c_login#514,c_email_address#515,c_last_review_date#516] parquet\n         +- Project [c_customer_sk#481]\n            +- Filter (isnotnull(ssales#403) AND (cast(ssales#403 as decimal(38,8)) > (0.950000 * scalar-subquery#404 [])))\n               :  +- Aggregate [max(csales#401) AS tpcds_cmax#402]\n               :     +- Aggregate [c_customer_sk#89], [sum((cast(ss_quantity#416 as decimal(10,0)) * ss_sales_price#419)) AS csales#401]\n               :        +- Project [ss_quantity#416, ss_sales_price#419, c_customer_sk#89]\n               :           +- Join Inner, (ss_customer_sk#409 = c_customer_sk#89)\n               :              :- Project [ss_customer_sk#409, ss_quantity#416, ss_sales_price#419]\n               :              :  +- Join Inner, (ss_sold_date_sk#429 = d_date_sk#430)\n               :              :     :- Project [ss_customer_sk#409, ss_quantity#416, ss_sales_price#419, ss_sold_date_sk#429]\n               :              :     :  +- Filter ((isnotnull(ss_customer_sk#409) AND isnotnull(ss_sold_date_sk#429)) AND dynamicpruning#610 [ss_sold_date_sk#429])\n               :              :     :     :  +- Project [d_date_sk#430]\n               :              :     :     :     +- Filter (d_year#436 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#430))\n               :              :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#430,d_date_id#431,d_date#432,d_month_seq#433,d_week_seq#434,d_quarter_seq#435,d_year#436,d_dow#437,d_moy#438,d_dom#439,d_qoy#440,d_fy_year#441,d_fy_quarter_seq#442,d_fy_week_seq#443,d_day_name#444,d_quarter_name#445,d_holiday#446,d_weekend#447,d_following_holiday#448,d_first_dom#449,d_last_dom#450,d_same_day_ly#451,d_same_day_lq#452,d_current_day#453,... 4 more fields] parquet\n               :              :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#407,ss_item_sk#408,ss_customer_sk#409,ss_cdemo_sk#410,ss_hdemo_sk#411,ss_addr_sk#412,ss_store_sk#413,ss_promo_sk#414,ss_ticket_number#415L,ss_quantity#416,ss_wholesale_cost#417,ss_list_price#418,ss_sales_price#419,ss_ext_discount_amt#420,ss_ext_sales_price#421,ss_ext_wholesale_cost#422,ss_ext_list_price#423,ss_ext_tax#424,ss_coupon_amt#425,ss_net_paid#426,ss_net_paid_inc_tax#427,ss_net_profit#428,ss_sold_date_sk#429] parquet\n               :              :     +- Project [d_date_sk#430]\n               :              :        +- Filter (d_year#436 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#430))\n               :              :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#430,d_date_id#431,d_date#432,d_month_seq#433,d_week_seq#434,d_quarter_seq#435,d_year#436,d_dow#437,d_moy#438,d_dom#439,d_qoy#440,d_fy_year#441,d_fy_quarter_seq#442,d_fy_week_seq#443,d_day_name#444,d_quarter_name#445,d_holiday#446,d_weekend#447,d_following_holiday#448,d_first_dom#449,d_last_dom#450,d_same_day_ly#451,d_same_day_lq#452,d_current_day#453,... 4 more fields] parquet\n               :              +- Project [c_customer_sk#89]\n               :                 +- Filter isnotnull(c_customer_sk#89)\n               :                    +- Relation spark_catalog.tpcds_100.customer[c_customer_sk#89,c_customer_id#90,c_current_cdemo_sk#91,c_current_hdemo_sk#92,c_current_addr_sk#93,c_first_shipto_date_sk#94,c_first_sales_date_sk#95,c_salutation#96,c_first_name#97,c_last_name#98,c_preferred_cust_flag#99,c_birth_day#100,c_birth_month#101,c_birth_year#102,c_birth_country#103,c_login#104,c_email_address#105,c_last_review_date#106] parquet\n               +- Aggregate [c_customer_sk#481], [c_customer_sk#481, sum((cast(ss_quantity#467 as decimal(10,0)) * ss_sales_price#470)) AS ssales#403]\n                  +- Project [ss_quantity#467, ss_sales_price#470, c_customer_sk#481]\n                     +- Join Inner, (ss_customer_sk#460 = c_customer_sk#481)\n                        :- Project [ss_customer_sk#460, ss_quantity#467, ss_sales_price#470]\n                        :  +- Filter isnotnull(ss_customer_sk#460)\n                        :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#458,ss_item_sk#459,ss_customer_sk#460,ss_cdemo_sk#461,ss_hdemo_sk#462,ss_addr_sk#463,ss_store_sk#464,ss_promo_sk#465,ss_ticket_number#466L,ss_quantity#467,ss_wholesale_cost#468,ss_list_price#469,ss_sales_price#470,ss_ext_discount_amt#471,ss_ext_sales_price#472,ss_ext_wholesale_cost#473,ss_ext_list_price#474,ss_ext_tax#475,ss_coupon_amt#476,ss_net_paid#477,ss_net_paid_inc_tax#478,ss_net_profit#479,ss_sold_date_sk#480] parquet\n                        +- Project [c_customer_sk#481]\n                           +- Filter isnotnull(c_customer_sk#481)\n                              +- Relation spark_catalog.tpcds_100.customer[c_customer_sk#481,c_customer_id#482,c_current_cdemo_sk#483,c_current_hdemo_sk#484,c_current_addr_sk#485,c_first_shipto_date_sk#486,c_first_sales_date_sk#487,c_salutation#488,c_first_name#489,c_last_name#490,c_preferred_cust_flag#491,c_birth_day#492,c_birth_month#493,c_birth_year#494,c_birth_country#495,c_login#496,c_email_address#497,c_last_review_date#498] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "12" : {
            "sign" : -912581414,
            "className" : "org.apache.spark.sql.execution.aggregate.HashAggregateExec",
            "sizeInBytes" : 55561772,
            "rowCount" : 1984349,
            "isRuntime" : false,
            "predicate" : " (unknown) HashAggregate Input [3]: [ss_quantity#467, ss_sales_price#470, c_customer_sk#481] Keys [1]: [c_customer_sk#481] Functions [1]: [partial_sum((cast(ss_quantity#467 as decimal(10,0)) * ss_sales_price#470))] Aggregate Attributes [2]: [sum#623, isEmpty#624] Results [3]: [c_customer_sk#481, sum#625, isEmpty#626] "
          },
          "8" : {
            "sign" : 1352002514,
            "className" : "org.apache.spark.sql.execution.SortExec",
            "sizeInBytes" : -1,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Input [1]: [c_customer_sk#481] Arguments: [c_customer_sk#481 ASC NULLS FIRST], false, 0 "
          },
          "19" : {
            "sign" : 1953305168,
            "className" : "org.apache.spark.sql.execution.adaptive.BroadcastQueryStageExec",
            "sizeInBytes" : 1048824,
            "rowCount" : 31,
            "isRuntime" : true,
            "predicate" : " (unknown) BroadcastQueryStage Output [1]: [d_date_sk#517] Arguments: 5 "
          },
          "23" : {
            "sign" : -1437795802,
            "className" : "org.apache.spark.sql.execution.SortExec",
            "sizeInBytes" : -1,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Input [1]: [c_customer_sk#481] Arguments: [c_customer_sk#481 ASC NULLS FIRST], false, 0 "
          },
          "4" : {
            "sign" : 2010272627,
            "className" : "org.apache.spark.sql.execution.joins.BroadcastHashJoinExec",
            "sizeInBytes" : 4432520384,
            "rowCount" : 138516262,
            "isRuntime" : false,
            "predicate" : " (unknown) BroadcastHashJoin Left keys [1]: [cs_sold_date_sk#140] Right keys [1]: [d_date_sk#517] Join type: Inner Join condition: None "
          },
          "15" : {
            "sign" : -445040877,
            "className" : "org.apache.spark.sql.execution.SortExec",
            "sizeInBytes" : -1,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Input [3]: [ss_customer_sk#460, ss_quantity#467, ss_sales_price#470] Arguments: [ss_customer_sk#460 ASC NULLS FIRST], false, 0 "
          },
          "11" : {
            "sign" : -2046246047,
            "className" : "org.apache.spark.sql.execution.aggregate.HashAggregateExec",
            "sizeInBytes" : 55561772,
            "rowCount" : 1984349,
            "isRuntime" : false,
            "predicate" : " (unknown) HashAggregate Input [3]: [c_customer_sk#481, sum#625, isEmpty#626] Keys [1]: [c_customer_sk#481] Functions [1]: [sum((cast(ss_quantity#467 as decimal(10,0)) * ss_sales_price#470))] Aggregate Attributes [1]: [sum((cast(ss_quantity#467 as decimal(10,0)) * ss_sales_price#470))#596] Results [2]: [c_customer_sk#481, sum((cast(ss_quantity#467 as decimal(10,0)) * ss_sales_price#470))#596 AS ssales#403] "
          },
          "9" : {
            "sign" : 310169975,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 23812188,
            "rowCount" : 1984349,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [1]: [c_customer_sk#481] Input [2]: [c_customer_sk#481, ssales#403] "
          },
          "33" : {
            "sign" : 1720519598,
            "className" : "org.apache.spark.sql.execution.adaptive.ShuffleQueryStageExec",
            "sizeInBytes" : 32000000,
            "rowCount" : 2000000,
            "isRuntime" : true,
            "predicate" : " (unknown) ShuffleQueryStage Output [1]: [c_customer_sk#481] Arguments: 10 "
          },
          "22" : {
            "sign" : 27187245,
            "className" : "org.apache.spark.sql.execution.adaptive.ShuffleQueryStageExec",
            "sizeInBytes" : 96527848,
            "rowCount" : 2000000,
            "isRuntime" : true,
            "predicate" : " (unknown) ShuffleQueryStage Output [3]: [c_customer_sk#499, c_first_name#507, c_last_name#508] Arguments: 6 "
          },
          "26" : {
            "sign" : -525319149,
            "className" : "org.apache.spark.sql.execution.aggregate.HashAggregateExec",
            "sizeInBytes" : 55561772,
            "rowCount" : 1984349,
            "isRuntime" : false,
            "predicate" : " (unknown) HashAggregate Input [3]: [c_customer_sk#481, sum#625, isEmpty#626] Keys [1]: [c_customer_sk#481] Functions [1]: [sum((cast(ss_quantity#467 as decimal(10,0)) * ss_sales_price#470))] Aggregate Attributes [1]: [sum((cast(ss_quantity#467 as decimal(10,0)) * ss_sales_price#470))#596] Results [2]: [c_customer_sk#481, sum((cast(ss_quantity#467 as decimal(10,0)) * ss_sales_price#470))#596 AS ssales#403] "
          },
          "13" : {
            "sign" : -379742937,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 6601054824,
            "rowCount" : 275043951,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [3]: [ss_quantity#467, ss_sales_price#470, c_customer_sk#481] Input [4]: [ss_customer_sk#460, ss_quantity#467, ss_sales_price#470, c_customer_sk#481] "
          },
          "24" : {
            "sign" : -808845827,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 23812188,
            "rowCount" : 1984349,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [1]: [c_customer_sk#481] Input [2]: [c_customer_sk#481, ssales#403] "
          },
          "16" : {
            "sign" : -972681042,
            "className" : "org.apache.spark.sql.execution.adaptive.ShuffleQueryStageExec",
            "sizeInBytes" : 8801500032,
            "rowCount" : 275046876,
            "isRuntime" : true,
            "predicate" : " (unknown) ShuffleQueryStage Output [3]: [ss_customer_sk#460, ss_quantity#467, ss_sales_price#470] Arguments: 3 "
          },
          "5" : {
            "sign" : 486925429,
            "className" : "org.apache.spark.sql.execution.joins.SortMergeJoinExec",
            "sizeInBytes" : 3991579424,
            "rowCount" : 142556408,
            "isRuntime" : false,
            "predicate" : " (unknown) SortMergeJoin Left keys [1]: [cs_bill_customer_sk#109] Right keys [1]: [c_customer_sk#481] Join type: LeftSemi Join condition: None "
          },
          "10" : {
            "sign" : 238052561,
            "className" : "org.apache.spark.sql.execution.FilterExec",
            "sizeInBytes" : 55561772,
            "rowCount" : 1984349,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Input [2]: [c_customer_sk#481, ssales#403] Condition : (isnotnull(ssales#403) AND (cast(ssales#403 as decimal(38,8)) > (0.950000 * Subquery subquery#404, [id=#492]))) "
          },
          "21" : {
            "sign" : -1530007159,
            "className" : "org.apache.spark.sql.execution.SortExec",
            "sizeInBytes" : -1,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Input [3]: [c_customer_sk#499, c_first_name#507, c_last_name#508] Arguments: [c_customer_sk#499 ASC NULLS FIRST], false, 0 "
          },
          "32" : {
            "sign" : -1148605443,
            "className" : "org.apache.spark.sql.execution.SortExec",
            "sizeInBytes" : -1,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Input [1]: [c_customer_sk#481] Arguments: [c_customer_sk#481 ASC NULLS FIRST], false, 0 "
          },
          "6" : {
            "sign" : 405023343,
            "className" : "org.apache.spark.sql.execution.SortExec",
            "sizeInBytes" : -1,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Input [4]: [cs_bill_customer_sk#109, cs_quantity#124, cs_list_price#126, cs_sold_date_sk#140] Arguments: [cs_bill_customer_sk#109 ASC NULLS FIRST], false, 0 "
          },
          "1" : {
            "sign" : 967262813,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 8150025186,
            "rowCount" : 142982898,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [4]: [cs_quantity#124, cs_list_price#126, c_first_name#507, c_last_name#508] Input [6]: [cs_bill_customer_sk#109, cs_quantity#124, cs_list_price#126, c_customer_sk#499, c_first_name#507, c_last_name#508] "
          },
          "17" : {
            "sign" : 825729922,
            "className" : "org.apache.spark.sql.execution.SortExec",
            "sizeInBytes" : -1,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Input [1]: [c_customer_sk#481] Arguments: [c_customer_sk#481 ASC NULLS FIRST], false, 0 "
          },
          "25" : {
            "sign" : 158906149,
            "className" : "org.apache.spark.sql.execution.FilterExec",
            "sizeInBytes" : 55561772,
            "rowCount" : 1984349,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Input [2]: [c_customer_sk#481, ssales#403] Condition : (isnotnull(ssales#403) AND (cast(ssales#403 as decimal(38,8)) > (0.950000 * Subquery subquery#404, [id=#492]))) "
          },
          "14" : {
            "sign" : -2019571202,
            "className" : "org.apache.spark.sql.execution.joins.SortMergeJoinExec",
            "sizeInBytes" : 7701230628,
            "rowCount" : 275043951,
            "isRuntime" : false,
            "predicate" : " (unknown) SortMergeJoin Left keys [1]: [ss_customer_sk#460] Right keys [1]: [c_customer_sk#481] Join type: Inner Join condition: None "
          },
          "31" : {
            "sign" : -524529033,
            "className" : "org.apache.spark.sql.execution.adaptive.ShuffleQueryStageExec",
            "sizeInBytes" : 8801500032,
            "rowCount" : 275046876,
            "isRuntime" : true,
            "predicate" : " (unknown) ShuffleQueryStage Output [3]: [ss_customer_sk#460, ss_quantity#467, ss_sales_price#470] Arguments: 8 "
          },
          "0" : {
            "sign" : -1072308309,
            "className" : "org.apache.spark.sql.execution.aggregate.HashAggregateExec",
            "sizeInBytes" : 1648640717,
            "rowCount" : 27026897,
            "isRuntime" : false,
            "predicate" : " (unknown) HashAggregate Input [4]: [cs_quantity#124, cs_list_price#126, c_first_name#507, c_last_name#508] Keys [2]: [c_last_name#508, c_first_name#507] Functions [1]: [partial_sum((cast(cs_quantity#124 as decimal(10,0)) * cs_list_price#126))] Aggregate Attributes [2]: [sum#617, isEmpty#618] Results [4]: [c_last_name#508, c_first_name#507, sum#619, isEmpty#620] "
          },
          "20" : {
            "sign" : -625912064,
            "className" : "org.apache.spark.sql.execution.joins.SortMergeJoinExec",
            "sizeInBytes" : 98000000,
            "rowCount" : 2000000,
            "isRuntime" : false,
            "predicate" : " (unknown) SortMergeJoin Left keys [1]: [c_customer_sk#499] Right keys [1]: [c_customer_sk#481] Join type: LeftSemi Join condition: None "
          },
          "27" : {
            "sign" : -1434314706,
            "className" : "org.apache.spark.sql.execution.aggregate.HashAggregateExec",
            "sizeInBytes" : 55561772,
            "rowCount" : 1984349,
            "isRuntime" : false,
            "predicate" : " (unknown) HashAggregate Input [3]: [ss_quantity#467, ss_sales_price#470, c_customer_sk#481] Keys [1]: [c_customer_sk#481] Functions [1]: [partial_sum((cast(ss_quantity#467 as decimal(10,0)) * ss_sales_price#470))] Aggregate Attributes [2]: [sum#623, isEmpty#624] Results [3]: [c_customer_sk#481, sum#625, isEmpty#626] "
          },
          "2" : {
            "sign" : -1571583398,
            "className" : "org.apache.spark.sql.execution.joins.SortMergeJoinExec",
            "sizeInBytes" : 9293888370,
            "rowCount" : 142982898,
            "isRuntime" : false,
            "predicate" : " (unknown) SortMergeJoin Left keys [1]: [cs_bill_customer_sk#109] Right keys [1]: [c_customer_sk#499] Join type: Inner Join condition: None "
          },
          "18" : {
            "sign" : 471798385,
            "className" : "org.apache.spark.sql.execution.adaptive.ShuffleQueryStageExec",
            "sizeInBytes" : 32000000,
            "rowCount" : 2000000,
            "isRuntime" : true,
            "predicate" : " (unknown) ShuffleQueryStage Output [1]: [c_customer_sk#481] Arguments: 4 "
          },
          "30" : {
            "sign" : 1438527184,
            "className" : "org.apache.spark.sql.execution.SortExec",
            "sizeInBytes" : -1,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Input [3]: [ss_customer_sk#460, ss_quantity#467, ss_sales_price#470] Arguments: [ss_customer_sk#460 ASC NULLS FIRST], false, 0 "
          },
          "7" : {
            "sign" : -1410891482,
            "className" : "org.apache.spark.sql.execution.adaptive.ShuffleQueryStageExec",
            "sizeInBytes" : 56134520,
            "rowCount" : 1403363,
            "isRuntime" : true,
            "predicate" : " (unknown) ShuffleQueryStage Output [4]: [cs_bill_customer_sk#109, cs_quantity#124, cs_list_price#126, cs_sold_date_sk#140] Arguments: 31 "
          },
          "29" : {
            "sign" : 1688296658,
            "className" : "org.apache.spark.sql.execution.joins.SortMergeJoinExec",
            "sizeInBytes" : 7701230628,
            "rowCount" : 275043951,
            "isRuntime" : false,
            "predicate" : " (unknown) SortMergeJoin Left keys [1]: [ss_customer_sk#460] Right keys [1]: [c_customer_sk#481] Join type: Inner Join condition: None "
          },
          "3" : {
            "sign" : -2118802208,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 3324390288,
            "rowCount" : 138516262,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [3]: [cs_bill_customer_sk#109, cs_quantity#124, cs_list_price#126] Input [5]: [cs_bill_customer_sk#109, cs_quantity#124, cs_list_price#126, cs_sold_date_sk#140, d_date_sk#517] "
          },
          "28" : {
            "sign" : 1545735629,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 6601054824,
            "rowCount" : 275043951,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [3]: [ss_quantity#467, ss_sales_price#470, c_customer_sk#481] Input [4]: [ss_customer_sk#460, ss_quantity#467, ss_sales_price#470, c_customer_sk#481] "
          }
        },
        "links" : [ {
          "fromId" : 7,
          "fromName" : "ShuffleQueryStage",
          "toId" : 6,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Sort",
          "toId" : 5,
          "toName" : "SortMergeJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 16,
          "fromName" : "ShuffleQueryStage",
          "toId" : 15,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 15,
          "fromName" : "Sort",
          "toId" : 14,
          "toName" : "SortMergeJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 18,
          "fromName" : "ShuffleQueryStage",
          "toId" : 17,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 17,
          "fromName" : "Sort",
          "toId" : 14,
          "toName" : "SortMergeJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 14,
          "fromName" : "SortMergeJoin",
          "toId" : 13,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 13,
          "fromName" : "Project",
          "toId" : 12,
          "toName" : "HashAggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 12,
          "fromName" : "HashAggregate",
          "toId" : 11,
          "toName" : "HashAggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "HashAggregate",
          "toId" : 10,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "Filter",
          "toId" : 9,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "Project",
          "toId" : 8,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "Sort",
          "toId" : 5,
          "toName" : "SortMergeJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "SortMergeJoin",
          "toId" : 4,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 19,
          "fromName" : "BroadcastQueryStage",
          "toId" : 4,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "BroadcastHashJoin",
          "toId" : 3,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Project",
          "toId" : 2,
          "toName" : "SortMergeJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 22,
          "fromName" : "ShuffleQueryStage",
          "toId" : 21,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 21,
          "fromName" : "Sort",
          "toId" : 20,
          "toName" : "SortMergeJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 31,
          "fromName" : "ShuffleQueryStage",
          "toId" : 30,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 30,
          "fromName" : "Sort",
          "toId" : 29,
          "toName" : "SortMergeJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 33,
          "fromName" : "ShuffleQueryStage",
          "toId" : 32,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 32,
          "fromName" : "Sort",
          "toId" : 29,
          "toName" : "SortMergeJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 29,
          "fromName" : "SortMergeJoin",
          "toId" : 28,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 28,
          "fromName" : "Project",
          "toId" : 27,
          "toName" : "HashAggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 27,
          "fromName" : "HashAggregate",
          "toId" : 26,
          "toName" : "HashAggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 26,
          "fromName" : "HashAggregate",
          "toId" : 25,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 25,
          "fromName" : "Filter",
          "toId" : 24,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 24,
          "fromName" : "Project",
          "toId" : 23,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 23,
          "fromName" : "Sort",
          "toId" : 20,
          "toName" : "SortMergeJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 20,
          "fromName" : "SortMergeJoin",
          "toId" : 2,
          "toName" : "SortMergeJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "SortMergeJoin",
          "toId" : 1,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Project",
          "toId" : 0,
          "toName" : "HashAggregate",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "HashAggregate(keys=[c_last_name#508, c_first_name#507], functions=[partial_sum((cast(cs_quantity#124 as decimal(10,0)) * cs_list_price#126))], output=[c_last_name#508, c_first_name#507, sum#619, isEmpty#620])\n+- Project [cs_quantity#124, cs_list_price#126, c_first_name#507, c_last_name#508]\n   +- SortMergeJoin [cs_bill_customer_sk#109], [c_customer_sk#499], Inner\n      :- Project [cs_bill_customer_sk#109, cs_quantity#124, cs_list_price#126]\n      :  +- BroadcastHashJoin [cs_sold_date_sk#140], [d_date_sk#517], Inner, BuildRight, false\n      :     :- SortMergeJoin [cs_bill_customer_sk#109], [c_customer_sk#481], LeftSemi\n      :     :  :- Sort [cs_bill_customer_sk#109 ASC NULLS FIRST], false, 0\n      :     :  :  +- ShuffleQueryStage 31\n      :     :  :     +- Exchange hashpartitioning(cs_bill_customer_sk#109, 200), ENSURE_REQUIREMENTS, [plan_id=5791]\n      :     :  :        +- *(25) Project [cs_bill_customer_sk#109, cs_quantity#124, cs_list_price#126, cs_sold_date_sk#140]\n      :     :  :           +- *(25) SortMergeJoin [cs_item_sk#121], [item_sk#398], LeftSemi\n      :     :  :              :- *(21) Sort [cs_item_sk#121 ASC NULLS FIRST], false, 0\n      :     :  :              :  +- AQEShuffleRead coalesced\n      :     :  :              :     +- ShuffleQueryStage 0\n      :     :  :              :        +- Exchange hashpartitioning(cs_item_sk#121, 200), ENSURE_REQUIREMENTS, [plan_id=972]\n      :     :  :              :           +- *(1) Filter isnotnull(cs_bill_customer_sk#109)\n      :     :  :              :              +- *(1) ColumnarToRow\n      :     :  :              :                 +- FileScan parquet spark_catalog.tpcds_100.catalog_sales[cs_bill_customer_sk#109,cs_item_sk#121,cs_quantity#124,cs_list_price#126,cs_sold_date_sk#140] Batched: true, DataFilters: [isnotnull(cs_bill_customer_sk#109)], Format: Parquet, Location: InMemoryFileIndex(1836 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/catalo..., PartitionFilters: [isnotnull(cs_sold_date_sk#140), dynamicpruningexpression(cs_sold_date_sk#140 IN dynamicpruning#6..., PushedFilters: [IsNotNull(cs_bill_customer_sk)], ReadSchema: struct<cs_bill_customer_sk:int,cs_item_sk:int,cs_quantity:int,cs_list_price:decimal(7,2)>\n      :     :  :              :                       +- SubqueryBroadcast dynamicpruning#614, 0, [d_date_sk#517], [id=#957]\n      :     :  :              :                          +- AdaptiveSparkPlan isFinalPlan=true\n                                                            +- == Final Plan ==\n                                                               BroadcastQueryStage 1\n                                                               +- ReusedExchange [d_date_sk#517], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=1088]\n                                                            +- == Initial Plan ==\n                                                               BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=954]\n                                                               +- Project [d_date_sk#517]\n                                                                  +- Filter ((((isnotnull(d_year#523) AND isnotnull(d_moy#525)) AND (d_year#523 = 1999)) AND (d_moy#525 = 1)) AND isnotnull(d_date_sk#517))\n                                                                     +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#517,d_year#523,d_moy#525] Batched: true, DataFilters: [isnotnull(d_year#523), isnotnull(d_moy#525), (d_year#523 = 1999), (d_moy#525 = 1), isnotnull(d_d..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), IsNotNull(d_moy), EqualTo(d_year,1999), EqualTo(d_moy,1), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>\n      :     :  :              +- *(24) Sort [item_sk#398 ASC NULLS FIRST], false, 0\n      :     :  :                 +- *(24) Project [item_sk#398]\n      :     :  :                    +- *(24) Filter (cnt#400L > 4)\n      :     :  :                       +- *(24) HashAggregate(keys=[_groupingexpression#608, i_item_sk#67, d_date#41], functions=[count(1)], output=[item_sk#398, cnt#400L])\n      :     :  :                          +- *(24) HashAggregate(keys=[_groupingexpression#608, i_item_sk#67, d_date#41], functions=[partial_count(1)], output=[_groupingexpression#608, i_item_sk#67, d_date#41, count#622L])\n      :     :  :                             +- *(24) Project [d_date#41, i_item_sk#67, substr(i_item_desc#71, 1, 30) AS _groupingexpression#608]\n      :     :  :                                +- *(24) SortMergeJoin [ss_item_sk#17], [i_item_sk#67], Inner\n      :     :  :                                   :- *(22) Sort [ss_item_sk#17 ASC NULLS FIRST], false, 0\n      :     :  :                                   :  +- AQEShuffleRead coalesced\n      :     :  :                                   :     +- ShuffleQueryStage 28\n      :     :  :                                   :        +- Exchange hashpartitioning(ss_item_sk#17, 200), ENSURE_REQUIREMENTS, [plan_id=2120]\n      :     :  :                                   :           +- *(19) Project [ss_item_sk#17, d_date#41]\n      :     :  :                                   :              +- *(19) BroadcastHashJoin [ss_sold_date_sk#38], [d_date_sk#39], Inner, BuildRight, false\n      :     :  :                                   :                 :- *(19) Filter isnotnull(ss_item_sk#17)\n      :     :  :                                   :                 :  +- *(19) ColumnarToRow\n      :     :  :                                   :                 :     +- FileScan parquet spark_catalog.tpcds_100.store_sales[ss_item_sk#17,ss_sold_date_sk#38] Batched: true, DataFilters: [isnotnull(ss_item_sk#17)], Format: Parquet, Location: InMemoryFileIndex(1823 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/store_..., PartitionFilters: [isnotnull(ss_sold_date_sk#38), dynamicpruningexpression(ss_sold_date_sk#38 IN dynamicpruning#609)], PushedFilters: [IsNotNull(ss_item_sk)], ReadSchema: struct<ss_item_sk:int>\n      :     :  :                                   :                 :           +- SubqueryBroadcast dynamicpruning#609, 0, [d_date_sk#39], [id=#2094]\n      :     :  :                                   :                 :              +- AdaptiveSparkPlan isFinalPlan=true\n                                                                                       +- == Final Plan ==\n                                                                                          BroadcastQueryStage 1\n                                                                                          +- ReusedExchange [d_date_sk#39, d_date#41], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=991]\n                                                                                       +- == Initial Plan ==\n                                                                                          BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=2091]\n                                                                                          +- Project [d_date_sk#39, d_date#41]\n                                                                                             +- Filter (d_year#45 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#39))\n                                                                                                +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#39,d_date#41,d_year#45] Batched: true, DataFilters: [d_year#45 IN (1999,2000,2001,2002), isnotnull(d_date_sk#39)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [In(d_year, [1999,2000,2001,2002]), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_date:date,d_year:int>\n      :     :  :                                   :                 +- BroadcastQueryStage 1\n      :     :  :                                   :                    +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=991]\n      :     :  :                                   :                       +- *(2) Project [d_date_sk#39, d_date#41]\n      :     :  :                                   :                          +- *(2) Filter (d_year#45 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#39))\n      :     :  :                                   :                             +- *(2) ColumnarToRow\n      :     :  :                                   :                                +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#39,d_date#41,d_year#45] Batched: true, DataFilters: [d_year#45 IN (1999,2000,2001,2002), isnotnull(d_date_sk#39)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [In(d_year, [1999,2000,2001,2002]), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_date:date,d_year:int>\n      :     :  :                                   +- *(23) Sort [i_item_sk#67 ASC NULLS FIRST], false, 0\n      :     :  :                                      +- AQEShuffleRead coalesced\n      :     :  :                                         +- ShuffleQueryStage 2\n      :     :  :                                            +- Exchange hashpartitioning(i_item_sk#67, 200), ENSURE_REQUIREMENTS, [plan_id=1012]\n      :     :  :                                               +- *(3) Filter isnotnull(i_item_sk#67)\n      :     :  :                                                  +- *(3) ColumnarToRow\n      :     :  :                                                     +- FileScan parquet spark_catalog.tpcds_100.item[i_item_sk#67,i_item_desc#71] Batched: true, DataFilters: [isnotnull(i_item_sk#67)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/item], PartitionFilters: [], PushedFilters: [IsNotNull(i_item_sk)], ReadSchema: struct<i_item_sk:int,i_item_desc:string>\n      :     :  +- Sort [c_customer_sk#481 ASC NULLS FIRST], false, 0\n      :     :     +- Project [c_customer_sk#481]\n      :     :        +- Filter (isnotnull(ssales#403) AND (cast(ssales#403 as decimal(38,8)) > (0.950000 * Subquery subquery#404, [id=#492])))\n      :     :           :  +- Subquery subquery#404, [id=#492]\n      :     :           :     +- AdaptiveSparkPlan isFinalPlan=false\n      :     :           :        +- HashAggregate(keys=[], functions=[max(csales#401)], output=[tpcds_cmax#402])\n      :     :           :           +- Exchange SinglePartition, ENSURE_REQUIREMENTS, [plan_id=490]\n      :     :           :              +- HashAggregate(keys=[], functions=[partial_max(csales#401)], output=[max#632])\n      :     :           :                 +- HashAggregate(keys=[c_customer_sk#89], functions=[sum((cast(ss_quantity#416 as decimal(10,0)) * ss_sales_price#419))], output=[csales#401])\n      :     :           :                    +- HashAggregate(keys=[c_customer_sk#89], functions=[partial_sum((cast(ss_quantity#416 as decimal(10,0)) * ss_sales_price#419))], output=[c_customer_sk#89, sum#635, isEmpty#636])\n      :     :           :                       +- Project [ss_quantity#416, ss_sales_price#419, c_customer_sk#89]\n      :     :           :                          +- SortMergeJoin [ss_customer_sk#409], [c_customer_sk#89], Inner\n      :     :           :                             :- Sort [ss_customer_sk#409 ASC NULLS FIRST], false, 0\n      :     :           :                             :  +- Exchange hashpartitioning(ss_customer_sk#409, 200), ENSURE_REQUIREMENTS, [plan_id=480]\n      :     :           :                             :     +- Project [ss_customer_sk#409, ss_quantity#416, ss_sales_price#419]\n      :     :           :                             :        +- BroadcastHashJoin [ss_sold_date_sk#429], [d_date_sk#430], Inner, BuildRight, false\n      :     :           :                             :           :- Filter isnotnull(ss_customer_sk#409)\n      :     :           :                             :           :  +- FileScan parquet spark_catalog.tpcds_100.store_sales[ss_customer_sk#409,ss_quantity#416,ss_sales_price#419,ss_sold_date_sk#429] Batched: true, DataFilters: [isnotnull(ss_customer_sk#409)], Format: Parquet, Location: InMemoryFileIndex(1823 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/store_..., PartitionFilters: [isnotnull(ss_sold_date_sk#429), dynamicpruningexpression(ss_sold_date_sk#429 IN dynamicpruning#6..., PushedFilters: [IsNotNull(ss_customer_sk)], ReadSchema: struct<ss_customer_sk:int,ss_quantity:int,ss_sales_price:decimal(7,2)>\n      :     :           :                             :           :        +- SubqueryAdaptiveBroadcast dynamicpruning#610, 0, true, Project [d_date_sk#430], [d_date_sk#430]\n      :     :           :                             :           :           +- AdaptiveSparkPlan isFinalPlan=false\n      :     :           :                             :           :              +- Project [d_date_sk#430]\n      :     :           :                             :           :                 +- Filter (d_year#436 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#430))\n      :     :           :                             :           :                    +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#430,d_year#436] Batched: true, DataFilters: [d_year#436 IN (1999,2000,2001,2002), isnotnull(d_date_sk#430)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [In(d_year, [1999,2000,2001,2002]), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>\n      :     :           :                             :           +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=475]\n      :     :           :                             :              +- Project [d_date_sk#430]\n      :     :           :                             :                 +- Filter (d_year#436 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#430))\n      :     :           :                             :                    +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#430,d_year#436] Batched: true, DataFilters: [d_year#436 IN (1999,2000,2001,2002), isnotnull(d_date_sk#430)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [In(d_year, [1999,2000,2001,2002]), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>\n      :     :           :                             +- Sort [c_customer_sk#89 ASC NULLS FIRST], false, 0\n      :     :           :                                +- Exchange hashpartitioning(c_customer_sk#89, 200), ENSURE_REQUIREMENTS, [plan_id=481]\n      :     :           :                                   +- Filter isnotnull(c_customer_sk#89)\n      :     :           :                                      +- FileScan parquet spark_catalog.tpcds_100.customer[c_customer_sk#89] Batched: true, DataFilters: [isnotnull(c_customer_sk#89)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/customer], PartitionFilters: [], PushedFilters: [IsNotNull(c_customer_sk)], ReadSchema: struct<c_customer_sk:int>\n      :     :           +- HashAggregate(keys=[c_customer_sk#481], functions=[sum((cast(ss_quantity#467 as decimal(10,0)) * ss_sales_price#470))], output=[c_customer_sk#481, ssales#403])\n      :     :              +- HashAggregate(keys=[c_customer_sk#481], functions=[partial_sum((cast(ss_quantity#467 as decimal(10,0)) * ss_sales_price#470))], output=[c_customer_sk#481, sum#625, isEmpty#626])\n      :     :                 +- Project [ss_quantity#467, ss_sales_price#470, c_customer_sk#481]\n      :     :                    +- SortMergeJoin [ss_customer_sk#460], [c_customer_sk#481], Inner\n      :     :                       :- Sort [ss_customer_sk#460 ASC NULLS FIRST], false, 0\n      :     :                       :  +- ShuffleQueryStage 3\n      :     :                       :     +- Exchange hashpartitioning(ss_customer_sk#460, 200), ENSURE_REQUIREMENTS, [plan_id=1042]\n      :     :                       :        +- *(4) Project [ss_customer_sk#460, ss_quantity#467, ss_sales_price#470]\n      :     :                       :           +- *(4) Filter isnotnull(ss_customer_sk#460)\n      :     :                       :              +- *(4) ColumnarToRow\n      :     :                       :                 +- FileScan parquet spark_catalog.tpcds_100.store_sales[ss_customer_sk#460,ss_quantity#467,ss_sales_price#470,ss_sold_date_sk#480] Batched: true, DataFilters: [isnotnull(ss_customer_sk#460)], Format: Parquet, Location: CatalogFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/store_sales], PartitionFilters: [], PushedFilters: [IsNotNull(ss_customer_sk)], ReadSchema: struct<ss_customer_sk:int,ss_quantity:int,ss_sales_price:decimal(7,2)>\n      :     :                       +- Sort [c_customer_sk#481 ASC NULLS FIRST], false, 0\n      :     :                          +- ShuffleQueryStage 4\n      :     :                             +- Exchange hashpartitioning(c_customer_sk#481, 200), ENSURE_REQUIREMENTS, [plan_id=1061]\n      :     :                                +- *(5) Filter isnotnull(c_customer_sk#481)\n      :     :                                   +- *(5) ColumnarToRow\n      :     :                                      +- FileScan parquet spark_catalog.tpcds_100.customer[c_customer_sk#481] Batched: true, DataFilters: [isnotnull(c_customer_sk#481)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/customer], PartitionFilters: [], PushedFilters: [IsNotNull(c_customer_sk)], ReadSchema: struct<c_customer_sk:int>\n      :     +- BroadcastQueryStage 5\n      :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=1088]\n      :           +- *(6) Project [d_date_sk#517]\n      :              +- *(6) Filter ((((isnotnull(d_year#523) AND isnotnull(d_moy#525)) AND (d_year#523 = 1999)) AND (d_moy#525 = 1)) AND isnotnull(d_date_sk#517))\n      :                 +- *(6) ColumnarToRow\n      :                    +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#517,d_year#523,d_moy#525] Batched: true, DataFilters: [isnotnull(d_year#523), isnotnull(d_moy#525), (d_year#523 = 1999), (d_moy#525 = 1), isnotnull(d_d..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), IsNotNull(d_moy), EqualTo(d_year,1999), EqualTo(d_moy,1), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>\n      +- SortMergeJoin [c_customer_sk#499], [c_customer_sk#481], LeftSemi\n         :- Sort [c_customer_sk#499 ASC NULLS FIRST], false, 0\n         :  +- ShuffleQueryStage 6\n         :     +- Exchange hashpartitioning(c_customer_sk#499, 200), ENSURE_REQUIREMENTS, [plan_id=1107]\n         :        +- *(7) Filter isnotnull(c_customer_sk#499)\n         :           +- *(7) ColumnarToRow\n         :              +- FileScan parquet spark_catalog.tpcds_100.customer[c_customer_sk#499,c_first_name#507,c_last_name#508] Batched: true, DataFilters: [isnotnull(c_customer_sk#499)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/customer], PartitionFilters: [], PushedFilters: [IsNotNull(c_customer_sk)], ReadSchema: struct<c_customer_sk:int,c_first_name:string,c_last_name:string>\n         +- Sort [c_customer_sk#481 ASC NULLS FIRST], false, 0\n            +- Project [c_customer_sk#481]\n               +- Filter (isnotnull(ssales#403) AND (cast(ssales#403 as decimal(38,8)) > (0.950000 * Subquery subquery#404, [id=#492])))\n                  :  +- Subquery subquery#404, [id=#492]\n                  :     +- AdaptiveSparkPlan isFinalPlan=false\n                  :        +- HashAggregate(keys=[], functions=[max(csales#401)], output=[tpcds_cmax#402])\n                  :           +- Exchange SinglePartition, ENSURE_REQUIREMENTS, [plan_id=490]\n                  :              +- HashAggregate(keys=[], functions=[partial_max(csales#401)], output=[max#632])\n                  :                 +- HashAggregate(keys=[c_customer_sk#89], functions=[sum((cast(ss_quantity#416 as decimal(10,0)) * ss_sales_price#419))], output=[csales#401])\n                  :                    +- HashAggregate(keys=[c_customer_sk#89], functions=[partial_sum((cast(ss_quantity#416 as decimal(10,0)) * ss_sales_price#419))], output=[c_customer_sk#89, sum#635, isEmpty#636])\n                  :                       +- Project [ss_quantity#416, ss_sales_price#419, c_customer_sk#89]\n                  :                          +- SortMergeJoin [ss_customer_sk#409], [c_customer_sk#89], Inner\n                  :                             :- Sort [ss_customer_sk#409 ASC NULLS FIRST], false, 0\n                  :                             :  +- Exchange hashpartitioning(ss_customer_sk#409, 200), ENSURE_REQUIREMENTS, [plan_id=480]\n                  :                             :     +- Project [ss_customer_sk#409, ss_quantity#416, ss_sales_price#419]\n                  :                             :        +- BroadcastHashJoin [ss_sold_date_sk#429], [d_date_sk#430], Inner, BuildRight, false\n                  :                             :           :- Filter isnotnull(ss_customer_sk#409)\n                  :                             :           :  +- FileScan parquet spark_catalog.tpcds_100.store_sales[ss_customer_sk#409,ss_quantity#416,ss_sales_price#419,ss_sold_date_sk#429] Batched: true, DataFilters: [isnotnull(ss_customer_sk#409)], Format: Parquet, Location: InMemoryFileIndex(1823 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/store_..., PartitionFilters: [isnotnull(ss_sold_date_sk#429), dynamicpruningexpression(ss_sold_date_sk#429 IN dynamicpruning#6..., PushedFilters: [IsNotNull(ss_customer_sk)], ReadSchema: struct<ss_customer_sk:int,ss_quantity:int,ss_sales_price:decimal(7,2)>\n                  :                             :           :        +- SubqueryAdaptiveBroadcast dynamicpruning#610, 0, true, Project [d_date_sk#430], [d_date_sk#430]\n                  :                             :           :           +- AdaptiveSparkPlan isFinalPlan=false\n                  :                             :           :              +- Project [d_date_sk#430]\n                  :                             :           :                 +- Filter (d_year#436 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#430))\n                  :                             :           :                    +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#430,d_year#436] Batched: true, DataFilters: [d_year#436 IN (1999,2000,2001,2002), isnotnull(d_date_sk#430)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [In(d_year, [1999,2000,2001,2002]), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>\n                  :                             :           +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=475]\n                  :                             :              +- Project [d_date_sk#430]\n                  :                             :                 +- Filter (d_year#436 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#430))\n                  :                             :                    +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#430,d_year#436] Batched: true, DataFilters: [d_year#436 IN (1999,2000,2001,2002), isnotnull(d_date_sk#430)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [In(d_year, [1999,2000,2001,2002]), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>\n                  :                             +- Sort [c_customer_sk#89 ASC NULLS FIRST], false, 0\n                  :                                +- Exchange hashpartitioning(c_customer_sk#89, 200), ENSURE_REQUIREMENTS, [plan_id=481]\n                  :                                   +- Filter isnotnull(c_customer_sk#89)\n                  :                                      +- FileScan parquet spark_catalog.tpcds_100.customer[c_customer_sk#89] Batched: true, DataFilters: [isnotnull(c_customer_sk#89)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/customer], PartitionFilters: [], PushedFilters: [IsNotNull(c_customer_sk)], ReadSchema: struct<c_customer_sk:int>\n                  +- HashAggregate(keys=[c_customer_sk#481], functions=[sum((cast(ss_quantity#467 as decimal(10,0)) * ss_sales_price#470))], output=[c_customer_sk#481, ssales#403])\n                     +- HashAggregate(keys=[c_customer_sk#481], functions=[partial_sum((cast(ss_quantity#467 as decimal(10,0)) * ss_sales_price#470))], output=[c_customer_sk#481, sum#625, isEmpty#626])\n                        +- Project [ss_quantity#467, ss_sales_price#470, c_customer_sk#481]\n                           +- SortMergeJoin [ss_customer_sk#460], [c_customer_sk#481], Inner\n                              :- Sort [ss_customer_sk#460 ASC NULLS FIRST], false, 0\n                              :  +- ShuffleQueryStage 8\n                              :     +- ReusedExchange [ss_customer_sk#460, ss_quantity#467, ss_sales_price#470], Exchange hashpartitioning(ss_customer_sk#460, 200), ENSURE_REQUIREMENTS, [plan_id=1042]\n                              +- Sort [c_customer_sk#481 ASC NULLS FIRST], false, 0\n                                 +- ShuffleQueryStage 10\n                                    +- ReusedExchange [c_customer_sk#481], Exchange hashpartitioning(c_customer_sk#481, 200), ENSURE_REQUIREMENTS, [plan_id=1061]\n"
      },
      "IM" : {
        "inputSizeInBytes" : 17820711256,
        "inputRowCount" : 557497146
      },
      "InitialPartitionNum" : 200,
      "PD" : {
        "2" : [ 17371601, 17313063, 16996707, 17100959, 17033226, 17236981, 17071883, 16947894, 17078453, 17320527, 17392136, 17189957, 17396414, 17311465, 17218617, 17091886, 17296486, 17602538, 17086450, 17206721, 17104075, 17257645, 17447592, 17284068, 17180017, 17251810, 17078510, 17428751, 17190703, 17091180, 16888245, 17130838, 17230626, 16956499, 17240499, 17279493, 17046255, 16925646, 16907666, 17034480, 16940011, 17199974, 16869146, 17295966, 17353222, 16846943, 17325947, 17131813, 17231729, 17311901, 17440035, 17297061, 17072505, 17276021, 17146516, 17169923, 17129259, 16823901, 16978621, 17169124, 17091808, 17480756, 16982840, 17160489, 16978313, 17460598, 17233558, 17090869, 17156297, 17354514, 17312619, 17034009, 16927254, 17287614, 17365219, 17389547, 17480370, 17316975, 17251186, 17264228, 17243624, 17381439, 17433913, 16760532, 17064606, 16931418, 17063808, 17170220, 17151390, 17444256, 17095914, 17182115, 17324912, 17111549, 17203150, 17522946, 16932260, 16948450, 17145841, 16867015, 16765024, 17338612, 17173734, 16986979, 17131384, 17352202, 17241238, 17627527, 16822357, 16867839, 17008290, 17184359, 17395163, 17082612, 17338942, 17121168, 16815534, 16899165, 17149200, 17075267, 17087177, 17178853, 17547989, 17158451, 17252438, 17439694, 17073151, 16986975, 17140740, 16958860, 17422277, 17317255, 17311966, 17191736, 16950873, 17009149, 17326021, 17377512, 17100048, 17282433, 17170675, 16883065, 17109865, 17346265, 17166782, 17218832, 17598899, 17156005, 17190632, 17175152, 17467989, 17158171, 17400931, 17351617, 17331236, 17383323, 17108352, 17275713, 17473037, 16820939, 16928731, 16941370, 17356646, 16899933, 17228069, 17252334, 17147748, 17345681, 17313972, 16910213, 17387811, 17599878, 17309032, 17226960, 17276187, 16945588, 17360401, 16960900, 17134588, 17028930, 17029163, 17234190, 17064091, 17105964, 17637409, 17303023, 17722750, 17370523, 17066032, 17283328, 17271878, 17131573, 17011172, 16816679, 17307952, 17504379, 17083957, 17159149, 17341949, 16921044 ],
        "4" : [ 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 290960, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 290960, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 290960, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 290960, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 290960, 264509, 264509, 290960, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 290960, 264509, 264509, 264509, 290960, 264509, 290960, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 290960, 264509, 290960, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509 ],
        "7" : [ 124106, 128619, 123941, 122838, 118791, 119954, 137626, 122773, 127392, 126979, 124531, 125115, 123304, 128212, 119800, 129439, 131250, 122189, 124531, 131132, 120490, 129964, 124531, 128737, 122720, 122720, 121080, 122136, 127569, 125752, 127569, 128153, 127510, 133184, 122248, 130023, 128094, 129964, 130666, 128678, 119269, 124472, 123941, 121605, 123475, 133243, 125056, 130548, 127569, 124472, 120490, 120437, 127622, 128153, 124531, 124584, 127510, 123304, 118791, 129321, 122189, 126454, 124584, 125699, 131893, 123947, 125699, 124578, 124531, 123947, 129439, 125699, 128094, 120384, 129321, 121021, 127156, 124649, 119853, 124000, 133120, 128153, 123888, 127569, 126401, 124472, 122720, 131250, 131775, 128855, 129380, 122773, 122189, 115340, 131309, 133120, 113317, 122189, 122720, 131191, 129964, 132477, 120437, 123475, 125699, 126342, 125115, 112685, 133120, 125056, 121664, 132418, 130489, 116402, 127569, 126342, 126224, 123357, 122189, 133704, 119375, 134347, 135633, 125115, 129321, 133886, 130023, 123422, 121658, 128737, 128678, 129964, 125699, 125115, 133243, 126985, 127510, 124584, 130607, 122195, 133061, 118260, 127569, 129444, 128737, 125115, 128737, 122779, 122189, 127451, 135049, 115977, 126342, 123363, 125174, 121711, 125817, 136340, 124525, 128801, 122832, 128153, 126808, 125233, 129321, 128153, 133881, 131250, 124472, 126867, 124531, 134347, 117682, 130607, 118839, 123357, 127510, 126401, 133763, 131893, 131309, 129321, 124584, 124059, 124472, 131314, 137562, 119322, 132595, 121021, 122136, 128153, 114809, 133179, 130082, 122720, 131250, 125699, 123947, 120490 ],
        "3" : [ 52331, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 57565, 57565, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 57565, 52331, 52331, 52331, 57565, 57565, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 57565, 57565, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 57565, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 57565, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 57565, 57565, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 57565, 57565, 52331, 57565, 52331, 57565, 52331, 57565, 52331, 52331, 57565, 52331, 57565, 57565, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 57565, 57565, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 57565, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 57565, 57565, 52331, 52331, 52331, 52331 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 15,
        "FinishedTasksNum" : 5,
        "FinishedTasksTotalTimeInMs" : 132149.0,
        "FinishedTasksDistributionInMs" : [ 25727.0, 26185.0, 26335.0, 26878.0, 27024.0 ]
      },
      "QueryStageOptimizationId" : 11,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 32 ],
      "Objectives" : {
        "DurationInMs" : 14215,
        "TotalTasksDurationInMs" : 220002,
        "IOBytes" : {
          "Total" : 3752273298,
          "Details" : {
            "IR" : 0,
            "IW" : 0,
            "SR" : 3752271730,
            "SW" : 1568
          }
        }
      }
    },
    "11" : {
      "QSLogical" : {
        "operators" : {
          "0" : {
            "sign" : 1217444409,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 17364,
                "rowCount" : 1447
              },
              "compileTime" : {
                "sizeInBytes" : 17364,
                "rowCount" : 1447
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#430] "
          },
          "1" : {
            "sign" : 2051540096,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 355962,
                "rowCount" : 1447
              },
              "compileTime" : {
                "sizeInBytes" : 355962,
                "rowCount" : 1447
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (d_year#436 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#430)) "
          },
          "2" : {
            "sign" : -358797686,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 17970054,
                "rowCount" : 73049
              },
              "compileTime" : {
                "sizeInBytes" : 17970054,
                "rowCount" : 73049
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#430, d_date_id#431, d_date#432, d_month_seq#433, d_week_seq#434, d_quarter_seq#435, d_year#436, d_dow#437, d_moy#438, d_dom#439, d_qoy#440, d_fy_year#441, d_fy_quarter_seq#442, d_fy_week_seq#443, d_day_name#444, d_quarter_name#445, d_holiday#446, d_weekend#447, d_following_holiday#448, d_first_dom#449, d_last_dom#450, d_same_day_ly#451, d_same_day_lq#452, d_current_day#453, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "LogicalRelation",
          "toId" : 1,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Filter",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [d_date_sk#430]\n+- Filter (d_year#436 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#430))\n   +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#430,d_date_id#431,d_date#432,d_month_seq#433,d_week_seq#434,d_quarter_seq#435,d_year#436,d_dow#437,d_moy#438,d_dom#439,d_qoy#440,d_fy_year#441,d_fy_quarter_seq#442,d_fy_week_seq#443,d_day_name#444,d_quarter_name#445,d_holiday#446,d_weekend#447,d_following_holiday#448,d_first_dom#449,d_last_dom#450,d_same_day_ly#451,d_same_day_lq#452,d_current_day#453,... 4 more fields] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "0" : {
            "sign" : -2055562716,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 17364,
            "rowCount" : 1447,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [1]: [d_date_sk#430] Input [2]: [d_date_sk#430, d_year#436] "
          },
          "1" : {
            "sign" : 442853611,
            "className" : "org.apache.spark.sql.execution.FilterExec",
            "sizeInBytes" : 17364,
            "rowCount" : 1447,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Input [2]: [d_date_sk#430, d_year#436] Condition : (d_year#436 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#430)) "
          },
          "2" : {
            "sign" : -1465745931,
            "className" : "org.apache.spark.sql.execution.FileSourceScanExec",
            "sizeInBytes" : 17364,
            "rowCount" : 1447,
            "isRuntime" : false,
            "predicate" : " (unknown) Scan parquet spark_catalog.tpcds_100.date_dim Output [2]: [d_date_sk#430, d_year#436] Batched: true Location: InMemoryFileIndex [hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim] PushedFilters: [In(d_year, [1999,2000,2001,2002]), IsNotNull(d_date_sk)] ReadSchema: struct<d_date_sk:int,d_year:int> "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "Scan parquet spark_catalog.tpcds_100.date_dim",
          "toId" : 1,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Filter",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [d_date_sk#430]\n+- Filter (d_year#436 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#430))\n   +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#430,d_year#436] Batched: true, DataFilters: [d_year#436 IN (1999,2000,2001,2002), isnotnull(d_date_sk#430)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [In(d_year, [1999,2000,2001,2002]), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>\n"
      },
      "IM" : {
        "inputSizeInBytes" : 17364,
        "inputRowCount" : 1447
      },
      "InitialPartitionNum" : 0,
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 15,
        "FinishedTasksNum" : 5,
        "FinishedTasksTotalTimeInMs" : 132149.0,
        "FinishedTasksDistributionInMs" : [ 25727.0, 26185.0, 26335.0, 26878.0, 27024.0 ]
      },
      "QueryStageOptimizationId" : 12,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 18 ],
      "Objectives" : {
        "DurationInMs" : 195,
        "TotalTasksDurationInMs" : 191,
        "IOBytes" : {
          "Total" : 93562,
          "Details" : {
            "IR" : 93562,
            "IW" : 0,
            "SR" : 0,
            "SW" : 0
          }
        }
      }
    },
    "9" : {
      "QSLogical" : {
        "operators" : {
          "4" : {
            "sign" : -87683593,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 5745158420,
                "rowCount" : -1
              },
              "compileTime" : {
                "sizeInBytes" : 5745158420,
                "rowCount" : -1
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [_groupingexpression#608, i_item_sk#67, d_date#41], [i_item_sk#67 AS item_sk#398, count(1) AS cnt#400L] "
          },
          "5" : {
            "sign" : -1523347482,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 10341285156,
                "rowCount" : 287257921
              },
              "compileTime" : {
                "sizeInBytes" : 10341285156,
                "rowCount" : 287257921
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date#41, i_item_sk#67, substr(i_item_desc#71, 1, 30) AS _groupingexpression#608] "
          },
          "6" : {
            "sign" : -1534104217,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 38205303493,
                "rowCount" : 287257921
              },
              "compileTime" : {
                "sizeInBytes" : 38205303493,
                "rowCount" : 287257921
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_item_sk#17 = i_item_sk#67) "
          },
          "1" : {
            "sign" : 1668945855,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 4561805056,
                "rowCount" : 142556408
              },
              "compileTime" : {
                "sizeInBytes" : 4561805056,
                "rowCount" : 142556408
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (cs_item_sk#121 = item_sk#398) "
          },
          "0" : {
            "sign" : -346161395,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 3991579424,
                "rowCount" : 142556408
              },
              "compileTime" : {
                "sizeInBytes" : 3991579424,
                "rowCount" : 142556408
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_bill_customer_sk#109, cs_quantity#124, cs_list_price#126, cs_sold_date_sk#140] "
          },
          "2" : {
            "sign" : -430777630,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 3447095052,
                "rowCount" : -1
              },
              "compileTime" : {
                "sizeInBytes" : 3447095052,
                "rowCount" : -1
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [item_sk#398] "
          },
          "3" : {
            "sign" : 2026117814,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 5745158420,
                "rowCount" : -1
              },
              "compileTime" : {
                "sizeInBytes" : 5745158420,
                "rowCount" : -1
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (cnt#400L > 4) "
          }
        },
        "links" : [ {
          "fromId" : 6,
          "fromName" : "Join",
          "toId" : 5,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Project",
          "toId" : 4,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Aggregate",
          "toId" : 3,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Filter",
          "toId" : 2,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Project",
          "toId" : 1,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Join",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [cs_bill_customer_sk#109, cs_quantity#124, cs_list_price#126, cs_sold_date_sk#140]\n+- Join LeftSemi, (cs_item_sk#121 = item_sk#398)\n   :- Project [cs_bill_customer_sk#109, cs_item_sk#121, cs_quantity#124, cs_list_price#126, cs_sold_date_sk#140]\n   :  +- Filter ((isnotnull(cs_bill_customer_sk#109) AND isnotnull(cs_sold_date_sk#140)) AND dynamicpruning#614 [cs_sold_date_sk#140])\n   :     :  +- Project [d_date_sk#517]\n   :     :     +- Filter (((isnotnull(d_year#523) AND isnotnull(d_moy#525)) AND ((d_year#523 = 1999) AND (d_moy#525 = 1))) AND isnotnull(d_date_sk#517))\n   :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#517,d_date_id#518,d_date#519,d_month_seq#520,d_week_seq#521,d_quarter_seq#522,d_year#523,d_dow#524,d_moy#525,d_dom#526,d_qoy#527,d_fy_year#528,d_fy_quarter_seq#529,d_fy_week_seq#530,d_day_name#531,d_quarter_name#532,d_holiday#533,d_weekend#534,d_following_holiday#535,d_first_dom#536,d_last_dom#537,d_same_day_ly#538,d_same_day_lq#539,d_current_day#540,... 4 more fields] parquet\n   :     +- Relation spark_catalog.tpcds_100.catalog_sales[cs_sold_time_sk#107,cs_ship_date_sk#108,cs_bill_customer_sk#109,cs_bill_cdemo_sk#110,cs_bill_hdemo_sk#111,cs_bill_addr_sk#112,cs_ship_customer_sk#113,cs_ship_cdemo_sk#114,cs_ship_hdemo_sk#115,cs_ship_addr_sk#116,cs_call_center_sk#117,cs_catalog_page_sk#118,cs_ship_mode_sk#119,cs_warehouse_sk#120,cs_item_sk#121,cs_promo_sk#122,cs_order_number#123L,cs_quantity#124,cs_wholesale_cost#125,cs_list_price#126,cs_sales_price#127,cs_ext_discount_amt#128,cs_ext_sales_price#129,cs_ext_wholesale_cost#130,... 10 more fields] parquet\n   +- Project [item_sk#398]\n      +- Filter (cnt#400L > 4)\n         +- Aggregate [_groupingexpression#608, i_item_sk#67, d_date#41], [i_item_sk#67 AS item_sk#398, count(1) AS cnt#400L]\n            +- Project [d_date#41, i_item_sk#67, substr(i_item_desc#71, 1, 30) AS _groupingexpression#608]\n               +- Join Inner, (ss_item_sk#17 = i_item_sk#67)\n                  :- Project [ss_item_sk#17, d_date#41]\n                  :  +- Join Inner, (ss_sold_date_sk#38 = d_date_sk#39)\n                  :     :- Project [ss_item_sk#17, ss_sold_date_sk#38]\n                  :     :  +- Filter ((isnotnull(ss_sold_date_sk#38) AND isnotnull(ss_item_sk#17)) AND dynamicpruning#609 [ss_sold_date_sk#38])\n                  :     :     :  +- Project [d_date_sk#39, d_date#41]\n                  :     :     :     +- Filter (d_year#45 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#39))\n                  :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#39,d_date_id#40,d_date#41,d_month_seq#42,d_week_seq#43,d_quarter_seq#44,d_year#45,d_dow#46,d_moy#47,d_dom#48,d_qoy#49,d_fy_year#50,d_fy_quarter_seq#51,d_fy_week_seq#52,d_day_name#53,d_quarter_name#54,d_holiday#55,d_weekend#56,d_following_holiday#57,d_first_dom#58,d_last_dom#59,d_same_day_ly#60,d_same_day_lq#61,d_current_day#62,... 4 more fields] parquet\n                  :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#16,ss_item_sk#17,ss_customer_sk#18,ss_cdemo_sk#19,ss_hdemo_sk#20,ss_addr_sk#21,ss_store_sk#22,ss_promo_sk#23,ss_ticket_number#24L,ss_quantity#25,ss_wholesale_cost#26,ss_list_price#27,ss_sales_price#28,ss_ext_discount_amt#29,ss_ext_sales_price#30,ss_ext_wholesale_cost#31,ss_ext_list_price#32,ss_ext_tax#33,ss_coupon_amt#34,ss_net_paid#35,ss_net_paid_inc_tax#36,ss_net_profit#37,ss_sold_date_sk#38] parquet\n                  :     +- Project [d_date_sk#39, d_date#41]\n                  :        +- Filter (d_year#45 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#39))\n                  :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#39,d_date_id#40,d_date#41,d_month_seq#42,d_week_seq#43,d_quarter_seq#44,d_year#45,d_dow#46,d_moy#47,d_dom#48,d_qoy#49,d_fy_year#50,d_fy_quarter_seq#51,d_fy_week_seq#52,d_day_name#53,d_quarter_name#54,d_holiday#55,d_weekend#56,d_following_holiday#57,d_first_dom#58,d_last_dom#59,d_same_day_ly#60,d_same_day_lq#61,d_current_day#62,... 4 more fields] parquet\n                  +- Project [i_item_sk#67, i_item_desc#71]\n                     +- Filter isnotnull(i_item_sk#67)\n                        +- Relation spark_catalog.tpcds_100.item[i_item_sk#67,i_item_id#68,i_rec_start_date#69,i_rec_end_date#70,i_item_desc#71,i_current_price#72,i_wholesale_cost#73,i_brand_id#74,i_brand#75,i_class_id#76,i_class#77,i_category_id#78,i_category#79,i_manufact_id#80,i_manufact#81,i_size#82,i_formulation#83,i_color#84,i_units#85,i_container#86,i_manager_id#87,i_product_name#88] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "12" : {
            "sign" : 1287568967,
            "className" : "org.apache.spark.sql.execution.adaptive.ShuffleQueryStageExec",
            "sizeInBytes" : 5280146112,
            "rowCount" : 220006088,
            "isRuntime" : true,
            "predicate" : " (unknown) ShuffleQueryStage Output [2]: [ss_item_sk#17, d_date#41] Arguments: 28 "
          },
          "8" : {
            "sign" : 1000679152,
            "className" : "org.apache.spark.sql.execution.aggregate.HashAggregateExec",
            "sizeInBytes" : 5745158420,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) HashAggregate Input [3]: [d_date#41, i_item_sk#67, _groupingexpression#608] Keys [3]: [_groupingexpression#608, i_item_sk#67, d_date#41] Functions [1]: [partial_count(1)] Aggregate Attributes [1]: [count#621L] Results [4]: [_groupingexpression#608, i_item_sk#67, d_date#41, count#622L] "
          },
          "4" : {
            "sign" : 957669947,
            "className" : "org.apache.spark.sql.execution.SortExec",
            "sizeInBytes" : -1,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Input [1]: [item_sk#398] Arguments: [item_sk#398 ASC NULLS FIRST], false, 0 "
          },
          "11" : {
            "sign" : 1172276223,
            "className" : "org.apache.spark.sql.execution.SortExec",
            "sizeInBytes" : -1,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Input [2]: [ss_item_sk#17, d_date#41] Arguments: [ss_item_sk#17 ASC NULLS FIRST], false, 0 "
          },
          "9" : {
            "sign" : -1214482826,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 10341285156,
            "rowCount" : 287257921,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [3]: [d_date#41, i_item_sk#67, substr(i_item_desc#71, 1, 30) AS _groupingexpression#608] Input [4]: [ss_item_sk#17, d_date#41, i_item_sk#67, i_item_desc#71] "
          },
          "13" : {
            "sign" : -214735601,
            "className" : "org.apache.spark.sql.execution.SortExec",
            "sizeInBytes" : -1,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Input [2]: [i_item_sk#67, i_item_desc#71] Arguments: [i_item_sk#67 ASC NULLS FIRST], false, 0 "
          },
          "5" : {
            "sign" : -2119878108,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 3447095052,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [1]: [item_sk#398] Input [2]: [item_sk#398, cnt#400L] "
          },
          "10" : {
            "sign" : 2127632791,
            "className" : "org.apache.spark.sql.execution.joins.SortMergeJoinExec",
            "sizeInBytes" : 38205303493,
            "rowCount" : 287257921,
            "isRuntime" : false,
            "predicate" : " (unknown) SortMergeJoin Left keys [1]: [ss_item_sk#17] Right keys [1]: [i_item_sk#67] Join type: Inner Join condition: None "
          },
          "6" : {
            "sign" : 1542797212,
            "className" : "org.apache.spark.sql.execution.FilterExec",
            "sizeInBytes" : 5745158420,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Input [2]: [item_sk#398, cnt#400L] Condition : (cnt#400L > 4) "
          },
          "1" : {
            "sign" : -1372541158,
            "className" : "org.apache.spark.sql.execution.joins.SortMergeJoinExec",
            "sizeInBytes" : 4561805056,
            "rowCount" : 142556408,
            "isRuntime" : false,
            "predicate" : " (unknown) SortMergeJoin Left keys [1]: [cs_item_sk#121] Right keys [1]: [item_sk#398] Join type: LeftSemi Join condition: None "
          },
          "14" : {
            "sign" : -1418478049,
            "className" : "org.apache.spark.sql.execution.adaptive.ShuffleQueryStageExec",
            "sizeInBytes" : 26102424,
            "rowCount" : 204000,
            "isRuntime" : true,
            "predicate" : " (unknown) ShuffleQueryStage Output [2]: [i_item_sk#67, i_item_desc#71] Arguments: 2 "
          },
          "0" : {
            "sign" : 895989674,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 3991579424,
            "rowCount" : 142556408,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [4]: [cs_bill_customer_sk#109, cs_quantity#124, cs_list_price#126, cs_sold_date_sk#140] Input [5]: [cs_bill_customer_sk#109, cs_item_sk#121, cs_quantity#124, cs_list_price#126, cs_sold_date_sk#140] "
          },
          "2" : {
            "sign" : -2144061722,
            "className" : "org.apache.spark.sql.execution.SortExec",
            "sizeInBytes" : -1,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Input [5]: [cs_bill_customer_sk#109, cs_item_sk#121, cs_quantity#124, cs_list_price#126, cs_sold_date_sk#140] Arguments: [cs_item_sk#121 ASC NULLS FIRST], false, 0 "
          },
          "7" : {
            "sign" : -227010311,
            "className" : "org.apache.spark.sql.execution.aggregate.HashAggregateExec",
            "sizeInBytes" : 5745158420,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) HashAggregate Input [4]: [_groupingexpression#608, i_item_sk#67, d_date#41, count#622L] Keys [3]: [_groupingexpression#608, i_item_sk#67, d_date#41] Functions [1]: [count(1)] Aggregate Attributes [1]: [count(1)#405L] Results [2]: [i_item_sk#67 AS item_sk#398, count(1)#405L AS cnt#400L] "
          },
          "3" : {
            "sign" : 398574806,
            "className" : "org.apache.spark.sql.execution.adaptive.ShuffleQueryStageExec",
            "sizeInBytes" : 67361424,
            "rowCount" : 1403363,
            "isRuntime" : true,
            "predicate" : " (unknown) ShuffleQueryStage Output [5]: [cs_bill_customer_sk#109, cs_item_sk#121, cs_quantity#124, cs_list_price#126, cs_sold_date_sk#140] Arguments: 0 "
          }
        },
        "links" : [ {
          "fromId" : 3,
          "fromName" : "ShuffleQueryStage",
          "toId" : 2,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "SortMergeJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 12,
          "fromName" : "ShuffleQueryStage",
          "toId" : 11,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "Sort",
          "toId" : 10,
          "toName" : "SortMergeJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 14,
          "fromName" : "ShuffleQueryStage",
          "toId" : 13,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 13,
          "fromName" : "Sort",
          "toId" : 10,
          "toName" : "SortMergeJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "SortMergeJoin",
          "toId" : 9,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "Project",
          "toId" : 8,
          "toName" : "HashAggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "HashAggregate",
          "toId" : 7,
          "toName" : "HashAggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "HashAggregate",
          "toId" : 6,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Filter",
          "toId" : 5,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Project",
          "toId" : 4,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "SortMergeJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "SortMergeJoin",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [cs_bill_customer_sk#109, cs_quantity#124, cs_list_price#126, cs_sold_date_sk#140]\n+- SortMergeJoin [cs_item_sk#121], [item_sk#398], LeftSemi\n   :- Sort [cs_item_sk#121 ASC NULLS FIRST], false, 0\n   :  +- ShuffleQueryStage 0\n   :     +- Exchange hashpartitioning(cs_item_sk#121, 200), ENSURE_REQUIREMENTS, [plan_id=972]\n   :        +- *(1) Filter isnotnull(cs_bill_customer_sk#109)\n   :           +- *(1) ColumnarToRow\n   :              +- FileScan parquet spark_catalog.tpcds_100.catalog_sales[cs_bill_customer_sk#109,cs_item_sk#121,cs_quantity#124,cs_list_price#126,cs_sold_date_sk#140] Batched: true, DataFilters: [isnotnull(cs_bill_customer_sk#109)], Format: Parquet, Location: InMemoryFileIndex(1836 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/catalo..., PartitionFilters: [isnotnull(cs_sold_date_sk#140), dynamicpruningexpression(cs_sold_date_sk#140 IN dynamicpruning#6..., PushedFilters: [IsNotNull(cs_bill_customer_sk)], ReadSchema: struct<cs_bill_customer_sk:int,cs_item_sk:int,cs_quantity:int,cs_list_price:decimal(7,2)>\n   :                    +- SubqueryBroadcast dynamicpruning#614, 0, [d_date_sk#517], [id=#957]\n   :                       +- AdaptiveSparkPlan isFinalPlan=true\n                              +- == Final Plan ==\n                                 BroadcastQueryStage 1\n                                 +- ReusedExchange [d_date_sk#517], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=1088]\n                              +- == Initial Plan ==\n                                 BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=954]\n                                 +- Project [d_date_sk#517]\n                                    +- Filter ((((isnotnull(d_year#523) AND isnotnull(d_moy#525)) AND (d_year#523 = 1999)) AND (d_moy#525 = 1)) AND isnotnull(d_date_sk#517))\n                                       +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#517,d_year#523,d_moy#525] Batched: true, DataFilters: [isnotnull(d_year#523), isnotnull(d_moy#525), (d_year#523 = 1999), (d_moy#525 = 1), isnotnull(d_d..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), IsNotNull(d_moy), EqualTo(d_year,1999), EqualTo(d_moy,1), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>\n   +- Sort [item_sk#398 ASC NULLS FIRST], false, 0\n      +- Project [item_sk#398]\n         +- Filter (cnt#400L > 4)\n            +- HashAggregate(keys=[_groupingexpression#608, i_item_sk#67, d_date#41], functions=[count(1)], output=[item_sk#398, cnt#400L])\n               +- HashAggregate(keys=[_groupingexpression#608, i_item_sk#67, d_date#41], functions=[partial_count(1)], output=[_groupingexpression#608, i_item_sk#67, d_date#41, count#622L])\n                  +- Project [d_date#41, i_item_sk#67, substr(i_item_desc#71, 1, 30) AS _groupingexpression#608]\n                     +- SortMergeJoin [ss_item_sk#17], [i_item_sk#67], Inner\n                        :- Sort [ss_item_sk#17 ASC NULLS FIRST], false, 0\n                        :  +- ShuffleQueryStage 28\n                        :     +- Exchange hashpartitioning(ss_item_sk#17, 200), ENSURE_REQUIREMENTS, [plan_id=2120]\n                        :        +- *(19) Project [ss_item_sk#17, d_date#41]\n                        :           +- *(19) BroadcastHashJoin [ss_sold_date_sk#38], [d_date_sk#39], Inner, BuildRight, false\n                        :              :- *(19) Filter isnotnull(ss_item_sk#17)\n                        :              :  +- *(19) ColumnarToRow\n                        :              :     +- FileScan parquet spark_catalog.tpcds_100.store_sales[ss_item_sk#17,ss_sold_date_sk#38] Batched: true, DataFilters: [isnotnull(ss_item_sk#17)], Format: Parquet, Location: InMemoryFileIndex(1823 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/store_..., PartitionFilters: [isnotnull(ss_sold_date_sk#38), dynamicpruningexpression(ss_sold_date_sk#38 IN dynamicpruning#609)], PushedFilters: [IsNotNull(ss_item_sk)], ReadSchema: struct<ss_item_sk:int>\n                        :              :           +- SubqueryBroadcast dynamicpruning#609, 0, [d_date_sk#39], [id=#2094]\n                        :              :              +- AdaptiveSparkPlan isFinalPlan=true\n                                                         +- == Final Plan ==\n                                                            BroadcastQueryStage 1\n                                                            +- ReusedExchange [d_date_sk#39, d_date#41], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=991]\n                                                         +- == Initial Plan ==\n                                                            BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=2091]\n                                                            +- Project [d_date_sk#39, d_date#41]\n                                                               +- Filter (d_year#45 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#39))\n                                                                  +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#39,d_date#41,d_year#45] Batched: true, DataFilters: [d_year#45 IN (1999,2000,2001,2002), isnotnull(d_date_sk#39)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [In(d_year, [1999,2000,2001,2002]), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_date:date,d_year:int>\n                        :              +- BroadcastQueryStage 1\n                        :                 +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=991]\n                        :                    +- *(2) Project [d_date_sk#39, d_date#41]\n                        :                       +- *(2) Filter (d_year#45 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#39))\n                        :                          +- *(2) ColumnarToRow\n                        :                             +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#39,d_date#41,d_year#45] Batched: true, DataFilters: [d_year#45 IN (1999,2000,2001,2002), isnotnull(d_date_sk#39)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [In(d_year, [1999,2000,2001,2002]), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_date:date,d_year:int>\n                        +- Sort [i_item_sk#67 ASC NULLS FIRST], false, 0\n                           +- ShuffleQueryStage 2\n                              +- Exchange hashpartitioning(i_item_sk#67, 200), ENSURE_REQUIREMENTS, [plan_id=1012]\n                                 +- *(3) Filter isnotnull(i_item_sk#67)\n                                    +- *(3) ColumnarToRow\n                                       +- FileScan parquet spark_catalog.tpcds_100.item[i_item_sk#67,i_item_desc#71] Batched: true, DataFilters: [isnotnull(i_item_sk#67)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/item], PartitionFilters: [], PushedFilters: [IsNotNull(i_item_sk)], ReadSchema: struct<i_item_sk:int,i_item_desc:string>\n"
      },
      "IM" : {
        "inputSizeInBytes" : 5373609960,
        "inputRowCount" : 221613451
      },
      "InitialPartitionNum" : 200,
      "PD" : {
        "1" : [ 84280, 84280, 84280, 92709, 92709, 84280, 92709, 84280, 76619, 92709, 92709, 84280, 92709, 84280, 84280, 84280, 84280, 84280, 92709, 92709, 92709, 92709, 84280, 84280, 92709, 84280, 84280, 92709, 84280, 92709, 92709, 92709, 92709, 84280, 84280, 92709, 84280, 84280, 84280, 92709, 84280, 84280, 84280, 92709, 92709, 84280, 84280, 84280, 84280, 84280, 92709, 92709, 84280, 84280, 84280, 92709, 92709, 92709, 84280, 84280, 84280, 92709, 84280, 92709, 84280, 92709, 92709, 84280, 92709, 92709, 92709, 84280, 92709, 92709, 84280, 92709, 84280, 92709, 84280, 84280, 92709, 84280, 92709, 84280, 92709, 84280, 84280, 92709, 92709, 84280, 84280, 84280, 92709, 84280, 92709, 92709, 84280, 92709, 92709, 84280, 84280, 92709, 84280, 92709, 92709, 84280, 84280, 92709, 84280, 92709, 84280, 92709, 84280, 92709, 92709, 92709, 76619, 92709, 84280, 84280, 84280, 92709, 92709, 92709, 92709, 92709, 84280, 84280, 92709, 84280, 84280, 84280, 84280, 92709, 84280, 84280, 92709, 92709, 92709, 84280, 84280, 84280, 92709, 92709, 92709, 84280, 84280, 84280, 92709, 84280, 92709, 84280, 92709, 84280, 84280, 92709, 84280, 92709, 84280, 84280, 84280, 92709, 92709, 92709, 84280, 92709, 84280, 84280, 92709, 84280, 84280, 92709, 84280, 84280, 92709, 84280, 84280, 84280, 84280, 84280, 84280, 84280, 92709, 84280, 92709, 92709, 84280, 84280, 84280, 84280, 92709, 84280, 84280, 84280, 84280, 84280, 84280, 84280, 92709, 92709 ],
        "6" : [ 6049721, 6030087, 6204013, 6143364, 6417576, 6042564, 6427913, 5778625, 5802410, 6411635, 6422810, 5944342, 6367492, 5961967, 6243307, 5978402, 6191850, 6371424, 6587778, 6447297, 6313620, 6422810, 6028759, 5986266, 6421901, 6258983, 6233722, 6298395, 6109356, 6084514, 6507783, 6147943, 6449506, 5943635, 6244334, 6411910, 6019024, 5910282, 5905669, 6426226, 6101492, 6107347, 5950904, 6407585, 6150044, 6285611, 6391406, 6019593, 5851354, 6052555, 6657567, 6402396, 6214507, 6340497, 6127688, 6436563, 6457410, 6417576, 6044880, 6353092, 6106752, 6341799, 6132922, 6412342, 5860767, 6165654, 6422810, 6223170, 6422423, 6411910, 6397594, 5872911, 6362735, 6382717, 6145732, 6258506, 5834571, 6414643, 6350965, 6122454, 6278991, 5887337, 6381892, 6294693, 6432891, 6137679, 6015092, 6454484, 6422810, 6113288, 6422810, 6167074, 6333110, 5741320, 6417576, 6407108, 5994751, 6045789, 6451622, 5926010, 6167807, 6423588, 6126386, 6427135, 6157732, 6380938, 6300275, 6530871, 5845065, 6187918, 6157790, 6327399, 5858511, 6427135, 5971840, 6316931, 6144692, 5996734, 5858511, 6365713, 6104122, 6334889, 6597081, 6381892, 6266847, 6376181, 6316106, 5889475, 6351790, 6040974, 6187918, 6386649, 6257348, 6272906, 6037330, 6211400, 6013764, 6417576, 6407108, 6096651, 6396640, 5930563, 6397117, 6422810, 6035347, 6407585, 6135526, 6112607, 6422810, 6412342, 6102794, 5760780, 6370947, 6234115, 6330983, 6517864, 6360249, 6289936, 6154709, 5842783, 5890648, 6428566, 6350011, 6397117, 6417576, 6341799, 6341406, 5878878, 6392360, 6043185, 6061289, 6427135, 6386649, 6229339, 6407585, 6115892, 5486094, 5850647, 6071076, 6269909, 6260659, 6081151, 6223647, 5969236, 6560397, 6432891, 6152472, 6261961, 6224556, 5905074, 6235024, 5960070, 6279468, 5841958, 6357978, 5867677, 6180649, 5920069, 6445866, 6427135 ],
        "0" : [ 146748, 148062, 162268, 147121, 156091, 155997, 162866, 145655, 137010, 149774, 166912, 149859, 147977, 148375, 146423, 147452, 146578, 149316, 154962, 146511, 149571, 154021, 147977, 141730, 163713, 148833, 153080, 150257, 141384, 155903, 150342, 142671, 164244, 155997, 151301, 154479, 154962, 155493, 149401, 149097, 146578, 146681, 151386, 149774, 147604, 149486, 162678, 148062, 143527, 135298, 167947, 150342, 155420, 154021, 145324, 154021, 158337, 152139, 156844, 150342, 154021, 152139, 155921, 159761, 133326, 153080, 151750, 147537, 165373, 160292, 151198, 144383, 155988, 152139, 147434, 159184, 141375, 164748, 155514, 149774, 147036, 146663, 150360, 148079, 159351, 149932, 150342, 148545, 160984, 153623, 158504, 163713, 148478, 136672, 156938, 162772, 145324, 146180, 155997, 145239, 151656, 154962, 147036, 150715, 152597, 149774, 158337, 156938, 137450, 150800, 144298, 148460, 142231, 158900, 149774, 159667, 146748, 148918, 146663, 157879, 145324, 150715, 157375, 152224, 154962, 150809, 153080, 158820, 153538, 151198, 152139, 158820, 146095, 148918, 147036, 142671, 141978, 162866, 155056, 155420, 160313, 146596, 150360, 155997, 150885, 157785, 153080, 153538, 153538, 155420, 144951, 134977, 152691, 153165, 151656, 154962, 156455, 141357, 158431, 137944, 155056, 164244, 158820, 162362, 150715, 151814, 151198, 149003, 148375, 153080, 155420, 157879, 149868, 155420, 153165, 153080, 137450, 137528, 152597, 157302, 153538, 141357, 152597, 141044, 152157, 155235, 151826, 146180, 151741, 147977, 152224, 146265, 143442, 136594, 156844, 148833, 149401, 143925, 147977, 160796 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 9,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 15 ],
      "Objectives" : {
        "DurationInMs" : 62228,
        "TotalTasksDurationInMs" : 680659,
        "IOBytes" : {
          "Total" : 1254150242,
          "Details" : {
            "IR" : 0,
            "IW" : 0,
            "SR" : 1230093096,
            "SW" : 24057146
          }
        }
      }
    },
    "13" : {
      "QSLogical" : {
        "operators" : {
          "0" : {
            "sign" : -582481967,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 24,
                "rowCount" : 1
              },
              "compileTime" : {
                "sizeInBytes" : 24,
                "rowCount" : 1
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [max(csales#401) AS tpcds_cmax#402] "
          },
          "1" : {
            "sign" : -660295919,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 47624376,
                "rowCount" : 1984349
              },
              "compileTime" : {
                "sizeInBytes" : 47624376,
                "rowCount" : 1984349
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [c_customer_sk#89], [sum((cast(ss_quantity#416 as decimal(10,0)) * ss_sales_price#419)) AS csales#401] "
          },
          "2" : {
            "sign" : -1338930356,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 6601054824,
                "rowCount" : 275043951
              },
              "compileTime" : {
                "sizeInBytes" : 6601054824,
                "rowCount" : 275043951
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_quantity#416, ss_sales_price#419, c_customer_sk#89] "
          },
          "3" : {
            "sign" : -949612920,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 7701230628,
                "rowCount" : 275043951
              },
              "compileTime" : {
                "sizeInBytes" : 7701230628,
                "rowCount" : 275043951
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_customer_sk#409 = c_customer_sk#89) "
          }
        },
        "links" : [ {
          "fromId" : 3,
          "fromName" : "Join",
          "toId" : 2,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Project",
          "toId" : 1,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Aggregate",
          "toId" : 0,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Aggregate [max(csales#401) AS tpcds_cmax#402]\n+- Aggregate [c_customer_sk#89], [sum((cast(ss_quantity#416 as decimal(10,0)) * ss_sales_price#419)) AS csales#401]\n   +- Project [ss_quantity#416, ss_sales_price#419, c_customer_sk#89]\n      +- Join Inner, (ss_customer_sk#409 = c_customer_sk#89)\n         :- Project [ss_customer_sk#409, ss_quantity#416, ss_sales_price#419]\n         :  +- Join Inner, (ss_sold_date_sk#429 = d_date_sk#430)\n         :     :- Project [ss_customer_sk#409, ss_quantity#416, ss_sales_price#419, ss_sold_date_sk#429]\n         :     :  +- Filter ((isnotnull(ss_customer_sk#409) AND isnotnull(ss_sold_date_sk#429)) AND dynamicpruning#610 [ss_sold_date_sk#429])\n         :     :     :  +- Project [d_date_sk#430]\n         :     :     :     +- Filter (d_year#436 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#430))\n         :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#430,d_date_id#431,d_date#432,d_month_seq#433,d_week_seq#434,d_quarter_seq#435,d_year#436,d_dow#437,d_moy#438,d_dom#439,d_qoy#440,d_fy_year#441,d_fy_quarter_seq#442,d_fy_week_seq#443,d_day_name#444,d_quarter_name#445,d_holiday#446,d_weekend#447,d_following_holiday#448,d_first_dom#449,d_last_dom#450,d_same_day_ly#451,d_same_day_lq#452,d_current_day#453,... 4 more fields] parquet\n         :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#407,ss_item_sk#408,ss_customer_sk#409,ss_cdemo_sk#410,ss_hdemo_sk#411,ss_addr_sk#412,ss_store_sk#413,ss_promo_sk#414,ss_ticket_number#415L,ss_quantity#416,ss_wholesale_cost#417,ss_list_price#418,ss_sales_price#419,ss_ext_discount_amt#420,ss_ext_sales_price#421,ss_ext_wholesale_cost#422,ss_ext_list_price#423,ss_ext_tax#424,ss_coupon_amt#425,ss_net_paid#426,ss_net_paid_inc_tax#427,ss_net_profit#428,ss_sold_date_sk#429] parquet\n         :     +- Project [d_date_sk#430]\n         :        +- Filter (d_year#436 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#430))\n         :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#430,d_date_id#431,d_date#432,d_month_seq#433,d_week_seq#434,d_quarter_seq#435,d_year#436,d_dow#437,d_moy#438,d_dom#439,d_qoy#440,d_fy_year#441,d_fy_quarter_seq#442,d_fy_week_seq#443,d_day_name#444,d_quarter_name#445,d_holiday#446,d_weekend#447,d_following_holiday#448,d_first_dom#449,d_last_dom#450,d_same_day_ly#451,d_same_day_lq#452,d_current_day#453,... 4 more fields] parquet\n         +- Project [c_customer_sk#89]\n            +- Filter isnotnull(c_customer_sk#89)\n               +- Relation spark_catalog.tpcds_100.customer[c_customer_sk#89,c_customer_id#90,c_current_cdemo_sk#91,c_current_hdemo_sk#92,c_current_addr_sk#93,c_first_shipto_date_sk#94,c_first_sales_date_sk#95,c_salutation#96,c_first_name#97,c_last_name#98,c_preferred_cust_flag#99,c_birth_day#100,c_birth_month#101,c_birth_year#102,c_birth_country#103,c_login#104,c_email_address#105,c_last_review_date#106] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "8" : {
            "sign" : 40419971,
            "className" : "org.apache.spark.sql.execution.adaptive.ShuffleQueryStageExec",
            "sizeInBytes" : 24000000,
            "rowCount" : 2000000,
            "isRuntime" : false,
            "predicate" : " (unknown) ShuffleQueryStage Output [1]: [c_customer_sk#89] Arguments: 2 "
          },
          "4" : {
            "sign" : -1187217084,
            "className" : "org.apache.spark.sql.execution.joins.SortMergeJoinExec",
            "sizeInBytes" : 7701230628,
            "rowCount" : 275043951,
            "isRuntime" : false,
            "predicate" : " (unknown) SortMergeJoin Left keys [1]: [ss_customer_sk#409] Right keys [1]: [c_customer_sk#89] Join type: Inner Join condition: None "
          },
          "5" : {
            "sign" : -979656854,
            "className" : "org.apache.spark.sql.execution.SortExec",
            "sizeInBytes" : -1,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Input [3]: [ss_customer_sk#409, ss_quantity#416, ss_sales_price#419] Arguments: [ss_customer_sk#409 ASC NULLS FIRST], false, 0 "
          },
          "6" : {
            "sign" : -1348878188,
            "className" : "org.apache.spark.sql.execution.adaptive.ShuffleQueryStageExec",
            "sizeInBytes" : 6874337696,
            "rowCount" : 214823053,
            "isRuntime" : true,
            "predicate" : " (unknown) ShuffleQueryStage Output [3]: [ss_customer_sk#409, ss_quantity#416, ss_sales_price#419] Arguments: 3 "
          },
          "1" : {
            "sign" : -895297343,
            "className" : "org.apache.spark.sql.execution.aggregate.HashAggregateExec",
            "sizeInBytes" : 47624376,
            "rowCount" : 1984349,
            "isRuntime" : false,
            "predicate" : " (unknown) HashAggregate Input [3]: [c_customer_sk#89, sum#635, isEmpty#636] Keys [1]: [c_customer_sk#89] Functions [1]: [sum((cast(ss_quantity#416 as decimal(10,0)) * ss_sales_price#419))] Aggregate Attributes [1]: [sum((cast(ss_quantity#416 as decimal(10,0)) * ss_sales_price#419))#595] Results [1]: [sum((cast(ss_quantity#416 as decimal(10,0)) * ss_sales_price#419))#595 AS csales#401] "
          },
          "0" : {
            "sign" : 1214100754,
            "className" : "org.apache.spark.sql.execution.aggregate.HashAggregateExec",
            "sizeInBytes" : 24,
            "rowCount" : 1,
            "isRuntime" : false,
            "predicate" : " (unknown) HashAggregate Input [1]: [csales#401] Keys: [] Functions [1]: [partial_max(csales#401)] Aggregate Attributes [1]: [max#631] Results [1]: [max#632] "
          },
          "2" : {
            "sign" : -309807592,
            "className" : "org.apache.spark.sql.execution.aggregate.HashAggregateExec",
            "sizeInBytes" : 47624376,
            "rowCount" : 1984349,
            "isRuntime" : false,
            "predicate" : " (unknown) HashAggregate Input [3]: [ss_quantity#416, ss_sales_price#419, c_customer_sk#89] Keys [1]: [c_customer_sk#89] Functions [1]: [partial_sum((cast(ss_quantity#416 as decimal(10,0)) * ss_sales_price#419))] Aggregate Attributes [2]: [sum#633, isEmpty#634] Results [3]: [c_customer_sk#89, sum#635, isEmpty#636] "
          },
          "7" : {
            "sign" : -840048826,
            "className" : "org.apache.spark.sql.execution.SortExec",
            "sizeInBytes" : -1,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Input [1]: [c_customer_sk#89] Arguments: [c_customer_sk#89 ASC NULLS FIRST], false, 0 "
          },
          "3" : {
            "sign" : 1057438508,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 6601054824,
            "rowCount" : 275043951,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [3]: [ss_quantity#416, ss_sales_price#419, c_customer_sk#89] Input [4]: [ss_customer_sk#409, ss_quantity#416, ss_sales_price#419, c_customer_sk#89] "
          }
        },
        "links" : [ {
          "fromId" : 6,
          "fromName" : "ShuffleQueryStage",
          "toId" : 5,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Sort",
          "toId" : 4,
          "toName" : "SortMergeJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "ShuffleQueryStage",
          "toId" : 7,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Sort",
          "toId" : 4,
          "toName" : "SortMergeJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "SortMergeJoin",
          "toId" : 3,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Project",
          "toId" : 2,
          "toName" : "HashAggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "HashAggregate",
          "toId" : 1,
          "toName" : "HashAggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "HashAggregate",
          "toId" : 0,
          "toName" : "HashAggregate",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "HashAggregate(keys=[], functions=[partial_max(csales#401)], output=[max#632])\n+- HashAggregate(keys=[c_customer_sk#89], functions=[sum((cast(ss_quantity#416 as decimal(10,0)) * ss_sales_price#419))], output=[csales#401])\n   +- HashAggregate(keys=[c_customer_sk#89], functions=[partial_sum((cast(ss_quantity#416 as decimal(10,0)) * ss_sales_price#419))], output=[c_customer_sk#89, sum#635, isEmpty#636])\n      +- Project [ss_quantity#416, ss_sales_price#419, c_customer_sk#89]\n         +- SortMergeJoin [ss_customer_sk#409], [c_customer_sk#89], Inner\n            :- Sort [ss_customer_sk#409 ASC NULLS FIRST], false, 0\n            :  +- ShuffleQueryStage 3\n            :     +- Exchange hashpartitioning(ss_customer_sk#409, 200), ENSURE_REQUIREMENTS, [plan_id=6797]\n            :        +- *(3) Project [ss_customer_sk#409, ss_quantity#416, ss_sales_price#419]\n            :           +- *(3) BroadcastHashJoin [ss_sold_date_sk#429], [d_date_sk#430], Inner, BuildRight, false\n            :              :- *(3) Filter isnotnull(ss_customer_sk#409)\n            :              :  +- *(3) ColumnarToRow\n            :              :     +- FileScan parquet spark_catalog.tpcds_100.store_sales[ss_customer_sk#409,ss_quantity#416,ss_sales_price#419,ss_sold_date_sk#429] Batched: true, DataFilters: [isnotnull(ss_customer_sk#409)], Format: Parquet, Location: InMemoryFileIndex(1823 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/store_..., PartitionFilters: [isnotnull(ss_sold_date_sk#429), dynamicpruningexpression(ss_sold_date_sk#429 IN dynamicpruning#6..., PushedFilters: [IsNotNull(ss_customer_sk)], ReadSchema: struct<ss_customer_sk:int,ss_quantity:int,ss_sales_price:decimal(7,2)>\n            :              :           +- SubqueryBroadcast dynamicpruning#610, 0, [d_date_sk#430], [id=#6771]\n            :              :              +- AdaptiveSparkPlan isFinalPlan=true\n                                             +- == Final Plan ==\n                                                BroadcastQueryStage 1\n                                                +- ReusedExchange [d_date_sk#430], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=6642]\n                                             +- == Initial Plan ==\n                                                BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=6768]\n                                                +- Project [d_date_sk#430]\n                                                   +- Filter (d_year#436 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#430))\n                                                      +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#430,d_year#436] Batched: true, DataFilters: [d_year#436 IN (1999,2000,2001,2002), isnotnull(d_date_sk#430)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [In(d_year, [1999,2000,2001,2002]), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>\n            :              +- BroadcastQueryStage 0\n            :                 +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=6642]\n            :                    +- *(1) Project [d_date_sk#430]\n            :                       +- *(1) Filter (d_year#436 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#430))\n            :                          +- *(1) ColumnarToRow\n            :                             +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#430,d_year#436] Batched: true, DataFilters: [d_year#436 IN (1999,2000,2001,2002), isnotnull(d_date_sk#430)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [In(d_year, [1999,2000,2001,2002]), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>\n            +- Sort [c_customer_sk#89 ASC NULLS FIRST], false, 0\n               +- ShuffleQueryStage 2\n                  +- ReusedExchange [c_customer_sk#89], Exchange hashpartitioning(c_customer_sk#481, 200), ENSURE_REQUIREMENTS, [plan_id=1061]\n"
      },
      "IM" : {
        "inputSizeInBytes" : 6906337696,
        "inputRowCount" : 216823053
      },
      "InitialPartitionNum" : 200,
      "PD" : {
        "9" : [ 13518805, 13453589, 13244444, 13359211, 13334313, 13454772, 13250578, 13170495, 13357335, 13447677, 13503666, 13324214, 13562427, 13501341, 13377100, 13328374, 13524888, 13698935, 13411939, 13437088, 13333302, 13396301, 13492036, 13443102, 13360848, 13401763, 13341042, 13607509, 13350502, 13325306, 13134478, 13298492, 13468524, 13201764, 13481859, 13477878, 13276805, 13201006, 13207319, 13289840, 13192378, 13384318, 13140961, 13476653, 13490551, 13198963, 13483420, 13433757, 13407896, 13420802, 13580576, 13476504, 13311076, 13431586, 13330027, 13378376, 13325364, 13123863, 13288418, 13349342, 13254973, 13643407, 13280137, 13354979, 13226253, 13605744, 13511258, 13295966, 13365220, 13544486, 13459959, 13271520, 13203431, 13477268, 13449617, 13508588, 13668380, 13476857, 13423671, 13435861, 13390337, 13600153, 13666693, 13080514, 13254074, 13254064, 13270074, 13373516, 13351864, 13592141, 13333393, 13441875, 13477448, 13317687, 13457044, 13737739, 13138463, 13196181, 13329856, 13156576, 13019198, 13432780, 13379316, 13180598, 13338896, 13588770, 13394637, 13761908, 13083411, 13224117, 13269821, 13397912, 13588705, 13325171, 13412799, 13337353, 13110802, 13147287, 13371949, 13335067, 13318828, 13475125, 13555274, 13387686, 13442857, 13641088, 13268376, 13177576, 13320860, 13140679, 13521565, 13536271, 13428423, 13400206, 13183593, 13238409, 13439175, 13536432, 13467465, 13478623, 13335492, 13123909, 13223986, 13525933, 13462980, 13565528, 13726933, 13352624, 13387610, 13375496, 13577508, 13387078, 13616253, 13532324, 13528405, 13531530, 13320755, 13434294, 13668517, 13144492, 13167361, 13156043, 13525608, 13257451, 13475026, 13355739, 13356302, 13511942, 13448909, 13194984, 13509002, 13704877, 13487601, 13439271, 13482180, 13219680, 13497123, 13204110, 13388364, 13320424, 13234720, 13423920, 13262170, 13300638, 13721653, 13571015, 13739066, 13518734, 13287964, 13409637, 13505738, 13357001, 13300338, 13156416, 13514328, 13618399, 13345482, 13403682, 13516533, 13195070 ],
        "3" : [ 52331, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 57565, 57565, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 57565, 52331, 52331, 52331, 57565, 57565, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 57565, 57565, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 57565, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 57565, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 57565, 57565, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 57565, 57565, 52331, 57565, 52331, 57565, 52331, 57565, 52331, 52331, 57565, 52331, 57565, 57565, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 57565, 57565, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 57565, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 57565, 57565, 52331, 52331, 52331, 52331 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 8,
        "FinishedTasksNum" : 12,
        "FinishedTasksTotalTimeInMs" : 318286.0,
        "FinishedTasksDistributionInMs" : [ 25356.0, 26286.0, 26360.0, 27024.0, 27736.0 ]
      },
      "QueryStageOptimizationId" : 14,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 22 ],
      "Objectives" : {
        "DurationInMs" : 25292,
        "TotalTasksDurationInMs" : 221398,
        "IOBytes" : {
          "Total" : 2561570802,
          "Details" : {
            "IR" : 0,
            "IW" : 0,
            "SR" : 2561567536,
            "SW" : 3266
          }
        }
      }
    },
    "16" : {
      "QSLogical" : {
        "operators" : {
          "8" : {
            "sign" : -1675761902,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 55561772,
                "rowCount" : 1984349
              },
              "compileTime" : {
                "sizeInBytes" : 55561772,
                "rowCount" : 1984349
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [c_customer_sk#481], [c_customer_sk#481, sum((cast(ss_quantity#467 as decimal(10,0)) * ss_sales_price#470)) AS ssales#403] "
          },
          "4" : {
            "sign" : -1334583376,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 2223859360,
                "rowCount" : 69495605
              },
              "compileTime" : {
                "sizeInBytes" : 2223859360,
                "rowCount" : 69495605
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ws_sold_date_sk#174 = d_date_sk#563) "
          },
          "11" : {
            "sign" : 122398157,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 98000000,
                "rowCount" : 2000000
              },
              "compileTime" : {
                "sizeInBytes" : 98000000,
                "rowCount" : 2000000
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (c_customer_sk#545 = c_customer_sk#481) "
          },
          "9" : {
            "sign" : 1882058231,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 6601054824,
                "rowCount" : 275043951
              },
              "compileTime" : {
                "sizeInBytes" : 6601054824,
                "rowCount" : 275043951
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_quantity#467, ss_sales_price#470, c_customer_sk#481] "
          },
          "5" : {
            "sign" : 1242205115,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 2015036828,
                "rowCount" : 71965601
              },
              "compileTime" : {
                "sizeInBytes" : 2015036828,
                "rowCount" : 71965601
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (ws_bill_customer_sk#144 = c_customer_sk#481) "
          },
          "10" : {
            "sign" : 1857475570,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 7701230628,
                "rowCount" : 275043951
              },
              "compileTime" : {
                "sizeInBytes" : 7701230628,
                "rowCount" : 275043951
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_customer_sk#460 = c_customer_sk#481) "
          },
          "6" : {
            "sign" : 1934998111,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 23812188,
                "rowCount" : 1984349
              },
              "compileTime" : {
                "sizeInBytes" : 23812188,
                "rowCount" : 1984349
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_customer_sk#481] "
          },
          "1" : {
            "sign" : -1138477117,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 4123492632,
                "rowCount" : 72341976
              },
              "compileTime" : {
                "sizeInBytes" : 4123492632,
                "rowCount" : 72341976
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_quantity#158, ws_list_price#160, c_first_name#553, c_last_name#554] "
          },
          "0" : {
            "sign" : 1029040825,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 1648640717,
                "rowCount" : 27026897
              },
              "compileTime" : {
                "sizeInBytes" : 1648640717,
                "rowCount" : 27026897
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [c_last_name#554, c_first_name#553], [c_last_name#554, c_first_name#553, sum((cast(ws_quantity#158 as decimal(10,0)) * ws_list_price#160)) AS sales#394] "
          },
          "2" : {
            "sign" : -1404318691,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 4702228440,
                "rowCount" : 72341976
              },
              "compileTime" : {
                "sizeInBytes" : 4702228440,
                "rowCount" : 72341976
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ws_bill_customer_sk#144 = c_customer_sk#545) "
          },
          "7" : {
            "sign" : -321557515,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 55561772,
                "rowCount" : 1984349
              },
              "compileTime" : {
                "sizeInBytes" : 55561772,
                "rowCount" : 1984349
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(ssales#403) AND (cast(ssales#403 as decimal(38,8)) > (0.950000 * scalar-subquery#404 []))) "
          },
          "3" : {
            "sign" : -695213971,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 1667894520,
                "rowCount" : 69495605
              },
              "compileTime" : {
                "sizeInBytes" : 1667894520,
                "rowCount" : 69495605
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_bill_customer_sk#144, ws_quantity#158, ws_list_price#160] "
          }
        },
        "links" : [ {
          "fromId" : 10,
          "fromName" : "Join",
          "toId" : 9,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "Project",
          "toId" : 8,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "Aggregate",
          "toId" : 7,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Filter",
          "toId" : 6,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Project",
          "toId" : 5,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Join",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Join",
          "toId" : 3,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Project",
          "toId" : 2,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Project",
          "toId" : 11,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "Join",
          "toId" : 2,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Join",
          "toId" : 1,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Project",
          "toId" : 0,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Aggregate [c_last_name#554, c_first_name#553], [c_last_name#554, c_first_name#553, sum((cast(ws_quantity#158 as decimal(10,0)) * ws_list_price#160)) AS sales#394]\n+- Project [ws_quantity#158, ws_list_price#160, c_first_name#553, c_last_name#554]\n   +- Join Inner, (ws_bill_customer_sk#144 = c_customer_sk#545)\n      :- Project [ws_bill_customer_sk#144, ws_quantity#158, ws_list_price#160]\n      :  +- Join Inner, (ws_sold_date_sk#174 = d_date_sk#563)\n      :     :- Join LeftSemi, (ws_bill_customer_sk#144 = c_customer_sk#481)\n      :     :  :- Project [ws_bill_customer_sk#144, ws_quantity#158, ws_list_price#160, ws_sold_date_sk#174]\n      :     :  :  +- Join LeftSemi, (ws_item_sk#143 = item_sk#398)\n      :     :  :     :- Project [ws_item_sk#143, ws_bill_customer_sk#144, ws_quantity#158, ws_list_price#160, ws_sold_date_sk#174]\n      :     :  :     :  +- Filter ((isnotnull(ws_bill_customer_sk#144) AND isnotnull(ws_sold_date_sk#174)) AND dynamicpruning#616 [ws_sold_date_sk#174])\n      :     :  :     :     :  +- Project [d_date_sk#563]\n      :     :  :     :     :     +- Filter (((isnotnull(d_year#569) AND isnotnull(d_moy#571)) AND ((d_year#569 = 1999) AND (d_moy#571 = 1))) AND isnotnull(d_date_sk#563))\n      :     :  :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#563,d_date_id#564,d_date#565,d_month_seq#566,d_week_seq#567,d_quarter_seq#568,d_year#569,d_dow#570,d_moy#571,d_dom#572,d_qoy#573,d_fy_year#574,d_fy_quarter_seq#575,d_fy_week_seq#576,d_day_name#577,d_quarter_name#578,d_holiday#579,d_weekend#580,d_following_holiday#581,d_first_dom#582,d_last_dom#583,d_same_day_ly#584,d_same_day_lq#585,d_current_day#586,... 4 more fields] parquet\n      :     :  :     :     +- Relation spark_catalog.tpcds_100.web_sales[ws_sold_time_sk#141,ws_ship_date_sk#142,ws_item_sk#143,ws_bill_customer_sk#144,ws_bill_cdemo_sk#145,ws_bill_hdemo_sk#146,ws_bill_addr_sk#147,ws_ship_customer_sk#148,ws_ship_cdemo_sk#149,ws_ship_hdemo_sk#150,ws_ship_addr_sk#151,ws_web_page_sk#152,ws_web_site_sk#153,ws_ship_mode_sk#154,ws_warehouse_sk#155,ws_promo_sk#156,ws_order_number#157L,ws_quantity#158,ws_wholesale_cost#159,ws_list_price#160,ws_sales_price#161,ws_ext_discount_amt#162,ws_ext_sales_price#163,ws_ext_wholesale_cost#164,... 10 more fields] parquet\n      :     :  :     +- Project [item_sk#398]\n      :     :  :        +- Filter (cnt#400L > 4)\n      :     :  :           +- Aggregate [_groupingexpression#608, i_item_sk#67, d_date#41], [i_item_sk#67 AS item_sk#398, count(1) AS cnt#400L]\n      :     :  :              +- Project [d_date#41, i_item_sk#67, substr(i_item_desc#71, 1, 30) AS _groupingexpression#608]\n      :     :  :                 +- Join Inner, (ss_item_sk#17 = i_item_sk#67)\n      :     :  :                    :- Project [ss_item_sk#17, d_date#41]\n      :     :  :                    :  +- Join Inner, (ss_sold_date_sk#38 = d_date_sk#39)\n      :     :  :                    :     :- Project [ss_item_sk#17, ss_sold_date_sk#38]\n      :     :  :                    :     :  +- Filter ((isnotnull(ss_sold_date_sk#38) AND isnotnull(ss_item_sk#17)) AND dynamicpruning#611 [ss_sold_date_sk#38])\n      :     :  :                    :     :     :  +- Project [d_date_sk#39, d_date#41]\n      :     :  :                    :     :     :     +- Filter (d_year#45 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#39))\n      :     :  :                    :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#39,d_date_id#40,d_date#41,d_month_seq#42,d_week_seq#43,d_quarter_seq#44,d_year#45,d_dow#46,d_moy#47,d_dom#48,d_qoy#49,d_fy_year#50,d_fy_quarter_seq#51,d_fy_week_seq#52,d_day_name#53,d_quarter_name#54,d_holiday#55,d_weekend#56,d_following_holiday#57,d_first_dom#58,d_last_dom#59,d_same_day_ly#60,d_same_day_lq#61,d_current_day#62,... 4 more fields] parquet\n      :     :  :                    :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#16,ss_item_sk#17,ss_customer_sk#18,ss_cdemo_sk#19,ss_hdemo_sk#20,ss_addr_sk#21,ss_store_sk#22,ss_promo_sk#23,ss_ticket_number#24L,ss_quantity#25,ss_wholesale_cost#26,ss_list_price#27,ss_sales_price#28,ss_ext_discount_amt#29,ss_ext_sales_price#30,ss_ext_wholesale_cost#31,ss_ext_list_price#32,ss_ext_tax#33,ss_coupon_amt#34,ss_net_paid#35,ss_net_paid_inc_tax#36,ss_net_profit#37,ss_sold_date_sk#38] parquet\n      :     :  :                    :     +- Project [d_date_sk#39, d_date#41]\n      :     :  :                    :        +- Filter (d_year#45 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#39))\n      :     :  :                    :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#39,d_date_id#40,d_date#41,d_month_seq#42,d_week_seq#43,d_quarter_seq#44,d_year#45,d_dow#46,d_moy#47,d_dom#48,d_qoy#49,d_fy_year#50,d_fy_quarter_seq#51,d_fy_week_seq#52,d_day_name#53,d_quarter_name#54,d_holiday#55,d_weekend#56,d_following_holiday#57,d_first_dom#58,d_last_dom#59,d_same_day_ly#60,d_same_day_lq#61,d_current_day#62,... 4 more fields] parquet\n      :     :  :                    +- Project [i_item_sk#67, i_item_desc#71]\n      :     :  :                       +- Filter isnotnull(i_item_sk#67)\n      :     :  :                          +- Relation spark_catalog.tpcds_100.item[i_item_sk#67,i_item_id#68,i_rec_start_date#69,i_rec_end_date#70,i_item_desc#71,i_current_price#72,i_wholesale_cost#73,i_brand_id#74,i_brand#75,i_class_id#76,i_class#77,i_category_id#78,i_category#79,i_manufact_id#80,i_manufact#81,i_size#82,i_formulation#83,i_color#84,i_units#85,i_container#86,i_manager_id#87,i_product_name#88] parquet\n      :     :  +- Project [c_customer_sk#481]\n      :     :     +- Filter (isnotnull(ssales#403) AND (cast(ssales#403 as decimal(38,8)) > (0.950000 * scalar-subquery#404 [])))\n      :     :        :  +- Aggregate [max(csales#401) AS tpcds_cmax#402]\n      :     :        :     +- Aggregate [c_customer_sk#89], [sum((cast(ss_quantity#416 as decimal(10,0)) * ss_sales_price#419)) AS csales#401]\n      :     :        :        +- Project [ss_quantity#416, ss_sales_price#419, c_customer_sk#89]\n      :     :        :           +- Join Inner, (ss_customer_sk#409 = c_customer_sk#89)\n      :     :        :              :- Project [ss_customer_sk#409, ss_quantity#416, ss_sales_price#419]\n      :     :        :              :  +- Join Inner, (ss_sold_date_sk#429 = d_date_sk#430)\n      :     :        :              :     :- Project [ss_customer_sk#409, ss_quantity#416, ss_sales_price#419, ss_sold_date_sk#429]\n      :     :        :              :     :  +- Filter ((isnotnull(ss_customer_sk#409) AND isnotnull(ss_sold_date_sk#429)) AND dynamicpruning#610 [ss_sold_date_sk#429])\n      :     :        :              :     :     :  +- Project [d_date_sk#430]\n      :     :        :              :     :     :     +- Filter (d_year#436 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#430))\n      :     :        :              :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#430,d_date_id#431,d_date#432,d_month_seq#433,d_week_seq#434,d_quarter_seq#435,d_year#436,d_dow#437,d_moy#438,d_dom#439,d_qoy#440,d_fy_year#441,d_fy_quarter_seq#442,d_fy_week_seq#443,d_day_name#444,d_quarter_name#445,d_holiday#446,d_weekend#447,d_following_holiday#448,d_first_dom#449,d_last_dom#450,d_same_day_ly#451,d_same_day_lq#452,d_current_day#453,... 4 more fields] parquet\n      :     :        :              :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#407,ss_item_sk#408,ss_customer_sk#409,ss_cdemo_sk#410,ss_hdemo_sk#411,ss_addr_sk#412,ss_store_sk#413,ss_promo_sk#414,ss_ticket_number#415L,ss_quantity#416,ss_wholesale_cost#417,ss_list_price#418,ss_sales_price#419,ss_ext_discount_amt#420,ss_ext_sales_price#421,ss_ext_wholesale_cost#422,ss_ext_list_price#423,ss_ext_tax#424,ss_coupon_amt#425,ss_net_paid#426,ss_net_paid_inc_tax#427,ss_net_profit#428,ss_sold_date_sk#429] parquet\n      :     :        :              :     +- Project [d_date_sk#430]\n      :     :        :              :        +- Filter (d_year#436 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#430))\n      :     :        :              :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#430,d_date_id#431,d_date#432,d_month_seq#433,d_week_seq#434,d_quarter_seq#435,d_year#436,d_dow#437,d_moy#438,d_dom#439,d_qoy#440,d_fy_year#441,d_fy_quarter_seq#442,d_fy_week_seq#443,d_day_name#444,d_quarter_name#445,d_holiday#446,d_weekend#447,d_following_holiday#448,d_first_dom#449,d_last_dom#450,d_same_day_ly#451,d_same_day_lq#452,d_current_day#453,... 4 more fields] parquet\n      :     :        :              +- Project [c_customer_sk#89]\n      :     :        :                 +- Filter isnotnull(c_customer_sk#89)\n      :     :        :                    +- Relation spark_catalog.tpcds_100.customer[c_customer_sk#89,c_customer_id#90,c_current_cdemo_sk#91,c_current_hdemo_sk#92,c_current_addr_sk#93,c_first_shipto_date_sk#94,c_first_sales_date_sk#95,c_salutation#96,c_first_name#97,c_last_name#98,c_preferred_cust_flag#99,c_birth_day#100,c_birth_month#101,c_birth_year#102,c_birth_country#103,c_login#104,c_email_address#105,c_last_review_date#106] parquet\n      :     :        +- Aggregate [c_customer_sk#481], [c_customer_sk#481, sum((cast(ss_quantity#467 as decimal(10,0)) * ss_sales_price#470)) AS ssales#403]\n      :     :           +- Project [ss_quantity#467, ss_sales_price#470, c_customer_sk#481]\n      :     :              +- Join Inner, (ss_customer_sk#460 = c_customer_sk#481)\n      :     :                 :- Project [ss_customer_sk#460, ss_quantity#467, ss_sales_price#470]\n      :     :                 :  +- Filter isnotnull(ss_customer_sk#460)\n      :     :                 :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#458,ss_item_sk#459,ss_customer_sk#460,ss_cdemo_sk#461,ss_hdemo_sk#462,ss_addr_sk#463,ss_store_sk#464,ss_promo_sk#465,ss_ticket_number#466L,ss_quantity#467,ss_wholesale_cost#468,ss_list_price#469,ss_sales_price#470,ss_ext_discount_amt#471,ss_ext_sales_price#472,ss_ext_wholesale_cost#473,ss_ext_list_price#474,ss_ext_tax#475,ss_coupon_amt#476,ss_net_paid#477,ss_net_paid_inc_tax#478,ss_net_profit#479,ss_sold_date_sk#480] parquet\n      :     :                 +- Project [c_customer_sk#481]\n      :     :                    +- Filter isnotnull(c_customer_sk#481)\n      :     :                       +- Relation spark_catalog.tpcds_100.customer[c_customer_sk#481,c_customer_id#482,c_current_cdemo_sk#483,c_current_hdemo_sk#484,c_current_addr_sk#485,c_first_shipto_date_sk#486,c_first_sales_date_sk#487,c_salutation#488,c_first_name#489,c_last_name#490,c_preferred_cust_flag#491,c_birth_day#492,c_birth_month#493,c_birth_year#494,c_birth_country#495,c_login#496,c_email_address#497,c_last_review_date#498] parquet\n      :     +- Project [d_date_sk#563]\n      :        +- Filter (((isnotnull(d_year#569) AND isnotnull(d_moy#571)) AND ((d_year#569 = 1999) AND (d_moy#571 = 1))) AND isnotnull(d_date_sk#563))\n      :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#563,d_date_id#564,d_date#565,d_month_seq#566,d_week_seq#567,d_quarter_seq#568,d_year#569,d_dow#570,d_moy#571,d_dom#572,d_qoy#573,d_fy_year#574,d_fy_quarter_seq#575,d_fy_week_seq#576,d_day_name#577,d_quarter_name#578,d_holiday#579,d_weekend#580,d_following_holiday#581,d_first_dom#582,d_last_dom#583,d_same_day_ly#584,d_same_day_lq#585,d_current_day#586,... 4 more fields] parquet\n      +- Join LeftSemi, (c_customer_sk#545 = c_customer_sk#481)\n         :- Project [c_customer_sk#545, c_first_name#553, c_last_name#554]\n         :  +- Filter isnotnull(c_customer_sk#545)\n         :     +- Relation spark_catalog.tpcds_100.customer[c_customer_sk#545,c_customer_id#546,c_current_cdemo_sk#547,c_current_hdemo_sk#548,c_current_addr_sk#549,c_first_shipto_date_sk#550,c_first_sales_date_sk#551,c_salutation#552,c_first_name#553,c_last_name#554,c_preferred_cust_flag#555,c_birth_day#556,c_birth_month#557,c_birth_year#558,c_birth_country#559,c_login#560,c_email_address#561,c_last_review_date#562] parquet\n         +- Project [c_customer_sk#481]\n            +- Filter (isnotnull(ssales#403) AND (cast(ssales#403 as decimal(38,8)) > (0.950000 * scalar-subquery#404 [])))\n               :  +- Aggregate [max(csales#401) AS tpcds_cmax#402]\n               :     +- Aggregate [c_customer_sk#89], [sum((cast(ss_quantity#416 as decimal(10,0)) * ss_sales_price#419)) AS csales#401]\n               :        +- Project [ss_quantity#416, ss_sales_price#419, c_customer_sk#89]\n               :           +- Join Inner, (ss_customer_sk#409 = c_customer_sk#89)\n               :              :- Project [ss_customer_sk#409, ss_quantity#416, ss_sales_price#419]\n               :              :  +- Join Inner, (ss_sold_date_sk#429 = d_date_sk#430)\n               :              :     :- Project [ss_customer_sk#409, ss_quantity#416, ss_sales_price#419, ss_sold_date_sk#429]\n               :              :     :  +- Filter ((isnotnull(ss_customer_sk#409) AND isnotnull(ss_sold_date_sk#429)) AND dynamicpruning#610 [ss_sold_date_sk#429])\n               :              :     :     :  +- Project [d_date_sk#430]\n               :              :     :     :     +- Filter (d_year#436 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#430))\n               :              :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#430,d_date_id#431,d_date#432,d_month_seq#433,d_week_seq#434,d_quarter_seq#435,d_year#436,d_dow#437,d_moy#438,d_dom#439,d_qoy#440,d_fy_year#441,d_fy_quarter_seq#442,d_fy_week_seq#443,d_day_name#444,d_quarter_name#445,d_holiday#446,d_weekend#447,d_following_holiday#448,d_first_dom#449,d_last_dom#450,d_same_day_ly#451,d_same_day_lq#452,d_current_day#453,... 4 more fields] parquet\n               :              :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#407,ss_item_sk#408,ss_customer_sk#409,ss_cdemo_sk#410,ss_hdemo_sk#411,ss_addr_sk#412,ss_store_sk#413,ss_promo_sk#414,ss_ticket_number#415L,ss_quantity#416,ss_wholesale_cost#417,ss_list_price#418,ss_sales_price#419,ss_ext_discount_amt#420,ss_ext_sales_price#421,ss_ext_wholesale_cost#422,ss_ext_list_price#423,ss_ext_tax#424,ss_coupon_amt#425,ss_net_paid#426,ss_net_paid_inc_tax#427,ss_net_profit#428,ss_sold_date_sk#429] parquet\n               :              :     +- Project [d_date_sk#430]\n               :              :        +- Filter (d_year#436 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#430))\n               :              :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#430,d_date_id#431,d_date#432,d_month_seq#433,d_week_seq#434,d_quarter_seq#435,d_year#436,d_dow#437,d_moy#438,d_dom#439,d_qoy#440,d_fy_year#441,d_fy_quarter_seq#442,d_fy_week_seq#443,d_day_name#444,d_quarter_name#445,d_holiday#446,d_weekend#447,d_following_holiday#448,d_first_dom#449,d_last_dom#450,d_same_day_ly#451,d_same_day_lq#452,d_current_day#453,... 4 more fields] parquet\n               :              +- Project [c_customer_sk#89]\n               :                 +- Filter isnotnull(c_customer_sk#89)\n               :                    +- Relation spark_catalog.tpcds_100.customer[c_customer_sk#89,c_customer_id#90,c_current_cdemo_sk#91,c_current_hdemo_sk#92,c_current_addr_sk#93,c_first_shipto_date_sk#94,c_first_sales_date_sk#95,c_salutation#96,c_first_name#97,c_last_name#98,c_preferred_cust_flag#99,c_birth_day#100,c_birth_month#101,c_birth_year#102,c_birth_country#103,c_login#104,c_email_address#105,c_last_review_date#106] parquet\n               +- Aggregate [c_customer_sk#481], [c_customer_sk#481, sum((cast(ss_quantity#467 as decimal(10,0)) * ss_sales_price#470)) AS ssales#403]\n                  +- Project [ss_quantity#467, ss_sales_price#470, c_customer_sk#481]\n                     +- Join Inner, (ss_customer_sk#460 = c_customer_sk#481)\n                        :- Project [ss_customer_sk#460, ss_quantity#467, ss_sales_price#470]\n                        :  +- Filter isnotnull(ss_customer_sk#460)\n                        :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#458,ss_item_sk#459,ss_customer_sk#460,ss_cdemo_sk#461,ss_hdemo_sk#462,ss_addr_sk#463,ss_store_sk#464,ss_promo_sk#465,ss_ticket_number#466L,ss_quantity#467,ss_wholesale_cost#468,ss_list_price#469,ss_sales_price#470,ss_ext_discount_amt#471,ss_ext_sales_price#472,ss_ext_wholesale_cost#473,ss_ext_list_price#474,ss_ext_tax#475,ss_coupon_amt#476,ss_net_paid#477,ss_net_paid_inc_tax#478,ss_net_profit#479,ss_sold_date_sk#480] parquet\n                        +- Project [c_customer_sk#481]\n                           +- Filter isnotnull(c_customer_sk#481)\n                              +- Relation spark_catalog.tpcds_100.customer[c_customer_sk#481,c_customer_id#482,c_current_cdemo_sk#483,c_current_hdemo_sk#484,c_current_addr_sk#485,c_first_shipto_date_sk#486,c_first_sales_date_sk#487,c_salutation#488,c_first_name#489,c_last_name#490,c_preferred_cust_flag#491,c_birth_day#492,c_birth_month#493,c_birth_year#494,c_birth_country#495,c_login#496,c_email_address#497,c_last_review_date#498] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "12" : {
            "sign" : -524508483,
            "className" : "org.apache.spark.sql.execution.aggregate.HashAggregateExec",
            "sizeInBytes" : 55561772,
            "rowCount" : 1984349,
            "isRuntime" : false,
            "predicate" : " (unknown) HashAggregate Input [3]: [ss_quantity#467, ss_sales_price#470, c_customer_sk#481] Keys [1]: [c_customer_sk#481] Functions [1]: [partial_sum((cast(ss_quantity#467 as decimal(10,0)) * ss_sales_price#470))] Aggregate Attributes [2]: [sum#623, isEmpty#624] Results [3]: [c_customer_sk#481, sum#625, isEmpty#626] "
          },
          "8" : {
            "sign" : 178020148,
            "className" : "org.apache.spark.sql.execution.SortExec",
            "sizeInBytes" : -1,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Input [1]: [c_customer_sk#481] Arguments: [c_customer_sk#481 ASC NULLS FIRST], false, 0 "
          },
          "19" : {
            "sign" : 1010508355,
            "className" : "org.apache.spark.sql.execution.adaptive.BroadcastQueryStageExec",
            "sizeInBytes" : 1048824,
            "rowCount" : 31,
            "isRuntime" : true,
            "predicate" : " (unknown) BroadcastQueryStage Output [1]: [d_date_sk#563] Arguments: 21 "
          },
          "23" : {
            "sign" : -985856262,
            "className" : "org.apache.spark.sql.execution.SortExec",
            "sizeInBytes" : -1,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Input [1]: [c_customer_sk#481] Arguments: [c_customer_sk#481 ASC NULLS FIRST], false, 0 "
          },
          "4" : {
            "sign" : -1199309188,
            "className" : "org.apache.spark.sql.execution.joins.BroadcastHashJoinExec",
            "sizeInBytes" : 2223859360,
            "rowCount" : 69495605,
            "isRuntime" : false,
            "predicate" : " (unknown) BroadcastHashJoin Left keys [1]: [ws_sold_date_sk#174] Right keys [1]: [d_date_sk#563] Join type: Inner Join condition: None "
          },
          "15" : {
            "sign" : 1981439386,
            "className" : "org.apache.spark.sql.execution.SortExec",
            "sizeInBytes" : -1,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Input [3]: [ss_customer_sk#460, ss_quantity#467, ss_sales_price#470] Arguments: [ss_customer_sk#460 ASC NULLS FIRST], false, 0 "
          },
          "11" : {
            "sign" : -1532019126,
            "className" : "org.apache.spark.sql.execution.aggregate.HashAggregateExec",
            "sizeInBytes" : 55561772,
            "rowCount" : 1984349,
            "isRuntime" : false,
            "predicate" : " (unknown) HashAggregate Input [3]: [c_customer_sk#481, sum#625, isEmpty#626] Keys [1]: [c_customer_sk#481] Functions [1]: [sum((cast(ss_quantity#467 as decimal(10,0)) * ss_sales_price#470))] Aggregate Attributes [1]: [sum((cast(ss_quantity#467 as decimal(10,0)) * ss_sales_price#470))#596] Results [2]: [c_customer_sk#481, sum((cast(ss_quantity#467 as decimal(10,0)) * ss_sales_price#470))#596 AS ssales#403] "
          },
          "9" : {
            "sign" : -1948943851,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 23812188,
            "rowCount" : 1984349,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [1]: [c_customer_sk#481] Input [2]: [c_customer_sk#481, ssales#403] "
          },
          "33" : {
            "sign" : -800207160,
            "className" : "org.apache.spark.sql.execution.adaptive.ShuffleQueryStageExec",
            "sizeInBytes" : 32000000,
            "rowCount" : 2000000,
            "isRuntime" : true,
            "predicate" : " (unknown) ShuffleQueryStage Output [1]: [c_customer_sk#481] Arguments: 27 "
          },
          "22" : {
            "sign" : -565548404,
            "className" : "org.apache.spark.sql.execution.adaptive.ShuffleQueryStageExec",
            "sizeInBytes" : 96527848,
            "rowCount" : 2000000,
            "isRuntime" : true,
            "predicate" : " (unknown) ShuffleQueryStage Output [3]: [c_customer_sk#545, c_first_name#553, c_last_name#554] Arguments: 23 "
          },
          "26" : {
            "sign" : -657873494,
            "className" : "org.apache.spark.sql.execution.aggregate.HashAggregateExec",
            "sizeInBytes" : 55561772,
            "rowCount" : 1984349,
            "isRuntime" : false,
            "predicate" : " (unknown) HashAggregate Input [3]: [c_customer_sk#481, sum#625, isEmpty#626] Keys [1]: [c_customer_sk#481] Functions [1]: [sum((cast(ss_quantity#467 as decimal(10,0)) * ss_sales_price#470))] Aggregate Attributes [1]: [sum((cast(ss_quantity#467 as decimal(10,0)) * ss_sales_price#470))#596] Results [2]: [c_customer_sk#481, sum((cast(ss_quantity#467 as decimal(10,0)) * ss_sales_price#470))#596 AS ssales#403] "
          },
          "13" : {
            "sign" : 47677840,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 6601054824,
            "rowCount" : 275043951,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [3]: [ss_quantity#467, ss_sales_price#470, c_customer_sk#481] Input [4]: [ss_customer_sk#460, ss_quantity#467, ss_sales_price#470, c_customer_sk#481] "
          },
          "24" : {
            "sign" : -1590980939,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 23812188,
            "rowCount" : 1984349,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [1]: [c_customer_sk#481] Input [2]: [c_customer_sk#481, ssales#403] "
          },
          "16" : {
            "sign" : 1333214311,
            "className" : "org.apache.spark.sql.execution.adaptive.ShuffleQueryStageExec",
            "sizeInBytes" : 8801500032,
            "rowCount" : 275046876,
            "isRuntime" : true,
            "predicate" : " (unknown) ShuffleQueryStage Output [3]: [ss_customer_sk#460, ss_quantity#467, ss_sales_price#470] Arguments: 17 "
          },
          "5" : {
            "sign" : -1864354027,
            "className" : "org.apache.spark.sql.execution.joins.SortMergeJoinExec",
            "sizeInBytes" : 2015036828,
            "rowCount" : 71965601,
            "isRuntime" : false,
            "predicate" : " (unknown) SortMergeJoin Left keys [1]: [ws_bill_customer_sk#144] Right keys [1]: [c_customer_sk#481] Join type: LeftSemi Join condition: None "
          },
          "10" : {
            "sign" : 811386389,
            "className" : "org.apache.spark.sql.execution.FilterExec",
            "sizeInBytes" : 55561772,
            "rowCount" : 1984349,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Input [2]: [c_customer_sk#481, ssales#403] Condition : (isnotnull(ssales#403) AND (cast(ssales#403 as decimal(38,8)) > (0.950000 * Subquery subquery#404, [id=#492]))) "
          },
          "21" : {
            "sign" : -572496478,
            "className" : "org.apache.spark.sql.execution.SortExec",
            "sizeInBytes" : -1,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Input [3]: [c_customer_sk#545, c_first_name#553, c_last_name#554] Arguments: [c_customer_sk#545 ASC NULLS FIRST], false, 0 "
          },
          "32" : {
            "sign" : 1383717539,
            "className" : "org.apache.spark.sql.execution.SortExec",
            "sizeInBytes" : -1,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Input [1]: [c_customer_sk#481] Arguments: [c_customer_sk#481 ASC NULLS FIRST], false, 0 "
          },
          "6" : {
            "sign" : 77362130,
            "className" : "org.apache.spark.sql.execution.SortExec",
            "sizeInBytes" : -1,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Input [4]: [ws_bill_customer_sk#144, ws_quantity#158, ws_list_price#160, ws_sold_date_sk#174] Arguments: [ws_bill_customer_sk#144 ASC NULLS FIRST], false, 0 "
          },
          "1" : {
            "sign" : -50379141,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 4123492632,
            "rowCount" : 72341976,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [4]: [ws_quantity#158, ws_list_price#160, c_first_name#553, c_last_name#554] Input [6]: [ws_bill_customer_sk#144, ws_quantity#158, ws_list_price#160, c_customer_sk#545, c_first_name#553, c_last_name#554] "
          },
          "17" : {
            "sign" : 694435270,
            "className" : "org.apache.spark.sql.execution.SortExec",
            "sizeInBytes" : -1,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Input [1]: [c_customer_sk#481] Arguments: [c_customer_sk#481 ASC NULLS FIRST], false, 0 "
          },
          "25" : {
            "sign" : -1209109221,
            "className" : "org.apache.spark.sql.execution.FilterExec",
            "sizeInBytes" : 55561772,
            "rowCount" : 1984349,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Input [2]: [c_customer_sk#481, ssales#403] Condition : (isnotnull(ssales#403) AND (cast(ssales#403 as decimal(38,8)) > (0.950000 * Subquery subquery#404, [id=#492]))) "
          },
          "14" : {
            "sign" : 2140072665,
            "className" : "org.apache.spark.sql.execution.joins.SortMergeJoinExec",
            "sizeInBytes" : 7701230628,
            "rowCount" : 275043951,
            "isRuntime" : false,
            "predicate" : " (unknown) SortMergeJoin Left keys [1]: [ss_customer_sk#460] Right keys [1]: [c_customer_sk#481] Join type: Inner Join condition: None "
          },
          "31" : {
            "sign" : -1898942780,
            "className" : "org.apache.spark.sql.execution.adaptive.ShuffleQueryStageExec",
            "sizeInBytes" : 8801500032,
            "rowCount" : 275046876,
            "isRuntime" : true,
            "predicate" : " (unknown) ShuffleQueryStage Output [3]: [ss_customer_sk#460, ss_quantity#467, ss_sales_price#470] Arguments: 25 "
          },
          "0" : {
            "sign" : 759057660,
            "className" : "org.apache.spark.sql.execution.aggregate.HashAggregateExec",
            "sizeInBytes" : 1648640717,
            "rowCount" : 27026897,
            "isRuntime" : false,
            "predicate" : " (unknown) HashAggregate Input [4]: [ws_quantity#158, ws_list_price#160, c_first_name#553, c_last_name#554] Keys [2]: [c_last_name#554, c_first_name#553] Functions [1]: [partial_sum((cast(ws_quantity#158 as decimal(10,0)) * ws_list_price#160))] Aggregate Attributes [2]: [sum#627, isEmpty#628] Results [4]: [c_last_name#554, c_first_name#553, sum#629, isEmpty#630] "
          },
          "20" : {
            "sign" : 692399529,
            "className" : "org.apache.spark.sql.execution.joins.SortMergeJoinExec",
            "sizeInBytes" : 98000000,
            "rowCount" : 2000000,
            "isRuntime" : false,
            "predicate" : " (unknown) SortMergeJoin Left keys [1]: [c_customer_sk#545] Right keys [1]: [c_customer_sk#481] Join type: LeftSemi Join condition: None "
          },
          "27" : {
            "sign" : -797308669,
            "className" : "org.apache.spark.sql.execution.aggregate.HashAggregateExec",
            "sizeInBytes" : 55561772,
            "rowCount" : 1984349,
            "isRuntime" : false,
            "predicate" : " (unknown) HashAggregate Input [3]: [ss_quantity#467, ss_sales_price#470, c_customer_sk#481] Keys [1]: [c_customer_sk#481] Functions [1]: [partial_sum((cast(ss_quantity#467 as decimal(10,0)) * ss_sales_price#470))] Aggregate Attributes [2]: [sum#623, isEmpty#624] Results [3]: [c_customer_sk#481, sum#625, isEmpty#626] "
          },
          "2" : {
            "sign" : -1659707709,
            "className" : "org.apache.spark.sql.execution.joins.SortMergeJoinExec",
            "sizeInBytes" : 4702228440,
            "rowCount" : 72341976,
            "isRuntime" : false,
            "predicate" : " (unknown) SortMergeJoin Left keys [1]: [ws_bill_customer_sk#144] Right keys [1]: [c_customer_sk#545] Join type: Inner Join condition: None "
          },
          "18" : {
            "sign" : -910952827,
            "className" : "org.apache.spark.sql.execution.adaptive.ShuffleQueryStageExec",
            "sizeInBytes" : 32000000,
            "rowCount" : 2000000,
            "isRuntime" : true,
            "predicate" : " (unknown) ShuffleQueryStage Output [1]: [c_customer_sk#481] Arguments: 19 "
          },
          "30" : {
            "sign" : 1661350429,
            "className" : "org.apache.spark.sql.execution.SortExec",
            "sizeInBytes" : -1,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Input [3]: [ss_customer_sk#460, ss_quantity#467, ss_sales_price#470] Arguments: [ss_customer_sk#460 ASC NULLS FIRST], false, 0 "
          },
          "7" : {
            "sign" : -488506830,
            "className" : "org.apache.spark.sql.execution.adaptive.ShuffleQueryStageExec",
            "sizeInBytes" : 33694520,
            "rowCount" : 842363,
            "isRuntime" : true,
            "predicate" : " (unknown) ShuffleQueryStage Output [4]: [ws_bill_customer_sk#144, ws_quantity#158, ws_list_price#160, ws_sold_date_sk#174] Arguments: 32 "
          },
          "29" : {
            "sign" : -1992902561,
            "className" : "org.apache.spark.sql.execution.joins.SortMergeJoinExec",
            "sizeInBytes" : 7701230628,
            "rowCount" : 275043951,
            "isRuntime" : false,
            "predicate" : " (unknown) SortMergeJoin Left keys [1]: [ss_customer_sk#460] Right keys [1]: [c_customer_sk#481] Join type: Inner Join condition: None "
          },
          "3" : {
            "sign" : 1094236683,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 1667894520,
            "rowCount" : 69495605,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [3]: [ws_bill_customer_sk#144, ws_quantity#158, ws_list_price#160] Input [5]: [ws_bill_customer_sk#144, ws_quantity#158, ws_list_price#160, ws_sold_date_sk#174, d_date_sk#563] "
          },
          "28" : {
            "sign" : 1116703664,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 6601054824,
            "rowCount" : 275043951,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [3]: [ss_quantity#467, ss_sales_price#470, c_customer_sk#481] Input [4]: [ss_customer_sk#460, ss_quantity#467, ss_sales_price#470, c_customer_sk#481] "
          }
        },
        "links" : [ {
          "fromId" : 7,
          "fromName" : "ShuffleQueryStage",
          "toId" : 6,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Sort",
          "toId" : 5,
          "toName" : "SortMergeJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 16,
          "fromName" : "ShuffleQueryStage",
          "toId" : 15,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 15,
          "fromName" : "Sort",
          "toId" : 14,
          "toName" : "SortMergeJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 18,
          "fromName" : "ShuffleQueryStage",
          "toId" : 17,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 17,
          "fromName" : "Sort",
          "toId" : 14,
          "toName" : "SortMergeJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 14,
          "fromName" : "SortMergeJoin",
          "toId" : 13,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 13,
          "fromName" : "Project",
          "toId" : 12,
          "toName" : "HashAggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 12,
          "fromName" : "HashAggregate",
          "toId" : 11,
          "toName" : "HashAggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "HashAggregate",
          "toId" : 10,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "Filter",
          "toId" : 9,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "Project",
          "toId" : 8,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "Sort",
          "toId" : 5,
          "toName" : "SortMergeJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "SortMergeJoin",
          "toId" : 4,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 19,
          "fromName" : "BroadcastQueryStage",
          "toId" : 4,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "BroadcastHashJoin",
          "toId" : 3,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Project",
          "toId" : 2,
          "toName" : "SortMergeJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 22,
          "fromName" : "ShuffleQueryStage",
          "toId" : 21,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 21,
          "fromName" : "Sort",
          "toId" : 20,
          "toName" : "SortMergeJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 31,
          "fromName" : "ShuffleQueryStage",
          "toId" : 30,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 30,
          "fromName" : "Sort",
          "toId" : 29,
          "toName" : "SortMergeJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 33,
          "fromName" : "ShuffleQueryStage",
          "toId" : 32,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 32,
          "fromName" : "Sort",
          "toId" : 29,
          "toName" : "SortMergeJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 29,
          "fromName" : "SortMergeJoin",
          "toId" : 28,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 28,
          "fromName" : "Project",
          "toId" : 27,
          "toName" : "HashAggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 27,
          "fromName" : "HashAggregate",
          "toId" : 26,
          "toName" : "HashAggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 26,
          "fromName" : "HashAggregate",
          "toId" : 25,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 25,
          "fromName" : "Filter",
          "toId" : 24,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 24,
          "fromName" : "Project",
          "toId" : 23,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 23,
          "fromName" : "Sort",
          "toId" : 20,
          "toName" : "SortMergeJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 20,
          "fromName" : "SortMergeJoin",
          "toId" : 2,
          "toName" : "SortMergeJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "SortMergeJoin",
          "toId" : 1,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Project",
          "toId" : 0,
          "toName" : "HashAggregate",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "HashAggregate(keys=[c_last_name#554, c_first_name#553], functions=[partial_sum((cast(ws_quantity#158 as decimal(10,0)) * ws_list_price#160))], output=[c_last_name#554, c_first_name#553, sum#629, isEmpty#630])\n+- Project [ws_quantity#158, ws_list_price#160, c_first_name#553, c_last_name#554]\n   +- SortMergeJoin [ws_bill_customer_sk#144], [c_customer_sk#545], Inner\n      :- Project [ws_bill_customer_sk#144, ws_quantity#158, ws_list_price#160]\n      :  +- BroadcastHashJoin [ws_sold_date_sk#174], [d_date_sk#563], Inner, BuildRight, false\n      :     :- SortMergeJoin [ws_bill_customer_sk#144], [c_customer_sk#481], LeftSemi\n      :     :  :- Sort [ws_bill_customer_sk#144 ASC NULLS FIRST], false, 0\n      :     :  :  +- ShuffleQueryStage 32\n      :     :  :     +- Exchange hashpartitioning(ws_bill_customer_sk#144, 200), ENSURE_REQUIREMENTS, [plan_id=5883]\n      :     :  :        +- *(30) Project [ws_bill_customer_sk#144, ws_quantity#158, ws_list_price#160, ws_sold_date_sk#174]\n      :     :  :           +- *(30) SortMergeJoin [ws_item_sk#143], [item_sk#398], LeftSemi\n      :     :  :              :- *(26) Sort [ws_item_sk#143 ASC NULLS FIRST], false, 0\n      :     :  :              :  +- AQEShuffleRead coalesced\n      :     :  :              :     +- ShuffleQueryStage 11\n      :     :  :              :        +- Exchange hashpartitioning(ws_item_sk#143, 200), ENSURE_REQUIREMENTS, [plan_id=1347]\n      :     :  :              :           +- *(10) Filter isnotnull(ws_bill_customer_sk#144)\n      :     :  :              :              +- *(10) ColumnarToRow\n      :     :  :              :                 +- FileScan parquet spark_catalog.tpcds_100.web_sales[ws_item_sk#143,ws_bill_customer_sk#144,ws_quantity#158,ws_list_price#160,ws_sold_date_sk#174] Batched: true, DataFilters: [isnotnull(ws_bill_customer_sk#144)], Format: Parquet, Location: InMemoryFileIndex(1823 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/web_sa..., PartitionFilters: [isnotnull(ws_sold_date_sk#174), dynamicpruningexpression(ws_sold_date_sk#174 IN dynamicpruning#6..., PushedFilters: [IsNotNull(ws_bill_customer_sk)], ReadSchema: struct<ws_item_sk:int,ws_bill_customer_sk:int,ws_quantity:int,ws_list_price:decimal(7,2)>\n      :     :  :              :                       +- ReusedSubquery SubqueryBroadcast dynamicpruning#614, 0, [d_date_sk#517], [id=#957]\n      :     :  :              +- *(29) Sort [item_sk#398 ASC NULLS FIRST], false, 0\n      :     :  :                 +- *(29) Project [item_sk#398]\n      :     :  :                    +- *(29) Filter (cnt#400L > 4)\n      :     :  :                       +- *(29) HashAggregate(keys=[_groupingexpression#608, i_item_sk#67, d_date#41], functions=[count(1)], output=[item_sk#398, cnt#400L])\n      :     :  :                          +- *(29) HashAggregate(keys=[_groupingexpression#608, i_item_sk#67, d_date#41], functions=[partial_count(1)], output=[_groupingexpression#608, i_item_sk#67, d_date#41, count#622L])\n      :     :  :                             +- *(29) Project [d_date#41, i_item_sk#67, substr(i_item_desc#71, 1, 30) AS _groupingexpression#608]\n      :     :  :                                +- *(29) SortMergeJoin [ss_item_sk#17], [i_item_sk#67], Inner\n      :     :  :                                   :- *(27) Sort [ss_item_sk#17 ASC NULLS FIRST], false, 0\n      :     :  :                                   :  +- AQEShuffleRead coalesced\n      :     :  :                                   :     +- ShuffleQueryStage 30\n      :     :  :                                   :        +- ReusedExchange [ss_item_sk#17, d_date#41], Exchange hashpartitioning(ss_item_sk#17, 200), ENSURE_REQUIREMENTS, [plan_id=2120]\n      :     :  :                                   +- *(28) Sort [i_item_sk#67 ASC NULLS FIRST], false, 0\n      :     :  :                                      +- AQEShuffleRead coalesced\n      :     :  :                                         +- ShuffleQueryStage 15\n      :     :  :                                            +- ReusedExchange [i_item_sk#67, i_item_desc#71], Exchange hashpartitioning(i_item_sk#67, 200), ENSURE_REQUIREMENTS, [plan_id=1012]\n      :     :  +- Sort [c_customer_sk#481 ASC NULLS FIRST], false, 0\n      :     :     +- Project [c_customer_sk#481]\n      :     :        +- Filter (isnotnull(ssales#403) AND (cast(ssales#403 as decimal(38,8)) > (0.950000 * Subquery subquery#404, [id=#492])))\n      :     :           :  +- Subquery subquery#404, [id=#492]\n      :     :           :     +- AdaptiveSparkPlan isFinalPlan=true\n                                 +- == Final Plan ==\n                                    *(7) HashAggregate(keys=[], functions=[max(csales#401)], output=[tpcds_cmax#402])\n                                    +- ShuffleQueryStage 4\n                                       +- Exchange SinglePartition, ENSURE_REQUIREMENTS, [plan_id=6917]\n                                          +- *(6) HashAggregate(keys=[], functions=[partial_max(csales#401)], output=[max#632])\n                                             +- *(6) HashAggregate(keys=[c_customer_sk#89], functions=[sum((cast(ss_quantity#416 as decimal(10,0)) * ss_sales_price#419))], output=[csales#401])\n                                                +- *(6) HashAggregate(keys=[c_customer_sk#89], functions=[partial_sum((cast(ss_quantity#416 as decimal(10,0)) * ss_sales_price#419))], output=[c_customer_sk#89, sum#635, isEmpty#636])\n                                                   +- *(6) Project [ss_quantity#416, ss_sales_price#419, c_customer_sk#89]\n                                                      +- *(6) SortMergeJoin [ss_customer_sk#409], [c_customer_sk#89], Inner\n                                                         :- *(4) Sort [ss_customer_sk#409 ASC NULLS FIRST], false, 0\n                                                         :  +- AQEShuffleRead coalesced\n                                                         :     +- ShuffleQueryStage 3\n                                                         :        +- Exchange hashpartitioning(ss_customer_sk#409, 200), ENSURE_REQUIREMENTS, [plan_id=6797]\n                                                         :           +- *(3) Project [ss_customer_sk#409, ss_quantity#416, ss_sales_price#419]\n                                                         :              +- *(3) BroadcastHashJoin [ss_sold_date_sk#429], [d_date_sk#430], Inner, BuildRight, false\n                                                         :                 :- *(3) Filter isnotnull(ss_customer_sk#409)\n                                                         :                 :  +- *(3) ColumnarToRow\n                                                         :                 :     +- FileScan parquet spark_catalog.tpcds_100.store_sales[ss_customer_sk#409,ss_quantity#416,ss_sales_price#419,ss_sold_date_sk#429] Batched: true, DataFilters: [isnotnull(ss_customer_sk#409)], Format: Parquet, Location: InMemoryFileIndex(1823 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/store_..., PartitionFilters: [isnotnull(ss_sold_date_sk#429), dynamicpruningexpression(ss_sold_date_sk#429 IN dynamicpruning#6..., PushedFilters: [IsNotNull(ss_customer_sk)], ReadSchema: struct<ss_customer_sk:int,ss_quantity:int,ss_sales_price:decimal(7,2)>\n                                                         :                 :           +- SubqueryBroadcast dynamicpruning#610, 0, [d_date_sk#430], [id=#6771]\n                                                         :                 :              +- AdaptiveSparkPlan isFinalPlan=true\n                                                         +- == Final Plan ==\n                                                            BroadcastQueryStage 1\n                                                            +- ReusedExchange [d_date_sk#430], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=6642]\n                                                         +- == Initial Plan ==\n                                                            BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=6768]\n                                                            +- Project [d_date_sk#430]\n                                                               +- Filter (d_year#436 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#430))\n                                                                  +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#430,d_year#436] Batched: true, DataFilters: [d_year#436 IN (1999,2000,2001,2002), isnotnull(d_date_sk#430)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [In(d_year, [1999,2000,2001,2002]), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>\n                                                         :                 +- BroadcastQueryStage 0\n                                                         :                    +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=6642]\n                                                         :                       +- *(1) Project [d_date_sk#430]\n                                                         :                          +- *(1) Filter (d_year#436 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#430))\n                                                         :                             +- *(1) ColumnarToRow\n                                                         :                                +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#430,d_year#436] Batched: true, DataFilters: [d_year#436 IN (1999,2000,2001,2002), isnotnull(d_date_sk#430)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [In(d_year, [1999,2000,2001,2002]), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>\n                                                         +- *(5) Sort [c_customer_sk#89 ASC NULLS FIRST], false, 0\n                                                            +- AQEShuffleRead coalesced\n                                                               +- ShuffleQueryStage 2\n                                                                  +- ReusedExchange [c_customer_sk#89], Exchange hashpartitioning(c_customer_sk#481, 200), ENSURE_REQUIREMENTS, [plan_id=1061]\n                                 +- == Initial Plan ==\n                                    HashAggregate(keys=[], functions=[max(csales#401)], output=[tpcds_cmax#402])\n                                    +- Exchange SinglePartition, ENSURE_REQUIREMENTS, [plan_id=490]\n                                       +- HashAggregate(keys=[], functions=[partial_max(csales#401)], output=[max#632])\n                                          +- HashAggregate(keys=[c_customer_sk#89], functions=[sum((cast(ss_quantity#416 as decimal(10,0)) * ss_sales_price#419))], output=[csales#401])\n                                             +- HashAggregate(keys=[c_customer_sk#89], functions=[partial_sum((cast(ss_quantity#416 as decimal(10,0)) * ss_sales_price#419))], output=[c_customer_sk#89, sum#635, isEmpty#636])\n                                                +- Project [ss_quantity#416, ss_sales_price#419, c_customer_sk#89]\n                                                   +- SortMergeJoin [ss_customer_sk#409], [c_customer_sk#89], Inner\n                                                      :- Sort [ss_customer_sk#409 ASC NULLS FIRST], false, 0\n                                                      :  +- Exchange hashpartitioning(ss_customer_sk#409, 200), ENSURE_REQUIREMENTS, [plan_id=480]\n                                                      :     +- Project [ss_customer_sk#409, ss_quantity#416, ss_sales_price#419]\n                                                      :        +- BroadcastHashJoin [ss_sold_date_sk#429], [d_date_sk#430], Inner, BuildRight, false\n                                                      :           :- Filter isnotnull(ss_customer_sk#409)\n                                                      :           :  +- FileScan parquet spark_catalog.tpcds_100.store_sales[ss_customer_sk#409,ss_quantity#416,ss_sales_price#419,ss_sold_date_sk#429] Batched: true, DataFilters: [isnotnull(ss_customer_sk#409)], Format: Parquet, Location: InMemoryFileIndex(1823 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/store_..., PartitionFilters: [isnotnull(ss_sold_date_sk#429), dynamicpruningexpression(ss_sold_date_sk#429 IN dynamicpruning#6..., PushedFilters: [IsNotNull(ss_customer_sk)], ReadSchema: struct<ss_customer_sk:int,ss_quantity:int,ss_sales_price:decimal(7,2)>\n                                                      :           :        +- SubqueryAdaptiveBroadcast dynamicpruning#610, 0, true, Project [d_date_sk#430], [d_date_sk#430]\n                                                      :           :           +- AdaptiveSparkPlan isFinalPlan=false\n                                                      :           :              +- Project [d_date_sk#430]\n                                                      :           :                 +- Filter (d_year#436 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#430))\n                                                      :           :                    +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#430,d_year#436] Batched: true, DataFilters: [d_year#436 IN (1999,2000,2001,2002), isnotnull(d_date_sk#430)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [In(d_year, [1999,2000,2001,2002]), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>\n                                                      :           +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=475]\n                                                      :              +- Project [d_date_sk#430]\n                                                      :                 +- Filter (d_year#436 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#430))\n                                                      :                    +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#430,d_year#436] Batched: true, DataFilters: [d_year#436 IN (1999,2000,2001,2002), isnotnull(d_date_sk#430)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [In(d_year, [1999,2000,2001,2002]), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>\n                                                      +- Sort [c_customer_sk#89 ASC NULLS FIRST], false, 0\n                                                         +- Exchange hashpartitioning(c_customer_sk#89, 200), ENSURE_REQUIREMENTS, [plan_id=481]\n                                                            +- Filter isnotnull(c_customer_sk#89)\n                                                               +- FileScan parquet spark_catalog.tpcds_100.customer[c_customer_sk#89] Batched: true, DataFilters: [isnotnull(c_customer_sk#89)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/customer], PartitionFilters: [], PushedFilters: [IsNotNull(c_customer_sk)], ReadSchema: struct<c_customer_sk:int>\n      :     :           +- HashAggregate(keys=[c_customer_sk#481], functions=[sum((cast(ss_quantity#467 as decimal(10,0)) * ss_sales_price#470))], output=[c_customer_sk#481, ssales#403])\n      :     :              +- HashAggregate(keys=[c_customer_sk#481], functions=[partial_sum((cast(ss_quantity#467 as decimal(10,0)) * ss_sales_price#470))], output=[c_customer_sk#481, sum#625, isEmpty#626])\n      :     :                 +- Project [ss_quantity#467, ss_sales_price#470, c_customer_sk#481]\n      :     :                    +- SortMergeJoin [ss_customer_sk#460], [c_customer_sk#481], Inner\n      :     :                       :- Sort [ss_customer_sk#460 ASC NULLS FIRST], false, 0\n      :     :                       :  +- ShuffleQueryStage 17\n      :     :                       :     +- ReusedExchange [ss_customer_sk#460, ss_quantity#467, ss_sales_price#470], Exchange hashpartitioning(ss_customer_sk#460, 200), ENSURE_REQUIREMENTS, [plan_id=1042]\n      :     :                       +- Sort [c_customer_sk#481 ASC NULLS FIRST], false, 0\n      :     :                          +- ShuffleQueryStage 19\n      :     :                             +- ReusedExchange [c_customer_sk#481], Exchange hashpartitioning(c_customer_sk#481, 200), ENSURE_REQUIREMENTS, [plan_id=1061]\n      :     +- BroadcastQueryStage 21\n      :        +- ReusedExchange [d_date_sk#563], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=1088]\n      +- SortMergeJoin [c_customer_sk#545], [c_customer_sk#481], LeftSemi\n         :- Sort [c_customer_sk#545 ASC NULLS FIRST], false, 0\n         :  +- ShuffleQueryStage 23\n         :     +- ReusedExchange [c_customer_sk#545, c_first_name#553, c_last_name#554], Exchange hashpartitioning(c_customer_sk#499, 200), ENSURE_REQUIREMENTS, [plan_id=1107]\n         +- Sort [c_customer_sk#481 ASC NULLS FIRST], false, 0\n            +- Project [c_customer_sk#481]\n               +- Filter (isnotnull(ssales#403) AND (cast(ssales#403 as decimal(38,8)) > (0.950000 * Subquery subquery#404, [id=#492])))\n                  :  +- Subquery subquery#404, [id=#492]\n                  :     +- AdaptiveSparkPlan isFinalPlan=true\n                           +- == Final Plan ==\n                              *(7) HashAggregate(keys=[], functions=[max(csales#401)], output=[tpcds_cmax#402])\n                              +- ShuffleQueryStage 4\n                                 +- Exchange SinglePartition, ENSURE_REQUIREMENTS, [plan_id=6917]\n                                    +- *(6) HashAggregate(keys=[], functions=[partial_max(csales#401)], output=[max#632])\n                                       +- *(6) HashAggregate(keys=[c_customer_sk#89], functions=[sum((cast(ss_quantity#416 as decimal(10,0)) * ss_sales_price#419))], output=[csales#401])\n                                          +- *(6) HashAggregate(keys=[c_customer_sk#89], functions=[partial_sum((cast(ss_quantity#416 as decimal(10,0)) * ss_sales_price#419))], output=[c_customer_sk#89, sum#635, isEmpty#636])\n                                             +- *(6) Project [ss_quantity#416, ss_sales_price#419, c_customer_sk#89]\n                                                +- *(6) SortMergeJoin [ss_customer_sk#409], [c_customer_sk#89], Inner\n                                                   :- *(4) Sort [ss_customer_sk#409 ASC NULLS FIRST], false, 0\n                                                   :  +- AQEShuffleRead coalesced\n                                                   :     +- ShuffleQueryStage 3\n                                                   :        +- Exchange hashpartitioning(ss_customer_sk#409, 200), ENSURE_REQUIREMENTS, [plan_id=6797]\n                                                   :           +- *(3) Project [ss_customer_sk#409, ss_quantity#416, ss_sales_price#419]\n                                                   :              +- *(3) BroadcastHashJoin [ss_sold_date_sk#429], [d_date_sk#430], Inner, BuildRight, false\n                                                   :                 :- *(3) Filter isnotnull(ss_customer_sk#409)\n                                                   :                 :  +- *(3) ColumnarToRow\n                                                   :                 :     +- FileScan parquet spark_catalog.tpcds_100.store_sales[ss_customer_sk#409,ss_quantity#416,ss_sales_price#419,ss_sold_date_sk#429] Batched: true, DataFilters: [isnotnull(ss_customer_sk#409)], Format: Parquet, Location: InMemoryFileIndex(1823 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/store_..., PartitionFilters: [isnotnull(ss_sold_date_sk#429), dynamicpruningexpression(ss_sold_date_sk#429 IN dynamicpruning#6..., PushedFilters: [IsNotNull(ss_customer_sk)], ReadSchema: struct<ss_customer_sk:int,ss_quantity:int,ss_sales_price:decimal(7,2)>\n                                                   :                 :           +- SubqueryBroadcast dynamicpruning#610, 0, [d_date_sk#430], [id=#6771]\n                                                   :                 :              +- AdaptiveSparkPlan isFinalPlan=true\n                                                         +- == Final Plan ==\n                                                            BroadcastQueryStage 1\n                                                            +- ReusedExchange [d_date_sk#430], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=6642]\n                                                         +- == Initial Plan ==\n                                                            BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=6768]\n                                                            +- Project [d_date_sk#430]\n                                                               +- Filter (d_year#436 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#430))\n                                                                  +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#430,d_year#436] Batched: true, DataFilters: [d_year#436 IN (1999,2000,2001,2002), isnotnull(d_date_sk#430)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [In(d_year, [1999,2000,2001,2002]), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>\n                                                   :                 +- BroadcastQueryStage 0\n                                                   :                    +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=6642]\n                                                   :                       +- *(1) Project [d_date_sk#430]\n                                                   :                          +- *(1) Filter (d_year#436 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#430))\n                                                   :                             +- *(1) ColumnarToRow\n                                                   :                                +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#430,d_year#436] Batched: true, DataFilters: [d_year#436 IN (1999,2000,2001,2002), isnotnull(d_date_sk#430)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [In(d_year, [1999,2000,2001,2002]), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>\n                                                   +- *(5) Sort [c_customer_sk#89 ASC NULLS FIRST], false, 0\n                                                      +- AQEShuffleRead coalesced\n                                                         +- ShuffleQueryStage 2\n                                                            +- ReusedExchange [c_customer_sk#89], Exchange hashpartitioning(c_customer_sk#481, 200), ENSURE_REQUIREMENTS, [plan_id=1061]\n                           +- == Initial Plan ==\n                              HashAggregate(keys=[], functions=[max(csales#401)], output=[tpcds_cmax#402])\n                              +- Exchange SinglePartition, ENSURE_REQUIREMENTS, [plan_id=490]\n                                 +- HashAggregate(keys=[], functions=[partial_max(csales#401)], output=[max#632])\n                                    +- HashAggregate(keys=[c_customer_sk#89], functions=[sum((cast(ss_quantity#416 as decimal(10,0)) * ss_sales_price#419))], output=[csales#401])\n                                       +- HashAggregate(keys=[c_customer_sk#89], functions=[partial_sum((cast(ss_quantity#416 as decimal(10,0)) * ss_sales_price#419))], output=[c_customer_sk#89, sum#635, isEmpty#636])\n                                          +- Project [ss_quantity#416, ss_sales_price#419, c_customer_sk#89]\n                                             +- SortMergeJoin [ss_customer_sk#409], [c_customer_sk#89], Inner\n                                                :- Sort [ss_customer_sk#409 ASC NULLS FIRST], false, 0\n                                                :  +- Exchange hashpartitioning(ss_customer_sk#409, 200), ENSURE_REQUIREMENTS, [plan_id=480]\n                                                :     +- Project [ss_customer_sk#409, ss_quantity#416, ss_sales_price#419]\n                                                :        +- BroadcastHashJoin [ss_sold_date_sk#429], [d_date_sk#430], Inner, BuildRight, false\n                                                :           :- Filter isnotnull(ss_customer_sk#409)\n                                                :           :  +- FileScan parquet spark_catalog.tpcds_100.store_sales[ss_customer_sk#409,ss_quantity#416,ss_sales_price#419,ss_sold_date_sk#429] Batched: true, DataFilters: [isnotnull(ss_customer_sk#409)], Format: Parquet, Location: InMemoryFileIndex(1823 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/store_..., PartitionFilters: [isnotnull(ss_sold_date_sk#429), dynamicpruningexpression(ss_sold_date_sk#429 IN dynamicpruning#6..., PushedFilters: [IsNotNull(ss_customer_sk)], ReadSchema: struct<ss_customer_sk:int,ss_quantity:int,ss_sales_price:decimal(7,2)>\n                                                :           :        +- SubqueryAdaptiveBroadcast dynamicpruning#610, 0, true, Project [d_date_sk#430], [d_date_sk#430]\n                                                :           :           +- AdaptiveSparkPlan isFinalPlan=false\n                                                :           :              +- Project [d_date_sk#430]\n                                                :           :                 +- Filter (d_year#436 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#430))\n                                                :           :                    +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#430,d_year#436] Batched: true, DataFilters: [d_year#436 IN (1999,2000,2001,2002), isnotnull(d_date_sk#430)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [In(d_year, [1999,2000,2001,2002]), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>\n                                                :           +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=475]\n                                                :              +- Project [d_date_sk#430]\n                                                :                 +- Filter (d_year#436 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#430))\n                                                :                    +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#430,d_year#436] Batched: true, DataFilters: [d_year#436 IN (1999,2000,2001,2002), isnotnull(d_date_sk#430)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [In(d_year, [1999,2000,2001,2002]), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>\n                                                +- Sort [c_customer_sk#89 ASC NULLS FIRST], false, 0\n                                                   +- Exchange hashpartitioning(c_customer_sk#89, 200), ENSURE_REQUIREMENTS, [plan_id=481]\n                                                      +- Filter isnotnull(c_customer_sk#89)\n                                                         +- FileScan parquet spark_catalog.tpcds_100.customer[c_customer_sk#89] Batched: true, DataFilters: [isnotnull(c_customer_sk#89)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/customer], PartitionFilters: [], PushedFilters: [IsNotNull(c_customer_sk)], ReadSchema: struct<c_customer_sk:int>\n                  +- HashAggregate(keys=[c_customer_sk#481], functions=[sum((cast(ss_quantity#467 as decimal(10,0)) * ss_sales_price#470))], output=[c_customer_sk#481, ssales#403])\n                     +- HashAggregate(keys=[c_customer_sk#481], functions=[partial_sum((cast(ss_quantity#467 as decimal(10,0)) * ss_sales_price#470))], output=[c_customer_sk#481, sum#625, isEmpty#626])\n                        +- Project [ss_quantity#467, ss_sales_price#470, c_customer_sk#481]\n                           +- SortMergeJoin [ss_customer_sk#460], [c_customer_sk#481], Inner\n                              :- Sort [ss_customer_sk#460 ASC NULLS FIRST], false, 0\n                              :  +- ShuffleQueryStage 25\n                              :     +- ReusedExchange [ss_customer_sk#460, ss_quantity#467, ss_sales_price#470], Exchange hashpartitioning(ss_customer_sk#460, 200), ENSURE_REQUIREMENTS, [plan_id=1042]\n                              +- Sort [c_customer_sk#481 ASC NULLS FIRST], false, 0\n                                 +- ShuffleQueryStage 27\n                                    +- ReusedExchange [c_customer_sk#481], Exchange hashpartitioning(c_customer_sk#481, 200), ENSURE_REQUIREMENTS, [plan_id=1061]\n"
      },
      "IM" : {
        "inputSizeInBytes" : 17798271256,
        "inputRowCount" : 556936146
      },
      "InitialPartitionNum" : 200,
      "PD" : {
        "8" : [ 75566, 77024, 80363, 70048, 71766, 84690, 75203, 81923, 80327, 78113, 71073, 73119, 80363, 87565, 80396, 74144, 81557, 81565, 71040, 77021, 73748, 76259, 77381, 69656, 79964, 78872, 78836, 88721, 78251, 73715, 79892, 68092, 79703, 82291, 76658, 78476, 75200, 75566, 77747, 74840, 77384, 83560, 71966, 76001, 77678, 83810, 70347, 78440, 78151, 78731, 71636, 70943, 78179, 78916, 78110, 72692, 78509, 74804, 71339, 77714, 76361, 79166, 74477, 71339, 78187, 84041, 72662, 76985, 83411, 78908, 76553, 73781, 75203, 78803, 81008, 81199, 80690, 76622, 89642, 78839, 76408, 80690, 83452, 73418, 77054, 78875, 77711, 75599, 77453, 81524, 79601, 73879, 76691, 79964, 74078, 79453, 82368, 74837, 78839, 76952, 75860, 78905, 83565, 67734, 77420, 76589, 76292, 80000, 76292, 78944, 81161, 78803, 78875, 78440, 73157, 72989, 78911, 72362, 73817, 75170, 78509, 81158, 79964, 81959, 86327, 80867, 76622, 81238, 80036, 77783, 77642, 72032, 75203, 75530, 74771, 81851, 73551, 83887, 80726, 75566, 70281, 81887, 73653, 81125, 76223, 76655, 76226, 76292, 74543, 83084, 78473, 78005, 78110, 77420, 77816, 74510, 90123, 77714, 72725, 80041, 71733, 71999, 76331, 72063, 80102, 84839, 75267, 78074, 79670, 89046, 76295, 73022, 76259, 74078, 83810, 83488, 78803, 77714, 71106, 75896, 72431, 84721, 82649, 77057, 75569, 76622, 78113, 73418, 69082, 82327, 79565, 84649, 78440, 78113, 72756, 82363, 73484, 74474, 77351, 77384 ],
        "2" : [ 17371601, 17313063, 16996707, 17100959, 17033226, 17236981, 17071883, 16947894, 17078453, 17320527, 17392136, 17189957, 17396414, 17311465, 17218617, 17091886, 17296486, 17602538, 17086450, 17206721, 17104075, 17257645, 17447592, 17284068, 17180017, 17251810, 17078510, 17428751, 17190703, 17091180, 16888245, 17130838, 17230626, 16956499, 17240499, 17279493, 17046255, 16925646, 16907666, 17034480, 16940011, 17199974, 16869146, 17295966, 17353222, 16846943, 17325947, 17131813, 17231729, 17311901, 17440035, 17297061, 17072505, 17276021, 17146516, 17169923, 17129259, 16823901, 16978621, 17169124, 17091808, 17480756, 16982840, 17160489, 16978313, 17460598, 17233558, 17090869, 17156297, 17354514, 17312619, 17034009, 16927254, 17287614, 17365219, 17389547, 17480370, 17316975, 17251186, 17264228, 17243624, 17381439, 17433913, 16760532, 17064606, 16931418, 17063808, 17170220, 17151390, 17444256, 17095914, 17182115, 17324912, 17111549, 17203150, 17522946, 16932260, 16948450, 17145841, 16867015, 16765024, 17338612, 17173734, 16986979, 17131384, 17352202, 17241238, 17627527, 16822357, 16867839, 17008290, 17184359, 17395163, 17082612, 17338942, 17121168, 16815534, 16899165, 17149200, 17075267, 17087177, 17178853, 17547989, 17158451, 17252438, 17439694, 17073151, 16986975, 17140740, 16958860, 17422277, 17317255, 17311966, 17191736, 16950873, 17009149, 17326021, 17377512, 17100048, 17282433, 17170675, 16883065, 17109865, 17346265, 17166782, 17218832, 17598899, 17156005, 17190632, 17175152, 17467989, 17158171, 17400931, 17351617, 17331236, 17383323, 17108352, 17275713, 17473037, 16820939, 16928731, 16941370, 17356646, 16899933, 17228069, 17252334, 17147748, 17345681, 17313972, 16910213, 17387811, 17599878, 17309032, 17226960, 17276187, 16945588, 17360401, 16960900, 17134588, 17028930, 17029163, 17234190, 17064091, 17105964, 17637409, 17303023, 17722750, 17370523, 17066032, 17283328, 17271878, 17131573, 17011172, 16816679, 17307952, 17504379, 17083957, 17159149, 17341949, 16921044 ],
        "4" : [ 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 290960, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 290960, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 290960, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 290960, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 290960, 264509, 264509, 290960, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 290960, 264509, 264509, 264509, 290960, 264509, 290960, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 290960, 264509, 290960, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509 ],
        "3" : [ 52331, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 57565, 57565, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 57565, 52331, 52331, 52331, 57565, 57565, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 57565, 57565, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 57565, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 57565, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 57565, 57565, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 57565, 57565, 52331, 57565, 52331, 57565, 52331, 57565, 52331, 52331, 57565, 52331, 57565, 57565, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 57565, 57565, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 57565, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 57565, 57565, 52331, 52331, 52331, 52331 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 16,
        "FinishedTasksNum" : 1,
        "FinishedTasksTotalTimeInMs" : 1064.0,
        "FinishedTasksDistributionInMs" : [ 1064.0, 1064.0, 1064.0, 1064.0, 1064.0 ]
      },
      "QueryStageOptimizationId" : 16,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 35 ],
      "Objectives" : {
        "DurationInMs" : 24670,
        "TotalTasksDurationInMs" : 189274,
        "IOBytes" : {
          "Total" : 3569231955,
          "Details" : {
            "IR" : 0,
            "IW" : 0,
            "SR" : 3569231535,
            "SW" : 420
          }
        }
      }
    },
    "5" : {
      "QSLogical" : {
        "operators" : {
          "0" : {
            "sign" : -68979061,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 24000000,
                "rowCount" : 2000000
              },
              "compileTime" : {
                "sizeInBytes" : 24000000,
                "rowCount" : 2000000
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_customer_sk#481] "
          },
          "1" : {
            "sign" : 592267933,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 500000000,
                "rowCount" : 2000000
              },
              "compileTime" : {
                "sizeInBytes" : 500000000,
                "rowCount" : 2000000
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: isnotnull(c_customer_sk#481) "
          },
          "2" : {
            "sign" : 53153607,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 500000000,
                "rowCount" : 2000000
              },
              "compileTime" : {
                "sizeInBytes" : 500000000,
                "rowCount" : 2000000
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [c_customer_sk#481, c_customer_id#482, c_current_cdemo_sk#483, c_current_hdemo_sk#484, c_current_addr_sk#485, c_first_shipto_date_sk#486, c_first_sales_date_sk#487, c_salutation#488, c_first_name#489, c_last_name#490, c_preferred_cust_flag#491, c_birth_day#492, c_birth_month#493, c_birth_year#494, c_birth_country#495, c_login#496, c_email_address#497, c_last_review_date#498], `spark_catalog`.`tpcds_100`.`customer`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "LogicalRelation",
          "toId" : 1,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Filter",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [c_customer_sk#481]\n+- Filter isnotnull(c_customer_sk#481)\n   +- Relation spark_catalog.tpcds_100.customer[c_customer_sk#481,c_customer_id#482,c_current_cdemo_sk#483,c_current_hdemo_sk#484,c_current_addr_sk#485,c_first_shipto_date_sk#486,c_first_sales_date_sk#487,c_salutation#488,c_first_name#489,c_last_name#490,c_preferred_cust_flag#491,c_birth_day#492,c_birth_month#493,c_birth_year#494,c_birth_country#495,c_login#496,c_email_address#497,c_last_review_date#498] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "0" : {
            "sign" : 166345122,
            "className" : "org.apache.spark.sql.execution.FilterExec",
            "sizeInBytes" : 24000000,
            "rowCount" : 2000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Input [1]: [c_customer_sk#481] Condition : isnotnull(c_customer_sk#481) "
          },
          "1" : {
            "sign" : 1858510668,
            "className" : "org.apache.spark.sql.execution.FileSourceScanExec",
            "sizeInBytes" : 24000000,
            "rowCount" : 2000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Scan parquet spark_catalog.tpcds_100.customer Output [1]: [c_customer_sk#481] Batched: true Location: InMemoryFileIndex [hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/customer] PushedFilters: [IsNotNull(c_customer_sk)] ReadSchema: struct<c_customer_sk:int> "
          }
        },
        "links" : [ {
          "fromId" : 1,
          "fromName" : "Scan parquet spark_catalog.tpcds_100.customer",
          "toId" : 0,
          "toName" : "Filter",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Filter isnotnull(c_customer_sk#481)\n+- FileScan parquet spark_catalog.tpcds_100.customer[c_customer_sk#481] Batched: true, DataFilters: [isnotnull(c_customer_sk#481)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/customer], PartitionFilters: [], PushedFilters: [IsNotNull(c_customer_sk)], ReadSchema: struct<c_customer_sk:int>\n"
      },
      "IM" : {
        "inputSizeInBytes" : 24000000,
        "inputRowCount" : 2000000
      },
      "InitialPartitionNum" : 0,
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 4,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 8 ],
      "Objectives" : {
        "DurationInMs" : 19532,
        "TotalTasksDurationInMs" : 1318,
        "IOBytes" : {
          "Total" : 18511551,
          "Details" : {
            "IR" : 8140360,
            "IW" : 0,
            "SR" : 0,
            "SW" : 10371191
          }
        }
      }
    },
    "10" : {
      "QSLogical" : {
        "operators" : {
          "4" : {
            "sign" : 1579793792,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 5745158420,
                "rowCount" : -1
              },
              "compileTime" : {
                "sizeInBytes" : 5745158420,
                "rowCount" : -1
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [_groupingexpression#608, i_item_sk#67, d_date#41], [i_item_sk#67 AS item_sk#398, count(1) AS cnt#400L] "
          },
          "5" : {
            "sign" : -1904679633,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 10341285156,
                "rowCount" : 287257921
              },
              "compileTime" : {
                "sizeInBytes" : 10341285156,
                "rowCount" : 287257921
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date#41, i_item_sk#67, substr(i_item_desc#71, 1, 30) AS _groupingexpression#608] "
          },
          "6" : {
            "sign" : -299173776,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 38205303493,
                "rowCount" : 287257921
              },
              "compileTime" : {
                "sizeInBytes" : 38205303493,
                "rowCount" : 287257921
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_item_sk#17 = i_item_sk#67) "
          },
          "1" : {
            "sign" : -1814912580,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 2302899232,
                "rowCount" : 71965601
              },
              "compileTime" : {
                "sizeInBytes" : 2302899232,
                "rowCount" : 71965601
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (ws_item_sk#143 = item_sk#398) "
          },
          "0" : {
            "sign" : -1014741693,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 2015036828,
                "rowCount" : 71965601
              },
              "compileTime" : {
                "sizeInBytes" : 2015036828,
                "rowCount" : 71965601
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_bill_customer_sk#144, ws_quantity#158, ws_list_price#160, ws_sold_date_sk#174] "
          },
          "2" : {
            "sign" : 216067819,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 3447095052,
                "rowCount" : -1
              },
              "compileTime" : {
                "sizeInBytes" : 3447095052,
                "rowCount" : -1
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [item_sk#398] "
          },
          "3" : {
            "sign" : 1583264895,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 5745158420,
                "rowCount" : -1
              },
              "compileTime" : {
                "sizeInBytes" : 5745158420,
                "rowCount" : -1
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (cnt#400L > 4) "
          }
        },
        "links" : [ {
          "fromId" : 6,
          "fromName" : "Join",
          "toId" : 5,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Project",
          "toId" : 4,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Aggregate",
          "toId" : 3,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Filter",
          "toId" : 2,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Project",
          "toId" : 1,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Join",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [ws_bill_customer_sk#144, ws_quantity#158, ws_list_price#160, ws_sold_date_sk#174]\n+- Join LeftSemi, (ws_item_sk#143 = item_sk#398)\n   :- Project [ws_item_sk#143, ws_bill_customer_sk#144, ws_quantity#158, ws_list_price#160, ws_sold_date_sk#174]\n   :  +- Filter ((isnotnull(ws_bill_customer_sk#144) AND isnotnull(ws_sold_date_sk#174)) AND dynamicpruning#616 [ws_sold_date_sk#174])\n   :     :  +- Project [d_date_sk#563]\n   :     :     +- Filter (((isnotnull(d_year#569) AND isnotnull(d_moy#571)) AND ((d_year#569 = 1999) AND (d_moy#571 = 1))) AND isnotnull(d_date_sk#563))\n   :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#563,d_date_id#564,d_date#565,d_month_seq#566,d_week_seq#567,d_quarter_seq#568,d_year#569,d_dow#570,d_moy#571,d_dom#572,d_qoy#573,d_fy_year#574,d_fy_quarter_seq#575,d_fy_week_seq#576,d_day_name#577,d_quarter_name#578,d_holiday#579,d_weekend#580,d_following_holiday#581,d_first_dom#582,d_last_dom#583,d_same_day_ly#584,d_same_day_lq#585,d_current_day#586,... 4 more fields] parquet\n   :     +- Relation spark_catalog.tpcds_100.web_sales[ws_sold_time_sk#141,ws_ship_date_sk#142,ws_item_sk#143,ws_bill_customer_sk#144,ws_bill_cdemo_sk#145,ws_bill_hdemo_sk#146,ws_bill_addr_sk#147,ws_ship_customer_sk#148,ws_ship_cdemo_sk#149,ws_ship_hdemo_sk#150,ws_ship_addr_sk#151,ws_web_page_sk#152,ws_web_site_sk#153,ws_ship_mode_sk#154,ws_warehouse_sk#155,ws_promo_sk#156,ws_order_number#157L,ws_quantity#158,ws_wholesale_cost#159,ws_list_price#160,ws_sales_price#161,ws_ext_discount_amt#162,ws_ext_sales_price#163,ws_ext_wholesale_cost#164,... 10 more fields] parquet\n   +- Project [item_sk#398]\n      +- Filter (cnt#400L > 4)\n         +- Aggregate [_groupingexpression#608, i_item_sk#67, d_date#41], [i_item_sk#67 AS item_sk#398, count(1) AS cnt#400L]\n            +- Project [d_date#41, i_item_sk#67, substr(i_item_desc#71, 1, 30) AS _groupingexpression#608]\n               +- Join Inner, (ss_item_sk#17 = i_item_sk#67)\n                  :- Project [ss_item_sk#17, d_date#41]\n                  :  +- Join Inner, (ss_sold_date_sk#38 = d_date_sk#39)\n                  :     :- Project [ss_item_sk#17, ss_sold_date_sk#38]\n                  :     :  +- Filter ((isnotnull(ss_sold_date_sk#38) AND isnotnull(ss_item_sk#17)) AND dynamicpruning#611 [ss_sold_date_sk#38])\n                  :     :     :  +- Project [d_date_sk#39, d_date#41]\n                  :     :     :     +- Filter (d_year#45 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#39))\n                  :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#39,d_date_id#40,d_date#41,d_month_seq#42,d_week_seq#43,d_quarter_seq#44,d_year#45,d_dow#46,d_moy#47,d_dom#48,d_qoy#49,d_fy_year#50,d_fy_quarter_seq#51,d_fy_week_seq#52,d_day_name#53,d_quarter_name#54,d_holiday#55,d_weekend#56,d_following_holiday#57,d_first_dom#58,d_last_dom#59,d_same_day_ly#60,d_same_day_lq#61,d_current_day#62,... 4 more fields] parquet\n                  :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#16,ss_item_sk#17,ss_customer_sk#18,ss_cdemo_sk#19,ss_hdemo_sk#20,ss_addr_sk#21,ss_store_sk#22,ss_promo_sk#23,ss_ticket_number#24L,ss_quantity#25,ss_wholesale_cost#26,ss_list_price#27,ss_sales_price#28,ss_ext_discount_amt#29,ss_ext_sales_price#30,ss_ext_wholesale_cost#31,ss_ext_list_price#32,ss_ext_tax#33,ss_coupon_amt#34,ss_net_paid#35,ss_net_paid_inc_tax#36,ss_net_profit#37,ss_sold_date_sk#38] parquet\n                  :     +- Project [d_date_sk#39, d_date#41]\n                  :        +- Filter (d_year#45 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#39))\n                  :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#39,d_date_id#40,d_date#41,d_month_seq#42,d_week_seq#43,d_quarter_seq#44,d_year#45,d_dow#46,d_moy#47,d_dom#48,d_qoy#49,d_fy_year#50,d_fy_quarter_seq#51,d_fy_week_seq#52,d_day_name#53,d_quarter_name#54,d_holiday#55,d_weekend#56,d_following_holiday#57,d_first_dom#58,d_last_dom#59,d_same_day_ly#60,d_same_day_lq#61,d_current_day#62,... 4 more fields] parquet\n                  +- Project [i_item_sk#67, i_item_desc#71]\n                     +- Filter isnotnull(i_item_sk#67)\n                        +- Relation spark_catalog.tpcds_100.item[i_item_sk#67,i_item_id#68,i_rec_start_date#69,i_rec_end_date#70,i_item_desc#71,i_current_price#72,i_wholesale_cost#73,i_brand_id#74,i_brand#75,i_class_id#76,i_class#77,i_category_id#78,i_category#79,i_manufact_id#80,i_manufact#81,i_size#82,i_formulation#83,i_color#84,i_units#85,i_container#86,i_manager_id#87,i_product_name#88] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "12" : {
            "sign" : 1877747976,
            "className" : "org.apache.spark.sql.execution.adaptive.ShuffleQueryStageExec",
            "sizeInBytes" : 5280146112,
            "rowCount" : 220006088,
            "isRuntime" : true,
            "predicate" : " (unknown) ShuffleQueryStage Output [2]: [ss_item_sk#17, d_date#41] Arguments: 30 "
          },
          "8" : {
            "sign" : -761690013,
            "className" : "org.apache.spark.sql.execution.aggregate.HashAggregateExec",
            "sizeInBytes" : 5745158420,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) HashAggregate Input [3]: [d_date#41, i_item_sk#67, _groupingexpression#608] Keys [3]: [_groupingexpression#608, i_item_sk#67, d_date#41] Functions [1]: [partial_count(1)] Aggregate Attributes [1]: [count#621L] Results [4]: [_groupingexpression#608, i_item_sk#67, d_date#41, count#622L] "
          },
          "4" : {
            "sign" : -772304776,
            "className" : "org.apache.spark.sql.execution.SortExec",
            "sizeInBytes" : -1,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Input [1]: [item_sk#398] Arguments: [item_sk#398 ASC NULLS FIRST], false, 0 "
          },
          "11" : {
            "sign" : -1724735814,
            "className" : "org.apache.spark.sql.execution.SortExec",
            "sizeInBytes" : -1,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Input [2]: [ss_item_sk#17, d_date#41] Arguments: [ss_item_sk#17 ASC NULLS FIRST], false, 0 "
          },
          "9" : {
            "sign" : -211827541,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 10341285156,
            "rowCount" : 287257921,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [3]: [d_date#41, i_item_sk#67, substr(i_item_desc#71, 1, 30) AS _groupingexpression#608] Input [4]: [ss_item_sk#17, d_date#41, i_item_sk#67, i_item_desc#71] "
          },
          "13" : {
            "sign" : -1710498405,
            "className" : "org.apache.spark.sql.execution.SortExec",
            "sizeInBytes" : -1,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Input [2]: [i_item_sk#67, i_item_desc#71] Arguments: [i_item_sk#67 ASC NULLS FIRST], false, 0 "
          },
          "5" : {
            "sign" : 510578749,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 3447095052,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [1]: [item_sk#398] Input [2]: [item_sk#398, cnt#400L] "
          },
          "10" : {
            "sign" : -947048100,
            "className" : "org.apache.spark.sql.execution.joins.SortMergeJoinExec",
            "sizeInBytes" : 38205303493,
            "rowCount" : 287257921,
            "isRuntime" : false,
            "predicate" : " (unknown) SortMergeJoin Left keys [1]: [ss_item_sk#17] Right keys [1]: [i_item_sk#67] Join type: Inner Join condition: None "
          },
          "6" : {
            "sign" : -1477456137,
            "className" : "org.apache.spark.sql.execution.FilterExec",
            "sizeInBytes" : 5745158420,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Input [2]: [item_sk#398, cnt#400L] Condition : (cnt#400L > 4) "
          },
          "1" : {
            "sign" : 1558256435,
            "className" : "org.apache.spark.sql.execution.joins.SortMergeJoinExec",
            "sizeInBytes" : 2302899232,
            "rowCount" : 71965601,
            "isRuntime" : false,
            "predicate" : " (unknown) SortMergeJoin Left keys [1]: [ws_item_sk#143] Right keys [1]: [item_sk#398] Join type: LeftSemi Join condition: None "
          },
          "14" : {
            "sign" : 1563304099,
            "className" : "org.apache.spark.sql.execution.adaptive.ShuffleQueryStageExec",
            "sizeInBytes" : 26102424,
            "rowCount" : 204000,
            "isRuntime" : true,
            "predicate" : " (unknown) ShuffleQueryStage Output [2]: [i_item_sk#67, i_item_desc#71] Arguments: 15 "
          },
          "0" : {
            "sign" : -1088832452,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 2015036828,
            "rowCount" : 71965601,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [4]: [ws_bill_customer_sk#144, ws_quantity#158, ws_list_price#160, ws_sold_date_sk#174] Input [5]: [ws_item_sk#143, ws_bill_customer_sk#144, ws_quantity#158, ws_list_price#160, ws_sold_date_sk#174] "
          },
          "2" : {
            "sign" : -1071771458,
            "className" : "org.apache.spark.sql.execution.SortExec",
            "sizeInBytes" : -1,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Input [5]: [ws_item_sk#143, ws_bill_customer_sk#144, ws_quantity#158, ws_list_price#160, ws_sold_date_sk#174] Arguments: [ws_item_sk#143 ASC NULLS FIRST], false, 0 "
          },
          "7" : {
            "sign" : 762549064,
            "className" : "org.apache.spark.sql.execution.aggregate.HashAggregateExec",
            "sizeInBytes" : 5745158420,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) HashAggregate Input [4]: [_groupingexpression#608, i_item_sk#67, d_date#41, count#622L] Keys [3]: [_groupingexpression#608, i_item_sk#67, d_date#41] Functions [1]: [count(1)] Aggregate Attributes [1]: [count(1)#405L] Results [2]: [i_item_sk#67 AS item_sk#398, count(1)#405L AS cnt#400L] "
          },
          "3" : {
            "sign" : -901157202,
            "className" : "org.apache.spark.sql.execution.adaptive.ShuffleQueryStageExec",
            "sizeInBytes" : 40433424,
            "rowCount" : 842363,
            "isRuntime" : true,
            "predicate" : " (unknown) ShuffleQueryStage Output [5]: [ws_item_sk#143, ws_bill_customer_sk#144, ws_quantity#158, ws_list_price#160, ws_sold_date_sk#174] Arguments: 11 "
          }
        },
        "links" : [ {
          "fromId" : 3,
          "fromName" : "ShuffleQueryStage",
          "toId" : 2,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "SortMergeJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 12,
          "fromName" : "ShuffleQueryStage",
          "toId" : 11,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "Sort",
          "toId" : 10,
          "toName" : "SortMergeJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 14,
          "fromName" : "ShuffleQueryStage",
          "toId" : 13,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 13,
          "fromName" : "Sort",
          "toId" : 10,
          "toName" : "SortMergeJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "SortMergeJoin",
          "toId" : 9,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "Project",
          "toId" : 8,
          "toName" : "HashAggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "HashAggregate",
          "toId" : 7,
          "toName" : "HashAggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "HashAggregate",
          "toId" : 6,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Filter",
          "toId" : 5,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Project",
          "toId" : 4,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "SortMergeJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "SortMergeJoin",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [ws_bill_customer_sk#144, ws_quantity#158, ws_list_price#160, ws_sold_date_sk#174]\n+- SortMergeJoin [ws_item_sk#143], [item_sk#398], LeftSemi\n   :- Sort [ws_item_sk#143 ASC NULLS FIRST], false, 0\n   :  +- ShuffleQueryStage 11\n   :     +- Exchange hashpartitioning(ws_item_sk#143, 200), ENSURE_REQUIREMENTS, [plan_id=1347]\n   :        +- *(10) Filter isnotnull(ws_bill_customer_sk#144)\n   :           +- *(10) ColumnarToRow\n   :              +- FileScan parquet spark_catalog.tpcds_100.web_sales[ws_item_sk#143,ws_bill_customer_sk#144,ws_quantity#158,ws_list_price#160,ws_sold_date_sk#174] Batched: true, DataFilters: [isnotnull(ws_bill_customer_sk#144)], Format: Parquet, Location: InMemoryFileIndex(1823 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/web_sa..., PartitionFilters: [isnotnull(ws_sold_date_sk#174), dynamicpruningexpression(ws_sold_date_sk#174 IN dynamicpruning#6..., PushedFilters: [IsNotNull(ws_bill_customer_sk)], ReadSchema: struct<ws_item_sk:int,ws_bill_customer_sk:int,ws_quantity:int,ws_list_price:decimal(7,2)>\n   :                    +- ReusedSubquery SubqueryBroadcast dynamicpruning#614, 0, [d_date_sk#517], [id=#957]\n   +- Sort [item_sk#398 ASC NULLS FIRST], false, 0\n      +- Project [item_sk#398]\n         +- Filter (cnt#400L > 4)\n            +- HashAggregate(keys=[_groupingexpression#608, i_item_sk#67, d_date#41], functions=[count(1)], output=[item_sk#398, cnt#400L])\n               +- HashAggregate(keys=[_groupingexpression#608, i_item_sk#67, d_date#41], functions=[partial_count(1)], output=[_groupingexpression#608, i_item_sk#67, d_date#41, count#622L])\n                  +- Project [d_date#41, i_item_sk#67, substr(i_item_desc#71, 1, 30) AS _groupingexpression#608]\n                     +- SortMergeJoin [ss_item_sk#17], [i_item_sk#67], Inner\n                        :- Sort [ss_item_sk#17 ASC NULLS FIRST], false, 0\n                        :  +- ShuffleQueryStage 30\n                        :     +- ReusedExchange [ss_item_sk#17, d_date#41], Exchange hashpartitioning(ss_item_sk#17, 200), ENSURE_REQUIREMENTS, [plan_id=2120]\n                        +- Sort [i_item_sk#67 ASC NULLS FIRST], false, 0\n                           +- ShuffleQueryStage 15\n                              +- ReusedExchange [i_item_sk#67, i_item_desc#71], Exchange hashpartitioning(i_item_sk#67, 200), ENSURE_REQUIREMENTS, [plan_id=1012]\n"
      },
      "IM" : {
        "inputSizeInBytes" : 5346681960,
        "inputRowCount" : 221052451
      },
      "InitialPartitionNum" : 200,
      "PD" : {
        "5" : [ 92897, 90784, 103761, 90428, 98316, 97427, 101149, 90784, 84788, 92742, 102014, 97350, 92721, 91819, 94834, 93337, 90456, 91442, 93321, 90784, 92393, 96288, 88877, 91845, 104847, 93804, 94191, 93687, 87972, 94260, 96819, 89988, 101560, 98948, 95408, 96771, 95805, 97937, 94674, 92881, 91931, 90413, 93316, 92721, 91267, 93799, 97785, 93799, 88895, 84890, 104191, 94351, 97233, 94309, 93847, 98364, 96771, 94282, 95322, 95413, 96819, 94834, 93777, 97350, 80847, 96867, 92833, 91315, 101555, 98799, 94791, 91931, 99407, 98316, 91707, 98900, 90497, 108866, 96219, 94743, 94818, 94308, 91470, 93777, 100063, 93407, 96723, 92436, 101000, 91819, 97833, 99813, 94330, 89447, 99282, 102062, 90789, 90301, 99917, 88480, 92281, 98407, 93826, 91267, 97302, 98895, 97446, 99236, 85251, 91931, 91336, 89973, 89378, 99551, 95805, 95317, 90461, 92350, 91358, 98924, 90519, 94260, 99028, 93156, 100474, 96379, 93295, 95226, 96944, 92860, 93337, 97302, 89866, 91336, 90987, 89007, 89973, 99455, 97302, 98799, 102747, 89952, 96288, 99938, 93428, 95301, 92376, 95512, 95274, 95365, 92790, 85795, 95875, 96920, 94308, 92484, 95930, 89093, 97422, 86253, 96219, 102379, 98489, 102784, 96331, 96379, 92371, 93316, 92785, 93916, 94791, 102115, 94469, 96793, 95805, 96867, 89581, 88981, 94399, 98489, 98220, 89472, 93708, 89292, 96336, 95848, 95274, 90875, 94871, 92345, 94834, 92238, 91798, 83153, 95205, 93471, 96422, 89533, 96750, 101101 ],
        "1" : [ 84280, 84280, 84280, 92709, 92709, 84280, 92709, 84280, 76619, 92709, 92709, 84280, 92709, 84280, 84280, 84280, 84280, 84280, 92709, 92709, 92709, 92709, 84280, 84280, 92709, 84280, 84280, 92709, 84280, 92709, 92709, 92709, 92709, 84280, 84280, 92709, 84280, 84280, 84280, 92709, 84280, 84280, 84280, 92709, 92709, 84280, 84280, 84280, 84280, 84280, 92709, 92709, 84280, 84280, 84280, 92709, 92709, 92709, 84280, 84280, 84280, 92709, 84280, 92709, 84280, 92709, 92709, 84280, 92709, 92709, 92709, 84280, 92709, 92709, 84280, 92709, 84280, 92709, 84280, 84280, 92709, 84280, 92709, 84280, 92709, 84280, 84280, 92709, 92709, 84280, 84280, 84280, 92709, 84280, 92709, 92709, 84280, 92709, 92709, 84280, 84280, 92709, 84280, 92709, 92709, 84280, 84280, 92709, 84280, 92709, 84280, 92709, 84280, 92709, 92709, 92709, 76619, 92709, 84280, 84280, 84280, 92709, 92709, 92709, 92709, 92709, 84280, 84280, 92709, 84280, 84280, 84280, 84280, 92709, 84280, 84280, 92709, 92709, 92709, 84280, 84280, 84280, 92709, 92709, 92709, 84280, 84280, 84280, 92709, 84280, 92709, 84280, 92709, 84280, 84280, 92709, 84280, 92709, 84280, 84280, 84280, 92709, 92709, 92709, 84280, 92709, 84280, 84280, 92709, 84280, 84280, 92709, 84280, 84280, 92709, 84280, 84280, 84280, 84280, 84280, 84280, 84280, 92709, 84280, 92709, 92709, 84280, 84280, 84280, 84280, 92709, 84280, 84280, 84280, 84280, 84280, 84280, 84280, 92709, 92709 ],
        "6" : [ 6049721, 6030087, 6204013, 6143364, 6417576, 6042564, 6427913, 5778625, 5802410, 6411635, 6422810, 5944342, 6367492, 5961967, 6243307, 5978402, 6191850, 6371424, 6587778, 6447297, 6313620, 6422810, 6028759, 5986266, 6421901, 6258983, 6233722, 6298395, 6109356, 6084514, 6507783, 6147943, 6449506, 5943635, 6244334, 6411910, 6019024, 5910282, 5905669, 6426226, 6101492, 6107347, 5950904, 6407585, 6150044, 6285611, 6391406, 6019593, 5851354, 6052555, 6657567, 6402396, 6214507, 6340497, 6127688, 6436563, 6457410, 6417576, 6044880, 6353092, 6106752, 6341799, 6132922, 6412342, 5860767, 6165654, 6422810, 6223170, 6422423, 6411910, 6397594, 5872911, 6362735, 6382717, 6145732, 6258506, 5834571, 6414643, 6350965, 6122454, 6278991, 5887337, 6381892, 6294693, 6432891, 6137679, 6015092, 6454484, 6422810, 6113288, 6422810, 6167074, 6333110, 5741320, 6417576, 6407108, 5994751, 6045789, 6451622, 5926010, 6167807, 6423588, 6126386, 6427135, 6157732, 6380938, 6300275, 6530871, 5845065, 6187918, 6157790, 6327399, 5858511, 6427135, 5971840, 6316931, 6144692, 5996734, 5858511, 6365713, 6104122, 6334889, 6597081, 6381892, 6266847, 6376181, 6316106, 5889475, 6351790, 6040974, 6187918, 6386649, 6257348, 6272906, 6037330, 6211400, 6013764, 6417576, 6407108, 6096651, 6396640, 5930563, 6397117, 6422810, 6035347, 6407585, 6135526, 6112607, 6422810, 6412342, 6102794, 5760780, 6370947, 6234115, 6330983, 6517864, 6360249, 6289936, 6154709, 5842783, 5890648, 6428566, 6350011, 6397117, 6417576, 6341799, 6341406, 5878878, 6392360, 6043185, 6061289, 6427135, 6386649, 6229339, 6407585, 6115892, 5486094, 5850647, 6071076, 6269909, 6260659, 6081151, 6223647, 5969236, 6560397, 6432891, 6152472, 6261961, 6224556, 5905074, 6235024, 5960070, 6279468, 5841958, 6357978, 5867677, 6180649, 5920069, 6445866, 6427135 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 10,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 17 ],
      "Objectives" : {
        "DurationInMs" : 104084,
        "TotalTasksDurationInMs" : 587297,
        "IOBytes" : {
          "Total" : 1234040978,
          "Details" : {
            "IR" : 0,
            "IW" : 0,
            "SR" : 1219245065,
            "SW" : 14795913
          }
        }
      }
    },
    "6" : {
      "QSLogical" : {
        "operators" : {
          "0" : {
            "sign" : -1079484998,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 98000000,
                "rowCount" : 2000000
              },
              "compileTime" : {
                "sizeInBytes" : 98000000,
                "rowCount" : 2000000
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_customer_sk#499, c_first_name#507, c_last_name#508] "
          },
          "1" : {
            "sign" : -2138980244,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 500000000,
                "rowCount" : 2000000
              },
              "compileTime" : {
                "sizeInBytes" : 500000000,
                "rowCount" : 2000000
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: isnotnull(c_customer_sk#499) "
          },
          "2" : {
            "sign" : 1220508189,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 500000000,
                "rowCount" : 2000000
              },
              "compileTime" : {
                "sizeInBytes" : 500000000,
                "rowCount" : 2000000
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [c_customer_sk#499, c_customer_id#500, c_current_cdemo_sk#501, c_current_hdemo_sk#502, c_current_addr_sk#503, c_first_shipto_date_sk#504, c_first_sales_date_sk#505, c_salutation#506, c_first_name#507, c_last_name#508, c_preferred_cust_flag#509, c_birth_day#510, c_birth_month#511, c_birth_year#512, c_birth_country#513, c_login#514, c_email_address#515, c_last_review_date#516], `spark_catalog`.`tpcds_100`.`customer`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "LogicalRelation",
          "toId" : 1,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Filter",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [c_customer_sk#499, c_first_name#507, c_last_name#508]\n+- Filter isnotnull(c_customer_sk#499)\n   +- Relation spark_catalog.tpcds_100.customer[c_customer_sk#499,c_customer_id#500,c_current_cdemo_sk#501,c_current_hdemo_sk#502,c_current_addr_sk#503,c_first_shipto_date_sk#504,c_first_sales_date_sk#505,c_salutation#506,c_first_name#507,c_last_name#508,c_preferred_cust_flag#509,c_birth_day#510,c_birth_month#511,c_birth_year#512,c_birth_country#513,c_login#514,c_email_address#515,c_last_review_date#516] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "0" : {
            "sign" : -1086163426,
            "className" : "org.apache.spark.sql.execution.FilterExec",
            "sizeInBytes" : 98000000,
            "rowCount" : 2000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Input [3]: [c_customer_sk#499, c_first_name#507, c_last_name#508] Condition : isnotnull(c_customer_sk#499) "
          },
          "1" : {
            "sign" : 1177251151,
            "className" : "org.apache.spark.sql.execution.FileSourceScanExec",
            "sizeInBytes" : 98000000,
            "rowCount" : 2000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Scan parquet spark_catalog.tpcds_100.customer Output [3]: [c_customer_sk#499, c_first_name#507, c_last_name#508] Batched: true Location: InMemoryFileIndex [hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/customer] PushedFilters: [IsNotNull(c_customer_sk)] ReadSchema: struct<c_customer_sk:int,c_first_name:string,c_last_name:string> "
          }
        },
        "links" : [ {
          "fromId" : 1,
          "fromName" : "Scan parquet spark_catalog.tpcds_100.customer",
          "toId" : 0,
          "toName" : "Filter",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Filter isnotnull(c_customer_sk#499)\n+- FileScan parquet spark_catalog.tpcds_100.customer[c_customer_sk#499,c_first_name#507,c_last_name#508] Batched: true, DataFilters: [isnotnull(c_customer_sk#499)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/customer], PartitionFilters: [], PushedFilters: [IsNotNull(c_customer_sk)], ReadSchema: struct<c_customer_sk:int,c_first_name:string,c_last_name:string>\n"
      },
      "IM" : {
        "inputSizeInBytes" : 98000000,
        "inputRowCount" : 2000000
      },
      "InitialPartitionNum" : 0,
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 6,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 9 ],
      "Objectives" : {
        "DurationInMs" : 20846,
        "TotalTasksDurationInMs" : 2354,
        "IOBytes" : {
          "Total" : 66787538,
          "Details" : {
            "IR" : 14779729,
            "IW" : 0,
            "SR" : 0,
            "SW" : 52007809
          }
        }
      }
    },
    "1" : {
      "QSLogical" : {
        "operators" : {
          "0" : {
            "sign" : -1627618008,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 900,
                "rowCount" : 75
              },
              "compileTime" : {
                "sizeInBytes" : 900,
                "rowCount" : 75
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#517] "
          },
          "1" : {
            "sign" : -938092377,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 18450,
                "rowCount" : 75
              },
              "compileTime" : {
                "sizeInBytes" : 18450,
                "rowCount" : 75
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(d_year#523) AND isnotnull(d_moy#525)) AND ((d_year#523 = 1999) AND (d_moy#525 = 1))) AND isnotnull(d_date_sk#517)) "
          },
          "2" : {
            "sign" : 771270281,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 17970054,
                "rowCount" : 73049
              },
              "compileTime" : {
                "sizeInBytes" : 17970054,
                "rowCount" : 73049
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#517, d_date_id#518, d_date#519, d_month_seq#520, d_week_seq#521, d_quarter_seq#522, d_year#523, d_dow#524, d_moy#525, d_dom#526, d_qoy#527, d_fy_year#528, d_fy_quarter_seq#529, d_fy_week_seq#530, d_day_name#531, d_quarter_name#532, d_holiday#533, d_weekend#534, d_following_holiday#535, d_first_dom#536, d_last_dom#537, d_same_day_ly#538, d_same_day_lq#539, d_current_day#540, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "LogicalRelation",
          "toId" : 1,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Filter",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [d_date_sk#517]\n+- Filter (((isnotnull(d_year#523) AND isnotnull(d_moy#525)) AND ((d_year#523 = 1999) AND (d_moy#525 = 1))) AND isnotnull(d_date_sk#517))\n   +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#517,d_date_id#518,d_date#519,d_month_seq#520,d_week_seq#521,d_quarter_seq#522,d_year#523,d_dow#524,d_moy#525,d_dom#526,d_qoy#527,d_fy_year#528,d_fy_quarter_seq#529,d_fy_week_seq#530,d_day_name#531,d_quarter_name#532,d_holiday#533,d_weekend#534,d_following_holiday#535,d_first_dom#536,d_last_dom#537,d_same_day_ly#538,d_same_day_lq#539,d_current_day#540,... 4 more fields] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "0" : {
            "sign" : -7224436,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 900,
            "rowCount" : 75,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [1]: [d_date_sk#517] Input [3]: [d_date_sk#517, d_year#523, d_moy#525] "
          },
          "1" : {
            "sign" : 771047197,
            "className" : "org.apache.spark.sql.execution.FilterExec",
            "sizeInBytes" : 900,
            "rowCount" : 75,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Input [3]: [d_date_sk#517, d_year#523, d_moy#525] Condition : ((((isnotnull(d_year#523) AND isnotnull(d_moy#525)) AND (d_year#523 = 1999)) AND (d_moy#525 = 1)) AND isnotnull(d_date_sk#517)) "
          },
          "2" : {
            "sign" : 167724163,
            "className" : "org.apache.spark.sql.execution.FileSourceScanExec",
            "sizeInBytes" : 900,
            "rowCount" : 75,
            "isRuntime" : false,
            "predicate" : " (unknown) Scan parquet spark_catalog.tpcds_100.date_dim Output [3]: [d_date_sk#517, d_year#523, d_moy#525] Batched: true Location: InMemoryFileIndex [hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim] PushedFilters: [IsNotNull(d_year), IsNotNull(d_moy), EqualTo(d_year,1999), EqualTo(d_moy,1), IsNotNull(d_date_sk)] ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int> "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "Scan parquet spark_catalog.tpcds_100.date_dim",
          "toId" : 1,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Filter",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [d_date_sk#517]\n+- Filter ((((isnotnull(d_year#523) AND isnotnull(d_moy#525)) AND (d_year#523 = 1999)) AND (d_moy#525 = 1)) AND isnotnull(d_date_sk#517))\n   +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#517,d_year#523,d_moy#525] Batched: true, DataFilters: [isnotnull(d_year#523), isnotnull(d_moy#525), (d_year#523 = 1999), (d_moy#525 = 1), isnotnull(d_d..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), IsNotNull(d_moy), EqualTo(d_year,1999), EqualTo(d_moy,1), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>\n"
      },
      "IM" : {
        "inputSizeInBytes" : 900,
        "inputRowCount" : 75
      },
      "InitialPartitionNum" : 0,
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 5,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 4 ],
      "Objectives" : {
        "DurationInMs" : 1600,
        "TotalTasksDurationInMs" : 1592,
        "IOBytes" : {
          "Total" : 93950,
          "Details" : {
            "IR" : 93950,
            "IW" : 0,
            "SR" : 0,
            "SW" : 0
          }
        }
      }
    },
    "17" : {
      "QSLogical" : {
        "operators" : {
          "0" : {
            "sign" : 395096583,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 6400,
                "rowCount" : 100
              },
              "compileTime" : {
                "sizeInBytes" : 6400,
                "rowCount" : 100
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) GlobalLimit Arguments: 100 "
          },
          "1" : {
            "sign" : -1901980430,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 3297281434,
                "rowCount" : 54053794
              },
              "compileTime" : {
                "sizeInBytes" : 3297281434,
                "rowCount" : 54053794
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) LocalLimit Arguments: 100 "
          },
          "2" : {
            "sign" : 582031857,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 3297281434,
                "rowCount" : 54053794
              },
              "compileTime" : {
                "sizeInBytes" : 3297281434,
                "rowCount" : 54053794
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [c_last_name#508 ASC NULLS FIRST, c_first_name#507 ASC NULLS FIRST, sales#391 ASC NULLS FIRST], true "
          },
          "3" : {
            "sign" : -1684518723,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Union",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 3297281434,
                "rowCount" : 54053794
              },
              "compileTime" : {
                "sizeInBytes" : 3297281434,
                "rowCount" : 54053794
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Union Arguments: false, false "
          }
        },
        "links" : [ {
          "fromId" : 3,
          "fromName" : "Union",
          "toId" : 2,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "LocalLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "LocalLimit",
          "toId" : 0,
          "toName" : "GlobalLimit",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [c_last_name#508 ASC NULLS FIRST, c_first_name#507 ASC NULLS FIRST, sales#391 ASC NULLS FIRST], true\n      +- Union false, false\n         :- Aggregate [c_last_name#508, c_first_name#507], [c_last_name#508, c_first_name#507, sum((cast(cs_quantity#124 as decimal(10,0)) * cs_list_price#126)) AS sales#391]\n         :  +- Project [cs_quantity#124, cs_list_price#126, c_first_name#507, c_last_name#508]\n         :     +- Join Inner, (cs_bill_customer_sk#109 = c_customer_sk#499)\n         :        :- Project [cs_bill_customer_sk#109, cs_quantity#124, cs_list_price#126]\n         :        :  +- Join Inner, (cs_sold_date_sk#140 = d_date_sk#517)\n         :        :     :- Join LeftSemi, (cs_bill_customer_sk#109 = c_customer_sk#481)\n         :        :     :  :- Project [cs_bill_customer_sk#109, cs_quantity#124, cs_list_price#126, cs_sold_date_sk#140]\n         :        :     :  :  +- Join LeftSemi, (cs_item_sk#121 = item_sk#398)\n         :        :     :  :     :- Project [cs_bill_customer_sk#109, cs_item_sk#121, cs_quantity#124, cs_list_price#126, cs_sold_date_sk#140]\n         :        :     :  :     :  +- Filter ((isnotnull(cs_bill_customer_sk#109) AND isnotnull(cs_sold_date_sk#140)) AND dynamicpruning#614 [cs_sold_date_sk#140])\n         :        :     :  :     :     :  +- Project [d_date_sk#517]\n         :        :     :  :     :     :     +- Filter (((isnotnull(d_year#523) AND isnotnull(d_moy#525)) AND ((d_year#523 = 1999) AND (d_moy#525 = 1))) AND isnotnull(d_date_sk#517))\n         :        :     :  :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#517,d_date_id#518,d_date#519,d_month_seq#520,d_week_seq#521,d_quarter_seq#522,d_year#523,d_dow#524,d_moy#525,d_dom#526,d_qoy#527,d_fy_year#528,d_fy_quarter_seq#529,d_fy_week_seq#530,d_day_name#531,d_quarter_name#532,d_holiday#533,d_weekend#534,d_following_holiday#535,d_first_dom#536,d_last_dom#537,d_same_day_ly#538,d_same_day_lq#539,d_current_day#540,... 4 more fields] parquet\n         :        :     :  :     :     +- Relation spark_catalog.tpcds_100.catalog_sales[cs_sold_time_sk#107,cs_ship_date_sk#108,cs_bill_customer_sk#109,cs_bill_cdemo_sk#110,cs_bill_hdemo_sk#111,cs_bill_addr_sk#112,cs_ship_customer_sk#113,cs_ship_cdemo_sk#114,cs_ship_hdemo_sk#115,cs_ship_addr_sk#116,cs_call_center_sk#117,cs_catalog_page_sk#118,cs_ship_mode_sk#119,cs_warehouse_sk#120,cs_item_sk#121,cs_promo_sk#122,cs_order_number#123L,cs_quantity#124,cs_wholesale_cost#125,cs_list_price#126,cs_sales_price#127,cs_ext_discount_amt#128,cs_ext_sales_price#129,cs_ext_wholesale_cost#130,... 10 more fields] parquet\n         :        :     :  :     +- Project [item_sk#398]\n         :        :     :  :        +- Filter (cnt#400L > 4)\n         :        :     :  :           +- Aggregate [_groupingexpression#608, i_item_sk#67, d_date#41], [i_item_sk#67 AS item_sk#398, count(1) AS cnt#400L]\n         :        :     :  :              +- Project [d_date#41, i_item_sk#67, substr(i_item_desc#71, 1, 30) AS _groupingexpression#608]\n         :        :     :  :                 +- Join Inner, (ss_item_sk#17 = i_item_sk#67)\n         :        :     :  :                    :- Project [ss_item_sk#17, d_date#41]\n         :        :     :  :                    :  +- Join Inner, (ss_sold_date_sk#38 = d_date_sk#39)\n         :        :     :  :                    :     :- Project [ss_item_sk#17, ss_sold_date_sk#38]\n         :        :     :  :                    :     :  +- Filter ((isnotnull(ss_sold_date_sk#38) AND isnotnull(ss_item_sk#17)) AND dynamicpruning#609 [ss_sold_date_sk#38])\n         :        :     :  :                    :     :     :  +- Project [d_date_sk#39, d_date#41]\n         :        :     :  :                    :     :     :     +- Filter (d_year#45 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#39))\n         :        :     :  :                    :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#39,d_date_id#40,d_date#41,d_month_seq#42,d_week_seq#43,d_quarter_seq#44,d_year#45,d_dow#46,d_moy#47,d_dom#48,d_qoy#49,d_fy_year#50,d_fy_quarter_seq#51,d_fy_week_seq#52,d_day_name#53,d_quarter_name#54,d_holiday#55,d_weekend#56,d_following_holiday#57,d_first_dom#58,d_last_dom#59,d_same_day_ly#60,d_same_day_lq#61,d_current_day#62,... 4 more fields] parquet\n         :        :     :  :                    :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#16,ss_item_sk#17,ss_customer_sk#18,ss_cdemo_sk#19,ss_hdemo_sk#20,ss_addr_sk#21,ss_store_sk#22,ss_promo_sk#23,ss_ticket_number#24L,ss_quantity#25,ss_wholesale_cost#26,ss_list_price#27,ss_sales_price#28,ss_ext_discount_amt#29,ss_ext_sales_price#30,ss_ext_wholesale_cost#31,ss_ext_list_price#32,ss_ext_tax#33,ss_coupon_amt#34,ss_net_paid#35,ss_net_paid_inc_tax#36,ss_net_profit#37,ss_sold_date_sk#38] parquet\n         :        :     :  :                    :     +- Project [d_date_sk#39, d_date#41]\n         :        :     :  :                    :        +- Filter (d_year#45 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#39))\n         :        :     :  :                    :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#39,d_date_id#40,d_date#41,d_month_seq#42,d_week_seq#43,d_quarter_seq#44,d_year#45,d_dow#46,d_moy#47,d_dom#48,d_qoy#49,d_fy_year#50,d_fy_quarter_seq#51,d_fy_week_seq#52,d_day_name#53,d_quarter_name#54,d_holiday#55,d_weekend#56,d_following_holiday#57,d_first_dom#58,d_last_dom#59,d_same_day_ly#60,d_same_day_lq#61,d_current_day#62,... 4 more fields] parquet\n         :        :     :  :                    +- Project [i_item_sk#67, i_item_desc#71]\n         :        :     :  :                       +- Filter isnotnull(i_item_sk#67)\n         :        :     :  :                          +- Relation spark_catalog.tpcds_100.item[i_item_sk#67,i_item_id#68,i_rec_start_date#69,i_rec_end_date#70,i_item_desc#71,i_current_price#72,i_wholesale_cost#73,i_brand_id#74,i_brand#75,i_class_id#76,i_class#77,i_category_id#78,i_category#79,i_manufact_id#80,i_manufact#81,i_size#82,i_formulation#83,i_color#84,i_units#85,i_container#86,i_manager_id#87,i_product_name#88] parquet\n         :        :     :  +- Project [c_customer_sk#481]\n         :        :     :     +- Filter (isnotnull(ssales#403) AND (cast(ssales#403 as decimal(38,8)) > (0.950000 * scalar-subquery#404 [])))\n         :        :     :        :  +- Aggregate [max(csales#401) AS tpcds_cmax#402]\n         :        :     :        :     +- Aggregate [c_customer_sk#89], [sum((cast(ss_quantity#416 as decimal(10,0)) * ss_sales_price#419)) AS csales#401]\n         :        :     :        :        +- Project [ss_quantity#416, ss_sales_price#419, c_customer_sk#89]\n         :        :     :        :           +- Join Inner, (ss_customer_sk#409 = c_customer_sk#89)\n         :        :     :        :              :- Project [ss_customer_sk#409, ss_quantity#416, ss_sales_price#419]\n         :        :     :        :              :  +- Join Inner, (ss_sold_date_sk#429 = d_date_sk#430)\n         :        :     :        :              :     :- Project [ss_customer_sk#409, ss_quantity#416, ss_sales_price#419, ss_sold_date_sk#429]\n         :        :     :        :              :     :  +- Filter ((isnotnull(ss_customer_sk#409) AND isnotnull(ss_sold_date_sk#429)) AND dynamicpruning#610 [ss_sold_date_sk#429])\n         :        :     :        :              :     :     :  +- Project [d_date_sk#430]\n         :        :     :        :              :     :     :     +- Filter (d_year#436 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#430))\n         :        :     :        :              :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#430,d_date_id#431,d_date#432,d_month_seq#433,d_week_seq#434,d_quarter_seq#435,d_year#436,d_dow#437,d_moy#438,d_dom#439,d_qoy#440,d_fy_year#441,d_fy_quarter_seq#442,d_fy_week_seq#443,d_day_name#444,d_quarter_name#445,d_holiday#446,d_weekend#447,d_following_holiday#448,d_first_dom#449,d_last_dom#450,d_same_day_ly#451,d_same_day_lq#452,d_current_day#453,... 4 more fields] parquet\n         :        :     :        :              :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#407,ss_item_sk#408,ss_customer_sk#409,ss_cdemo_sk#410,ss_hdemo_sk#411,ss_addr_sk#412,ss_store_sk#413,ss_promo_sk#414,ss_ticket_number#415L,ss_quantity#416,ss_wholesale_cost#417,ss_list_price#418,ss_sales_price#419,ss_ext_discount_amt#420,ss_ext_sales_price#421,ss_ext_wholesale_cost#422,ss_ext_list_price#423,ss_ext_tax#424,ss_coupon_amt#425,ss_net_paid#426,ss_net_paid_inc_tax#427,ss_net_profit#428,ss_sold_date_sk#429] parquet\n         :        :     :        :              :     +- Project [d_date_sk#430]\n         :        :     :        :              :        +- Filter (d_year#436 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#430))\n         :        :     :        :              :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#430,d_date_id#431,d_date#432,d_month_seq#433,d_week_seq#434,d_quarter_seq#435,d_year#436,d_dow#437,d_moy#438,d_dom#439,d_qoy#440,d_fy_year#441,d_fy_quarter_seq#442,d_fy_week_seq#443,d_day_name#444,d_quarter_name#445,d_holiday#446,d_weekend#447,d_following_holiday#448,d_first_dom#449,d_last_dom#450,d_same_day_ly#451,d_same_day_lq#452,d_current_day#453,... 4 more fields] parquet\n         :        :     :        :              +- Project [c_customer_sk#89]\n         :        :     :        :                 +- Filter isnotnull(c_customer_sk#89)\n         :        :     :        :                    +- Relation spark_catalog.tpcds_100.customer[c_customer_sk#89,c_customer_id#90,c_current_cdemo_sk#91,c_current_hdemo_sk#92,c_current_addr_sk#93,c_first_shipto_date_sk#94,c_first_sales_date_sk#95,c_salutation#96,c_first_name#97,c_last_name#98,c_preferred_cust_flag#99,c_birth_day#100,c_birth_month#101,c_birth_year#102,c_birth_country#103,c_login#104,c_email_address#105,c_last_review_date#106] parquet\n         :        :     :        +- Aggregate [c_customer_sk#481], [c_customer_sk#481, sum((cast(ss_quantity#467 as decimal(10,0)) * ss_sales_price#470)) AS ssales#403]\n         :        :     :           +- Project [ss_quantity#467, ss_sales_price#470, c_customer_sk#481]\n         :        :     :              +- Join Inner, (ss_customer_sk#460 = c_customer_sk#481)\n         :        :     :                 :- Project [ss_customer_sk#460, ss_quantity#467, ss_sales_price#470]\n         :        :     :                 :  +- Filter isnotnull(ss_customer_sk#460)\n         :        :     :                 :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#458,ss_item_sk#459,ss_customer_sk#460,ss_cdemo_sk#461,ss_hdemo_sk#462,ss_addr_sk#463,ss_store_sk#464,ss_promo_sk#465,ss_ticket_number#466L,ss_quantity#467,ss_wholesale_cost#468,ss_list_price#469,ss_sales_price#470,ss_ext_discount_amt#471,ss_ext_sales_price#472,ss_ext_wholesale_cost#473,ss_ext_list_price#474,ss_ext_tax#475,ss_coupon_amt#476,ss_net_paid#477,ss_net_paid_inc_tax#478,ss_net_profit#479,ss_sold_date_sk#480] parquet\n         :        :     :                 +- Project [c_customer_sk#481]\n         :        :     :                    +- Filter isnotnull(c_customer_sk#481)\n         :        :     :                       +- Relation spark_catalog.tpcds_100.customer[c_customer_sk#481,c_customer_id#482,c_current_cdemo_sk#483,c_current_hdemo_sk#484,c_current_addr_sk#485,c_first_shipto_date_sk#486,c_first_sales_date_sk#487,c_salutation#488,c_first_name#489,c_last_name#490,c_preferred_cust_flag#491,c_birth_day#492,c_birth_month#493,c_birth_year#494,c_birth_country#495,c_login#496,c_email_address#497,c_last_review_date#498] parquet\n         :        :     +- Project [d_date_sk#517]\n         :        :        +- Filter (((isnotnull(d_year#523) AND isnotnull(d_moy#525)) AND ((d_year#523 = 1999) AND (d_moy#525 = 1))) AND isnotnull(d_date_sk#517))\n         :        :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#517,d_date_id#518,d_date#519,d_month_seq#520,d_week_seq#521,d_quarter_seq#522,d_year#523,d_dow#524,d_moy#525,d_dom#526,d_qoy#527,d_fy_year#528,d_fy_quarter_seq#529,d_fy_week_seq#530,d_day_name#531,d_quarter_name#532,d_holiday#533,d_weekend#534,d_following_holiday#535,d_first_dom#536,d_last_dom#537,d_same_day_ly#538,d_same_day_lq#539,d_current_day#540,... 4 more fields] parquet\n         :        +- Join LeftSemi, (c_customer_sk#499 = c_customer_sk#481)\n         :           :- Project [c_customer_sk#499, c_first_name#507, c_last_name#508]\n         :           :  +- Filter isnotnull(c_customer_sk#499)\n         :           :     +- Relation spark_catalog.tpcds_100.customer[c_customer_sk#499,c_customer_id#500,c_current_cdemo_sk#501,c_current_hdemo_sk#502,c_current_addr_sk#503,c_first_shipto_date_sk#504,c_first_sales_date_sk#505,c_salutation#506,c_first_name#507,c_last_name#508,c_preferred_cust_flag#509,c_birth_day#510,c_birth_month#511,c_birth_year#512,c_birth_country#513,c_login#514,c_email_address#515,c_last_review_date#516] parquet\n         :           +- Project [c_customer_sk#481]\n         :              +- Filter (isnotnull(ssales#403) AND (cast(ssales#403 as decimal(38,8)) > (0.950000 * scalar-subquery#404 [])))\n         :                 :  +- Aggregate [max(csales#401) AS tpcds_cmax#402]\n         :                 :     +- Aggregate [c_customer_sk#89], [sum((cast(ss_quantity#416 as decimal(10,0)) * ss_sales_price#419)) AS csales#401]\n         :                 :        +- Project [ss_quantity#416, ss_sales_price#419, c_customer_sk#89]\n         :                 :           +- Join Inner, (ss_customer_sk#409 = c_customer_sk#89)\n         :                 :              :- Project [ss_customer_sk#409, ss_quantity#416, ss_sales_price#419]\n         :                 :              :  +- Join Inner, (ss_sold_date_sk#429 = d_date_sk#430)\n         :                 :              :     :- Project [ss_customer_sk#409, ss_quantity#416, ss_sales_price#419, ss_sold_date_sk#429]\n         :                 :              :     :  +- Filter ((isnotnull(ss_customer_sk#409) AND isnotnull(ss_sold_date_sk#429)) AND dynamicpruning#610 [ss_sold_date_sk#429])\n         :                 :              :     :     :  +- Project [d_date_sk#430]\n         :                 :              :     :     :     +- Filter (d_year#436 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#430))\n         :                 :              :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#430,d_date_id#431,d_date#432,d_month_seq#433,d_week_seq#434,d_quarter_seq#435,d_year#436,d_dow#437,d_moy#438,d_dom#439,d_qoy#440,d_fy_year#441,d_fy_quarter_seq#442,d_fy_week_seq#443,d_day_name#444,d_quarter_name#445,d_holiday#446,d_weekend#447,d_following_holiday#448,d_first_dom#449,d_last_dom#450,d_same_day_ly#451,d_same_day_lq#452,d_current_day#453,... 4 more fields] parquet\n         :                 :              :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#407,ss_item_sk#408,ss_customer_sk#409,ss_cdemo_sk#410,ss_hdemo_sk#411,ss_addr_sk#412,ss_store_sk#413,ss_promo_sk#414,ss_ticket_number#415L,ss_quantity#416,ss_wholesale_cost#417,ss_list_price#418,ss_sales_price#419,ss_ext_discount_amt#420,ss_ext_sales_price#421,ss_ext_wholesale_cost#422,ss_ext_list_price#423,ss_ext_tax#424,ss_coupon_amt#425,ss_net_paid#426,ss_net_paid_inc_tax#427,ss_net_profit#428,ss_sold_date_sk#429] parquet\n         :                 :              :     +- Project [d_date_sk#430]\n         :                 :              :        +- Filter (d_year#436 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#430))\n         :                 :              :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#430,d_date_id#431,d_date#432,d_month_seq#433,d_week_seq#434,d_quarter_seq#435,d_year#436,d_dow#437,d_moy#438,d_dom#439,d_qoy#440,d_fy_year#441,d_fy_quarter_seq#442,d_fy_week_seq#443,d_day_name#444,d_quarter_name#445,d_holiday#446,d_weekend#447,d_following_holiday#448,d_first_dom#449,d_last_dom#450,d_same_day_ly#451,d_same_day_lq#452,d_current_day#453,... 4 more fields] parquet\n         :                 :              +- Project [c_customer_sk#89]\n         :                 :                 +- Filter isnotnull(c_customer_sk#89)\n         :                 :                    +- Relation spark_catalog.tpcds_100.customer[c_customer_sk#89,c_customer_id#90,c_current_cdemo_sk#91,c_current_hdemo_sk#92,c_current_addr_sk#93,c_first_shipto_date_sk#94,c_first_sales_date_sk#95,c_salutation#96,c_first_name#97,c_last_name#98,c_preferred_cust_flag#99,c_birth_day#100,c_birth_month#101,c_birth_year#102,c_birth_country#103,c_login#104,c_email_address#105,c_last_review_date#106] parquet\n         :                 +- Aggregate [c_customer_sk#481], [c_customer_sk#481, sum((cast(ss_quantity#467 as decimal(10,0)) * ss_sales_price#470)) AS ssales#403]\n         :                    +- Project [ss_quantity#467, ss_sales_price#470, c_customer_sk#481]\n         :                       +- Join Inner, (ss_customer_sk#460 = c_customer_sk#481)\n         :                          :- Project [ss_customer_sk#460, ss_quantity#467, ss_sales_price#470]\n         :                          :  +- Filter isnotnull(ss_customer_sk#460)\n         :                          :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#458,ss_item_sk#459,ss_customer_sk#460,ss_cdemo_sk#461,ss_hdemo_sk#462,ss_addr_sk#463,ss_store_sk#464,ss_promo_sk#465,ss_ticket_number#466L,ss_quantity#467,ss_wholesale_cost#468,ss_list_price#469,ss_sales_price#470,ss_ext_discount_amt#471,ss_ext_sales_price#472,ss_ext_wholesale_cost#473,ss_ext_list_price#474,ss_ext_tax#475,ss_coupon_amt#476,ss_net_paid#477,ss_net_paid_inc_tax#478,ss_net_profit#479,ss_sold_date_sk#480] parquet\n         :                          +- Project [c_customer_sk#481]\n         :                             +- Filter isnotnull(c_customer_sk#481)\n         :                                +- Relation spark_catalog.tpcds_100.customer[c_customer_sk#481,c_customer_id#482,c_current_cdemo_sk#483,c_current_hdemo_sk#484,c_current_addr_sk#485,c_first_shipto_date_sk#486,c_first_sales_date_sk#487,c_salutation#488,c_first_name#489,c_last_name#490,c_preferred_cust_flag#491,c_birth_day#492,c_birth_month#493,c_birth_year#494,c_birth_country#495,c_login#496,c_email_address#497,c_last_review_date#498] parquet\n         +- Aggregate [c_last_name#554, c_first_name#553], [c_last_name#554, c_first_name#553, sum((cast(ws_quantity#158 as decimal(10,0)) * ws_list_price#160)) AS sales#394]\n            +- Project [ws_quantity#158, ws_list_price#160, c_first_name#553, c_last_name#554]\n               +- Join Inner, (ws_bill_customer_sk#144 = c_customer_sk#545)\n                  :- Project [ws_bill_customer_sk#144, ws_quantity#158, ws_list_price#160]\n                  :  +- Join Inner, (ws_sold_date_sk#174 = d_date_sk#563)\n                  :     :- Join LeftSemi, (ws_bill_customer_sk#144 = c_customer_sk#481)\n                  :     :  :- Project [ws_bill_customer_sk#144, ws_quantity#158, ws_list_price#160, ws_sold_date_sk#174]\n                  :     :  :  +- Join LeftSemi, (ws_item_sk#143 = item_sk#398)\n                  :     :  :     :- Project [ws_item_sk#143, ws_bill_customer_sk#144, ws_quantity#158, ws_list_price#160, ws_sold_date_sk#174]\n                  :     :  :     :  +- Filter ((isnotnull(ws_bill_customer_sk#144) AND isnotnull(ws_sold_date_sk#174)) AND dynamicpruning#616 [ws_sold_date_sk#174])\n                  :     :  :     :     :  +- Project [d_date_sk#563]\n                  :     :  :     :     :     +- Filter (((isnotnull(d_year#569) AND isnotnull(d_moy#571)) AND ((d_year#569 = 1999) AND (d_moy#571 = 1))) AND isnotnull(d_date_sk#563))\n                  :     :  :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#563,d_date_id#564,d_date#565,d_month_seq#566,d_week_seq#567,d_quarter_seq#568,d_year#569,d_dow#570,d_moy#571,d_dom#572,d_qoy#573,d_fy_year#574,d_fy_quarter_seq#575,d_fy_week_seq#576,d_day_name#577,d_quarter_name#578,d_holiday#579,d_weekend#580,d_following_holiday#581,d_first_dom#582,d_last_dom#583,d_same_day_ly#584,d_same_day_lq#585,d_current_day#586,... 4 more fields] parquet\n                  :     :  :     :     +- Relation spark_catalog.tpcds_100.web_sales[ws_sold_time_sk#141,ws_ship_date_sk#142,ws_item_sk#143,ws_bill_customer_sk#144,ws_bill_cdemo_sk#145,ws_bill_hdemo_sk#146,ws_bill_addr_sk#147,ws_ship_customer_sk#148,ws_ship_cdemo_sk#149,ws_ship_hdemo_sk#150,ws_ship_addr_sk#151,ws_web_page_sk#152,ws_web_site_sk#153,ws_ship_mode_sk#154,ws_warehouse_sk#155,ws_promo_sk#156,ws_order_number#157L,ws_quantity#158,ws_wholesale_cost#159,ws_list_price#160,ws_sales_price#161,ws_ext_discount_amt#162,ws_ext_sales_price#163,ws_ext_wholesale_cost#164,... 10 more fields] parquet\n                  :     :  :     +- Project [item_sk#398]\n                  :     :  :        +- Filter (cnt#400L > 4)\n                  :     :  :           +- Aggregate [_groupingexpression#608, i_item_sk#67, d_date#41], [i_item_sk#67 AS item_sk#398, count(1) AS cnt#400L]\n                  :     :  :              +- Project [d_date#41, i_item_sk#67, substr(i_item_desc#71, 1, 30) AS _groupingexpression#608]\n                  :     :  :                 +- Join Inner, (ss_item_sk#17 = i_item_sk#67)\n                  :     :  :                    :- Project [ss_item_sk#17, d_date#41]\n                  :     :  :                    :  +- Join Inner, (ss_sold_date_sk#38 = d_date_sk#39)\n                  :     :  :                    :     :- Project [ss_item_sk#17, ss_sold_date_sk#38]\n                  :     :  :                    :     :  +- Filter ((isnotnull(ss_sold_date_sk#38) AND isnotnull(ss_item_sk#17)) AND dynamicpruning#611 [ss_sold_date_sk#38])\n                  :     :  :                    :     :     :  +- Project [d_date_sk#39, d_date#41]\n                  :     :  :                    :     :     :     +- Filter (d_year#45 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#39))\n                  :     :  :                    :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#39,d_date_id#40,d_date#41,d_month_seq#42,d_week_seq#43,d_quarter_seq#44,d_year#45,d_dow#46,d_moy#47,d_dom#48,d_qoy#49,d_fy_year#50,d_fy_quarter_seq#51,d_fy_week_seq#52,d_day_name#53,d_quarter_name#54,d_holiday#55,d_weekend#56,d_following_holiday#57,d_first_dom#58,d_last_dom#59,d_same_day_ly#60,d_same_day_lq#61,d_current_day#62,... 4 more fields] parquet\n                  :     :  :                    :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#16,ss_item_sk#17,ss_customer_sk#18,ss_cdemo_sk#19,ss_hdemo_sk#20,ss_addr_sk#21,ss_store_sk#22,ss_promo_sk#23,ss_ticket_number#24L,ss_quantity#25,ss_wholesale_cost#26,ss_list_price#27,ss_sales_price#28,ss_ext_discount_amt#29,ss_ext_sales_price#30,ss_ext_wholesale_cost#31,ss_ext_list_price#32,ss_ext_tax#33,ss_coupon_amt#34,ss_net_paid#35,ss_net_paid_inc_tax#36,ss_net_profit#37,ss_sold_date_sk#38] parquet\n                  :     :  :                    :     +- Project [d_date_sk#39, d_date#41]\n                  :     :  :                    :        +- Filter (d_year#45 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#39))\n                  :     :  :                    :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#39,d_date_id#40,d_date#41,d_month_seq#42,d_week_seq#43,d_quarter_seq#44,d_year#45,d_dow#46,d_moy#47,d_dom#48,d_qoy#49,d_fy_year#50,d_fy_quarter_seq#51,d_fy_week_seq#52,d_day_name#53,d_quarter_name#54,d_holiday#55,d_weekend#56,d_following_holiday#57,d_first_dom#58,d_last_dom#59,d_same_day_ly#60,d_same_day_lq#61,d_current_day#62,... 4 more fields] parquet\n                  :     :  :                    +- Project [i_item_sk#67, i_item_desc#71]\n                  :     :  :                       +- Filter isnotnull(i_item_sk#67)\n                  :     :  :                          +- Relation spark_catalog.tpcds_100.item[i_item_sk#67,i_item_id#68,i_rec_start_date#69,i_rec_end_date#70,i_item_desc#71,i_current_price#72,i_wholesale_cost#73,i_brand_id#74,i_brand#75,i_class_id#76,i_class#77,i_category_id#78,i_category#79,i_manufact_id#80,i_manufact#81,i_size#82,i_formulation#83,i_color#84,i_units#85,i_container#86,i_manager_id#87,i_product_name#88] parquet\n                  :     :  +- Project [c_customer_sk#481]\n                  :     :     +- Filter (isnotnull(ssales#403) AND (cast(ssales#403 as decimal(38,8)) > (0.950000 * scalar-subquery#404 [])))\n                  :     :        :  +- Aggregate [max(csales#401) AS tpcds_cmax#402]\n                  :     :        :     +- Aggregate [c_customer_sk#89], [sum((cast(ss_quantity#416 as decimal(10,0)) * ss_sales_price#419)) AS csales#401]\n                  :     :        :        +- Project [ss_quantity#416, ss_sales_price#419, c_customer_sk#89]\n                  :     :        :           +- Join Inner, (ss_customer_sk#409 = c_customer_sk#89)\n                  :     :        :              :- Project [ss_customer_sk#409, ss_quantity#416, ss_sales_price#419]\n                  :     :        :              :  +- Join Inner, (ss_sold_date_sk#429 = d_date_sk#430)\n                  :     :        :              :     :- Project [ss_customer_sk#409, ss_quantity#416, ss_sales_price#419, ss_sold_date_sk#429]\n                  :     :        :              :     :  +- Filter ((isnotnull(ss_customer_sk#409) AND isnotnull(ss_sold_date_sk#429)) AND dynamicpruning#610 [ss_sold_date_sk#429])\n                  :     :        :              :     :     :  +- Project [d_date_sk#430]\n                  :     :        :              :     :     :     +- Filter (d_year#436 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#430))\n                  :     :        :              :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#430,d_date_id#431,d_date#432,d_month_seq#433,d_week_seq#434,d_quarter_seq#435,d_year#436,d_dow#437,d_moy#438,d_dom#439,d_qoy#440,d_fy_year#441,d_fy_quarter_seq#442,d_fy_week_seq#443,d_day_name#444,d_quarter_name#445,d_holiday#446,d_weekend#447,d_following_holiday#448,d_first_dom#449,d_last_dom#450,d_same_day_ly#451,d_same_day_lq#452,d_current_day#453,... 4 more fields] parquet\n                  :     :        :              :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#407,ss_item_sk#408,ss_customer_sk#409,ss_cdemo_sk#410,ss_hdemo_sk#411,ss_addr_sk#412,ss_store_sk#413,ss_promo_sk#414,ss_ticket_number#415L,ss_quantity#416,ss_wholesale_cost#417,ss_list_price#418,ss_sales_price#419,ss_ext_discount_amt#420,ss_ext_sales_price#421,ss_ext_wholesale_cost#422,ss_ext_list_price#423,ss_ext_tax#424,ss_coupon_amt#425,ss_net_paid#426,ss_net_paid_inc_tax#427,ss_net_profit#428,ss_sold_date_sk#429] parquet\n                  :     :        :              :     +- Project [d_date_sk#430]\n                  :     :        :              :        +- Filter (d_year#436 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#430))\n                  :     :        :              :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#430,d_date_id#431,d_date#432,d_month_seq#433,d_week_seq#434,d_quarter_seq#435,d_year#436,d_dow#437,d_moy#438,d_dom#439,d_qoy#440,d_fy_year#441,d_fy_quarter_seq#442,d_fy_week_seq#443,d_day_name#444,d_quarter_name#445,d_holiday#446,d_weekend#447,d_following_holiday#448,d_first_dom#449,d_last_dom#450,d_same_day_ly#451,d_same_day_lq#452,d_current_day#453,... 4 more fields] parquet\n                  :     :        :              +- Project [c_customer_sk#89]\n                  :     :        :                 +- Filter isnotnull(c_customer_sk#89)\n                  :     :        :                    +- Relation spark_catalog.tpcds_100.customer[c_customer_sk#89,c_customer_id#90,c_current_cdemo_sk#91,c_current_hdemo_sk#92,c_current_addr_sk#93,c_first_shipto_date_sk#94,c_first_sales_date_sk#95,c_salutation#96,c_first_name#97,c_last_name#98,c_preferred_cust_flag#99,c_birth_day#100,c_birth_month#101,c_birth_year#102,c_birth_country#103,c_login#104,c_email_address#105,c_last_review_date#106] parquet\n                  :     :        +- Aggregate [c_customer_sk#481], [c_customer_sk#481, sum((cast(ss_quantity#467 as decimal(10,0)) * ss_sales_price#470)) AS ssales#403]\n                  :     :           +- Project [ss_quantity#467, ss_sales_price#470, c_customer_sk#481]\n                  :     :              +- Join Inner, (ss_customer_sk#460 = c_customer_sk#481)\n                  :     :                 :- Project [ss_customer_sk#460, ss_quantity#467, ss_sales_price#470]\n                  :     :                 :  +- Filter isnotnull(ss_customer_sk#460)\n                  :     :                 :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#458,ss_item_sk#459,ss_customer_sk#460,ss_cdemo_sk#461,ss_hdemo_sk#462,ss_addr_sk#463,ss_store_sk#464,ss_promo_sk#465,ss_ticket_number#466L,ss_quantity#467,ss_wholesale_cost#468,ss_list_price#469,ss_sales_price#470,ss_ext_discount_amt#471,ss_ext_sales_price#472,ss_ext_wholesale_cost#473,ss_ext_list_price#474,ss_ext_tax#475,ss_coupon_amt#476,ss_net_paid#477,ss_net_paid_inc_tax#478,ss_net_profit#479,ss_sold_date_sk#480] parquet\n                  :     :                 +- Project [c_customer_sk#481]\n                  :     :                    +- Filter isnotnull(c_customer_sk#481)\n                  :     :                       +- Relation spark_catalog.tpcds_100.customer[c_customer_sk#481,c_customer_id#482,c_current_cdemo_sk#483,c_current_hdemo_sk#484,c_current_addr_sk#485,c_first_shipto_date_sk#486,c_first_sales_date_sk#487,c_salutation#488,c_first_name#489,c_last_name#490,c_preferred_cust_flag#491,c_birth_day#492,c_birth_month#493,c_birth_year#494,c_birth_country#495,c_login#496,c_email_address#497,c_last_review_date#498] parquet\n                  :     +- Project [d_date_sk#563]\n                  :        +- Filter (((isnotnull(d_year#569) AND isnotnull(d_moy#571)) AND ((d_year#569 = 1999) AND (d_moy#571 = 1))) AND isnotnull(d_date_sk#563))\n                  :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#563,d_date_id#564,d_date#565,d_month_seq#566,d_week_seq#567,d_quarter_seq#568,d_year#569,d_dow#570,d_moy#571,d_dom#572,d_qoy#573,d_fy_year#574,d_fy_quarter_seq#575,d_fy_week_seq#576,d_day_name#577,d_quarter_name#578,d_holiday#579,d_weekend#580,d_following_holiday#581,d_first_dom#582,d_last_dom#583,d_same_day_ly#584,d_same_day_lq#585,d_current_day#586,... 4 more fields] parquet\n                  +- Join LeftSemi, (c_customer_sk#545 = c_customer_sk#481)\n                     :- Project [c_customer_sk#545, c_first_name#553, c_last_name#554]\n                     :  +- Filter isnotnull(c_customer_sk#545)\n                     :     +- Relation spark_catalog.tpcds_100.customer[c_customer_sk#545,c_customer_id#546,c_current_cdemo_sk#547,c_current_hdemo_sk#548,c_current_addr_sk#549,c_first_shipto_date_sk#550,c_first_sales_date_sk#551,c_salutation#552,c_first_name#553,c_last_name#554,c_preferred_cust_flag#555,c_birth_day#556,c_birth_month#557,c_birth_year#558,c_birth_country#559,c_login#560,c_email_address#561,c_last_review_date#562] parquet\n                     +- Project [c_customer_sk#481]\n                        +- Filter (isnotnull(ssales#403) AND (cast(ssales#403 as decimal(38,8)) > (0.950000 * scalar-subquery#404 [])))\n                           :  +- Aggregate [max(csales#401) AS tpcds_cmax#402]\n                           :     +- Aggregate [c_customer_sk#89], [sum((cast(ss_quantity#416 as decimal(10,0)) * ss_sales_price#419)) AS csales#401]\n                           :        +- Project [ss_quantity#416, ss_sales_price#419, c_customer_sk#89]\n                           :           +- Join Inner, (ss_customer_sk#409 = c_customer_sk#89)\n                           :              :- Project [ss_customer_sk#409, ss_quantity#416, ss_sales_price#419]\n                           :              :  +- Join Inner, (ss_sold_date_sk#429 = d_date_sk#430)\n                           :              :     :- Project [ss_customer_sk#409, ss_quantity#416, ss_sales_price#419, ss_sold_date_sk#429]\n                           :              :     :  +- Filter ((isnotnull(ss_customer_sk#409) AND isnotnull(ss_sold_date_sk#429)) AND dynamicpruning#610 [ss_sold_date_sk#429])\n                           :              :     :     :  +- Project [d_date_sk#430]\n                           :              :     :     :     +- Filter (d_year#436 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#430))\n                           :              :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#430,d_date_id#431,d_date#432,d_month_seq#433,d_week_seq#434,d_quarter_seq#435,d_year#436,d_dow#437,d_moy#438,d_dom#439,d_qoy#440,d_fy_year#441,d_fy_quarter_seq#442,d_fy_week_seq#443,d_day_name#444,d_quarter_name#445,d_holiday#446,d_weekend#447,d_following_holiday#448,d_first_dom#449,d_last_dom#450,d_same_day_ly#451,d_same_day_lq#452,d_current_day#453,... 4 more fields] parquet\n                           :              :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#407,ss_item_sk#408,ss_customer_sk#409,ss_cdemo_sk#410,ss_hdemo_sk#411,ss_addr_sk#412,ss_store_sk#413,ss_promo_sk#414,ss_ticket_number#415L,ss_quantity#416,ss_wholesale_cost#417,ss_list_price#418,ss_sales_price#419,ss_ext_discount_amt#420,ss_ext_sales_price#421,ss_ext_wholesale_cost#422,ss_ext_list_price#423,ss_ext_tax#424,ss_coupon_amt#425,ss_net_paid#426,ss_net_paid_inc_tax#427,ss_net_profit#428,ss_sold_date_sk#429] parquet\n                           :              :     +- Project [d_date_sk#430]\n                           :              :        +- Filter (d_year#436 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#430))\n                           :              :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#430,d_date_id#431,d_date#432,d_month_seq#433,d_week_seq#434,d_quarter_seq#435,d_year#436,d_dow#437,d_moy#438,d_dom#439,d_qoy#440,d_fy_year#441,d_fy_quarter_seq#442,d_fy_week_seq#443,d_day_name#444,d_quarter_name#445,d_holiday#446,d_weekend#447,d_following_holiday#448,d_first_dom#449,d_last_dom#450,d_same_day_ly#451,d_same_day_lq#452,d_current_day#453,... 4 more fields] parquet\n                           :              +- Project [c_customer_sk#89]\n                           :                 +- Filter isnotnull(c_customer_sk#89)\n                           :                    +- Relation spark_catalog.tpcds_100.customer[c_customer_sk#89,c_customer_id#90,c_current_cdemo_sk#91,c_current_hdemo_sk#92,c_current_addr_sk#93,c_first_shipto_date_sk#94,c_first_sales_date_sk#95,c_salutation#96,c_first_name#97,c_last_name#98,c_preferred_cust_flag#99,c_birth_day#100,c_birth_month#101,c_birth_year#102,c_birth_country#103,c_login#104,c_email_address#105,c_last_review_date#106] parquet\n                           +- Aggregate [c_customer_sk#481], [c_customer_sk#481, sum((cast(ss_quantity#467 as decimal(10,0)) * ss_sales_price#470)) AS ssales#403]\n                              +- Project [ss_quantity#467, ss_sales_price#470, c_customer_sk#481]\n                                 +- Join Inner, (ss_customer_sk#460 = c_customer_sk#481)\n                                    :- Project [ss_customer_sk#460, ss_quantity#467, ss_sales_price#470]\n                                    :  +- Filter isnotnull(ss_customer_sk#460)\n                                    :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#458,ss_item_sk#459,ss_customer_sk#460,ss_cdemo_sk#461,ss_hdemo_sk#462,ss_addr_sk#463,ss_store_sk#464,ss_promo_sk#465,ss_ticket_number#466L,ss_quantity#467,ss_wholesale_cost#468,ss_list_price#469,ss_sales_price#470,ss_ext_discount_amt#471,ss_ext_sales_price#472,ss_ext_wholesale_cost#473,ss_ext_list_price#474,ss_ext_tax#475,ss_coupon_amt#476,ss_net_paid#477,ss_net_paid_inc_tax#478,ss_net_profit#479,ss_sold_date_sk#480] parquet\n                                    +- Project [c_customer_sk#481]\n                                       +- Filter isnotnull(c_customer_sk#481)\n                                          +- Relation spark_catalog.tpcds_100.customer[c_customer_sk#481,c_customer_id#482,c_current_cdemo_sk#483,c_current_hdemo_sk#484,c_current_addr_sk#485,c_first_shipto_date_sk#486,c_first_sales_date_sk#487,c_salutation#488,c_first_name#489,c_last_name#490,c_preferred_cust_flag#491,c_birth_day#492,c_birth_month#493,c_birth_year#494,c_birth_country#495,c_login#496,c_email_address#497,c_last_review_date#498] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "4" : {
            "sign" : -614861235,
            "className" : "org.apache.spark.sql.execution.aggregate.HashAggregateExec",
            "sizeInBytes" : 288,
            "rowCount" : 4,
            "isRuntime" : true,
            "predicate" : " (unknown) HashAggregate Input [4]: [c_last_name#554, c_first_name#553, sum#629, isEmpty#630] Keys [2]: [c_last_name#554, c_first_name#553] Functions [1]: [sum((cast(ws_quantity#158 as decimal(10,0)) * ws_list_price#160))] Aggregate Attributes [1]: [sum((cast(ws_quantity#158 as decimal(10,0)) * ws_list_price#160))#604] Results [3]: [c_last_name#554, c_first_name#553, sum((cast(ws_quantity#158 as decimal(10,0)) * ws_list_price#160))#604 AS sales#394] "
          },
          "5" : {
            "sign" : 1636729541,
            "className" : "org.apache.spark.sql.execution.adaptive.ShuffleQueryStageExec",
            "sizeInBytes" : 1648640717,
            "rowCount" : 27026897,
            "isRuntime" : false,
            "predicate" : " (unknown) ShuffleQueryStage Output [4]: [c_last_name#554, c_first_name#553, sum#629, isEmpty#630] Arguments: 34 "
          },
          "1" : {
            "sign" : 2076041730,
            "className" : "org.apache.spark.sql.execution.UnionExec",
            "sizeInBytes" : 3297281434,
            "rowCount" : 54053794,
            "isRuntime" : false,
            "predicate" : " (unknown) Union "
          },
          "0" : {
            "sign" : 1236262395,
            "className" : "org.apache.spark.sql.execution.TakeOrderedAndProjectExec",
            "sizeInBytes" : 6400,
            "rowCount" : 100,
            "isRuntime" : false,
            "predicate" : " (unknown) TakeOrderedAndProject Input [3]: [c_last_name#508, c_first_name#507, sales#391] Arguments: 100, [c_last_name#508 ASC NULLS FIRST, c_first_name#507 ASC NULLS FIRST, sales#391 ASC NULLS FIRST], [c_last_name#508, c_first_name#507, sales#391] "
          },
          "2" : {
            "sign" : 2115050089,
            "className" : "org.apache.spark.sql.execution.aggregate.HashAggregateExec",
            "sizeInBytes" : 1056,
            "rowCount" : 15,
            "isRuntime" : true,
            "predicate" : " (unknown) HashAggregate Input [4]: [c_last_name#508, c_first_name#507, sum#619, isEmpty#620] Keys [2]: [c_last_name#508, c_first_name#507] Functions [1]: [sum((cast(cs_quantity#124 as decimal(10,0)) * cs_list_price#126))] Aggregate Attributes [1]: [sum((cast(cs_quantity#124 as decimal(10,0)) * cs_list_price#126))#603] Results [3]: [c_last_name#508, c_first_name#507, sum((cast(cs_quantity#124 as decimal(10,0)) * cs_list_price#126))#603 AS sales#391] "
          },
          "3" : {
            "sign" : -818842177,
            "className" : "org.apache.spark.sql.execution.adaptive.ShuffleQueryStageExec",
            "sizeInBytes" : 1648640717,
            "rowCount" : 27026897,
            "isRuntime" : false,
            "predicate" : " (unknown) ShuffleQueryStage Output [4]: [c_last_name#508, c_first_name#507, sum#619, isEmpty#620] Arguments: 33 "
          }
        },
        "links" : [ {
          "fromId" : 3,
          "fromName" : "ShuffleQueryStage",
          "toId" : 2,
          "toName" : "HashAggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "HashAggregate",
          "toId" : 1,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "ShuffleQueryStage",
          "toId" : 4,
          "toName" : "HashAggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "HashAggregate",
          "toId" : 1,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Union",
          "toId" : 0,
          "toName" : "TakeOrderedAndProject",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "TakeOrderedAndProject(limit=100, orderBy=[c_last_name#508 ASC NULLS FIRST,c_first_name#507 ASC NULLS FIRST,sales#391 ASC NULLS FIRST], output=[c_last_name#508,c_first_name#507,sales#391])\n+- Union\n   :- HashAggregate(keys=[c_last_name#508, c_first_name#507], functions=[sum((cast(cs_quantity#124 as decimal(10,0)) * cs_list_price#126))], output=[c_last_name#508, c_first_name#507, sales#391])\n   :  +- ShuffleQueryStage 33\n   :     +- Exchange hashpartitioning(c_last_name#508, c_first_name#507, 200), ENSURE_REQUIREMENTS, [plan_id=6520]\n   :        +- *(41) HashAggregate(keys=[c_last_name#508, c_first_name#507], functions=[partial_sum((cast(cs_quantity#124 as decimal(10,0)) * cs_list_price#126))], output=[c_last_name#508, c_first_name#507, sum#619, isEmpty#620])\n   :           +- *(41) Project [cs_quantity#124, cs_list_price#126, c_first_name#507, c_last_name#508]\n   :              +- *(41) SortMergeJoin [cs_bill_customer_sk#109], [c_customer_sk#499], Inner\n   :                 :- *(35) Project [cs_bill_customer_sk#109, cs_quantity#124, cs_list_price#126]\n   :                 :  +- *(35) BroadcastHashJoin [cs_sold_date_sk#140], [d_date_sk#517], Inner, BuildRight, false\n   :                 :     :- *(35) SortMergeJoin [cs_bill_customer_sk#109], [c_customer_sk#481], LeftSemi\n   :                 :     :  :- *(31) Sort [cs_bill_customer_sk#109 ASC NULLS FIRST], false, 0\n   :                 :     :  :  +- ShuffleQueryStage 31\n   :                 :     :  :     +- Exchange hashpartitioning(cs_bill_customer_sk#109, 200), ENSURE_REQUIREMENTS, [plan_id=5791]\n   :                 :     :  :        +- *(25) Project [cs_bill_customer_sk#109, cs_quantity#124, cs_list_price#126, cs_sold_date_sk#140]\n   :                 :     :  :           +- *(25) SortMergeJoin [cs_item_sk#121], [item_sk#398], LeftSemi\n   :                 :     :  :              :- *(21) Sort [cs_item_sk#121 ASC NULLS FIRST], false, 0\n   :                 :     :  :              :  +- AQEShuffleRead coalesced\n   :                 :     :  :              :     +- ShuffleQueryStage 0\n   :                 :     :  :              :        +- Exchange hashpartitioning(cs_item_sk#121, 200), ENSURE_REQUIREMENTS, [plan_id=972]\n   :                 :     :  :              :           +- *(1) Filter isnotnull(cs_bill_customer_sk#109)\n   :                 :     :  :              :              +- *(1) ColumnarToRow\n   :                 :     :  :              :                 +- FileScan parquet spark_catalog.tpcds_100.catalog_sales[cs_bill_customer_sk#109,cs_item_sk#121,cs_quantity#124,cs_list_price#126,cs_sold_date_sk#140] Batched: true, DataFilters: [isnotnull(cs_bill_customer_sk#109)], Format: Parquet, Location: InMemoryFileIndex(1836 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/catalo..., PartitionFilters: [isnotnull(cs_sold_date_sk#140), dynamicpruningexpression(cs_sold_date_sk#140 IN dynamicpruning#6..., PushedFilters: [IsNotNull(cs_bill_customer_sk)], ReadSchema: struct<cs_bill_customer_sk:int,cs_item_sk:int,cs_quantity:int,cs_list_price:decimal(7,2)>\n   :                 :     :  :              :                       +- SubqueryBroadcast dynamicpruning#614, 0, [d_date_sk#517], [id=#957]\n   :                 :     :  :              :                          +- AdaptiveSparkPlan isFinalPlan=true\n                                                                           +- == Final Plan ==\n                                                                              BroadcastQueryStage 1\n                                                                              +- ReusedExchange [d_date_sk#517], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=1088]\n                                                                           +- == Initial Plan ==\n                                                                              BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=954]\n                                                                              +- Project [d_date_sk#517]\n                                                                                 +- Filter ((((isnotnull(d_year#523) AND isnotnull(d_moy#525)) AND (d_year#523 = 1999)) AND (d_moy#525 = 1)) AND isnotnull(d_date_sk#517))\n                                                                                    +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#517,d_year#523,d_moy#525] Batched: true, DataFilters: [isnotnull(d_year#523), isnotnull(d_moy#525), (d_year#523 = 1999), (d_moy#525 = 1), isnotnull(d_d..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), IsNotNull(d_moy), EqualTo(d_year,1999), EqualTo(d_moy,1), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>\n   :                 :     :  :              +- *(24) Sort [item_sk#398 ASC NULLS FIRST], false, 0\n   :                 :     :  :                 +- *(24) Project [item_sk#398]\n   :                 :     :  :                    +- *(24) Filter (cnt#400L > 4)\n   :                 :     :  :                       +- *(24) HashAggregate(keys=[_groupingexpression#608, i_item_sk#67, d_date#41], functions=[count(1)], output=[item_sk#398, cnt#400L])\n   :                 :     :  :                          +- *(24) HashAggregate(keys=[_groupingexpression#608, i_item_sk#67, d_date#41], functions=[partial_count(1)], output=[_groupingexpression#608, i_item_sk#67, d_date#41, count#622L])\n   :                 :     :  :                             +- *(24) Project [d_date#41, i_item_sk#67, substr(i_item_desc#71, 1, 30) AS _groupingexpression#608]\n   :                 :     :  :                                +- *(24) SortMergeJoin [ss_item_sk#17], [i_item_sk#67], Inner\n   :                 :     :  :                                   :- *(22) Sort [ss_item_sk#17 ASC NULLS FIRST], false, 0\n   :                 :     :  :                                   :  +- AQEShuffleRead coalesced\n   :                 :     :  :                                   :     +- ShuffleQueryStage 28\n   :                 :     :  :                                   :        +- Exchange hashpartitioning(ss_item_sk#17, 200), ENSURE_REQUIREMENTS, [plan_id=2120]\n   :                 :     :  :                                   :           +- *(19) Project [ss_item_sk#17, d_date#41]\n   :                 :     :  :                                   :              +- *(19) BroadcastHashJoin [ss_sold_date_sk#38], [d_date_sk#39], Inner, BuildRight, false\n   :                 :     :  :                                   :                 :- *(19) Filter isnotnull(ss_item_sk#17)\n   :                 :     :  :                                   :                 :  +- *(19) ColumnarToRow\n   :                 :     :  :                                   :                 :     +- FileScan parquet spark_catalog.tpcds_100.store_sales[ss_item_sk#17,ss_sold_date_sk#38] Batched: true, DataFilters: [isnotnull(ss_item_sk#17)], Format: Parquet, Location: InMemoryFileIndex(1823 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/store_..., PartitionFilters: [isnotnull(ss_sold_date_sk#38), dynamicpruningexpression(ss_sold_date_sk#38 IN dynamicpruning#609)], PushedFilters: [IsNotNull(ss_item_sk)], ReadSchema: struct<ss_item_sk:int>\n   :                 :     :  :                                   :                 :           +- SubqueryBroadcast dynamicpruning#609, 0, [d_date_sk#39], [id=#2094]\n   :                 :     :  :                                   :                 :              +- AdaptiveSparkPlan isFinalPlan=true\n                                                                                                      +- == Final Plan ==\n                                                                                                         BroadcastQueryStage 1\n                                                                                                         +- ReusedExchange [d_date_sk#39, d_date#41], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=991]\n                                                                                                      +- == Initial Plan ==\n                                                                                                         BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=2091]\n                                                                                                         +- Project [d_date_sk#39, d_date#41]\n                                                                                                            +- Filter (d_year#45 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#39))\n                                                                                                               +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#39,d_date#41,d_year#45] Batched: true, DataFilters: [d_year#45 IN (1999,2000,2001,2002), isnotnull(d_date_sk#39)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [In(d_year, [1999,2000,2001,2002]), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_date:date,d_year:int>\n   :                 :     :  :                                   :                 +- BroadcastQueryStage 1\n   :                 :     :  :                                   :                    +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=991]\n   :                 :     :  :                                   :                       +- *(2) Project [d_date_sk#39, d_date#41]\n   :                 :     :  :                                   :                          +- *(2) Filter (d_year#45 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#39))\n   :                 :     :  :                                   :                             +- *(2) ColumnarToRow\n   :                 :     :  :                                   :                                +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#39,d_date#41,d_year#45] Batched: true, DataFilters: [d_year#45 IN (1999,2000,2001,2002), isnotnull(d_date_sk#39)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [In(d_year, [1999,2000,2001,2002]), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_date:date,d_year:int>\n   :                 :     :  :                                   +- *(23) Sort [i_item_sk#67 ASC NULLS FIRST], false, 0\n   :                 :     :  :                                      +- AQEShuffleRead coalesced\n   :                 :     :  :                                         +- ShuffleQueryStage 2\n   :                 :     :  :                                            +- Exchange hashpartitioning(i_item_sk#67, 200), ENSURE_REQUIREMENTS, [plan_id=1012]\n   :                 :     :  :                                               +- *(3) Filter isnotnull(i_item_sk#67)\n   :                 :     :  :                                                  +- *(3) ColumnarToRow\n   :                 :     :  :                                                     +- FileScan parquet spark_catalog.tpcds_100.item[i_item_sk#67,i_item_desc#71] Batched: true, DataFilters: [isnotnull(i_item_sk#67)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/item], PartitionFilters: [], PushedFilters: [IsNotNull(i_item_sk)], ReadSchema: struct<i_item_sk:int,i_item_desc:string>\n   :                 :     :  +- *(34) Sort [c_customer_sk#481 ASC NULLS FIRST], false, 0\n   :                 :     :     +- *(34) Project [c_customer_sk#481]\n   :                 :     :        +- *(34) Filter (isnotnull(ssales#403) AND (cast(ssales#403 as decimal(38,8)) > (0.950000 * Subquery subquery#404, [id=#492])))\n   :                 :     :           :  +- Subquery subquery#404, [id=#492]\n   :                 :     :           :     +- AdaptiveSparkPlan isFinalPlan=true\n                                                +- == Final Plan ==\n                                                   *(7) HashAggregate(keys=[], functions=[max(csales#401)], output=[tpcds_cmax#402])\n                                                   +- ShuffleQueryStage 4\n                                                      +- Exchange SinglePartition, ENSURE_REQUIREMENTS, [plan_id=6917]\n                                                         +- *(6) HashAggregate(keys=[], functions=[partial_max(csales#401)], output=[max#632])\n                                                            +- *(6) HashAggregate(keys=[c_customer_sk#89], functions=[sum((cast(ss_quantity#416 as decimal(10,0)) * ss_sales_price#419))], output=[csales#401])\n                                                               +- *(6) HashAggregate(keys=[c_customer_sk#89], functions=[partial_sum((cast(ss_quantity#416 as decimal(10,0)) * ss_sales_price#419))], output=[c_customer_sk#89, sum#635, isEmpty#636])\n                                                                  +- *(6) Project [ss_quantity#416, ss_sales_price#419, c_customer_sk#89]\n                                                                     +- *(6) SortMergeJoin [ss_customer_sk#409], [c_customer_sk#89], Inner\n                                                                        :- *(4) Sort [ss_customer_sk#409 ASC NULLS FIRST], false, 0\n                                                                        :  +- AQEShuffleRead coalesced\n                                                                        :     +- ShuffleQueryStage 3\n                                                                        :        +- Exchange hashpartitioning(ss_customer_sk#409, 200), ENSURE_REQUIREMENTS, [plan_id=6797]\n                                                                        :           +- *(3) Project [ss_customer_sk#409, ss_quantity#416, ss_sales_price#419]\n                                                                        :              +- *(3) BroadcastHashJoin [ss_sold_date_sk#429], [d_date_sk#430], Inner, BuildRight, false\n                                                                        :                 :- *(3) Filter isnotnull(ss_customer_sk#409)\n                                                                        :                 :  +- *(3) ColumnarToRow\n                                                                        :                 :     +- FileScan parquet spark_catalog.tpcds_100.store_sales[ss_customer_sk#409,ss_quantity#416,ss_sales_price#419,ss_sold_date_sk#429] Batched: true, DataFilters: [isnotnull(ss_customer_sk#409)], Format: Parquet, Location: InMemoryFileIndex(1823 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/store_..., PartitionFilters: [isnotnull(ss_sold_date_sk#429), dynamicpruningexpression(ss_sold_date_sk#429 IN dynamicpruning#6..., PushedFilters: [IsNotNull(ss_customer_sk)], ReadSchema: struct<ss_customer_sk:int,ss_quantity:int,ss_sales_price:decimal(7,2)>\n                                                                        :                 :           +- SubqueryBroadcast dynamicpruning#610, 0, [d_date_sk#430], [id=#6771]\n                                                                        :                 :              +- AdaptiveSparkPlan isFinalPlan=true\n                                                         +- == Final Plan ==\n                                                            BroadcastQueryStage 1\n                                                            +- ReusedExchange [d_date_sk#430], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=6642]\n                                                         +- == Initial Plan ==\n                                                            BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=6768]\n                                                            +- Project [d_date_sk#430]\n                                                               +- Filter (d_year#436 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#430))\n                                                                  +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#430,d_year#436] Batched: true, DataFilters: [d_year#436 IN (1999,2000,2001,2002), isnotnull(d_date_sk#430)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [In(d_year, [1999,2000,2001,2002]), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>\n                                                                        :                 +- BroadcastQueryStage 0\n                                                                        :                    +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=6642]\n                                                                        :                       +- *(1) Project [d_date_sk#430]\n                                                                        :                          +- *(1) Filter (d_year#436 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#430))\n                                                                        :                             +- *(1) ColumnarToRow\n                                                                        :                                +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#430,d_year#436] Batched: true, DataFilters: [d_year#436 IN (1999,2000,2001,2002), isnotnull(d_date_sk#430)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [In(d_year, [1999,2000,2001,2002]), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>\n                                                                        +- *(5) Sort [c_customer_sk#89 ASC NULLS FIRST], false, 0\n                                                                           +- AQEShuffleRead coalesced\n                                                                              +- ShuffleQueryStage 2\n                                                                                 +- ReusedExchange [c_customer_sk#89], Exchange hashpartitioning(c_customer_sk#481, 200), ENSURE_REQUIREMENTS, [plan_id=1061]\n                                                +- == Initial Plan ==\n                                                   HashAggregate(keys=[], functions=[max(csales#401)], output=[tpcds_cmax#402])\n                                                   +- Exchange SinglePartition, ENSURE_REQUIREMENTS, [plan_id=490]\n                                                      +- HashAggregate(keys=[], functions=[partial_max(csales#401)], output=[max#632])\n                                                         +- HashAggregate(keys=[c_customer_sk#89], functions=[sum((cast(ss_quantity#416 as decimal(10,0)) * ss_sales_price#419))], output=[csales#401])\n                                                            +- HashAggregate(keys=[c_customer_sk#89], functions=[partial_sum((cast(ss_quantity#416 as decimal(10,0)) * ss_sales_price#419))], output=[c_customer_sk#89, sum#635, isEmpty#636])\n                                                               +- Project [ss_quantity#416, ss_sales_price#419, c_customer_sk#89]\n                                                                  +- SortMergeJoin [ss_customer_sk#409], [c_customer_sk#89], Inner\n                                                                     :- Sort [ss_customer_sk#409 ASC NULLS FIRST], false, 0\n                                                                     :  +- Exchange hashpartitioning(ss_customer_sk#409, 200), ENSURE_REQUIREMENTS, [plan_id=480]\n                                                                     :     +- Project [ss_customer_sk#409, ss_quantity#416, ss_sales_price#419]\n                                                                     :        +- BroadcastHashJoin [ss_sold_date_sk#429], [d_date_sk#430], Inner, BuildRight, false\n                                                                     :           :- Filter isnotnull(ss_customer_sk#409)\n                                                                     :           :  +- FileScan parquet spark_catalog.tpcds_100.store_sales[ss_customer_sk#409,ss_quantity#416,ss_sales_price#419,ss_sold_date_sk#429] Batched: true, DataFilters: [isnotnull(ss_customer_sk#409)], Format: Parquet, Location: InMemoryFileIndex(1823 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/store_..., PartitionFilters: [isnotnull(ss_sold_date_sk#429), dynamicpruningexpression(ss_sold_date_sk#429 IN dynamicpruning#6..., PushedFilters: [IsNotNull(ss_customer_sk)], ReadSchema: struct<ss_customer_sk:int,ss_quantity:int,ss_sales_price:decimal(7,2)>\n                                                                     :           :        +- SubqueryAdaptiveBroadcast dynamicpruning#610, 0, true, Project [d_date_sk#430], [d_date_sk#430]\n                                                                     :           :           +- AdaptiveSparkPlan isFinalPlan=false\n                                                                     :           :              +- Project [d_date_sk#430]\n                                                                     :           :                 +- Filter (d_year#436 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#430))\n                                                                     :           :                    +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#430,d_year#436] Batched: true, DataFilters: [d_year#436 IN (1999,2000,2001,2002), isnotnull(d_date_sk#430)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [In(d_year, [1999,2000,2001,2002]), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>\n                                                                     :           +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=475]\n                                                                     :              +- Project [d_date_sk#430]\n                                                                     :                 +- Filter (d_year#436 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#430))\n                                                                     :                    +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#430,d_year#436] Batched: true, DataFilters: [d_year#436 IN (1999,2000,2001,2002), isnotnull(d_date_sk#430)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [In(d_year, [1999,2000,2001,2002]), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>\n                                                                     +- Sort [c_customer_sk#89 ASC NULLS FIRST], false, 0\n                                                                        +- Exchange hashpartitioning(c_customer_sk#89, 200), ENSURE_REQUIREMENTS, [plan_id=481]\n                                                                           +- Filter isnotnull(c_customer_sk#89)\n                                                                              +- FileScan parquet spark_catalog.tpcds_100.customer[c_customer_sk#89] Batched: true, DataFilters: [isnotnull(c_customer_sk#89)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/customer], PartitionFilters: [], PushedFilters: [IsNotNull(c_customer_sk)], ReadSchema: struct<c_customer_sk:int>\n   :                 :     :           +- *(34) HashAggregate(keys=[c_customer_sk#481], functions=[sum((cast(ss_quantity#467 as decimal(10,0)) * ss_sales_price#470))], output=[c_customer_sk#481, ssales#403])\n   :                 :     :              +- *(34) HashAggregate(keys=[c_customer_sk#481], functions=[partial_sum((cast(ss_quantity#467 as decimal(10,0)) * ss_sales_price#470))], output=[c_customer_sk#481, sum#625, isEmpty#626])\n   :                 :     :                 +- *(34) Project [ss_quantity#467, ss_sales_price#470, c_customer_sk#481]\n   :                 :     :                    +- *(34) SortMergeJoin [ss_customer_sk#460], [c_customer_sk#481], Inner\n   :                 :     :                       :- *(32) Sort [ss_customer_sk#460 ASC NULLS FIRST], false, 0\n   :                 :     :                       :  +- ShuffleQueryStage 3\n   :                 :     :                       :     +- Exchange hashpartitioning(ss_customer_sk#460, 200), ENSURE_REQUIREMENTS, [plan_id=1042]\n   :                 :     :                       :        +- *(4) Project [ss_customer_sk#460, ss_quantity#467, ss_sales_price#470]\n   :                 :     :                       :           +- *(4) Filter isnotnull(ss_customer_sk#460)\n   :                 :     :                       :              +- *(4) ColumnarToRow\n   :                 :     :                       :                 +- FileScan parquet spark_catalog.tpcds_100.store_sales[ss_customer_sk#460,ss_quantity#467,ss_sales_price#470,ss_sold_date_sk#480] Batched: true, DataFilters: [isnotnull(ss_customer_sk#460)], Format: Parquet, Location: CatalogFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/store_sales], PartitionFilters: [], PushedFilters: [IsNotNull(ss_customer_sk)], ReadSchema: struct<ss_customer_sk:int,ss_quantity:int,ss_sales_price:decimal(7,2)>\n   :                 :     :                       +- *(33) Sort [c_customer_sk#481 ASC NULLS FIRST], false, 0\n   :                 :     :                          +- ShuffleQueryStage 4\n   :                 :     :                             +- Exchange hashpartitioning(c_customer_sk#481, 200), ENSURE_REQUIREMENTS, [plan_id=1061]\n   :                 :     :                                +- *(5) Filter isnotnull(c_customer_sk#481)\n   :                 :     :                                   +- *(5) ColumnarToRow\n   :                 :     :                                      +- FileScan parquet spark_catalog.tpcds_100.customer[c_customer_sk#481] Batched: true, DataFilters: [isnotnull(c_customer_sk#481)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/customer], PartitionFilters: [], PushedFilters: [IsNotNull(c_customer_sk)], ReadSchema: struct<c_customer_sk:int>\n   :                 :     +- BroadcastQueryStage 5\n   :                 :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=1088]\n   :                 :           +- *(6) Project [d_date_sk#517]\n   :                 :              +- *(6) Filter ((((isnotnull(d_year#523) AND isnotnull(d_moy#525)) AND (d_year#523 = 1999)) AND (d_moy#525 = 1)) AND isnotnull(d_date_sk#517))\n   :                 :                 +- *(6) ColumnarToRow\n   :                 :                    +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#517,d_year#523,d_moy#525] Batched: true, DataFilters: [isnotnull(d_year#523), isnotnull(d_moy#525), (d_year#523 = 1999), (d_moy#525 = 1), isnotnull(d_d..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), IsNotNull(d_moy), EqualTo(d_year,1999), EqualTo(d_moy,1), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>\n   :                 +- *(40) SortMergeJoin [c_customer_sk#499], [c_customer_sk#481], LeftSemi\n   :                    :- *(36) Sort [c_customer_sk#499 ASC NULLS FIRST], false, 0\n   :                    :  +- ShuffleQueryStage 6\n   :                    :     +- Exchange hashpartitioning(c_customer_sk#499, 200), ENSURE_REQUIREMENTS, [plan_id=1107]\n   :                    :        +- *(7) Filter isnotnull(c_customer_sk#499)\n   :                    :           +- *(7) ColumnarToRow\n   :                    :              +- FileScan parquet spark_catalog.tpcds_100.customer[c_customer_sk#499,c_first_name#507,c_last_name#508] Batched: true, DataFilters: [isnotnull(c_customer_sk#499)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/customer], PartitionFilters: [], PushedFilters: [IsNotNull(c_customer_sk)], ReadSchema: struct<c_customer_sk:int,c_first_name:string,c_last_name:string>\n   :                    +- *(39) Sort [c_customer_sk#481 ASC NULLS FIRST], false, 0\n   :                       +- *(39) Project [c_customer_sk#481]\n   :                          +- *(39) Filter (isnotnull(ssales#403) AND (cast(ssales#403 as decimal(38,8)) > (0.950000 * Subquery subquery#404, [id=#492])))\n   :                             :  +- Subquery subquery#404, [id=#492]\n   :                             :     +- AdaptiveSparkPlan isFinalPlan=true\n                                          +- == Final Plan ==\n                                             *(7) HashAggregate(keys=[], functions=[max(csales#401)], output=[tpcds_cmax#402])\n                                             +- ShuffleQueryStage 4\n                                                +- Exchange SinglePartition, ENSURE_REQUIREMENTS, [plan_id=6917]\n                                                   +- *(6) HashAggregate(keys=[], functions=[partial_max(csales#401)], output=[max#632])\n                                                      +- *(6) HashAggregate(keys=[c_customer_sk#89], functions=[sum((cast(ss_quantity#416 as decimal(10,0)) * ss_sales_price#419))], output=[csales#401])\n                                                         +- *(6) HashAggregate(keys=[c_customer_sk#89], functions=[partial_sum((cast(ss_quantity#416 as decimal(10,0)) * ss_sales_price#419))], output=[c_customer_sk#89, sum#635, isEmpty#636])\n                                                            +- *(6) Project [ss_quantity#416, ss_sales_price#419, c_customer_sk#89]\n                                                               +- *(6) SortMergeJoin [ss_customer_sk#409], [c_customer_sk#89], Inner\n                                                                  :- *(4) Sort [ss_customer_sk#409 ASC NULLS FIRST], false, 0\n                                                                  :  +- AQEShuffleRead coalesced\n                                                                  :     +- ShuffleQueryStage 3\n                                                                  :        +- Exchange hashpartitioning(ss_customer_sk#409, 200), ENSURE_REQUIREMENTS, [plan_id=6797]\n                                                                  :           +- *(3) Project [ss_customer_sk#409, ss_quantity#416, ss_sales_price#419]\n                                                                  :              +- *(3) BroadcastHashJoin [ss_sold_date_sk#429], [d_date_sk#430], Inner, BuildRight, false\n                                                                  :                 :- *(3) Filter isnotnull(ss_customer_sk#409)\n                                                                  :                 :  +- *(3) ColumnarToRow\n                                                                  :                 :     +- FileScan parquet spark_catalog.tpcds_100.store_sales[ss_customer_sk#409,ss_quantity#416,ss_sales_price#419,ss_sold_date_sk#429] Batched: true, DataFilters: [isnotnull(ss_customer_sk#409)], Format: Parquet, Location: InMemoryFileIndex(1823 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/store_..., PartitionFilters: [isnotnull(ss_sold_date_sk#429), dynamicpruningexpression(ss_sold_date_sk#429 IN dynamicpruning#6..., PushedFilters: [IsNotNull(ss_customer_sk)], ReadSchema: struct<ss_customer_sk:int,ss_quantity:int,ss_sales_price:decimal(7,2)>\n                                                                  :                 :           +- SubqueryBroadcast dynamicpruning#610, 0, [d_date_sk#430], [id=#6771]\n                                                                  :                 :              +- AdaptiveSparkPlan isFinalPlan=true\n                                                         +- == Final Plan ==\n                                                            BroadcastQueryStage 1\n                                                            +- ReusedExchange [d_date_sk#430], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=6642]\n                                                         +- == Initial Plan ==\n                                                            BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=6768]\n                                                            +- Project [d_date_sk#430]\n                                                               +- Filter (d_year#436 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#430))\n                                                                  +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#430,d_year#436] Batched: true, DataFilters: [d_year#436 IN (1999,2000,2001,2002), isnotnull(d_date_sk#430)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [In(d_year, [1999,2000,2001,2002]), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>\n                                                                  :                 +- BroadcastQueryStage 0\n                                                                  :                    +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=6642]\n                                                                  :                       +- *(1) Project [d_date_sk#430]\n                                                                  :                          +- *(1) Filter (d_year#436 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#430))\n                                                                  :                             +- *(1) ColumnarToRow\n                                                                  :                                +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#430,d_year#436] Batched: true, DataFilters: [d_year#436 IN (1999,2000,2001,2002), isnotnull(d_date_sk#430)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [In(d_year, [1999,2000,2001,2002]), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>\n                                                                  +- *(5) Sort [c_customer_sk#89 ASC NULLS FIRST], false, 0\n                                                                     +- AQEShuffleRead coalesced\n                                                                        +- ShuffleQueryStage 2\n                                                                           +- ReusedExchange [c_customer_sk#89], Exchange hashpartitioning(c_customer_sk#481, 200), ENSURE_REQUIREMENTS, [plan_id=1061]\n                                          +- == Initial Plan ==\n                                             HashAggregate(keys=[], functions=[max(csales#401)], output=[tpcds_cmax#402])\n                                             +- Exchange SinglePartition, ENSURE_REQUIREMENTS, [plan_id=490]\n                                                +- HashAggregate(keys=[], functions=[partial_max(csales#401)], output=[max#632])\n                                                   +- HashAggregate(keys=[c_customer_sk#89], functions=[sum((cast(ss_quantity#416 as decimal(10,0)) * ss_sales_price#419))], output=[csales#401])\n                                                      +- HashAggregate(keys=[c_customer_sk#89], functions=[partial_sum((cast(ss_quantity#416 as decimal(10,0)) * ss_sales_price#419))], output=[c_customer_sk#89, sum#635, isEmpty#636])\n                                                         +- Project [ss_quantity#416, ss_sales_price#419, c_customer_sk#89]\n                                                            +- SortMergeJoin [ss_customer_sk#409], [c_customer_sk#89], Inner\n                                                               :- Sort [ss_customer_sk#409 ASC NULLS FIRST], false, 0\n                                                               :  +- Exchange hashpartitioning(ss_customer_sk#409, 200), ENSURE_REQUIREMENTS, [plan_id=480]\n                                                               :     +- Project [ss_customer_sk#409, ss_quantity#416, ss_sales_price#419]\n                                                               :        +- BroadcastHashJoin [ss_sold_date_sk#429], [d_date_sk#430], Inner, BuildRight, false\n                                                               :           :- Filter isnotnull(ss_customer_sk#409)\n                                                               :           :  +- FileScan parquet spark_catalog.tpcds_100.store_sales[ss_customer_sk#409,ss_quantity#416,ss_sales_price#419,ss_sold_date_sk#429] Batched: true, DataFilters: [isnotnull(ss_customer_sk#409)], Format: Parquet, Location: InMemoryFileIndex(1823 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/store_..., PartitionFilters: [isnotnull(ss_sold_date_sk#429), dynamicpruningexpression(ss_sold_date_sk#429 IN dynamicpruning#6..., PushedFilters: [IsNotNull(ss_customer_sk)], ReadSchema: struct<ss_customer_sk:int,ss_quantity:int,ss_sales_price:decimal(7,2)>\n                                                               :           :        +- SubqueryAdaptiveBroadcast dynamicpruning#610, 0, true, Project [d_date_sk#430], [d_date_sk#430]\n                                                               :           :           +- AdaptiveSparkPlan isFinalPlan=false\n                                                               :           :              +- Project [d_date_sk#430]\n                                                               :           :                 +- Filter (d_year#436 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#430))\n                                                               :           :                    +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#430,d_year#436] Batched: true, DataFilters: [d_year#436 IN (1999,2000,2001,2002), isnotnull(d_date_sk#430)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [In(d_year, [1999,2000,2001,2002]), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>\n                                                               :           +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=475]\n                                                               :              +- Project [d_date_sk#430]\n                                                               :                 +- Filter (d_year#436 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#430))\n                                                               :                    +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#430,d_year#436] Batched: true, DataFilters: [d_year#436 IN (1999,2000,2001,2002), isnotnull(d_date_sk#430)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [In(d_year, [1999,2000,2001,2002]), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>\n                                                               +- Sort [c_customer_sk#89 ASC NULLS FIRST], false, 0\n                                                                  +- Exchange hashpartitioning(c_customer_sk#89, 200), ENSURE_REQUIREMENTS, [plan_id=481]\n                                                                     +- Filter isnotnull(c_customer_sk#89)\n                                                                        +- FileScan parquet spark_catalog.tpcds_100.customer[c_customer_sk#89] Batched: true, DataFilters: [isnotnull(c_customer_sk#89)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/customer], PartitionFilters: [], PushedFilters: [IsNotNull(c_customer_sk)], ReadSchema: struct<c_customer_sk:int>\n   :                             +- *(39) HashAggregate(keys=[c_customer_sk#481], functions=[sum((cast(ss_quantity#467 as decimal(10,0)) * ss_sales_price#470))], output=[c_customer_sk#481, ssales#403])\n   :                                +- *(39) HashAggregate(keys=[c_customer_sk#481], functions=[partial_sum((cast(ss_quantity#467 as decimal(10,0)) * ss_sales_price#470))], output=[c_customer_sk#481, sum#625, isEmpty#626])\n   :                                   +- *(39) Project [ss_quantity#467, ss_sales_price#470, c_customer_sk#481]\n   :                                      +- *(39) SortMergeJoin [ss_customer_sk#460], [c_customer_sk#481], Inner\n   :                                         :- *(37) Sort [ss_customer_sk#460 ASC NULLS FIRST], false, 0\n   :                                         :  +- ShuffleQueryStage 8\n   :                                         :     +- ReusedExchange [ss_customer_sk#460, ss_quantity#467, ss_sales_price#470], Exchange hashpartitioning(ss_customer_sk#460, 200), ENSURE_REQUIREMENTS, [plan_id=1042]\n   :                                         +- *(38) Sort [c_customer_sk#481 ASC NULLS FIRST], false, 0\n   :                                            +- ShuffleQueryStage 10\n   :                                               +- ReusedExchange [c_customer_sk#481], Exchange hashpartitioning(c_customer_sk#481, 200), ENSURE_REQUIREMENTS, [plan_id=1061]\n   +- HashAggregate(keys=[c_last_name#554, c_first_name#553], functions=[sum((cast(ws_quantity#158 as decimal(10,0)) * ws_list_price#160))], output=[c_last_name#554, c_first_name#553, sales#394])\n      +- ShuffleQueryStage 34\n         +- Exchange hashpartitioning(c_last_name#554, c_first_name#553, 200), ENSURE_REQUIREMENTS, [plan_id=7135]\n            +- *(52) HashAggregate(keys=[c_last_name#554, c_first_name#553], functions=[partial_sum((cast(ws_quantity#158 as decimal(10,0)) * ws_list_price#160))], output=[c_last_name#554, c_first_name#553, sum#629, isEmpty#630])\n               +- *(52) Project [ws_quantity#158, ws_list_price#160, c_first_name#553, c_last_name#554]\n                  +- *(52) SortMergeJoin [ws_bill_customer_sk#144], [c_customer_sk#545], Inner\n                     :- *(46) Project [ws_bill_customer_sk#144, ws_quantity#158, ws_list_price#160]\n                     :  +- *(46) BroadcastHashJoin [ws_sold_date_sk#174], [d_date_sk#563], Inner, BuildRight, false\n                     :     :- *(46) SortMergeJoin [ws_bill_customer_sk#144], [c_customer_sk#481], LeftSemi\n                     :     :  :- *(42) Sort [ws_bill_customer_sk#144 ASC NULLS FIRST], false, 0\n                     :     :  :  +- ShuffleQueryStage 32\n                     :     :  :     +- Exchange hashpartitioning(ws_bill_customer_sk#144, 200), ENSURE_REQUIREMENTS, [plan_id=5883]\n                     :     :  :        +- *(30) Project [ws_bill_customer_sk#144, ws_quantity#158, ws_list_price#160, ws_sold_date_sk#174]\n                     :     :  :           +- *(30) SortMergeJoin [ws_item_sk#143], [item_sk#398], LeftSemi\n                     :     :  :              :- *(26) Sort [ws_item_sk#143 ASC NULLS FIRST], false, 0\n                     :     :  :              :  +- AQEShuffleRead coalesced\n                     :     :  :              :     +- ShuffleQueryStage 11\n                     :     :  :              :        +- Exchange hashpartitioning(ws_item_sk#143, 200), ENSURE_REQUIREMENTS, [plan_id=1347]\n                     :     :  :              :           +- *(10) Filter isnotnull(ws_bill_customer_sk#144)\n                     :     :  :              :              +- *(10) ColumnarToRow\n                     :     :  :              :                 +- FileScan parquet spark_catalog.tpcds_100.web_sales[ws_item_sk#143,ws_bill_customer_sk#144,ws_quantity#158,ws_list_price#160,ws_sold_date_sk#174] Batched: true, DataFilters: [isnotnull(ws_bill_customer_sk#144)], Format: Parquet, Location: InMemoryFileIndex(1823 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/web_sa..., PartitionFilters: [isnotnull(ws_sold_date_sk#174), dynamicpruningexpression(ws_sold_date_sk#174 IN dynamicpruning#6..., PushedFilters: [IsNotNull(ws_bill_customer_sk)], ReadSchema: struct<ws_item_sk:int,ws_bill_customer_sk:int,ws_quantity:int,ws_list_price:decimal(7,2)>\n                     :     :  :              :                       +- ReusedSubquery SubqueryBroadcast dynamicpruning#614, 0, [d_date_sk#517], [id=#957]\n                     :     :  :              +- *(29) Sort [item_sk#398 ASC NULLS FIRST], false, 0\n                     :     :  :                 +- *(29) Project [item_sk#398]\n                     :     :  :                    +- *(29) Filter (cnt#400L > 4)\n                     :     :  :                       +- *(29) HashAggregate(keys=[_groupingexpression#608, i_item_sk#67, d_date#41], functions=[count(1)], output=[item_sk#398, cnt#400L])\n                     :     :  :                          +- *(29) HashAggregate(keys=[_groupingexpression#608, i_item_sk#67, d_date#41], functions=[partial_count(1)], output=[_groupingexpression#608, i_item_sk#67, d_date#41, count#622L])\n                     :     :  :                             +- *(29) Project [d_date#41, i_item_sk#67, substr(i_item_desc#71, 1, 30) AS _groupingexpression#608]\n                     :     :  :                                +- *(29) SortMergeJoin [ss_item_sk#17], [i_item_sk#67], Inner\n                     :     :  :                                   :- *(27) Sort [ss_item_sk#17 ASC NULLS FIRST], false, 0\n                     :     :  :                                   :  +- AQEShuffleRead coalesced\n                     :     :  :                                   :     +- ShuffleQueryStage 30\n                     :     :  :                                   :        +- ReusedExchange [ss_item_sk#17, d_date#41], Exchange hashpartitioning(ss_item_sk#17, 200), ENSURE_REQUIREMENTS, [plan_id=2120]\n                     :     :  :                                   +- *(28) Sort [i_item_sk#67 ASC NULLS FIRST], false, 0\n                     :     :  :                                      +- AQEShuffleRead coalesced\n                     :     :  :                                         +- ShuffleQueryStage 15\n                     :     :  :                                            +- ReusedExchange [i_item_sk#67, i_item_desc#71], Exchange hashpartitioning(i_item_sk#67, 200), ENSURE_REQUIREMENTS, [plan_id=1012]\n                     :     :  +- *(45) Sort [c_customer_sk#481 ASC NULLS FIRST], false, 0\n                     :     :     +- *(45) Project [c_customer_sk#481]\n                     :     :        +- *(45) Filter (isnotnull(ssales#403) AND (cast(ssales#403 as decimal(38,8)) > (0.950000 * Subquery subquery#404, [id=#492])))\n                     :     :           :  +- Subquery subquery#404, [id=#492]\n                     :     :           :     +- AdaptiveSparkPlan isFinalPlan=true\n                                                +- == Final Plan ==\n                                                   *(7) HashAggregate(keys=[], functions=[max(csales#401)], output=[tpcds_cmax#402])\n                                                   +- ShuffleQueryStage 4\n                                                      +- Exchange SinglePartition, ENSURE_REQUIREMENTS, [plan_id=6917]\n                                                         +- *(6) HashAggregate(keys=[], functions=[partial_max(csales#401)], output=[max#632])\n                                                            +- *(6) HashAggregate(keys=[c_customer_sk#89], functions=[sum((cast(ss_quantity#416 as decimal(10,0)) * ss_sales_price#419))], output=[csales#401])\n                                                               +- *(6) HashAggregate(keys=[c_customer_sk#89], functions=[partial_sum((cast(ss_quantity#416 as decimal(10,0)) * ss_sales_price#419))], output=[c_customer_sk#89, sum#635, isEmpty#636])\n                                                                  +- *(6) Project [ss_quantity#416, ss_sales_price#419, c_customer_sk#89]\n                                                                     +- *(6) SortMergeJoin [ss_customer_sk#409], [c_customer_sk#89], Inner\n                                                                        :- *(4) Sort [ss_customer_sk#409 ASC NULLS FIRST], false, 0\n                                                                        :  +- AQEShuffleRead coalesced\n                                                                        :     +- ShuffleQueryStage 3\n                                                                        :        +- Exchange hashpartitioning(ss_customer_sk#409, 200), ENSURE_REQUIREMENTS, [plan_id=6797]\n                                                                        :           +- *(3) Project [ss_customer_sk#409, ss_quantity#416, ss_sales_price#419]\n                                                                        :              +- *(3) BroadcastHashJoin [ss_sold_date_sk#429], [d_date_sk#430], Inner, BuildRight, false\n                                                                        :                 :- *(3) Filter isnotnull(ss_customer_sk#409)\n                                                                        :                 :  +- *(3) ColumnarToRow\n                                                                        :                 :     +- FileScan parquet spark_catalog.tpcds_100.store_sales[ss_customer_sk#409,ss_quantity#416,ss_sales_price#419,ss_sold_date_sk#429] Batched: true, DataFilters: [isnotnull(ss_customer_sk#409)], Format: Parquet, Location: InMemoryFileIndex(1823 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/store_..., PartitionFilters: [isnotnull(ss_sold_date_sk#429), dynamicpruningexpression(ss_sold_date_sk#429 IN dynamicpruning#6..., PushedFilters: [IsNotNull(ss_customer_sk)], ReadSchema: struct<ss_customer_sk:int,ss_quantity:int,ss_sales_price:decimal(7,2)>\n                                                                        :                 :           +- SubqueryBroadcast dynamicpruning#610, 0, [d_date_sk#430], [id=#6771]\n                                                                        :                 :              +- AdaptiveSparkPlan isFinalPlan=true\n                                                         +- == Final Plan ==\n                                                            BroadcastQueryStage 1\n                                                            +- ReusedExchange [d_date_sk#430], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=6642]\n                                                         +- == Initial Plan ==\n                                                            BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=6768]\n                                                            +- Project [d_date_sk#430]\n                                                               +- Filter (d_year#436 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#430))\n                                                                  +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#430,d_year#436] Batched: true, DataFilters: [d_year#436 IN (1999,2000,2001,2002), isnotnull(d_date_sk#430)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [In(d_year, [1999,2000,2001,2002]), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>\n                                                                        :                 +- BroadcastQueryStage 0\n                                                                        :                    +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=6642]\n                                                                        :                       +- *(1) Project [d_date_sk#430]\n                                                                        :                          +- *(1) Filter (d_year#436 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#430))\n                                                                        :                             +- *(1) ColumnarToRow\n                                                                        :                                +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#430,d_year#436] Batched: true, DataFilters: [d_year#436 IN (1999,2000,2001,2002), isnotnull(d_date_sk#430)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [In(d_year, [1999,2000,2001,2002]), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>\n                                                                        +- *(5) Sort [c_customer_sk#89 ASC NULLS FIRST], false, 0\n                                                                           +- AQEShuffleRead coalesced\n                                                                              +- ShuffleQueryStage 2\n                                                                                 +- ReusedExchange [c_customer_sk#89], Exchange hashpartitioning(c_customer_sk#481, 200), ENSURE_REQUIREMENTS, [plan_id=1061]\n                                                +- == Initial Plan ==\n                                                   HashAggregate(keys=[], functions=[max(csales#401)], output=[tpcds_cmax#402])\n                                                   +- Exchange SinglePartition, ENSURE_REQUIREMENTS, [plan_id=490]\n                                                      +- HashAggregate(keys=[], functions=[partial_max(csales#401)], output=[max#632])\n                                                         +- HashAggregate(keys=[c_customer_sk#89], functions=[sum((cast(ss_quantity#416 as decimal(10,0)) * ss_sales_price#419))], output=[csales#401])\n                                                            +- HashAggregate(keys=[c_customer_sk#89], functions=[partial_sum((cast(ss_quantity#416 as decimal(10,0)) * ss_sales_price#419))], output=[c_customer_sk#89, sum#635, isEmpty#636])\n                                                               +- Project [ss_quantity#416, ss_sales_price#419, c_customer_sk#89]\n                                                                  +- SortMergeJoin [ss_customer_sk#409], [c_customer_sk#89], Inner\n                                                                     :- Sort [ss_customer_sk#409 ASC NULLS FIRST], false, 0\n                                                                     :  +- Exchange hashpartitioning(ss_customer_sk#409, 200), ENSURE_REQUIREMENTS, [plan_id=480]\n                                                                     :     +- Project [ss_customer_sk#409, ss_quantity#416, ss_sales_price#419]\n                                                                     :        +- BroadcastHashJoin [ss_sold_date_sk#429], [d_date_sk#430], Inner, BuildRight, false\n                                                                     :           :- Filter isnotnull(ss_customer_sk#409)\n                                                                     :           :  +- FileScan parquet spark_catalog.tpcds_100.store_sales[ss_customer_sk#409,ss_quantity#416,ss_sales_price#419,ss_sold_date_sk#429] Batched: true, DataFilters: [isnotnull(ss_customer_sk#409)], Format: Parquet, Location: InMemoryFileIndex(1823 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/store_..., PartitionFilters: [isnotnull(ss_sold_date_sk#429), dynamicpruningexpression(ss_sold_date_sk#429 IN dynamicpruning#6..., PushedFilters: [IsNotNull(ss_customer_sk)], ReadSchema: struct<ss_customer_sk:int,ss_quantity:int,ss_sales_price:decimal(7,2)>\n                                                                     :           :        +- SubqueryAdaptiveBroadcast dynamicpruning#610, 0, true, Project [d_date_sk#430], [d_date_sk#430]\n                                                                     :           :           +- AdaptiveSparkPlan isFinalPlan=false\n                                                                     :           :              +- Project [d_date_sk#430]\n                                                                     :           :                 +- Filter (d_year#436 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#430))\n                                                                     :           :                    +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#430,d_year#436] Batched: true, DataFilters: [d_year#436 IN (1999,2000,2001,2002), isnotnull(d_date_sk#430)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [In(d_year, [1999,2000,2001,2002]), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>\n                                                                     :           +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=475]\n                                                                     :              +- Project [d_date_sk#430]\n                                                                     :                 +- Filter (d_year#436 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#430))\n                                                                     :                    +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#430,d_year#436] Batched: true, DataFilters: [d_year#436 IN (1999,2000,2001,2002), isnotnull(d_date_sk#430)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [In(d_year, [1999,2000,2001,2002]), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>\n                                                                     +- Sort [c_customer_sk#89 ASC NULLS FIRST], false, 0\n                                                                        +- Exchange hashpartitioning(c_customer_sk#89, 200), ENSURE_REQUIREMENTS, [plan_id=481]\n                                                                           +- Filter isnotnull(c_customer_sk#89)\n                                                                              +- FileScan parquet spark_catalog.tpcds_100.customer[c_customer_sk#89] Batched: true, DataFilters: [isnotnull(c_customer_sk#89)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/customer], PartitionFilters: [], PushedFilters: [IsNotNull(c_customer_sk)], ReadSchema: struct<c_customer_sk:int>\n                     :     :           +- *(45) HashAggregate(keys=[c_customer_sk#481], functions=[sum((cast(ss_quantity#467 as decimal(10,0)) * ss_sales_price#470))], output=[c_customer_sk#481, ssales#403])\n                     :     :              +- *(45) HashAggregate(keys=[c_customer_sk#481], functions=[partial_sum((cast(ss_quantity#467 as decimal(10,0)) * ss_sales_price#470))], output=[c_customer_sk#481, sum#625, isEmpty#626])\n                     :     :                 +- *(45) Project [ss_quantity#467, ss_sales_price#470, c_customer_sk#481]\n                     :     :                    +- *(45) SortMergeJoin [ss_customer_sk#460], [c_customer_sk#481], Inner\n                     :     :                       :- *(43) Sort [ss_customer_sk#460 ASC NULLS FIRST], false, 0\n                     :     :                       :  +- ShuffleQueryStage 17\n                     :     :                       :     +- ReusedExchange [ss_customer_sk#460, ss_quantity#467, ss_sales_price#470], Exchange hashpartitioning(ss_customer_sk#460, 200), ENSURE_REQUIREMENTS, [plan_id=1042]\n                     :     :                       +- *(44) Sort [c_customer_sk#481 ASC NULLS FIRST], false, 0\n                     :     :                          +- ShuffleQueryStage 19\n                     :     :                             +- ReusedExchange [c_customer_sk#481], Exchange hashpartitioning(c_customer_sk#481, 200), ENSURE_REQUIREMENTS, [plan_id=1061]\n                     :     +- BroadcastQueryStage 21\n                     :        +- ReusedExchange [d_date_sk#563], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=1088]\n                     +- *(51) SortMergeJoin [c_customer_sk#545], [c_customer_sk#481], LeftSemi\n                        :- *(47) Sort [c_customer_sk#545 ASC NULLS FIRST], false, 0\n                        :  +- ShuffleQueryStage 23\n                        :     +- ReusedExchange [c_customer_sk#545, c_first_name#553, c_last_name#554], Exchange hashpartitioning(c_customer_sk#499, 200), ENSURE_REQUIREMENTS, [plan_id=1107]\n                        +- *(50) Sort [c_customer_sk#481 ASC NULLS FIRST], false, 0\n                           +- *(50) Project [c_customer_sk#481]\n                              +- *(50) Filter (isnotnull(ssales#403) AND (cast(ssales#403 as decimal(38,8)) > (0.950000 * Subquery subquery#404, [id=#492])))\n                                 :  +- Subquery subquery#404, [id=#492]\n                                 :     +- AdaptiveSparkPlan isFinalPlan=true\n                                          +- == Final Plan ==\n                                             *(7) HashAggregate(keys=[], functions=[max(csales#401)], output=[tpcds_cmax#402])\n                                             +- ShuffleQueryStage 4\n                                                +- Exchange SinglePartition, ENSURE_REQUIREMENTS, [plan_id=6917]\n                                                   +- *(6) HashAggregate(keys=[], functions=[partial_max(csales#401)], output=[max#632])\n                                                      +- *(6) HashAggregate(keys=[c_customer_sk#89], functions=[sum((cast(ss_quantity#416 as decimal(10,0)) * ss_sales_price#419))], output=[csales#401])\n                                                         +- *(6) HashAggregate(keys=[c_customer_sk#89], functions=[partial_sum((cast(ss_quantity#416 as decimal(10,0)) * ss_sales_price#419))], output=[c_customer_sk#89, sum#635, isEmpty#636])\n                                                            +- *(6) Project [ss_quantity#416, ss_sales_price#419, c_customer_sk#89]\n                                                               +- *(6) SortMergeJoin [ss_customer_sk#409], [c_customer_sk#89], Inner\n                                                                  :- *(4) Sort [ss_customer_sk#409 ASC NULLS FIRST], false, 0\n                                                                  :  +- AQEShuffleRead coalesced\n                                                                  :     +- ShuffleQueryStage 3\n                                                                  :        +- Exchange hashpartitioning(ss_customer_sk#409, 200), ENSURE_REQUIREMENTS, [plan_id=6797]\n                                                                  :           +- *(3) Project [ss_customer_sk#409, ss_quantity#416, ss_sales_price#419]\n                                                                  :              +- *(3) BroadcastHashJoin [ss_sold_date_sk#429], [d_date_sk#430], Inner, BuildRight, false\n                                                                  :                 :- *(3) Filter isnotnull(ss_customer_sk#409)\n                                                                  :                 :  +- *(3) ColumnarToRow\n                                                                  :                 :     +- FileScan parquet spark_catalog.tpcds_100.store_sales[ss_customer_sk#409,ss_quantity#416,ss_sales_price#419,ss_sold_date_sk#429] Batched: true, DataFilters: [isnotnull(ss_customer_sk#409)], Format: Parquet, Location: InMemoryFileIndex(1823 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/store_..., PartitionFilters: [isnotnull(ss_sold_date_sk#429), dynamicpruningexpression(ss_sold_date_sk#429 IN dynamicpruning#6..., PushedFilters: [IsNotNull(ss_customer_sk)], ReadSchema: struct<ss_customer_sk:int,ss_quantity:int,ss_sales_price:decimal(7,2)>\n                                                                  :                 :           +- SubqueryBroadcast dynamicpruning#610, 0, [d_date_sk#430], [id=#6771]\n                                                                  :                 :              +- AdaptiveSparkPlan isFinalPlan=true\n                                                         +- == Final Plan ==\n                                                            BroadcastQueryStage 1\n                                                            +- ReusedExchange [d_date_sk#430], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=6642]\n                                                         +- == Initial Plan ==\n                                                            BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=6768]\n                                                            +- Project [d_date_sk#430]\n                                                               +- Filter (d_year#436 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#430))\n                                                                  +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#430,d_year#436] Batched: true, DataFilters: [d_year#436 IN (1999,2000,2001,2002), isnotnull(d_date_sk#430)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [In(d_year, [1999,2000,2001,2002]), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>\n                                                                  :                 +- BroadcastQueryStage 0\n                                                                  :                    +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=6642]\n                                                                  :                       +- *(1) Project [d_date_sk#430]\n                                                                  :                          +- *(1) Filter (d_year#436 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#430))\n                                                                  :                             +- *(1) ColumnarToRow\n                                                                  :                                +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#430,d_year#436] Batched: true, DataFilters: [d_year#436 IN (1999,2000,2001,2002), isnotnull(d_date_sk#430)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [In(d_year, [1999,2000,2001,2002]), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>\n                                                                  +- *(5) Sort [c_customer_sk#89 ASC NULLS FIRST], false, 0\n                                                                     +- AQEShuffleRead coalesced\n                                                                        +- ShuffleQueryStage 2\n                                                                           +- ReusedExchange [c_customer_sk#89], Exchange hashpartitioning(c_customer_sk#481, 200), ENSURE_REQUIREMENTS, [plan_id=1061]\n                                          +- == Initial Plan ==\n                                             HashAggregate(keys=[], functions=[max(csales#401)], output=[tpcds_cmax#402])\n                                             +- Exchange SinglePartition, ENSURE_REQUIREMENTS, [plan_id=490]\n                                                +- HashAggregate(keys=[], functions=[partial_max(csales#401)], output=[max#632])\n                                                   +- HashAggregate(keys=[c_customer_sk#89], functions=[sum((cast(ss_quantity#416 as decimal(10,0)) * ss_sales_price#419))], output=[csales#401])\n                                                      +- HashAggregate(keys=[c_customer_sk#89], functions=[partial_sum((cast(ss_quantity#416 as decimal(10,0)) * ss_sales_price#419))], output=[c_customer_sk#89, sum#635, isEmpty#636])\n                                                         +- Project [ss_quantity#416, ss_sales_price#419, c_customer_sk#89]\n                                                            +- SortMergeJoin [ss_customer_sk#409], [c_customer_sk#89], Inner\n                                                               :- Sort [ss_customer_sk#409 ASC NULLS FIRST], false, 0\n                                                               :  +- Exchange hashpartitioning(ss_customer_sk#409, 200), ENSURE_REQUIREMENTS, [plan_id=480]\n                                                               :     +- Project [ss_customer_sk#409, ss_quantity#416, ss_sales_price#419]\n                                                               :        +- BroadcastHashJoin [ss_sold_date_sk#429], [d_date_sk#430], Inner, BuildRight, false\n                                                               :           :- Filter isnotnull(ss_customer_sk#409)\n                                                               :           :  +- FileScan parquet spark_catalog.tpcds_100.store_sales[ss_customer_sk#409,ss_quantity#416,ss_sales_price#419,ss_sold_date_sk#429] Batched: true, DataFilters: [isnotnull(ss_customer_sk#409)], Format: Parquet, Location: InMemoryFileIndex(1823 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/store_..., PartitionFilters: [isnotnull(ss_sold_date_sk#429), dynamicpruningexpression(ss_sold_date_sk#429 IN dynamicpruning#6..., PushedFilters: [IsNotNull(ss_customer_sk)], ReadSchema: struct<ss_customer_sk:int,ss_quantity:int,ss_sales_price:decimal(7,2)>\n                                                               :           :        +- SubqueryAdaptiveBroadcast dynamicpruning#610, 0, true, Project [d_date_sk#430], [d_date_sk#430]\n                                                               :           :           +- AdaptiveSparkPlan isFinalPlan=false\n                                                               :           :              +- Project [d_date_sk#430]\n                                                               :           :                 +- Filter (d_year#436 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#430))\n                                                               :           :                    +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#430,d_year#436] Batched: true, DataFilters: [d_year#436 IN (1999,2000,2001,2002), isnotnull(d_date_sk#430)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [In(d_year, [1999,2000,2001,2002]), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>\n                                                               :           +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=475]\n                                                               :              +- Project [d_date_sk#430]\n                                                               :                 +- Filter (d_year#436 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#430))\n                                                               :                    +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#430,d_year#436] Batched: true, DataFilters: [d_year#436 IN (1999,2000,2001,2002), isnotnull(d_date_sk#430)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [In(d_year, [1999,2000,2001,2002]), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>\n                                                               +- Sort [c_customer_sk#89 ASC NULLS FIRST], false, 0\n                                                                  +- Exchange hashpartitioning(c_customer_sk#89, 200), ENSURE_REQUIREMENTS, [plan_id=481]\n                                                                     +- Filter isnotnull(c_customer_sk#89)\n                                                                        +- FileScan parquet spark_catalog.tpcds_100.customer[c_customer_sk#89] Batched: true, DataFilters: [isnotnull(c_customer_sk#89)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/customer], PartitionFilters: [], PushedFilters: [IsNotNull(c_customer_sk)], ReadSchema: struct<c_customer_sk:int>\n                                 +- *(50) HashAggregate(keys=[c_customer_sk#481], functions=[sum((cast(ss_quantity#467 as decimal(10,0)) * ss_sales_price#470))], output=[c_customer_sk#481, ssales#403])\n                                    +- *(50) HashAggregate(keys=[c_customer_sk#481], functions=[partial_sum((cast(ss_quantity#467 as decimal(10,0)) * ss_sales_price#470))], output=[c_customer_sk#481, sum#625, isEmpty#626])\n                                       +- *(50) Project [ss_quantity#467, ss_sales_price#470, c_customer_sk#481]\n                                          +- *(50) SortMergeJoin [ss_customer_sk#460], [c_customer_sk#481], Inner\n                                             :- *(48) Sort [ss_customer_sk#460 ASC NULLS FIRST], false, 0\n                                             :  +- ShuffleQueryStage 25\n                                             :     +- ReusedExchange [ss_customer_sk#460, ss_quantity#467, ss_sales_price#470], Exchange hashpartitioning(ss_customer_sk#460, 200), ENSURE_REQUIREMENTS, [plan_id=1042]\n                                             +- *(49) Sort [c_customer_sk#481 ASC NULLS FIRST], false, 0\n                                                +- ShuffleQueryStage 27\n                                                   +- ReusedExchange [c_customer_sk#481], Exchange hashpartitioning(c_customer_sk#481, 200), ENSURE_REQUIREMENTS, [plan_id=1061]\n"
      },
      "IM" : {
        "inputSizeInBytes" : 1344,
        "inputRowCount" : 19
      },
      "InitialPartitionNum" : 1,
      "PD" : {
        "11" : [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 117, 0, 106, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 106, 0, 117, 0, 0, 0, 0, 0, 0, 0, 0, 117, 72, 0, 0, 117, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 106, 0, 0, 0, 0, 0, 0, 0, 214, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 117, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 117, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 117, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 88, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 117, 0, 0, 0, 0, 0 ],
        "12" : [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 106, 0, 97, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 117, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 117, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 17,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 47 ],
      "Objectives" : {
        "DurationInMs" : 70,
        "TotalTasksDurationInMs" : 113,
        "IOBytes" : {
          "Total" : 1988,
          "Details" : {
            "IR" : 0,
            "IW" : 0,
            "SR" : 1988,
            "SW" : 0
          }
        }
      }
    },
    "14" : {
      "QSLogical" : {
        "operators" : {
          "0" : {
            "sign" : 745588666,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 1472,
                "rowCount" : 46
              },
              "compileTime" : {
                "sizeInBytes" : 24,
                "rowCount" : 1
              }
            },
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [max(csales#401) AS tpcds_cmax#402], HashAggregate(keys=[], functions=[max(csales#401)]) "
          }
        },
        "links" : [ ],
        "rawPlan" : "LogicalQueryStage Aggregate [max(csales#401) AS tpcds_cmax#402], HashAggregate(keys=[], functions=[max(csales#401)])\n"
      },
      "QSPhysical" : {
        "operators" : {
          "0" : {
            "sign" : 167682768,
            "className" : "org.apache.spark.sql.execution.aggregate.HashAggregateExec",
            "sizeInBytes" : 1472,
            "rowCount" : 46,
            "isRuntime" : true,
            "predicate" : " (unknown) HashAggregate Input [1]: [max#632] Keys: [] Functions [1]: [max(csales#401)] Aggregate Attributes [1]: [max(csales#401)#597] Results [1]: [max(csales#401)#597 AS tpcds_cmax#402] "
          },
          "1" : {
            "sign" : -1869814068,
            "className" : "org.apache.spark.sql.execution.adaptive.ShuffleQueryStageExec",
            "sizeInBytes" : 24,
            "rowCount" : 1,
            "isRuntime" : false,
            "predicate" : " (unknown) ShuffleQueryStage Output [1]: [max#632] Arguments: 4 "
          }
        },
        "links" : [ {
          "fromId" : 1,
          "fromName" : "ShuffleQueryStage",
          "toId" : 0,
          "toName" : "HashAggregate",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "HashAggregate(keys=[], functions=[max(csales#401)], output=[tpcds_cmax#402])\n+- ShuffleQueryStage 4\n   +- Exchange SinglePartition, ENSURE_REQUIREMENTS, [plan_id=6917]\n      +- *(6) HashAggregate(keys=[], functions=[partial_max(csales#401)], output=[max#632])\n         +- *(6) HashAggregate(keys=[c_customer_sk#89], functions=[sum((cast(ss_quantity#416 as decimal(10,0)) * ss_sales_price#419))], output=[csales#401])\n            +- *(6) HashAggregate(keys=[c_customer_sk#89], functions=[partial_sum((cast(ss_quantity#416 as decimal(10,0)) * ss_sales_price#419))], output=[c_customer_sk#89, sum#635, isEmpty#636])\n               +- *(6) Project [ss_quantity#416, ss_sales_price#419, c_customer_sk#89]\n                  +- *(6) SortMergeJoin [ss_customer_sk#409], [c_customer_sk#89], Inner\n                     :- *(4) Sort [ss_customer_sk#409 ASC NULLS FIRST], false, 0\n                     :  +- AQEShuffleRead coalesced\n                     :     +- ShuffleQueryStage 3\n                     :        +- Exchange hashpartitioning(ss_customer_sk#409, 200), ENSURE_REQUIREMENTS, [plan_id=6797]\n                     :           +- *(3) Project [ss_customer_sk#409, ss_quantity#416, ss_sales_price#419]\n                     :              +- *(3) BroadcastHashJoin [ss_sold_date_sk#429], [d_date_sk#430], Inner, BuildRight, false\n                     :                 :- *(3) Filter isnotnull(ss_customer_sk#409)\n                     :                 :  +- *(3) ColumnarToRow\n                     :                 :     +- FileScan parquet spark_catalog.tpcds_100.store_sales[ss_customer_sk#409,ss_quantity#416,ss_sales_price#419,ss_sold_date_sk#429] Batched: true, DataFilters: [isnotnull(ss_customer_sk#409)], Format: Parquet, Location: InMemoryFileIndex(1823 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/store_..., PartitionFilters: [isnotnull(ss_sold_date_sk#429), dynamicpruningexpression(ss_sold_date_sk#429 IN dynamicpruning#6..., PushedFilters: [IsNotNull(ss_customer_sk)], ReadSchema: struct<ss_customer_sk:int,ss_quantity:int,ss_sales_price:decimal(7,2)>\n                     :                 :           +- SubqueryBroadcast dynamicpruning#610, 0, [d_date_sk#430], [id=#6771]\n                     :                 :              +- AdaptiveSparkPlan isFinalPlan=true\n                                                         +- == Final Plan ==\n                                                            BroadcastQueryStage 1\n                                                            +- ReusedExchange [d_date_sk#430], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=6642]\n                                                         +- == Initial Plan ==\n                                                            BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=6768]\n                                                            +- Project [d_date_sk#430]\n                                                               +- Filter (d_year#436 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#430))\n                                                                  +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#430,d_year#436] Batched: true, DataFilters: [d_year#436 IN (1999,2000,2001,2002), isnotnull(d_date_sk#430)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [In(d_year, [1999,2000,2001,2002]), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>\n                     :                 +- BroadcastQueryStage 0\n                     :                    +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=6642]\n                     :                       +- *(1) Project [d_date_sk#430]\n                     :                          +- *(1) Filter (d_year#436 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#430))\n                     :                             +- *(1) ColumnarToRow\n                     :                                +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#430,d_year#436] Batched: true, DataFilters: [d_year#436 IN (1999,2000,2001,2002), isnotnull(d_date_sk#430)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [In(d_year, [1999,2000,2001,2002]), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>\n                     +- *(5) Sort [c_customer_sk#89 ASC NULLS FIRST], false, 0\n                        +- AQEShuffleRead coalesced\n                           +- ShuffleQueryStage 2\n                              +- ReusedExchange [c_customer_sk#89], Exchange hashpartitioning(c_customer_sk#481, 200), ENSURE_REQUIREMENTS, [plan_id=1061]\n"
      },
      "IM" : {
        "inputSizeInBytes" : 1472,
        "inputRowCount" : 46
      },
      "InitialPartitionNum" : 1,
      "PD" : {
        "10" : [ 3312 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 2,
        "FinishedTasksNum" : 18,
        "FinishedTasksTotalTimeInMs" : 502139.0,
        "FinishedTasksDistributionInMs" : [ 25356.0, 26329.0, 27024.0, 30173.0, 31788.0 ]
      },
      "QueryStageOptimizationId" : 15,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 26 ],
      "Objectives" : {
        "DurationInMs" : 31,
        "TotalTasksDurationInMs" : 25,
        "IOBytes" : {
          "Total" : 3266,
          "Details" : {
            "IR" : 0,
            "IW" : 0,
            "SR" : 3266,
            "SW" : 0
          }
        }
      }
    },
    "0" : {
      "QSLogical" : {
        "operators" : {
          "0" : {
            "sign" : 886815593,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 23152,
                "rowCount" : 1447
              },
              "compileTime" : {
                "sizeInBytes" : 23152,
                "rowCount" : 1447
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#39, d_date#41] "
          },
          "1" : {
            "sign" : 1327533026,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 355962,
                "rowCount" : 1447
              },
              "compileTime" : {
                "sizeInBytes" : 355962,
                "rowCount" : 1447
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (d_year#45 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#39)) "
          },
          "2" : {
            "sign" : 1227723257,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 17970054,
                "rowCount" : 73049
              },
              "compileTime" : {
                "sizeInBytes" : 17970054,
                "rowCount" : 73049
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#39, d_date_id#40, d_date#41, d_month_seq#42, d_week_seq#43, d_quarter_seq#44, d_year#45, d_dow#46, d_moy#47, d_dom#48, d_qoy#49, d_fy_year#50, d_fy_quarter_seq#51, d_fy_week_seq#52, d_day_name#53, d_quarter_name#54, d_holiday#55, d_weekend#56, d_following_holiday#57, d_first_dom#58, d_last_dom#59, d_same_day_ly#60, d_same_day_lq#61, d_current_day#62, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "LogicalRelation",
          "toId" : 1,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Filter",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [d_date_sk#39, d_date#41]\n+- Filter (d_year#45 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#39))\n   +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#39,d_date_id#40,d_date#41,d_month_seq#42,d_week_seq#43,d_quarter_seq#44,d_year#45,d_dow#46,d_moy#47,d_dom#48,d_qoy#49,d_fy_year#50,d_fy_quarter_seq#51,d_fy_week_seq#52,d_day_name#53,d_quarter_name#54,d_holiday#55,d_weekend#56,d_following_holiday#57,d_first_dom#58,d_last_dom#59,d_same_day_ly#60,d_same_day_lq#61,d_current_day#62,... 4 more fields] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "0" : {
            "sign" : 730778743,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 23152,
            "rowCount" : 1447,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [2]: [d_date_sk#39, d_date#41] Input [3]: [d_date_sk#39, d_date#41, d_year#45] "
          },
          "1" : {
            "sign" : -1264340688,
            "className" : "org.apache.spark.sql.execution.FilterExec",
            "sizeInBytes" : 23152,
            "rowCount" : 1447,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Input [3]: [d_date_sk#39, d_date#41, d_year#45] Condition : (d_year#45 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#39)) "
          },
          "2" : {
            "sign" : -1966102777,
            "className" : "org.apache.spark.sql.execution.FileSourceScanExec",
            "sizeInBytes" : 23152,
            "rowCount" : 1447,
            "isRuntime" : false,
            "predicate" : " (unknown) Scan parquet spark_catalog.tpcds_100.date_dim Output [3]: [d_date_sk#39, d_date#41, d_year#45] Batched: true Location: InMemoryFileIndex [hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim] PushedFilters: [In(d_year, [1999,2000,2001,2002]), IsNotNull(d_date_sk)] ReadSchema: struct<d_date_sk:int,d_date:date,d_year:int> "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "Scan parquet spark_catalog.tpcds_100.date_dim",
          "toId" : 1,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Filter",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [d_date_sk#39, d_date#41]\n+- Filter (d_year#45 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#39))\n   +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#39,d_date#41,d_year#45] Batched: true, DataFilters: [d_year#45 IN (1999,2000,2001,2002), isnotnull(d_date_sk#39)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [In(d_year, [1999,2000,2001,2002]), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_date:date,d_year:int>\n"
      },
      "IM" : {
        "inputSizeInBytes" : 23152,
        "inputRowCount" : 1447
      },
      "InitialPartitionNum" : 0,
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 1,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 3 ],
      "Objectives" : {
        "DurationInMs" : 1638,
        "TotalTasksDurationInMs" : 1627,
        "IOBytes" : {
          "Total" : 173661,
          "Details" : {
            "IR" : 173661,
            "IW" : 0,
            "SR" : 0,
            "SW" : 0
          }
        }
      }
    },
    "2" : {
      "QSLogical" : {
        "operators" : {
          "0" : {
            "sign" : -877142308,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 4561805056,
                "rowCount" : 142556408
              },
              "compileTime" : {
                "sizeInBytes" : 4561805056,
                "rowCount" : 142556408
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_bill_customer_sk#109, cs_item_sk#121, cs_quantity#124, cs_list_price#126, cs_sold_date_sk#140] "
          },
          "1" : {
            "sign" : -103139022,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 29651732864,
                "rowCount" : 142556408
              },
              "compileTime" : {
                "sizeInBytes" : 29651732864,
                "rowCount" : 142556408
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(cs_bill_customer_sk#109) AND isnotnull(cs_sold_date_sk#140)) AND dynamicpruning#614 [cs_sold_date_sk#140]) "
          },
          "2" : {
            "sign" : 1536480445,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 29800787536,
                "rowCount" : 143273017
              },
              "compileTime" : {
                "sizeInBytes" : 29800787536,
                "rowCount" : 143273017
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [cs_sold_time_sk#107, cs_ship_date_sk#108, cs_bill_customer_sk#109, cs_bill_cdemo_sk#110, cs_bill_hdemo_sk#111, cs_bill_addr_sk#112, cs_ship_customer_sk#113, cs_ship_cdemo_sk#114, cs_ship_hdemo_sk#115, cs_ship_addr_sk#116, cs_call_center_sk#117, cs_catalog_page_sk#118, cs_ship_mode_sk#119, cs_warehouse_sk#120, cs_item_sk#121, cs_promo_sk#122, cs_order_number#123L, cs_quantity#124, cs_wholesale_cost#125, cs_list_price#126, cs_sales_price#127, cs_ext_discount_amt#128, cs_ext_sales_price#129, cs_ext_wholesale_cost#130, ... 10 more fields], `spark_catalog`.`tpcds_100`.`catalog_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "LogicalRelation",
          "toId" : 1,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Filter",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [cs_bill_customer_sk#109, cs_item_sk#121, cs_quantity#124, cs_list_price#126, cs_sold_date_sk#140]\n+- Filter ((isnotnull(cs_bill_customer_sk#109) AND isnotnull(cs_sold_date_sk#140)) AND dynamicpruning#614 [cs_sold_date_sk#140])\n   :  +- Project [d_date_sk#517]\n   :     +- Filter (((isnotnull(d_year#523) AND isnotnull(d_moy#525)) AND ((d_year#523 = 1999) AND (d_moy#525 = 1))) AND isnotnull(d_date_sk#517))\n   :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#517,d_date_id#518,d_date#519,d_month_seq#520,d_week_seq#521,d_quarter_seq#522,d_year#523,d_dow#524,d_moy#525,d_dom#526,d_qoy#527,d_fy_year#528,d_fy_quarter_seq#529,d_fy_week_seq#530,d_day_name#531,d_quarter_name#532,d_holiday#533,d_weekend#534,d_following_holiday#535,d_first_dom#536,d_last_dom#537,d_same_day_ly#538,d_same_day_lq#539,d_current_day#540,... 4 more fields] parquet\n   +- Relation spark_catalog.tpcds_100.catalog_sales[cs_sold_time_sk#107,cs_ship_date_sk#108,cs_bill_customer_sk#109,cs_bill_cdemo_sk#110,cs_bill_hdemo_sk#111,cs_bill_addr_sk#112,cs_ship_customer_sk#113,cs_ship_cdemo_sk#114,cs_ship_hdemo_sk#115,cs_ship_addr_sk#116,cs_call_center_sk#117,cs_catalog_page_sk#118,cs_ship_mode_sk#119,cs_warehouse_sk#120,cs_item_sk#121,cs_promo_sk#122,cs_order_number#123L,cs_quantity#124,cs_wholesale_cost#125,cs_list_price#126,cs_sales_price#127,cs_ext_discount_amt#128,cs_ext_sales_price#129,cs_ext_wholesale_cost#130,... 10 more fields] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "0" : {
            "sign" : -1692298213,
            "className" : "org.apache.spark.sql.execution.FilterExec",
            "sizeInBytes" : 4561805056,
            "rowCount" : 142556408,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Input [5]: [cs_bill_customer_sk#109, cs_item_sk#121, cs_quantity#124, cs_list_price#126, cs_sold_date_sk#140] Condition : isnotnull(cs_bill_customer_sk#109) "
          },
          "1" : {
            "sign" : 920712395,
            "className" : "org.apache.spark.sql.execution.FileSourceScanExec",
            "sizeInBytes" : 4561805056,
            "rowCount" : 142556408,
            "isRuntime" : false,
            "predicate" : " (unknown) Scan parquet spark_catalog.tpcds_100.catalog_sales Output [5]: [cs_bill_customer_sk#109, cs_item_sk#121, cs_quantity#124, cs_list_price#126, cs_sold_date_sk#140] Batched: true Location: InMemoryFileIndex [hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/catalog_sales/cs_sold_date_sk=2450815, ... 1835 entries] PartitionFilters: [isnotnull(cs_sold_date_sk#140), dynamicpruningexpression(cs_sold_date_sk#140 IN dynamicpruning#614)] PushedFilters: [IsNotNull(cs_bill_customer_sk)] ReadSchema: struct<cs_bill_customer_sk:int,cs_item_sk:int,cs_quantity:int,cs_list_price:decimal(7,2)> "
          }
        },
        "links" : [ {
          "fromId" : 1,
          "fromName" : "Scan parquet spark_catalog.tpcds_100.catalog_sales",
          "toId" : 0,
          "toName" : "Filter",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Filter isnotnull(cs_bill_customer_sk#109)\n+- FileScan parquet spark_catalog.tpcds_100.catalog_sales[cs_bill_customer_sk#109,cs_item_sk#121,cs_quantity#124,cs_list_price#126,cs_sold_date_sk#140] Batched: true, DataFilters: [isnotnull(cs_bill_customer_sk#109)], Format: Parquet, Location: InMemoryFileIndex(1836 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/catalo..., PartitionFilters: [isnotnull(cs_sold_date_sk#140), dynamicpruningexpression(cs_sold_date_sk#140 IN dynamicpruning#6..., PushedFilters: [IsNotNull(cs_bill_customer_sk)], ReadSchema: struct<cs_bill_customer_sk:int,cs_item_sk:int,cs_quantity:int,cs_list_price:decimal(7,2)>\n      +- SubqueryBroadcast dynamicpruning#614, 0, [d_date_sk#517], [id=#957]\n         +- AdaptiveSparkPlan isFinalPlan=false\n            +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=954]\n               +- Project [d_date_sk#517]\n                  +- Filter ((((isnotnull(d_year#523) AND isnotnull(d_moy#525)) AND (d_year#523 = 1999)) AND (d_moy#525 = 1)) AND isnotnull(d_date_sk#517))\n                     +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#517,d_year#523,d_moy#525] Batched: true, DataFilters: [isnotnull(d_year#523), isnotnull(d_moy#525), (d_year#523 = 1999), (d_moy#525 = 1), isnotnull(d_d..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), IsNotNull(d_moy), EqualTo(d_year,1999), EqualTo(d_moy,1), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>\n"
      },
      "IM" : {
        "inputSizeInBytes" : 4561805056,
        "inputRowCount" : 142556408
      },
      "InitialPartitionNum" : 0,
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 0,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 5 ],
      "Objectives" : {
        "DurationInMs" : 9393,
        "TotalTasksDurationInMs" : 100423,
        "IOBytes" : {
          "Total" : 43521236,
          "Details" : {
            "IR" : 14662846,
            "IW" : 0,
            "SR" : 0,
            "SW" : 28858390
          }
        }
      }
    },
    "7" : {
      "QSLogical" : {
        "operators" : {
          "0" : {
            "sign" : -976605388,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 2302899232,
                "rowCount" : 71965601
              },
              "compileTime" : {
                "sizeInBytes" : 2302899232,
                "rowCount" : 71965601
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_item_sk#143, ws_bill_customer_sk#144, ws_quantity#158, ws_list_price#160, ws_sold_date_sk#174] "
          },
          "1" : {
            "sign" : -189824257,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 14968845008,
                "rowCount" : 71965601
              },
              "compileTime" : {
                "sizeInBytes" : 14968845008,
                "rowCount" : 71965601
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(ws_bill_customer_sk#144) AND isnotnull(ws_sold_date_sk#174)) AND dynamicpruning#616 [ws_sold_date_sk#174]) "
          },
          "2" : {
            "sign" : 2108049380,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 14972593792,
                "rowCount" : 71983624
              },
              "compileTime" : {
                "sizeInBytes" : 14972593792,
                "rowCount" : 71983624
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ws_sold_time_sk#141, ws_ship_date_sk#142, ws_item_sk#143, ws_bill_customer_sk#144, ws_bill_cdemo_sk#145, ws_bill_hdemo_sk#146, ws_bill_addr_sk#147, ws_ship_customer_sk#148, ws_ship_cdemo_sk#149, ws_ship_hdemo_sk#150, ws_ship_addr_sk#151, ws_web_page_sk#152, ws_web_site_sk#153, ws_ship_mode_sk#154, ws_warehouse_sk#155, ws_promo_sk#156, ws_order_number#157L, ws_quantity#158, ws_wholesale_cost#159, ws_list_price#160, ws_sales_price#161, ws_ext_discount_amt#162, ws_ext_sales_price#163, ws_ext_wholesale_cost#164, ... 10 more fields], `spark_catalog`.`tpcds_100`.`web_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "LogicalRelation",
          "toId" : 1,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Filter",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [ws_item_sk#143, ws_bill_customer_sk#144, ws_quantity#158, ws_list_price#160, ws_sold_date_sk#174]\n+- Filter ((isnotnull(ws_bill_customer_sk#144) AND isnotnull(ws_sold_date_sk#174)) AND dynamicpruning#616 [ws_sold_date_sk#174])\n   :  +- Project [d_date_sk#563]\n   :     +- Filter (((isnotnull(d_year#569) AND isnotnull(d_moy#571)) AND ((d_year#569 = 1999) AND (d_moy#571 = 1))) AND isnotnull(d_date_sk#563))\n   :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#563,d_date_id#564,d_date#565,d_month_seq#566,d_week_seq#567,d_quarter_seq#568,d_year#569,d_dow#570,d_moy#571,d_dom#572,d_qoy#573,d_fy_year#574,d_fy_quarter_seq#575,d_fy_week_seq#576,d_day_name#577,d_quarter_name#578,d_holiday#579,d_weekend#580,d_following_holiday#581,d_first_dom#582,d_last_dom#583,d_same_day_ly#584,d_same_day_lq#585,d_current_day#586,... 4 more fields] parquet\n   +- Relation spark_catalog.tpcds_100.web_sales[ws_sold_time_sk#141,ws_ship_date_sk#142,ws_item_sk#143,ws_bill_customer_sk#144,ws_bill_cdemo_sk#145,ws_bill_hdemo_sk#146,ws_bill_addr_sk#147,ws_ship_customer_sk#148,ws_ship_cdemo_sk#149,ws_ship_hdemo_sk#150,ws_ship_addr_sk#151,ws_web_page_sk#152,ws_web_site_sk#153,ws_ship_mode_sk#154,ws_warehouse_sk#155,ws_promo_sk#156,ws_order_number#157L,ws_quantity#158,ws_wholesale_cost#159,ws_list_price#160,ws_sales_price#161,ws_ext_discount_amt#162,ws_ext_sales_price#163,ws_ext_wholesale_cost#164,... 10 more fields] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "0" : {
            "sign" : -143185829,
            "className" : "org.apache.spark.sql.execution.FilterExec",
            "sizeInBytes" : 2302899232,
            "rowCount" : 71965601,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Input [5]: [ws_item_sk#143, ws_bill_customer_sk#144, ws_quantity#158, ws_list_price#160, ws_sold_date_sk#174] Condition : isnotnull(ws_bill_customer_sk#144) "
          },
          "1" : {
            "sign" : 830657308,
            "className" : "org.apache.spark.sql.execution.FileSourceScanExec",
            "sizeInBytes" : 2302899232,
            "rowCount" : 71965601,
            "isRuntime" : false,
            "predicate" : " (unknown) Scan parquet spark_catalog.tpcds_100.web_sales Output [5]: [ws_item_sk#143, ws_bill_customer_sk#144, ws_quantity#158, ws_list_price#160, ws_sold_date_sk#174] Batched: true Location: InMemoryFileIndex [hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/web_sales/ws_sold_date_sk=2450816, ... 1822 entries] PartitionFilters: [isnotnull(ws_sold_date_sk#174), dynamicpruningexpression(ws_sold_date_sk#174 IN dynamicpruning#614)] PushedFilters: [IsNotNull(ws_bill_customer_sk)] ReadSchema: struct<ws_item_sk:int,ws_bill_customer_sk:int,ws_quantity:int,ws_list_price:decimal(7,2)> "
          }
        },
        "links" : [ {
          "fromId" : 1,
          "fromName" : "Scan parquet spark_catalog.tpcds_100.web_sales",
          "toId" : 0,
          "toName" : "Filter",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Filter isnotnull(ws_bill_customer_sk#144)\n+- FileScan parquet spark_catalog.tpcds_100.web_sales[ws_item_sk#143,ws_bill_customer_sk#144,ws_quantity#158,ws_list_price#160,ws_sold_date_sk#174] Batched: true, DataFilters: [isnotnull(ws_bill_customer_sk#144)], Format: Parquet, Location: InMemoryFileIndex(1823 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/web_sa..., PartitionFilters: [isnotnull(ws_sold_date_sk#174), dynamicpruningexpression(ws_sold_date_sk#174 IN dynamicpruning#6..., PushedFilters: [IsNotNull(ws_bill_customer_sk)], ReadSchema: struct<ws_item_sk:int,ws_bill_customer_sk:int,ws_quantity:int,ws_list_price:decimal(7,2)>\n      +- ReusedSubquery SubqueryBroadcast dynamicpruning#614, 0, [d_date_sk#517], [id=#957]\n"
      },
      "IM" : {
        "inputSizeInBytes" : 2302899232,
        "inputRowCount" : 71965601
      },
      "InitialPartitionNum" : 0,
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 7,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 10 ],
      "Objectives" : {
        "DurationInMs" : 19743,
        "TotalTasksDurationInMs" : 3074,
        "IOBytes" : {
          "Total" : 26462218,
          "Details" : {
            "IR" : 8451859,
            "IW" : 0,
            "SR" : 0,
            "SW" : 18010359
          }
        }
      }
    },
    "3" : {
      "QSLogical" : {
        "operators" : {
          "0" : {
            "sign" : -825358377,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 25500000,
                "rowCount" : 204000
              },
              "compileTime" : {
                "sizeInBytes" : 25500000,
                "rowCount" : 204000
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_item_sk#67, i_item_desc#71] "
          },
          "1" : {
            "sign" : -1751086968,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 86904000,
                "rowCount" : 204000
              },
              "compileTime" : {
                "sizeInBytes" : 86904000,
                "rowCount" : 204000
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: isnotnull(i_item_sk#67) "
          },
          "2" : {
            "sign" : 1444627727,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 86904000,
                "rowCount" : 204000
              },
              "compileTime" : {
                "sizeInBytes" : 86904000,
                "rowCount" : 204000
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [i_item_sk#67, i_item_id#68, i_rec_start_date#69, i_rec_end_date#70, i_item_desc#71, i_current_price#72, i_wholesale_cost#73, i_brand_id#74, i_brand#75, i_class_id#76, i_class#77, i_category_id#78, i_category#79, i_manufact_id#80, i_manufact#81, i_size#82, i_formulation#83, i_color#84, i_units#85, i_container#86, i_manager_id#87, i_product_name#88], `spark_catalog`.`tpcds_100`.`item`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "LogicalRelation",
          "toId" : 1,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Filter",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [i_item_sk#67, i_item_desc#71]\n+- Filter isnotnull(i_item_sk#67)\n   +- Relation spark_catalog.tpcds_100.item[i_item_sk#67,i_item_id#68,i_rec_start_date#69,i_rec_end_date#70,i_item_desc#71,i_current_price#72,i_wholesale_cost#73,i_brand_id#74,i_brand#75,i_class_id#76,i_class#77,i_category_id#78,i_category#79,i_manufact_id#80,i_manufact#81,i_size#82,i_formulation#83,i_color#84,i_units#85,i_container#86,i_manager_id#87,i_product_name#88] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "0" : {
            "sign" : -958710783,
            "className" : "org.apache.spark.sql.execution.FilterExec",
            "sizeInBytes" : 25500000,
            "rowCount" : 204000,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Input [2]: [i_item_sk#67, i_item_desc#71] Condition : isnotnull(i_item_sk#67) "
          },
          "1" : {
            "sign" : 2108423066,
            "className" : "org.apache.spark.sql.execution.FileSourceScanExec",
            "sizeInBytes" : 25500000,
            "rowCount" : 204000,
            "isRuntime" : false,
            "predicate" : " (unknown) Scan parquet spark_catalog.tpcds_100.item Output [2]: [i_item_sk#67, i_item_desc#71] Batched: true Location: InMemoryFileIndex [hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/item] PushedFilters: [IsNotNull(i_item_sk)] ReadSchema: struct<i_item_sk:int,i_item_desc:string> "
          }
        },
        "links" : [ {
          "fromId" : 1,
          "fromName" : "Scan parquet spark_catalog.tpcds_100.item",
          "toId" : 0,
          "toName" : "Filter",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Filter isnotnull(i_item_sk#67)\n+- FileScan parquet spark_catalog.tpcds_100.item[i_item_sk#67,i_item_desc#71] Batched: true, DataFilters: [isnotnull(i_item_sk#67)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/item], PartitionFilters: [], PushedFilters: [IsNotNull(i_item_sk)], ReadSchema: struct<i_item_sk:int,i_item_desc:string>\n"
      },
      "IM" : {
        "inputSizeInBytes" : 25500000,
        "inputRowCount" : 204000
      },
      "InitialPartitionNum" : 0,
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 2,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 6 ],
      "Objectives" : {
        "DurationInMs" : 4387,
        "TotalTasksDurationInMs" : 7835,
        "IOBytes" : {
          "Total" : 28373372,
          "Details" : {
            "IR" : 11614715,
            "IW" : 0,
            "SR" : 0,
            "SW" : 16758657
          }
        }
      }
    }
  },
  "SQLStartTimeInMs" : 1702226710322,
  "SQLEndTimeInMs" : 1702226870941,
  "Objectives" : {
    "DurationInMs" : 160619,
    "IOBytes" : {
      "Total" : 22442516919,
      "Details" : {
        "IR" : 2932951423,
        "IW" : 0,
        "SR" : 12332414216,
        "SW" : 7177151280
      }
    }
  }
}
