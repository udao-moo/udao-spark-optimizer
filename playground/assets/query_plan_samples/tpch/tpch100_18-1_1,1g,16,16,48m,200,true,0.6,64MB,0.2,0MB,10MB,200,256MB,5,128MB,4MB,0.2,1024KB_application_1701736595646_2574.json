{
  "CompileTimeLQP" : {
    "LQP" : {
      "operators" : {
        "12" : {
          "sign" : 1767575340,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 5400000000,
          "rowCount" : 150000000,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [o_orderkey#9L, o_custkey#10L, o_totalprice#12, o_orderdate#17] "
        },
        "8" : {
          "sign" : -1624068677,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 690000000,
          "rowCount" : 15000000,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [c_custkey#1L, c_name#2] "
        },
        "19" : {
          "sign" : -2111276544,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 111607049772,
          "rowCount" : 600037902,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [l_orderkey#39L, l_partkey#40L, l_suppkey#41L, l_linenumber#42, l_quantity#43, l_extendedprice#44, l_discount#45, l_tax#46, l_returnflag#47, l_linestatus#48, l_commitdate#49, l_receiptdate#50, l_shipinstruct#51, l_shipmode#52, l_comment#53, l_shipdate#54], `spark_catalog`.`tpch_100`.`lineitem`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "23" : {
          "sign" : -1721060374,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 111607049772,
          "rowCount" : 600037902,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [l_orderkey#18L, l_partkey#19L, l_suppkey#20L, l_linenumber#21, l_quantity#22, l_extendedprice#23, l_discount#24, l_tax#25, l_returnflag#26, l_linestatus#27, l_commitdate#28, l_receiptdate#29, l_shipinstruct#30, l_shipmode#31, l_comment#32, l_shipdate#33], `spark_catalog`.`tpch_100`.`lineitem`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "4" : {
          "sign" : 472959189,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 44504430428,
          "rowCount" : 601411222,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [c_custkey#1L, c_name#2, o_orderkey#9L, o_totalprice#12, o_orderdate#17, l_quantity#22] "
        },
        "15" : {
          "sign" : 88496991,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 2441526672,
          "rowCount" : 152595417,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [l_orderkey#39L] "
        },
        "11" : {
          "sign" : 1595959299,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 5400000000,
          "rowCount" : 150000000,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: LeftSemi, (o_orderkey#9L = l_orderkey#39L) "
        },
        "9" : {
          "sign" : 1277134402,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 3495000000,
          "rowCount" : 15000000,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: isnotnull(c_custkey#1L) "
        },
        "22" : {
          "sign" : 1207973555,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 111607049772,
          "rowCount" : 600037902,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: isnotnull(l_orderkey#18L) "
        },
        "13" : {
          "sign" : 768936140,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 24300000000,
          "rowCount" : 150000000,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: (isnotnull(o_custkey#10L) AND isnotnull(o_orderkey#9L)) "
        },
        "16" : {
          "sign" : 1381720579,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 4883053344,
          "rowCount" : 152595417,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: (isnotnull(sum(l_quantity#22)#36) AND (sum(l_quantity#22)#36 > 313.00)) "
        },
        "5" : {
          "sign" : 534915890,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 49315720204,
          "rowCount" : 601411222,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: Inner, (o_orderkey#9L = l_orderkey#18L) "
        },
        "10" : {
          "sign" : -240052685,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 3495000000,
          "rowCount" : 15000000,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [c_custkey#1L, c_name#2, c_address#3, c_nationkey#4L, c_phone#5, c_acctbal#6, c_comment#7, c_mktsegment#8], `spark_catalog`.`tpch_100`.`customer`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "21" : {
          "sign" : -1585581217,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 14400909648,
          "rowCount" : 600037902,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [l_orderkey#18L, l_quantity#22] "
        },
        "6" : {
          "sign" : -472821769,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 9930311688,
          "rowCount" : 150459268,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [c_custkey#1L, c_name#2, o_orderkey#9L, o_totalprice#12, o_orderdate#17] "
        },
        "1" : {
          "sign" : 891025018,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
          "sizeInBytes" : 49315720204,
          "rowCount" : 601411222,
          "isRuntime" : false,
          "predicate" : " (unknown) LocalLimit Arguments: 100 "
        },
        "17" : {
          "sign" : 2111318366,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
          "sizeInBytes" : 4883053344,
          "rowCount" : 152595417,
          "isRuntime" : false,
          "predicate" : " (unknown) Aggregate Arguments: [l_orderkey#39L], [l_orderkey#39L, sum(l_quantity#43) AS sum(l_quantity#22)#36] "
        },
        "14" : {
          "sign" : -1044726289,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 24300000000,
          "rowCount" : 150000000,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [o_orderkey#9L, o_custkey#10L, o_orderstatus#11, o_totalprice#12, o_orderpriority#13, o_clerk#14, o_shippriority#15, o_comment#16, o_orderdate#17], `spark_catalog`.`tpch_100`.`orders`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "0" : {
          "sign" : 1486207387,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
          "sizeInBytes" : 7200,
          "rowCount" : 100,
          "isRuntime" : false,
          "predicate" : " (unknown) GlobalLimit Arguments: 100 "
        },
        "20" : {
          "sign" : -1487229045,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 14400909648,
          "rowCount" : 600037902,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: LeftSemi, (l_orderkey#18L = l_orderkey#39L) "
        },
        "2" : {
          "sign" : -19951759,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
          "sizeInBytes" : 49315720204,
          "rowCount" : 601411222,
          "isRuntime" : false,
          "predicate" : " (unknown) Sort Arguments: [o_totalprice#12 DESC NULLS LAST, o_orderdate#17 ASC NULLS FIRST], true "
        },
        "18" : {
          "sign" : 1992131908,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 14400909648,
          "rowCount" : 600037902,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [l_orderkey#39L, l_quantity#43] "
        },
        "7" : {
          "sign" : 507902145,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 11133985832,
          "rowCount" : 150459268,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: Inner, (c_custkey#1L = o_custkey#10L) "
        },
        "3" : {
          "sign" : -590459397,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
          "sizeInBytes" : 49315720204,
          "rowCount" : 601411222,
          "isRuntime" : false,
          "predicate" : " (unknown) Aggregate Arguments: [c_name#2, c_custkey#1L, o_orderkey#9L, o_orderdate#17, o_totalprice#12], [c_name#2, c_custkey#1L, o_orderkey#9L, o_orderdate#17, o_totalprice#12, sum(l_quantity#22) AS sum(l_quantity)#56] "
        }
      },
      "links" : [ {
        "fromId" : 10,
        "fromName" : "LogicalRelation",
        "toId" : 9,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 9,
        "fromName" : "Filter",
        "toId" : 8,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 8,
        "fromName" : "Project",
        "toId" : 7,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 14,
        "fromName" : "LogicalRelation",
        "toId" : 13,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 13,
        "fromName" : "Filter",
        "toId" : 12,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 12,
        "fromName" : "Project",
        "toId" : 11,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 19,
        "fromName" : "LogicalRelation",
        "toId" : 18,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 18,
        "fromName" : "Project",
        "toId" : 17,
        "toName" : "Aggregate",
        "linkType" : "Operator"
      }, {
        "fromId" : 17,
        "fromName" : "Aggregate",
        "toId" : 16,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 16,
        "fromName" : "Filter",
        "toId" : 15,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 15,
        "fromName" : "Project",
        "toId" : 11,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 11,
        "fromName" : "Join",
        "toId" : 7,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 7,
        "fromName" : "Join",
        "toId" : 6,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 6,
        "fromName" : "Project",
        "toId" : 5,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 23,
        "fromName" : "LogicalRelation",
        "toId" : 22,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 22,
        "fromName" : "Filter",
        "toId" : 21,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 21,
        "fromName" : "Project",
        "toId" : 20,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 15,
        "fromName" : "Project",
        "toId" : 20,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 20,
        "fromName" : "Join",
        "toId" : 5,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 5,
        "fromName" : "Join",
        "toId" : 4,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 4,
        "fromName" : "Project",
        "toId" : 3,
        "toName" : "Aggregate",
        "linkType" : "Operator"
      }, {
        "fromId" : 3,
        "fromName" : "Aggregate",
        "toId" : 2,
        "toName" : "Sort",
        "linkType" : "Operator"
      }, {
        "fromId" : 2,
        "fromName" : "Sort",
        "toId" : 1,
        "toName" : "LocalLimit",
        "linkType" : "Operator"
      }, {
        "fromId" : 1,
        "fromName" : "LocalLimit",
        "toId" : 0,
        "toName" : "GlobalLimit",
        "linkType" : "Operator"
      } ],
      "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [o_totalprice#12 DESC NULLS LAST, o_orderdate#17 ASC NULLS FIRST], true\n      +- Aggregate [c_name#2, c_custkey#1L, o_orderkey#9L, o_orderdate#17, o_totalprice#12], [c_name#2, c_custkey#1L, o_orderkey#9L, o_orderdate#17, o_totalprice#12, sum(l_quantity#22) AS sum(l_quantity)#56]\n         +- Project [c_custkey#1L, c_name#2, o_orderkey#9L, o_totalprice#12, o_orderdate#17, l_quantity#22]\n            +- Join Inner, (o_orderkey#9L = l_orderkey#18L)\n               :- Project [c_custkey#1L, c_name#2, o_orderkey#9L, o_totalprice#12, o_orderdate#17]\n               :  +- Join Inner, (c_custkey#1L = o_custkey#10L)\n               :     :- Project [c_custkey#1L, c_name#2]\n               :     :  +- Filter isnotnull(c_custkey#1L)\n               :     :     +- Relation spark_catalog.tpch_100.customer[c_custkey#1L,c_name#2,c_address#3,c_nationkey#4L,c_phone#5,c_acctbal#6,c_comment#7,c_mktsegment#8] parquet\n               :     +- Join LeftSemi, (o_orderkey#9L = l_orderkey#39L)\n               :        :- Project [o_orderkey#9L, o_custkey#10L, o_totalprice#12, o_orderdate#17]\n               :        :  +- Filter (isnotnull(o_custkey#10L) AND isnotnull(o_orderkey#9L))\n               :        :     +- Relation spark_catalog.tpch_100.orders[o_orderkey#9L,o_custkey#10L,o_orderstatus#11,o_totalprice#12,o_orderpriority#13,o_clerk#14,o_shippriority#15,o_comment#16,o_orderdate#17] parquet\n               :        +- Project [l_orderkey#39L]\n               :           +- Filter (isnotnull(sum(l_quantity#22)#36) AND (sum(l_quantity#22)#36 > 313.00))\n               :              +- Aggregate [l_orderkey#39L], [l_orderkey#39L, sum(l_quantity#43) AS sum(l_quantity#22)#36]\n               :                 +- Project [l_orderkey#39L, l_quantity#43]\n               :                    +- Relation spark_catalog.tpch_100.lineitem[l_orderkey#39L,l_partkey#40L,l_suppkey#41L,l_linenumber#42,l_quantity#43,l_extendedprice#44,l_discount#45,l_tax#46,l_returnflag#47,l_linestatus#48,l_commitdate#49,l_receiptdate#50,l_shipinstruct#51,l_shipmode#52,l_comment#53,l_shipdate#54] parquet\n               +- Join LeftSemi, (l_orderkey#18L = l_orderkey#39L)\n                  :- Project [l_orderkey#18L, l_quantity#22]\n                  :  +- Filter isnotnull(l_orderkey#18L)\n                  :     +- Relation spark_catalog.tpch_100.lineitem[l_orderkey#18L,l_partkey#19L,l_suppkey#20L,l_linenumber#21,l_quantity#22,l_extendedprice#23,l_discount#24,l_tax#25,l_returnflag#26,l_linestatus#27,l_commitdate#28,l_receiptdate#29,l_shipinstruct#30,l_shipmode#31,l_comment#32,l_shipdate#33] parquet\n                  +- Project [l_orderkey#39L]\n                     +- Filter (isnotnull(sum(l_quantity#22)#36) AND (sum(l_quantity#22)#36 > 313.00))\n                        +- Aggregate [l_orderkey#39L], [l_orderkey#39L, sum(l_quantity#43) AS sum(l_quantity#22)#36]\n                           +- Project [l_orderkey#39L, l_quantity#43]\n                              +- Relation spark_catalog.tpch_100.lineitem[l_orderkey#39L,l_partkey#40L,l_suppkey#41L,l_linenumber#42,l_quantity#43,l_extendedprice#44,l_discount#45,l_tax#46,l_returnflag#47,l_linestatus#48,l_commitdate#49,l_receiptdate#50,l_shipinstruct#51,l_shipmode#52,l_comment#53,l_shipdate#54] parquet\n"
    },
    "IM" : {
      "inputSizeInBytes" : 362616149316,
      "inputRowCount" : 1965113706
    },
    "PD" : { },
    "Configuration" : {
      "theta_c" : [ {
        "spark.executor.memory" : "1g"
      }, {
        "spark.executor.cores" : "1"
      }, {
        "spark.executor.instances" : "16"
      }, {
        "spark.default.parallelism" : "16"
      }, {
        "spark.reducer.maxSizeInFlight" : "48m"
      }, {
        "spark.shuffle.sort.bypassMergeThreshold" : "200"
      }, {
        "spark.shuffle.compress" : "true"
      }, {
        "spark.memory.fraction" : "0.6"
      } ],
      "theta_p" : [ {
        "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
      }, {
        "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
      }, {
        "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
      }, {
        "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
      }, {
        "spark.sql.shuffle.partitions" : "200"
      }, {
        "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
      }, {
        "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
      }, {
        "spark.sql.files.maxPartitionBytes" : "128MB"
      }, {
        "spark.sql.files.openCostInBytes" : "4MB"
      } ],
      "theta_s" : [ {
        "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
      }, {
        "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
      } ]
    }
  },
  "RuntimeLQPs" : {
    "8" : {
      "LQP" : {
        "operators" : {
          "8" : {
            "sign" : -228279327,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 14400909648,
            "rowCount" : 600037902,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [l_orderkey#18L, l_quantity#22], ShuffleQueryStage 3 "
          },
          "4" : {
            "sign" : 928273466,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 34600585580928,
            "rowCount" : 540634149702,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_custkey#1L, c_name#2, o_orderkey#9L, o_totalprice#12, o_orderdate#17, l_quantity#22] "
          },
          "11" : {
            "sign" : -1490265343,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 27960315264,
            "rowCount" : 582506568,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [l_orderkey#66L], [l_orderkey#66L, sum(l_quantity#70) AS sum(l_quantity#22)#65], HashAggregate(keys=[l_orderkey#66L], functions=[sum(l_quantity#70)]) "
          },
          "9" : {
            "sign" : -923033504,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 9320105088,
            "rowCount" : 582506568,
            "isRuntime" : true,
            "predicate" : " (unknown) Project Arguments: [l_orderkey#66L] "
          },
          "5" : {
            "sign" : 316532295,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 38925658778544,
            "rowCount" : 540634149702,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (o_orderkey#9L = l_orderkey#18L) "
          },
          "10" : {
            "sign" : 2028529710,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 18640210176,
            "rowCount" : 582506568,
            "isRuntime" : true,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(sum(l_quantity#22)#65) AND (sum(l_quantity#22)#65 > 313.00)) "
          },
          "6" : {
            "sign" : 910279417,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1081344,
            "rowCount" : 901,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: LogicalQueryStage Project [c_custkey#1L, c_name#2, o_orderkey#9L, o_totalprice#12, o_orderdate#17], ShuffleQueryStage 8, BroadcastQueryStage 9 "
          },
          "1" : {
            "sign" : -149515543,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
            "sizeInBytes" : 38925658778544,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) LocalLimit Arguments: 100 "
          },
          "0" : {
            "sign" : -920199282,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
            "sizeInBytes" : 7200,
            "rowCount" : 100,
            "isRuntime" : false,
            "predicate" : " (unknown) GlobalLimit Arguments: 100 "
          },
          "2" : {
            "sign" : -1724528776,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 38925658778544,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [o_totalprice#12 DESC NULLS LAST, o_orderdate#17 ASC NULLS FIRST], true "
          },
          "7" : {
            "sign" : -940284142,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 14400909648,
            "rowCount" : 600037902,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (l_orderkey#18L = l_orderkey#66L) "
          },
          "3" : {
            "sign" : 1884051370,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 38925658778544,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [c_name#2, c_custkey#1L, o_orderkey#9L, o_orderdate#17, o_totalprice#12], [c_name#2, c_custkey#1L, o_orderkey#9L, o_orderdate#17, o_totalprice#12, sum(l_quantity#22) AS sum(l_quantity)#83] "
          }
        },
        "links" : [ {
          "fromId" : 6,
          "fromName" : "LogicalQueryStage",
          "toId" : 5,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "LogicalQueryStage",
          "toId" : 7,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "LogicalQueryStage",
          "toId" : 10,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "Filter",
          "toId" : 9,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "Project",
          "toId" : 7,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Join",
          "toId" : 5,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Join",
          "toId" : 4,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Project",
          "toId" : 3,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Aggregate",
          "toId" : 2,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "LocalLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "LocalLimit",
          "toId" : 0,
          "toName" : "GlobalLimit",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [o_totalprice#12 DESC NULLS LAST, o_orderdate#17 ASC NULLS FIRST], true\n      +- Aggregate [c_name#2, c_custkey#1L, o_orderkey#9L, o_orderdate#17, o_totalprice#12], [c_name#2, c_custkey#1L, o_orderkey#9L, o_orderdate#17, o_totalprice#12, sum(l_quantity#22) AS sum(l_quantity)#83]\n         +- Project [c_custkey#1L, c_name#2, o_orderkey#9L, o_totalprice#12, o_orderdate#17, l_quantity#22]\n            +- Join Inner, (o_orderkey#9L = l_orderkey#18L)\n               :- LogicalQueryStage LogicalQueryStage Project [c_custkey#1L, c_name#2, o_orderkey#9L, o_totalprice#12, o_orderdate#17], ShuffleQueryStage 8, BroadcastQueryStage 9\n               +- Join LeftSemi, (l_orderkey#18L = l_orderkey#66L)\n                  :- LogicalQueryStage Project [l_orderkey#18L, l_quantity#22], ShuffleQueryStage 3\n                  +- Project [l_orderkey#66L]\n                     +- Filter (isnotnull(sum(l_quantity#22)#65) AND (sum(l_quantity#22)#65 > 313.00))\n                        +- LogicalQueryStage Aggregate [l_orderkey#66L], [l_orderkey#66L, sum(l_quantity#70) AS sum(l_quantity#22)#65], HashAggregate(keys=[l_orderkey#66L], functions=[sum(l_quantity#70)])\n"
      },
      "IM" : {
        "inputSizeInBytes" : 42362306256,
        "inputRowCount" : 1182545371
      },
      "PD" : {
        "3" : [ 32951685, 32958053, 32962799, 32959670, 32976237, 32969325, 32936621, 32960114, 32936556, 32952932, 32969325, 32931387, 32959729, 32937619, 32952997, 32972069, 32952997, 32958166, 32957044, 32962740, 32945963, 32937678, 32969325, 32964150, 32962740, 32960114, 32967145, 32976487, 32946347, 32926837, 32949737, 32924080, 32960851, 32979100, 32958107, 32943878, 32960114, 32954051, 32917972, 32937619, 32937983, 32958303, 32940363, 32908827, 32960114, 32967145, 32940408, 32969325, 32967817, 32989174, 32960055, 32958166, 32911458, 32967021, 32960055, 32949737, 32971956, 32946288, 32940354, 32976487, 32925225, 32944503, 32961733, 32926837, 32939241, 32922893, 32960055, 32967145, 32960114, 32946786, 32952932, 32972069, 32943727, 32948896, 32941779, 32972134, 32969177, 32942540, 32952932, 32948648, 32962740, 32925338, 32962864, 32954435, 32948837, 32962740, 32948837, 32930561, 32925338, 32969325, 32954821, 32960251, 32935298, 32948837, 32928014, 32939241, 32972069, 32943603, 32917869, 32926460, 32972069, 32942677, 32954821, 32945767, 32958053, 32968364, 32979100, 32962936, 32936280, 32940023, 32954945, 32946448, 32962740, 32969449, 32943662, 32960179, 32966900, 32948680, 32948961, 32964091, 32959094, 32922780, 32948783, 32937918, 32960916, 32954821, 32948837, 32943603, 32972069, 32932001, 32972134, 32925279, 32948783, 32946948, 32954821, 32956486, 32951685, 32979035, 32948576, 32960114, 32951581, 32960055, 32946516, 32963988, 32960114, 32928192, 32948837, 32960792, 32958166, 32969706, 32958166, 32940532, 32948961, 32968429, 32952873, 32969830, 32949033, 32966832, 32972010, 32972069, 32931387, 32931263, 32979035, 32953304, 32954880, 32967758, 32948452, 32960114, 32966918, 32969325, 32935233, 32948837, 32948837, 32948511, 32958303, 32967882, 32932509, 32949033, 32950596, 32950765, 32943662, 32961020, 32944399, 32937678, 32969830, 32953069, 32954880, 32951810, 32967383, 32960001, 32957630, 32960114, 32937743, 32929315, 32941851, 32969449, 32926347, 32958107, 32931115, 32943603 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "StartTimeInMs" : 1702226798291,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 37040,
        "IOBytes" : {
          "Total" : 13285567223,
          "Details" : {
            "IR" : 0,
            "IW" : 0,
            "SR" : 13285567223,
            "SW" : 0
          }
        }
      }
    },
    "4" : {
      "LQP" : {
        "operators" : {
          "12" : {
            "sign" : -923033504,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 9320105088,
            "rowCount" : 582506568,
            "isRuntime" : true,
            "predicate" : " (unknown) Project Arguments: [l_orderkey#66L] "
          },
          "8" : {
            "sign" : 2053531377,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 720000000,
            "rowCount" : 15000000,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [c_custkey#1L, c_name#2], ShuffleQueryStage 0 "
          },
          "4" : {
            "sign" : -1121932146,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 86405457888000000000000000,
            "rowCount" : 1350085279500000000000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_custkey#1L, c_name#2, o_orderkey#9L, o_totalprice#12, o_orderdate#17, l_quantity#22] "
          },
          "11" : {
            "sign" : -228279327,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 14400909648,
            "rowCount" : 600037902,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [l_orderkey#18L, l_quantity#22], ShuffleQueryStage 3 "
          },
          "9" : {
            "sign" : -741634659,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 5400000000,
            "rowCount" : 150000000,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Join LeftSemi, (o_orderkey#9L = l_orderkey#66L), ShuffleQueryStage 6 "
          },
          "13" : {
            "sign" : 2028529710,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 18640210176,
            "rowCount" : 582506568,
            "isRuntime" : true,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(sum(l_quantity#22)#65) AND (sum(l_quantity#22)#65 > 313.00)) "
          },
          "5" : {
            "sign" : 604211565,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 97206140124000000000000000,
            "rowCount" : 1350085279500000000000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (o_orderkey#9L = l_orderkey#18L) "
          },
          "10" : {
            "sign" : -940284142,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 14400909648,
            "rowCount" : 600037902,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (l_orderkey#18L = l_orderkey#66L) "
          },
          "6" : {
            "sign" : 61981653,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 126000000000000000,
            "rowCount" : 2250000000000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_custkey#1L, c_name#2, o_orderkey#9L, o_totalprice#12, o_orderdate#17] "
          },
          "1" : {
            "sign" : 955434383,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
            "sizeInBytes" : 97206140124000000000000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) LocalLimit Arguments: 100 "
          },
          "14" : {
            "sign" : -1490265343,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 27960315264,
            "rowCount" : 582506568,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [l_orderkey#66L], [l_orderkey#66L, sum(l_quantity#70) AS sum(l_quantity#22)#65], HashAggregate(keys=[l_orderkey#66L], functions=[sum(l_quantity#70)]) "
          },
          "0" : {
            "sign" : -892875974,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
            "sizeInBytes" : 7200,
            "rowCount" : 100,
            "isRuntime" : false,
            "predicate" : " (unknown) GlobalLimit Arguments: 100 "
          },
          "2" : {
            "sign" : -627044272,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 97206140124000000000000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [o_totalprice#12 DESC NULLS LAST, o_orderdate#17 ASC NULLS FIRST], true "
          },
          "7" : {
            "sign" : 68530007,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 144000000000000000,
            "rowCount" : 2250000000000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (c_custkey#1L = o_custkey#10L) "
          },
          "3" : {
            "sign" : -1617460272,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 97206140124000000000000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [c_name#2, c_custkey#1L, o_orderkey#9L, o_orderdate#17, o_totalprice#12], [c_name#2, c_custkey#1L, o_orderkey#9L, o_orderdate#17, o_totalprice#12, sum(l_quantity#22) AS sum(l_quantity)#83] "
          }
        },
        "links" : [ {
          "fromId" : 8,
          "fromName" : "LogicalQueryStage",
          "toId" : 7,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "LogicalQueryStage",
          "toId" : 7,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Join",
          "toId" : 6,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Project",
          "toId" : 5,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "LogicalQueryStage",
          "toId" : 10,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 14,
          "fromName" : "LogicalQueryStage",
          "toId" : 13,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 13,
          "fromName" : "Filter",
          "toId" : 12,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 12,
          "fromName" : "Project",
          "toId" : 10,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "Join",
          "toId" : 5,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Join",
          "toId" : 4,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Project",
          "toId" : 3,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Aggregate",
          "toId" : 2,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "LocalLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "LocalLimit",
          "toId" : 0,
          "toName" : "GlobalLimit",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [o_totalprice#12 DESC NULLS LAST, o_orderdate#17 ASC NULLS FIRST], true\n      +- Aggregate [c_name#2, c_custkey#1L, o_orderkey#9L, o_orderdate#17, o_totalprice#12], [c_name#2, c_custkey#1L, o_orderkey#9L, o_orderdate#17, o_totalprice#12, sum(l_quantity#22) AS sum(l_quantity)#83]\n         +- Project [c_custkey#1L, c_name#2, o_orderkey#9L, o_totalprice#12, o_orderdate#17, l_quantity#22]\n            +- Join Inner, (o_orderkey#9L = l_orderkey#18L)\n               :- Project [c_custkey#1L, c_name#2, o_orderkey#9L, o_totalprice#12, o_orderdate#17]\n               :  +- Join Inner, (c_custkey#1L = o_custkey#10L)\n               :     :- LogicalQueryStage Project [c_custkey#1L, c_name#2], ShuffleQueryStage 0\n               :     +- LogicalQueryStage Join LeftSemi, (o_orderkey#9L = l_orderkey#66L), ShuffleQueryStage 6\n               +- Join LeftSemi, (l_orderkey#18L = l_orderkey#66L)\n                  :- LogicalQueryStage Project [l_orderkey#18L, l_quantity#22], ShuffleQueryStage 3\n                  +- Project [l_orderkey#66L]\n                     +- Filter (isnotnull(sum(l_quantity#22)#65) AND (sum(l_quantity#22)#65 > 313.00))\n                        +- LogicalQueryStage Aggregate [l_orderkey#66L], [l_orderkey#66L, sum(l_quantity#70) AS sum(l_quantity#22)#65], HashAggregate(keys=[l_orderkey#66L], functions=[sum(l_quantity#70)])\n"
      },
      "IM" : {
        "inputSizeInBytes" : 48481224912,
        "inputRowCount" : 1347544470
      },
      "PD" : {
        "3" : [ 32951685, 32958053, 32962799, 32959670, 32976237, 32969325, 32936621, 32960114, 32936556, 32952932, 32969325, 32931387, 32959729, 32937619, 32952997, 32972069, 32952997, 32958166, 32957044, 32962740, 32945963, 32937678, 32969325, 32964150, 32962740, 32960114, 32967145, 32976487, 32946347, 32926837, 32949737, 32924080, 32960851, 32979100, 32958107, 32943878, 32960114, 32954051, 32917972, 32937619, 32937983, 32958303, 32940363, 32908827, 32960114, 32967145, 32940408, 32969325, 32967817, 32989174, 32960055, 32958166, 32911458, 32967021, 32960055, 32949737, 32971956, 32946288, 32940354, 32976487, 32925225, 32944503, 32961733, 32926837, 32939241, 32922893, 32960055, 32967145, 32960114, 32946786, 32952932, 32972069, 32943727, 32948896, 32941779, 32972134, 32969177, 32942540, 32952932, 32948648, 32962740, 32925338, 32962864, 32954435, 32948837, 32962740, 32948837, 32930561, 32925338, 32969325, 32954821, 32960251, 32935298, 32948837, 32928014, 32939241, 32972069, 32943603, 32917869, 32926460, 32972069, 32942677, 32954821, 32945767, 32958053, 32968364, 32979100, 32962936, 32936280, 32940023, 32954945, 32946448, 32962740, 32969449, 32943662, 32960179, 32966900, 32948680, 32948961, 32964091, 32959094, 32922780, 32948783, 32937918, 32960916, 32954821, 32948837, 32943603, 32972069, 32932001, 32972134, 32925279, 32948783, 32946948, 32954821, 32956486, 32951685, 32979035, 32948576, 32960114, 32951581, 32960055, 32946516, 32963988, 32960114, 32928192, 32948837, 32960792, 32958166, 32969706, 32958166, 32940532, 32948961, 32968429, 32952873, 32969830, 32949033, 32966832, 32972010, 32972069, 32931387, 32931263, 32979035, 32953304, 32954880, 32967758, 32948452, 32960114, 32966918, 32969325, 32935233, 32948837, 32948837, 32948511, 32958303, 32967882, 32932509, 32949033, 32950596, 32950765, 32943662, 32961020, 32944399, 32937678, 32969830, 32953069, 32954880, 32951810, 32967383, 32960001, 32957630, 32960114, 32937743, 32929315, 32941851, 32969449, 32926347, 32958107, 32931115, 32943603 ],
        "0" : [ 1211514, 1200296, 1223854, 1222732, 1189078, 1200296, 1177860, 1189078, 1200296, 1201418, 1222732, 1211514, 1223854, 1211514, 1224976, 1189078, 1211514, 1200296, 1211514, 1222732, 1211514, 1222732, 1235072, 1211514, 1189078, 1222732, 1200296, 1189078, 1200296, 1211514, 1200296, 1223854, 1211514, 1200296, 1189078, 1211514, 1200296, 1222732, 1200296, 1236194, 1223854, 1211514, 1211514, 1200296, 1189078, 1189078, 1222732, 1211514, 1211514, 1189078, 1200296, 1212636, 1211514, 1223854, 1222732, 1212636, 1212636, 1200296, 1222732, 1222732, 1200296, 1211514, 1211514, 1211514, 1211514, 1200296, 1211514, 1222732, 1211514, 1211514, 1200296, 1222732, 1189078, 1200296, 1222732, 1211514, 1200296, 1222732, 1212636, 1211514, 1211514, 1200296, 1222732, 1222732, 1211514, 1222732, 1177860, 1200296, 1189078, 1177860, 1211514, 1222732, 1223854, 1211514, 1211514, 1189078, 1211514, 1212636, 1177860, 1200296, 1211514, 1233950, 1222732, 1211514, 1211514, 1223854, 1189078, 1211514, 1211514, 1223854, 1200296, 1211514, 1200296, 1223854, 1211514, 1223854, 1189078, 1211514, 1222732, 1200296, 1222732, 1200296, 1200296, 1189078, 1200296, 1223854, 1223854, 1189078, 1233950, 1200296, 1200296, 1200296, 1189078, 1200296, 1211514, 1189078, 1211514, 1200296, 1200296, 1211514, 1211514, 1211514, 1189078, 1200296, 1222732, 1189078, 1222732, 1211514, 1200296, 1236194, 1201418, 1222732, 1200296, 1189078, 1200296, 1222732, 1222732, 1222732, 1222732, 1211514, 1211514, 1189078, 1200296, 1211514, 1200296, 1189078, 1212636, 1200296, 1200296, 1211514, 1222732, 1200296, 1222732, 1222732, 1211514, 1211514, 1200296, 1222732, 1211514, 1222732, 1177860, 1211514, 1189078, 1200296, 1200296, 1246290, 1200296, 1233950, 1222732, 1222732, 1211514, 1211514, 1177860, 1200296, 1201418, 1189078, 1222732, 1189078, 1211514, 1211514 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 16,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "StartTimeInMs" : 1702226767524,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 67807,
        "IOBytes" : {
          "Total" : 23573127763,
          "Details" : {
            "IR" : 0,
            "IW" : 0,
            "SR" : 23572979398,
            "SW" : 148365
          }
        }
      }
    },
    "5" : {
      "LQP" : {
        "operators" : {
          "12" : {
            "sign" : -923033504,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 9320105088,
            "rowCount" : 582506568,
            "isRuntime" : true,
            "predicate" : " (unknown) Project Arguments: [l_orderkey#66L] "
          },
          "8" : {
            "sign" : 2053531377,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 720000000,
            "rowCount" : 15000000,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [c_custkey#1L, c_name#2], ShuffleQueryStage 0 "
          },
          "4" : {
            "sign" : -1121932146,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 519008783713920000000,
            "rowCount" : 8109512245530000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_custkey#1L, c_name#2, o_orderkey#9L, o_totalprice#12, o_orderdate#17, l_quantity#22] "
          },
          "11" : {
            "sign" : -228279327,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 14400909648,
            "rowCount" : 600037902,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [l_orderkey#18L, l_quantity#22], ShuffleQueryStage 3 "
          },
          "9" : {
            "sign" : -741634659,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 36040,
            "rowCount" : 901,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Join LeftSemi, (o_orderkey#9L = l_orderkey#66L), ShuffleQueryStage 6 "
          },
          "13" : {
            "sign" : 2028529710,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 18640210176,
            "rowCount" : 582506568,
            "isRuntime" : true,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(sum(l_quantity#22)#65) AND (sum(l_quantity#22)#65 > 313.00)) "
          },
          "5" : {
            "sign" : 604211565,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 583884881678160000000,
            "rowCount" : 8109512245530000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (o_orderkey#9L = l_orderkey#18L) "
          },
          "10" : {
            "sign" : -940284142,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 14400909648,
            "rowCount" : 600037902,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (l_orderkey#18L = l_orderkey#66L) "
          },
          "6" : {
            "sign" : 61981653,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 756840000000,
            "rowCount" : 13515000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_custkey#1L, c_name#2, o_orderkey#9L, o_totalprice#12, o_orderdate#17] "
          },
          "1" : {
            "sign" : 955434383,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
            "sizeInBytes" : 583884881678160000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) LocalLimit Arguments: 100 "
          },
          "14" : {
            "sign" : -1490265343,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 27960315264,
            "rowCount" : 582506568,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [l_orderkey#66L], [l_orderkey#66L, sum(l_quantity#70) AS sum(l_quantity#22)#65], HashAggregate(keys=[l_orderkey#66L], functions=[sum(l_quantity#70)]) "
          },
          "0" : {
            "sign" : -892875974,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
            "sizeInBytes" : 7200,
            "rowCount" : 100,
            "isRuntime" : false,
            "predicate" : " (unknown) GlobalLimit Arguments: 100 "
          },
          "2" : {
            "sign" : -627044272,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 583884881678160000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [o_totalprice#12 DESC NULLS LAST, o_orderdate#17 ASC NULLS FIRST], true "
          },
          "7" : {
            "sign" : 68530007,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 864960000000,
            "rowCount" : 13515000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (c_custkey#1L = o_custkey#10L) "
          },
          "3" : {
            "sign" : -1617460272,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 583884881678160000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [c_name#2, c_custkey#1L, o_orderkey#9L, o_orderdate#17, o_totalprice#12], [c_name#2, c_custkey#1L, o_orderkey#9L, o_orderdate#17, o_totalprice#12, sum(l_quantity#22) AS sum(l_quantity)#83] "
          }
        },
        "links" : [ {
          "fromId" : 8,
          "fromName" : "LogicalQueryStage",
          "toId" : 7,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "LogicalQueryStage",
          "toId" : 7,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Join",
          "toId" : 6,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Project",
          "toId" : 5,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "LogicalQueryStage",
          "toId" : 10,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 14,
          "fromName" : "LogicalQueryStage",
          "toId" : 13,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 13,
          "fromName" : "Filter",
          "toId" : 12,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 12,
          "fromName" : "Project",
          "toId" : 10,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "Join",
          "toId" : 5,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Join",
          "toId" : 4,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Project",
          "toId" : 3,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Aggregate",
          "toId" : 2,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "LocalLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "LocalLimit",
          "toId" : 0,
          "toName" : "GlobalLimit",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [o_totalprice#12 DESC NULLS LAST, o_orderdate#17 ASC NULLS FIRST], true\n      +- Aggregate [c_name#2, c_custkey#1L, o_orderkey#9L, o_orderdate#17, o_totalprice#12], [c_name#2, c_custkey#1L, o_orderkey#9L, o_orderdate#17, o_totalprice#12, sum(l_quantity#22) AS sum(l_quantity)#83]\n         +- Project [c_custkey#1L, c_name#2, o_orderkey#9L, o_totalprice#12, o_orderdate#17, l_quantity#22]\n            +- Join Inner, (o_orderkey#9L = l_orderkey#18L)\n               :- Project [c_custkey#1L, c_name#2, o_orderkey#9L, o_totalprice#12, o_orderdate#17]\n               :  +- Join Inner, (c_custkey#1L = o_custkey#10L)\n               :     :- LogicalQueryStage Project [c_custkey#1L, c_name#2], ShuffleQueryStage 0\n               :     +- LogicalQueryStage Join LeftSemi, (o_orderkey#9L = l_orderkey#66L), ShuffleQueryStage 6\n               +- Join LeftSemi, (l_orderkey#18L = l_orderkey#66L)\n                  :- LogicalQueryStage Project [l_orderkey#18L, l_quantity#22], ShuffleQueryStage 3\n                  +- Project [l_orderkey#66L]\n                     +- Filter (isnotnull(sum(l_quantity#22)#65) AND (sum(l_quantity#22)#65 > 313.00))\n                        +- LogicalQueryStage Aggregate [l_orderkey#66L], [l_orderkey#66L, sum(l_quantity#70) AS sum(l_quantity#22)#65], HashAggregate(keys=[l_orderkey#66L], functions=[sum(l_quantity#70)])\n"
      },
      "IM" : {
        "inputSizeInBytes" : 43081260952,
        "inputRowCount" : 1197545371
      },
      "PD" : {
        "4" : [ 160, 560, 560, 560, 160, 640, 240, 240, 320, 320, 160, 480, 720, 560, 480, 240, 480, 480, 480, 320, 400, 480, 320, 560, 720, 240, 240, 240, 640, 960, 720, 320, 160, 80, 400, 320, 0, 400, 480, 320, 320, 160, 560, 400, 320, 400, 400, 320, 240, 240, 320, 320, 560, 400, 320, 400, 320, 160, 480, 0, 480, 320, 240, 160, 408, 240, 320, 400, 720, 560, 560, 240, 480, 240, 80, 80, 240, 320, 240, 320, 720, 400, 400, 160, 240, 480, 320, 400, 720, 560, 560, 400, 720, 160, 400, 320, 400, 640, 480, 240, 720, 320, 757, 400, 160, 400, 320, 80, 400, 560, 80, 320, 160, 160, 240, 160, 0, 0, 320, 320, 160, 240, 400, 160, 400, 560, 400, 160, 400, 400, 480, 240, 720, 320, 240, 320, 320, 320, 240, 320, 400, 320, 160, 480, 400, 240, 720, 160, 240, 560, 320, 240, 480, 320, 320, 240, 240, 400, 400, 320, 480, 320, 320, 400, 480, 320, 400, 240, 0, 160, 320, 320, 320, 0, 320, 160, 240, 240, 560, 480, 400, 400, 480, 720, 320, 480, 480, 640, 480, 160, 400, 240, 560, 320, 320, 320, 560, 400, 320, 160 ],
        "3" : [ 32951685, 32958053, 32962799, 32959670, 32976237, 32969325, 32936621, 32960114, 32936556, 32952932, 32969325, 32931387, 32959729, 32937619, 32952997, 32972069, 32952997, 32958166, 32957044, 32962740, 32945963, 32937678, 32969325, 32964150, 32962740, 32960114, 32967145, 32976487, 32946347, 32926837, 32949737, 32924080, 32960851, 32979100, 32958107, 32943878, 32960114, 32954051, 32917972, 32937619, 32937983, 32958303, 32940363, 32908827, 32960114, 32967145, 32940408, 32969325, 32967817, 32989174, 32960055, 32958166, 32911458, 32967021, 32960055, 32949737, 32971956, 32946288, 32940354, 32976487, 32925225, 32944503, 32961733, 32926837, 32939241, 32922893, 32960055, 32967145, 32960114, 32946786, 32952932, 32972069, 32943727, 32948896, 32941779, 32972134, 32969177, 32942540, 32952932, 32948648, 32962740, 32925338, 32962864, 32954435, 32948837, 32962740, 32948837, 32930561, 32925338, 32969325, 32954821, 32960251, 32935298, 32948837, 32928014, 32939241, 32972069, 32943603, 32917869, 32926460, 32972069, 32942677, 32954821, 32945767, 32958053, 32968364, 32979100, 32962936, 32936280, 32940023, 32954945, 32946448, 32962740, 32969449, 32943662, 32960179, 32966900, 32948680, 32948961, 32964091, 32959094, 32922780, 32948783, 32937918, 32960916, 32954821, 32948837, 32943603, 32972069, 32932001, 32972134, 32925279, 32948783, 32946948, 32954821, 32956486, 32951685, 32979035, 32948576, 32960114, 32951581, 32960055, 32946516, 32963988, 32960114, 32928192, 32948837, 32960792, 32958166, 32969706, 32958166, 32940532, 32948961, 32968429, 32952873, 32969830, 32949033, 32966832, 32972010, 32972069, 32931387, 32931263, 32979035, 32953304, 32954880, 32967758, 32948452, 32960114, 32966918, 32969325, 32935233, 32948837, 32948837, 32948511, 32958303, 32967882, 32932509, 32949033, 32950596, 32950765, 32943662, 32961020, 32944399, 32937678, 32969830, 32953069, 32954880, 32951810, 32967383, 32960001, 32957630, 32960114, 32937743, 32929315, 32941851, 32969449, 32926347, 32958107, 32931115, 32943603 ],
        "0" : [ 1211514, 1200296, 1223854, 1222732, 1189078, 1200296, 1177860, 1189078, 1200296, 1201418, 1222732, 1211514, 1223854, 1211514, 1224976, 1189078, 1211514, 1200296, 1211514, 1222732, 1211514, 1222732, 1235072, 1211514, 1189078, 1222732, 1200296, 1189078, 1200296, 1211514, 1200296, 1223854, 1211514, 1200296, 1189078, 1211514, 1200296, 1222732, 1200296, 1236194, 1223854, 1211514, 1211514, 1200296, 1189078, 1189078, 1222732, 1211514, 1211514, 1189078, 1200296, 1212636, 1211514, 1223854, 1222732, 1212636, 1212636, 1200296, 1222732, 1222732, 1200296, 1211514, 1211514, 1211514, 1211514, 1200296, 1211514, 1222732, 1211514, 1211514, 1200296, 1222732, 1189078, 1200296, 1222732, 1211514, 1200296, 1222732, 1212636, 1211514, 1211514, 1200296, 1222732, 1222732, 1211514, 1222732, 1177860, 1200296, 1189078, 1177860, 1211514, 1222732, 1223854, 1211514, 1211514, 1189078, 1211514, 1212636, 1177860, 1200296, 1211514, 1233950, 1222732, 1211514, 1211514, 1223854, 1189078, 1211514, 1211514, 1223854, 1200296, 1211514, 1200296, 1223854, 1211514, 1223854, 1189078, 1211514, 1222732, 1200296, 1222732, 1200296, 1200296, 1189078, 1200296, 1223854, 1223854, 1189078, 1233950, 1200296, 1200296, 1200296, 1189078, 1200296, 1211514, 1189078, 1211514, 1200296, 1200296, 1211514, 1211514, 1211514, 1189078, 1200296, 1222732, 1189078, 1222732, 1211514, 1200296, 1236194, 1201418, 1222732, 1200296, 1189078, 1200296, 1222732, 1222732, 1222732, 1222732, 1211514, 1211514, 1189078, 1200296, 1211514, 1200296, 1189078, 1212636, 1200296, 1200296, 1211514, 1222732, 1200296, 1222732, 1222732, 1211514, 1211514, 1200296, 1222732, 1211514, 1222732, 1177860, 1211514, 1189078, 1200296, 1200296, 1246290, 1200296, 1233950, 1222732, 1222732, 1211514, 1211514, 1177860, 1200296, 1201418, 1189078, 1222732, 1189078, 1211514, 1211514 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "StartTimeInMs" : 1702226797282,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 38049,
        "IOBytes" : {
          "Total" : 13518786092,
          "Details" : {
            "IR" : 0,
            "IW" : 0,
            "SR" : 13518709637,
            "SW" : 76455
          }
        }
      }
    },
    "6" : {
      "LQP" : {
        "operators" : {
          "12" : {
            "sign" : -923033504,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 9320105088,
            "rowCount" : 582506568,
            "isRuntime" : true,
            "predicate" : " (unknown) Project Arguments: [l_orderkey#66L] "
          },
          "8" : {
            "sign" : 2053531377,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 720000000,
            "rowCount" : 15000000,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [c_custkey#1L, c_name#2], ShuffleQueryStage 0 "
          },
          "4" : {
            "sign" : 1703227455,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 519008783713920000000,
            "rowCount" : 8109512245530000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_custkey#1L, c_name#2, o_orderkey#9L, o_totalprice#12, o_orderdate#17, l_quantity#22] "
          },
          "11" : {
            "sign" : -228279327,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 14400909648,
            "rowCount" : 600037902,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [l_orderkey#18L, l_quantity#22], ShuffleQueryStage 3 "
          },
          "9" : {
            "sign" : -1079633218,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1081344,
            "rowCount" : 901,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: LogicalQueryStage Join LeftSemi, (o_orderkey#9L = l_orderkey#66L), ShuffleQueryStage 6, BroadcastQueryStage 7 "
          },
          "13" : {
            "sign" : 2028529710,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 18640210176,
            "rowCount" : 582506568,
            "isRuntime" : true,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(sum(l_quantity#22)#65) AND (sum(l_quantity#22)#65 > 313.00)) "
          },
          "5" : {
            "sign" : 904717138,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 583884881678160000000,
            "rowCount" : 8109512245530000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (o_orderkey#9L = l_orderkey#18L) "
          },
          "10" : {
            "sign" : -940284142,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 14400909648,
            "rowCount" : 600037902,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (l_orderkey#18L = l_orderkey#66L) "
          },
          "6" : {
            "sign" : 567821190,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 756840000000,
            "rowCount" : 13515000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_custkey#1L, c_name#2, o_orderkey#9L, o_totalprice#12, o_orderdate#17] "
          },
          "1" : {
            "sign" : -1361891856,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
            "sizeInBytes" : 583884881678160000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) LocalLimit Arguments: 100 "
          },
          "14" : {
            "sign" : -1490265343,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 27960315264,
            "rowCount" : 582506568,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [l_orderkey#66L], [l_orderkey#66L, sum(l_quantity#70) AS sum(l_quantity#22)#65], HashAggregate(keys=[l_orderkey#66L], functions=[sum(l_quantity#70)]) "
          },
          "0" : {
            "sign" : -1208100205,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
            "sizeInBytes" : 7200,
            "rowCount" : 100,
            "isRuntime" : false,
            "predicate" : " (unknown) GlobalLimit Arguments: 100 "
          },
          "2" : {
            "sign" : -2115968387,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 583884881678160000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [o_totalprice#12 DESC NULLS LAST, o_orderdate#17 ASC NULLS FIRST], true "
          },
          "7" : {
            "sign" : 1442689604,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 864960000000,
            "rowCount" : 13515000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (c_custkey#1L = o_custkey#10L) "
          },
          "3" : {
            "sign" : -1915950961,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 583884881678160000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [c_name#2, c_custkey#1L, o_orderkey#9L, o_orderdate#17, o_totalprice#12], [c_name#2, c_custkey#1L, o_orderkey#9L, o_orderdate#17, o_totalprice#12, sum(l_quantity#22) AS sum(l_quantity)#83] "
          }
        },
        "links" : [ {
          "fromId" : 8,
          "fromName" : "LogicalQueryStage",
          "toId" : 7,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "LogicalQueryStage",
          "toId" : 7,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Join",
          "toId" : 6,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Project",
          "toId" : 5,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "LogicalQueryStage",
          "toId" : 10,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 14,
          "fromName" : "LogicalQueryStage",
          "toId" : 13,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 13,
          "fromName" : "Filter",
          "toId" : 12,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 12,
          "fromName" : "Project",
          "toId" : 10,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "Join",
          "toId" : 5,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Join",
          "toId" : 4,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Project",
          "toId" : 3,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Aggregate",
          "toId" : 2,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "LocalLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "LocalLimit",
          "toId" : 0,
          "toName" : "GlobalLimit",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [o_totalprice#12 DESC NULLS LAST, o_orderdate#17 ASC NULLS FIRST], true\n      +- Aggregate [c_name#2, c_custkey#1L, o_orderkey#9L, o_orderdate#17, o_totalprice#12], [c_name#2, c_custkey#1L, o_orderkey#9L, o_orderdate#17, o_totalprice#12, sum(l_quantity#22) AS sum(l_quantity)#83]\n         +- Project [c_custkey#1L, c_name#2, o_orderkey#9L, o_totalprice#12, o_orderdate#17, l_quantity#22]\n            +- Join Inner, (o_orderkey#9L = l_orderkey#18L)\n               :- Project [c_custkey#1L, c_name#2, o_orderkey#9L, o_totalprice#12, o_orderdate#17]\n               :  +- Join Inner, (c_custkey#1L = o_custkey#10L)\n               :     :- LogicalQueryStage Project [c_custkey#1L, c_name#2], ShuffleQueryStage 0\n               :     +- LogicalQueryStage LogicalQueryStage Join LeftSemi, (o_orderkey#9L = l_orderkey#66L), ShuffleQueryStage 6, BroadcastQueryStage 7\n               +- Join LeftSemi, (l_orderkey#18L = l_orderkey#66L)\n                  :- LogicalQueryStage Project [l_orderkey#18L, l_quantity#22], ShuffleQueryStage 3\n                  +- Project [l_orderkey#66L]\n                     +- Filter (isnotnull(sum(l_quantity#22)#65) AND (sum(l_quantity#22)#65 > 313.00))\n                        +- LogicalQueryStage Aggregate [l_orderkey#66L], [l_orderkey#66L, sum(l_quantity#70) AS sum(l_quantity#22)#65], HashAggregate(keys=[l_orderkey#66L], functions=[sum(l_quantity#70)])\n"
      },
      "IM" : {
        "inputSizeInBytes" : 43082306256,
        "inputRowCount" : 1197545371
      },
      "PD" : {
        "3" : [ 32951685, 32958053, 32962799, 32959670, 32976237, 32969325, 32936621, 32960114, 32936556, 32952932, 32969325, 32931387, 32959729, 32937619, 32952997, 32972069, 32952997, 32958166, 32957044, 32962740, 32945963, 32937678, 32969325, 32964150, 32962740, 32960114, 32967145, 32976487, 32946347, 32926837, 32949737, 32924080, 32960851, 32979100, 32958107, 32943878, 32960114, 32954051, 32917972, 32937619, 32937983, 32958303, 32940363, 32908827, 32960114, 32967145, 32940408, 32969325, 32967817, 32989174, 32960055, 32958166, 32911458, 32967021, 32960055, 32949737, 32971956, 32946288, 32940354, 32976487, 32925225, 32944503, 32961733, 32926837, 32939241, 32922893, 32960055, 32967145, 32960114, 32946786, 32952932, 32972069, 32943727, 32948896, 32941779, 32972134, 32969177, 32942540, 32952932, 32948648, 32962740, 32925338, 32962864, 32954435, 32948837, 32962740, 32948837, 32930561, 32925338, 32969325, 32954821, 32960251, 32935298, 32948837, 32928014, 32939241, 32972069, 32943603, 32917869, 32926460, 32972069, 32942677, 32954821, 32945767, 32958053, 32968364, 32979100, 32962936, 32936280, 32940023, 32954945, 32946448, 32962740, 32969449, 32943662, 32960179, 32966900, 32948680, 32948961, 32964091, 32959094, 32922780, 32948783, 32937918, 32960916, 32954821, 32948837, 32943603, 32972069, 32932001, 32972134, 32925279, 32948783, 32946948, 32954821, 32956486, 32951685, 32979035, 32948576, 32960114, 32951581, 32960055, 32946516, 32963988, 32960114, 32928192, 32948837, 32960792, 32958166, 32969706, 32958166, 32940532, 32948961, 32968429, 32952873, 32969830, 32949033, 32966832, 32972010, 32972069, 32931387, 32931263, 32979035, 32953304, 32954880, 32967758, 32948452, 32960114, 32966918, 32969325, 32935233, 32948837, 32948837, 32948511, 32958303, 32967882, 32932509, 32949033, 32950596, 32950765, 32943662, 32961020, 32944399, 32937678, 32969830, 32953069, 32954880, 32951810, 32967383, 32960001, 32957630, 32960114, 32937743, 32929315, 32941851, 32969449, 32926347, 32958107, 32931115, 32943603 ],
        "0" : [ 1211514, 1200296, 1223854, 1222732, 1189078, 1200296, 1177860, 1189078, 1200296, 1201418, 1222732, 1211514, 1223854, 1211514, 1224976, 1189078, 1211514, 1200296, 1211514, 1222732, 1211514, 1222732, 1235072, 1211514, 1189078, 1222732, 1200296, 1189078, 1200296, 1211514, 1200296, 1223854, 1211514, 1200296, 1189078, 1211514, 1200296, 1222732, 1200296, 1236194, 1223854, 1211514, 1211514, 1200296, 1189078, 1189078, 1222732, 1211514, 1211514, 1189078, 1200296, 1212636, 1211514, 1223854, 1222732, 1212636, 1212636, 1200296, 1222732, 1222732, 1200296, 1211514, 1211514, 1211514, 1211514, 1200296, 1211514, 1222732, 1211514, 1211514, 1200296, 1222732, 1189078, 1200296, 1222732, 1211514, 1200296, 1222732, 1212636, 1211514, 1211514, 1200296, 1222732, 1222732, 1211514, 1222732, 1177860, 1200296, 1189078, 1177860, 1211514, 1222732, 1223854, 1211514, 1211514, 1189078, 1211514, 1212636, 1177860, 1200296, 1211514, 1233950, 1222732, 1211514, 1211514, 1223854, 1189078, 1211514, 1211514, 1223854, 1200296, 1211514, 1200296, 1223854, 1211514, 1223854, 1189078, 1211514, 1222732, 1200296, 1222732, 1200296, 1200296, 1189078, 1200296, 1223854, 1223854, 1189078, 1233950, 1200296, 1200296, 1200296, 1189078, 1200296, 1211514, 1189078, 1211514, 1200296, 1200296, 1211514, 1211514, 1211514, 1189078, 1200296, 1222732, 1189078, 1222732, 1211514, 1200296, 1236194, 1201418, 1222732, 1200296, 1189078, 1200296, 1222732, 1222732, 1222732, 1222732, 1211514, 1211514, 1189078, 1200296, 1211514, 1200296, 1189078, 1212636, 1200296, 1200296, 1211514, 1222732, 1200296, 1222732, 1222732, 1211514, 1211514, 1200296, 1222732, 1211514, 1222732, 1177860, 1211514, 1189078, 1200296, 1200296, 1246290, 1200296, 1233950, 1222732, 1222732, 1211514, 1211514, 1177860, 1200296, 1201418, 1189078, 1222732, 1189078, 1211514, 1211514 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "StartTimeInMs" : 1702226797443,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 37888,
        "IOBytes" : {
          "Total" : 13518714182,
          "Details" : {
            "IR" : 0,
            "IW" : 0,
            "SR" : 13518637727,
            "SW" : 76455
          }
        }
      }
    },
    "1" : {
      "LQP" : {
        "operators" : {
          "12" : {
            "sign" : 2028529710,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 4883053344,
            "rowCount" : 152595417,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(sum(l_quantity#22)#65) AND (sum(l_quantity#22)#65 > 313.00)) "
          },
          "8" : {
            "sign" : 2053531377,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 720000000,
            "rowCount" : 15000000,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [c_custkey#1L, c_name#2], ShuffleQueryStage 0 "
          },
          "4" : {
            "sign" : -205705738,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 86405457888000000000000000,
            "rowCount" : 1350085279500000000000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_custkey#1L, c_name#2, o_orderkey#9L, o_totalprice#12, o_orderdate#17, l_quantity#22] "
          },
          "15" : {
            "sign" : -228279327,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 14400909648,
            "rowCount" : 600037902,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [l_orderkey#18L, l_quantity#22], ShuffleQueryStage 3 "
          },
          "11" : {
            "sign" : -923033504,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 2441526672,
            "rowCount" : 152595417,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [l_orderkey#66L] "
          },
          "9" : {
            "sign" : -699712781,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 5400000000,
            "rowCount" : 150000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (o_orderkey#9L = l_orderkey#66L) "
          },
          "13" : {
            "sign" : -1490265343,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 4883053344,
            "rowCount" : 152595417,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [l_orderkey#66L], [l_orderkey#66L, sum(l_quantity#70) AS sum(l_quantity#22)#65], HashAggregate(keys=[l_orderkey#66L], functions=[sum(l_quantity#70)]) "
          },
          "5" : {
            "sign" : 973468213,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 97206140124000000000000000,
            "rowCount" : 1350085279500000000000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (o_orderkey#9L = l_orderkey#18L) "
          },
          "10" : {
            "sign" : -1551841409,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 6000000000,
            "rowCount" : 150000000,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [o_orderkey#9L, o_custkey#10L, o_totalprice#12, o_orderdate#17], ShuffleQueryStage 1 "
          },
          "6" : {
            "sign" : -664010629,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 126000000000000000,
            "rowCount" : 2250000000000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_custkey#1L, c_name#2, o_orderkey#9L, o_totalprice#12, o_orderdate#17] "
          },
          "1" : {
            "sign" : 1418717011,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
            "sizeInBytes" : 97206140124000000000000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) LocalLimit Arguments: 100 "
          },
          "14" : {
            "sign" : -940284142,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 14400909648,
            "rowCount" : 600037902,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (l_orderkey#18L = l_orderkey#66L) "
          },
          "0" : {
            "sign" : -1311641782,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
            "sizeInBytes" : 7200,
            "rowCount" : 100,
            "isRuntime" : false,
            "predicate" : " (unknown) GlobalLimit Arguments: 100 "
          },
          "2" : {
            "sign" : 1863996084,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 97206140124000000000000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [o_totalprice#12 DESC NULLS LAST, o_orderdate#17 ASC NULLS FIRST], true "
          },
          "7" : {
            "sign" : -1034554981,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 144000000000000000,
            "rowCount" : 2250000000000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (c_custkey#1L = o_custkey#10L) "
          },
          "3" : {
            "sign" : 14862386,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 97206140124000000000000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [c_name#2, c_custkey#1L, o_orderkey#9L, o_orderdate#17, o_totalprice#12], [c_name#2, c_custkey#1L, o_orderkey#9L, o_orderdate#17, o_totalprice#12, sum(l_quantity#22) AS sum(l_quantity)#83] "
          }
        },
        "links" : [ {
          "fromId" : 8,
          "fromName" : "LogicalQueryStage",
          "toId" : 7,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "LogicalQueryStage",
          "toId" : 9,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 13,
          "fromName" : "LogicalQueryStage",
          "toId" : 12,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 12,
          "fromName" : "Filter",
          "toId" : 11,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "Project",
          "toId" : 9,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "Join",
          "toId" : 7,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Join",
          "toId" : 6,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Project",
          "toId" : 5,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 15,
          "fromName" : "LogicalQueryStage",
          "toId" : 14,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "Project",
          "toId" : 14,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 14,
          "fromName" : "Join",
          "toId" : 5,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Join",
          "toId" : 4,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Project",
          "toId" : 3,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Aggregate",
          "toId" : 2,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "LocalLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "LocalLimit",
          "toId" : 0,
          "toName" : "GlobalLimit",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [o_totalprice#12 DESC NULLS LAST, o_orderdate#17 ASC NULLS FIRST], true\n      +- Aggregate [c_name#2, c_custkey#1L, o_orderkey#9L, o_orderdate#17, o_totalprice#12], [c_name#2, c_custkey#1L, o_orderkey#9L, o_orderdate#17, o_totalprice#12, sum(l_quantity#22) AS sum(l_quantity)#83]\n         +- Project [c_custkey#1L, c_name#2, o_orderkey#9L, o_totalprice#12, o_orderdate#17, l_quantity#22]\n            +- Join Inner, (o_orderkey#9L = l_orderkey#18L)\n               :- Project [c_custkey#1L, c_name#2, o_orderkey#9L, o_totalprice#12, o_orderdate#17]\n               :  +- Join Inner, (c_custkey#1L = o_custkey#10L)\n               :     :- LogicalQueryStage Project [c_custkey#1L, c_name#2], ShuffleQueryStage 0\n               :     +- Join LeftSemi, (o_orderkey#9L = l_orderkey#66L)\n               :        :- LogicalQueryStage Project [o_orderkey#9L, o_custkey#10L, o_totalprice#12, o_orderdate#17], ShuffleQueryStage 1\n               :        +- Project [l_orderkey#66L]\n               :           +- Filter (isnotnull(sum(l_quantity#22)#65) AND (sum(l_quantity#22)#65 > 313.00))\n               :              +- LogicalQueryStage Aggregate [l_orderkey#66L], [l_orderkey#66L, sum(l_quantity#70) AS sum(l_quantity#22)#65], HashAggregate(keys=[l_orderkey#66L], functions=[sum(l_quantity#70)])\n               +- Join LeftSemi, (l_orderkey#18L = l_orderkey#66L)\n                  :- LogicalQueryStage Project [l_orderkey#18L, l_quantity#22], ShuffleQueryStage 3\n                  +- Project [l_orderkey#66L]\n                     +- Filter (isnotnull(sum(l_quantity#22)#65) AND (sum(l_quantity#22)#65 > 313.00))\n                        +- LogicalQueryStage Aggregate [l_orderkey#66L], [l_orderkey#66L, sum(l_quantity#70) AS sum(l_quantity#22)#65], HashAggregate(keys=[l_orderkey#66L], functions=[sum(l_quantity#70)])\n"
      },
      "IM" : {
        "inputSizeInBytes" : 30887016336,
        "inputRowCount" : 1070228736
      },
      "PD" : {
        "1" : [ 15254894, 15242554, 15291914, 15304254, 15106814, 15304254, 15279574, 15217874, 15267234, 15279574, 15254894, 15217874, 15193194, 15267234, 15230214, 15279574, 15267234, 15242554, 15280696, 15316594, 15268356, 15254894, 15279574, 15254894, 15341274, 15267234, 15341274, 15254894, 15242554, 15242554, 15217874, 15254894, 15242554, 15217874, 15291914, 15316594, 15304254, 15316594, 15279574, 15143834, 15316594, 15254894, 15267234, 15304254, 15254894, 15242554, 15330056, 15316594, 15254894, 15341274, 15267234, 15279574, 15291914, 15230214, 15254894, 15230214, 15279574, 15365954, 15316594, 15279574, 15254894, 15304254, 15353614, 15242554, 15217874, 15254894, 15316594, 15291914, 15279574, 15328934, 15242554, 15268356, 15279574, 15205534, 15242554, 15291914, 15365954, 15267234, 15280696, 15328934, 15328934, 15267234, 15217874, 15242554, 15180854, 15205534, 15279574, 15119154, 15230214, 15279574, 15217874, 15230214, 15217874, 15193194, 15291914, 15205534, 15205534, 15180854, 15267234, 15243676, 15267234, 15267234, 15217874, 15193194, 15193194, 15316594, 15217874, 15291914, 15279574, 15254894, 15230214, 15205534, 15230214, 15242554, 15330056, 15217874, 15217874, 15291914, 15230214, 15193194, 15279574, 15242554, 15279574, 15193194, 15242554, 15279574, 15353614, 15353614, 15156174, 15279574, 15304254, 15217874, 15291914, 15304254, 15242554, 15205534, 15279574, 15353614, 15291914, 15279574, 15279574, 15291914, 15217874, 15267234, 15267234, 15316594, 15243676, 15254894, 15279574, 15205534, 15193194, 15279574, 15205534, 15353614, 15279574, 15291914, 15341274, 15205534, 15254894, 15291914, 15267234, 15279574, 15291914, 15256016, 15217874, 15143834, 15328934, 15304254, 15267234, 15304254, 15328934, 15193194, 15304254, 15304254, 15304254, 15254894, 15242554, 15304254, 15254894, 15328934, 15279574, 15267234, 15267234, 15205534, 15279574, 15291914, 15217874, 15230214, 15316594, 15390634, 15267234, 15217874, 15304254, 15205534, 15328934, 15316594, 15254894, 15267234, 15217874, 15291914 ],
        "0" : [ 1211514, 1200296, 1223854, 1222732, 1189078, 1200296, 1177860, 1189078, 1200296, 1201418, 1222732, 1211514, 1223854, 1211514, 1224976, 1189078, 1211514, 1200296, 1211514, 1222732, 1211514, 1222732, 1235072, 1211514, 1189078, 1222732, 1200296, 1189078, 1200296, 1211514, 1200296, 1223854, 1211514, 1200296, 1189078, 1211514, 1200296, 1222732, 1200296, 1236194, 1223854, 1211514, 1211514, 1200296, 1189078, 1189078, 1222732, 1211514, 1211514, 1189078, 1200296, 1212636, 1211514, 1223854, 1222732, 1212636, 1212636, 1200296, 1222732, 1222732, 1200296, 1211514, 1211514, 1211514, 1211514, 1200296, 1211514, 1222732, 1211514, 1211514, 1200296, 1222732, 1189078, 1200296, 1222732, 1211514, 1200296, 1222732, 1212636, 1211514, 1211514, 1200296, 1222732, 1222732, 1211514, 1222732, 1177860, 1200296, 1189078, 1177860, 1211514, 1222732, 1223854, 1211514, 1211514, 1189078, 1211514, 1212636, 1177860, 1200296, 1211514, 1233950, 1222732, 1211514, 1211514, 1223854, 1189078, 1211514, 1211514, 1223854, 1200296, 1211514, 1200296, 1223854, 1211514, 1223854, 1189078, 1211514, 1222732, 1200296, 1222732, 1200296, 1200296, 1189078, 1200296, 1223854, 1223854, 1189078, 1233950, 1200296, 1200296, 1200296, 1189078, 1200296, 1211514, 1189078, 1211514, 1200296, 1200296, 1211514, 1211514, 1211514, 1189078, 1200296, 1222732, 1189078, 1222732, 1211514, 1200296, 1236194, 1201418, 1222732, 1200296, 1189078, 1200296, 1222732, 1222732, 1222732, 1222732, 1211514, 1211514, 1189078, 1200296, 1211514, 1200296, 1189078, 1212636, 1200296, 1200296, 1211514, 1222732, 1200296, 1222732, 1222732, 1211514, 1211514, 1200296, 1222732, 1211514, 1222732, 1177860, 1211514, 1189078, 1200296, 1200296, 1246290, 1200296, 1233950, 1222732, 1222732, 1211514, 1211514, 1177860, 1200296, 1201418, 1189078, 1222732, 1189078, 1211514, 1211514 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 16,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "StartTimeInMs" : 1702226714558,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 120773,
        "IOBytes" : {
          "Total" : 44992887641,
          "Details" : {
            "IR" : 8134192655,
            "IW" : 0,
            "SR" : 23572979398,
            "SW" : 13285715588
          }
        }
      }
    },
    "2" : {
      "LQP" : {
        "operators" : {
          "12" : {
            "sign" : 2028529710,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 18640210176,
            "rowCount" : 582506568,
            "isRuntime" : true,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(sum(l_quantity#22)#65) AND (sum(l_quantity#22)#65 > 313.00)) "
          },
          "8" : {
            "sign" : 2053531377,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 720000000,
            "rowCount" : 15000000,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [c_custkey#1L, c_name#2], ShuffleQueryStage 0 "
          },
          "4" : {
            "sign" : -205705738,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 86405457888000000000000000,
            "rowCount" : 1350085279500000000000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_custkey#1L, c_name#2, o_orderkey#9L, o_totalprice#12, o_orderdate#17, l_quantity#22] "
          },
          "15" : {
            "sign" : -228279327,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 14400909648,
            "rowCount" : 600037902,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [l_orderkey#18L, l_quantity#22], ShuffleQueryStage 3 "
          },
          "11" : {
            "sign" : -923033504,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 9320105088,
            "rowCount" : 582506568,
            "isRuntime" : true,
            "predicate" : " (unknown) Project Arguments: [l_orderkey#66L] "
          },
          "9" : {
            "sign" : -699712781,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 5400000000,
            "rowCount" : 150000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (o_orderkey#9L = l_orderkey#66L) "
          },
          "13" : {
            "sign" : -1490265343,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 27960315264,
            "rowCount" : 582506568,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [l_orderkey#66L], [l_orderkey#66L, sum(l_quantity#70) AS sum(l_quantity#22)#65], HashAggregate(keys=[l_orderkey#66L], functions=[sum(l_quantity#70)]) "
          },
          "5" : {
            "sign" : 973468213,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 97206140124000000000000000,
            "rowCount" : 1350085279500000000000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (o_orderkey#9L = l_orderkey#18L) "
          },
          "10" : {
            "sign" : -1551841409,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 6000000000,
            "rowCount" : 150000000,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [o_orderkey#9L, o_custkey#10L, o_totalprice#12, o_orderdate#17], ShuffleQueryStage 1 "
          },
          "6" : {
            "sign" : -664010629,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 126000000000000000,
            "rowCount" : 2250000000000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_custkey#1L, c_name#2, o_orderkey#9L, o_totalprice#12, o_orderdate#17] "
          },
          "1" : {
            "sign" : 1418717011,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
            "sizeInBytes" : 97206140124000000000000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) LocalLimit Arguments: 100 "
          },
          "14" : {
            "sign" : -940284142,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 14400909648,
            "rowCount" : 600037902,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (l_orderkey#18L = l_orderkey#66L) "
          },
          "0" : {
            "sign" : -1311641782,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
            "sizeInBytes" : 7200,
            "rowCount" : 100,
            "isRuntime" : false,
            "predicate" : " (unknown) GlobalLimit Arguments: 100 "
          },
          "2" : {
            "sign" : 1863996084,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 97206140124000000000000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [o_totalprice#12 DESC NULLS LAST, o_orderdate#17 ASC NULLS FIRST], true "
          },
          "7" : {
            "sign" : -1034554981,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 144000000000000000,
            "rowCount" : 2250000000000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (c_custkey#1L = o_custkey#10L) "
          },
          "3" : {
            "sign" : 14862386,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 97206140124000000000000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [c_name#2, c_custkey#1L, o_orderkey#9L, o_orderdate#17, o_totalprice#12], [c_name#2, c_custkey#1L, o_orderkey#9L, o_orderdate#17, o_totalprice#12, sum(l_quantity#22) AS sum(l_quantity)#83] "
          }
        },
        "links" : [ {
          "fromId" : 8,
          "fromName" : "LogicalQueryStage",
          "toId" : 7,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "LogicalQueryStage",
          "toId" : 9,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 13,
          "fromName" : "LogicalQueryStage",
          "toId" : 12,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 12,
          "fromName" : "Filter",
          "toId" : 11,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "Project",
          "toId" : 9,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "Join",
          "toId" : 7,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Join",
          "toId" : 6,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Project",
          "toId" : 5,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 15,
          "fromName" : "LogicalQueryStage",
          "toId" : 14,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "Project",
          "toId" : 14,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 14,
          "fromName" : "Join",
          "toId" : 5,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Join",
          "toId" : 4,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Project",
          "toId" : 3,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Aggregate",
          "toId" : 2,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "LocalLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "LocalLimit",
          "toId" : 0,
          "toName" : "GlobalLimit",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [o_totalprice#12 DESC NULLS LAST, o_orderdate#17 ASC NULLS FIRST], true\n      +- Aggregate [c_name#2, c_custkey#1L, o_orderkey#9L, o_orderdate#17, o_totalprice#12], [c_name#2, c_custkey#1L, o_orderkey#9L, o_orderdate#17, o_totalprice#12, sum(l_quantity#22) AS sum(l_quantity)#83]\n         +- Project [c_custkey#1L, c_name#2, o_orderkey#9L, o_totalprice#12, o_orderdate#17, l_quantity#22]\n            +- Join Inner, (o_orderkey#9L = l_orderkey#18L)\n               :- Project [c_custkey#1L, c_name#2, o_orderkey#9L, o_totalprice#12, o_orderdate#17]\n               :  +- Join Inner, (c_custkey#1L = o_custkey#10L)\n               :     :- LogicalQueryStage Project [c_custkey#1L, c_name#2], ShuffleQueryStage 0\n               :     +- Join LeftSemi, (o_orderkey#9L = l_orderkey#66L)\n               :        :- LogicalQueryStage Project [o_orderkey#9L, o_custkey#10L, o_totalprice#12, o_orderdate#17], ShuffleQueryStage 1\n               :        +- Project [l_orderkey#66L]\n               :           +- Filter (isnotnull(sum(l_quantity#22)#65) AND (sum(l_quantity#22)#65 > 313.00))\n               :              +- LogicalQueryStage Aggregate [l_orderkey#66L], [l_orderkey#66L, sum(l_quantity#70) AS sum(l_quantity#22)#65], HashAggregate(keys=[l_orderkey#66L], functions=[sum(l_quantity#70)])\n               +- Join LeftSemi, (l_orderkey#18L = l_orderkey#66L)\n                  :- LogicalQueryStage Project [l_orderkey#18L, l_quantity#22], ShuffleQueryStage 3\n                  +- Project [l_orderkey#66L]\n                     +- Filter (isnotnull(sum(l_quantity#22)#65) AND (sum(l_quantity#22)#65 > 313.00))\n                        +- LogicalQueryStage Aggregate [l_orderkey#66L], [l_orderkey#66L, sum(l_quantity#70) AS sum(l_quantity#22)#65], HashAggregate(keys=[l_orderkey#66L], functions=[sum(l_quantity#70)])\n"
      },
      "IM" : {
        "inputSizeInBytes" : 77041540176,
        "inputRowCount" : 1930051038
      },
      "PD" : {
        "1" : [ 15254894, 15242554, 15291914, 15304254, 15106814, 15304254, 15279574, 15217874, 15267234, 15279574, 15254894, 15217874, 15193194, 15267234, 15230214, 15279574, 15267234, 15242554, 15280696, 15316594, 15268356, 15254894, 15279574, 15254894, 15341274, 15267234, 15341274, 15254894, 15242554, 15242554, 15217874, 15254894, 15242554, 15217874, 15291914, 15316594, 15304254, 15316594, 15279574, 15143834, 15316594, 15254894, 15267234, 15304254, 15254894, 15242554, 15330056, 15316594, 15254894, 15341274, 15267234, 15279574, 15291914, 15230214, 15254894, 15230214, 15279574, 15365954, 15316594, 15279574, 15254894, 15304254, 15353614, 15242554, 15217874, 15254894, 15316594, 15291914, 15279574, 15328934, 15242554, 15268356, 15279574, 15205534, 15242554, 15291914, 15365954, 15267234, 15280696, 15328934, 15328934, 15267234, 15217874, 15242554, 15180854, 15205534, 15279574, 15119154, 15230214, 15279574, 15217874, 15230214, 15217874, 15193194, 15291914, 15205534, 15205534, 15180854, 15267234, 15243676, 15267234, 15267234, 15217874, 15193194, 15193194, 15316594, 15217874, 15291914, 15279574, 15254894, 15230214, 15205534, 15230214, 15242554, 15330056, 15217874, 15217874, 15291914, 15230214, 15193194, 15279574, 15242554, 15279574, 15193194, 15242554, 15279574, 15353614, 15353614, 15156174, 15279574, 15304254, 15217874, 15291914, 15304254, 15242554, 15205534, 15279574, 15353614, 15291914, 15279574, 15279574, 15291914, 15217874, 15267234, 15267234, 15316594, 15243676, 15254894, 15279574, 15205534, 15193194, 15279574, 15205534, 15353614, 15279574, 15291914, 15341274, 15205534, 15254894, 15291914, 15267234, 15279574, 15291914, 15256016, 15217874, 15143834, 15328934, 15304254, 15267234, 15304254, 15328934, 15193194, 15304254, 15304254, 15304254, 15254894, 15242554, 15304254, 15254894, 15328934, 15279574, 15267234, 15267234, 15205534, 15279574, 15291914, 15217874, 15230214, 15316594, 15390634, 15267234, 15217874, 15304254, 15205534, 15328934, 15316594, 15254894, 15267234, 15217874, 15291914 ],
        "0" : [ 1211514, 1200296, 1223854, 1222732, 1189078, 1200296, 1177860, 1189078, 1200296, 1201418, 1222732, 1211514, 1223854, 1211514, 1224976, 1189078, 1211514, 1200296, 1211514, 1222732, 1211514, 1222732, 1235072, 1211514, 1189078, 1222732, 1200296, 1189078, 1200296, 1211514, 1200296, 1223854, 1211514, 1200296, 1189078, 1211514, 1200296, 1222732, 1200296, 1236194, 1223854, 1211514, 1211514, 1200296, 1189078, 1189078, 1222732, 1211514, 1211514, 1189078, 1200296, 1212636, 1211514, 1223854, 1222732, 1212636, 1212636, 1200296, 1222732, 1222732, 1200296, 1211514, 1211514, 1211514, 1211514, 1200296, 1211514, 1222732, 1211514, 1211514, 1200296, 1222732, 1189078, 1200296, 1222732, 1211514, 1200296, 1222732, 1212636, 1211514, 1211514, 1200296, 1222732, 1222732, 1211514, 1222732, 1177860, 1200296, 1189078, 1177860, 1211514, 1222732, 1223854, 1211514, 1211514, 1189078, 1211514, 1212636, 1177860, 1200296, 1211514, 1233950, 1222732, 1211514, 1211514, 1223854, 1189078, 1211514, 1211514, 1223854, 1200296, 1211514, 1200296, 1223854, 1211514, 1223854, 1189078, 1211514, 1222732, 1200296, 1222732, 1200296, 1200296, 1189078, 1200296, 1223854, 1223854, 1189078, 1233950, 1200296, 1200296, 1200296, 1189078, 1200296, 1211514, 1189078, 1211514, 1200296, 1200296, 1211514, 1211514, 1211514, 1189078, 1200296, 1222732, 1189078, 1222732, 1211514, 1200296, 1236194, 1201418, 1222732, 1200296, 1189078, 1200296, 1222732, 1222732, 1222732, 1222732, 1211514, 1211514, 1189078, 1200296, 1211514, 1200296, 1189078, 1212636, 1200296, 1200296, 1211514, 1222732, 1200296, 1222732, 1222732, 1211514, 1211514, 1200296, 1222732, 1211514, 1222732, 1177860, 1211514, 1189078, 1200296, 1200296, 1246290, 1200296, 1233950, 1222732, 1222732, 1211514, 1211514, 1177860, 1200296, 1201418, 1189078, 1222732, 1189078, 1211514, 1211514 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 16,
        "FinishedTasksNum" : 19,
        "FinishedTasksTotalTimeInMs" : 14118.0,
        "FinishedTasksDistributionInMs" : [ 656.0, 720.0, 748.0, 777.0, 808.0 ]
      },
      "StartTimeInMs" : 1702226756349,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 78982,
        "IOBytes" : {
          "Total" : 33814832472,
          "Details" : {
            "IR" : 4067850010,
            "IW" : 0,
            "SR" : 23572979398,
            "SW" : 6174003064
          }
        }
      }
    },
    "7" : {
      "LQP" : {
        "operators" : {
          "8" : {
            "sign" : -228279327,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 14400909648,
            "rowCount" : 600037902,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [l_orderkey#18L, l_quantity#22], ShuffleQueryStage 3 "
          },
          "4" : {
            "sign" : -1672438057,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 34600585580928,
            "rowCount" : 540634149702,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_custkey#1L, c_name#2, o_orderkey#9L, o_totalprice#12, o_orderdate#17, l_quantity#22] "
          },
          "11" : {
            "sign" : -1490265343,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 27960315264,
            "rowCount" : 582506568,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [l_orderkey#66L], [l_orderkey#66L, sum(l_quantity#70) AS sum(l_quantity#22)#65], HashAggregate(keys=[l_orderkey#66L], functions=[sum(l_quantity#70)]) "
          },
          "9" : {
            "sign" : -923033504,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 9320105088,
            "rowCount" : 582506568,
            "isRuntime" : true,
            "predicate" : " (unknown) Project Arguments: [l_orderkey#66L] "
          },
          "5" : {
            "sign" : -2044629324,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 38925658778544,
            "rowCount" : 540634149702,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (o_orderkey#9L = l_orderkey#18L) "
          },
          "10" : {
            "sign" : 2028529710,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 18640210176,
            "rowCount" : 582506568,
            "isRuntime" : true,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(sum(l_quantity#22)#65) AND (sum(l_quantity#22)#65 > 313.00)) "
          },
          "6" : {
            "sign" : 1314629598,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 64872,
            "rowCount" : 901,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [c_custkey#1L, c_name#2, o_orderkey#9L, o_totalprice#12, o_orderdate#17], ShuffleQueryStage 8 "
          },
          "1" : {
            "sign" : -1124101550,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
            "sizeInBytes" : 38925658778544,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) LocalLimit Arguments: 100 "
          },
          "0" : {
            "sign" : -1296068989,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
            "sizeInBytes" : 7200,
            "rowCount" : 100,
            "isRuntime" : false,
            "predicate" : " (unknown) GlobalLimit Arguments: 100 "
          },
          "2" : {
            "sign" : 1017604761,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 38925658778544,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [o_totalprice#12 DESC NULLS LAST, o_orderdate#17 ASC NULLS FIRST], true "
          },
          "7" : {
            "sign" : -940284142,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 14400909648,
            "rowCount" : 600037902,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (l_orderkey#18L = l_orderkey#66L) "
          },
          "3" : {
            "sign" : -196650703,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 38925658778544,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [c_name#2, c_custkey#1L, o_orderkey#9L, o_orderdate#17, o_totalprice#12], [c_name#2, c_custkey#1L, o_orderkey#9L, o_orderdate#17, o_totalprice#12, sum(l_quantity#22) AS sum(l_quantity)#83] "
          }
        },
        "links" : [ {
          "fromId" : 6,
          "fromName" : "LogicalQueryStage",
          "toId" : 5,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "LogicalQueryStage",
          "toId" : 7,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "LogicalQueryStage",
          "toId" : 10,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "Filter",
          "toId" : 9,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "Project",
          "toId" : 7,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Join",
          "toId" : 5,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Join",
          "toId" : 4,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Project",
          "toId" : 3,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Aggregate",
          "toId" : 2,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "LocalLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "LocalLimit",
          "toId" : 0,
          "toName" : "GlobalLimit",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [o_totalprice#12 DESC NULLS LAST, o_orderdate#17 ASC NULLS FIRST], true\n      +- Aggregate [c_name#2, c_custkey#1L, o_orderkey#9L, o_orderdate#17, o_totalprice#12], [c_name#2, c_custkey#1L, o_orderkey#9L, o_orderdate#17, o_totalprice#12, sum(l_quantity#22) AS sum(l_quantity)#83]\n         +- Project [c_custkey#1L, c_name#2, o_orderkey#9L, o_totalprice#12, o_orderdate#17, l_quantity#22]\n            +- Join Inner, (o_orderkey#9L = l_orderkey#18L)\n               :- LogicalQueryStage Project [c_custkey#1L, c_name#2, o_orderkey#9L, o_totalprice#12, o_orderdate#17], ShuffleQueryStage 8\n               +- Join LeftSemi, (l_orderkey#18L = l_orderkey#66L)\n                  :- LogicalQueryStage Project [l_orderkey#18L, l_quantity#22], ShuffleQueryStage 3\n                  +- Project [l_orderkey#66L]\n                     +- Filter (isnotnull(sum(l_quantity#22)#65) AND (sum(l_quantity#22)#65 > 313.00))\n                        +- LogicalQueryStage Aggregate [l_orderkey#66L], [l_orderkey#66L, sum(l_quantity#70) AS sum(l_quantity#22)#65], HashAggregate(keys=[l_orderkey#66L], functions=[sum(l_quantity#70)])\n"
      },
      "IM" : {
        "inputSizeInBytes" : 42361289784,
        "inputRowCount" : 1182545371
      },
      "PD" : {
        "5" : [ 612, 405, 522, 234, 629, 234, 288, 558, 702, 405, 288, 324, 405, 539, 171, 558, 324, 363, 324, 558, 351, 654, 507, 561, 522, 612, 682, 117, 558, 324, 692, 351, 288, 561, 495, 117, 273, 485, 288, 522, 351, 485, 324, 378, 234, 538, 522, 207, 422, 468, 117, 117, 351, 705, 651, 324, 234, 746, 495, 630, 495, 459, 558, 273, 117, 234, 288, 312, 288, 578, 405, 117, 441, 718, 630, 441, 390, 459, 630, 363, 351, 171, 351, 429, 405, 351, 351, 0, 234, 288, 630, 558, 485, 351, 405, 576, 351, 171, 351, 342, 273, 117, 288, 234, 117, 351, 459, 390, 405, 593, 273, 459, 511, 441, 656, 629, 288, 507, 117, 324, 0, 746, 441, 597, 441, 288, 288, 468, 273, 324, 498, 342, 615, 234, 441, 351, 324, 234, 468, 378, 656, 405, 577, 117, 468, 234, 459, 483, 468, 351, 444, 351, 405, 495, 539, 288, 459, 273, 405, 117, 234, 702, 480, 390, 117, 405, 288, 351, 405, 538, 288, 234, 576, 495, 441, 579, 207, 351, 405, 390, 405, 756, 351, 288, 799, 480, 234, 351, 234, 288, 429, 405, 324, 368, 156, 666, 522, 288, 563, 459 ],
        "3" : [ 32951685, 32958053, 32962799, 32959670, 32976237, 32969325, 32936621, 32960114, 32936556, 32952932, 32969325, 32931387, 32959729, 32937619, 32952997, 32972069, 32952997, 32958166, 32957044, 32962740, 32945963, 32937678, 32969325, 32964150, 32962740, 32960114, 32967145, 32976487, 32946347, 32926837, 32949737, 32924080, 32960851, 32979100, 32958107, 32943878, 32960114, 32954051, 32917972, 32937619, 32937983, 32958303, 32940363, 32908827, 32960114, 32967145, 32940408, 32969325, 32967817, 32989174, 32960055, 32958166, 32911458, 32967021, 32960055, 32949737, 32971956, 32946288, 32940354, 32976487, 32925225, 32944503, 32961733, 32926837, 32939241, 32922893, 32960055, 32967145, 32960114, 32946786, 32952932, 32972069, 32943727, 32948896, 32941779, 32972134, 32969177, 32942540, 32952932, 32948648, 32962740, 32925338, 32962864, 32954435, 32948837, 32962740, 32948837, 32930561, 32925338, 32969325, 32954821, 32960251, 32935298, 32948837, 32928014, 32939241, 32972069, 32943603, 32917869, 32926460, 32972069, 32942677, 32954821, 32945767, 32958053, 32968364, 32979100, 32962936, 32936280, 32940023, 32954945, 32946448, 32962740, 32969449, 32943662, 32960179, 32966900, 32948680, 32948961, 32964091, 32959094, 32922780, 32948783, 32937918, 32960916, 32954821, 32948837, 32943603, 32972069, 32932001, 32972134, 32925279, 32948783, 32946948, 32954821, 32956486, 32951685, 32979035, 32948576, 32960114, 32951581, 32960055, 32946516, 32963988, 32960114, 32928192, 32948837, 32960792, 32958166, 32969706, 32958166, 32940532, 32948961, 32968429, 32952873, 32969830, 32949033, 32966832, 32972010, 32972069, 32931387, 32931263, 32979035, 32953304, 32954880, 32967758, 32948452, 32960114, 32966918, 32969325, 32935233, 32948837, 32948837, 32948511, 32958303, 32967882, 32932509, 32949033, 32950596, 32950765, 32943662, 32961020, 32944399, 32937678, 32969830, 32953069, 32954880, 32951810, 32967383, 32960001, 32957630, 32960114, 32937743, 32929315, 32941851, 32969449, 32926347, 32958107, 32931115, 32943603 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "StartTimeInMs" : 1702226798214,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 37117,
        "IOBytes" : {
          "Total" : 13285643678,
          "Details" : {
            "IR" : 0,
            "IW" : 0,
            "SR" : 13285643678,
            "SW" : 0
          }
        }
      }
    },
    "3" : {
      "LQP" : {
        "operators" : {
          "12" : {
            "sign" : -923033504,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 9320105088,
            "rowCount" : 582506568,
            "isRuntime" : true,
            "predicate" : " (unknown) Project Arguments: [l_orderkey#66L] "
          },
          "8" : {
            "sign" : 2053531377,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 720000000,
            "rowCount" : 15000000,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [c_custkey#1L, c_name#2], ShuffleQueryStage 0 "
          },
          "4" : {
            "sign" : -1121932146,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 38490318208,
            "rowCount" : 601411222,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_custkey#1L, c_name#2, o_orderkey#9L, o_totalprice#12, o_orderdate#17, l_quantity#22] "
          },
          "11" : {
            "sign" : -228279327,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 14400909648,
            "rowCount" : 600037902,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [l_orderkey#18L, l_quantity#22], ShuffleQueryStage 3 "
          },
          "9" : {
            "sign" : -741634659,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 5400000000,
            "rowCount" : 150000000,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Join LeftSemi, (o_orderkey#9L = l_orderkey#66L), ShuffleQueryStage 6 "
          },
          "13" : {
            "sign" : 2028529710,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 18640210176,
            "rowCount" : 582506568,
            "isRuntime" : true,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(sum(l_quantity#22)#65) AND (sum(l_quantity#22)#65 > 313.00)) "
          },
          "5" : {
            "sign" : 604211565,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 43301607984,
            "rowCount" : 601411222,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (o_orderkey#9L = l_orderkey#18L) "
          },
          "10" : {
            "sign" : -940284142,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 14400909648,
            "rowCount" : 600037902,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (l_orderkey#18L = l_orderkey#66L) "
          },
          "6" : {
            "sign" : 61981653,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 126000000000000000,
            "rowCount" : 2250000000000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_custkey#1L, c_name#2, o_orderkey#9L, o_totalprice#12, o_orderdate#17] "
          },
          "1" : {
            "sign" : 955434383,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
            "sizeInBytes" : 43301607984,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) LocalLimit Arguments: 100 "
          },
          "14" : {
            "sign" : -1490265343,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 27960315264,
            "rowCount" : 582506568,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [l_orderkey#66L], [l_orderkey#66L, sum(l_quantity#70) AS sum(l_quantity#22)#65], HashAggregate(keys=[l_orderkey#66L], functions=[sum(l_quantity#70)]) "
          },
          "0" : {
            "sign" : -892875974,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
            "sizeInBytes" : 7200,
            "rowCount" : 100,
            "isRuntime" : false,
            "predicate" : " (unknown) GlobalLimit Arguments: 100 "
          },
          "2" : {
            "sign" : -627044272,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 43301607984,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [o_totalprice#12 DESC NULLS LAST, o_orderdate#17 ASC NULLS FIRST], true "
          },
          "7" : {
            "sign" : 68530007,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 144000000000000000,
            "rowCount" : 2250000000000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (c_custkey#1L = o_custkey#10L) "
          },
          "3" : {
            "sign" : -1617460272,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 43301607984,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [c_name#2, c_custkey#1L, o_orderkey#9L, o_orderdate#17, o_totalprice#12], [c_name#2, c_custkey#1L, o_orderkey#9L, o_orderdate#17, o_totalprice#12, sum(l_quantity#22) AS sum(l_quantity)#83] "
          }
        },
        "links" : [ {
          "fromId" : 8,
          "fromName" : "LogicalQueryStage",
          "toId" : 7,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "LogicalQueryStage",
          "toId" : 7,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Join",
          "toId" : 6,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Project",
          "toId" : 5,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "LogicalQueryStage",
          "toId" : 10,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 14,
          "fromName" : "LogicalQueryStage",
          "toId" : 13,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 13,
          "fromName" : "Filter",
          "toId" : 12,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 12,
          "fromName" : "Project",
          "toId" : 10,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "Join",
          "toId" : 5,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Join",
          "toId" : 4,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Project",
          "toId" : 3,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Aggregate",
          "toId" : 2,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "LocalLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "LocalLimit",
          "toId" : 0,
          "toName" : "GlobalLimit",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [o_totalprice#12 DESC NULLS LAST, o_orderdate#17 ASC NULLS FIRST], true\n      +- Aggregate [c_name#2, c_custkey#1L, o_orderkey#9L, o_orderdate#17, o_totalprice#12], [c_name#2, c_custkey#1L, o_orderkey#9L, o_orderdate#17, o_totalprice#12, sum(l_quantity#22) AS sum(l_quantity)#83]\n         +- Project [c_custkey#1L, c_name#2, o_orderkey#9L, o_totalprice#12, o_orderdate#17, l_quantity#22]\n            +- Join Inner, (o_orderkey#9L = l_orderkey#18L)\n               :- Project [c_custkey#1L, c_name#2, o_orderkey#9L, o_totalprice#12, o_orderdate#17]\n               :  +- Join Inner, (c_custkey#1L = o_custkey#10L)\n               :     :- LogicalQueryStage Project [c_custkey#1L, c_name#2], ShuffleQueryStage 0\n               :     +- LogicalQueryStage Join LeftSemi, (o_orderkey#9L = l_orderkey#66L), ShuffleQueryStage 6\n               +- Join LeftSemi, (l_orderkey#18L = l_orderkey#66L)\n                  :- LogicalQueryStage Project [l_orderkey#18L, l_quantity#22], ShuffleQueryStage 3\n                  +- Project [l_orderkey#66L]\n                     +- Filter (isnotnull(sum(l_quantity#22)#65) AND (sum(l_quantity#22)#65 > 313.00))\n                        +- LogicalQueryStage Aggregate [l_orderkey#66L], [l_orderkey#66L, sum(l_quantity#70) AS sum(l_quantity#22)#65], HashAggregate(keys=[l_orderkey#66L], functions=[sum(l_quantity#70)])\n"
      },
      "IM" : {
        "inputSizeInBytes" : 48481224912,
        "inputRowCount" : 1347544470
      },
      "PD" : {
        "0" : [ 1211514, 1200296, 1223854, 1222732, 1189078, 1200296, 1177860, 1189078, 1200296, 1201418, 1222732, 1211514, 1223854, 1211514, 1224976, 1189078, 1211514, 1200296, 1211514, 1222732, 1211514, 1222732, 1235072, 1211514, 1189078, 1222732, 1200296, 1189078, 1200296, 1211514, 1200296, 1223854, 1211514, 1200296, 1189078, 1211514, 1200296, 1222732, 1200296, 1236194, 1223854, 1211514, 1211514, 1200296, 1189078, 1189078, 1222732, 1211514, 1211514, 1189078, 1200296, 1212636, 1211514, 1223854, 1222732, 1212636, 1212636, 1200296, 1222732, 1222732, 1200296, 1211514, 1211514, 1211514, 1211514, 1200296, 1211514, 1222732, 1211514, 1211514, 1200296, 1222732, 1189078, 1200296, 1222732, 1211514, 1200296, 1222732, 1212636, 1211514, 1211514, 1200296, 1222732, 1222732, 1211514, 1222732, 1177860, 1200296, 1189078, 1177860, 1211514, 1222732, 1223854, 1211514, 1211514, 1189078, 1211514, 1212636, 1177860, 1200296, 1211514, 1233950, 1222732, 1211514, 1211514, 1223854, 1189078, 1211514, 1211514, 1223854, 1200296, 1211514, 1200296, 1223854, 1211514, 1223854, 1189078, 1211514, 1222732, 1200296, 1222732, 1200296, 1200296, 1189078, 1200296, 1223854, 1223854, 1189078, 1233950, 1200296, 1200296, 1200296, 1189078, 1200296, 1211514, 1189078, 1211514, 1200296, 1200296, 1211514, 1211514, 1211514, 1189078, 1200296, 1222732, 1189078, 1222732, 1211514, 1200296, 1236194, 1201418, 1222732, 1200296, 1189078, 1200296, 1222732, 1222732, 1222732, 1222732, 1211514, 1211514, 1189078, 1200296, 1211514, 1200296, 1189078, 1212636, 1200296, 1200296, 1211514, 1222732, 1200296, 1222732, 1222732, 1211514, 1211514, 1200296, 1222732, 1211514, 1222732, 1177860, 1211514, 1189078, 1200296, 1200296, 1246290, 1200296, 1233950, 1222732, 1222732, 1211514, 1211514, 1177860, 1200296, 1201418, 1189078, 1222732, 1189078, 1211514, 1211514 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 16,
        "FinishedTasksNum" : 21,
        "FinishedTasksTotalTimeInMs" : 15734.0,
        "FinishedTasksDistributionInMs" : [ 656.0, 721.0, 749.0, 777.0, 849.0 ]
      },
      "StartTimeInMs" : 1702226756538,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 78793,
        "IOBytes" : {
          "Total" : 33814832472,
          "Details" : {
            "IR" : 4067850010,
            "IW" : 0,
            "SR" : 23572979398,
            "SW" : 6174003064
          }
        }
      }
    }
  },
  "RuntimeQSs" : {
    "8" : {
      "QSLogical" : {
        "operators" : {
          "8" : {
            "sign" : -923033504,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 9320105088,
                "rowCount" : 582506568
              },
              "compileTime" : {
                "sizeInBytes" : 9320105088,
                "rowCount" : 582506568
              }
            },
            "isRuntime" : true,
            "predicate" : " (unknown) Project Arguments: [l_orderkey#66L] "
          },
          "4" : {
            "sign" : -1672438057,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 34600585580928,
                "rowCount" : 540634149702
              },
              "compileTime" : {
                "sizeInBytes" : 34600585580928,
                "rowCount" : 540634149702
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_custkey#1L, c_name#2, o_orderkey#9L, o_totalprice#12, o_orderdate#17, l_quantity#22] "
          },
          "9" : {
            "sign" : 2028529710,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 18640210176,
                "rowCount" : 582506568
              },
              "compileTime" : {
                "sizeInBytes" : 18640210176,
                "rowCount" : 582506568
              }
            },
            "isRuntime" : true,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(sum(l_quantity#22)#65) AND (sum(l_quantity#22)#65 > 313.00)) "
          },
          "5" : {
            "sign" : -2044629324,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 38925658778544,
                "rowCount" : 540634149702
              },
              "compileTime" : {
                "sizeInBytes" : 38925658778544,
                "rowCount" : 540634149702
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (o_orderkey#9L = l_orderkey#18L) "
          },
          "10" : {
            "sign" : -1490265343,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 27960315264,
                "rowCount" : 582506568
              },
              "compileTime" : {
                "sizeInBytes" : 4883053344,
                "rowCount" : 152595417
              }
            },
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [l_orderkey#66L], [l_orderkey#66L, sum(l_quantity#70) AS sum(l_quantity#22)#65], HashAggregate(keys=[l_orderkey#66L], functions=[sum(l_quantity#70)]) "
          },
          "6" : {
            "sign" : -940284142,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 14400909648,
                "rowCount" : 600037902
              },
              "compileTime" : {
                "sizeInBytes" : 14400909648,
                "rowCount" : 600037902
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (l_orderkey#18L = l_orderkey#66L) "
          },
          "1" : {
            "sign" : -1124101550,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 38925658778544,
                "rowCount" : -1
              },
              "compileTime" : {
                "sizeInBytes" : 38925658778544,
                "rowCount" : -1
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) LocalLimit Arguments: 100 "
          },
          "0" : {
            "sign" : -1296068989,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 7200,
                "rowCount" : 100
              },
              "compileTime" : {
                "sizeInBytes" : 7200,
                "rowCount" : 100
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) GlobalLimit Arguments: 100 "
          },
          "2" : {
            "sign" : 1017604761,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 38925658778544,
                "rowCount" : -1
              },
              "compileTime" : {
                "sizeInBytes" : 38925658778544,
                "rowCount" : -1
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [o_totalprice#12 DESC NULLS LAST, o_orderdate#17 ASC NULLS FIRST], true "
          },
          "7" : {
            "sign" : -228279327,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 14400909648,
                "rowCount" : 600037902
              },
              "compileTime" : {
                "sizeInBytes" : 14400909648,
                "rowCount" : 600037902
              }
            },
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [l_orderkey#18L, l_quantity#22], ShuffleQueryStage 3 "
          },
          "3" : {
            "sign" : -196650703,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 38925658778544,
                "rowCount" : -1
              },
              "compileTime" : {
                "sizeInBytes" : 38925658778544,
                "rowCount" : -1
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [c_name#2, c_custkey#1L, o_orderkey#9L, o_orderdate#17, o_totalprice#12], [c_name#2, c_custkey#1L, o_orderkey#9L, o_orderdate#17, o_totalprice#12, sum(l_quantity#22) AS sum(l_quantity)#83] "
          }
        },
        "links" : [ {
          "fromId" : 7,
          "fromName" : "LogicalQueryStage",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "LogicalQueryStage",
          "toId" : 9,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "Filter",
          "toId" : 8,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "Project",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Join",
          "toId" : 5,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Join",
          "toId" : 4,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Project",
          "toId" : 3,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Aggregate",
          "toId" : 2,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "LocalLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "LocalLimit",
          "toId" : 0,
          "toName" : "GlobalLimit",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [o_totalprice#12 DESC NULLS LAST, o_orderdate#17 ASC NULLS FIRST], true\n      +- Aggregate [c_name#2, c_custkey#1L, o_orderkey#9L, o_orderdate#17, o_totalprice#12], [c_name#2, c_custkey#1L, o_orderkey#9L, o_orderdate#17, o_totalprice#12, sum(l_quantity#22) AS sum(l_quantity)#83]\n         +- Project [c_custkey#1L, c_name#2, o_orderkey#9L, o_totalprice#12, o_orderdate#17, l_quantity#22]\n            +- Join Inner, (o_orderkey#9L = l_orderkey#18L)\n               :- LogicalQueryStage Project [c_custkey#1L, c_name#2, o_orderkey#9L, o_totalprice#12, o_orderdate#17], ShuffleQueryStage 8\n               +- Join LeftSemi, (l_orderkey#18L = l_orderkey#66L)\n                  :- LogicalQueryStage Project [l_orderkey#18L, l_quantity#22], ShuffleQueryStage 3\n                  +- Project [l_orderkey#66L]\n                     +- Filter (isnotnull(sum(l_quantity#22)#65) AND (sum(l_quantity#22)#65 > 313.00))\n                        +- LogicalQueryStage Aggregate [l_orderkey#66L], [l_orderkey#66L, sum(l_quantity#70) AS sum(l_quantity#22)#65], HashAggregate(keys=[l_orderkey#66L], functions=[sum(l_quantity#70)])\n"
      },
      "QSPhysical" : {
        "operators" : {
          "12" : {
            "sign" : -105176176,
            "className" : "org.apache.spark.sql.execution.aggregate.HashAggregateExec",
            "sizeInBytes" : 27960315264,
            "rowCount" : 582506568,
            "isRuntime" : true,
            "predicate" : " (unknown) HashAggregate Input [3]: [l_orderkey#66L, sum#96, isEmpty#97] Keys [1]: [l_orderkey#66L] Functions [1]: [sum(l_quantity#70)] Aggregate Attributes [1]: [sum(l_quantity#70)#64] Results [2]: [l_orderkey#66L, sum(l_quantity#70)#64 AS sum(l_quantity#22)#65] "
          },
          "8" : {
            "sign" : -761043157,
            "className" : "org.apache.spark.sql.execution.adaptive.ShuffleQueryStageExec",
            "sizeInBytes" : 14400909648,
            "rowCount" : 600037902,
            "isRuntime" : true,
            "predicate" : " (unknown) ShuffleQueryStage Output [2]: [l_orderkey#18L, l_quantity#22] Arguments: 3 "
          },
          "4" : {
            "sign" : 908747522,
            "className" : "org.apache.spark.sql.execution.joins.BroadcastHashJoinExec",
            "sizeInBytes" : 38925658778544,
            "rowCount" : 540634149702,
            "isRuntime" : false,
            "predicate" : " (unknown) BroadcastHashJoin Left keys [1]: [o_orderkey#9L] Right keys [1]: [l_orderkey#18L] Join type: Inner Join condition: None "
          },
          "11" : {
            "sign" : -643854091,
            "className" : "org.apache.spark.sql.execution.FilterExec",
            "sizeInBytes" : 18640210176,
            "rowCount" : 582506568,
            "isRuntime" : true,
            "predicate" : " (unknown) Filter Input [2]: [l_orderkey#66L, sum(l_quantity#22)#65] Condition : (isnotnull(sum(l_quantity#22)#65) AND (sum(l_quantity#22)#65 > 313.00)) "
          },
          "9" : {
            "sign" : 1458690966,
            "className" : "org.apache.spark.sql.execution.SortExec",
            "sizeInBytes" : -1,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Input [1]: [l_orderkey#66L] Arguments: [l_orderkey#66L ASC NULLS FIRST], false, 0 "
          },
          "13" : {
            "sign" : -934676754,
            "className" : "org.apache.spark.sql.execution.adaptive.ShuffleQueryStageExec",
            "sizeInBytes" : 4883053344,
            "rowCount" : 152595417,
            "isRuntime" : false,
            "predicate" : " (unknown) ShuffleQueryStage Output [3]: [l_orderkey#66L, sum#96, isEmpty#97] Arguments: 5 "
          },
          "5" : {
            "sign" : -765252625,
            "className" : "org.apache.spark.sql.execution.adaptive.BroadcastQueryStageExec",
            "sizeInBytes" : 1081344,
            "rowCount" : 901,
            "isRuntime" : true,
            "predicate" : " (unknown) BroadcastQueryStage Output [5]: [c_custkey#1L, c_name#2, o_orderkey#9L, o_totalprice#12, o_orderdate#17] Arguments: 9 "
          },
          "10" : {
            "sign" : -554213265,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 9320105088,
            "rowCount" : 582506568,
            "isRuntime" : true,
            "predicate" : " (unknown) Project Output [1]: [l_orderkey#66L] Input [2]: [l_orderkey#66L, sum(l_quantity#22)#65] "
          },
          "6" : {
            "sign" : 404462984,
            "className" : "org.apache.spark.sql.execution.joins.SortMergeJoinExec",
            "sizeInBytes" : 14400909648,
            "rowCount" : 600037902,
            "isRuntime" : false,
            "predicate" : " (unknown) SortMergeJoin Left keys [1]: [l_orderkey#18L] Right keys [1]: [l_orderkey#66L] Join type: LeftSemi Join condition: None "
          },
          "1" : {
            "sign" : 2037492490,
            "className" : "org.apache.spark.sql.execution.aggregate.HashAggregateExec",
            "sizeInBytes" : 38925658778544,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) HashAggregate Input [7]: [c_name#2, c_custkey#1L, o_orderkey#9L, o_orderdate#17, o_totalprice#12, sum#92, isEmpty#93] Keys [5]: [c_name#2, c_custkey#1L, o_orderkey#9L, o_orderdate#17, o_totalprice#12] Functions [1]: [sum(l_quantity#22)] Aggregate Attributes [1]: [sum(l_quantity#22)#82] Results [6]: [c_name#2, c_custkey#1L, o_orderkey#9L, o_orderdate#17, o_totalprice#12, sum(l_quantity#22)#82 AS sum(l_quantity)#83] "
          },
          "0" : {
            "sign" : -1069866619,
            "className" : "org.apache.spark.sql.execution.TakeOrderedAndProjectExec",
            "sizeInBytes" : 7200,
            "rowCount" : 100,
            "isRuntime" : false,
            "predicate" : " (unknown) TakeOrderedAndProject Input [6]: [c_name#2, c_custkey#1L, o_orderkey#9L, o_orderdate#17, o_totalprice#12, sum(l_quantity)#83] Arguments: 100, [o_totalprice#12 DESC NULLS LAST, o_orderdate#17 ASC NULLS FIRST], [c_name#2, c_custkey#1L, o_orderkey#9L, o_orderdate#17, o_totalprice#12, sum(l_quantity)#83] "
          },
          "2" : {
            "sign" : 1792619610,
            "className" : "org.apache.spark.sql.execution.aggregate.HashAggregateExec",
            "sizeInBytes" : 38925658778544,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) HashAggregate Input [6]: [c_custkey#1L, c_name#2, o_orderkey#9L, o_totalprice#12, o_orderdate#17, l_quantity#22] Keys [5]: [c_name#2, c_custkey#1L, o_orderkey#9L, o_orderdate#17, o_totalprice#12] Functions [1]: [partial_sum(l_quantity#22)] Aggregate Attributes [2]: [sum#90, isEmpty#91] Results [7]: [c_name#2, c_custkey#1L, o_orderkey#9L, o_orderdate#17, o_totalprice#12, sum#92, isEmpty#93] "
          },
          "7" : {
            "sign" : -1341940091,
            "className" : "org.apache.spark.sql.execution.SortExec",
            "sizeInBytes" : -1,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Input [2]: [l_orderkey#18L, l_quantity#22] Arguments: [l_orderkey#18L ASC NULLS FIRST], false, 0 "
          },
          "3" : {
            "sign" : -1721303723,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 34600585580928,
            "rowCount" : 540634149702,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [6]: [c_custkey#1L, c_name#2, o_orderkey#9L, o_totalprice#12, o_orderdate#17, l_quantity#22] Input [7]: [c_custkey#1L, c_name#2, o_orderkey#9L, o_totalprice#12, o_orderdate#17, l_orderkey#18L, l_quantity#22] "
          }
        },
        "links" : [ {
          "fromId" : 5,
          "fromName" : "BroadcastQueryStage",
          "toId" : 4,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "ShuffleQueryStage",
          "toId" : 7,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Sort",
          "toId" : 6,
          "toName" : "SortMergeJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 13,
          "fromName" : "ShuffleQueryStage",
          "toId" : 12,
          "toName" : "HashAggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 12,
          "fromName" : "HashAggregate",
          "toId" : 11,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "Filter",
          "toId" : 10,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "Project",
          "toId" : 9,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "Sort",
          "toId" : 6,
          "toName" : "SortMergeJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "SortMergeJoin",
          "toId" : 4,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "BroadcastHashJoin",
          "toId" : 3,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Project",
          "toId" : 2,
          "toName" : "HashAggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "HashAggregate",
          "toId" : 1,
          "toName" : "HashAggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "HashAggregate",
          "toId" : 0,
          "toName" : "TakeOrderedAndProject",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "TakeOrderedAndProject(limit=100, orderBy=[o_totalprice#12 DESC NULLS LAST,o_orderdate#17 ASC NULLS FIRST], output=[c_name#2,c_custkey#1L,o_orderkey#9L,o_orderdate#17,o_totalprice#12,sum(l_quantity)#83])\n+- HashAggregate(keys=[c_name#2, c_custkey#1L, o_orderkey#9L, o_orderdate#17, o_totalprice#12], functions=[sum(l_quantity#22)], output=[c_name#2, c_custkey#1L, o_orderkey#9L, o_orderdate#17, o_totalprice#12, sum(l_quantity)#83])\n   +- HashAggregate(keys=[c_name#2, c_custkey#1L, o_orderkey#9L, o_orderdate#17, o_totalprice#12], functions=[partial_sum(l_quantity#22)], output=[c_name#2, c_custkey#1L, o_orderkey#9L, o_orderdate#17, o_totalprice#12, sum#92, isEmpty#93])\n      +- Project [c_custkey#1L, c_name#2, o_orderkey#9L, o_totalprice#12, o_orderdate#17, l_quantity#22]\n         +- BroadcastHashJoin [o_orderkey#9L], [l_orderkey#18L], Inner, BuildLeft, false\n            :- BroadcastQueryStage 9\n            :  +- BroadcastExchange HashedRelationBroadcastMode(List(input[2, bigint, true]),false), [plan_id=849]\n            :     +- AQEShuffleRead local\n            :        +- ShuffleQueryStage 8\n            :           +- Exchange hashpartitioning(o_orderkey#9L, 200), ENSURE_REQUIREMENTS, [plan_id=790]\n            :              +- *(9) Project [c_custkey#1L, c_name#2, o_orderkey#9L, o_totalprice#12, o_orderdate#17]\n            :                 +- *(9) BroadcastHashJoin [c_custkey#1L], [o_custkey#10L], Inner, BuildRight, false\n            :                    :- AQEShuffleRead local\n            :                    :  +- ShuffleQueryStage 0\n            :                    :     +- Exchange hashpartitioning(c_custkey#1L, 200), ENSURE_REQUIREMENTS, [plan_id=200]\n            :                    :        +- *(1) Project [c_custkey#1L, c_name#2]\n            :                    :           +- *(1) Filter isnotnull(c_custkey#1L)\n            :                    :              +- *(1) ColumnarToRow\n            :                    :                 +- FileScan parquet spark_catalog.tpch_100.customer[c_custkey#1L,c_name#2,c_mktsegment#8] Batched: true, DataFilters: [isnotnull(c_custkey#1L)], Format: Parquet, Location: CatalogFileIndex(1 paths)[hdfs://node1-opa:8020/user/spark_benchmark/tpch_100/dataset/customer], PartitionFilters: [], PushedFilters: [IsNotNull(c_custkey)], ReadSchema: struct<c_custkey:bigint,c_name:string>\n            :                    +- BroadcastQueryStage 7\n            :                       +- BroadcastExchange HashedRelationBroadcastMode(List(input[1, bigint, false]),false), [plan_id=711]\n            :                          +- AQEShuffleRead local\n            :                             +- ShuffleQueryStage 6\n            :                                +- Exchange hashpartitioning(o_custkey#10L, 200), ENSURE_REQUIREMENTS, [plan_id=504]\n            :                                   +- *(8) SortMergeJoin [o_orderkey#9L], [l_orderkey#66L], LeftSemi\n            :                                      :- *(6) Sort [o_orderkey#9L ASC NULLS FIRST], false, 0\n            :                                      :  +- ShuffleQueryStage 1\n            :                                      :     +- Exchange hashpartitioning(o_orderkey#9L, 200), ENSURE_REQUIREMENTS, [plan_id=219]\n            :                                      :        +- *(2) Filter (isnotnull(o_custkey#10L) AND isnotnull(o_orderkey#9L))\n            :                                      :           +- *(2) ColumnarToRow\n            :                                      :              +- FileScan parquet spark_catalog.tpch_100.orders[o_orderkey#9L,o_custkey#10L,o_totalprice#12,o_orderdate#17] Batched: true, DataFilters: [isnotnull(o_custkey#10L), isnotnull(o_orderkey#9L)], Format: Parquet, Location: CatalogFileIndex(1 paths)[hdfs://node1-opa:8020/user/spark_benchmark/tpch_100/dataset/orders], PartitionFilters: [], PushedFilters: [IsNotNull(o_custkey), IsNotNull(o_orderkey)], ReadSchema: struct<o_orderkey:bigint,o_custkey:bigint,o_totalprice:decimal(12,2)>\n            :                                      +- *(7) Sort [l_orderkey#66L ASC NULLS FIRST], false, 0\n            :                                         +- *(7) Project [l_orderkey#66L]\n            :                                            +- *(7) Filter (isnotnull(sum(l_quantity#22)#65) AND (sum(l_quantity#22)#65 > 313.00))\n            :                                               +- *(7) HashAggregate(keys=[l_orderkey#66L], functions=[sum(l_quantity#70)], output=[l_orderkey#66L, sum(l_quantity#22)#65])\n            :                                                  +- ShuffleQueryStage 2\n            :                                                     +- Exchange hashpartitioning(l_orderkey#66L, 200), ENSURE_REQUIREMENTS, [plan_id=238]\n            :                                                        +- *(3) HashAggregate(keys=[l_orderkey#66L], functions=[partial_sum(l_quantity#70)], output=[l_orderkey#66L, sum#96, isEmpty#97])\n            :                                                           +- *(3) Project [l_orderkey#66L, l_quantity#70]\n            :                                                              +- *(3) ColumnarToRow\n            :                                                                 +- FileScan parquet spark_catalog.tpch_100.lineitem[l_orderkey#66L,l_quantity#70,l_shipdate#81] Batched: true, DataFilters: [], Format: Parquet, Location: CatalogFileIndex(1 paths)[hdfs://node1-opa:8020/user/spark_benchmark/tpch_100/dataset/lineitem], PartitionFilters: [], PushedFilters: [], ReadSchema: struct<l_orderkey:bigint,l_quantity:decimal(12,2)>\n            +- SortMergeJoin [l_orderkey#18L], [l_orderkey#66L], LeftSemi\n               :- Sort [l_orderkey#18L ASC NULLS FIRST], false, 0\n               :  +- ShuffleQueryStage 3\n               :     +- Exchange hashpartitioning(l_orderkey#18L, 200), ENSURE_REQUIREMENTS, [plan_id=276]\n               :        +- *(4) Project [l_orderkey#18L, l_quantity#22]\n               :           +- *(4) Filter isnotnull(l_orderkey#18L)\n               :              +- *(4) ColumnarToRow\n               :                 +- FileScan parquet spark_catalog.tpch_100.lineitem[l_orderkey#18L,l_quantity#22,l_shipdate#33] Batched: true, DataFilters: [isnotnull(l_orderkey#18L)], Format: Parquet, Location: CatalogFileIndex(1 paths)[hdfs://node1-opa:8020/user/spark_benchmark/tpch_100/dataset/lineitem], PartitionFilters: [], PushedFilters: [IsNotNull(l_orderkey)], ReadSchema: struct<l_orderkey:bigint,l_quantity:decimal(12,2)>\n               +- Sort [l_orderkey#66L ASC NULLS FIRST], false, 0\n                  +- Project [l_orderkey#66L]\n                     +- Filter (isnotnull(sum(l_quantity#22)#65) AND (sum(l_quantity#22)#65 > 313.00))\n                        +- HashAggregate(keys=[l_orderkey#66L], functions=[sum(l_quantity#70)], output=[l_orderkey#66L, sum(l_quantity#22)#65])\n                           +- ShuffleQueryStage 5\n                              +- ReusedExchange [l_orderkey#66L, sum#96, isEmpty#97], Exchange hashpartitioning(l_orderkey#66L, 200), ENSURE_REQUIREMENTS, [plan_id=238]\n"
      },
      "IM" : {
        "inputSizeInBytes" : 42362306256,
        "inputRowCount" : 1182545371
      },
      "InitialPartitionNum" : 1,
      "PD" : {
        "2" : [ 36437823, 36350979, 36342687, 36471968, 36405271, 36382101, 36352421, 36382173, 36472040, 36478417, 36420135, 36390092, 36283251, 36301968, 36376519, 36431321, 36256184, 36365922, 36273589, 36378190, 36390768, 36451271, 36395746, 36365832, 36437626, 36342687, 36477263, 36458546, 36405408, 36342853, 36368381, 36315620, 36478496, 36383572, 36486774, 36424291, 36315541, 36409485, 36369696, 36329042, 36342766, 36379654, 36362867, 36384567, 36420286, 36393140, 36405980, 36334786, 36404175, 36349811, 36424053, 36360182, 36303129, 36404175, 36311623, 36349883, 36341317, 36342550, 36335584, 36383572, 36309736, 36369761, 36451134, 36244164, 36349294, 36352384, 36432554, 36437777, 36272137, 36411878, 36342687, 36390602, 36397058, 36336091, 36330426, 36419060, 36366898, 36391745, 36512170, 36437864, 36396907, 36322148, 36273668, 36403665, 36440315, 36436393, 36339930, 36419901, 36384096, 36395746, 36341382, 36356426, 36390179, 36327881, 36451134, 36300814, 36424125, 36402062, 36303064, 36367227, 36450038, 36274988, 36370994, 36386709, 36342550, 36422971, 36382252, 36372465, 36329280, 36288395, 36331882, 36300901, 36315469, 36472119, 36380721, 36451350, 36242611, 36352421, 36328047, 36378190, 36395746, 36367992, 36388643, 36322227, 36356426, 36368600, 36410480, 36406569, 36349883, 36307575, 36517982, 36288323, 36437561, 36437777, 36382791, 36387460, 36368600, 36458467, 36424204, 36369833, 36410552, 36382101, 36464923, 36368463, 36310397, 36356426, 36373683, 36301831, 36417748, 36337543, 36301968, 36367227, 36341620, 36336389, 36356188, 36395825, 36349460, 36364855, 36369761, 36355027, 36197385, 36410480, 36499186, 36291633, 36327881, 36300735, 36329042, 36411785, 36474362, 36424053, 36502957, 36424125, 36517831, 36424125, 36410718, 36397145, 36330426, 36393227, 36410814, 36506419, 36326508, 36409398, 36306576, 36371296, 36433953, 36459779, 36502878, 36437698, 36436832, 36451199, 36397058, 36355027, 36342766, 36316774, 36447526, 36397058, 36398075, 36460854, 36429249, 36408097 ],
        "3" : [ 32951685, 32958053, 32962799, 32959670, 32976237, 32969325, 32936621, 32960114, 32936556, 32952932, 32969325, 32931387, 32959729, 32937619, 32952997, 32972069, 32952997, 32958166, 32957044, 32962740, 32945963, 32937678, 32969325, 32964150, 32962740, 32960114, 32967145, 32976487, 32946347, 32926837, 32949737, 32924080, 32960851, 32979100, 32958107, 32943878, 32960114, 32954051, 32917972, 32937619, 32937983, 32958303, 32940363, 32908827, 32960114, 32967145, 32940408, 32969325, 32967817, 32989174, 32960055, 32958166, 32911458, 32967021, 32960055, 32949737, 32971956, 32946288, 32940354, 32976487, 32925225, 32944503, 32961733, 32926837, 32939241, 32922893, 32960055, 32967145, 32960114, 32946786, 32952932, 32972069, 32943727, 32948896, 32941779, 32972134, 32969177, 32942540, 32952932, 32948648, 32962740, 32925338, 32962864, 32954435, 32948837, 32962740, 32948837, 32930561, 32925338, 32969325, 32954821, 32960251, 32935298, 32948837, 32928014, 32939241, 32972069, 32943603, 32917869, 32926460, 32972069, 32942677, 32954821, 32945767, 32958053, 32968364, 32979100, 32962936, 32936280, 32940023, 32954945, 32946448, 32962740, 32969449, 32943662, 32960179, 32966900, 32948680, 32948961, 32964091, 32959094, 32922780, 32948783, 32937918, 32960916, 32954821, 32948837, 32943603, 32972069, 32932001, 32972134, 32925279, 32948783, 32946948, 32954821, 32956486, 32951685, 32979035, 32948576, 32960114, 32951581, 32960055, 32946516, 32963988, 32960114, 32928192, 32948837, 32960792, 32958166, 32969706, 32958166, 32940532, 32948961, 32968429, 32952873, 32969830, 32949033, 32966832, 32972010, 32972069, 32931387, 32931263, 32979035, 32953304, 32954880, 32967758, 32948452, 32960114, 32966918, 32969325, 32935233, 32948837, 32948837, 32948511, 32958303, 32967882, 32932509, 32949033, 32950596, 32950765, 32943662, 32961020, 32944399, 32937678, 32969830, 32953069, 32954880, 32951810, 32967383, 32960001, 32957630, 32960114, 32937743, 32929315, 32941851, 32969449, 32926347, 32958107, 32931115, 32943603 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 8,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 20 ],
      "Objectives" : {
        "DurationInMs" : 36737,
        "TotalTasksDurationInMs" : 571776,
        "IOBytes" : {
          "Total" : 13285567223,
          "Details" : {
            "IR" : 0,
            "IW" : 0,
            "SR" : 13285567223,
            "SW" : 0
          }
        }
      }
    },
    "4" : {
      "QSLogical" : {
        "operators" : {
          "0" : {
            "sign" : 201515433,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 5400000000,
                "rowCount" : 150000000
              },
              "compileTime" : {
                "sizeInBytes" : 5400000000,
                "rowCount" : 150000000
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (o_orderkey#9L = l_orderkey#66L) "
          },
          "1" : {
            "sign" : 1049944871,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 2441526672,
                "rowCount" : 152595417
              },
              "compileTime" : {
                "sizeInBytes" : 2441526672,
                "rowCount" : 152595417
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [l_orderkey#66L] "
          },
          "2" : {
            "sign" : -1281946275,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 4883053344,
                "rowCount" : 152595417
              },
              "compileTime" : {
                "sizeInBytes" : 4883053344,
                "rowCount" : 152595417
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(sum(l_quantity#22)#65) AND (sum(l_quantity#22)#65 > 313.00)) "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "Filter",
          "toId" : 1,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Project",
          "toId" : 0,
          "toName" : "Join",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Join LeftSemi, (o_orderkey#9L = l_orderkey#66L)\n:- Project [o_orderkey#9L, o_custkey#10L, o_totalprice#12, o_orderdate#17]\n:  +- Filter (isnotnull(o_custkey#10L) AND isnotnull(o_orderkey#9L))\n:     +- Relation spark_catalog.tpch_100.orders[o_orderkey#9L,o_custkey#10L,o_orderstatus#11,o_totalprice#12,o_orderpriority#13,o_clerk#14,o_shippriority#15,o_comment#16,o_orderdate#17] parquet\n+- Project [l_orderkey#66L]\n   +- Filter (isnotnull(sum(l_quantity#22)#65) AND (sum(l_quantity#22)#65 > 313.00))\n      +- Aggregate [l_orderkey#66L], [l_orderkey#66L, sum(l_quantity#70) AS sum(l_quantity#22)#65]\n         +- Project [l_orderkey#66L, l_quantity#70]\n            +- Relation spark_catalog.tpch_100.lineitem[l_orderkey#66L,l_partkey#67L,l_suppkey#68L,l_linenumber#69,l_quantity#70,l_extendedprice#71,l_discount#72,l_tax#73,l_returnflag#74,l_linestatus#75,l_commitdate#76,l_receiptdate#77,l_shipinstruct#78,l_shipmode#79,l_comment#80,l_shipdate#81] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "4" : {
            "sign" : 1824138429,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 2441526672,
            "rowCount" : 152595417,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [1]: [l_orderkey#66L] Input [2]: [l_orderkey#66L, sum(l_quantity#22)#65] "
          },
          "5" : {
            "sign" : 2001823277,
            "className" : "org.apache.spark.sql.execution.FilterExec",
            "sizeInBytes" : 4883053344,
            "rowCount" : 152595417,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Input [2]: [l_orderkey#66L, sum(l_quantity#22)#65] Condition : (isnotnull(sum(l_quantity#22)#65) AND (sum(l_quantity#22)#65 > 313.00)) "
          },
          "6" : {
            "sign" : 2126746236,
            "className" : "org.apache.spark.sql.execution.aggregate.HashAggregateExec",
            "sizeInBytes" : 27960315264,
            "rowCount" : 582506568,
            "isRuntime" : true,
            "predicate" : " (unknown) HashAggregate Input [3]: [l_orderkey#66L, sum#96, isEmpty#97] Keys [1]: [l_orderkey#66L] Functions [1]: [sum(l_quantity#70)] Aggregate Attributes [1]: [sum(l_quantity#70)#64] Results [2]: [l_orderkey#66L, sum(l_quantity#70)#64 AS sum(l_quantity#22)#65] "
          },
          "1" : {
            "sign" : -2038121176,
            "className" : "org.apache.spark.sql.execution.SortExec",
            "sizeInBytes" : -1,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Input [4]: [o_orderkey#9L, o_custkey#10L, o_totalprice#12, o_orderdate#17] Arguments: [o_orderkey#9L ASC NULLS FIRST], false, 0 "
          },
          "0" : {
            "sign" : -46345446,
            "className" : "org.apache.spark.sql.execution.joins.SortMergeJoinExec",
            "sizeInBytes" : 5400000000,
            "rowCount" : 150000000,
            "isRuntime" : false,
            "predicate" : " (unknown) SortMergeJoin Left keys [1]: [o_orderkey#9L] Right keys [1]: [l_orderkey#66L] Join type: LeftSemi Join condition: None "
          },
          "2" : {
            "sign" : 722163949,
            "className" : "org.apache.spark.sql.execution.adaptive.ShuffleQueryStageExec",
            "sizeInBytes" : 6000000000,
            "rowCount" : 150000000,
            "isRuntime" : true,
            "predicate" : " (unknown) ShuffleQueryStage Output [4]: [o_orderkey#9L, o_custkey#10L, o_totalprice#12, o_orderdate#17] Arguments: 1 "
          },
          "7" : {
            "sign" : -312744172,
            "className" : "org.apache.spark.sql.execution.adaptive.ShuffleQueryStageExec",
            "sizeInBytes" : 4883053344,
            "rowCount" : 152595417,
            "isRuntime" : false,
            "predicate" : " (unknown) ShuffleQueryStage Output [3]: [l_orderkey#66L, sum#96, isEmpty#97] Arguments: 2 "
          },
          "3" : {
            "sign" : 361172716,
            "className" : "org.apache.spark.sql.execution.SortExec",
            "sizeInBytes" : -1,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Input [1]: [l_orderkey#66L] Arguments: [l_orderkey#66L ASC NULLS FIRST], false, 0 "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "ShuffleQueryStage",
          "toId" : 1,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Sort",
          "toId" : 0,
          "toName" : "SortMergeJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "ShuffleQueryStage",
          "toId" : 6,
          "toName" : "HashAggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "HashAggregate",
          "toId" : 5,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Filter",
          "toId" : 4,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Project",
          "toId" : 3,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Sort",
          "toId" : 0,
          "toName" : "SortMergeJoin",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "SortMergeJoin [o_orderkey#9L], [l_orderkey#66L], LeftSemi\n:- Sort [o_orderkey#9L ASC NULLS FIRST], false, 0\n:  +- ShuffleQueryStage 1\n:     +- Exchange hashpartitioning(o_orderkey#9L, 200), ENSURE_REQUIREMENTS, [plan_id=219]\n:        +- *(2) Filter (isnotnull(o_custkey#10L) AND isnotnull(o_orderkey#9L))\n:           +- *(2) ColumnarToRow\n:              +- FileScan parquet spark_catalog.tpch_100.orders[o_orderkey#9L,o_custkey#10L,o_totalprice#12,o_orderdate#17] Batched: true, DataFilters: [isnotnull(o_custkey#10L), isnotnull(o_orderkey#9L)], Format: Parquet, Location: CatalogFileIndex(1 paths)[hdfs://node1-opa:8020/user/spark_benchmark/tpch_100/dataset/orders], PartitionFilters: [], PushedFilters: [IsNotNull(o_custkey), IsNotNull(o_orderkey)], ReadSchema: struct<o_orderkey:bigint,o_custkey:bigint,o_totalprice:decimal(12,2)>\n+- Sort [l_orderkey#66L ASC NULLS FIRST], false, 0\n   +- Project [l_orderkey#66L]\n      +- Filter (isnotnull(sum(l_quantity#22)#65) AND (sum(l_quantity#22)#65 > 313.00))\n         +- HashAggregate(keys=[l_orderkey#66L], functions=[sum(l_quantity#70)], output=[l_orderkey#66L, sum(l_quantity#22)#65])\n            +- ShuffleQueryStage 2\n               +- Exchange hashpartitioning(l_orderkey#66L, 200), ENSURE_REQUIREMENTS, [plan_id=238]\n                  +- *(3) HashAggregate(keys=[l_orderkey#66L], functions=[partial_sum(l_quantity#70)], output=[l_orderkey#66L, sum#96, isEmpty#97])\n                     +- *(3) Project [l_orderkey#66L, l_quantity#70]\n                        +- *(3) ColumnarToRow\n                           +- FileScan parquet spark_catalog.tpch_100.lineitem[l_orderkey#66L,l_quantity#70,l_shipdate#81] Batched: true, DataFilters: [], Format: Parquet, Location: CatalogFileIndex(1 paths)[hdfs://node1-opa:8020/user/spark_benchmark/tpch_100/dataset/lineitem], PartitionFilters: [], PushedFilters: [], ReadSchema: struct<l_orderkey:bigint,l_quantity:decimal(12,2)>\n"
      },
      "IM" : {
        "inputSizeInBytes" : 33960315264,
        "inputRowCount" : 732506568
      },
      "InitialPartitionNum" : 200,
      "PD" : {
        "2" : [ 36437823, 36350979, 36342687, 36471968, 36405271, 36382101, 36352421, 36382173, 36472040, 36478417, 36420135, 36390092, 36283251, 36301968, 36376519, 36431321, 36256184, 36365922, 36273589, 36378190, 36390768, 36451271, 36395746, 36365832, 36437626, 36342687, 36477263, 36458546, 36405408, 36342853, 36368381, 36315620, 36478496, 36383572, 36486774, 36424291, 36315541, 36409485, 36369696, 36329042, 36342766, 36379654, 36362867, 36384567, 36420286, 36393140, 36405980, 36334786, 36404175, 36349811, 36424053, 36360182, 36303129, 36404175, 36311623, 36349883, 36341317, 36342550, 36335584, 36383572, 36309736, 36369761, 36451134, 36244164, 36349294, 36352384, 36432554, 36437777, 36272137, 36411878, 36342687, 36390602, 36397058, 36336091, 36330426, 36419060, 36366898, 36391745, 36512170, 36437864, 36396907, 36322148, 36273668, 36403665, 36440315, 36436393, 36339930, 36419901, 36384096, 36395746, 36341382, 36356426, 36390179, 36327881, 36451134, 36300814, 36424125, 36402062, 36303064, 36367227, 36450038, 36274988, 36370994, 36386709, 36342550, 36422971, 36382252, 36372465, 36329280, 36288395, 36331882, 36300901, 36315469, 36472119, 36380721, 36451350, 36242611, 36352421, 36328047, 36378190, 36395746, 36367992, 36388643, 36322227, 36356426, 36368600, 36410480, 36406569, 36349883, 36307575, 36517982, 36288323, 36437561, 36437777, 36382791, 36387460, 36368600, 36458467, 36424204, 36369833, 36410552, 36382101, 36464923, 36368463, 36310397, 36356426, 36373683, 36301831, 36417748, 36337543, 36301968, 36367227, 36341620, 36336389, 36356188, 36395825, 36349460, 36364855, 36369761, 36355027, 36197385, 36410480, 36499186, 36291633, 36327881, 36300735, 36329042, 36411785, 36474362, 36424053, 36502957, 36424125, 36517831, 36424125, 36410718, 36397145, 36330426, 36393227, 36410814, 36506419, 36326508, 36409398, 36306576, 36371296, 36433953, 36459779, 36502878, 36437698, 36436832, 36451199, 36397058, 36355027, 36342766, 36316774, 36447526, 36397058, 36398075, 36460854, 36429249, 36408097 ],
        "1" : [ 15254894, 15242554, 15291914, 15304254, 15106814, 15304254, 15279574, 15217874, 15267234, 15279574, 15254894, 15217874, 15193194, 15267234, 15230214, 15279574, 15267234, 15242554, 15280696, 15316594, 15268356, 15254894, 15279574, 15254894, 15341274, 15267234, 15341274, 15254894, 15242554, 15242554, 15217874, 15254894, 15242554, 15217874, 15291914, 15316594, 15304254, 15316594, 15279574, 15143834, 15316594, 15254894, 15267234, 15304254, 15254894, 15242554, 15330056, 15316594, 15254894, 15341274, 15267234, 15279574, 15291914, 15230214, 15254894, 15230214, 15279574, 15365954, 15316594, 15279574, 15254894, 15304254, 15353614, 15242554, 15217874, 15254894, 15316594, 15291914, 15279574, 15328934, 15242554, 15268356, 15279574, 15205534, 15242554, 15291914, 15365954, 15267234, 15280696, 15328934, 15328934, 15267234, 15217874, 15242554, 15180854, 15205534, 15279574, 15119154, 15230214, 15279574, 15217874, 15230214, 15217874, 15193194, 15291914, 15205534, 15205534, 15180854, 15267234, 15243676, 15267234, 15267234, 15217874, 15193194, 15193194, 15316594, 15217874, 15291914, 15279574, 15254894, 15230214, 15205534, 15230214, 15242554, 15330056, 15217874, 15217874, 15291914, 15230214, 15193194, 15279574, 15242554, 15279574, 15193194, 15242554, 15279574, 15353614, 15353614, 15156174, 15279574, 15304254, 15217874, 15291914, 15304254, 15242554, 15205534, 15279574, 15353614, 15291914, 15279574, 15279574, 15291914, 15217874, 15267234, 15267234, 15316594, 15243676, 15254894, 15279574, 15205534, 15193194, 15279574, 15205534, 15353614, 15279574, 15291914, 15341274, 15205534, 15254894, 15291914, 15267234, 15279574, 15291914, 15256016, 15217874, 15143834, 15328934, 15304254, 15267234, 15304254, 15328934, 15193194, 15304254, 15304254, 15304254, 15254894, 15242554, 15304254, 15254894, 15328934, 15279574, 15267234, 15267234, 15205534, 15279574, 15291914, 15217874, 15230214, 15316594, 15390634, 15267234, 15217874, 15304254, 15205534, 15328934, 15316594, 15254894, 15267234, 15217874, 15291914 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 16,
        "FinishedTasksNum" : 19,
        "FinishedTasksTotalTimeInMs" : 14118.0,
        "FinishedTasksDistributionInMs" : [ 656.0, 720.0, 748.0, 777.0, 808.0 ]
      },
      "QueryStageOptimizationId" : 4,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 8 ],
      "Objectives" : {
        "DurationInMs" : 40691,
        "TotalTasksDurationInMs" : 462057,
        "IOBytes" : {
          "Total" : 10054341671,
          "Details" : {
            "IR" : 0,
            "IW" : 0,
            "SR" : 10054269761,
            "SW" : 71910
          }
        }
      }
    },
    "5" : {
      "QSLogical" : {
        "operators" : {
          "0" : {
            "sign" : -741634659,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 36040,
                "rowCount" : 901
              },
              "compileTime" : {
                "sizeInBytes" : 5400000000,
                "rowCount" : 150000000
              }
            },
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Join LeftSemi, (o_orderkey#9L = l_orderkey#66L), ShuffleQueryStage 6 "
          }
        },
        "links" : [ ],
        "rawPlan" : "LogicalQueryStage Join LeftSemi, (o_orderkey#9L = l_orderkey#66L), ShuffleQueryStage 6\n"
      },
      "QSPhysical" : {
        "operators" : {
          "0" : {
            "sign" : 861029411,
            "className" : "org.apache.spark.sql.execution.adaptive.ShuffleQueryStageExec",
            "sizeInBytes" : 36040,
            "rowCount" : 901,
            "isRuntime" : true,
            "predicate" : " (unknown) ShuffleQueryStage Output [4]: [o_orderkey#9L, o_custkey#10L, o_totalprice#12, o_orderdate#17] Arguments: 6 "
          }
        },
        "links" : [ ],
        "rawPlan" : "ShuffleQueryStage 6\n+- Exchange hashpartitioning(o_custkey#10L, 200), ENSURE_REQUIREMENTS, [plan_id=504]\n   +- *(8) SortMergeJoin [o_orderkey#9L], [l_orderkey#66L], LeftSemi\n      :- *(6) Sort [o_orderkey#9L ASC NULLS FIRST], false, 0\n      :  +- ShuffleQueryStage 1\n      :     +- Exchange hashpartitioning(o_orderkey#9L, 200), ENSURE_REQUIREMENTS, [plan_id=219]\n      :        +- *(2) Filter (isnotnull(o_custkey#10L) AND isnotnull(o_orderkey#9L))\n      :           +- *(2) ColumnarToRow\n      :              +- FileScan parquet spark_catalog.tpch_100.orders[o_orderkey#9L,o_custkey#10L,o_totalprice#12,o_orderdate#17] Batched: true, DataFilters: [isnotnull(o_custkey#10L), isnotnull(o_orderkey#9L)], Format: Parquet, Location: CatalogFileIndex(1 paths)[hdfs://node1-opa:8020/user/spark_benchmark/tpch_100/dataset/orders], PartitionFilters: [], PushedFilters: [IsNotNull(o_custkey), IsNotNull(o_orderkey)], ReadSchema: struct<o_orderkey:bigint,o_custkey:bigint,o_totalprice:decimal(12,2)>\n      +- *(7) Sort [l_orderkey#66L ASC NULLS FIRST], false, 0\n         +- *(7) Project [l_orderkey#66L]\n            +- *(7) Filter (isnotnull(sum(l_quantity#22)#65) AND (sum(l_quantity#22)#65 > 313.00))\n               +- *(7) HashAggregate(keys=[l_orderkey#66L], functions=[sum(l_quantity#70)], output=[l_orderkey#66L, sum(l_quantity#22)#65])\n                  +- ShuffleQueryStage 2\n                     +- Exchange hashpartitioning(l_orderkey#66L, 200), ENSURE_REQUIREMENTS, [plan_id=238]\n                        +- *(3) HashAggregate(keys=[l_orderkey#66L], functions=[partial_sum(l_quantity#70)], output=[l_orderkey#66L, sum#96, isEmpty#97])\n                           +- *(3) Project [l_orderkey#66L, l_quantity#70]\n                              +- *(3) ColumnarToRow\n                                 +- FileScan parquet spark_catalog.tpch_100.lineitem[l_orderkey#66L,l_quantity#70,l_shipdate#81] Batched: true, DataFilters: [], Format: Parquet, Location: CatalogFileIndex(1 paths)[hdfs://node1-opa:8020/user/spark_benchmark/tpch_100/dataset/lineitem], PartitionFilters: [], PushedFilters: [], ReadSchema: struct<l_orderkey:bigint,l_quantity:decimal(12,2)>\n"
      },
      "IM" : {
        "inputSizeInBytes" : 36040,
        "inputRowCount" : 901
      },
      "InitialPartitionNum" : 200,
      "PD" : {
        "4" : [ 160, 560, 560, 560, 160, 640, 240, 240, 320, 320, 160, 480, 720, 560, 480, 240, 480, 480, 480, 320, 400, 480, 320, 560, 720, 240, 240, 240, 640, 960, 720, 320, 160, 80, 400, 320, 0, 400, 480, 320, 320, 160, 560, 400, 320, 400, 400, 320, 240, 240, 320, 320, 560, 400, 320, 400, 320, 160, 480, 0, 480, 320, 240, 160, 408, 240, 320, 400, 720, 560, 560, 240, 480, 240, 80, 80, 240, 320, 240, 320, 720, 400, 400, 160, 240, 480, 320, 400, 720, 560, 560, 400, 720, 160, 400, 320, 400, 640, 480, 240, 720, 320, 757, 400, 160, 400, 320, 80, 400, 560, 80, 320, 160, 160, 240, 160, 0, 0, 320, 320, 160, 240, 400, 160, 400, 560, 400, 160, 400, 400, 480, 240, 720, 320, 240, 320, 320, 320, 240, 320, 400, 320, 160, 480, 400, 240, 720, 160, 240, 560, 320, 240, 480, 320, 320, 240, 240, 400, 400, 320, 480, 320, 320, 400, 480, 320, 400, 240, 0, 160, 320, 320, 320, 0, 320, 160, 240, 240, 560, 480, 400, 400, 480, 720, 320, 480, 480, 640, 480, 160, 400, 240, 560, 320, 320, 320, 560, 400, 320, 160 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 5,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 12 ],
      "Objectives" : {
        "DurationInMs" : 44,
        "TotalTasksDurationInMs" : 36,
        "IOBytes" : {
          "Total" : 71910,
          "Details" : {
            "IR" : 0,
            "IW" : 0,
            "SR" : 71910,
            "SW" : 0
          }
        }
      }
    },
    "6" : {
      "QSLogical" : {
        "operators" : {
          "0" : {
            "sign" : 61981653,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 756840000000,
                "rowCount" : 13515000000
              },
              "compileTime" : {
                "sizeInBytes" : 756840000000,
                "rowCount" : 13515000000
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_custkey#1L, c_name#2, o_orderkey#9L, o_totalprice#12, o_orderdate#17] "
          },
          "1" : {
            "sign" : 68530007,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 864960000000,
                "rowCount" : 13515000000
              },
              "compileTime" : {
                "sizeInBytes" : 864960000000,
                "rowCount" : 13515000000
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (c_custkey#1L = o_custkey#10L) "
          },
          "2" : {
            "sign" : 2053531377,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 720000000,
                "rowCount" : 15000000
              },
              "compileTime" : {
                "sizeInBytes" : 690000000,
                "rowCount" : 15000000
              }
            },
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [c_custkey#1L, c_name#2], ShuffleQueryStage 0 "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "LogicalQueryStage",
          "toId" : 1,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Join",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [c_custkey#1L, c_name#2, o_orderkey#9L, o_totalprice#12, o_orderdate#17]\n+- Join Inner, (c_custkey#1L = o_custkey#10L)\n   :- LogicalQueryStage Project [c_custkey#1L, c_name#2], ShuffleQueryStage 0\n   +- LogicalQueryStage Join LeftSemi, (o_orderkey#9L = l_orderkey#66L), ShuffleQueryStage 6\n"
      },
      "QSPhysical" : {
        "operators" : {
          "0" : {
            "sign" : -225165616,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 756840000000,
            "rowCount" : 13515000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [5]: [c_custkey#1L, c_name#2, o_orderkey#9L, o_totalprice#12, o_orderdate#17] Input [6]: [c_custkey#1L, c_name#2, o_orderkey#9L, o_custkey#10L, o_totalprice#12, o_orderdate#17] "
          },
          "1" : {
            "sign" : 1414583452,
            "className" : "org.apache.spark.sql.execution.joins.BroadcastHashJoinExec",
            "sizeInBytes" : 864960000000,
            "rowCount" : 13515000000,
            "isRuntime" : false,
            "predicate" : " (unknown) BroadcastHashJoin Left keys [1]: [c_custkey#1L] Right keys [1]: [o_custkey#10L] Join type: Inner Join condition: None "
          },
          "2" : {
            "sign" : 984423423,
            "className" : "org.apache.spark.sql.execution.adaptive.ShuffleQueryStageExec",
            "sizeInBytes" : 720000000,
            "rowCount" : 15000000,
            "isRuntime" : true,
            "predicate" : " (unknown) ShuffleQueryStage Output [2]: [c_custkey#1L, c_name#2] Arguments: 0 "
          },
          "3" : {
            "sign" : 662395996,
            "className" : "org.apache.spark.sql.execution.adaptive.BroadcastQueryStageExec",
            "sizeInBytes" : 1081344,
            "rowCount" : 901,
            "isRuntime" : true,
            "predicate" : " (unknown) BroadcastQueryStage Output [4]: [o_orderkey#9L, o_custkey#10L, o_totalprice#12, o_orderdate#17] Arguments: 7 "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "ShuffleQueryStage",
          "toId" : 1,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "BroadcastQueryStage",
          "toId" : 1,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "BroadcastHashJoin",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [c_custkey#1L, c_name#2, o_orderkey#9L, o_totalprice#12, o_orderdate#17]\n+- BroadcastHashJoin [c_custkey#1L], [o_custkey#10L], Inner, BuildRight, false\n   :- ShuffleQueryStage 0\n   :  +- Exchange hashpartitioning(c_custkey#1L, 200), ENSURE_REQUIREMENTS, [plan_id=200]\n   :     +- *(1) Project [c_custkey#1L, c_name#2]\n   :        +- *(1) Filter isnotnull(c_custkey#1L)\n   :           +- *(1) ColumnarToRow\n   :              +- FileScan parquet spark_catalog.tpch_100.customer[c_custkey#1L,c_name#2,c_mktsegment#8] Batched: true, DataFilters: [isnotnull(c_custkey#1L)], Format: Parquet, Location: CatalogFileIndex(1 paths)[hdfs://node1-opa:8020/user/spark_benchmark/tpch_100/dataset/customer], PartitionFilters: [], PushedFilters: [IsNotNull(c_custkey)], ReadSchema: struct<c_custkey:bigint,c_name:string>\n   +- BroadcastQueryStage 7\n      +- BroadcastExchange HashedRelationBroadcastMode(List(input[1, bigint, false]),false), [plan_id=711]\n         +- AQEShuffleRead local\n            +- ShuffleQueryStage 6\n               +- Exchange hashpartitioning(o_custkey#10L, 200), ENSURE_REQUIREMENTS, [plan_id=504]\n                  +- *(8) SortMergeJoin [o_orderkey#9L], [l_orderkey#66L], LeftSemi\n                     :- *(6) Sort [o_orderkey#9L ASC NULLS FIRST], false, 0\n                     :  +- ShuffleQueryStage 1\n                     :     +- Exchange hashpartitioning(o_orderkey#9L, 200), ENSURE_REQUIREMENTS, [plan_id=219]\n                     :        +- *(2) Filter (isnotnull(o_custkey#10L) AND isnotnull(o_orderkey#9L))\n                     :           +- *(2) ColumnarToRow\n                     :              +- FileScan parquet spark_catalog.tpch_100.orders[o_orderkey#9L,o_custkey#10L,o_totalprice#12,o_orderdate#17] Batched: true, DataFilters: [isnotnull(o_custkey#10L), isnotnull(o_orderkey#9L)], Format: Parquet, Location: CatalogFileIndex(1 paths)[hdfs://node1-opa:8020/user/spark_benchmark/tpch_100/dataset/orders], PartitionFilters: [], PushedFilters: [IsNotNull(o_custkey), IsNotNull(o_orderkey)], ReadSchema: struct<o_orderkey:bigint,o_custkey:bigint,o_totalprice:decimal(12,2)>\n                     +- *(7) Sort [l_orderkey#66L ASC NULLS FIRST], false, 0\n                        +- *(7) Project [l_orderkey#66L]\n                           +- *(7) Filter (isnotnull(sum(l_quantity#22)#65) AND (sum(l_quantity#22)#65 > 313.00))\n                              +- *(7) HashAggregate(keys=[l_orderkey#66L], functions=[sum(l_quantity#70)], output=[l_orderkey#66L, sum(l_quantity#22)#65])\n                                 +- ShuffleQueryStage 2\n                                    +- Exchange hashpartitioning(l_orderkey#66L, 200), ENSURE_REQUIREMENTS, [plan_id=238]\n                                       +- *(3) HashAggregate(keys=[l_orderkey#66L], functions=[partial_sum(l_quantity#70)], output=[l_orderkey#66L, sum#96, isEmpty#97])\n                                          +- *(3) Project [l_orderkey#66L, l_quantity#70]\n                                             +- *(3) ColumnarToRow\n                                                +- FileScan parquet spark_catalog.tpch_100.lineitem[l_orderkey#66L,l_quantity#70,l_shipdate#81] Batched: true, DataFilters: [], Format: Parquet, Location: CatalogFileIndex(1 paths)[hdfs://node1-opa:8020/user/spark_benchmark/tpch_100/dataset/lineitem], PartitionFilters: [], PushedFilters: [], ReadSchema: struct<l_orderkey:bigint,l_quantity:decimal(12,2)>\n"
      },
      "IM" : {
        "inputSizeInBytes" : 721081344,
        "inputRowCount" : 15000901
      },
      "InitialPartitionNum" : 200,
      "PD" : {
        "0" : [ 1211514, 1200296, 1223854, 1222732, 1189078, 1200296, 1177860, 1189078, 1200296, 1201418, 1222732, 1211514, 1223854, 1211514, 1224976, 1189078, 1211514, 1200296, 1211514, 1222732, 1211514, 1222732, 1235072, 1211514, 1189078, 1222732, 1200296, 1189078, 1200296, 1211514, 1200296, 1223854, 1211514, 1200296, 1189078, 1211514, 1200296, 1222732, 1200296, 1236194, 1223854, 1211514, 1211514, 1200296, 1189078, 1189078, 1222732, 1211514, 1211514, 1189078, 1200296, 1212636, 1211514, 1223854, 1222732, 1212636, 1212636, 1200296, 1222732, 1222732, 1200296, 1211514, 1211514, 1211514, 1211514, 1200296, 1211514, 1222732, 1211514, 1211514, 1200296, 1222732, 1189078, 1200296, 1222732, 1211514, 1200296, 1222732, 1212636, 1211514, 1211514, 1200296, 1222732, 1222732, 1211514, 1222732, 1177860, 1200296, 1189078, 1177860, 1211514, 1222732, 1223854, 1211514, 1211514, 1189078, 1211514, 1212636, 1177860, 1200296, 1211514, 1233950, 1222732, 1211514, 1211514, 1223854, 1189078, 1211514, 1211514, 1223854, 1200296, 1211514, 1200296, 1223854, 1211514, 1223854, 1189078, 1211514, 1222732, 1200296, 1222732, 1200296, 1200296, 1189078, 1200296, 1223854, 1223854, 1189078, 1233950, 1200296, 1200296, 1200296, 1189078, 1200296, 1211514, 1189078, 1211514, 1200296, 1200296, 1211514, 1211514, 1211514, 1189078, 1200296, 1222732, 1189078, 1222732, 1211514, 1200296, 1236194, 1201418, 1222732, 1200296, 1189078, 1200296, 1222732, 1222732, 1222732, 1222732, 1211514, 1211514, 1189078, 1200296, 1211514, 1200296, 1189078, 1212636, 1200296, 1200296, 1211514, 1222732, 1200296, 1222732, 1222732, 1211514, 1211514, 1200296, 1222732, 1211514, 1222732, 1177860, 1211514, 1189078, 1200296, 1200296, 1246290, 1200296, 1233950, 1222732, 1222732, 1211514, 1211514, 1177860, 1200296, 1201418, 1189078, 1222732, 1189078, 1211514, 1211514 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 6,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 14 ],
      "Objectives" : {
        "DurationInMs" : 720,
        "TotalTasksDurationInMs" : 2458,
        "IOBytes" : {
          "Total" : 233070504,
          "Details" : {
            "IR" : 0,
            "IW" : 0,
            "SR" : 232994049,
            "SW" : 76455
          }
        }
      }
    },
    "1" : {
      "QSLogical" : {
        "operators" : {
          "0" : {
            "sign" : 1767575340,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 5400000000,
                "rowCount" : 150000000
              },
              "compileTime" : {
                "sizeInBytes" : 5400000000,
                "rowCount" : 150000000
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [o_orderkey#9L, o_custkey#10L, o_totalprice#12, o_orderdate#17] "
          },
          "1" : {
            "sign" : 768936140,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 24300000000,
                "rowCount" : 150000000
              },
              "compileTime" : {
                "sizeInBytes" : 24300000000,
                "rowCount" : 150000000
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(o_custkey#10L) AND isnotnull(o_orderkey#9L)) "
          },
          "2" : {
            "sign" : -1044726289,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 24300000000,
                "rowCount" : 150000000
              },
              "compileTime" : {
                "sizeInBytes" : 24300000000,
                "rowCount" : 150000000
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [o_orderkey#9L, o_custkey#10L, o_orderstatus#11, o_totalprice#12, o_orderpriority#13, o_clerk#14, o_shippriority#15, o_comment#16, o_orderdate#17], `spark_catalog`.`tpch_100`.`orders`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "LogicalRelation",
          "toId" : 1,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Filter",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [o_orderkey#9L, o_custkey#10L, o_totalprice#12, o_orderdate#17]\n+- Filter (isnotnull(o_custkey#10L) AND isnotnull(o_orderkey#9L))\n   +- Relation spark_catalog.tpch_100.orders[o_orderkey#9L,o_custkey#10L,o_orderstatus#11,o_totalprice#12,o_orderpriority#13,o_clerk#14,o_shippriority#15,o_comment#16,o_orderdate#17] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "0" : {
            "sign" : -407699073,
            "className" : "org.apache.spark.sql.execution.FilterExec",
            "sizeInBytes" : 5400000000,
            "rowCount" : 150000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Input [4]: [o_orderkey#9L, o_custkey#10L, o_totalprice#12, o_orderdate#17] Condition : (isnotnull(o_custkey#10L) AND isnotnull(o_orderkey#9L)) "
          },
          "1" : {
            "sign" : -1411792606,
            "className" : "org.apache.spark.sql.execution.FileSourceScanExec",
            "sizeInBytes" : 5400000000,
            "rowCount" : 150000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Scan parquet spark_catalog.tpch_100.orders Output [4]: [o_orderkey#9L, o_custkey#10L, o_totalprice#12, o_orderdate#17] Batched: true Location: CatalogFileIndex [hdfs://node1-opa:8020/user/spark_benchmark/tpch_100/dataset/orders] PushedFilters: [IsNotNull(o_custkey), IsNotNull(o_orderkey)] ReadSchema: struct<o_orderkey:bigint,o_custkey:bigint,o_totalprice:decimal(12,2)> "
          }
        },
        "links" : [ {
          "fromId" : 1,
          "fromName" : "Scan parquet spark_catalog.tpch_100.orders",
          "toId" : 0,
          "toName" : "Filter",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Filter (isnotnull(o_custkey#10L) AND isnotnull(o_orderkey#9L))\n+- FileScan parquet spark_catalog.tpch_100.orders[o_orderkey#9L,o_custkey#10L,o_totalprice#12,o_orderdate#17] Batched: true, DataFilters: [isnotnull(o_custkey#10L), isnotnull(o_orderkey#9L)], Format: Parquet, Location: CatalogFileIndex(1 paths)[hdfs://node1-opa:8020/user/spark_benchmark/tpch_100/dataset/orders], PartitionFilters: [], PushedFilters: [IsNotNull(o_custkey), IsNotNull(o_orderkey)], ReadSchema: struct<o_orderkey:bigint,o_custkey:bigint,o_totalprice:decimal(12,2)>\n"
      },
      "IM" : {
        "inputSizeInBytes" : 5400000000,
        "inputRowCount" : 150000000
      },
      "InitialPartitionNum" : 0,
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 1,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 2 ],
      "Objectives" : {
        "DurationInMs" : 9005,
        "TotalTasksDurationInMs" : 131903,
        "IOBytes" : {
          "Total" : 5492666794,
          "Details" : {
            "IR" : 2550109557,
            "IW" : 0,
            "SR" : 0,
            "SW" : 2942557237
          }
        }
      }
    },
    "0" : {
      "QSLogical" : {
        "operators" : {
          "0" : {
            "sign" : -1624068677,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 690000000,
                "rowCount" : 15000000
              },
              "compileTime" : {
                "sizeInBytes" : 690000000,
                "rowCount" : 15000000
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_custkey#1L, c_name#2] "
          },
          "1" : {
            "sign" : 1277134402,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 3495000000,
                "rowCount" : 15000000
              },
              "compileTime" : {
                "sizeInBytes" : 3495000000,
                "rowCount" : 15000000
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: isnotnull(c_custkey#1L) "
          },
          "2" : {
            "sign" : -240052685,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 3495000000,
                "rowCount" : 15000000
              },
              "compileTime" : {
                "sizeInBytes" : 3495000000,
                "rowCount" : 15000000
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [c_custkey#1L, c_name#2, c_address#3, c_nationkey#4L, c_phone#5, c_acctbal#6, c_comment#7, c_mktsegment#8], `spark_catalog`.`tpch_100`.`customer`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "LogicalRelation",
          "toId" : 1,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Filter",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [c_custkey#1L, c_name#2]\n+- Filter isnotnull(c_custkey#1L)\n   +- Relation spark_catalog.tpch_100.customer[c_custkey#1L,c_name#2,c_address#3,c_nationkey#4L,c_phone#5,c_acctbal#6,c_comment#7,c_mktsegment#8] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "0" : {
            "sign" : 620156585,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 690000000,
            "rowCount" : 15000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [2]: [c_custkey#1L, c_name#2] Input [3]: [c_custkey#1L, c_name#2, c_mktsegment#8] "
          },
          "1" : {
            "sign" : 1217063408,
            "className" : "org.apache.spark.sql.execution.FilterExec",
            "sizeInBytes" : 690000000,
            "rowCount" : 15000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Input [3]: [c_custkey#1L, c_name#2, c_mktsegment#8] Condition : isnotnull(c_custkey#1L) "
          },
          "2" : {
            "sign" : 1489757473,
            "className" : "org.apache.spark.sql.execution.FileSourceScanExec",
            "sizeInBytes" : 690000000,
            "rowCount" : 15000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Scan parquet spark_catalog.tpch_100.customer Output [3]: [c_custkey#1L, c_name#2, c_mktsegment#8] Batched: true Location: CatalogFileIndex [hdfs://node1-opa:8020/user/spark_benchmark/tpch_100/dataset/customer] PushedFilters: [IsNotNull(c_custkey)] ReadSchema: struct<c_custkey:bigint,c_name:string> "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "Scan parquet spark_catalog.tpch_100.customer",
          "toId" : 1,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Filter",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [c_custkey#1L, c_name#2]\n+- Filter isnotnull(c_custkey#1L)\n   +- FileScan parquet spark_catalog.tpch_100.customer[c_custkey#1L,c_name#2,c_mktsegment#8] Batched: true, DataFilters: [isnotnull(c_custkey#1L)], Format: Parquet, Location: CatalogFileIndex(1 paths)[hdfs://node1-opa:8020/user/spark_benchmark/tpch_100/dataset/customer], PartitionFilters: [], PushedFilters: [IsNotNull(c_custkey)], ReadSchema: struct<c_custkey:bigint,c_name:string>\n"
      },
      "IM" : {
        "inputSizeInBytes" : 690000000,
        "inputRowCount" : 15000000
      },
      "InitialPartitionNum" : 0,
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 0,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 0 ],
      "Objectives" : {
        "DurationInMs" : 5671,
        "TotalTasksDurationInMs" : 66950,
        "IOBytes" : {
          "Total" : 420899857,
          "Details" : {
            "IR" : 187905808,
            "IW" : 0,
            "SR" : 0,
            "SW" : 232994049
          }
        }
      }
    },
    "2" : {
      "QSLogical" : {
        "operators" : {
          "0" : {
            "sign" : -1006054648,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 4883053344,
                "rowCount" : 152595417
              },
              "compileTime" : {
                "sizeInBytes" : 4883053344,
                "rowCount" : 152595417
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [l_orderkey#66L], [l_orderkey#66L, sum(l_quantity#70) AS sum(l_quantity#22)#65] "
          },
          "1" : {
            "sign" : 48965740,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 14400909648,
                "rowCount" : 600037902
              },
              "compileTime" : {
                "sizeInBytes" : 14400909648,
                "rowCount" : 600037902
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [l_orderkey#66L, l_quantity#70] "
          },
          "2" : {
            "sign" : 1249359732,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 111607049772,
                "rowCount" : 600037902
              },
              "compileTime" : {
                "sizeInBytes" : 111607049772,
                "rowCount" : 600037902
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [l_orderkey#66L, l_partkey#67L, l_suppkey#68L, l_linenumber#69, l_quantity#70, l_extendedprice#71, l_discount#72, l_tax#73, l_returnflag#74, l_linestatus#75, l_commitdate#76, l_receiptdate#77, l_shipinstruct#78, l_shipmode#79, l_comment#80, l_shipdate#81], `spark_catalog`.`tpch_100`.`lineitem`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "LogicalRelation",
          "toId" : 1,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Project",
          "toId" : 0,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Aggregate [l_orderkey#66L], [l_orderkey#66L, sum(l_quantity#70) AS sum(l_quantity#22)#65]\n+- Project [l_orderkey#66L, l_quantity#70]\n   +- Relation spark_catalog.tpch_100.lineitem[l_orderkey#66L,l_partkey#67L,l_suppkey#68L,l_linenumber#69,l_quantity#70,l_extendedprice#71,l_discount#72,l_tax#73,l_returnflag#74,l_linestatus#75,l_commitdate#76,l_receiptdate#77,l_shipinstruct#78,l_shipmode#79,l_comment#80,l_shipdate#81] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "0" : {
            "sign" : -31172118,
            "className" : "org.apache.spark.sql.execution.aggregate.HashAggregateExec",
            "sizeInBytes" : 4883053344,
            "rowCount" : 152595417,
            "isRuntime" : false,
            "predicate" : " (unknown) HashAggregate Input [2]: [l_orderkey#66L, l_quantity#70] Keys [1]: [l_orderkey#66L] Functions [1]: [partial_sum(l_quantity#70)] Aggregate Attributes [2]: [sum#94, isEmpty#95] Results [3]: [l_orderkey#66L, sum#96, isEmpty#97] "
          },
          "1" : {
            "sign" : -1068083158,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 14400909648,
            "rowCount" : 600037902,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [2]: [l_orderkey#66L, l_quantity#70] Input [3]: [l_orderkey#66L, l_quantity#70, l_shipdate#81] "
          },
          "2" : {
            "sign" : 166111026,
            "className" : "org.apache.spark.sql.execution.FileSourceScanExec",
            "sizeInBytes" : 14400909648,
            "rowCount" : 600037902,
            "isRuntime" : false,
            "predicate" : " (unknown) Scan parquet spark_catalog.tpch_100.lineitem Output [3]: [l_orderkey#66L, l_quantity#70, l_shipdate#81] Batched: true Location: CatalogFileIndex [hdfs://node1-opa:8020/user/spark_benchmark/tpch_100/dataset/lineitem] ReadSchema: struct<l_orderkey:bigint,l_quantity:decimal(12,2)> "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "Scan parquet spark_catalog.tpch_100.lineitem",
          "toId" : 1,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Project",
          "toId" : 0,
          "toName" : "HashAggregate",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "HashAggregate(keys=[l_orderkey#66L], functions=[partial_sum(l_quantity#70)], output=[l_orderkey#66L, sum#96, isEmpty#97])\n+- Project [l_orderkey#66L, l_quantity#70]\n   +- FileScan parquet spark_catalog.tpch_100.lineitem[l_orderkey#66L,l_quantity#70,l_shipdate#81] Batched: true, DataFilters: [], Format: Parquet, Location: CatalogFileIndex(1 paths)[hdfs://node1-opa:8020/user/spark_benchmark/tpch_100/dataset/lineitem], PartitionFilters: [], PushedFilters: [], ReadSchema: struct<l_orderkey:bigint,l_quantity:decimal(12,2)>\n"
      },
      "IM" : {
        "inputSizeInBytes" : 14400909648,
        "inputRowCount" : 600037902
      },
      "InitialPartitionNum" : 0,
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 2,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 4 ],
      "Objectives" : {
        "DurationInMs" : 42199,
        "TotalTasksDurationInMs" : 655476,
        "IOBytes" : {
          "Total" : 11178055169,
          "Details" : {
            "IR" : 4066342645,
            "IW" : 0,
            "SR" : 0,
            "SW" : 7111712524
          }
        }
      }
    },
    "7" : {
      "QSLogical" : {
        "operators" : {
          "0" : {
            "sign" : 1314629598,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 64872,
                "rowCount" : 901
              },
              "compileTime" : {
                "sizeInBytes" : 756840000000,
                "rowCount" : 13515000000
              }
            },
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [c_custkey#1L, c_name#2, o_orderkey#9L, o_totalprice#12, o_orderdate#17], ShuffleQueryStage 8 "
          }
        },
        "links" : [ ],
        "rawPlan" : "LogicalQueryStage Project [c_custkey#1L, c_name#2, o_orderkey#9L, o_totalprice#12, o_orderdate#17], ShuffleQueryStage 8\n"
      },
      "QSPhysical" : {
        "operators" : {
          "0" : {
            "sign" : -1461243116,
            "className" : "org.apache.spark.sql.execution.adaptive.ShuffleQueryStageExec",
            "sizeInBytes" : 64872,
            "rowCount" : 901,
            "isRuntime" : true,
            "predicate" : " (unknown) ShuffleQueryStage Output [5]: [c_custkey#1L, c_name#2, o_orderkey#9L, o_totalprice#12, o_orderdate#17] Arguments: 8 "
          }
        },
        "links" : [ ],
        "rawPlan" : "ShuffleQueryStage 8\n+- Exchange hashpartitioning(o_orderkey#9L, 200), ENSURE_REQUIREMENTS, [plan_id=790]\n   +- *(9) Project [c_custkey#1L, c_name#2, o_orderkey#9L, o_totalprice#12, o_orderdate#17]\n      +- *(9) BroadcastHashJoin [c_custkey#1L], [o_custkey#10L], Inner, BuildRight, false\n         :- AQEShuffleRead local\n         :  +- ShuffleQueryStage 0\n         :     +- Exchange hashpartitioning(c_custkey#1L, 200), ENSURE_REQUIREMENTS, [plan_id=200]\n         :        +- *(1) Project [c_custkey#1L, c_name#2]\n         :           +- *(1) Filter isnotnull(c_custkey#1L)\n         :              +- *(1) ColumnarToRow\n         :                 +- FileScan parquet spark_catalog.tpch_100.customer[c_custkey#1L,c_name#2,c_mktsegment#8] Batched: true, DataFilters: [isnotnull(c_custkey#1L)], Format: Parquet, Location: CatalogFileIndex(1 paths)[hdfs://node1-opa:8020/user/spark_benchmark/tpch_100/dataset/customer], PartitionFilters: [], PushedFilters: [IsNotNull(c_custkey)], ReadSchema: struct<c_custkey:bigint,c_name:string>\n         +- BroadcastQueryStage 7\n            +- BroadcastExchange HashedRelationBroadcastMode(List(input[1, bigint, false]),false), [plan_id=711]\n               +- AQEShuffleRead local\n                  +- ShuffleQueryStage 6\n                     +- Exchange hashpartitioning(o_custkey#10L, 200), ENSURE_REQUIREMENTS, [plan_id=504]\n                        +- *(8) SortMergeJoin [o_orderkey#9L], [l_orderkey#66L], LeftSemi\n                           :- *(6) Sort [o_orderkey#9L ASC NULLS FIRST], false, 0\n                           :  +- ShuffleQueryStage 1\n                           :     +- Exchange hashpartitioning(o_orderkey#9L, 200), ENSURE_REQUIREMENTS, [plan_id=219]\n                           :        +- *(2) Filter (isnotnull(o_custkey#10L) AND isnotnull(o_orderkey#9L))\n                           :           +- *(2) ColumnarToRow\n                           :              +- FileScan parquet spark_catalog.tpch_100.orders[o_orderkey#9L,o_custkey#10L,o_totalprice#12,o_orderdate#17] Batched: true, DataFilters: [isnotnull(o_custkey#10L), isnotnull(o_orderkey#9L)], Format: Parquet, Location: CatalogFileIndex(1 paths)[hdfs://node1-opa:8020/user/spark_benchmark/tpch_100/dataset/orders], PartitionFilters: [], PushedFilters: [IsNotNull(o_custkey), IsNotNull(o_orderkey)], ReadSchema: struct<o_orderkey:bigint,o_custkey:bigint,o_totalprice:decimal(12,2)>\n                           +- *(7) Sort [l_orderkey#66L ASC NULLS FIRST], false, 0\n                              +- *(7) Project [l_orderkey#66L]\n                                 +- *(7) Filter (isnotnull(sum(l_quantity#22)#65) AND (sum(l_quantity#22)#65 > 313.00))\n                                    +- *(7) HashAggregate(keys=[l_orderkey#66L], functions=[sum(l_quantity#70)], output=[l_orderkey#66L, sum(l_quantity#22)#65])\n                                       +- ShuffleQueryStage 2\n                                          +- Exchange hashpartitioning(l_orderkey#66L, 200), ENSURE_REQUIREMENTS, [plan_id=238]\n                                             +- *(3) HashAggregate(keys=[l_orderkey#66L], functions=[partial_sum(l_quantity#70)], output=[l_orderkey#66L, sum#96, isEmpty#97])\n                                                +- *(3) Project [l_orderkey#66L, l_quantity#70]\n                                                   +- *(3) ColumnarToRow\n                                                      +- FileScan parquet spark_catalog.tpch_100.lineitem[l_orderkey#66L,l_quantity#70,l_shipdate#81] Batched: true, DataFilters: [], Format: Parquet, Location: CatalogFileIndex(1 paths)[hdfs://node1-opa:8020/user/spark_benchmark/tpch_100/dataset/lineitem], PartitionFilters: [], PushedFilters: [], ReadSchema: struct<l_orderkey:bigint,l_quantity:decimal(12,2)>\n"
      },
      "IM" : {
        "inputSizeInBytes" : 64872,
        "inputRowCount" : 901
      },
      "InitialPartitionNum" : 200,
      "PD" : {
        "5" : [ 612, 405, 522, 234, 629, 234, 288, 558, 702, 405, 288, 324, 405, 539, 171, 558, 324, 363, 324, 558, 351, 654, 507, 561, 522, 612, 682, 117, 558, 324, 692, 351, 288, 561, 495, 117, 273, 485, 288, 522, 351, 485, 324, 378, 234, 538, 522, 207, 422, 468, 117, 117, 351, 705, 651, 324, 234, 746, 495, 630, 495, 459, 558, 273, 117, 234, 288, 312, 288, 578, 405, 117, 441, 718, 630, 441, 390, 459, 630, 363, 351, 171, 351, 429, 405, 351, 351, 0, 234, 288, 630, 558, 485, 351, 405, 576, 351, 171, 351, 342, 273, 117, 288, 234, 117, 351, 459, 390, 405, 593, 273, 459, 511, 441, 656, 629, 288, 507, 117, 324, 0, 746, 441, 597, 441, 288, 288, 468, 273, 324, 498, 342, 615, 234, 441, 351, 324, 234, 468, 378, 656, 405, 577, 117, 468, 234, 459, 483, 468, 351, 444, 351, 405, 495, 539, 288, 459, 273, 405, 117, 234, 702, 480, 390, 117, 405, 288, 351, 405, 538, 288, 234, 576, 495, 441, 579, 207, 351, 405, 390, 405, 756, 351, 288, 799, 480, 234, 351, 234, 288, 429, 405, 324, 368, 156, 666, 522, 288, 563, 459 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 7,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 17 ],
      "Objectives" : {
        "DurationInMs" : 28,
        "TotalTasksDurationInMs" : 23,
        "IOBytes" : {
          "Total" : 76455,
          "Details" : {
            "IR" : 0,
            "IW" : 0,
            "SR" : 76455,
            "SW" : 0
          }
        }
      }
    },
    "3" : {
      "QSLogical" : {
        "operators" : {
          "0" : {
            "sign" : -1585581217,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 14400909648,
                "rowCount" : 600037902
              },
              "compileTime" : {
                "sizeInBytes" : 14400909648,
                "rowCount" : 600037902
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [l_orderkey#18L, l_quantity#22] "
          },
          "1" : {
            "sign" : 1207973555,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 111607049772,
                "rowCount" : 600037902
              },
              "compileTime" : {
                "sizeInBytes" : 111607049772,
                "rowCount" : 600037902
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: isnotnull(l_orderkey#18L) "
          },
          "2" : {
            "sign" : -1721060374,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 111607049772,
                "rowCount" : 600037902
              },
              "compileTime" : {
                "sizeInBytes" : 111607049772,
                "rowCount" : 600037902
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [l_orderkey#18L, l_partkey#19L, l_suppkey#20L, l_linenumber#21, l_quantity#22, l_extendedprice#23, l_discount#24, l_tax#25, l_returnflag#26, l_linestatus#27, l_commitdate#28, l_receiptdate#29, l_shipinstruct#30, l_shipmode#31, l_comment#32, l_shipdate#33], `spark_catalog`.`tpch_100`.`lineitem`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "LogicalRelation",
          "toId" : 1,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Filter",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [l_orderkey#18L, l_quantity#22]\n+- Filter isnotnull(l_orderkey#18L)\n   +- Relation spark_catalog.tpch_100.lineitem[l_orderkey#18L,l_partkey#19L,l_suppkey#20L,l_linenumber#21,l_quantity#22,l_extendedprice#23,l_discount#24,l_tax#25,l_returnflag#26,l_linestatus#27,l_commitdate#28,l_receiptdate#29,l_shipinstruct#30,l_shipmode#31,l_comment#32,l_shipdate#33] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "0" : {
            "sign" : -1463036194,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 14400909648,
            "rowCount" : 600037902,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [2]: [l_orderkey#18L, l_quantity#22] Input [3]: [l_orderkey#18L, l_quantity#22, l_shipdate#33] "
          },
          "1" : {
            "sign" : -1372010702,
            "className" : "org.apache.spark.sql.execution.FilterExec",
            "sizeInBytes" : 14400909648,
            "rowCount" : 600037902,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Input [3]: [l_orderkey#18L, l_quantity#22, l_shipdate#33] Condition : isnotnull(l_orderkey#18L) "
          },
          "2" : {
            "sign" : 1378583593,
            "className" : "org.apache.spark.sql.execution.FileSourceScanExec",
            "sizeInBytes" : 14400909648,
            "rowCount" : 600037902,
            "isRuntime" : false,
            "predicate" : " (unknown) Scan parquet spark_catalog.tpch_100.lineitem Output [3]: [l_orderkey#18L, l_quantity#22, l_shipdate#33] Batched: true Location: CatalogFileIndex [hdfs://node1-opa:8020/user/spark_benchmark/tpch_100/dataset/lineitem] PushedFilters: [IsNotNull(l_orderkey)] ReadSchema: struct<l_orderkey:bigint,l_quantity:decimal(12,2)> "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "Scan parquet spark_catalog.tpch_100.lineitem",
          "toId" : 1,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Filter",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [l_orderkey#18L, l_quantity#22]\n+- Filter isnotnull(l_orderkey#18L)\n   +- FileScan parquet spark_catalog.tpch_100.lineitem[l_orderkey#18L,l_quantity#22,l_shipdate#33] Batched: true, DataFilters: [isnotnull(l_orderkey#18L)], Format: Parquet, Location: CatalogFileIndex(1 paths)[hdfs://node1-opa:8020/user/spark_benchmark/tpch_100/dataset/lineitem], PartitionFilters: [], PushedFilters: [IsNotNull(l_orderkey)], ReadSchema: struct<l_orderkey:bigint,l_quantity:decimal(12,2)>\n"
      },
      "IM" : {
        "inputSizeInBytes" : 14400909648,
        "inputRowCount" : 600037902
      },
      "InitialPartitionNum" : 0,
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 3,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 5 ],
      "Objectives" : {
        "DurationInMs" : 52980,
        "TotalTasksDurationInMs" : 192619,
        "IOBytes" : {
          "Total" : 10241704709,
          "Details" : {
            "IR" : 4067850010,
            "IW" : 0,
            "SR" : 0,
            "SW" : 6173854699
          }
        }
      }
    }
  },
  "SQLStartTimeInMs" : 1702226694059,
  "SQLEndTimeInMs" : 1702226835331,
  "Objectives" : {
    "DurationInMs" : 141272,
    "IOBytes" : {
      "Total" : 50906454292,
      "Details" : {
        "IR" : 10872208020,
        "IW" : 0,
        "SR" : 23572979398,
        "SW" : 16461266874
      }
    }
  }
}
